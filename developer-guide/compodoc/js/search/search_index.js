var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AdmRedrawMappingLinesEvent.html",[0,0.199,1,2.466]],["body/classes/AdmRedrawMappingLinesEvent.html",[0,0.334,1,3.09,2,0.852,3,0.095,4,0.095,5,0.082,6,0.136,7,0.08,8,2.501,9,2.071,10,3.302,11,3.877,12,3.877,13,3.877,14,0.123,15,0.48,16,4.512,17,0.215,18,0.015,19,0.175,20,3.482,21,0.461,22,3.09,23,2.725,24,2.044,25,3.09,26,1.833,27,2.321,28,2.608,29,0.415,30,1.761,31,3.205,32,0.891,33,1.986,34,1.744,35,1.663,36,2.749,37,2.321,38,3.597,39,2.908,40,2.321,41,3.385,42,2.321,43,2.516,44,1.744,45,2.365,46,3.2,47,4.187,48,1.519,49,3.2,50,2.501,51,2.501,52,2.749,53,2.501,54,0.197,55,3.844,56,2.725,57,2.725,58,2.172,59,1.043,60,2.725,61,2.725,62,2.725,63,3.557,64,2.501,65,2.725,66,2.725,67,2.725,68,0.524,69,2.725,70,2.725,71,2.725,72,2.725,73,2.725,74,2.725,75,1.456,76,2.725,77,2.044,78,2.725,79,3.302,80,1.694,81,2.501,82,2.501,83,2.501,84,2.321,85,2.501,86,2.725,87,2.725,88,1.933,89,2.725,90,2.725,91,2.725,92,2.725,93,2.725,94,2.725,95,2.725,96,2.725,97,2.725,98,2.044,99,2.501,100,2.501,101,2.321,102,2.725,103,1.123,104,2.725,105,1.258,106,2.501,107,2.725,108,2.501,109,2.725,110,2.501,111,2.725,112,2.501,113,3.385,114,1.833,115,0.195,116,2.359,117,0.842,118,2.501,119,2.501,120,2.501,121,2.501,122,3.877,123,0.899,124,2.087,125,2.725,126,2.725,127,2.725,128,2.725,129,2.725,130,2.725,131,2.725,132,2.725,133,0.517,134,1.005,135,1.25,136,2.725,137,1.663,138,2.172,139,2.501,140,2.321,141,2.725,142,2.501,143,2.501,144,2.725,145,2.172,146,2.501,147,2.501,148,2.725,149,2.725,150,0.59,151,2.725,152,2.725,153,2.321,154,2.725,155,2.725,156,2.725,157,2.725,158,2.725,159,2.725,160,1.519,161,2.725,162,2.172,163,2.321,164,2.725,165,2.172,166,2.725,167,2.725,168,2.725,169,2.725,170,2.172,171,2.725,172,2.501,173,2.725,174,2.725,175,2.501,176,0.452,177,3.877,178,2.725,179,0.412,180,1.456,181,2.725,182,2.887,183,4.915,184,2.725,185,2.725,186,2.501,187,2.725,188,2.501,189,2.725,190,2.725,191,2.725,192,2.501,193,2.725,194,0.641,195,2.608,196,2.725,197,2.725,198,4.915,199,2.725,200,5.193,201,2.725,202,2.725,203,2.725,204,2.725,205,2.725,206,2.725,207,3.877,208,2.725,209,2.725,210,2.725,211,2.725,212,3.877,213,2.725,214,2.725,215,2.725,216,2.725,217,2.725,218,2.725,219,5.397,220,4.512,221,2.321,222,3.877,223,2.044,224,2.725,225,4.14,226,2.725,227,4.512,228,2.501,229,3.877,230,2.725,231,2.725,232,2.725,233,3.877,234,2.725,235,2.725,236,2.725,237,2.725,238,2.725,239,3.877,240,3.877,241,2.725,242,4.187,243,3.877,244,3.877,245,2.725,246,2.725,247,1.663,248,1.933,249,2.044,250,2.321,251,2.501,252,1.716,253,2.725,254,2.608,255,3.557,256,4.426,257,2.725,258,2.725,259,1.744,260,2.725,261,2.321,262,2.044,263,1.519,264,0.763,265,0.763,266,1.833,267,2.725,268,2.725,269,2.725,270,2.725,271,2.725,272,4.512,273,4.512,274,2.725,275,2.725,276,2.725,277,2.725,278,3.302,279,2.725,280,2.725,281,2.501,282,2.725,283,2.172,284,2.725,285,2.725,286,2.725,287,2.725,288,3.557,289,0.436,290,0.522,291,2.725,292,2.501,293,0.735,294,4.512,295,2.321,296,2.725,297,2.725,298,2.725,299,1.744,300,2.725,301,0.006,302,0.009,303,0.006]],["title/injectables/ApiHttpXsrfTokenExtractor.html",[304,1.98,305,2.635]],["body/injectables/ApiHttpXsrfTokenExtractor.html",[0,0.333,3,0.148,4,0.148,5,0.127,6,0.196,7,0.115,9,2.254,14,0.19,15,0.551,18,0.015,19,0.233,21,0.451,26,2.839,32,1.024,54,0.207,58,3.364,68,0.428,115,0.302,123,0.703,133,1.109,134,1.303,176,0.418,194,0.596,290,0.638,301,0.009,302,0.012,303,0.009,304,3.589,305,4.414,306,3.595,307,5.608,308,4.22,309,6.227,310,5.608,311,6.227,312,5.367,313,5.146,314,6.299,315,5.753,316,4.755,317,6.494,318,3.316,319,0.791,320,5.753,321,0.649,322,6.494,323,5.391,324,0.528,325,3.422,326,5.391,327,0.834,328,4.685,329,5.753,330,5.753,331,6.227,332,5.182,333,3.364,334,3.888,335,1.917,336,0.8,337,1.809,338,6.227,339,4.755,340,3.872,341,3.166,342,4.685,343,5.182,344,5.182,345,3.595,346,4.685,347,4.685,348,3.872,349,3.872,350,4.685,351,4.685,352,2.459,353,4.685,354,4.685,355,4.685,356,4.22,357,2.7,358,3.595,359,4.685,360,5.753,361,4.685,362,4.22,363,4.685,364,4.685,365,3.872,366,4.685,367,4.685]],["title/interceptors/ApiXsrfInterceptor.html",[340,2.838,345,2.635]],["body/interceptors/ApiXsrfInterceptor.html",[0,0.331,3,0.146,4,0.146,5,0.126,6,0.196,7,0.115,9,2.231,14,0.188,15,0.547,17,0.231,18,0.015,19,0.232,21,0.449,26,2.81,32,0.825,54,0.206,58,3.33,68,0.345,115,0.399,123,0.696,133,1.105,134,1.298,176,0.399,194,0.594,290,0.636,301,0.009,302,0.011,303,0.009,304,3.573,305,3.559,307,5.583,308,4.177,309,6.199,310,5.583,311,6.199,312,5.348,313,5.123,314,6.239,315,4.638,316,3.833,317,6.199,318,2.673,319,0.789,320,4.638,321,0.645,322,4.638,324,0.523,325,3.407,327,0.825,328,4.638,329,5.718,330,6.471,331,6.768,332,5.15,333,3.33,334,4.189,335,1.898,336,0.792,337,1.798,338,6.199,339,5.348,340,4.726,341,3.864,342,5.718,343,5.583,344,5.583,345,4.387,346,5.718,347,6.199,348,3.833,349,3.833,350,4.638,351,4.638,352,2.435,353,4.638,354,4.638,355,4.638,356,4.177,357,2.673,358,3.559,359,4.638,360,5.718,361,4.638,362,4.177,363,4.638,364,4.638,365,3.833,366,4.638,367,4.638,368,5.337,369,6.58,370,5.337,371,0.636,372,0.636,373,5.337]],["title/components/AppComponent.html",[374,0.221,375,0.866]],["body/components/AppComponent.html",[0,0.335,3,0.149,4,0.149,5,0.128,7,0.116,18,0.014,21,0.328,29,0.96,32,1.028,54,0.17,115,0.402,264,1.19,265,1.19,289,0.704,293,0.806,301,0.009,302,0.012,303,0.009,327,0.84,374,0.402,375,1.641,376,1.628,377,1.379,378,1.379,379,4.721,380,1.282,381,1.781,382,1.581,383,1.826,384,5.78,385,1.76,386,1.235,387,1.689,388,1.628,389,1.19,390,1.902,391,1.379,392,1.379,393,1.235,394,1.379,395,1.19,396,1.379,397,1.19,398,1.379,399,1.379,400,1.19,401,1.952,402,1.235,403,1.379,404,1.19,405,1.206,406,1.235,407,1.379,408,1.19,409,1.379,410,1.19,411,1.379,412,1.147,413,1.826,414,1.147,415,1.33,416,1.635,417,1.379,418,1.235,419,1.379,420,1.19,421,1.19,422,1.147,423,1.379,424,1.147,425,1.235,426,1.379,427,1.19,428,1.19,429,1.104,430,1.379,431,1.19,432,1.379,433,1.19,434,1.379,435,1.19,436,1.19,437,1.689,438,1.19,439,1.147,440,1.379,441,1.19,442,1.379,443,1.19,444,1.569,445,1.379,446,1.104,447,1.689,448,1.147,449,1.19,450,1.689,451,1.19,452,1.19,453,1.19,454,1.19,455,1.379,456,1.19,457,1.282,458,1.33,459,1.147,460,1.33,461,1.379]],["title/components/ClassNameComponent.html",[374,0.221,395,0.866]],["body/components/ClassNameComponent.html",[0,0.4,3,0.115,4,0.115,5,0.099,6,0.22,7,0.13,14,0.148,15,0.469,17,0.339,18,0.015,19,0.281,21,0.441,29,0.916,30,1.495,31,2.931,32,0.872,47,2.802,48,1.834,54,0.132,59,0.548,68,0.365,105,1.617,115,0.449,116,2.264,117,0.833,123,0.831,133,0.945,134,1.11,150,0.621,176,0.356,179,0.591,195,3.932,228,4.052,247,2.694,264,0.921,265,0.921,289,0.699,290,0.591,293,0.624,301,0.007,302,0.01,303,0.007,313,4.052,319,0.732,321,0.553,324,0.716,325,2.694,327,0.65,336,0.624,337,1.542,371,0.759,372,0.759,374,0.356,375,0.921,376,1.381,377,1.067,378,1.067,380,0.992,381,1.758,382,1.191,383,1.067,385,1.381,386,0.956,387,1.432,388,1.381,389,0.921,390,1.728,391,1.067,392,1.067,393,0.956,394,1.067,395,1.491,396,1.067,397,0.921,398,1.067,399,1.067,400,0.921,401,1.803,402,0.956,403,1.067,404,0.921,405,1.023,406,0.956,407,1.067,408,0.921,409,1.067,410,0.921,411,1.067,412,0.887,413,1.617,414,0.887,415,1.029,416,1.547,417,1.067,418,0.956,419,1.067,420,0.921,421,0.921,422,0.887,423,1.067,424,0.887,425,0.956,426,1.067,427,0.921,428,0.921,429,0.854,430,1.067,431,0.921,432,1.067,433,0.921,434,1.067,435,0.921,436,0.921,437,1.432,438,0.921,439,1.344,440,1.067,441,0.921,442,1.067,443,0.921,444,1.331,445,1.067,446,0.854,447,1.432,448,0.887,449,0.921,450,1.432,451,0.921,452,0.921,453,0.921,454,0.921,455,1.067,456,0.921,457,0.992,458,1.029,459,0.887,460,1.029,461,1.067,462,6.97,463,3.653,464,2.662,465,1.331,466,5.642,467,3.973,468,6.368,469,6.368,470,6.368,471,5.642,472,2.846,473,2.971,474,2.846,475,4.902,476,5.915,477,5.642,478,5.642,479,4.203,480,1.723,481,4.203,482,2.626,483,4.052,484,5.534,485,4.203,486,4.203,487,4.902,488,4.203,489,4.203,490,4.203,491,4.203,492,1.757,493,5.642,494,4.203,495,4.203,496,4.203,497,4.203,498,1.917,499,2.105,500,1.618,501,1.384,502,2.802,503,4.203,504,4.203,505,2.622,506,4.203,507,3.019,508,4.888,509,3.132,510,2.087,511,2.971,512,5.642]],["title/components/CollapsableHeaderComponent.html",[374,0.221,397,0.866]],["body/components/CollapsableHeaderComponent.html",[0,0.319,3,0.137,4,0.137,5,0.118,6,0.206,7,0.127,14,0.177,17,0.274,18,0.015,19,0.257,21,0.302,29,0.947,32,0.978,54,0.157,59,0.826,68,0.449,115,0.407,176,0.28,179,0.527,264,1.098,265,1.098,289,0.694,290,0.417,293,0.744,301,0.009,302,0.011,303,0.009,319,0.517,321,0.62,324,0.62,327,0.775,344,4.953,371,0.598,372,0.598,374,0.388,375,1.098,376,1.549,377,1.273,378,1.273,380,1.183,381,1.774,382,1.336,383,1.273,385,1.549,386,1.14,387,1.607,388,1.549,389,1.098,390,1.849,391,1.273,392,1.273,393,1.14,394,1.273,395,1.098,396,1.273,397,1.596,398,1.907,399,1.273,400,1.098,401,1.907,402,1.14,403,1.273,404,1.098,405,1.147,406,1.14,407,1.273,408,1.098,409,1.273,410,1.098,411,1.273,412,1.058,413,1.761,414,1.058,415,1.227,416,1.576,417,1.273,418,1.14,419,1.273,420,1.098,421,1.098,422,1.058,423,1.273,424,1.058,425,1.14,426,1.273,427,1.098,428,1.098,429,1.019,430,1.273,431,1.098,432,1.273,433,1.098,434,1.273,435,1.098,436,1.098,437,1.607,438,1.098,439,1.058,440,1.273,441,1.098,442,1.273,443,1.098,444,1.493,445,1.273,446,1.019,447,1.607,448,1.058,449,1.098,450,1.607,451,1.098,452,1.098,453,1.098,454,1.098,455,1.273,456,1.098,457,1.183,458,1.227,459,1.058,460,1.227,461,1.273,465,1.493,480,1.531,513,6.526,514,4.357,515,6.328,516,5.7,517,4.953,518,2.34,519,6.026,520,6.526,521,5.014,522,5.014,523,5.014,524,4.953,525,3.473,526,5.014,527,1.636,528,6.934,529,4.357,530,3.716,531,4.357,532,4.357,533,3.128]],["title/components/ConstantFieldEditComponent.html",[374,0.221,400,0.866]],["body/components/ConstantFieldEditComponent.html",[0,0.268,3,0.106,4,0.106,5,0.091,6,0.216,7,0.129,14,0.136,15,0.443,17,0.334,18,0.015,19,0.276,21,0.429,29,0.9,30,1.371,31,2.856,32,0.822,45,1.841,48,1.682,54,0.121,59,0.929,68,0.425,98,3.123,103,1.022,115,0.385,117,0.806,123,0.503,133,0.903,135,1.147,150,0.507,170,2.405,176,0.427,179,0.546,195,3.843,264,1.654,265,0.844,289,0.735,290,0.628,293,0.572,301,0.007,302,0.009,303,0.007,319,0.549,321,0.521,324,0.698,327,0.596,336,0.572,337,1.454,371,0.634,372,0.634,374,0.341,375,0.844,376,1.302,377,0.979,378,0.979,380,0.909,381,1.749,382,1.123,383,0.979,385,1.302,386,0.876,387,1.351,388,1.302,389,0.844,390,1.667,391,0.979,392,0.979,393,0.876,394,0.979,395,0.844,396,0.979,397,0.844,398,0.979,399,0.979,400,1.438,401,1.749,402,0.876,403,0.979,404,0.844,405,0.964,406,0.876,407,0.979,408,0.844,409,0.979,410,0.844,411,0.979,412,0.814,413,1.546,414,0.814,415,0.943,416,1.493,417,0.979,418,0.876,419,0.979,420,0.844,421,0.844,422,0.814,423,0.979,424,0.814,425,0.876,426,0.979,427,0.844,428,0.844,429,0.784,430,0.979,431,0.844,432,0.979,433,0.844,434,0.979,435,0.844,436,0.844,437,1.351,438,0.844,439,0.814,440,0.979,441,0.844,442,0.979,443,0.844,444,1.255,445,0.979,446,0.784,447,1.351,448,1.613,449,0.844,450,1.351,451,0.844,452,0.844,453,0.844,454,0.844,455,0.979,456,0.844,457,0.909,458,0.943,459,0.814,460,0.943,461,0.979,464,2.546,465,1.255,467,3.8,472,2.745,473,2.801,474,2.745,476,5.706,480,1.177,482,2.548,483,3.82,492,1.612,498,1.758,499,1.931,500,1.484,501,1.269,502,4.06,505,2.405,507,2.769,511,3.457,534,6.853,535,2.405,536,2.801,537,3.546,538,5.575,539,5.292,540,4.767,541,5.139,542,4.163,543,3.35,544,3.855,545,5.706,546,3.017,547,3.855,548,3.855,549,4.163,550,4.096,551,5.139,552,4.716,553,4.622,554,1.967,555,4.163,556,3.35,557,3.017,558,3.017,559,2.769,560,4.622,561,3.017,562,3.017,563,3.017,564,2.769,565,4.767,566,3.017,567,5.292,568,3.35,569,4.622,570,2.664,571,2.769,572,3.35,573,4.622,574,2.769,575,6.09,576,2.769,577,3.017,578,3.017,579,3.017,580,3.017,581,3.855,582,3.35,583,4.622,584,4.622,585,3.954,586,3.136,587,4.163,588,4.163,589,3.546,590,2.952,591,2.952,592,2.952,593,3.645,594,3.645,595,4.163,596,3.546,597,4.163,598,4.163,599,4.163,600,4.163,601,5.821]],["title/components/DataMapperAppExampleHostComponent.html",[374,0.221,404,0.866]],["body/components/DataMapperAppExampleHostComponent.html",[0,0.333,3,0.125,4,0.125,5,0.107,6,0.192,7,0.128,14,0.16,15,0.494,17,0.257,18,0.015,19,0.233,21,0.471,26,2.393,27,3.03,29,0.939,32,0.919,33,2.654,34,2.277,35,2.17,36,3.674,37,3.03,38,3.707,39,3.887,40,3.03,41,4.387,42,3.03,54,0.142,59,0.775,63,3.264,75,1.9,79,3.03,80,1.555,81,3.264,82,4.267,83,3.264,84,3.03,85,3.264,88,3.298,98,3.489,99,3.264,100,3.264,101,3.03,105,1.154,106,3.264,108,3.264,110,3.264,112,3.264,115,0.393,123,0.775,140,3.961,150,0.378,179,0.378,194,0.378,262,2.669,264,0.996,265,0.996,289,0.68,293,0.674,301,0.008,302,0.01,303,0.008,321,0.582,324,0.445,327,0.703,336,0.674,337,1.624,371,0.542,372,0.542,374,0.37,375,0.996,376,1.454,377,1.154,378,1.154,380,1.072,381,1.765,382,1.254,383,1.154,385,1.62,386,1.033,387,1.509,388,1.454,389,0.996,390,1.782,391,1.154,392,1.154,393,1.033,394,1.154,395,0.996,396,1.154,397,0.996,398,1.154,399,1.154,400,0.996,401,1.85,402,1.596,403,1.154,404,1.538,405,1.415,406,1.731,407,1.154,408,0.996,409,1.154,410,0.996,411,1.154,412,0.959,413,1.681,414,0.959,415,1.112,416,1.505,417,1.154,418,1.033,419,1.154,420,0.996,421,0.996,422,0.959,423,1.154,424,0.959,425,1.033,426,1.154,427,0.996,428,0.996,429,0.924,430,1.154,431,0.996,432,1.154,433,0.996,434,1.154,435,0.996,436,0.996,437,1.509,438,0.996,439,0.959,440,1.154,441,0.996,442,1.154,443,0.996,444,1.402,445,1.154,446,0.924,447,1.509,448,0.959,449,0.996,450,1.509,451,0.996,452,0.996,453,0.996,454,0.996,455,1.154,456,0.996,457,1.072,458,1.112,459,0.959,460,1.112,461,1.154,473,3.696,492,1.9,498,2.073,602,5.494,603,3.95,604,3.485,605,4.267,606,5.942,607,6.62,608,3.696,609,4.545,610,5.942,611,4.545,612,5.942,613,2.523,614,3.557,615,3.264,616,4.545,617,1.822,618,3.95,619,2.669,620,4.545,621,5.942,622,2.393,623,4.545,624,3.95,625,2.836,626,4.545,627,4.545,628,4.545,629,4.545,630,4.545,631,4.545,632,4.545,633,4.545,634,4.545,635,4.545,636,4.545,637,4.545,638,4.545,639,4.545,640,3.264,641,4.545,642,4.545,643,4.545,644,4.545,645,4.545,646,4.545,647,4.545,648,4.545,649,3.557,650,3.557,651,3.95,652,4.545,653,4.545,654,3.95,655,4.545,656,4.545,657,4.545]],["title/components/DataMapperErrorComponent.html",[374,0.221,408,0.866]],["body/components/DataMapperErrorComponent.html",[0,0.247,3,0.094,4,0.094,5,0.081,6,0.219,7,0.131,14,0.121,15,0.409,17,0.319,18,0.015,19,0.28,21,0.398,29,0.877,32,0.759,33,2.296,34,1.723,35,1.643,43,3.382,44,1.723,54,0.108,59,0.815,103,0.98,115,0.395,117,0.532,123,0.862,133,1.091,134,1.089,150,0.621,153,3.818,162,4.509,175,4.486,176,0.412,179,0.612,182,3.62,194,0.409,252,1.342,264,0.754,265,0.754,289,0.636,290,0.55,293,1.184,301,0.006,302,0.009,303,0.006,318,3.967,319,0.681,321,0.481,324,0.748,325,2.345,327,0.532,336,0.51,371,0.744,372,0.744,374,0.32,375,0.754,376,1.202,377,0.874,378,0.874,380,0.812,381,1.736,382,1.036,383,0.874,385,1.202,386,0.782,387,1.247,388,1.202,389,0.754,390,1.586,391,0.874,392,0.874,393,0.782,394,0.874,395,0.754,396,0.874,397,0.754,398,0.874,399,0.874,400,0.754,401,1.677,402,0.782,403,0.874,404,0.754,405,1.47,406,0.782,407,0.874,408,1.368,409,0.874,410,0.754,411,0.874,412,0.726,413,1.454,414,0.726,415,0.842,416,1.734,417,0.874,418,0.782,419,0.874,420,0.754,421,0.754,422,0.726,423,0.874,424,0.726,425,0.782,426,0.874,427,0.754,428,0.754,429,0.699,430,0.874,431,0.754,432,0.874,433,0.754,434,0.874,435,0.754,436,0.754,437,1.247,438,0.754,439,0.726,440,0.874,441,0.754,442,0.874,443,0.754,444,1.158,445,0.874,446,1.27,447,1.247,448,0.726,449,0.754,450,1.247,451,0.754,452,0.754,453,0.754,454,0.754,455,0.874,456,0.754,457,0.812,458,0.842,459,0.726,460,0.842,461,0.874,465,1.158,480,2.159,498,1.569,501,1.133,508,4.486,518,1.816,525,3.44,527,1.473,554,1.816,602,6.247,658,2.99,659,4.911,660,4.977,661,5.727,662,5.727,663,6.246,664,4.888,665,6.246,666,6.246,667,6.246,668,4.888,669,4.911,670,4.911,671,4.911,672,4.911,673,6.246,674,5.727,675,3.573,676,3.44,677,3.44,678,3.44,679,3.44,680,4.911,681,3.44,682,3.44,683,3.44,684,6.246,685,6.246,686,2.611,687,5.427,688,4.164,689,3.44,690,4.268,691,5.375,692,3.44,693,3.44,694,4.911,695,3.44,696,1.91,697,4.911,698,3.44,699,4.911,700,3.44,701,6.246,702,2.726,703,6.246,704,4.911,705,4.911,706,3.844,707,4.911,708,4.911,709,3.064,710,5.427,711,4.911,712,3.44,713,2.884,714,4.911,715,4.911,716,3.527,717,3.44,718,3.844,719,3.44,720,3.44,721,3.44,722,3.44,723,1.812,724,3.44,725,3.44,726,0.823,727,3.44,728,5.727,729,5.727,730,4.033,731,2.884,732,5.727,733,2.884,734,3.844,735,3.844,736,2.693,737,2.693,738,3.44,739,3.44,740,3.44,741,3.44,742,5.727,743,1.91,744,2.99,745,2.99,746,2.99,747,3.44,748,3.44,749,3.44,750,3.44,751,3.44,752,3.44,753,3.44,754,4.911,755,4.911,756,4.911]],["title/classes/DataMapperInitializationModel.html",[0,0.199,55,2.635]],["body/classes/DataMapperInitializationModel.html",[0,0.318,1,1.918,2,0.753,3,0.084,4,0.084,5,0.073,6,0.22,7,0.129,8,2.209,9,1.286,10,2.05,11,2.407,12,2.407,13,2.407,14,0.108,15,0.447,16,2.407,17,0.334,18,0.015,19,0.283,21,0.45,22,2.824,23,2.407,24,1.806,25,2.824,26,1.619,27,2.05,28,2.384,29,0.366,30,1.61,31,3.157,32,0.831,33,1.815,34,1.54,35,1.468,36,2.513,37,2.05,38,3.352,39,2.658,40,2.05,41,3.155,42,2.05,43,2.345,44,1.54,45,2.162,46,2.982,47,3.951,48,1.342,49,2.982,50,2.209,51,2.209,52,2.513,53,2.209,54,0.185,55,3.951,56,4.205,57,3.543,58,3.352,59,1.052,60,4.205,61,3.543,62,4.205,63,4.256,64,2.209,65,2.407,66,4.205,67,4.205,68,0.53,69,4.205,70,4.205,71,4.205,72,4.205,73,4.205,74,4.205,75,1.286,76,2.407,77,1.806,78,4.205,79,3.951,80,1.549,81,2.209,82,2.209,83,2.209,84,2.05,85,2.209,86,4.205,87,2.407,88,1.707,89,2.407,90,2.407,91,4.205,92,4.205,93,4.205,94,4.205,95,4.205,96,4.205,97,4.205,98,1.806,99,2.209,100,2.209,101,2.05,102,4.205,103,1.107,104,4.205,105,1.505,106,2.209,107,2.407,108,2.209,109,2.407,110,2.209,111,2.407,112,2.209,113,3.155,114,1.619,115,0.172,116,2.246,117,0.824,118,2.209,119,2.209,120,2.209,121,2.209,122,3.543,123,0.862,124,2.01,125,2.407,126,2.407,127,2.407,128,2.407,129,2.407,130,2.407,131,2.407,132,2.407,133,0.456,134,0.937,135,1.19,136,2.407,137,1.468,138,1.918,139,2.209,140,2.05,141,2.407,142,2.209,143,2.209,144,2.407,145,1.918,146,2.209,147,2.209,148,2.407,149,2.407,150,0.568,151,2.407,152,2.407,153,2.05,154,2.407,155,2.407,156,2.407,157,2.407,158,2.407,159,2.407,160,1.342,161,2.407,162,1.918,163,2.05,164,2.407,165,1.918,166,2.407,167,2.407,168,2.407,169,2.407,170,1.918,171,2.407,172,2.209,173,2.407,174,2.407,175,2.209,176,0.447,177,3.543,178,2.407,179,0.377,180,1.286,181,2.407,182,2.691,183,4.638,184,2.407,185,2.407,186,2.209,187,2.407,188,2.209,189,2.407,190,2.407,191,2.407,192,2.209,193,2.407,194,0.627,195,2.384,196,2.407,197,2.407,198,4.638,199,2.407,200,4.944,201,2.407,202,2.407,203,2.407,204,2.407,205,2.407,206,2.407,207,3.543,208,2.407,209,2.407,210,2.407,211,2.407,212,3.543,213,2.407,214,2.407,215,2.407,216,2.407,217,2.407,218,2.407,219,5.171,220,4.205,221,2.05,222,3.543,223,1.806,224,2.407,225,3.859,226,2.407,227,4.205,228,2.209,229,3.543,230,2.407,231,2.407,232,2.407,233,3.543,234,2.407,235,2.407,236,2.407,237,2.407,238,2.407,239,3.543,240,3.543,241,2.407,242,3.951,243,3.543,244,3.543,245,2.407,246,2.407,247,1.468,248,1.707,249,1.806,250,2.05,251,2.209,252,1.619,253,2.407,254,2.384,255,3.251,256,4.262,257,2.407,258,2.407,259,1.54,260,2.407,261,2.05,262,1.806,263,1.342,264,0.674,265,0.674,266,1.619,267,2.407,268,2.407,269,2.407,270,2.407,271,2.407,272,4.205,273,4.205,274,2.407,275,2.407,276,2.407,277,2.407,278,3.018,279,2.407,280,2.407,281,2.209,282,2.407,283,1.918,284,2.407,285,2.407,286,2.407,287,2.407,288,3.251,289,0.399,290,0.652,291,2.407,292,2.209,293,0.672,294,4.205,295,2.05,296,2.407,297,2.407,298,2.407,299,1.54,300,2.407,301,0.005,302,0.008,303,0.005,319,0.79,757,4.527,758,1.284,759,3.075,760,3.075,761,3.075,762,3.075,763,3.075,764,3.075,765,3.075,766,3.075,767,3.075,768,3.075,769,3.075,770,3.075,771,3.075,772,3.075,773,3.075,774,3.075,775,3.075,776,3.075,777,3.075,778,3.075,779,3.075,780,3.075,781,3.075]],["title/modules/DataMapperModule.html",[782,2.635,783,2.635]],["body/modules/DataMapperModule.html",[0,0.167,3,0.091,4,0.091,5,0.113,6,0.131,7,0.077,18,0.015,19,0.117,21,0.499,22,2.982,24,2.807,25,2.067,26,1.745,27,2.209,28,1.745,30,1.7,31,1.329,33,2.923,34,2.394,35,2.283,36,4.047,37,3.187,38,4.061,39,4.281,40,3.187,41,4.281,42,3.187,45,1.582,46,1.839,48,1.446,49,3.972,50,2.38,51,2.38,52,3.972,53,2.38,54,0.249,59,0.432,103,0.492,113,1.946,123,0.432,124,1.406,176,0.185,194,0.564,263,1.446,289,0.615,293,0.709,299,1.66,301,0.006,302,0.008,303,0.006,305,3.739,321,0.325,324,0.325,327,0.512,332,3.741,333,2.067,336,0.492,345,3.739,352,1.511,386,0.753,395,1.568,397,1.486,400,1.568,402,1.738,404,1.709,405,1.113,406,0.753,408,1.486,410,1.486,412,1.431,414,1.51,418,1.542,420,1.568,421,1.486,424,1.51,427,1.486,428,1.486,429,0.674,431,1.486,433,1.486,435,1.486,436,1.486,438,1.486,439,0.699,441,1.568,443,1.486,444,0.782,446,1.54,448,1.599,449,1.568,451,1.486,452,1.568,453,1.568,454,1.486,456,1.486,459,1.431,499,1.66,501,1.574,510,1.768,605,4.675,614,3.741,622,1.745,713,1.946,782,3.187,783,5.616,784,2.209,785,2.067,786,4.389,787,4.409,788,4.389,789,2.879,790,2.879,791,2.879,792,2.879,793,4.521,794,3.741,795,3.433,796,2.593,797,4.78,798,4.78,799,5.608,800,5.608,801,3.313,802,2.593,803,2.879,804,2.879,805,2.879,806,2.879,807,2.593,808,4.389,809,2.593,810,5.021,811,2.593,812,3.741,813,2.593,814,2.593,815,2.593,816,2.209,817,2.593,818,2.593,819,2.209,820,2.593,821,2.593,822,2.593,823,2.593,824,3.741,825,2.593,826,2.38,827,2.593,828,2.593,829,2.593,830,2.593,831,2.593,832,2.209,833,2.38,834,2.593,835,2.593,836,2.593,837,2.593,838,5.335,839,6.075,840,4.78,841,3.313,842,4.154,843,3.313,844,4.78,845,4.154,846,4.78,847,2.879,848,4.78,849,3.313,850,3.313,851,3.313,852,3.313,853,6.139,854,3.313,855,3.313,856,4.78,857,3.313,858,3.313,859,4.675,860,3.313,861,2.879,862,3.313,863,3.313,864,3.313,865,2.879,866,4.78,867,2.879,868,4.873,869,3.313,870,3.313,871,3.313,872,4.78,873,7.29,874,4.78,875,3.313,876,3.313,877,3.313,878,3.313,879,4.154,880,2.879,881,3.313,882,2.879,883,3.313,884,3.313,885,3.313,886,3.313,887,3.313,888,4.78,889,4.78,890,2.593,891,0.975,892,1.225,893,2.879,894,3.313,895,3.313,896,3.313,897,2.209,898,3.313,899,3.741,900,2.879,901,3.741,902,2.879,903,3.741,904,2.879,905,3.741,906,2.879,907,3.741,908,2.879,909,3.741,910,2.879,911,3.313,912,2.593,913,4.154,914,4.78,915,3.741]],["title/classes/DataMapperUtil.html",[0,0.199,916,1.725]],["body/classes/DataMapperUtil.html",[0,0.214,2,1.038,3,0.116,4,0.156,5,0.185,6,0.215,7,0.126,9,1.772,14,0.225,15,0.472,17,0.337,18,0.015,19,0.274,21,0.256,54,0.133,59,0.74,68,0.531,75,2.372,80,2.662,115,0.442,117,0.615,124,2.428,135,1.287,150,0.472,176,0.431,194,0.532,252,1.946,290,0.472,301,0.007,302,0.01,303,0.007,319,0.585,321,0.556,324,0.745,357,3.566,358,3.783,371,0.906,372,0.906,405,1.423,480,1.733,510,2.099,586,2.025,716,4.075,726,1.072,758,1.937,916,2.476,917,6.819,918,3.045,919,6.396,920,6.396,921,5.674,922,5.462,923,5.674,924,4.931,925,5.674,926,5.674,927,5.674,928,5.674,929,5.674,930,5.674,931,4.24,932,5.674,933,4.24,934,4.24,935,5.674,936,4.24,937,4.24,938,3.684,939,3.318,940,3.684,941,5.674,942,4.931,943,4.24,944,3.045,945,4.24,946,2.353,947,5.674,948,6.09,949,4.24,950,3.783,951,4.931,952,4.931,953,2.981,954,5.558,955,5.114,956,4.24,957,4.24,958,5.558,959,5.674,960,5.346,961,4.24,962,4.441,963,4.24,964,5.674,965,4.24,966,4.24,967,2.827,968,4.24,969,4.24,970,4.24,971,3.684,972,2.827,973,3.684,974,5.674,975,4.24,976,5.674,977,5.674,978,4.931,979,4.931,980,4.441,981,7.12,982,5.674,983,5.573,984,7.12,985,4.24,986,4.931,987,2.842,988,4.931,989,5.674,990,4.931,991,5.674,992,5.674,993,4.441,994,4.24,995,4.24,996,4.24,997,4.24,998,4.594,999,4.594,1000,5.674,1001,5.674,1002,4.24,1003,5.674,1004,4.24,1005,4.24,1006,4.24,1007,4.24,1008,3.318,1009,4.24,1010,1.7,1011,4.24,1012,4.24,1013,4.24,1014,1,1015,6.396,1016,4.24,1017,5.674,1018,4.24,1019,3.318]],["title/components/DocumentFieldDetailComponent.html",[374,0.221,412,0.834]],["body/components/DocumentFieldDetailComponent.html",[0,0.205,3,0.112,4,0.073,5,0.116,6,0.218,7,0.129,14,0.094,15,0.339,17,0.326,18,0.015,19,0.279,21,0.423,29,0.82,32,1.008,45,1.275,48,1.165,54,0.084,59,0.945,68,0.474,103,0.396,105,0.678,115,0.414,117,0.746,123,0.644,133,0.732,134,0.861,150,0.559,176,0.441,179,0.627,180,1.116,194,0.627,252,0.729,256,1.665,264,1.21,265,1.21,283,1.665,289,0.73,290,0.222,293,0.396,301,0.005,302,0.009,303,0.009,319,0.275,321,0.484,324,0.749,327,0.413,336,0.396,356,2.089,371,0.837,372,0.837,374,0.276,375,0.585,376,0.996,377,0.678,378,0.678,380,0.63,381,1.703,382,0.859,383,0.678,384,2.319,385,0.996,386,0.607,387,1.034,388,0.996,389,0.585,390,1.402,391,0.678,392,0.678,393,0.607,394,0.678,395,0.585,396,0.678,397,0.585,398,0.678,399,0.678,400,1.428,401,1.51,402,0.607,403,0.678,404,0.585,405,0.738,406,0.607,407,0.678,408,0.585,409,0.678,410,0.585,411,0.678,412,1.453,413,1.253,414,0.563,415,0.653,416,1.255,417,0.678,418,0.607,419,0.678,420,1.428,421,1.21,422,0.859,423,0.678,424,0.563,425,0.607,426,0.678,427,0.585,428,0.585,429,0.543,430,0.678,431,0.585,432,0.678,433,0.585,434,0.678,435,0.585,436,0.585,437,1.034,438,0.585,439,0.859,440,0.678,441,0.585,442,0.678,443,0.585,444,0.96,445,0.678,446,0.543,447,1.034,448,1.375,449,0.585,450,1.034,451,0.585,452,1.428,453,0.585,454,0.585,455,0.678,456,0.585,457,0.63,458,0.653,459,0.563,460,0.653,461,0.678,465,0.96,480,2.262,482,1.825,492,1.702,498,1.218,500,1.027,501,0.879,511,1.405,516,4.322,517,3.187,518,1.506,524,3.187,525,3.448,527,1.402,529,2.319,530,4.485,531,2.319,532,2.319,533,1.665,536,2.599,550,1.665,570,2.472,574,1.917,576,2.924,577,3.187,580,4.322,617,1.07,622,1.405,624,3.538,649,3.187,688,1.78,726,0.827,743,1.482,859,3.545,861,2.319,938,3.538,1014,0.63,1020,6.907,1021,1.917,1022,3.187,1023,3.187,1024,4.936,1025,4.936,1026,4.289,1027,3.538,1028,3.538,1029,4.071,1030,3.538,1031,5.522,1032,5.522,1033,4.071,1034,5.522,1035,5.522,1036,5.522,1037,5.522,1038,5.522,1039,5.522,1040,3.538,1041,4.071,1042,3.538,1043,4.289,1044,2.898,1045,3.538,1046,2.384,1047,2.669,1048,4.798,1049,4.071,1050,3.538,1051,2.669,1052,2.319,1053,2.319,1054,2.669,1055,3.538,1056,2.669,1057,3.538,1058,4.798,1059,2.669,1060,4.071,1061,2.669,1062,3.538,1063,2.669,1064,2.669,1065,2.669,1066,2.669,1067,4.071,1068,2.669,1069,2.669,1070,2.669,1071,2.669,1072,2.669,1073,2.669,1074,4.289,1075,2.669,1076,2.669,1077,4.071,1078,2.54,1079,4.071,1080,4.071,1081,5.522,1082,4.071,1083,4.071,1084,2.26,1085,4.071,1086,2.669,1087,4.071,1088,2.669,1089,3.538,1090,2.319,1091,2.599,1092,4.071,1093,2.319,1094,4.071,1095,2.319,1096,2.669,1097,2.669,1098,1.405,1099,2.089,1100,1.78,1101,6.516,1102,2.669,1103,3.538,1104,2.669,1105,2.669,1106,2.669,1107,2.669,1108,4.289,1109,2.669,1110,2.319,1111,2.319,1112,2.669,1113,2.669,1114,2.669,1115,2.669,1116,2.319,1117,2.669,1118,2.669,1119,2.669,1120,2.089,1121,2.319,1122,2.319,1123,2.319,1124,2.319,1125,4.653,1126,4.936,1127,5.445,1128,3.187,1129,3.966,1130,4.071,1131,2.669,1132,2.669,1133,4.071,1134,4.071,1135,4.071,1136,2.669,1137,1.275,1138,2.714,1139,2.669,1140,2.669,1141,2.669,1142,2.319,1143,1.78,1144,3.538,1145,4.936,1146,2.089,1147,2.319,1148,2.669,1149,5.522,1150,4.071,1151,2.669,1152,4.936,1153,2.319,1154,2.669,1155,2.669,1156,4.5,1157,2.669,1158,2.319,1159,2.319,1160,1.78,1161,2.089,1162,2.669,1163,4.798,1164,4.798,1165,4.289,1166,2.669,1167,2.669,1168,2.669,1169,2.669,1170,4.071,1171,2.669,1172,2.669,1173,2.669,1174,1.405,1175,1.78,1176,1.665,1177,1.78,1178,2.669,1179,4.936,1180,2.669,1181,2.924,1182,3.538,1183,2.714,1184,2.714,1185,5.166,1186,4.071,1187,5.166,1188,2.669,1189,3.291,1190,1.78,1191,3.291,1192,4.071,1193,4.177,1194,2.669,1195,3.538,1196,4.071,1197,2.669,1198,4.071,1199,2.669,1200,2.669,1201,2.669,1202,1.78,1203,2.714,1204,5.522,1205,2.669,1206,2.669,1207,2.669,1208,2.669,1209,2.669,1210,3.538,1211,2.714,1212,2.595,1213,2.669,1214,1.917,1215,1.78,1216,1.917,1217,2.669,1218,2.669,1219,2.669,1220,2.669,1221,2.669,1222,2.669,1223,2.669,1224,2.319,1225,2.669,1226,1.665,1227,1.405,1228,2.669,1229,2.714,1230,5.522]],["title/classes/DocumentInitializationModel.html",[0,0.199,113,2.321]],["body/classes/DocumentInitializationModel.html",[0,0.328,1,2.064,2,0.81,3,0.091,4,0.091,5,0.078,6,0.209,7,0.123,8,2.376,9,2.342,10,2.206,11,2.589,12,2.589,13,2.589,14,0.117,15,0.466,16,2.589,17,0.334,18,0.015,19,0.269,21,0.456,22,2.979,23,2.589,24,1.943,25,2.979,26,1.742,27,2.206,28,2.514,29,0.394,30,1.698,31,3.185,32,0.866,33,1.915,34,1.657,35,1.58,36,2.65,37,2.206,38,3.495,39,2.804,40,2.206,41,3.29,42,2.206,43,2.445,44,1.657,45,2.675,46,3.762,47,4.659,48,1.444,49,3.11,50,2.376,51,2.376,52,2.65,53,2.376,54,0.192,55,3.735,56,2.589,57,2.589,58,2.064,59,1.036,60,2.589,61,2.589,62,2.589,63,3.429,64,2.376,65,2.589,66,2.589,67,2.589,68,0.529,69,2.589,70,2.589,71,2.589,72,2.589,73,2.589,74,2.589,75,1.383,76,2.589,77,1.943,78,2.589,79,3.183,80,1.633,81,2.376,82,2.376,83,2.376,84,2.206,85,2.376,86,2.589,87,2.589,88,1.836,89,2.589,90,2.589,91,2.589,92,2.589,93,2.589,94,2.589,95,2.589,96,2.589,97,2.589,98,1.943,99,2.376,100,2.376,101,2.206,102,2.589,103,1.123,104,2.589,105,1.212,106,2.376,107,2.589,108,2.376,109,2.589,110,2.376,111,2.589,112,2.376,113,3.602,114,2.95,115,0.313,116,2.485,117,0.84,118,4.024,119,4.024,120,4.024,121,4.024,122,4.801,123,0.884,124,2.056,125,2.589,126,2.589,127,2.589,128,2.589,129,2.589,130,2.589,131,2.589,132,2.589,133,0.491,134,0.977,135,1.226,136,2.589,137,1.58,138,2.064,139,2.376,140,2.206,141,2.589,142,2.376,143,2.376,144,2.589,145,2.064,146,2.376,147,2.376,148,2.589,149,2.589,150,0.581,151,2.589,152,2.589,153,2.206,154,2.589,155,2.589,156,2.589,157,2.589,158,2.589,159,2.589,160,1.444,161,2.589,162,2.064,163,2.206,164,2.589,165,2.064,166,2.589,167,2.589,168,2.589,169,2.589,170,2.064,171,2.589,172,2.376,173,2.589,174,2.589,175,2.376,176,0.45,177,3.737,178,2.589,179,0.397,180,1.383,181,2.589,182,2.806,183,4.801,184,2.589,185,2.589,186,2.376,187,2.589,188,2.376,189,2.589,190,2.589,191,2.589,192,2.376,193,2.589,194,0.636,195,2.514,196,2.589,197,2.589,198,4.801,199,2.589,200,5.091,201,2.589,202,2.589,203,2.589,204,2.589,205,2.589,206,2.589,207,3.737,208,2.589,209,2.589,210,2.589,211,2.589,212,3.737,213,2.589,214,2.589,215,2.589,216,2.589,217,2.589,218,2.589,219,5.305,220,4.385,221,2.206,222,3.737,223,1.943,224,2.589,225,4.024,226,2.589,227,4.385,228,2.376,229,3.737,230,2.589,231,2.589,232,2.589,233,3.737,234,2.589,235,2.589,236,2.589,237,2.589,238,2.589,239,3.737,240,3.737,241,2.589,242,4.09,243,3.737,244,3.737,245,2.589,246,2.589,247,1.58,248,1.836,249,1.943,250,2.206,251,2.376,252,1.676,253,2.589,254,2.514,255,3.429,256,4.359,257,2.589,258,2.589,259,1.657,260,2.589,261,2.206,262,1.943,263,1.444,264,0.725,265,0.725,266,1.742,267,2.589,268,2.589,269,2.589,270,2.589,271,2.589,272,4.385,273,4.385,274,2.589,275,2.589,276,2.589,277,2.589,278,3.183,279,2.589,280,2.589,281,2.376,282,2.589,283,2.064,284,2.589,285,2.589,286,2.589,287,2.589,288,3.429,289,0.42,290,0.541,291,2.589,292,2.376,293,0.708,294,4.385,295,2.206,296,2.589,297,2.589,298,2.589,299,1.657,300,2.589,301,0.006,302,0.008,303,0.006,319,0.341,1231,3.308,1232,3.308,1233,3.308,1234,3.308,1235,3.308,1236,3.308,1237,3.308,1238,3.308,1239,3.308,1240,3.308,1241,3.308,1242,3.308]],["title/components/EmptyModalBodyComponent.html",[374,0.221,414,0.834]],["body/components/EmptyModalBodyComponent.html",[0,0.321,3,0.116,4,0.155,5,0.1,6,0.175,7,0.118,14,0.149,17,0.245,18,0.015,19,0.199,21,0.411,29,0.917,32,0.875,54,0.2,59,0.991,68,0.273,103,0.947,115,0.357,117,0.739,123,0.738,133,0.947,134,0.736,150,0.609,176,0.357,179,0.609,182,2.115,194,0.531,263,1.843,264,0.925,265,0.925,289,0.669,293,0.84,301,0.007,302,0.01,303,0.007,318,2.115,321,0.555,324,0.555,327,0.653,335,1.502,336,0.626,337,1.744,357,2.115,374,0.398,375,0.925,376,1.385,377,1.072,378,1.072,380,0.996,381,1.76,382,1.194,383,1.072,385,1.385,386,0.96,387,1.437,388,1.385,389,0.925,390,1.731,391,1.072,392,1.072,393,0.96,394,1.072,395,0.925,396,1.072,397,0.925,398,1.072,399,1.072,400,0.925,401,1.805,402,0.96,403,1.072,404,0.925,405,1.026,406,0.96,407,1.072,408,0.925,409,1.072,410,0.925,411,1.072,412,0.891,413,1.621,414,1.501,415,1.562,416,1.727,417,1.072,418,0.96,419,1.072,420,0.925,421,0.925,422,0.891,423,1.072,424,0.891,425,0.96,426,1.072,427,0.925,428,0.925,429,0.858,430,1.072,431,0.925,432,1.072,433,0.925,434,1.072,435,0.925,436,0.925,437,1.437,438,0.925,439,0.891,440,1.072,441,0.925,442,1.072,443,0.925,444,1.335,445,1.072,446,1.298,447,1.437,448,1.194,449,0.925,450,1.437,451,0.925,452,0.925,453,0.925,454,0.925,455,1.072,456,0.925,457,0.996,458,1.033,459,0.891,460,1.033,461,1.072,464,2.973,465,0.996,472,2.973,474,2.973,482,2.522,501,1.39,525,2.115,527,1.792,613,3.141,617,1.693,675,2.634,743,3.785,1010,1.693,1091,2.98,1098,2.223,1243,3.982,1244,2.634,1245,4.064,1246,3.669,1247,3.669,1248,4.546,1249,4.256,1250,3.773,1251,3.531,1252,3.323,1253,3.305,1254,2.223,1255,2.815,1256,2.815,1257,2.815,1258,2.815,1259,3.543,1260,2.815,1261,2.815,1262,2.344,1263,2.815,1264,2.815,1265,3.305,1266,3.773,1267,2.815,1268,2.815,1269,2.815,1270,2.815,1271,2.815,1272,2.815,1273,1.926,1274,2.634,1275,3.305,1276,4.429,1277,4.429,1278,3.305,1279,3.305,1280,3.305,1281,3.305,1282,3.305,1283,3.773,1284,4.256,1285,3.305,1286,3.305,1287,3.305,1288,3.033,1289,2.98,1290,2.815,1291,3.305,1292,3.305,1293,3.305,1294,3.305,1295,3.305,1296,4.429,1297,3.305,1298,4.429,1299,3.305,1300,4.429,1301,3.305,1302,3.305,1303,3.305,1304,3.305,1305,2.815,1306,3.773,1307,2.815,1308,2.634,1309,3.305,1310,3.305,1311,2.634,1312,2.815,1313,3.305,1314,3.773,1315,3.773,1316,3.305,1317,3.305,1318,3.033,1319,3.305,1320,3.305,1321,2.815,1322,3.033,1323,3.305,1324,2.815]],["title/classes/EnumValue.html",[0,0.199,1325,3.093]],["body/classes/EnumValue.html",[0,0.275,2,0.981,3,0.11,4,0.11,5,0.095,6,0.17,7,0.1,14,0.141,15,0.455,17,0.269,18,0.015,19,0.193,21,0.329,30,1.426,31,2.191,32,0.62,45,1.915,48,1.75,54,0.171,59,1.049,68,0.526,75,1.677,103,1.069,105,1.018,115,0.391,116,1.426,117,0.849,124,2.121,133,0.595,135,1.03,145,3.41,150,0.675,165,2.502,170,2.502,176,0.46,179,0.455,194,0.663,195,2.111,254,2.111,289,0.722,290,0.334,301,0.007,302,0.01,303,0.007,439,0.846,502,4.806,510,1.483,519,3.485,589,3.644,726,1.042,758,1.55,816,4.451,953,2.713,1144,3.485,1160,2.674,1176,2.502,1185,3.485,1187,3.485,1325,4.866,1326,3.485,1327,6.217,1328,4.01,1329,4.01,1330,4.01,1331,4.01,1332,3.139,1333,2.674,1334,3.485,1335,3.485,1336,3.485,1337,4.01,1338,3.485,1339,4.01,1340,2.355,1341,4.01,1342,4.01,1343,4.01,1344,4.01,1345,4.01,1346,3.139,1347,3.139,1348,4.01,1349,3.485,1350,3.485,1351,5.402,1352,4.749,1353,4.01,1354,4.01,1355,4.01,1356,5.225,1357,2.666,1358,3.139,1359,4.01,1360,4.01,1361,3.485,1362,6.524,1363,4.01,1364,4.01,1365,5.465,1366,4.01,1367,4.01,1368,5.465,1369,1.426,1370,4.01,1371,4.01,1372,2.88,1373,4.01,1374,3.485,1375,4.01,1376,2.355,1377,4.01,1378,4.01,1379,4.01,1380,4.749,1381,3.273,1382,4.01,1383,6.217,1384,5.465,1385,6.41,1386,4.01,1387,4.01,1388,4.01,1389,3.485,1390,4.277,1391,5.465,1392,4.749,1393,4.749,1394,4.01,1395,5.465,1396,4.01,1397,5.402,1398,4.01,1399,4.01,1400,5.465,1401,4.01,1402,4.01,1403,4.01,1404,1.483,1405,3.485,1406,3.485,1407,4.01,1408,4.01,1409,4.01,1410,4.01,1411,4.01,1412,4.01,1413,4.795,1414,4.01,1415,4.01,1416,4.01,1417,5.465,1418,4.01,1419,3.644,1420,4.01,1421,4.01,1422,4.01,1423,4.01,1424,4.01,1425,4.01,1426,5.465,1427,3.485,1428,4.01,1429,3.485,1430,4.01,1431,5.465,1432,3.485,1433,4.01,1434,4.749]],["title/injectables/ErrorHandlerService.html",[33,1.585,304,1.98]],["body/injectables/ErrorHandlerService.html",[0,0.215,3,0.176,4,0.117,5,0.101,6,0.221,7,0.13,14,0.15,15,0.474,17,0.34,18,0.015,19,0.283,21,0.387,33,2.283,43,2.987,44,2.135,54,0.133,68,0.535,115,0.436,117,0.462,123,0.837,133,1.089,134,1.118,135,0.803,150,0.474,176,0.238,179,0.679,194,0.593,252,1.165,290,0.355,292,4.09,293,1.237,301,0.007,302,0.01,303,0.007,304,2.852,306,2.842,319,0.44,321,0.558,324,0.784,327,0.659,336,0.632,371,0.928,372,0.928,510,2.106,696,3.799,723,3.604,726,0.714,730,3.766,731,2.503,733,3.344,734,3.336,1262,4.279,1435,7.01,1436,3.704,1437,5.695,1438,5.695,1439,6.845,1440,5.357,1441,6.845,1442,4.457,1443,5.695,1444,5.695,1445,5.695,1446,5.357,1447,5.695,1448,4.457,1449,5.695,1450,4.916,1451,4.262,1452,5.695,1453,4.262,1454,4.262,1455,4.262,1456,4.262,1457,5.695,1458,4.262,1459,5.695,1460,4.262,1461,4.457,1462,5.695,1463,5.695,1464,2.852,1465,5.695,1466,5.695,1467,6.413,1468,5.695,1469,4.262,1470,5.695,1471,4.262,1472,5.695,1473,4.262,1474,5.695,1475,4.262,1476,4.276,1477,4.262,1478,5.695,1479,4.262,1480,5.695,1481,4.262,1482,4.262,1483,7.339,1484,4.262,1485,4.457,1486,5.695,1487,7.493,1488,5.695,1489,4.457,1490,4.457,1491,4.262,1492,6.413,1493,4.262,1494,4.262,1495,5.695,1496,4.262,1497,4.457,1498,2.503,1499,3.336,1500,4.262,1501,3.704,1502,4.262]],["title/classes/ErrorInfo.html",[0,0.199,43,1.725]],["body/classes/ErrorInfo.html",[0,0.288,2,1.398,3,0.188,4,0.157,5,0.135,6,0.219,7,0.129,14,0.201,15,0.57,17,0.343,18,0.015,19,0.279,43,2.992,54,0.215,68,0.518,105,1.45,115,0.319,124,2.162,133,1.09,290,0.475,293,1.197,301,0.01,302,0.012,303,0.01,319,0.589,371,0.681,372,0.681,723,4.167,726,1.149,758,1.619,1262,4.326,1311,3.563,1442,4.469,1448,4.469,1450,5.748,1476,4.899,1503,4.469,1504,5.489,1505,7.348,1506,6.856,1507,6.856,1508,4.101,1509,5.71,1510,5.71,1511,5.71,1512,5.71,1513,2.86,1514,4.962,1515,4.962,1516,5.71,1517,5.71,1518,5.71,1519,5.71,1520,5.71]],["title/modules/ExampleAppModule.html",[782,2.635,1521,2.838]],["body/modules/ExampleAppModule.html",[0,0.277,3,0.151,4,0.151,5,0.158,7,0.089,18,0.015,21,0.483,54,0.172,263,2.402,299,2.756,301,0.01,302,0.012,303,0.01,327,0.851,333,3.433,352,2.51,375,1.795,382,1.161,386,1.251,393,1.863,605,4.815,614,4.307,622,2.898,713,3.231,782,3.669,783,5.144,784,3.669,785,3.433,786,5.659,787,5.193,788,4.307,794,5.247,795,3.952,802,4.307,803,4.782,804,4.782,805,4.782,806,4.782,807,4.307,808,5.659,809,4.307,810,5.705,811,4.307,812,5.247,813,4.307,814,4.307,815,4.307,816,3.669,817,4.307,818,4.307,819,3.669,820,4.307,821,4.307,822,4.307,823,4.307,824,5.247,825,4.307,826,3.952,827,4.307,828,4.307,829,4.307,830,4.307,831,4.307,832,3.669,833,3.952,834,4.307,835,4.307,836,4.307,837,4.307,838,5.826,842,5.826,845,5.826,847,4.782,912,5.247,1099,4.307,1100,3.669,1521,5.886,1522,4.782,1523,4.782,1524,5.503,1525,4.782,1526,5.503,1527,5.503,1528,6.705,1529,5.503,1530,5.503,1531,5.503,1532,5.503,1533,5.503,1534,5.503,1535,5.503]],["title/classes/Examples.html",[0,0.199,615,2.838]],["body/classes/Examples.html",[0,0.307,2,1.491,3,0.167,4,0.167,5,0.144,6,0.195,7,0.115,14,0.215,15,0.593,18,0.014,19,0.215,54,0.191,84,5.034,124,2.222,262,4.183,290,0.507,301,0.011,302,0.012,303,0.011,319,0.628,615,5.117,1536,5.294,1537,6.191,1538,7.125,1539,7.125,1540,7.125,1541,5.576,1542,7.125,1543,8.031,1544,8.031,1545,6.191,1546,8.031,1547,7.125,1548,5.576,1549,6.093]],["title/classes/ExpressionNode.html",[0,0.199,1550,2.466]],["body/classes/ExpressionNode.html",[0,0.29,2,0.607,3,0.068,4,0.146,5,0.059,6,0.174,7,0.102,14,0.251,15,0.32,17,0.167,18,0.015,19,0.214,21,0.32,29,0.562,33,0.995,34,1.243,35,1.185,54,0.18,68,0.509,80,2.399,103,0.368,105,0.63,114,1.307,115,0.139,123,0.615,124,1.692,133,0.974,134,0.671,135,1.321,150,0.546,176,0.435,179,0.32,180,1.038,194,0.66,247,1.185,252,1.916,259,1.928,289,0.593,290,0.207,299,1.243,301,0.004,302,0.007,303,0.004,319,0.256,321,0.377,324,0.462,335,0.883,336,0.368,371,0.296,372,0.296,422,0.524,510,1.424,527,0.908,554,1.424,570,1.928,617,1.544,619,1.457,625,2.402,686,1.61,726,1.318,758,1.952,891,1.692,946,3.524,953,1.083,967,1.655,972,2.567,987,1.243,1010,2.131,1014,1.912,1046,0.995,1137,3.032,1212,1.083,1229,1.655,1273,1.756,1289,1.307,1340,3.12,1357,1.744,1369,0.883,1376,2.261,1404,1.965,1498,3.12,1504,2.567,1550,4.204,1551,1.655,1552,4.371,1553,3.145,1554,3.817,1555,4.56,1556,4.56,1557,4.56,1558,2.765,1559,3.85,1560,3.817,1561,2.482,1562,2.482,1563,2.482,1564,2.482,1565,2.44,1566,1.655,1567,2.567,1568,3.961,1569,2.765,1570,5.293,1571,5.588,1572,1.783,1573,5,1574,2.567,1575,4.091,1576,1.783,1577,1.783,1578,1.783,1579,1.783,1580,4.814,1581,1.783,1582,1.783,1583,1.378,1584,2.765,1585,1.783,1586,1.783,1587,1.783,1588,1.783,1589,1.457,1590,1.783,1591,1.783,1592,1.783,1593,1.783,1594,1.783,1595,1.783,1596,1.783,1597,1.783,1598,1.783,1599,2.765,1600,1.783,1601,2.765,1602,1.783,1603,3.387,1604,1.783,1605,1.783,1606,1.783,1607,4.84,1608,4.131,1609,4.131,1610,3.817,1611,1.783,1612,1.378,1613,1.783,1614,3.853,1615,5.241,1616,1.783,1617,2.765,1618,3.817,1619,1.783,1620,5.34,1621,4.946,1622,4.371,1623,5,1624,3.387,1625,1.783,1626,1.783,1627,4.131,1628,1.783,1629,3.387,1630,2.765,1631,1.783,1632,4.713,1633,4.131,1634,5.181,1635,1.783,1636,1.783,1637,3.387,1638,1.783,1639,2.765,1640,2.765,1641,3.817,1642,2.765,1643,2.402,1644,2.765,1645,4.131,1646,2.567,1647,2.567,1648,1.783,1649,1.783,1650,1.783,1651,4.713,1652,2.765,1653,4.56,1654,1.68,1655,1.783,1656,3.387,1657,4.552,1658,2.765,1659,4.371,1660,1.783,1661,5.114,1662,3.817,1663,2.765,1664,2.765,1665,2.402,1666,3.387,1667,2.765,1668,2.765,1669,1.783,1670,2.765,1671,2.765,1672,3.817,1673,2.765,1674,2.765,1675,3.145,1676,1.783,1677,1.783,1678,1.783,1679,1.783,1680,1.783,1681,3.387,1682,1.783,1683,4.131,1684,1.783,1685,4.371,1686,3.12,1687,4.371,1688,3.387,1689,2.058,1690,3.145,1691,3.387,1692,1.783,1693,5.114,1694,5.114,1695,4.371,1696,3.387,1697,1.783,1698,4.56,1699,1.783,1700,4.371,1701,1.783,1702,1.783,1703,3.387,1704,1.783,1705,3.387,1706,3.387,1707,3.387,1708,3.387,1709,2.765,1710,2.765,1711,2.765,1712,2.765,1713,2.765,1714,5.181,1715,2.765,1716,1.548,1717,1.783,1718,1.783,1719,1.783,1720,1.783,1721,1.783,1722,1.655,1723,1.783,1724,1.783,1725,1.783,1726,1.132,1727,1.783,1728,1.783,1729,1.548,1730,1.783,1731,2.027,1732,1.783,1733,1.783,1734,1.783,1735,2.765,1736,1.655,1737,1.783,1738,1.783,1739,2.765,1740,3.817,1741,3.817,1742,1.783,1743,1.783,1744,3.387,1745,1.783,1746,2.765,1747,2.765,1748,1.783,1749,4.713,1750,2.765,1751,1.783,1752,1.783,1753,1.783,1754,2.765,1755,1.783,1756,1.457,1757,2.765,1758,1.783,1759,1.783,1760,1.378,1761,1.783,1762,1.783,1763,1.783,1764,1.783,1765,1.783,1766,1.783,1767,1.783,1768,1.783,1769,2.765,1770,1.783,1771,2.765]],["title/classes/ExpressionUpdatedEvent.html",[0,0.199,1568,2.466]],["body/classes/ExpressionUpdatedEvent.html",[0,0.291,2,0.614,3,0.069,4,0.147,5,0.059,6,0.147,7,0.086,14,0.252,15,0.323,17,0.206,18,0.015,19,0.167,21,0.322,29,0.566,33,1.006,34,1.257,35,1.198,54,0.181,68,0.502,80,2.405,103,0.372,105,0.637,114,1.321,115,0.14,123,0.62,124,1.397,133,0.977,134,0.677,135,1.325,150,0.548,176,0.436,179,0.323,180,1.049,194,0.66,247,1.198,252,1.921,259,1.945,289,0.595,299,1.257,301,0.004,302,0.007,303,0.004,335,0.892,336,0.372,371,0.299,372,0.689,422,0.53,510,1.436,527,0.916,554,1.436,570,1.945,617,1.557,619,1.473,625,2.422,686,1.623,726,1.315,758,2.024,891,1.701,946,3.539,953,1.095,967,1.673,972,2.589,987,1.257,1010,2.143,1014,1.913,1046,1.006,1137,3.044,1212,1.095,1229,1.673,1273,2.789,1289,1.321,1340,2.28,1357,1.756,1369,0.892,1376,2.28,1404,1.977,1498,3.139,1504,2.589,1508,2.789,1550,4.387,1551,1.673,1552,2.789,1553,1.673,1554,1.802,1555,3.411,1556,3.839,1557,3.839,1558,1.802,1560,3.411,1565,2.451,1566,1.673,1567,2.589,1568,4.109,1569,2.789,1570,5.43,1571,5.67,1572,1.802,1573,5.005,1574,2.589,1575,4.1,1576,1.802,1577,1.802,1578,1.802,1579,1.802,1580,4.821,1581,1.802,1582,1.802,1583,1.393,1584,2.789,1585,1.802,1586,1.802,1587,1.802,1588,1.802,1589,1.473,1590,1.802,1591,1.802,1592,1.802,1593,1.802,1594,1.802,1595,1.802,1596,1.802,1597,1.802,1598,1.802,1599,2.789,1600,1.802,1601,2.789,1602,1.802,1603,3.411,1604,1.802,1605,1.802,1606,1.802,1607,4.855,1608,4.152,1609,4.152,1610,3.839,1611,1.802,1612,1.393,1613,1.802,1614,3.867,1615,5.253,1616,1.802,1617,2.789,1618,3.839,1619,1.802,1620,5.351,1621,4.961,1622,4.391,1623,5.005,1624,3.411,1625,1.802,1626,1.802,1627,4.152,1628,1.802,1629,3.411,1630,2.789,1631,1.802,1632,4.73,1633,4.152,1634,5.194,1635,1.802,1636,1.802,1637,3.411,1638,1.802,1639,2.789,1640,2.789,1641,3.839,1642,2.789,1643,2.422,1644,2.789,1645,4.152,1646,2.589,1647,2.589,1648,1.802,1649,1.802,1650,1.802,1651,4.73,1652,2.789,1653,4.578,1654,1.694,1655,1.802,1656,3.411,1657,4.563,1658,2.789,1659,4.391,1660,1.802,1661,5.127,1662,3.839,1663,2.789,1664,2.789,1665,2.422,1666,3.411,1667,2.789,1668,2.789,1669,1.802,1670,2.789,1671,2.789,1672,3.839,1673,2.789,1674,2.789,1675,3.166,1676,1.802,1677,1.802,1678,1.802,1679,1.802,1680,1.802,1681,3.411,1682,1.802,1683,4.152,1684,1.802,1685,4.391,1686,3.139,1687,4.391,1688,3.411,1689,2.073,1690,3.166,1691,3.411,1692,1.802,1693,5.127,1694,5.127,1695,4.391,1696,3.411,1697,1.802,1698,4.578,1699,1.802,1700,4.391,1701,1.802,1702,1.802,1703,3.411,1704,1.802,1705,3.411,1706,3.411,1707,3.411,1708,3.411,1709,2.789,1710,2.789,1711,2.789,1712,2.789,1713,2.789,1714,5.194,1715,2.789,1716,1.566,1717,1.802,1718,1.802,1719,1.802,1720,1.802,1721,1.802,1722,1.673,1723,1.802,1724,1.802,1725,1.802,1726,1.145,1727,1.802,1728,1.802,1729,1.566,1730,1.802,1731,2.044,1732,1.802,1733,1.802,1734,1.802,1735,2.789,1736,1.673,1737,1.802,1738,1.802,1739,2.789,1740,3.839,1741,3.839,1742,1.802,1743,1.802,1744,3.411,1745,1.802,1746,2.789,1747,2.789,1748,1.802,1749,4.73,1750,2.789,1751,1.802,1752,1.802,1753,1.802,1754,2.789,1755,1.802,1756,1.473,1757,2.789,1758,1.802,1759,1.802,1760,1.393,1761,1.802,1762,1.802,1763,1.802,1764,1.802,1765,1.802,1766,1.802,1767,1.802,1768,1.802,1769,2.789,1770,1.802,1771,2.789,1772,2.509,1773,2.509,1774,3.883]],["title/classes/FieldAction.html",[0,0.199,1775,1.652]],["body/classes/FieldAction.html",[0,0.362,2,1.183,3,0.133,4,0.133,5,0.114,6,0.212,7,0.124,14,0.17,15,0.515,17,0.335,18,0.015,19,0.268,54,0.232,68,0.532,115,0.445,117,0.524,124,2.006,135,1.354,150,0.651,176,0.415,179,0.567,180,2.021,194,0.618,289,0.426,290,0.643,301,0.008,302,0.011,303,0.008,319,0.703,321,0.606,324,0.668,341,2.839,352,2.205,371,0.813,372,0.813,527,1.141,554,1.788,585,2.684,586,2.309,590,2.684,591,2.684,592,2.684,593,2.684,594,2.684,726,1.245,953,2.699,1010,2.48,1014,1.141,1174,3.911,1333,4.123,1381,2.546,1464,3.097,1513,2.422,1775,3.176,1776,4.818,1777,3.016,1778,4.897,1779,5.374,1780,6.184,1781,6.184,1782,4.535,1783,4.835,1784,4,1785,4.835,1786,4.835,1787,4.441,1788,4.835,1789,4.441,1790,4.835,1791,5.161,1792,4.441,1793,4.835,1794,3.784,1795,3.631,1796,3.256,1797,3.631,1798,3.631,1799,3.631,1800,4.123,1801,3.472,1802,3.016,1803,3.016,1804,3.016,1805,2.839,1806,3.472,1807,2.684,1808,3.472,1809,3.472,1810,3.472,1811,3.858,1812,2.839,1813,3.472,1814,4.441,1815,3.472,1816,3.472,1817,4.441,1818,3.472,1819,3.631,1820,3.472,1821,3.472,1822,3.472,1823,3.472,1824,4.441,1825,3.472,1826,3.472,1827,4.441,1828,3.472,1829,3.472,1830,3.472,1831,3.472]],["title/classes/FieldActionArgument.html",[0,0.199,1794,2.194]],["body/classes/FieldActionArgument.html",[0,0.367,2,1.227,3,0.137,4,0.137,5,0.118,6,0.206,7,0.121,14,0.177,15,0.527,17,0.337,18,0.015,19,0.257,54,0.235,68,0.528,115,0.436,117,0.543,124,1.475,135,1.415,150,0.666,176,0.42,179,0.527,180,2.096,194,0.625,289,0.441,290,0.648,301,0.009,302,0.011,303,0.009,319,0.775,341,2.944,352,2.287,527,1.183,554,1.854,585,2.783,586,2.394,590,2.783,591,2.783,592,2.783,593,2.783,594,2.783,726,1.259,953,3.026,1010,2.537,1014,1.183,1174,3.332,1333,4.856,1381,2.64,1464,3.17,1513,2.511,1775,3.045,1776,4.685,1777,3.128,1778,3.601,1782,4.409,1784,3.651,1787,3.601,1789,3.601,1791,4.545,1792,3.601,1794,4.043,1795,4.276,1796,3.332,1797,3.716,1798,3.716,1799,3.716,1800,4.219,1801,3.601,1802,3.128,1803,3.128,1804,3.128,1805,2.944,1806,3.601,1807,2.783,1808,3.601,1809,3.601,1810,3.601,1811,3.948,1812,2.944,1813,3.601,1814,4.545,1815,3.601,1816,3.601,1817,4.545,1818,3.601,1819,3.716,1820,3.601,1821,3.601,1822,3.601,1823,3.601,1824,4.545,1825,3.601,1826,3.601,1827,4.545,1828,3.601,1829,3.601,1830,3.601,1831,3.601,1832,5.014,1833,5.014,1834,5.014,1835,5.014]],["title/classes/FieldActionArgumentValue.html",[0,0.199,1782,2.321]],["body/classes/FieldActionArgumentValue.html",[0,0.37,2,1.255,3,0.141,4,0.141,5,0.121,6,0.192,7,0.113,14,0.181,15,0.534,17,0.303,18,0.015,19,0.226,54,0.237,68,0.528,115,0.438,117,0.556,124,1.508,135,1.383,150,0.664,176,0.423,179,0.534,180,2.143,194,0.629,289,0.451,290,0.651,301,0.009,302,0.011,303,0.009,319,0.723,341,3.01,352,2.339,527,1.209,554,1.896,585,2.846,586,2.448,590,2.846,591,2.846,592,2.846,593,2.846,594,2.846,726,1.267,953,2.801,1010,2.573,1014,1.209,1174,3.379,1333,4.279,1381,2.699,1464,3.214,1513,2.568,1775,3.069,1776,4.371,1777,3.198,1778,3.682,1782,4.528,1784,3.689,1787,3.682,1789,3.682,1791,4.609,1792,3.682,1794,3.889,1795,3.768,1796,3.379,1797,3.768,1798,3.768,1799,3.768,1800,4.279,1801,3.682,1802,3.198,1803,3.198,1804,3.198,1805,3.01,1806,3.682,1807,2.846,1808,3.682,1809,3.682,1810,3.682,1811,4.004,1812,3.01,1813,3.682,1814,4.609,1815,3.682,1816,3.682,1817,4.609,1818,3.682,1819,3.768,1820,3.682,1821,3.682,1822,3.682,1823,3.682,1824,4.609,1825,3.682,1826,3.682,1827,4.609,1828,3.682,1829,3.682,1830,3.682,1831,3.682,1836,5.127,1837,5.127]],["title/classes/FieldActionDefinition.html",[0,0.199,1784,2.081]],["body/classes/FieldActionDefinition.html",[0,0.358,2,1.154,3,0.129,4,0.129,5,0.111,6,0.219,7,0.128,14,0.166,15,0.506,17,0.343,18,0.015,19,0.279,54,0.231,68,0.529,115,0.443,117,0.659,124,1.387,135,1.388,150,0.639,176,0.412,179,0.56,180,1.971,194,0.613,289,0.415,290,0.647,301,0.008,302,0.011,303,0.008,319,0.778,321,0.596,324,0.596,341,3.955,352,2.15,371,0.725,372,0.725,429,0.958,527,1.112,554,1.743,585,2.616,586,2.251,590,2.616,591,2.616,592,2.616,593,2.616,594,2.616,726,1.235,953,2.94,1010,2.854,1014,1.112,1174,3.203,1333,4.746,1381,2.482,1464,3.047,1513,2.361,1775,3.155,1776,4.98,1777,2.941,1778,3.385,1782,4.327,1784,3.748,1787,3.385,1789,3.385,1791,4.369,1792,3.385,1794,4.09,1795,3.572,1796,3.748,1797,3.572,1798,3.572,1799,3.572,1800,4.056,1801,4.838,1802,4.203,1803,4.203,1804,4.203,1805,3.572,1806,4.369,1807,2.616,1808,3.385,1809,3.385,1810,3.385,1811,3.795,1812,2.768,1813,3.385,1814,4.369,1815,3.385,1816,3.385,1817,4.369,1818,4.369,1819,3.572,1820,3.385,1821,3.385,1822,3.385,1823,3.385,1824,4.369,1825,3.385,1826,3.385,1827,4.369,1828,3.385,1829,3.385,1830,3.385,1831,3.385,1838,6.084,1839,6.084,1840,4.713,1841,4.713,1842,4.713,1843,4.713,1844,4.713,1845,4.713,1846,4.713,1847,4.713,1848,4.713,1849,4.713]],["title/injectables/FieldActionService.html",[49,2.194,304,1.98]],["body/injectables/FieldActionService.html",[0,0.132,3,0.072,4,0.192,5,0.062,6,0.21,7,0.123,9,1.679,14,0.092,15,0.518,17,0.339,18,0.015,19,0.268,21,0.413,22,3.413,24,1.54,25,3.413,29,0.93,33,2.194,35,1.252,49,2.229,54,0.082,59,0.952,68,0.496,80,1.374,88,3.037,103,1.13,105,1.02,115,0.403,116,2.624,117,0.83,123,0.637,133,1.19,134,0.851,135,1.172,140,2.678,150,0.6,153,2.678,160,1.753,176,0.454,179,0.334,194,0.647,252,1.971,254,3.105,266,3.105,289,0.713,290,0.491,293,0.724,295,2.678,301,0.005,302,0.011,303,0.005,304,2.012,306,1.748,312,3.506,316,1.883,319,0.608,321,0.394,324,0.716,325,1.918,327,0.405,333,1.636,334,2.866,335,0.932,336,0.389,339,1.883,365,3.929,371,0.833,372,0.833,382,0.553,429,1.484,500,1.009,508,2.884,554,2.023,585,1.455,586,1.252,590,1.455,591,1.455,592,1.455,593,1.455,594,1.455,596,3.932,726,0.673,758,0.743,819,2.678,891,2.21,892,0.97,922,3.506,939,3.143,955,2.884,987,2.012,998,1.883,999,1.883,1008,4.282,1014,1.152,1046,2.746,1120,4.282,1174,1.381,1175,3.647,1245,1.883,1369,1.736,1404,2.667,1419,3.255,1497,2.052,1508,1.883,1575,3.037,1689,1.144,1784,4.188,1794,2.229,1796,3.984,1805,3.463,1807,2.229,1850,6.657,1851,2.278,1852,4.104,1853,4.881,1854,4.016,1855,4.016,1856,4.016,1857,5.471,1858,5.471,1859,4.016,1860,5.471,1861,4.016,1862,4.016,1863,4.016,1864,4.016,1865,4.016,1866,5.471,1867,2.622,1868,4.754,1869,2.622,1870,4.016,1871,2.622,1872,4.016,1873,5.645,1874,5.471,1875,4.016,1876,3.49,1877,2.678,1878,4.016,1879,6.476,1880,2.622,1881,4.566,1882,5.471,1883,5.471,1884,4.016,1885,6.68,1886,2.622,1887,3.143,1888,2.622,1889,2.622,1890,4.016,1891,2.622,1892,5.471,1893,2.622,1894,4.016,1895,2.622,1896,3.82,1897,4.016,1898,2.622,1899,3.143,1900,4.016,1901,2.622,1902,2.678,1903,3.143,1904,4.016,1905,6.68,1906,2.622,1907,5.125,1908,5.471,1909,6.68,1910,4.016,1911,2.622,1912,5.471,1913,2.622,1914,3.49,1915,3.49,1916,4.016,1917,2.622,1918,2.622,1919,4.242,1920,4.754,1921,4.754,1922,4.754,1923,3.49,1924,2.622,1925,2.622,1926,1.636,1927,1.313,1928,4.016,1929,4.016,1930,2.622,1931,2.622,1932,4.016,1933,4.016,1934,4.016,1935,5.471,1936,4.016,1937,2.622,1938,4.016,1939,3.49,1940,4.016,1941,2.622,1942,4.016,1943,5.471,1944,2.622,1945,4.016,1946,3.49,1947,3.143,1948,2.884,1949,2.622,1950,2.622,1951,2.622,1952,2.622,1953,2.622,1954,2.278,1955,2.278,1956,2.622,1957,4.016,1958,2.622,1959,2.622,1960,3.143,1961,2.052,1962,2.622,1963,2.052,1964,2.052,1965,1.883,1966,2.622,1967,2.622,1968,2.622,1969,3.143,1970,4.881,1971,2.622,1972,2.622,1973,4.016,1974,2.622,1975,2.622,1976,2.622,1977,2.278,1978,2.622,1979,2.622,1980,2.622,1981,2.278,1982,2.278,1983,2.278,1984,2.278,1985,2.622,1986,2.278,1987,2.278,1988,2.622,1989,4.016,1990,2.622,1991,4.016,1992,2.622,1993,4.016,1994,3.49,1995,2.278,1996,2.622,1997,2.622,1998,2.622,1999,2.622,2000,2.622,2001,2.622,2002,2.622,2003,2.622,2004,2.622,2005,2.622,2006,2.622,2007,2.622,2008,2.622,2009,2.622,2010,2.622,2011,2.622,2012,4.016,2013,2.622,2014,2.622,2015,2.622,2016,2.622,2017,2.622,2018,2.622,2019,2.622,2020,2.622,2021,2.622,2022,2.622,2023,2.622,2024,4.016,2025,2.622,2026,2.622,2027,4.016,2028,2.622,2029,6.222,2030,4.881,2031,2.622,2032,2.622,2033,2.622,2034,2.622,2035,4.016,2036,2.622,2037,2.622,2038,3.255,2039,2.622,2040,2.278,2041,4.016,2042,4.881,2043,4.016,2044,5.471,2045,6.222,2046,2.622,2047,2.622,2048,4.016,2049,2.622,2050,2.622,2051,2.622,2052,2.622,2053,2.622,2054,2.622,2055,2.622]],["title/components/FieldEditComponent.html",[374,0.221,420,0.866]],["body/components/FieldEditComponent.html",[0,0.229,3,0.085,4,0.085,5,0.073,6,0.22,7,0.13,10,2.058,14,0.109,15,0.378,17,0.344,18,0.015,19,0.282,21,0.412,29,0.853,30,1.098,31,2.653,32,0.702,45,1.474,48,1.347,54,0.097,59,0.892,68,0.478,103,0.881,105,1.367,115,0.422,116,1.915,117,0.741,123,0.702,133,0.799,134,0.939,135,1.119,150,0.628,176,0.332,179,0.622,194,0.606,195,3.601,264,0.676,265,0.676,283,2.832,289,0.722,290,0.628,293,0.458,301,0.005,302,0.008,303,0.005,319,0.761,321,0.445,324,0.714,325,2.168,327,0.477,334,3.162,335,1.098,336,0.458,337,1.241,349,2.217,371,0.815,372,0.815,374,0.301,375,0.676,376,1.111,377,0.784,378,0.784,380,0.728,381,1.723,382,0.958,383,0.784,385,1.111,386,0.702,387,1.153,388,1.674,389,0.676,390,1.507,391,0.784,392,0.784,393,0.702,394,0.784,395,0.676,396,0.784,397,0.676,398,0.784,399,0.784,400,0.676,401,1.606,402,0.702,403,0.784,404,0.676,405,0.823,406,0.702,407,0.784,408,0.676,409,0.784,410,0.676,411,0.784,412,0.652,413,1.367,414,0.652,415,0.756,416,1.35,417,0.784,418,0.702,419,0.784,420,1.301,421,0.676,422,0.652,423,0.784,424,0.652,425,0.702,426,0.784,427,0.676,428,0.676,429,0.628,430,0.784,431,0.676,432,0.784,433,0.676,434,0.784,435,0.676,436,0.676,437,1.153,438,0.676,439,0.652,440,0.784,441,0.676,442,0.784,443,0.676,444,1.071,445,0.784,446,0.628,447,1.153,448,0.652,449,0.676,450,1.849,451,0.676,452,0.676,453,0.676,454,0.676,455,0.784,456,0.676,457,0.728,458,0.756,459,0.652,460,0.756,461,0.784,464,2.251,465,1.071,467,3.359,472,2.482,473,2.39,474,2.482,475,3.945,480,1.932,482,2.34,483,3.261,484,5.498,487,3.945,492,1.291,498,1.408,499,1.546,500,1.188,501,1.016,502,2.058,505,1.926,507,3.867,535,1.926,536,2.39,537,3.027,540,4.215,541,4.647,542,3.553,546,2.416,555,3.553,557,2.416,558,2.416,559,2.217,560,3.945,561,2.416,562,2.416,563,2.416,564,2.217,565,4.215,570,2.274,571,2.217,574,2.217,576,2.217,578,4.215,579,2.416,585,3.296,586,2.835,587,3.553,588,3.553,589,3.027,590,2.52,591,2.52,592,2.52,593,3.296,594,3.296,595,3.553,596,3.027,597,3.553,598,3.553,599,3.553,600,3.553,601,5.492,625,1.926,702,1.347,1014,0.728,1084,1.714,1142,3.945,1160,3.59,1175,2.058,1332,4.215,1347,4.215,1357,1.142,1369,1.098,1380,6.223,1397,6.098,1413,4.264,1434,3.945,1654,1.981,1689,1.981,1756,1.813,1887,2.416,2056,6.976,2057,4.679,2058,5.385,2059,5.385,2060,5.385,2061,3.867,2062,5.385,2063,3.945,2064,4.54,2065,4.54,2066,4.54,2067,3.945,2068,3.945,2069,3.087,2070,3.59,2071,4.54,2072,3.087,2073,3.087,2074,3.087,2075,4.54,2076,3.087,2077,3.087,2078,3.087,2079,4.54,2080,3.087,2081,3.087,2082,3.087,2083,3.087,2084,3.087,2085,3.087,2086,3.087,2087,4.378,2088,3.087,2089,2.683,2090,2.683,2091,3.087,2092,3.087,2093,5.937,2094,3.087,2095,5.385,2096,5.937,2097,3.087,2098,5.385,2099,4.679,2100,5.937,2101,5.937,2102,3.087,2103,5.937,2104,3.945,2105,3.087,2106,2.683,2107,3.087,2108,4.54,2109,3.087,2110,3.087,2111,3.087,2112,2.217,2113,5.385,2114,2.217,2115,2.416,2116,3.087,2117,3.087,2118,3.087,2119,5.385,2120,5.385,2121,4.54,2122,3.087,2123,2.683,2124,3.087,2125,2.683,2126,3.945,2127,3.087,2128,3.087,2129,2.683,2130,2.683,2131,3.087,2132,2.683,2133,2.683,2134,4.54,2135,3.087,2136,2.683,2137,2.683,2138,2.683,2139,2.683,2140,4.54,2141,2.683,2142,2.683]],["title/classes/FieldNode.html",[0,0.199,1580,2.466]],["body/classes/FieldNode.html",[0,0.286,2,0.593,3,0.066,4,0.144,5,0.057,6,0.165,7,0.097,14,0.256,15,0.314,17,0.227,18,0.015,19,0.241,21,0.316,29,0.625,33,0.971,34,1.213,35,1.156,54,0.178,68,0.509,80,2.383,103,0.359,105,0.615,114,1.275,115,0.135,123,0.606,124,1.851,133,0.966,134,0.658,135,1.313,150,0.542,176,0.434,179,0.314,180,1.012,194,0.658,247,1.156,252,1.904,259,1.892,289,0.639,290,0.314,299,1.213,301,0.004,302,0.007,303,0.004,319,0.39,321,0.37,324,0.557,335,0.861,336,0.359,371,0.289,372,0.553,422,0.511,510,1.397,527,0.891,554,1.397,570,1.892,617,1.514,619,1.422,625,2.356,686,1.579,726,1.314,758,2.007,891,1.851,946,3.493,953,1.057,967,1.615,972,2.518,987,1.213,1010,2.103,1014,1.908,1046,0.971,1137,3.005,1212,1.057,1229,1.615,1273,2.392,1289,1.275,1340,3.079,1357,1.717,1369,0.861,1376,2.218,1404,1.94,1498,3.079,1504,3.497,1508,2.713,1550,4.529,1551,1.615,1552,4.327,1553,3.096,1554,3.767,1555,4.519,1556,4.912,1557,4.912,1558,1.739,1560,4.084,1565,2.682,1566,1.615,1567,2.518,1568,3.926,1569,2.713,1570,5.267,1571,5.57,1572,1.739,1573,4.989,1574,3.096,1575,4.108,1576,1.739,1577,1.739,1578,1.739,1579,1.739,1580,4.818,1581,1.739,1582,1.739,1583,1.344,1584,2.713,1585,1.739,1586,1.739,1587,1.739,1588,1.739,1589,1.422,1590,1.739,1591,1.739,1592,1.739,1593,1.739,1594,1.739,1595,1.739,1596,1.739,1597,1.739,1598,1.739,1599,2.713,1600,1.739,1601,2.713,1602,1.739,1603,3.335,1604,1.739,1605,1.739,1606,1.739,1607,4.803,1608,4.084,1609,4.084,1610,3.767,1611,1.739,1612,1.344,1613,1.739,1614,3.822,1615,5.213,1616,1.739,1617,2.713,1618,3.767,1619,1.739,1620,5.316,1621,4.912,1622,4.327,1623,4.989,1624,3.335,1625,1.739,1626,1.739,1627,4.084,1628,1.739,1629,3.335,1630,2.713,1631,1.739,1632,4.675,1633,4.084,1634,5.153,1635,1.739,1636,1.739,1637,3.335,1638,1.739,1639,2.713,1640,2.713,1641,3.767,1642,2.713,1643,2.356,1644,2.713,1645,4.084,1646,2.518,1647,2.518,1648,1.739,1649,1.739,1650,1.739,1651,4.675,1652,2.713,1653,4.519,1654,1.648,1655,1.739,1656,3.335,1657,4.529,1658,2.713,1659,4.327,1660,1.739,1661,5.083,1662,3.767,1663,2.713,1664,2.713,1665,2.356,1666,3.335,1667,2.713,1668,2.713,1669,1.739,1670,2.713,1671,2.713,1672,3.767,1673,2.713,1674,2.713,1675,3.096,1676,1.739,1677,1.739,1678,1.739,1679,1.739,1680,1.739,1681,3.335,1682,1.739,1683,4.084,1684,1.739,1685,4.327,1686,3.079,1687,4.327,1688,3.335,1689,2.026,1690,3.096,1691,3.335,1692,1.739,1693,5.083,1694,5.083,1695,4.327,1696,3.335,1697,1.739,1698,4.519,1699,1.739,1700,4.327,1701,1.739,1702,1.739,1703,3.335,1704,1.739,1705,3.335,1706,3.335,1707,3.335,1708,3.335,1709,2.713,1710,2.713,1711,2.713,1712,2.713,1713,2.713,1714,5.153,1715,2.713,1716,1.511,1717,1.739,1718,1.739,1719,1.739,1720,1.739,1721,1.739,1722,1.615,1723,1.739,1724,1.739,1725,1.739,1726,1.105,1727,1.739,1728,1.739,1729,1.511,1730,1.739,1731,1.989,1732,1.739,1733,1.739,1734,1.739,1735,2.713,1736,1.615,1737,1.739,1738,1.739,1739,2.713,1740,3.767,1741,3.767,1742,1.739,1743,1.739,1744,3.335,1745,1.739,1746,2.713,1747,2.713,1748,1.739,1749,4.675,1750,2.713,1751,1.739,1752,1.739,1753,1.739,1754,2.713,1755,1.739,1756,1.422,1757,2.713,1758,1.739,1759,1.739,1760,1.344,1761,1.739,1762,1.739,1763,1.739,1764,1.739,1765,1.739,1766,1.739,1767,1.739,1768,1.739,1769,2.713,1770,1.739,1771,2.713,2143,2.422,2144,3.777,2145,2.422,2146,4.941,2147,2.104,2148,2.104,2149,2.422,2150,2.422,2151,2.104,2152,2.104,2153,2.104]],["title/injectables/FileManagementService.html",[52,2.194,304,1.98]],["body/injectables/FileManagementService.html",[0,0.182,3,0.063,4,0.099,5,0.182,6,0.205,7,0.126,9,1.508,14,0.08,15,0.3,17,0.327,18,0.015,19,0.266,21,0.421,22,3.168,24,1.341,25,2.789,29,0.817,32,0.353,36,1.268,38,1.425,46,1.268,48,0.997,52,2.002,54,0.193,59,0.298,68,0.515,80,1.891,88,4.129,101,2.405,103,0.663,105,0.58,115,0.367,117,0.391,123,0.662,133,1.111,134,0.964,135,1.429,137,3.494,138,2.25,150,0.546,160,3.446,176,0.416,179,0.372,180,1.869,194,0.645,223,1.341,247,1.09,252,1.388,256,1.425,261,2.405,262,1.341,263,1.574,266,1.202,290,0.372,293,1.146,301,0.006,302,0.006,303,0.004,304,1.807,306,1.523,312,3.211,316,3.211,319,0.236,321,0.353,324,0.694,327,0.353,333,1.425,334,4.367,335,0.812,336,0.339,339,4.42,348,5.301,357,1.807,358,1.523,365,4.829,371,0.76,372,0.76,382,1.419,405,0.414,439,0.761,480,0.697,510,1.334,550,2.25,586,1.722,617,0.916,687,3.885,688,1.523,702,2.934,713,1.341,718,2.823,726,1.069,916,0.997,922,4.716,948,2.823,950,2.405,952,4.805,955,4.221,958,3.134,971,1.984,973,1.984,983,2.823,986,1.984,987,3.195,990,1.984,993,3.499,998,1.64,999,3.211,1008,3.975,1045,3.134,1137,1.09,1226,2.25,1259,2.002,1262,1.268,1446,3.975,1464,2.239,1497,1.787,1498,3.948,1868,4.413,1919,5.107,1920,5.348,1921,6.149,1922,6.296,1923,4.805,1946,5.543,1947,5.139,1948,5.589,1954,3.134,1955,3.134,1960,5.263,1961,5.139,1963,3.499,1964,3.499,1965,3.647,1977,5.348,1981,4.413,1982,4.413,1983,3.885,1984,5.348,1986,5.843,1987,3.885,1994,6.227,1995,5.107,2070,3.386,2106,3.134,2154,6.509,2155,1.984,2156,3.607,2157,3.607,2158,3.607,2159,3.134,2160,3.134,2161,4.47,2162,5.529,2163,3.607,2164,3.607,2165,5.078,2166,5.078,2167,5.078,2168,5.078,2169,5.078,2170,3.607,2171,3.607,2172,3.607,2173,3.607,2174,2.284,2175,3.607,2176,3.607,2177,2.284,2178,4.328,2179,5.706,2180,6.785,2181,4.805,2182,5.147,2183,4.413,2184,4.805,2185,5.529,2186,6.154,2187,5.348,2188,5.543,2189,3.607,2190,2.284,2191,2.284,2192,2.284,2193,6.566,2194,5.843,2195,5.348,2196,6.566,2197,2.284,2198,2.284,2199,2.284,2200,3.607,2201,2.284,2202,3.607,2203,2.284,2204,3.885,2205,4.413,2206,3.607,2207,3.607,2208,3.607,2209,3.607,2210,3.607,2211,3.607,2212,3.607,2213,3.134,2214,3.607,2215,2.284,2216,2.823,2217,3.607,2218,2.284,2219,3.134,2220,4.413,2221,3.607,2222,3.134,2223,4.47,2224,4.47,2225,3.607,2226,2.284,2227,3.607,2228,3.607,2229,3.607,2230,3.134,2231,3.607,2232,3.607,2233,2.284,2234,2.284,2235,2.284,2236,2.284,2237,2.284,2238,2.284,2239,2.284,2240,2.284,2241,2.284,2242,1.144,2243,1.144,2244,2.284,2245,2.284,2246,3.607,2247,2.284,2248,3.607,2249,2.284,2250,5.877,2251,5.877,2252,2.823,2253,2.284,2254,4.47,2255,1.787,2256,2.284,2257,2.284,2258,4.47,2259,5.877,2260,5.877,2261,4.47,2262,5.078,2263,3.607,2264,2.284,2265,5.877,2266,3.607,2267,5.078,2268,4.47,2269,3.134,2270,3.607,2271,3.607,2272,2.284,2273,3.607,2274,2.284,2275,2.284,2276,4.47,2277,4.47,2278,4.47,2279,3.607,2280,2.284,2281,3.607,2282,2.284,2283,3.607,2284,2.284,2285,2.284,2286,2.284,2287,3.607,2288,5.529,2289,4.47,2290,4.413,2291,2.284,2292,1.984,2293,4.413,2294,2.284,2295,2.284,2296,6.154,2297,6.154,2298,4.47,2299,2.284,2300,2.284,2301,2.284,2302,1.984,2303,2.284,2304,2.284,2305,2.284,2306,2.284,2307,4.47,2308,2.284,2309,2.284,2310,1.984,2311,2.284,2312,2.284,2313,2.284,2314,2.284,2315,2.284,2316,2.284,2317,3.607,2318,2.284,2319,2.284,2320,1.984,2321,2.284,2322,2.284,2323,2.284,2324,2.284,2325,5.529,2326,5.877,2327,4.47,2328,5.877,2329,4.47,2330,5.078,2331,3.607,2332,2.284,2333,3.607,2334,1.984,2335,2.284,2336,2.284,2337,2.284,2338,2.284,2339,1.984,2340,1.984,2341,1.984,2342,2.284,2343,3.607,2344,2.284,2345,2.284,2346,2.284,2347,2.284,2348,2.284,2349,2.284,2350,3.607,2351,3.607,2352,2.284,2353,2.284,2354,2.284,2355,2.284,2356,2.284,2357,2.284,2358,2.284,2359,2.284,2360,2.284,2361,1.984]],["title/directives/FocusDirective.html",[389,0.866,459,0.834]],["body/directives/FocusDirective.html",[0,0.297,3,0.162,4,0.162,5,0.139,6,0.216,7,0.127,14,0.208,15,0.582,17,0.303,18,0.015,19,0.271,21,0.356,54,0.185,59,0.912,103,0.875,105,1.498,115,0.33,117,0.758,133,1.105,179,0.491,290,0.491,301,0.01,302,0.012,303,0.01,319,0.609,321,0.685,324,0.578,327,0.912,337,1.911,371,0.703,372,0.703,380,1.392,381,1.476,389,1.532,458,1.444,459,1.476,460,1.925,482,2.949,518,2.586,527,1.649,617,2.366,2362,5.128,2363,7.451,2364,7.451,2365,7.704,2366,5.901,2367,6.992,2368,5.901,2369,5.901,2370,5.901,2371,6.992,2372,5.901]],["title/classes/LineModel.html",[0,0.199,2373,3.093]],["body/classes/LineModel.html",[0,0.254,1,3.153,2,0.877,3,0.098,4,0.098,5,0.084,6,0.2,7,0.118,9,1.497,14,0.126,15,0.42,17,0.31,18,0.015,19,0.252,21,0.44,32,0.781,54,0.158,59,0.933,68,0.515,103,0.531,116,1.797,117,0.635,123,0.659,133,1.061,134,0.624,135,0.675,150,0.645,160,2.205,176,0.439,179,0.645,194,0.669,248,1.988,249,2.103,252,1.381,259,1.794,262,2.103,289,0.695,290,0.42,293,0.531,301,0.006,302,0.01,303,0.006,319,0.369,327,0.554,335,1.274,336,0.531,337,0.979,352,1.634,374,0.283,381,0.756,388,1.237,410,1.393,412,1.067,421,1.107,422,1.567,465,0.845,480,1.543,482,1.869,498,1.634,500,1.379,510,1.869,525,1.794,527,1.582,604,2.661,608,1.886,613,2.805,617,1.436,702,1.563,709,2.235,743,2.805,758,1.66,867,3.112,868,3.112,891,1.973,892,1.325,1014,0.845,1046,2.026,1048,4.391,1050,4.391,1074,5.526,1084,1.988,1099,2.803,1100,2.388,1146,2.803,1160,3.904,1161,3.955,1163,3.112,1164,4.391,1165,3.112,1175,2.388,1177,2.388,1226,2.235,1227,3.083,1251,3.153,1252,2.967,1266,2.388,1273,1.634,1274,2.235,1288,2.572,1289,1.886,1290,2.388,1308,2.235,1357,1.325,1369,2.261,1404,1.325,1643,2.235,1686,2.103,1716,2.235,2038,4.768,2361,3.112,2373,5.812,2374,6.347,2375,3.112,2376,6.36,2377,7.527,2378,7.304,2379,6.36,2380,6.706,2381,7.684,2382,3.582,2383,3.582,2384,5.855,2385,5.855,2386,5.855,2387,3.582,2388,3.582,2389,3.582,2390,3.582,2391,3.582,2392,3.582,2393,3.582,2394,3.582,2395,3.582,2396,3.112,2397,3.582,2398,3.582,2399,3.582,2400,3.582,2401,3.582,2402,3.582,2403,3.582,2404,3.582,2405,3.582,2406,3.582,2407,3.582,2408,3.582,2409,3.582,2410,3.582,2411,3.582,2412,3.582,2413,3.582,2414,3.582,2415,3.582,2416,3.582,2417,3.582,2418,5.053,2419,3.582,2420,3.582,2421,3.582,2422,3.582,2423,3.582,2424,3.582,2425,3.582,2426,3.582,2427,3.582,2428,5.053,2429,3.582,2430,3.112,2431,3.582,2432,5.053,2433,3.582,2434,3.582,2435,3.582,2436,3.582,2437,5.053,2438,3.582,2439,5.855,2440,3.582,2441,3.582,2442,3.582,2443,3.582,2444,5.053,2445,3.582,2446,3.582,2447,3.582,2448,5.053,2449,3.582,2450,3.582,2451,5.855,2452,3.582,2453,6.36,2454,3.582,2455,3.582,2456,3.582,2457,3.582,2458,3.582,2459,3.582,2460,3.582,2461,3.582,2462,3.582,2463,5.855,2464,3.582,2465,5.053,2466,3.582,2467,5.053,2468,3.582,2469,3.582,2470,5.855,2471,3.582,2472,3.582,2473,2.803,2474,4.205,2475,6.36,2476,4.64,2477,3.582,2478,3.582,2479,3.582,2480,5.053,2481,3.112,2482,3.112,2483,3.582,2484,3.582,2485,3.582,2486,3.582,2487,3.582,2488,3.582,2489,3.582,2490,6.706,2491,3.582,2492,5.855,2493,3.582,2494,2.803,2495,3.582,2496,3.582,2497,3.112,2498,3.582,2499,3.582,2500,5.053,2501,3.582,2502,3.582,2503,3.582,2504,6.36,2505,2.803,2506,2.803,2507,3.582,2508,3.582,2509,3.582,2510,5.053,2511,3.582,2512,3.582,2513,3.112,2514,3.582,2515,3.582,2516,3.582,2517,3.582,2518,5.855,2519,3.582,2520,5.053,2521,3.112,2522,5.855,2523,3.582,2524,3.112,2525,3.582,2526,3.582]],["title/classes/LookupTable.html",[0,0.199,2527,2.081]],["body/classes/LookupTable.html",[0,0.32,2,1.236,3,0.138,4,0.138,5,0.119,6,0.218,7,0.128,14,0.178,15,0.529,17,0.326,18,0.015,19,0.278,54,0.199,68,0.533,105,1.766,115,0.421,117,0.754,135,1.198,150,0.42,176,0.43,179,0.42,194,0.579,290,0.42,301,0.013,302,0.011,303,0.009,319,0.521,321,0.623,324,0.682,371,0.602,372,0.602,425,1.148,726,0.846,1014,1.191,1381,3.347,1803,3.966,1804,3.966,2252,5.715,2255,5.89,2527,3.347,2528,6.229,2529,3.952,2530,5.445,2531,5.445,2532,6.357,2533,6.345,2534,6.345,2535,6.357,2536,4.865,2537,5.05,2538,5.05,2539,5.05,2540,5.524,2541,6.345,2542,5.05,2543,6.539,2544,5.05,2545,5.05,2546,4.565,2547,4.388,2548,5.524,2549,5.524,2550,5.524,2551,5.524,2552,4.388,2553,4.388,2554,4.388,2555,4.388,2556,4.388,2557,4.388,2558,4.388,2559,4.388,2560,5.524,2561,5.524,2562,5.524,2563,6.045,2564,4.388,2565,2.411,2566,4.388,2567,4.388,2568,4.388,2569,6.045,2570,4.388,2571,4.388]],["title/components/LookupTableComponent.html",[374,0.221,424,0.834]],["body/components/LookupTableComponent.html",[0,0.322,3,0.116,4,0.116,5,0.1,6,0.211,7,0.129,14,0.15,15,0.473,17,0.309,18,0.015,19,0.268,21,0.442,29,0.967,32,0.878,54,0.178,59,0.554,68,0.461,103,0.63,115,0.382,117,0.46,123,0.892,134,0.741,135,1.071,150,0.473,176,0.318,179,0.569,194,0.658,264,0.931,265,0.931,278,3.788,289,0.691,293,0.63,301,0.007,302,0.01,303,0.007,321,0.557,324,0.67,327,0.657,336,0.63,337,1.553,371,0.506,372,0.506,374,0.358,375,0.931,376,1.391,377,1.079,378,1.079,380,1.002,381,1.759,382,1.199,383,1.079,385,1.391,386,0.966,387,1.443,388,1.391,389,0.931,390,1.736,391,1.079,392,1.079,393,0.966,394,1.079,395,0.931,396,1.079,397,0.931,398,1.079,399,1.079,400,0.931,401,1.809,402,0.966,403,1.079,404,0.931,405,1.03,406,0.966,407,1.079,408,0.931,409,1.079,410,0.931,411,1.079,412,0.897,413,1.626,414,0.897,415,1.04,416,1.554,417,1.079,418,0.966,419,1.079,420,0.931,421,0.931,422,0.897,423,1.079,424,1.443,425,1.667,426,1.079,427,0.931,428,0.931,429,0.864,430,1.079,431,0.931,432,1.079,433,0.931,434,1.079,435,0.931,436,0.931,437,1.443,438,0.931,439,0.897,440,1.079,441,0.931,442,1.079,443,0.931,444,1.34,445,1.079,446,0.864,447,1.443,448,0.897,449,0.931,450,1.443,451,0.931,452,0.931,453,0.931,454,0.931,455,1.079,456,0.931,457,1.002,458,1.04,459,0.897,460,1.04,461,1.079,464,2.677,465,1.34,472,2.858,473,2.992,474,2.858,482,2.368,492,1.776,500,1.635,501,1.399,509,3.554,622,2.237,696,3.554,891,2.157,892,1.571,1010,1.703,1046,2.278,1091,3.371,1098,2.237,1369,1.511,1513,2.128,2038,2.832,2527,3.371,2536,4.265,2546,4.598,2565,3.501,2572,6.03,2573,3.325,2574,4.937,2575,5.563,2576,5.94,2577,4.248,2578,4.937,2579,4.248,2580,4.248,2581,4.248,2582,5.266,2583,4.248,2584,4.248,2585,4.937,2586,4.248,2587,4.248,2588,2.832,2589,2.832,2590,3.691,2591,3.691,2592,3.691,2593,3.051,2594,3.691,2595,3.691,2596,3.691,2597,3.691,2598,3.691,2599,4.937,2600,3.691,2601,3.325,2602,3.051,2603,3.691,2604,3.691,2605,3.691,2606,3.691,2607,3.691,2608,3.691,2609,3.691,2610,3.691,2611,3.691,2612,3.691,2613,3.691,2614,3.691,2615,3.691,2616,3.691,2617,3.691,2618,4.937,2619,3.691,2620,3.691,2621,3.691,2622,3.691,2623,3.691,2624,3.691,2625,3.691,2626,5.682,2627,5.682]],["title/classes/LookupTableData.html",[0,0.199,2582,2.838]],["body/classes/LookupTableData.html",[0,0.324,2,1.263,3,0.141,4,0.141,5,0.122,6,0.202,7,0.122,14,0.182,15,0.536,17,0.304,18,0.015,19,0.248,21,0.466,29,0.903,54,0.202,59,0.673,68,0.513,103,0.766,123,0.841,135,1.214,150,0.536,176,0.36,179,0.536,194,0.676,278,4.296,289,0.619,301,0.009,302,0.011,303,0.009,327,0.798,336,0.766,337,1.41,374,0.36,381,1.089,416,1.173,424,1.089,425,1.597,464,2.694,465,1.217,472,2.157,474,2.157,482,2.383,500,1.986,501,1.699,509,3.9,622,2.717,696,3.9,891,2.067,892,1.908,1010,2.069,1046,2.584,1091,3.393,1098,2.717,1369,1.835,1513,2.584,2038,3.44,2527,3.393,2536,4.591,2546,5.046,2565,3.355,2572,5.759,2573,4.039,2574,4.484,2575,4.484,2576,4.484,2578,4.484,2582,5.548,2585,4.484,2588,3.44,2589,3.44,2590,6.105,2591,6.105,2592,6.105,2593,3.706,2594,4.484,2595,4.484,2596,4.484,2597,4.484,2598,4.484,2599,5.599,2600,4.484,2601,4.039,2602,3.706,2603,4.484,2604,4.484,2605,4.484,2606,4.484,2607,4.484,2608,4.484,2609,4.484,2610,4.484,2611,4.484,2612,4.484,2613,4.484,2614,4.484,2615,4.484,2616,4.484,2617,4.484,2618,5.599,2619,4.484,2620,4.484,2621,4.484,2622,4.484,2623,4.484,2624,4.484,2625,4.484,2628,5.16,2629,5.16,2630,5.16]],["title/classes/LookupTableEntry.html",[0,0.199,2536,2.466]],["body/classes/LookupTableEntry.html",[0,0.324,2,1.257,3,0.141,4,0.141,5,0.121,6,0.215,7,0.126,14,0.181,15,0.535,17,0.328,18,0.015,19,0.272,54,0.201,68,0.533,105,1.304,115,0.392,117,0.556,135,1.21,150,0.427,176,0.432,179,0.535,194,0.583,290,0.535,301,0.013,302,0.011,303,0.009,319,0.663,321,0.63,324,0.63,371,0.612,372,0.612,425,1.167,726,0.861,1014,1.211,1381,3.383,1803,4.583,1804,4.583,2182,3.688,2252,5.028,2255,5.919,2527,2.704,2528,6.126,2529,4.019,2530,4.019,2531,4.019,2533,4.462,2534,4.462,2536,4.813,2540,4.462,2541,5.582,2543,6.704,2546,5.276,2547,6.383,2548,5.582,2549,5.582,2550,5.582,2551,5.582,2552,5.582,2553,4.462,2554,4.462,2555,4.462,2556,4.462,2557,4.462,2558,4.462,2559,4.462,2560,5.582,2561,5.582,2562,5.582,2563,6.092,2564,4.462,2565,2.452,2566,4.462,2567,4.462,2568,4.462,2569,6.092,2570,4.462,2571,4.462,2631,6.424,2632,5.135,2633,5.135,2634,5.135,2635,5.135,2636,5.135,2637,5.135]],["title/classes/LookupTableUtil.html",[0,0.199,2638,3.093]],["body/classes/LookupTableUtil.html",[0,0.25,2,1.215,3,0.136,4,0.136,5,0.117,6,0.199,7,0.117,9,2.075,14,0.175,17,0.299,18,0.015,19,0.243,21,0.451,28,4.277,30,1.765,54,0.155,68,0.484,115,0.386,124,2.367,133,1.024,135,0.935,150,0.646,176,0.386,179,0.574,194,0.654,289,0.659,301,0.009,302,0.011,303,0.009,321,0.616,324,0.676,371,0.823,372,0.823,500,1.91,890,3.884,891,2.286,892,1.836,918,3.564,1014,1.483,1161,5.679,1369,1.765,1665,3.923,2476,5.29,2497,6.305,2527,3.942,2565,3.71,2588,3.309,2589,3.309,2638,4.921,2639,6.305,2640,5.464,2641,6.288,2642,6.288,2643,6.288,2644,6.288,2645,5.679,2646,4.963,2647,6.288,2648,4.313,2649,6.288,2650,4.963,2651,2.914,2652,3.309,2653,4.963,2654,3.884,2655,7.487,2656,4.963,2657,4.963,2658,7.256,2659,7.487,2660,6.902,2661,6.288,2662,6.288,2663,4.963,2664,4.963,2665,4.963,2666,4.963,2667,6.288,2668,4.963,2669,4.963,2670,6.902,2671,6.902,2672,4.963,2673,4.963,2674,4.963,2675,6.288,2676,4.963]],["title/classes/MappedField.html",[0,0.199,1565,1.585]],["body/classes/MappedField.html",[0,0.278,2,0.786,3,0.088,4,0.151,5,0.076,6,0.195,7,0.116,14,0.194,15,0.389,17,0.279,18,0.015,19,0.25,21,0.418,29,0.8,30,1.143,32,0.497,43,3.022,44,1.609,54,0.172,59,0.903,68,0.512,75,1.343,80,2.07,103,0.954,105,0.816,115,0.339,116,2.648,117,0.858,123,0.61,124,1.621,134,0.56,135,1.264,150,0.661,160,2.405,163,2.142,176,0.462,179,0.558,194,0.679,250,3.674,252,1.834,254,1.692,289,0.723,290,0.389,301,0.01,302,0.008,303,0.006,319,0.482,321,0.458,324,0.593,325,1.534,336,0.477,371,0.557,372,0.557,405,0.847,429,0.653,457,0.758,510,1.729,511,1.692,554,1.729,570,1.609,686,1.343,696,2.595,702,2.04,723,1.692,726,1.262,730,3.553,731,2.745,733,2.745,758,1.562,891,1.375,916,1.402,944,2.308,1014,1.517,1125,2.515,1176,2.005,1177,2.142,1212,1.402,1273,1.466,1340,1.887,1346,2.515,1356,3.659,1357,2.754,1358,2.515,1369,1.662,1372,2.308,1376,1.887,1404,2.038,1419,3.674,1440,2.515,1464,1.609,1476,3.117,1485,2.515,1490,3.659,1499,2.515,1565,3.301,1583,1.784,1612,1.784,1623,2.005,1654,2.405,1657,2.005,1726,1.466,1729,2.005,1731,3.87,1775,2.895,1852,3.236,1899,2.515,1902,2.142,1903,3.659,1927,1.609,1969,2.515,2242,1.609,2243,1.609,2473,2.515,2476,2.142,2494,2.515,2505,2.515,2506,2.515,2677,2.515,2678,4.789,2679,5.259,2680,4.062,2681,4.675,2682,3.213,2683,3.213,2684,4.618,2685,3.213,2686,3.213,2687,3.213,2688,3.659,2689,3.213,2690,4.062,2691,3.213,2692,2.515,2693,3.236,2694,2.792,2695,3.117,2696,2.792,2697,2.792,2698,2.792,2699,2.792,2700,2.792,2701,2.792,2702,2.792,2703,2.792,2704,2.792,2705,2.792,2706,3.358,2707,2.515,2708,3.659,2709,4.618,2710,2.515,2711,2.792,2712,2.792,2713,2.792,2714,2.792,2715,2.792,2716,2.792,2717,2.792,2718,4.062,2719,2.792,2720,2.308,2721,2.308,2722,5.259,2723,2.792,2724,5.259,2725,2.792,2726,4.789,2727,2.792,2728,2.792,2729,2.792,2730,4.062,2731,4.062,2732,2.792,2733,4.789,2734,2.792,2735,2.792,2736,2.792,2737,4.062,2738,4.789,2739,4.789,2740,2.792,2741,2.792,2742,2.792,2743,2.792,2744,2.792,2745,2.515,2746,2.792,2747,2.792,2748,2.515,2749,4.789,2750,2.792,2751,2.792,2752,2.792,2753,4.789,2754,4.062,2755,2.792,2756,4.789,2757,4.789,2758,2.792,2759,2.792,2760,2.792,2761,2.792,2762,2.308,2763,2.792,2764,2.792,2765,2.792,2766,2.792,2767,4.789,2768,2.792,2769,2.792,2770,2.792,2771,2.515,2772,2.515,2773,2.792,2774,4.062,2775,4.062,2776,2.792,2777,2.792,2778,2.792,2779,2.792,2780,2.792,2781,2.792,2782,2.792,2783,2.792,2784,4.062,2785,4.062,2786,3.659,2787,2.792,2788,2.792,2789,2.792,2790,4.062,2791,4.062,2792,2.515,2793,2.792,2794,2.792,2795,2.792,2796,2.792,2797,2.792,2798,2.792,2799,2.792,2800,2.515,2801,2.792,2802,2.792,2803,2.792,2804,2.792,2805,2.515,2806,2.792]],["title/classes/MappedFieldParsingData.html",[0,0.199,2684,2.838]],["body/classes/MappedFieldParsingData.html",[0,0.275,2,0.772,3,0.086,4,0.149,5,0.074,6,0.206,7,0.122,14,0.192,15,0.384,17,0.306,18,0.015,19,0.264,21,0.415,29,0.794,30,1.121,32,0.487,43,3.005,44,1.579,54,0.171,59,0.955,68,0.522,75,1.318,80,2.052,103,0.947,105,0.8,115,0.258,116,2.51,117,0.848,123,0.601,124,0.928,134,0.55,135,1.202,150,0.672,160,2.379,163,2.102,176,0.461,179,0.531,194,0.678,250,3.634,252,1.822,254,1.66,289,0.72,290,0.617,301,0.009,302,0.008,303,0.005,319,0.765,325,1.506,336,0.468,405,0.836,457,0.744,510,1.705,511,1.66,554,1.705,570,1.579,686,1.318,696,2.559,702,2.012,723,1.66,726,1.257,730,3.521,731,2.707,733,2.707,758,1.546,891,1.357,916,1.376,944,2.264,1014,1.505,1125,2.468,1176,1.967,1177,2.102,1212,1.376,1273,1.438,1340,1.851,1346,4.266,1356,3.609,1357,2.743,1358,2.468,1369,1.639,1372,2.264,1376,1.851,1404,2.016,1419,3.634,1440,2.468,1464,1.579,1476,3.074,1485,2.468,1490,3.609,1499,2.468,1565,3.282,1583,1.75,1612,1.75,1623,1.967,1654,2.379,1657,1.967,1726,1.438,1729,1.967,1731,3.791,1775,2.668,1852,1.851,1899,2.468,1902,2.102,1903,3.609,1927,1.579,1969,2.468,2242,1.579,2243,1.579,2473,2.468,2476,2.102,2494,2.468,2505,2.468,2506,2.468,2677,2.468,2678,2.74,2679,2.74,2684,4.307,2688,2.468,2690,2.74,2692,2.468,2693,3.201,2694,2.74,2695,3.074,2696,4.737,2697,4.737,2698,4.737,2699,4.737,2700,4.737,2701,4.737,2702,4.737,2703,4.737,2704,4.737,2705,4.737,2706,3.311,2707,2.468,2708,3.609,2709,4.583,2710,2.468,2711,2.74,2712,2.74,2713,2.74,2714,2.74,2715,2.74,2716,2.74,2717,2.74,2718,4.007,2719,2.74,2720,2.264,2721,2.264,2722,5.212,2723,2.74,2724,5.212,2725,2.74,2726,4.737,2727,2.74,2728,2.74,2729,2.74,2730,4.007,2731,4.007,2732,2.74,2733,4.737,2734,2.74,2735,2.74,2736,2.74,2737,4.007,2738,4.737,2739,4.737,2740,2.74,2741,2.74,2742,2.74,2743,2.74,2744,2.74,2745,2.468,2746,2.74,2747,2.74,2748,2.468,2749,4.737,2750,2.74,2751,2.74,2752,2.74,2753,4.737,2754,4.007,2755,2.74,2756,4.737,2757,4.737,2758,2.74,2759,2.74,2760,2.74,2761,2.74,2762,2.264,2763,2.74,2764,2.74,2765,2.74,2766,2.74,2767,4.737,2768,2.74,2769,2.74,2770,2.74,2771,2.468,2772,2.468,2773,2.74,2774,4.007,2775,4.007,2776,2.74,2777,2.74,2778,2.74,2779,2.74,2780,2.74,2781,2.74,2782,2.74,2783,2.74,2784,4.007,2785,4.007,2786,3.609,2787,2.74,2788,2.74,2789,2.74,2790,4.007,2791,4.007,2792,2.468,2793,2.74,2794,2.74,2795,2.74,2796,2.74,2797,2.74,2798,2.74,2799,2.74,2800,2.468,2801,2.74,2802,2.74,2803,2.74,2804,2.74,2805,2.468,2806,2.74,2807,3.153,2808,3.153,2809,3.153,2810,3.153,2811,3.153,2812,3.153,2813,3.153,2814,3.153,2815,3.153,2816,3.153,2817,3.153]],["title/classes/MappingDefinition.html",[0,0.199,28,2.081]],["body/classes/MappingDefinition.html",[0,0.211,2,1.023,3,0.115,4,0.115,5,0.099,6,0.223,7,0.131,14,0.147,15,0.468,17,0.35,18,0.015,19,0.286,21,0.427,28,2.96,29,0.67,30,1.487,31,2.547,54,0.131,68,0.526,105,1.613,115,0.444,117,0.808,133,1.139,138,2.609,150,0.631,160,3.308,176,0.43,179,0.528,194,0.646,254,3.576,289,0.624,290,0.631,301,0.007,302,0.01,303,0.007,319,0.782,321,0.551,324,0.753,371,0.889,372,0.889,405,0.758,499,2.094,500,1.609,891,2.347,916,1.825,1369,1.487,1381,2.202,1566,2.788,1583,2.321,2216,4.971,2242,2.094,2243,2.094,2474,4.561,2476,3.748,2527,4.238,2530,4.4,2531,5.316,2565,3.384,2588,2.788,2589,2.788,2720,3.003,2721,3.003,2805,3.272,2818,7.062,2819,3.272,2820,6.351,2821,7.087,2822,6.351,2823,6.351,2824,5.519,2825,5.622,2826,5.622,2827,5.622,2828,5.622,2829,5.622,2830,6.792,2831,4.885,2832,5.622,2833,6.792,2834,5.622,2835,3.633,2836,3.633,2837,4.181,2838,3.633,2839,4.181,2840,5.622,2841,3.633,2842,3.633,2843,5.622,2844,4.181,2845,5.622,2846,4.181,2847,5.622,2848,4.181,2849,5.622,2850,5.622,2851,3.633,2852,5.622,2853,4.181,2854,4.181,2855,5.622,2856,4.181,2857,5.622,2858,4.181,2859,4.181,2860,5.622,2861,4.181,2862,4.181,2863,4.181,2864,6.792,2865,4.181,2866,4.181,2867,4.181,2868,4.181,2869,4.181,2870,4.181,2871,4.181,2872,4.181,2873,4.181,2874,4.181,2875,5.622,2876,4.181,2877,4.885,2878,5.622,2879,4.181,2880,4.181]],["title/components/MappingDetailComponent.html",[374,0.221,427,0.866]],["body/components/MappingDetailComponent.html",[0,0.279,3,0.112,4,0.112,5,0.097,6,0.212,7,0.127,14,0.144,15,0.461,17,0.314,18,0.015,19,0.27,21,0.455,29,0.969,32,0.857,54,0.128,59,0.535,68,0.359,115,0.394,123,0.82,133,1.076,134,1.096,137,1.957,176,0.229,179,0.628,194,0.604,264,0.898,265,0.898,289,0.704,293,0.608,301,0.007,302,0.01,303,0.007,321,0.544,324,0.69,327,0.634,335,1.457,336,0.608,337,1.516,371,0.661,372,0.661,374,0.352,375,0.898,376,1.357,377,1.04,378,1.04,380,0.967,381,1.755,382,1.171,383,1.04,385,1.357,386,0.932,387,1.408,388,1.357,389,0.898,390,1.71,391,1.04,392,1.04,393,0.932,394,1.04,395,0.898,396,1.04,397,1.476,398,1.408,399,1.04,400,0.898,401,1.787,402,0.932,403,1.04,404,0.898,405,1.005,406,0.932,407,1.04,408,0.898,409,1.04,410,0.898,411,1.04,412,0.865,413,1.596,414,0.865,415,1.003,416,1.531,417,1.04,418,0.932,419,1.04,420,0.898,421,0.898,422,0.865,423,1.04,424,0.865,425,1.261,426,1.04,427,1.542,428,0.898,429,0.833,430,1.04,431,0.898,432,1.04,433,0.898,434,1.04,435,0.898,436,0.898,437,1.408,438,0.898,439,0.865,440,1.04,441,1.625,442,1.04,443,0.898,444,1.308,445,1.04,446,0.833,447,1.408,448,1.593,449,0.898,450,1.408,451,0.898,452,0.898,453,0.898,454,0.898,455,1.04,456,0.898,457,0.967,458,1.003,459,0.865,460,1.003,461,1.04,465,1.308,480,1.251,492,1.713,498,1.869,500,1.577,501,1.349,518,2.051,525,3.149,527,1.483,604,3.31,608,3.547,613,3.489,622,2.92,865,3.561,879,3.561,891,1.85,892,1.516,1021,2.943,1022,4.341,1023,4.341,1044,3.691,1053,3.561,1084,3.078,1090,3.561,1093,3.561,1181,2.943,1183,3.698,1184,3.698,1189,3.698,1190,2.732,1191,4.491,1193,3.698,1195,3.561,1202,2.732,1203,3.698,1211,3.698,1212,2.743,1214,2.943,1215,2.732,1216,2.943,1227,2.158,1252,3.691,1290,4.491,1318,2.943,2474,2.943,2831,4.819,2877,4.819,2881,3.873,2882,6.286,2883,6.286,2884,7.255,2885,4.819,2886,3.561,2887,3.561,2888,4.098,2889,5.546,2890,4.098,2891,5.546,2892,4.098,2893,4.098,2894,5.546,2895,4.098,2896,4.098,2897,4.098,2898,4.098,2899,4.098,2900,3.561,2901,4.098,2902,4.098,2903,4.098,2904,4.098,2905,4.098,2906,4.098,2907,4.098,2908,4.098,2909,4.098,2910,4.098,2911,4.098,2912,4.098,2913,4.098,2914,4.098,2915,5.546,2916,5.546,2917,5.546,2918,5.546,2919,5.546,2920,5.546]],["title/components/MappingFieldActionArgumentComponent.html",[374,0.221,428,0.866]],["body/components/MappingFieldActionArgumentComponent.html",[0,0.23,3,0.085,4,0.085,5,0.073,6,0.216,7,0.128,9,1.303,14,0.224,15,0.38,17,0.337,18,0.015,19,0.277,21,0.4,29,0.915,32,0.707,54,0.098,59,0.778,68,0.493,77,3.502,80,2.172,103,0.803,105,1.375,115,0.414,117,0.587,123,0.706,133,0.803,134,0.944,150,0.528,176,0.423,179,0.585,194,0.585,252,1.923,264,0.683,265,0.683,288,3.283,289,0.726,290,0.585,293,0.462,295,3.976,301,0.005,302,0.008,303,0.005,319,0.558,321,0.448,324,0.715,327,0.482,336,0.462,352,2.72,371,0.838,372,0.838,374,0.355,375,0.683,376,1.119,377,0.791,378,0.791,380,0.735,381,1.724,382,0.965,383,0.791,385,1.119,386,0.708,387,1.161,388,1.119,389,0.683,390,1.514,391,0.791,392,0.791,393,0.708,394,0.791,395,0.683,396,0.791,397,0.683,398,0.791,399,0.791,400,0.683,401,1.612,402,0.708,403,0.791,404,0.683,405,0.981,406,0.708,407,0.791,408,0.683,409,0.791,410,0.683,411,0.791,412,0.658,413,1.375,414,0.658,415,0.763,416,1.231,417,0.791,418,0.708,419,0.791,420,0.683,421,0.683,422,0.658,423,0.791,424,0.658,425,0.708,426,0.791,427,0.683,428,1.306,429,1.669,430,0.791,431,0.683,432,0.791,433,0.683,434,0.791,435,0.683,436,0.683,437,1.161,438,0.683,439,0.658,440,0.791,441,0.683,442,0.791,443,0.683,444,1.407,445,0.791,446,0.633,447,1.161,448,0.658,449,0.683,450,1.161,451,0.683,452,0.683,453,0.683,454,0.683,455,0.791,456,0.683,457,0.735,458,0.763,459,0.658,460,0.763,461,0.791,465,1.078,480,1.821,510,1.691,511,2.407,518,1.691,527,1.783,533,4.279,552,4.283,554,1.691,686,1.911,702,2.897,726,1,758,2.069,833,3.283,892,1.152,897,3.048,916,1.36,978,3.972,980,3.578,987,2.289,1046,1.833,1084,1.729,1111,3.972,1137,3.17,1215,2.077,1390,2.439,1565,2.662,1614,2.684,1643,2.852,1646,3.976,1726,2.72,1760,1.729,1775,2.868,1782,3.502,1794,3.985,1795,3.502,1812,1.829,1819,4.476,1852,2.684,1877,3.048,1881,3.048,1926,1.944,1927,1.561,2123,3.972,2242,1.561,2243,1.561,2652,2.077,2693,1.829,2881,3.95,2921,2.707,2922,4.571,2923,5.414,2924,4.704,2925,4.571,2926,4.571,2927,5.964,2928,4.571,2929,4.571,2930,3.578,2931,5.182,2932,4.571,2933,4.571,2934,4.571,2935,7.035,2936,6.859,2937,7.035,2938,4.571,2939,3.116,2940,3.116,2941,3.116,2942,3.116,2943,3.116,2944,3.116,2945,4.571,2946,3.116,2947,4.571,2948,3.116,2949,5.964,2950,3.283,2951,5.369,2952,3.578,2953,3.116,2954,3.972,2955,4.571,2956,3.116,2957,4.571,2958,3.116,2959,4.571,2960,4.571,2961,4.571,2962,4.571,2963,3.578,2964,3.972,2965,4.571,2966,3.116,2967,3.578,2968,4.571,2969,4.571,2970,4.571,2971,4.571,2972,3.116,2973,4.571,2974,4.786,2975,3.116,2976,4.571,2977,4.571,2978,3.116,2979,4.571,2980,3.116,2981,4.571,2982,4.571,2983,5.414,2984,3.972,2985,5.414,2986,3.116,2987,2.077,2988,2.439,2989,3.116,2990,2.439,2991,3.578,2992,2.707,2993,3.972,2994,4.571,2995,2.852,2996,3.116,2997,4.571,2998,3.116,2999,3.116,3000,2.707,3001,3.116,3002,3.116,3003,3.116,3004,2.707,3005,3.116,3006,3.116,3007,3.116,3008,3.116,3009,2.707,3010,3.116,3011,3.116,3012,3.116,3013,3.116,3014,2.707,3015,3.116,3016,2.439,3017,2.439,3018,4.571,3019,2.439,3020,3.116,3021,2.707,3022,3.116,3023,4.571,3024,3.116,3025,3.116,3026,3.116,3027,3.116,3028,3.116,3029,3.116,3030,3.116,3031,3.116,3032,2.707,3033,4.571,3034,6.638,3035,4.571,3036,3.972]],["title/components/MappingFieldActionComponent.html",[374,0.221,431,0.866]],["body/components/MappingFieldActionComponent.html",[0,0.277,3,0.111,4,0.111,5,0.095,6,0.215,7,0.128,14,0.255,15,0.457,17,0.32,18,0.015,19,0.274,21,0.422,29,0.962,32,0.849,54,0.126,68,0.404,77,3.665,80,2.291,115,0.404,116,2.219,117,0.783,123,0.814,134,1.088,137,2.623,176,0.375,179,0.519,194,0.583,252,1.501,264,0.885,265,0.885,266,2.128,289,0.731,290,0.336,293,0.599,301,0.007,302,0.01,303,0.007,319,0.567,321,0.538,324,0.708,327,0.625,336,0.599,371,0.744,372,0.744,374,0.349,375,0.885,376,1.344,377,1.026,378,1.026,380,0.953,381,1.754,382,1.159,383,1.026,385,1.344,386,0.919,387,1.395,388,1.344,389,0.885,390,1.7,391,1.026,392,1.026,393,0.919,394,1.026,395,0.885,396,1.026,397,0.885,398,1.026,399,1.026,400,0.885,401,1.778,402,0.919,403,1.026,404,0.885,405,1.131,406,0.919,407,1.026,408,0.885,409,1.026,410,0.885,411,1.026,412,0.853,413,1.585,414,0.853,415,0.989,416,1.419,417,1.026,418,0.919,419,1.026,420,0.885,421,0.885,422,0.853,423,1.026,424,0.853,425,0.919,426,1.026,427,0.885,428,0.885,429,1.622,430,1.026,431,1.467,432,1.026,433,0.885,434,1.026,435,0.885,436,0.885,437,1.395,438,0.885,439,0.853,440,1.026,441,0.885,442,1.026,443,0.885,444,1.58,445,1.026,446,0.821,447,1.395,448,0.853,449,0.885,450,1.395,451,0.885,452,0.885,453,0.885,454,0.885,455,1.026,456,0.885,457,0.953,458,0.989,459,0.853,460,0.989,461,1.026,465,1.296,480,1.678,518,2.032,527,1.652,533,3.894,640,3.945,726,1.174,758,1.77,891,1.836,892,1.494,916,1.763,1046,1.62,1078,2.521,1137,2.623,1212,2.397,1357,1.494,1565,2.897,1726,2.506,1775,3.09,1784,3.526,1795,3.226,1796,2.128,1802,3.894,1805,3.226,1807,2.243,1811,2.521,1812,2.373,1819,3.226,1852,3.226,1877,3.663,1926,2.521,1927,2.024,2242,2.024,2243,2.024,2680,4.774,2688,4.299,2881,3.928,2930,4.885,2931,5.82,2950,3.945,2951,4.885,2952,4.299,2992,3.511,2995,2.521,3016,3.162,3017,3.162,3019,3.162,3021,3.511,3037,3.511,3038,5.493,3039,6.697,3040,4.774,3041,6.697,3042,4.774,3043,4.041,3044,4.041,3045,4.041,3046,4.041,3047,4.041,3048,4.774,3049,4.041,3050,4.041,3051,4.041,3052,4.774,3053,4.041,3054,4.774,3055,4.041,3056,4.774,3057,4.774,3058,4.041,3059,4.299,3060,3.945,3061,4.041,3062,4.041,3063,4.774,3064,4.041,3065,4.041,3066,3.511,3067,3.511,3068,3.511,3069,3.511,3070,3.511,3071,3.162,3072,3.511,3073,3.511,3074,3.511,3075,3.511,3076,3.511,3077,3.511,3078,4.774]],["title/components/MappingFieldContainerComponent.html",[374,0.221,433,0.866]],["body/components/MappingFieldContainerComponent.html",[0,0.22,3,0.08,4,0.159,5,0.069,6,0.221,7,0.13,14,0.103,15,0.363,17,0.336,18,0.015,19,0.283,21,0.417,29,0.923,32,0.675,54,0.092,59,0.901,68,0.492,75,1.825,103,1.048,105,1.571,115,0.422,116,1.856,117,0.791,123,0.681,133,1.127,134,0.91,150,0.588,176,0.428,179,0.637,194,0.559,195,1.541,248,1.625,249,1.719,252,0.8,264,0.641,265,0.641,289,0.729,290,0.575,293,0.434,301,0.005,302,0.008,303,0.005,319,0.669,321,0.428,324,0.755,327,0.453,334,3.064,335,1.041,336,0.434,337,1.193,371,0.842,372,0.842,374,0.292,375,0.641,376,1.068,377,0.743,378,0.743,380,0.69,381,1.716,382,0.921,383,0.743,385,1.068,386,0.665,387,1.108,388,1.068,389,0.641,390,1.469,391,0.743,392,0.743,393,0.665,394,0.743,395,0.641,396,0.743,397,0.641,398,0.743,399,0.743,400,0.641,401,1.571,402,0.665,403,0.743,404,0.641,405,0.946,406,0.665,407,0.743,408,0.641,409,0.743,410,0.641,411,0.743,412,0.618,413,1.325,414,0.618,415,0.716,416,1.315,417,0.743,418,0.665,419,0.743,420,0.641,421,0.641,422,0.618,423,0.743,424,0.618,425,0.665,426,0.743,427,0.641,428,0.641,429,0.595,430,0.743,431,0.641,432,0.743,433,1.267,434,0.743,435,0.641,436,0.641,437,1.108,438,0.641,439,0.618,440,0.743,441,0.641,442,0.743,443,0.641,444,1.03,445,0.743,446,0.595,447,1.108,448,1.221,449,0.641,450,1.108,451,0.641,452,0.641,453,0.641,454,0.641,455,0.743,456,0.641,457,0.69,458,0.716,459,0.618,460,0.716,461,0.743,465,1.03,480,2.157,500,1.127,501,0.964,518,1.614,525,2.614,527,1.531,604,2.748,608,3.046,640,3.134,660,4.535,710,2.543,726,1.088,744,3.792,745,2.543,746,2.543,758,1.237,832,1.951,891,1.702,892,1.082,916,1.277,940,3.792,942,3.792,1014,0.69,1026,4.535,1027,3.792,1028,3.792,1030,4.535,1040,3.792,1042,3.792,1044,3.064,1055,3.792,1057,3.792,1058,5.027,1062,3.792,1089,3.792,1103,2.543,1108,4.535,1121,3.792,1122,2.543,1123,2.543,1124,2.543,1127,4.535,1128,4.084,1129,3.748,1143,1.951,1224,2.543,1227,1.541,1332,4.528,1357,1.93,1369,1.041,1404,2.139,1461,4.528,1565,2.962,1614,3.397,1654,1.905,1689,1.277,1731,1.541,1756,1.719,1876,3.792,2057,4.535,2063,3.792,2068,3.792,2070,3.857,2089,2.543,2090,2.543,2126,3.792,2129,2.543,2130,2.543,2132,2.543,2133,2.543,2178,2.291,2242,1.466,2243,1.466,2320,2.543,2474,2.102,2651,1.719,2652,1.951,2706,2.102,2762,3.134,2881,4.036,2900,2.543,2995,1.826,3014,2.543,3060,4.962,3079,2.543,3080,4.364,3081,4.364,3082,5.219,3083,5.219,3084,4.084,3085,4.535,3086,5.785,3087,5.785,3088,5.785,3089,5.785,3090,5.785,3091,5.785,3092,5.785,3093,3.792,3094,3.792,3095,4.364,3096,4.364,3097,2.927,3098,2.927,3099,2.927,3100,2.927,3101,2.927,3102,2.927,3103,2.927,3104,2.927,3105,5.785,3106,2.927,3107,2.927,3108,4.084,3109,4.364,3110,4.364,3111,4.364,3112,4.364,3113,2.927,3114,2.927,3115,2.927,3116,4.364,3117,2.927,3118,2.927,3119,2.927,3120,2.927,3121,2.927,3122,4.364,3123,2.927,3124,5.785,3125,2.927,3126,4.364,3127,2.927,3128,2.927,3129,2.927,3130,2.927,3131,2.927,3132,2.927,3133,2.927,3134,2.927,3135,2.927,3136,4.364,3137,4.364,3138,4.364,3139,5.219,3140,2.927,3141,4.364,3142,2.927,3143,2.927,3144,2.927,3145,2.291,3146,2.927,3147,2.927,3148,2.927,3149,4.364,3150,4.364,3151,2.927,3152,2.927,3153,2.927,3154,2.927,3155,2.927,3156,2.927,3157,5.219,3158,2.543,3159,2.927,3160,2.927,3161,2.543,3162,2.927,3163,2.927,3164,3.792,3165,2.927,3166,4.364,3167,4.364,3168,2.543,3169,2.927,3170,5.219,3171,4.535,3172,2.291,3173,2.102,3174,1.951,3175,3.416,3176,2.927,3177,2.927,3178,2.291,3179,2.927,3180,2.927,3181,2.927,3182,2.927,3183,2.927,3184,2.927,3185,2.927,3186,2.543,3187,2.543]],["title/components/MappingFieldDetailComponent.html",[374,0.221,435,0.866]],["body/components/MappingFieldDetailComponent.html",[0,0.249,3,0.095,4,0.095,5,0.082,6,0.217,7,0.129,10,3.833,14,0.263,15,0.411,17,0.314,18,0.015,19,0.28,21,0.378,29,0.936,32,0.763,54,0.108,59,0.452,68,0.469,103,0.732,115,0.37,116,2.044,117,0.768,123,0.75,133,1.093,134,1.002,135,0.653,137,2.357,150,0.65,176,0.427,179,0.613,194,0.551,252,1.349,264,0.759,265,0.759,289,0.728,290,0.613,293,0.514,301,0.006,302,0.009,303,0.006,321,0.484,324,0.741,327,0.536,336,0.514,337,1.349,371,0.588,372,0.588,374,0.322,375,0.759,376,1.208,377,0.88,378,0.88,380,0.817,381,1.737,382,1.042,383,0.88,385,1.208,386,0.788,387,1.253,388,1.208,389,0.759,390,1.591,391,0.88,392,0.88,393,0.788,394,0.88,395,0.759,396,0.88,397,0.759,398,0.88,399,0.88,400,0.759,401,1.682,402,0.788,403,0.88,404,0.759,405,0.895,406,0.788,407,0.88,408,0.759,409,0.88,410,0.759,411,0.88,412,0.731,413,1.46,414,0.731,415,0.848,416,1.307,417,0.88,418,0.788,419,0.88,420,0.759,421,0.759,422,0.731,423,0.88,424,0.731,425,0.788,426,0.88,427,0.759,428,0.759,429,1.399,430,0.88,431,0.759,432,0.88,433,0.759,434,0.88,435,1.373,436,0.759,437,1.253,438,0.759,439,0.731,440,0.88,441,0.759,442,0.88,443,0.759,444,1.164,445,0.88,446,0.704,447,1.253,448,0.731,449,0.759,450,1.253,451,0.759,452,0.759,453,0.759,454,0.759,455,0.88,456,0.759,457,0.817,458,0.848,459,0.731,460,0.848,461,0.88,465,1.164,480,1.507,509,1.923,510,1.825,518,1.825,527,1.562,530,3.679,604,3.027,608,3.299,702,2.154,726,1.11,819,2.31,891,1.692,892,1.281,897,3.291,950,3.291,1014,0.817,1021,2.488,1022,3.863,1023,3.863,1046,2.305,1052,3.011,1095,3.011,1138,2.31,1357,1.825,1553,3.291,1565,3.179,1654,3.216,1686,3.376,1726,3.14,1731,1.824,1775,2.404,1852,2.034,1877,4.416,1926,2.162,1927,1.735,2138,3.011,2139,3.011,2141,3.011,2142,3.011,2230,4.289,2593,2.488,2706,3.545,2762,3.545,2800,4.5,2881,3.97,2886,3.011,2887,3.011,2991,4.904,2995,3.079,3059,2.712,3060,2.488,3093,4.289,3158,3.011,3164,3.011,3186,3.011,3187,3.011,3188,6.623,3189,5.749,3190,6.266,3191,6.266,3192,5.445,3193,5.982,3194,5.445,3195,5.445,3196,4.936,3197,6.266,3198,6.266,3199,3.465,3200,3.465,3201,3.465,3202,3.465,3203,3.465,3204,3.465,3205,3.465,3206,3.465,3207,3.465,3208,3.465,3209,4.936,3210,3.465,3211,4.936,3212,4.936,3213,3.863,3214,5.749,3215,4.129,3216,4.289,3217,4.936,3218,4.936,3219,4.936,3220,4.936,3221,4.936,3222,3.465,3223,3.465,3224,4.936,3225,4.936,3226,4.936,3227,4.289,3228,3.465,3229,3.465,3230,3.011,3231,3.465,3232,4.996,3233,3.465,3234,5.749,3235,3.465,3236,4.289,3237,3.465,3238,3.465,3239,6.266,3240,3.465,3241,3.465,3242,5.749,3243,3.465,3244,3.465,3245,3.465,3246,3.465,3247,3.465,3248,3.465,3249,3.465,3250,3.011,3251,3.011,3252,3.011,3253,3.465,3254,4.289,3255,4.289,3256,4.936,3257,3.465]],["title/components/MappingListComponent.html",[374,0.221,436,0.866]],["body/components/MappingListComponent.html",[0,0.257,3,0.099,4,0.099,5,0.085,6,0.218,7,0.13,14,0.237,15,0.424,17,0.33,18,0.015,19,0.28,21,0.406,29,0.96,30,1.288,31,1.452,32,0.788,54,0.113,59,0.834,68,0.511,103,0.874,115,0.416,116,2.095,117,0.807,123,0.768,133,1.105,134,1.027,150,0.581,160,2.939,176,0.44,179,0.581,194,0.581,248,2.827,249,2.991,264,0.794,265,0.794,289,0.678,290,0.49,293,0.537,301,0.006,302,0.009,303,0.01,319,0.608,321,0.499,324,0.761,327,0.56,336,0.537,371,0.832,372,0.832,374,0.33,375,0.794,376,1.247,377,0.92,378,0.92,380,0.855,381,1.742,382,1.075,383,0.92,385,1.247,386,0.824,387,1.293,388,1.247,389,0.794,390,1.623,391,0.92,392,0.92,393,0.824,394,0.92,395,0.794,396,0.92,397,0.794,398,0.92,399,0.92,400,0.794,401,1.71,402,0.824,403,0.92,404,0.794,405,0.923,406,0.824,407,0.92,408,0.794,409,0.92,410,0.794,411,0.92,412,0.765,413,1.496,414,0.765,415,0.887,416,1.339,417,0.92,418,0.824,419,0.92,420,0.794,421,0.794,422,0.765,423,0.92,424,0.765,425,0.824,426,0.92,427,0.794,428,0.794,429,0.736,430,0.92,431,0.794,432,0.92,433,0.794,434,0.92,435,0.794,436,1.4,437,1.293,438,0.794,439,1.243,440,0.92,441,0.794,442,0.92,443,0.794,444,1.202,445,0.92,446,0.736,447,1.293,448,0.765,449,0.794,450,1.293,451,0.794,452,0.794,453,0.794,454,0.794,455,0.92,456,0.794,457,0.855,458,0.887,459,0.765,460,0.887,461,0.92,465,1.202,499,1.814,500,1.394,518,1.884,527,1.202,530,2.991,709,2.26,726,0.607,758,1.67,891,2.362,892,1.34,960,2.835,962,2.835,1014,0.855,1156,5.153,1176,2.26,1227,2.682,1369,1.288,1565,2.563,1689,1.581,1760,2.011,2070,2.415,2709,2.602,2881,3.993,2885,4.426,3084,5.271,3108,5.271,3175,5.616,3258,2.835,3259,4.426,3260,5.119,3261,5.119,3262,5.094,3263,5.554,3264,5.094,3265,5.094,3266,6.391,3267,6.391,3268,5.554,3269,5.554,3270,5.094,3271,5.554,3272,5.554,3273,3.622,3274,5.094,3275,3.622,3276,3.148,3277,5.094,3278,3.622,3279,5.094,3280,3.622,3281,3.622,3282,3.622,3283,3.622,3284,3.622,3285,5.094,3286,3.622,3287,4.426,3288,3.622,3289,3.622,3290,5.094,3291,3.622,3292,3.622,3293,3.622,3294,3.148,3295,3.148,3296,6.556,3297,5.119,3298,3.148,3299,2.835,3300,3.622,3301,4.426,3302,4.426,3303,5.119,3304,5.094,3305,3.622,3306,3.148,3307,3.148,3308,2.602,3309,3.148,3310,3.148,3311,5.094,3312,5.891,3313,3.622,3314,3.622,3315,3.622,3316,3.622,3317,3.622,3318,3.622,3319,5.094]],["title/components/MappingListFieldComponent.html",[374,0.221,438,0.866]],["body/components/MappingListFieldComponent.html",[0,0.3,3,0.125,4,0.125,5,0.108,6,0.214,7,0.129,14,0.161,17,0.305,18,0.015,19,0.272,21,0.4,29,0.957,32,0.921,54,0.143,59,0.595,68,0.455,103,0.884,115,0.371,116,2.358,117,0.811,123,0.865,134,1.156,150,0.643,176,0.426,264,0.999,265,0.999,289,0.694,293,0.677,301,0.008,302,0.01,303,0.008,321,0.584,324,0.689,327,0.705,336,0.677,374,0.371,375,0.999,376,1.458,377,1.158,378,1.158,380,1.076,381,1.766,382,1.257,383,1.158,385,1.458,386,1.037,387,1.512,388,1.458,389,0.999,390,1.785,391,1.158,392,1.158,393,1.037,394,1.158,395,0.999,396,1.158,397,0.999,398,1.158,399,1.158,400,0.999,401,1.852,402,1.037,403,1.158,404,0.999,405,1.08,406,1.037,407,1.158,408,0.999,409,1.158,410,0.999,411,1.158,412,0.963,413,1.684,414,0.963,415,1.116,416,1.508,417,1.158,418,1.037,419,1.158,420,0.999,421,0.999,422,0.963,423,1.158,424,0.963,425,1.037,426,1.158,427,0.999,428,0.999,429,0.927,430,1.158,431,0.999,432,1.158,433,0.999,434,1.158,435,0.999,436,0.999,437,1.512,438,1.54,439,1.703,440,1.158,441,0.999,442,1.158,443,0.999,444,1.405,445,1.158,446,0.927,447,1.512,448,0.963,449,0.999,450,1.512,451,0.999,452,0.999,453,0.999,454,0.999,455,1.158,456,0.999,457,1.076,458,1.116,459,0.963,460,1.116,461,1.158,465,1.405,509,2.532,518,2.203,527,1.72,530,4.128,726,0.998,892,1.687,1138,3.041,1565,2.999,2881,3.913,2991,5.19,3060,3.276,3192,6.109,3193,6.714,3194,6.499,3195,6.109,3232,5.762,3236,5.175,3250,3.964,3251,3.964,3252,3.964,3320,3.964,3321,5.956,3322,6.631,3323,4.561,3324,4.561,3325,4.561,3326,4.561,3327,4.561,3328,4.561,3329,4.561,3330,4.561,3331,4.561]],["title/components/MappingSelectionComponent.html",[374,0.221,441,0.866]],["body/components/MappingSelectionComponent.html",[0,0.278,3,0.112,4,0.172,5,0.096,6,0.218,7,0.13,14,0.237,15,0.46,17,0.326,18,0.015,19,0.279,21,0.437,29,0.956,32,0.854,54,0.128,59,0.877,68,0.455,75,2.937,103,0.997,115,0.393,117,0.761,123,0.818,133,1.074,134,1.093,135,1.041,150,0.584,160,2.735,176,0.393,179,0.46,194,0.584,264,0.893,265,0.893,289,0.686,290,0.46,293,0.604,301,0.007,302,0.01,303,0.007,319,0.57,321,0.541,324,0.726,327,0.63,336,0.604,337,1.51,371,0.658,372,0.658,374,0.351,375,0.893,376,1.352,377,1.034,378,1.034,380,0.961,381,1.755,382,1.166,383,1.034,385,1.352,386,0.926,387,1.403,388,1.352,389,0.893,390,1.706,391,1.034,392,1.034,393,0.926,394,1.034,395,0.893,396,1.034,397,0.893,398,1.034,399,1.034,400,0.893,401,1.784,402,0.926,403,1.034,404,0.893,405,1.001,406,0.926,407,1.034,408,0.893,409,1.034,410,0.893,411,1.034,412,0.86,413,1.591,414,0.86,415,0.997,416,1.528,417,1.034,418,0.926,419,1.034,420,0.893,421,0.893,422,0.86,423,1.034,424,0.86,425,0.926,426,1.034,427,0.893,428,0.893,429,0.828,430,1.034,431,0.893,432,1.034,433,0.893,434,1.034,435,0.893,436,0.893,437,1.403,438,0.893,439,0.86,440,1.034,441,1.587,442,1.034,443,1.692,444,1.657,445,1.034,446,0.828,447,1.403,448,1.418,449,0.893,450,1.403,451,0.893,452,0.893,453,0.893,454,0.893,455,1.034,456,0.893,457,0.961,458,0.997,459,0.86,460,0.997,461,1.034,464,2.62,465,1.303,472,2.81,474,2.81,482,2.318,492,1.703,500,1.568,501,1.341,622,3.538,758,1.155,880,3.54,891,2.067,892,1.507,1010,1.634,1014,1.585,1019,3.189,1044,3.68,1091,3.3,1098,2.145,1159,5.447,1181,2.926,1404,2.043,1654,2.411,1689,1.778,2881,3.982,3094,4.8,3332,3.189,3333,4.8,3334,6.268,3335,6.268,3336,5.84,3337,4.8,3338,6.72,3339,6.72,3340,4.074,3341,4.8,3342,5.84,3343,4.074,3344,4.074,3345,4.074,3346,4.074,3347,3.54,3348,5.524,3349,4.074,3350,3.54,3351,4.074,3352,4.074,3353,5.524,3354,3.54,3355,3.54,3356,3.54,3357,4.074,3358,4.074,3359,4.074,3360,4.074,3361,5.524,3362,4.074,3363,3.54,3364,4.324,3365,4.324,3366,3.54,3367,4.074,3368,4.074,3369,4.074,3370,6.268,3371,4.074,3372,5.524,3373,6.72]],["title/components/MappingSelectionSectionComponent.html",[374,0.221,443,0.866]],["body/components/MappingSelectionSectionComponent.html",[0,0.281,3,0.113,4,0.153,5,0.097,6,0.216,7,0.129,14,0.238,17,0.322,18,0.015,19,0.275,21,0.336,29,0.976,32,0.862,54,0.129,59,1.01,68,0.496,75,3.04,103,1.002,115,0.407,116,1.982,117,0.788,150,0.343,176,0.395,179,0.343,194,0.464,248,2.291,249,2.423,264,0.904,265,0.904,289,0.665,290,0.525,293,0.612,301,0.007,302,0.01,303,0.007,319,0.651,321,0.546,324,0.662,327,0.638,371,0.752,372,0.752,374,0.395,375,0.904,376,1.364,377,1.048,378,1.048,380,0.974,381,1.756,382,1.176,383,1.048,385,1.364,386,0.938,387,1.415,388,1.364,389,0.904,390,1.715,391,1.048,392,1.048,393,0.938,394,1.048,395,0.904,396,1.048,397,0.904,398,1.048,399,1.048,400,0.904,401,1.791,402,0.938,403,1.048,404,0.904,405,1.01,406,0.938,407,1.048,408,0.904,409,1.048,410,0.904,411,1.048,412,0.871,413,1.602,414,0.871,415,1.01,416,1.434,417,1.048,418,0.938,419,1.048,420,0.904,421,0.904,422,0.871,423,1.048,424,0.871,425,0.938,426,1.048,427,0.904,428,0.904,429,0.839,430,1.048,431,0.904,432,1.048,433,0.904,434,1.048,435,0.904,436,0.904,437,1.415,438,0.904,439,0.871,440,1.048,441,0.904,442,1.048,443,1.48,444,1.909,445,1.048,446,0.839,447,1.415,448,0.871,449,0.904,450,1.415,451,0.904,452,0.904,453,0.904,454,0.904,455,1.048,456,0.904,457,0.974,458,1.01,459,0.871,460,1.01,461,1.048,465,1.315,480,1.26,517,4.361,518,2.061,524,4.361,525,3.16,527,1.783,726,0.934,758,1.789,891,2.139,892,1.526,1014,1.715,1019,3.23,1046,2.53,1156,4.852,1158,3.586,1259,3.093,1404,1.526,2881,3.942,3145,4.361,3337,4.842,3341,4.842,3342,5.871,3363,3.586,3364,4.361,3365,4.361,3366,3.586,3374,3.586,3375,5.573,3376,6.756,3377,5.573,3378,6.309,3379,7.055,3380,6.309,3381,6.309,3382,6.309,3383,4.127,3384,4.127,3385,4.127,3386,4.127,3387,4.127,3388,4.127,3389,4.127,3390,4.127,3391,4.127,3392,5.573,3393,4.127,3394,4.127,3395,4.127,3396,4.127,3397,4.127,3398,4.127,3399,4.127,3400,4.127,3401,4.127,3402,5.573,3403,6.756,3404,5.573,3405,6.756]],["title/classes/MappingUtil.html",[0,0.199,3406,3.093]],["body/classes/MappingUtil.html",[0,0.205,2,0.995,3,0.111,4,0.111,5,0.096,6,0.203,7,0.119,9,2.307,14,0.143,17,0.314,18,0.015,19,0.255,21,0.423,29,0.746,30,1.446,31,2.903,32,0.853,54,0.127,59,0.72,68,0.5,75,2.618,103,0.996,114,2.141,115,0.405,116,2.388,117,0.728,123,1.024,124,2.36,133,0.996,134,1.313,135,1.039,137,1.942,150,0.667,160,2.733,176,0.227,179,0.602,194,0.648,242,3.678,255,5.042,256,4.817,281,2.921,289,0.68,301,0.007,302,0.01,303,0.007,321,0.541,324,0.709,336,0.603,371,0.863,372,0.863,429,1.273,499,2.037,500,1.565,726,0.925,758,1.153,891,2.13,892,1.504,918,2.921,1014,1.708,1174,2.141,1212,1.775,1347,4.901,1357,1.504,1369,2.227,1565,2.815,1583,2.257,1665,3.442,1726,2.856,1731,3.297,1796,2.141,1805,3.24,1807,3.062,1852,2.388,1881,2.711,1926,2.537,1927,2.037,2136,3.534,2601,5.255,2602,4.823,2640,4.794,2648,3.534,2695,2.711,2709,5.042,2710,3.183,2720,2.921,2721,2.921,3227,5.835,3230,3.534,3254,3.534,3255,3.534,3364,3.183,3365,5.255,3406,4.318,3407,6.434,3408,5.517,3409,5.517,3410,5.517,3411,5.517,3412,5.517,3413,5.517,3414,4.066,3415,4.066,3416,4.066,3417,5.517,3418,5.517,3419,4.066,3420,4.066,3421,4.066,3422,4.066,3423,4.066,3424,4.066,3425,4.066,3426,4.066,3427,4.066,3428,5.517,3429,4.066,3430,5.517,3431,5.517,3432,6.262,3433,5.517,3434,4.066,3435,5.517,3436,4.066,3437,6.262,3438,4.066,3439,5.517,3440,5.517,3441,5.517,3442,4.066,3443,5.517,3444,4.066,3445,4.066,3446,6.715,3447,2.921,3448,4.066,3449,5.517,3450,5.517,3451,4.066,3452,5.517,3453,6.715,3454,4.066,3455,4.066,3456,5.517,3457,4.066,3458,4.066,3459,4.066,3460,4.066,3461,4.066,3462,5.517,3463,4.066,3464,4.066,3465,6.715,3466,4.794,3467,4.066,3468,4.066,3469,5.517,3470,4.066,3471,4.066,3472,4.066,3473,4.066,3474,4.066,3475,4.066,3476,4.066,3477,4.066,3478,3.534,3479,4.066,3480,4.066,3481,4.066,3482,4.066,3483,4.066,3484,4.066,3485,4.066,3486,5.517,3487,4.066]],["title/components/ModalErrorWindowComponent.html",[374,0.221,446,0.803]],["body/components/ModalErrorWindowComponent.html",[0,0.249,3,0.095,4,0.095,5,0.082,6,0.223,7,0.132,14,0.122,15,0.411,17,0.342,18,0.015,19,0.287,21,0.378,29,0.891,32,0.764,43,2.891,44,1.737,54,0.155,59,0.987,68,0.372,103,0.733,105,0.881,115,0.371,117,0.623,123,0.75,133,1.022,134,1.003,137,1.656,150,0.573,162,2.164,176,0.322,179,0.629,182,3.14,194,0.479,263,2.736,264,0.76,265,0.76,289,0.638,290,0.603,293,1.218,301,0.006,302,0.009,303,0.006,318,2.474,319,0.747,321,0.484,324,0.722,325,1.656,327,0.536,335,1.233,336,0.515,337,1.35,357,2.474,371,0.589,372,0.589,374,0.322,375,0.76,376,1.209,377,0.881,378,0.881,380,0.818,381,1.737,382,1.043,383,0.881,385,1.209,386,0.789,387,1.254,388,1.209,389,0.76,390,1.592,391,0.881,392,0.881,393,0.789,394,0.881,395,0.76,396,0.881,397,0.76,398,0.881,399,0.881,400,0.76,401,1.682,402,0.789,403,0.881,404,0.76,405,0.895,406,0.789,407,0.881,408,0.76,409,0.881,410,0.76,411,0.881,412,0.732,413,1.461,414,0.732,415,0.849,416,1.611,417,0.881,418,0.789,419,0.881,420,0.76,421,0.76,422,0.732,423,0.881,424,0.732,425,0.789,426,0.881,427,0.76,428,0.76,429,0.705,430,0.881,431,0.76,432,0.881,433,0.76,434,0.881,435,0.76,436,0.76,437,1.254,438,0.76,439,0.732,440,0.881,441,0.76,442,0.881,443,0.76,444,1.165,445,0.881,446,1.4,447,1.254,448,0.732,449,0.76,450,1.254,451,0.76,452,0.76,453,0.76,454,0.76,455,0.881,456,0.76,457,0.818,458,0.849,459,0.732,460,0.849,461,0.881,465,1.165,472,1.45,474,1.45,480,1.059,482,1.827,492,1.45,518,1.827,527,1.672,604,3.029,608,3.301,613,1.925,617,1.391,664,4.906,668,4.906,675,3.589,691,2.715,696,1.925,709,2.164,723,1.826,726,0.964,730,2.9,731,2.037,733,2.037,735,3.866,736,2.715,737,2.715,743,2.742,1091,3.029,1098,1.826,1226,3.082,1227,3.029,1243,5.084,1244,2.164,1246,3.014,1247,3.014,1248,3.836,1249,4.591,1250,2.313,1251,4.133,1252,3.378,1254,1.826,1255,3.293,1256,4.417,1257,3.836,1258,3.836,1259,3.823,1260,3.836,1261,3.836,1262,3.193,1263,3.836,1264,3.836,1267,3.836,1268,3.836,1269,3.293,1270,3.836,1271,3.836,1272,3.836,1273,2.624,1274,4.133,1283,2.313,1284,3.293,1305,4.18,1306,3.293,1307,2.313,1308,2.164,1311,3.082,1312,3.293,1314,2.313,1315,2.313,1321,3.293,1324,3.293,1489,3.866,1501,4.292,1612,1.925,3488,5.757,3489,5.447,3490,4.94,3491,5.447,3492,3.014,3493,4.94,3494,3.469,3495,3.469,3496,3.469,3497,3.469,3498,3.469,3499,3.469,3500,3.469,3501,3.469,3502,3.469,3503,4.292,3504,3.469,3505,3.014,3506,3.469,3507,3.014,3508,3.469,3509,4.292,3510,3.469,3511,3.469,3512,3.469,3513,3.014,3514,3.469,3515,3.469,3516,3.469,3517,4.132,3518,3.469,3519,3.469,3520,3.014,3521,3.014,3522,3.014,3523,3.014,3524,3.014,3525,3.014,3526,3.014,3527,3.014,3528,3.014,3529,3.014,3530,3.014,3531,3.014,3532,3.014,3533,4.94,3534,4.94,3535,4.94]],["title/interfaces/ModalErrorWindowValidator.html",[1254,2.081,3517,2.838]],["body/interfaces/ModalErrorWindowValidator.html",[0,0.251,3,0.136,4,0.136,5,0.117,6,0.189,7,0.111,14,0.175,17,0.273,18,0.015,19,0.222,21,0.438,29,0.593,43,3.016,44,2.494,54,0.197,59,1.014,68,0.322,103,0.935,117,0.749,123,0.822,133,0.935,134,0.868,137,2.377,150,0.604,162,3.106,176,0.387,179,0.624,182,2.494,194,0.575,263,2.173,293,1.112,301,0.009,302,0.011,303,0.009,318,2.494,321,0.617,324,0.617,325,2.377,327,0.77,335,1.77,336,0.739,337,1.361,357,2.494,374,0.352,381,1.051,416,1.432,446,1.281,465,1.174,472,3.037,474,3.037,482,2.556,527,1.834,604,3.317,608,2.621,613,2.763,617,1.996,664,3.897,668,3.897,675,3.106,691,3.897,696,2.763,709,3.106,723,2.621,726,1.158,730,3.699,731,2.923,733,2.923,735,4.931,736,3.897,737,3.897,743,3.497,1091,3.317,1098,2.621,1226,3.931,1227,3.639,1243,4.312,1244,3.106,1248,4.2,1249,4.608,1250,3.319,1251,3.931,1252,3.699,1254,2.621,1255,3.319,1256,3.319,1257,3.319,1258,3.319,1259,3.836,1260,3.319,1261,3.319,1262,2.763,1263,3.319,1264,3.319,1267,3.319,1268,3.319,1269,3.319,1270,3.319,1271,3.319,1272,3.319,1273,2.271,1274,3.106,1283,3.319,1284,4.2,1305,3.319,1306,4.2,1307,3.319,1308,3.106,1311,3.931,1312,4.2,1314,3.319,1315,3.319,1324,4.2,1489,4.931,1612,2.763,3488,4.326,3489,4.326,3491,4.326,3503,4.326,3509,4.326,3517,4.964,3520,4.326,3521,4.326,3522,4.326,3523,4.326,3524,4.326,3525,4.326,3526,4.326,3527,4.326,3528,4.326,3529,4.326,3530,4.326,3531,4.326,3532,4.326,3536,3.576,3537,4.979,3538,4.979]],["title/components/ModalWindowComponent.html",[374,0.221,448,0.834]],["body/components/ModalWindowComponent.html",[0,0.29,3,0.095,4,0.136,5,0.082,6,0.223,7,0.132,14,0.122,15,0.411,17,0.344,18,0.015,19,0.286,21,0.378,29,0.879,32,0.764,54,0.18,59,0.997,68,0.372,103,0.854,105,0.882,115,0.385,117,0.718,123,0.751,133,1.094,134,1.004,150,0.59,176,0.322,179,0.646,182,3.141,194,0.479,263,2.737,264,0.761,265,0.761,289,0.638,290,0.59,293,0.733,301,0.006,302,0.009,303,0.006,318,2.476,319,0.731,321,0.484,324,0.71,327,0.537,335,1.235,336,0.515,337,1.573,357,2.476,371,0.686,372,0.686,374,0.371,375,0.761,376,1.21,377,0.882,378,0.882,380,0.819,381,1.739,382,1.043,383,0.882,385,1.409,386,0.789,387,1.255,388,1.21,389,0.761,390,1.592,391,0.882,392,0.882,393,0.789,394,0.882,395,0.761,396,0.882,397,0.761,398,0.882,399,0.882,400,0.761,401,1.683,402,0.789,403,0.882,404,0.761,405,0.896,406,0.789,407,0.882,408,0.761,409,0.882,410,0.761,411,0.882,412,0.733,413,1.462,414,1.215,415,1.21,416,1.676,417,0.882,418,0.789,419,0.882,420,0.761,421,0.761,422,0.733,423,0.882,424,0.733,425,0.789,426,0.882,427,0.761,428,0.761,429,0.706,430,0.882,431,0.761,432,0.882,433,0.761,434,0.882,435,0.761,436,0.761,437,1.255,438,0.761,439,0.733,440,0.882,441,0.761,442,0.882,443,0.761,444,1.166,445,0.882,446,1.275,447,1.255,448,1.324,449,0.761,450,1.255,451,0.761,452,0.761,453,0.761,454,0.761,455,0.882,456,0.761,457,0.819,458,0.85,459,0.733,460,0.85,461,0.882,464,2.771,465,1.166,472,2.067,474,2.067,480,1.06,482,2.129,492,1.452,501,1.143,518,1.828,525,2.883,527,1.709,613,3.195,617,1.392,675,3.591,743,3.481,1010,1.392,1091,3.031,1098,1.828,1243,5.075,1244,2.166,1245,2.494,1248,4.419,1249,4.593,1250,3.838,1251,4.135,1252,3.38,1253,2.718,1254,1.828,1255,3.296,1256,4.419,1257,3.838,1258,3.838,1259,3.824,1260,3.838,1261,3.838,1262,3.679,1263,3.838,1264,3.838,1265,5.188,1266,3.838,1267,3.838,1268,3.838,1269,3.296,1270,3.838,1271,3.838,1272,3.838,1273,2.626,1274,4.135,1275,4.909,1276,3.869,1277,3.869,1278,2.718,1279,2.718,1280,2.718,1281,2.718,1282,2.718,1283,3.296,1284,3.838,1285,2.718,1286,2.718,1287,2.718,1288,2.494,1289,2.603,1290,4.182,1291,4.909,1292,2.718,1293,2.718,1294,2.718,1295,2.718,1296,3.869,1297,2.718,1298,3.869,1299,2.718,1300,3.869,1301,2.718,1302,2.718,1303,3.869,1304,2.718,1305,4.182,1306,3.296,1307,2.315,1308,2.166,1309,2.718,1310,2.718,1311,2.166,1312,2.315,1313,2.718,1314,3.296,1315,3.296,1316,3.869,1317,3.869,1318,2.494,1319,2.718,1320,2.718,1321,3.838,1322,2.494,1323,2.718,1324,2.315,3492,3.017,3505,3.017,3507,4.296,3513,3.017,3539,4.943,3540,4.943,3541,3.472,3542,3.472,3543,3.472,3544,3.472,3545,3.472,3546,3.472,3547,3.472,3548,3.472,3549,3.472,3550,3.472,3551,3.472,3552,3.472,3553,3.472,3554,3.472,3555,3.472,3556,3.472,3557,3.472,3558,3.472,3559,3.472,3560,3.472,3561,3.472,3562,3.472]],["title/interfaces/ModalWindowValidator.html",[464,1.652,1254,2.081]],["body/interfaces/ModalWindowValidator.html",[0,0.309,3,0.131,4,0.168,5,0.113,6,0.186,7,0.109,14,0.169,17,0.266,18,0.015,19,0.217,21,0.432,54,0.212,59,1.018,68,0.31,103,1.007,117,0.776,123,0.802,133,1.007,134,0.835,150,0.63,176,0.38,179,0.63,182,2.398,194,0.565,263,2.089,293,0.71,301,0.008,302,0.011,303,0.008,318,2.398,321,0.602,324,0.602,327,0.74,335,1.702,336,0.71,337,1.679,357,2.398,374,0.401,381,1.297,385,1.172,414,1.297,415,1.172,416,1.628,446,1.249,448,1.01,464,3.096,465,1.129,472,3.096,474,3.096,482,2.648,501,1.576,525,2.398,527,1.841,613,3.411,617,1.92,675,2.987,743,3.974,1010,1.92,1091,3.236,1098,2.521,1243,4.234,1244,2.987,1245,3.439,1248,4.774,1249,4.525,1250,4.097,1251,3.834,1252,3.608,1253,3.747,1254,2.521,1255,3.192,1256,3.192,1257,3.192,1258,3.192,1259,3.767,1260,3.192,1261,3.192,1262,2.658,1263,3.192,1264,3.192,1265,3.747,1266,4.097,1267,3.192,1268,3.192,1269,3.192,1270,3.192,1271,3.192,1272,3.192,1273,2.184,1274,2.987,1275,3.747,1276,4.81,1277,4.81,1278,3.747,1279,3.747,1280,3.747,1281,3.747,1282,3.747,1283,4.097,1284,4.525,1285,3.747,1286,3.747,1287,3.747,1288,3.439,1289,3.236,1290,3.192,1291,3.747,1292,3.747,1293,3.747,1294,3.747,1295,3.747,1296,4.81,1297,3.747,1298,4.81,1299,3.747,1300,4.81,1301,3.747,1302,3.747,1303,3.747,1304,3.747,1305,3.192,1306,4.097,1307,3.192,1308,2.987,1309,3.747,1310,3.747,1311,2.987,1312,3.192,1313,3.747,1314,4.097,1315,4.097,1316,3.747,1317,3.747,1318,3.439,1319,3.747,1320,3.747,1321,3.192,1322,3.439,1323,3.747,1324,3.192,3536,3.439,3563,4.788,3564,4.788]],["title/components/NamespaceEditComponent.html",[374,0.221,449,0.866]],["body/components/NamespaceEditComponent.html",[0,0.299,3,0.124,4,0.124,5,0.107,6,0.212,7,0.128,14,0.16,15,0.494,17,0.315,18,0.015,19,0.268,21,0.423,29,0.93,30,1.614,32,0.918,54,0.142,59,0.592,103,0.881,115,0.392,117,0.717,123,0.863,133,0.981,135,1.246,150,0.378,176,0.332,179,0.584,194,0.494,264,0.994,265,0.994,289,0.68,290,0.494,293,0.673,301,0.008,302,0.01,303,0.008,319,0.612,321,0.582,324,0.688,325,2.167,327,0.702,336,0.673,337,1.622,371,0.541,372,0.541,374,0.37,375,0.994,376,1.453,377,1.152,378,1.152,380,1.071,381,1.765,382,1.253,383,1.152,385,1.453,386,1.032,387,1.507,388,1.453,389,0.994,390,1.781,391,1.152,392,1.152,393,1.032,394,1.152,395,0.994,396,1.152,397,0.994,398,1.152,399,1.152,400,0.994,401,1.849,402,1.032,403,1.152,404,0.994,405,1.076,406,1.032,407,1.152,408,0.994,409,1.152,410,0.994,411,1.152,412,0.958,413,1.68,414,0.958,415,1.111,416,1.595,417,1.152,418,1.032,419,1.152,420,0.994,421,0.994,422,0.958,423,1.152,424,0.958,425,1.032,426,1.152,427,0.994,428,0.994,429,0.923,430,1.152,431,0.994,432,1.152,433,0.994,434,1.152,435,0.994,436,0.994,437,1.507,438,0.994,439,0.958,440,1.152,441,0.994,442,1.152,443,0.994,444,1.4,445,1.152,446,0.923,447,1.507,448,0.958,449,1.537,450,2.038,451,0.994,452,0.994,453,0.994,454,0.994,455,1.152,456,0.994,457,1.071,458,1.111,459,0.958,460,1.111,461,1.152,464,2.766,465,1.4,467,4.127,472,2.933,473,3.126,474,2.933,482,2.693,492,1.898,498,2.07,499,2.273,501,1.494,505,2.832,535,2.832,536,3.126,537,3.958,559,3.26,1404,2.195,1689,1.981,2061,5.039,2067,3.944,2087,4.982,2112,4.751,2114,3.26,3447,5.229,3565,6.041,3566,6.615,3567,7.016,3568,4.539,3569,5.936,3570,4.539,3571,5.936,3572,4.539,3573,4.539,3574,3.944,3575,4.539,3576,4.539,3577,3.944,3578,3.944,3579,4.539,3580,6.615,3581,4.539,3582,3.944,3583,7.016,3584,4.539,3585,4.539,3586,5.158]],["title/components/NamespaceListComponent.html",[374,0.221,451,0.866]],["body/components/NamespaceListComponent.html",[0,0.238,3,0.09,4,0.09,5,0.077,6,0.217,7,0.129,14,0.228,15,0.394,17,0.324,18,0.015,19,0.278,21,0.407,29,0.866,30,1.162,32,0.732,54,0.102,59,0.796,68,0.501,103,1.001,115,0.406,117,0.661,123,0.726,133,1.121,134,0.97,135,0.616,150,0.639,176,0.433,179,0.614,194,0.579,264,0.716,265,0.716,289,0.628,290,0.507,293,0.485,301,0.006,302,0.008,303,0.01,319,0.629,321,0.464,324,0.747,327,0.505,336,0.485,371,0.804,372,0.804,374,0.311,375,0.716,376,1.158,377,0.83,378,0.83,380,0.771,381,1.73,382,0.999,383,0.83,385,1.158,386,0.743,387,1.202,388,1.158,389,0.716,390,1.549,391,0.83,392,0.83,393,0.743,394,0.83,395,0.716,396,0.83,397,0.716,398,0.83,399,0.83,400,0.716,401,1.644,402,0.743,403,0.83,404,0.716,405,1.009,406,0.743,407,0.83,408,0.716,409,0.83,410,0.716,411,0.83,412,0.69,413,1.413,414,0.69,415,0.8,416,1.387,417,0.83,418,0.743,419,0.83,420,0.716,421,0.716,422,0.69,423,0.83,424,0.69,425,0.743,426,0.83,427,0.716,428,0.716,429,0.664,430,0.83,431,0.716,432,0.83,433,0.716,434,0.83,435,0.716,436,0.716,437,1.202,438,0.716,439,1.174,440,0.83,441,0.716,442,0.83,443,0.716,444,1.116,445,0.83,446,0.664,447,1.202,448,1.469,449,1.525,450,1.918,451,1.336,452,0.716,453,0.716,454,0.716,455,0.83,456,0.716,457,0.771,458,0.8,459,0.69,460,0.8,461,0.83,465,1.116,480,2.061,499,1.637,501,1.076,518,1.75,527,1.312,530,2.779,536,1.72,550,2.039,709,2.039,726,0.548,758,1.577,859,2.347,916,1.426,960,2.557,962,2.557,1014,0.771,1044,3.267,1129,3.399,1156,4.999,1183,3.155,1184,3.155,1189,3.155,1190,2.179,1191,3.709,1193,3.155,1202,2.179,1203,3.155,1211,3.155,1212,2.428,1214,2.347,1215,2.179,1216,2.347,1404,1.75,1654,1.426,1760,1.814,2061,4.649,2070,2.179,2087,5.012,2112,3.399,2114,5.299,2115,3.704,2242,1.637,2243,1.637,2995,2.039,3084,5.066,3108,5.066,3175,5.448,3258,2.557,3259,4.112,3260,4.835,3261,4.835,3263,5.3,3268,5.3,3269,5.3,3271,5.3,3272,5.3,3276,2.839,3287,4.112,3294,2.839,3295,2.839,3296,6.411,3297,4.835,3298,2.839,3299,2.557,3301,4.112,3302,4.112,3303,4.835,3306,4.835,3307,2.839,3308,2.347,3309,2.839,3310,2.839,3447,4.38,3565,6.208,3577,4.112,3578,2.839,3582,4.112,3586,4.112,3587,5.564,3588,4.732,3589,4.732,3590,6.099,3591,6.099,3592,4.732,3593,4.732,3594,4.732,3595,3.268,3596,4.732,3597,3.268,3598,3.268,3599,4.732,3600,3.268,3601,3.268,3602,3.268,3603,3.268,3604,3.268,3605,4.732,3606,3.268,3607,4.732,3608,3.268,3609,3.268,3610,3.268,3611,4.732,3612,3.268,3613,3.268,3614,3.268,3615,3.268,3616,3.268,3617,6.473,3618,6.099,3619,5.564,3620,3.268,3621,4.732,3622,3.268,3623,3.268,3624,3.268,3625,3.268,3626,3.268,3627,3.268,3628,3.268,3629,3.268,3630,3.268,3631,3.268,3632,3.268,3633,3.268,3634,3.268,3635,3.268,3636,3.268,3637,3.268,3638,3.268,3639,4.732,3640,4.732,3641,4.732,3642,4.732,3643,4.732]],["title/classes/NamespaceModel.html",[0,0.199,2087,2.466]],["body/classes/NamespaceModel.html",[0,0.256,2,0.684,3,0.077,4,0.077,5,0.066,6,0.198,7,0.116,9,1.168,14,0.098,15,0.351,17,0.317,18,0.015,19,0.25,21,0.366,28,2.672,29,0.502,30,0.993,31,1.12,32,0.785,45,2.896,46,2.817,48,1.219,54,0.159,58,1.743,59,0.983,68,0.526,75,2.122,79,1.862,80,1.736,103,1.054,113,2.474,114,1.471,115,0.357,116,1.498,117,0.756,118,2.006,119,2.006,120,2.006,121,2.006,124,1.947,133,1.011,135,0.956,145,1.743,150,0.67,165,1.743,170,1.743,176,0.447,179,0.609,180,1.168,194,0.668,225,2.006,242,1.862,252,1.544,254,2.976,259,1.399,289,0.73,290,0.531,301,0.005,302,0.007,303,0.005,319,0.658,321,0.413,324,0.554,336,0.414,371,0.333,372,0.333,405,0.506,511,1.471,552,2.006,554,1.559,566,2.186,571,2.006,589,3.768,617,1.12,686,1.168,726,1.142,758,0.792,816,4.413,890,2.186,916,1.219,944,2.006,1014,1.676,1120,2.186,1160,4.044,1174,2.219,1176,3.978,1177,1.862,1182,3.662,1212,1.839,1334,3.662,1335,2.427,1338,4.911,1349,3.662,1350,2.427,1351,5.271,1352,4.41,1357,2.628,1361,2.427,1362,4.911,1369,1.804,1372,3.027,1374,3.662,1381,2.219,1385,4.41,1389,2.427,1404,1.559,1405,3.662,1406,2.427,1413,3.027,1427,2.427,1429,4.911,1432,2.427,1450,2.006,1498,2.474,1574,1.862,1689,1.219,2038,1.862,2040,2.427,2061,2.006,2087,4.77,2099,2.427,2104,3.662,2112,4.059,2114,4.059,2115,3.298,2205,2.427,2216,3.298,2222,2.427,2242,1.399,2243,1.399,2481,2.427,2524,2.427,2602,3.027,2692,2.186,2695,1.862,2707,2.186,2708,3.298,2745,2.186,2748,2.186,2792,2.186,2819,2.186,2835,2.427,2836,2.427,2838,2.427,2841,2.427,2842,2.427,2851,2.427,3056,2.427,3071,3.972,3178,2.186,3447,4.356,3466,5.271,3644,6.272,3645,5.075,3646,5.075,3647,5.075,3648,5.075,3649,4.214,3650,5.651,3651,5.651,3652,2.793,3653,2.793,3654,2.793,3655,2.793,3656,5.075,3657,2.793,3658,4.214,3659,2.793,3660,4.214,3661,2.793,3662,2.793,3663,2.793,3664,2.793,3665,2.793,3666,2.793,3667,2.793,3668,2.793,3669,2.793,3670,2.793,3671,2.793,3672,2.793,3673,2.793,3674,7.218,3675,2.793,3676,2.793,3677,2.793,3678,2.793,3679,2.793,3680,2.793,3681,2.793,3682,4.214,3683,2.793,3684,2.793,3685,2.793,3686,2.793,3687,2.793,3688,5.075,3689,2.793,3690,2.793,3691,4.214,3692,2.793,3693,2.793,3694,4.214,3695,2.793,3696,2.793,3697,2.793,3698,2.793,3699,2.793,3700,2.793,3701,2.793,3702,4.214,3703,2.793,3704,2.793,3705,6.376,3706,6.065,3707,2.793,3708,2.427,3709,6.376,3710,2.793,3711,5.075,3712,4.214,3713,2.793,3714,2.793,3715,4.214,3716,2.793,3717,2.793,3718,2.793,3719,2.793,3720,2.793,3721,2.793,3722,2.793,3723,5.075,3724,5.651,3725,6.065,3726,5.075,3727,5.651,3728,4.214,3729,2.793,3730,5.075,3731,4.214,3732,4.214,3733,4.214,3734,4.214,3735,5.075,3736,2.793,3737,2.793,3738,2.793,3739,2.793,3740,2.793,3741,2.793,3742,2.793,3743,2.793,3744,5.651,3745,2.793,3746,4.214,3747,2.793,3748,4.214,3749,2.793,3750,4.214,3751,4.214,3752,4.214,3753,4.214,3754,2.793,3755,2.793,3756,5.651,3757,4.214,3758,2.793,3759,4.214,3760,2.793,3761,5.651,3762,4.214,3763,2.793,3764,2.793,3765,4.214,3766,2.793,3767,2.793,3768,2.186,3769,2.793,3770,2.793,3771,2.793,3772,2.793,3773,2.793,3774,2.793,3775,2.793,3776,2.793,3777,2.793,3778,4.214,3779,2.793,3780,2.793,3781,5.075,3782,2.793,3783,2.793,3784,2.793,3785,2.793,3786,2.793,3787,2.793,3788,2.793,3789,2.793,3790,2.793,3791,2.793,3792,2.793,3793,2.793,3794,2.793,3795,2.793,3796,2.793,3797,2.427,3798,2.793,3799,2.793,3800,2.793,3801,2.793,3802,2.793,3803,2.793,3804,2.793,3805,2.793,3806,2.793,3807,2.793,3808,2.793,3809,2.793,3810,2.793,3811,2.793]],["title/components/PropertyFieldEditComponent.html",[374,0.221,452,0.866]],["body/components/PropertyFieldEditComponent.html",[0,0.266,3,0.166,4,0.104,5,0.09,6,0.216,7,0.129,14,0.134,15,0.439,17,0.334,18,0.015,19,0.276,21,0.428,29,0.897,30,1.355,31,2.846,32,0.816,45,1.82,48,1.663,54,0.119,59,0.926,68,0.423,80,1.805,98,3.099,103,1.018,115,0.44,117,0.804,123,0.497,133,0.898,135,1.141,150,0.504,165,2.378,176,0.426,179,0.544,195,3.832,264,0.835,265,1.65,289,0.734,290,0.617,293,0.565,301,0.007,302,0.009,303,0.007,319,0.544,321,0.517,324,0.696,327,0.589,336,0.565,337,1.442,371,0.629,372,0.629,374,0.339,375,0.835,376,1.292,377,0.968,378,0.968,380,0.899,381,1.748,382,1.114,383,0.968,385,1.292,386,0.866,387,1.34,388,1.292,389,0.835,390,1.659,391,0.968,392,0.968,393,0.866,394,0.968,395,0.835,396,0.968,397,0.835,398,0.968,399,0.968,400,0.835,401,1.742,402,0.866,403,0.968,404,0.835,405,0.957,406,0.866,407,0.968,408,0.835,409,0.968,410,0.835,411,0.968,412,0.804,413,1.537,414,0.804,415,0.933,416,1.486,417,0.968,418,0.866,419,0.968,420,0.835,421,0.835,422,0.804,423,0.968,424,0.804,425,0.866,426,0.968,427,0.835,428,0.835,429,0.775,430,0.968,431,0.835,432,0.968,433,0.835,434,0.968,435,0.835,436,0.835,437,1.34,438,0.835,439,0.804,440,0.968,441,0.835,442,0.968,443,0.835,444,1.245,445,0.968,446,0.775,447,1.34,448,1.609,449,0.835,450,1.34,451,0.835,452,1.431,453,0.835,454,0.835,455,0.968,456,0.835,457,0.899,458,0.933,459,0.804,460,0.933,461,0.968,464,2.531,465,1.245,467,3.777,472,2.732,473,2.779,474,2.732,480,1.164,482,2.537,483,3.79,492,1.593,498,1.738,499,1.909,500,1.467,501,1.255,502,4.036,505,2.378,507,2.737,511,3.44,535,2.378,536,2.779,537,3.518,538,5.555,539,5.26,540,4.738,541,5.114,542,4.13,543,3.312,545,5.678,546,2.983,549,4.13,550,4.076,551,5.114,552,4.693,553,4.586,554,1.952,555,4.13,556,3.312,557,2.983,558,2.983,559,2.737,561,2.983,562,2.983,563,2.983,564,2.737,565,4.738,566,2.983,567,5.26,568,3.312,569,4.586,570,2.643,571,2.737,572,3.312,573,4.586,574,2.737,576,3.79,577,2.983,578,2.983,579,2.983,580,2.983,582,3.312,583,4.586,584,4.586,585,3.94,586,3.12,587,4.13,588,4.13,589,3.518,590,2.929,591,2.929,592,2.929,593,3.627,594,3.627,595,4.13,596,3.518,597,4.13,598,4.13,599,4.13,600,4.13,601,5.805,726,0.884,1084,2.929,1907,4.586,2137,3.312,3812,6.842,3813,6.534,3814,3.811,3815,3.811,3816,3.811,3817,5.277,3818,4.586,3819,5.277,3820,5.277]],["title/components/TemplateEditComponent.html",[374,0.221,453,0.866]],["body/components/TemplateEditComponent.html",[0,0.319,3,0.138,4,0.138,5,0.119,6,0.206,7,0.127,14,0.177,15,0.528,17,0.275,18,0.015,19,0.257,21,0.382,29,0.948,32,0.98,54,0.157,68,0.41,103,0.746,115,0.388,117,0.687,133,1.03,150,0.528,176,0.355,264,1.102,265,1.102,289,0.694,290,0.418,293,0.746,301,0.009,302,0.011,303,0.009,319,0.519,321,0.621,324,0.621,327,0.778,337,1.733,374,0.388,375,1.102,376,1.552,377,1.277,378,1.277,380,1.186,381,1.774,382,1.338,383,1.277,385,1.878,386,1.143,387,1.61,388,1.552,389,1.102,390,1.851,391,1.277,392,1.277,393,1.143,394,1.277,395,1.102,396,1.277,397,1.102,398,1.277,399,1.277,400,1.102,401,1.909,402,1.143,403,1.277,404,1.102,405,1.149,406,1.143,407,1.277,408,1.102,409,1.277,410,1.102,411,1.277,412,1.062,413,1.763,414,1.062,415,1.231,416,1.658,417,1.277,418,1.143,419,1.277,420,1.102,421,1.102,422,1.062,423,1.277,424,1.062,425,1.143,426,1.277,427,1.102,428,1.102,429,1.022,430,1.277,431,1.102,432,1.277,433,1.102,434,1.277,435,1.102,436,1.102,437,1.61,438,1.102,439,1.062,440,1.277,441,1.102,442,1.277,443,1.102,444,1.496,445,1.277,446,1.022,447,1.61,448,1.062,449,1.102,450,1.61,451,1.102,452,1.102,453,1.597,454,1.102,455,1.277,456,1.102,457,1.186,458,1.231,459,1.062,460,1.231,461,1.277,464,2.903,465,1.496,467,4.332,472,3.048,474,3.048,482,2.78,492,2.103,498,2.294,501,1.656,505,3.138,535,3.138,536,3.339,537,4.228,564,3.612,2824,6.034,3574,4.371,3821,6.532,3822,6.341,3823,5.03,3824,5.03]],["title/classes/TextNode.html",[0,0.199,1573,2.466]],["body/classes/TextNode.html",[0,0.287,2,0.595,3,0.067,4,0.144,5,0.057,6,0.165,7,0.097,14,0.25,15,0.315,17,0.228,18,0.015,19,0.241,21,0.317,29,0.555,33,0.975,34,1.218,35,1.162,54,0.178,68,0.513,80,2.386,103,0.361,105,0.618,114,1.281,115,0.136,123,0.607,124,1.854,133,0.967,134,0.661,135,1.314,150,0.542,176,0.434,179,0.315,180,1.017,194,0.658,247,1.162,252,1.906,259,1.898,289,0.59,290,0.315,299,1.218,301,0.004,302,0.007,303,0.004,319,0.391,321,0.371,324,0.558,335,0.865,336,0.361,371,0.29,372,0.29,422,0.513,510,1.402,527,0.894,554,1.402,570,1.898,617,1.52,619,1.428,625,2.365,686,1.585,726,1.315,758,1.942,891,1.677,946,3.498,953,1.062,967,1.622,972,3.799,987,1.218,1010,2.108,1014,1.909,1046,0.975,1137,3.113,1212,1.062,1229,1.622,1273,2.398,1289,1.281,1340,3.087,1357,1.722,1369,0.865,1376,2.226,1404,1.944,1498,3.087,1504,3.505,1550,4.533,1551,1.622,1552,4.335,1553,3.105,1554,3.776,1555,4.527,1556,4.918,1557,4.918,1558,1.747,1560,4.093,1565,2.42,1566,1.622,1567,2.527,1568,3.932,1569,2.722,1570,5.272,1571,5.573,1572,1.747,1573,5,1574,3.105,1575,4.112,1576,1.747,1577,1.747,1578,1.747,1579,1.747,1580,4.8,1581,1.747,1582,1.747,1583,1.35,1584,2.722,1585,1.747,1586,1.747,1587,1.747,1588,1.747,1589,1.428,1590,1.747,1591,1.747,1592,1.747,1593,1.747,1594,1.747,1595,1.747,1596,1.747,1597,1.747,1598,1.747,1599,2.722,1600,1.747,1601,2.722,1602,1.747,1603,3.344,1604,1.747,1605,1.747,1606,1.747,1607,4.81,1608,4.093,1609,4.093,1610,3.776,1611,1.747,1612,1.35,1613,1.747,1614,3.828,1615,5.219,1616,1.747,1617,2.722,1618,3.776,1619,1.747,1620,5.32,1621,4.918,1622,4.335,1623,4.991,1624,3.344,1625,1.747,1626,1.747,1627,4.093,1628,1.747,1629,3.344,1630,2.722,1631,1.747,1632,4.682,1633,4.093,1634,5.158,1635,1.747,1636,1.747,1637,3.344,1638,1.747,1639,2.722,1640,2.722,1641,3.776,1642,2.722,1643,2.365,1644,2.722,1645,4.093,1646,2.527,1647,2.527,1648,1.747,1649,1.747,1650,1.747,1651,4.682,1652,2.722,1653,4.527,1654,1.654,1655,1.747,1656,3.344,1657,4.533,1658,2.722,1659,4.335,1660,1.747,1661,5.089,1662,3.776,1663,2.722,1664,2.722,1665,2.365,1666,3.344,1667,2.722,1668,2.722,1669,1.747,1670,2.722,1671,2.722,1672,3.776,1673,2.722,1674,2.722,1675,3.105,1676,1.747,1677,1.747,1678,1.747,1679,1.747,1680,1.747,1681,3.344,1682,1.747,1683,4.093,1684,1.747,1685,4.335,1686,3.087,1687,4.335,1688,3.344,1689,2.032,1690,3.105,1691,3.344,1692,1.747,1693,5.089,1694,5.089,1695,4.335,1696,3.344,1697,1.747,1698,4.527,1699,1.747,1700,4.335,1701,1.747,1702,1.747,1703,3.344,1704,1.747,1705,3.344,1706,3.344,1707,3.344,1708,3.344,1709,2.722,1710,2.722,1711,2.722,1712,2.722,1713,2.722,1714,5.158,1715,2.722,1716,1.518,1717,1.747,1718,1.747,1719,1.747,1720,1.747,1721,1.747,1722,1.622,1723,1.747,1724,1.747,1725,1.747,1726,1.11,1727,1.747,1728,1.747,1729,1.518,1730,1.747,1731,1.996,1732,1.747,1733,1.747,1734,1.747,1735,2.722,1736,1.622,1737,1.747,1738,1.747,1739,2.722,1740,3.776,1741,3.776,1742,1.747,1743,1.747,1744,3.344,1745,1.747,1746,2.722,1747,2.722,1748,1.747,1749,4.682,1750,2.722,1751,1.747,1752,1.747,1753,1.747,1754,2.722,1755,1.747,1756,1.428,1757,2.722,1758,1.747,1759,1.747,1760,1.35,1761,1.747,1762,1.747,1763,1.747,1764,1.747,1765,1.747,1766,1.747,1767,1.747,1768,1.747,1769,2.722,1770,1.747,1771,2.722,2146,4.952,2147,2.114,2148,2.114,2151,2.114,2152,2.114,2153,2.114,3825,2.433,3826,3.79,3827,2.433,3828,2.433,3829,2.433]],["title/pipes/ToErrorIconClassPipe.html",[793,2.635,3830,2.321]],["body/pipes/ToErrorIconClassPipe.html",[0,0.298,3,0.192,4,0.162,5,0.14,6,0.192,7,0.113,17,0.257,18,0.015,19,0.209,21,0.422,43,3.366,44,2.967,54,0.185,68,0.453,115,0.417,176,0.431,290,0.493,293,1.107,301,0.01,302,0.012,303,0.01,321,0.58,324,0.58,327,0.916,337,1.619,371,0.706,372,0.706,380,1.397,690,5.147,723,3.119,730,4.382,731,3.478,733,3.478,734,4.636,793,4.672,897,4.672,1138,4.672,1153,5.147,3830,4.114,3831,5.923,3832,6.089,3833,5.147,3834,7.007,3835,5.923,3836,7.007,3837,5.923,3838,7.007,3839,7.462,3840,6.935,3841,5.923]],["title/components/ToolbarComponent.html",[374,0.221,454,0.866]],["body/components/ToolbarComponent.html",[0,0.241,3,0.07,4,0.108,5,0.176,6,0.213,7,0.127,14,0.09,15,0.327,17,0.306,18,0.015,19,0.273,21,0.409,29,0.923,31,1.02,32,0.741,46,1.412,48,1.11,54,0.207,59,0.836,68,0.463,80,1.639,88,3.412,115,0.41,117,0.694,123,0.625,133,1.099,134,0.835,135,0.903,137,3.06,142,2.819,143,2.819,145,1.587,146,1.827,147,1.827,150,0.577,160,3.126,176,0.401,179,0.604,182,3.473,186,1.827,194,0.565,223,2.304,252,1.68,259,1.966,261,4.099,263,2.796,264,0.557,265,0.557,266,2.066,283,1.587,289,0.621,290,0.212,293,0.95,301,0.004,302,0.007,303,0.004,318,1.966,319,0.262,321,0.385,324,0.726,327,0.393,334,1.494,336,0.377,337,1.072,341,1.494,348,3.868,352,2.185,357,1.966,358,2.617,371,0.809,372,0.809,374,0.268,375,0.557,376,0.961,377,0.646,378,0.646,380,0.6,381,1.695,382,1.396,383,0.646,385,1.505,386,0.578,387,0.996,388,0.961,389,0.557,390,1.367,391,0.646,392,0.646,393,0.578,394,0.646,395,0.557,396,0.646,397,0.557,398,0.646,399,0.646,400,0.557,401,1.477,402,0.578,403,0.646,404,0.557,405,0.868,406,0.578,407,0.646,408,0.557,409,0.646,410,0.557,411,0.646,412,0.537,413,1.216,414,0.537,415,0.623,416,1.398,417,0.646,418,1.457,419,0.646,420,0.557,421,0.557,422,0.537,423,0.646,424,0.537,425,0.578,426,0.646,427,0.557,428,0.557,429,1.574,430,0.646,431,0.557,432,0.646,433,0.557,434,0.646,435,0.557,436,0.557,437,0.996,438,0.557,439,0.537,440,0.646,441,0.557,442,0.646,443,0.557,444,0.926,445,0.646,446,0.517,447,0.996,448,1.352,449,0.557,450,0.996,451,0.557,452,0.557,453,1.404,454,1.275,455,0.646,456,0.557,457,0.6,458,0.623,459,0.537,460,0.623,461,0.646,465,0.926,480,2.187,492,1.064,498,1.161,501,0.838,508,2.819,510,1.451,511,1.34,516,3.072,518,1.451,527,1.13,530,4.205,533,2.448,536,1.34,549,1.991,550,1.587,551,3.072,586,1.874,604,2.523,608,2.835,619,2.304,649,3.072,686,1.641,702,3.079,713,1.494,726,0.903,859,1.827,912,1.991,922,4.415,924,3.41,948,3.75,950,2.617,951,3.41,953,1.11,954,5.342,955,2.819,983,3.75,987,2.697,993,3.072,998,1.827,999,1.827,1043,2.211,1044,2.813,1046,2.78,1078,2.448,1084,2.178,1128,3.75,1129,2.819,1137,2.288,1138,1.696,1143,1.696,1146,3.072,1147,3.41,1181,1.827,1183,2.617,1184,2.617,1189,2.617,1190,1.696,1191,3.194,1193,2.617,1202,1.696,1203,2.617,1210,2.211,1211,2.617,1212,1.713,1214,1.827,1215,1.696,1216,1.827,1226,3.63,1227,3.063,1266,2.617,1321,3.59,1322,2.819,1357,2.152,1404,1.772,1413,1.827,1419,1.696,1446,4.554,1541,1.991,1575,2.659,1654,1.11,1675,1.696,1726,1.79,1736,2.617,1873,3.072,1881,1.696,1948,3.868,1960,3.072,1961,3.072,1963,3.072,1964,3.072,1965,2.819,2180,5.567,2181,5.567,2187,3.41,2188,4.163,2194,4.68,2195,3.41,2204,3.41,2213,3.41,2219,4.68,2220,5.749,2269,2.211,2290,2.211,2292,2.211,2293,4.163,2310,2.211,2334,4.163,2339,3.41,2340,2.211,2341,2.211,2396,3.41,2513,4.163,2565,1.215,2651,1.494,2652,1.696,2964,2.211,3009,2.211,3161,4.163,3174,1.696,3308,4.752,3336,2.211,3478,3.41,3818,2.211,3840,4.68,3842,2.211,3843,3.925,3844,3.925,3845,4.791,3846,4.791,3847,5.385,3848,6.148,3849,3.925,3850,5.385,3851,3.925,3852,3.925,3853,5.385,3854,3.925,3855,3.925,3856,3.925,3857,3.925,3858,2.544,3859,2.544,3860,2.544,3861,2.544,3862,3.925,3863,2.544,3864,3.925,3865,2.544,3866,3.41,3867,2.544,3868,3.925,3869,2.544,3870,3.925,3871,3.925,3872,2.544,3873,3.925,3874,3.41,3875,2.544,3876,3.925,3877,2.544,3878,3.41,3879,2.544,3880,3.925,3881,2.544,3882,3.925,3883,3.925,3884,3.925,3885,2.544,3886,3.41,3887,3.925,3888,3.925,3889,2.544,3890,3.925,3891,2.544,3892,3.925,3893,3.925,3894,3.925,3895,3.925,3896,3.925,3897,2.544,3898,3.925,3899,2.544,3900,2.544,3901,2.544,3902,2.544,3903,2.544,3904,2.544,3905,2.544,3906,2.544,3907,2.544,3908,2.544,3909,2.544,3910,2.544,3911,2.544,3912,2.544,3913,2.544,3914,2.544,3915,4.791,3916,2.544,3917,2.544,3918,3.925,3919,2.544,3920,3.925,3921,2.544,3922,3.925,3923,3.925,3924,2.544,3925,2.544,3926,2.544,3927,2.544,3928,2.544,3929,3.925,3930,2.544,3931,3.925,3932,3.925,3933,2.544,3934,2.544,3935,5.818,3936,5.818,3937,2.544,3938,2.544,3939,3.072,3940,4.791,3941,5.385,3942,2.544,3943,3.925,3944,2.544,3945,2.544,3946,3.925,3947,3.925,3948,2.544,3949,2.544,3950,4.791,3951,3.925,3952,2.544,3953,2.544,3954,2.544,3955,2.544,3956,2.544,3957,2.544,3958,2.544,3959,2.544,3960,2.544,3961,2.544,3962,2.544,3963,5.385,3964,2.544,3965,2.544,3966,2.544,3967,2.544,3968,2.544,3969,3.925,3970,2.544,3971,2.544,3972,3.925,3973,2.544,3974,3.925,3975,3.925,3976,3.925,3977,2.544,3978,2.544,3979,2.544,3980,2.544,3981,2.544,3982,2.544,3983,2.544,3984,2.544,3985,3.925]],["title/classes/TransitionDelimiterModel.html",[0,0.199,2974,2.635]],["body/classes/TransitionDelimiterModel.html",[0,0.289,2,1.057,3,0.118,4,0.118,5,0.102,6,0.202,7,0.119,14,0.152,15,0.478,17,0.31,18,0.015,19,0.265,21,0.346,29,0.515,54,0.215,59,0.564,68,0.521,105,1.639,115,0.242,117,0.776,124,1.9,150,0.613,176,0.437,194,0.359,252,1.181,289,0.38,290,0.573,301,0.008,302,0.01,303,0.008,319,0.739,371,0.515,372,0.515,473,2.275,509,3.189,650,5.386,686,2.877,702,2.508,716,5.146,726,0.724,758,1.225,915,3.381,946,3.584,1513,3.69,1575,2.398,1589,3.374,1689,3.215,1775,2.402,1797,3.374,1798,3.374,1799,3.374,1896,5.977,1927,2.164,2565,2.063,2645,3.381,2651,3.791,2654,5.053,2693,2.537,2967,3.381,2974,4.588,2987,5.013,2988,3.381,2990,3.381,3172,5.053,3173,4.637,3174,4.305,3215,3.103,3830,3.791,3939,3.381,3986,3.103,3987,6.533,3988,5.885,3989,6.533,3990,6.533,3991,4.32,3992,5.746,3993,5.61,3994,4.32,3995,4.32,3996,4.32,3997,3.754,3998,4.497,3999,5.053,4000,3.381,4001,5.053,4002,5.053,4003,5.053,4004,5.053,4005,5.053,4006,5.053,4007,3.381,4008,5.053,4009,5.053,4010,5.053,4011,5.053,4012,3.381,4013,3.754,4014,3.754,4015,3.754,4016,3.754,4017,3.754,4018,3.754,4019,3.754,4020,3.754,4021,4.993,4022,7.045,4023,3.754,4024,3.754,4025,3.754,4026,3.754,4027,3.754,4028,3.754,4029,3.754,4030,3.754,4031,3.754,4032,3.754,4033,3.754,4034,3.754,4035,3.754,4036,3.754,4037,3.754,4038,3.754,4039,3.754,4040,3.754,4041,3.754,4042,3.754,4043,4.993,4044,3.754,4045,3.754,4046,3.754,4047,4.993,4048,4.993,4049,3.754,4050,6.636,4051,5.61,4052,4.993,4053,3.754,4054,3.754,4055,3.754,4056,3.754,4057,3.754,4058,3.754]],["title/classes/TransitionModel.html",[0,0.199,2693,2.321]],["body/classes/TransitionModel.html",[0,0.274,2,0.975,3,0.109,4,0.109,5,0.094,6,0.221,7,0.13,14,0.14,15,0.453,17,0.325,18,0.015,19,0.285,21,0.328,29,0.649,54,0.208,59,0.71,68,0.51,105,1.691,115,0.223,117,0.833,124,2.237,150,0.58,176,0.43,179,0.332,194,0.332,252,1.089,289,0.351,290,0.599,301,0.007,302,0.009,303,0.007,319,0.76,321,0.533,324,0.735,371,0.475,372,0.475,473,3.506,509,3.021,650,5.868,686,2.784,702,2.375,716,5.006,726,0.668,758,1.543,915,3.119,946,3.44,1513,3.604,1575,3.44,1589,3.639,1689,3.14,1775,2.591,1797,3.195,1798,3.195,1799,3.195,1896,5.868,1927,1.996,2565,1.903,2645,4.85,2651,4.225,2654,4.85,2693,3.195,2967,4.259,2974,4.44,2987,4.647,2988,3.119,2990,3.119,3172,5.212,3173,4.451,3174,4.132,3215,2.862,3830,3.639,3939,4.85,3986,2.862,3987,5.385,3988,5.631,3989,5.385,3990,5.385,3993,5.385,3997,3.463,3998,4.259,3999,4.85,4000,3.119,4001,4.85,4002,4.85,4003,4.85,4004,4.85,4005,4.85,4006,4.85,4007,3.119,4008,4.85,4009,4.85,4010,4.85,4011,4.85,4012,3.119,4013,3.463,4014,3.463,4015,3.463,4016,3.463,4017,5.385,4018,5.385,4019,5.385,4020,3.463,4021,4.729,4022,6.98,4023,3.463,4024,3.463,4025,3.463,4026,3.463,4027,3.463,4028,3.463,4029,3.463,4030,3.463,4031,3.463,4032,3.463,4033,3.463,4034,3.463,4035,3.463,4036,3.463,4037,3.463,4038,3.463,4039,3.463,4040,3.463,4041,3.463,4042,3.463,4043,4.729,4044,3.463,4045,4.729,4046,3.463,4047,4.729,4048,4.729,4049,5.786,4050,6.515,4051,5.385,4052,4.729,4053,3.463,4054,5.786,4055,5.786,4056,5.786,4057,5.786,4058,5.786,4059,5.442,4060,5.442,4061,3.985,4062,3.985,4063,3.985,4064,3.985,4065,3.985,4066,3.985,4067,3.985,4068,3.985,4069,3.985,4070,3.985,4071,3.985,4072,3.985,4073,3.985,4074,3.985,4075,3.985]],["title/components/TransitionSelectionComponent.html",[374,0.221,456,0.866]],["body/components/TransitionSelectionComponent.html",[0,0.252,3,0.097,4,0.137,5,0.083,6,0.212,7,0.127,14,0.205,15,0.416,17,0.3,18,0.015,19,0.27,21,0.446,29,0.938,32,0.773,54,0.11,59,0.757,68,0.376,77,3.409,80,1.71,98,2.07,103,0.741,115,0.373,117,0.629,123,0.757,134,1.012,150,0.483,176,0.425,179,0.555,194,0.651,247,1.684,252,0.964,264,0.772,265,0.772,266,1.857,289,0.696,290,0.293,293,0.523,301,0.006,302,0.009,303,0.006,310,2.76,319,0.515,321,0.49,324,0.698,327,0.545,336,0.523,337,1.366,371,0.596,372,0.596,374,0.325,375,0.772,376,1.223,377,0.895,378,0.895,380,0.832,381,1.739,382,1.055,383,0.895,385,1.223,386,0.802,387,1.269,388,1.223,389,0.772,390,1.604,391,0.895,392,0.895,393,0.802,394,0.895,395,0.772,396,0.895,397,0.772,398,0.895,399,0.895,400,0.772,401,1.693,402,0.802,403,0.895,404,0.772,405,1.052,406,0.802,407,0.895,408,0.772,409,0.895,410,0.772,411,0.895,412,0.744,413,1.474,414,0.744,415,0.863,416,1.436,417,0.895,418,0.802,419,0.895,420,0.772,421,0.772,422,0.744,423,0.895,424,1.503,425,1.136,426,0.895,427,0.772,428,0.772,429,1.558,430,0.895,431,0.772,432,0.895,433,0.772,434,0.895,435,0.772,436,0.772,437,1.269,438,0.772,439,0.744,440,0.895,441,0.772,442,0.895,443,0.772,444,1.633,445,0.895,446,0.717,447,1.269,448,1.461,449,0.772,450,1.269,451,0.772,452,0.772,453,0.772,454,0.772,455,0.895,456,1.384,457,1.573,458,0.863,459,0.744,460,1.223,461,0.895,465,1.179,480,1.526,501,1.161,518,1.848,527,1.68,533,3.622,604,3.057,608,3.325,619,2.07,622,2.631,640,4.169,686,1.474,702,1.539,726,1.117,758,1.791,882,3.064,891,1.858,892,1.304,916,1.539,1014,0.832,1044,3.409,1046,1.414,1078,2.2,1084,3.222,1137,2.772,1183,2.351,1184,2.351,1189,2.351,1190,2.351,1191,3.332,1193,3.332,1202,2.351,1203,2.351,1211,2.351,1227,1.857,1259,3.701,1289,1.857,1336,3.064,1357,1.848,1404,1.304,1722,2.351,1726,2.28,1775,2.64,1784,3.325,1795,4.066,1796,3.057,1802,3.622,1807,1.957,1811,2.2,1812,2.07,1819,2.935,1881,3.332,1902,2.351,1914,4.343,1915,4.343,1926,2.2,1927,1.766,2242,1.766,2243,1.766,2527,2.631,2565,2.387,2588,2.351,2589,2.351,2593,2.533,2651,2.07,2652,2.351,2924,3.064,2930,4.544,2950,3.589,2951,4.544,2952,3.912,2987,2.351,2993,3.064,2995,2.2,3000,3.064,3004,3.064,3016,2.76,3017,2.76,3019,2.76,3032,5.045,3036,4.343,3040,4.343,3042,4.343,3048,4.343,3052,3.064,3054,3.064,3057,4.343,3059,3.912,3063,4.343,3066,3.064,3067,3.064,3068,3.064,3069,3.064,3070,3.064,3071,2.76,3072,3.064,3073,3.064,3074,3.064,3075,3.064,3076,3.064,3077,3.064,3078,4.343,3168,3.064,3171,5.045,3173,2.533,3174,3.332,3216,3.064,3332,2.76,3333,4.343,3347,3.064,3350,3.064,3354,3.064,3355,3.064,3356,3.064,3708,3.064,3988,2.76,4076,6.713,4077,6.924,4078,6.315,4079,6.315,4080,6.315,4081,3.526,4082,3.526,4083,3.526,4084,3.526,4085,3.526,4086,3.526,4087,3.526,4088,3.526,4089,3.526,4090,3.526,4091,5.488,4092,3.526,4093,3.526,4094,3.526,4095,3.526,4096,3.526,4097,4.998,4098,3.526,4099,5.805,4100,3.526,4101,4.998,4102,6.924,4103,4.998,4104,3.526,4105,3.526,4106,3.526,4107,3.526,4108,3.526,4109,3.526,4110,3.526,4111,3.526,4112,3.526,4113,3.064,4114,3.526,4115,3.526,4116,3.526,4117,3.526,4118,4.998,4119,3.526,4120,3.526,4121,3.526,4122,3.526,4123,3.526,4124,3.526,4125,3.526,4126,3.526,4127,4.998]],["title/coverage.html",[4128,4.702]],["body/coverage.html",[0,0.415,1,2.266,5,0.086,6,0.231,7,0.136,8,4.596,17,0.157,18,0.015,26,3.37,28,1.913,31,1.457,33,1.457,36,2.016,39,2.133,41,2.133,43,1.585,49,2.016,52,2.016,55,2.422,64,2.609,113,2.133,123,0.474,135,0.684,289,0.645,293,0.875,301,0.006,302,0.009,303,0.006,304,3.597,305,2.422,307,3.995,308,3.995,340,2.609,345,2.422,374,0.46,375,0.796,379,3.157,389,0.796,393,0.826,395,0.796,397,0.796,400,0.796,402,0.826,404,0.796,405,1.16,406,0.826,408,0.796,410,0.796,412,0.767,414,0.767,418,0.826,420,0.796,421,0.796,424,0.767,427,0.796,428,0.796,429,0.738,431,0.796,433,0.796,435,0.796,436,0.796,438,0.796,439,0.767,441,0.796,443,0.796,444,0.857,446,0.738,448,0.767,449,0.796,451,0.796,452,0.796,453,0.796,454,0.796,456,0.796,459,0.767,462,3.157,463,3.157,464,1.519,513,3.157,514,3.157,534,3.157,535,4.206,602,4.618,603,3.157,615,2.609,658,3.157,726,1.403,793,2.422,795,5.021,796,5.472,891,1.069,893,3.157,897,2.422,899,2.843,901,2.843,903,2.843,905,2.843,907,2.843,909,2.843,916,1.585,917,3.157,918,4.238,1020,4.435,1021,4.238,1243,4.206,1244,4.206,1254,2.687,1325,2.843,1326,4.435,1435,3.157,1436,3.157,1476,2.422,1503,2.843,1536,3.157,1550,2.266,1551,4.495,1565,1.457,1568,2.266,1573,2.266,1580,2.266,1589,2.133,1716,3.184,1775,1.519,1776,3.993,1777,3.993,1782,2.133,1784,1.913,1794,2.016,1850,3.157,1851,3.157,2056,3.157,2087,2.266,2154,3.157,2155,5.127,2362,3.157,2373,2.843,2374,4.435,2375,4.435,2521,3.157,2527,1.913,2528,3.995,2529,3.995,2536,2.266,2565,2.437,2572,3.995,2573,3.995,2582,2.609,2638,2.843,2639,3.157,2677,4.618,2684,2.609,2693,2.133,2695,2.422,2818,3.157,2819,5.009,2881,3.732,2921,3.157,2974,2.422,3037,3.157,3079,3.157,3258,3.995,3320,3.157,3332,3.995,3374,3.157,3406,2.843,3407,4.435,3517,2.609,3565,3.995,3644,5.127,3812,3.157,3821,3.157,3830,2.133,3832,3.157,3833,3.157,3842,3.157,3986,3.666,4076,3.157,4128,3.157,4129,2.843,4130,3.633,4131,7.703,4132,3.633,4133,3.633,4134,3.633,4135,3.633,4136,3.633,4137,3.633,4138,6.399,4139,3.633,4140,5.561,4141,5.104,4142,3.633,4143,5.104,4144,3.633,4145,5.9,4146,3.633,4147,3.633,4148,3.633,4149,3.633,4150,3.633,4151,3.633,4152,3.633,4153,5.104,4154,5.9,4155,3.633,4156,5.9,4157,5.9,4158,3.633,4159,3.633,4160,3.633,4161,3.633,4162,3.633,4163,3.633,4164,5.104,4165,3.633,4166,3.633,4167,5.104,4168,3.633,4169,3.633,4170,3.633,4171,6.742,4172,3.633,4173,3.157,4174,3.633,4175,7.549,4176,3.157,4177,3.633,4178,3.633,4179,3.633,4180,3.633,4181,6.399,4182,3.633,4183,6.399,4184,3.633,4185,3.633,4186,3.633,4187,3.633,4188,3.633,4189,3.633,4190,3.633,4191,3.633,4192,5.104,4193,5.104,4194,3.633,4195,5.104,4196,3.633,4197,3.633,4198,3.633,4199,3.633,4200,3.633,4201,3.633,4202,3.633,4203,3.633,4204,3.633,4205,3.633,4206,3.633,4207,3.633,4208,3.633,4209,3.633,4210,3.633,4211,3.633,4212,3.633,4213,3.633,4214,3.157,4215,3.157,4216,3.157,4217,3.157,4218,3.633]],["title/dependencies.html",[313,2.364,785,2.968]],["body/dependencies.html",[18,0.015,24,3.619,301,0.011,302,0.012,303,0.011,335,2.192,785,3.845,787,5.449,1175,4.109,1537,5.356,1548,4.824,4091,5.356,4219,6.164,4220,6.164,4221,6.164,4222,6.164,4223,6.164,4224,6.164,4225,6.164,4226,6.164,4227,6.164,4228,6.164,4229,6.164,4230,5.356,4231,6.164,4232,7.173,4233,6.164,4234,6.164,4235,6.164,4236,6.164,4237,6.164,4238,6.164,4239,6.164,4240,6.164,4241,6.164,4242,6.164,4243,6.164,4244,6.164,4245,6.164,4246,7.173,4247,6.164,4248,6.164,4249,6.164,4250,6.164,4251,6.164]],["title/miscellaneous/enumerations.html",[4252,2.364,4253,4.135]],["body/miscellaneous/enumerations.html",[3,0.153,6,0.207,7,0.122,14,0.197,18,0.015,45,3.229,46,3.753,47,4.508,172,4.008,221,4.508,223,3.97,247,3.229,264,1.223,265,1.481,290,0.699,293,0.828,301,0.01,302,0.012,303,0.01,439,1.427,509,4.038,510,2.501,536,2.938,538,5.292,723,3.56,946,3.098,1442,4.368,1448,4.368,1464,3.387,1503,4.368,1513,3.387,1514,4.849,1515,4.849,1541,4.368,1548,5.292,1776,3.481,1777,4.218,1779,4.849,1796,3.56,1797,4.44,1798,4.44,1799,4.44,1800,4.508,2182,4.856,2184,5.876,2651,3.97,2987,4.508,3830,3.277,3986,4.008,3998,5.292,3999,4.368,4000,4.368,4001,4.368,4002,4.368,4003,4.368,4004,4.368,4005,4.368,4006,4.368,4007,4.368,4008,4.368,4009,4.368,4010,4.368,4011,4.368,4012,4.368,4252,4.008,4253,4.849,4254,7.562,4255,5.58,4256,5.58,4257,6.762,4258,5.58,4259,5.58,4260,6.762,4261,6.762,4262,6.762,4263,6.762]],["title/index.html",[14,0.116,4264,2.861,4265,2.861]],["body/index.html",[7,0.13,18,0.014,29,0.867,75,2.335,138,5.079,221,3.724,223,3.28,248,3.1,301,0.01,302,0.012,303,0.01,318,2.797,319,0.576,349,4.011,382,1.748,405,1.404,651,6.324,688,3.724,702,2.437,706,4.371,785,3.485,826,4.011,832,3.724,1100,3.724,1143,4.511,1254,2.941,1464,2.797,1686,3.28,1887,4.371,1947,4.371,1948,4.859,1965,4.011,2125,4.853,2160,4.853,2178,5.295,2182,4.011,2963,4.371,3085,6.573,3213,4.371,3768,4.371,3797,5.879,3866,5.879,3878,5.879,3886,4.853,4129,5.696,4266,5.585,4267,5.585,4268,5.585,4269,5.585,4270,5.585,4271,5.585,4272,7.564,4273,5.585,4274,5.585,4275,5.585,4276,5.585,4277,5.585,4278,5.585,4279,5.585,4280,5.585,4281,5.585,4282,5.585,4283,5.585,4284,5.585,4285,5.585,4286,5.585,4287,7.278,4288,7.278,4289,6.765,4290,5.585,4291,5.585,4292,5.585,4293,5.585,4294,5.585,4295,5.585,4296,7.564,4297,5.585,4298,5.585,4299,5.585,4300,5.585,4301,5.585,4302,5.585,4303,5.585,4304,5.585,4305,4.853,4306,5.585,4307,4.853,4308,5.585,4309,7.747,4310,5.585,4311,5.585,4312,5.585,4313,5.585,4314,5.585,4315,5.585,4316,5.585,4317,5.585,4318,5.585,4319,5.585]],["title/license.html",[810,2.364,4264,2.861,4265,2.861]],["body/license.html",[0,0.172,4,0.209,5,0.17,9,1.425,18,0.01,19,0.12,21,0.206,32,0.527,77,2.002,88,1.892,115,0.319,139,2.448,251,2.448,266,1.795,299,3.115,301,0.008,302,0.008,303,0.006,352,3.397,406,0.775,480,1.041,520,2.962,554,2.532,596,2.273,618,2.962,654,2.962,686,1.425,688,2.273,706,5.644,713,2.002,718,2.668,802,6.012,807,2.668,808,5.745,809,4.868,810,5.889,811,4.46,812,4.46,813,4.46,814,2.668,815,2.668,816,3.799,817,2.668,818,4.868,819,3.799,820,4.46,821,4.46,822,4.868,823,3.819,824,4.46,825,3.819,826,4.727,827,4.46,828,6.012,829,3.819,830,3.819,831,3.819,832,2.273,833,2.448,834,2.668,835,2.668,836,4.46,837,2.668,913,2.962,939,5.151,950,2.273,953,2.988,979,2.962,980,6.012,987,1.708,988,2.962,1014,0.804,1078,2.127,1110,2.962,1116,4.951,1137,2.97,1143,3.799,1174,2.569,1357,1.261,1390,2.668,1392,2.962,1393,2.962,1461,3.819,1545,2.962,1567,3.253,1614,2.002,1647,3.253,1654,2.129,1690,2.273,1756,2.002,1873,2.668,1877,2.273,1902,3.799,1939,2.962,2159,6.379,2179,4.951,2183,2.962,2302,2.962,2430,2.962,2482,2.962,2771,3.819,2772,3.819,2786,3.819,2950,3.504,2954,2.962,2963,2.668,2984,4.24,3145,2.668,3178,2.668,3213,4.46,3215,4.467,3299,2.668,3308,2.448,3536,2.448,3768,6.426,3874,2.962,4113,2.962,4129,4.46,4176,2.962,4305,2.962,4307,2.962,4320,3.409,4321,3.409,4322,3.409,4323,7.341,4324,6.22,4325,6.582,4326,7.79,4327,7.448,4328,3.409,4329,3.409,4330,7.448,4331,6.847,4332,7.448,4333,4.879,4334,3.409,4335,6.582,4336,3.409,4337,3.409,4338,3.409,4339,6.22,4340,3.409,4341,3.409,4342,6.22,4343,3.409,4344,5.698,4345,4.879,4346,4.879,4347,3.409,4348,7.911,4349,6.22,4350,4.879,4351,3.409,4352,4.879,4353,3.409,4354,3.409,4355,3.409,4356,3.409,4357,3.409,4358,3.409,4359,5.698,4360,3.409,4361,4.879,4362,3.409,4363,3.409,4364,6.847,4365,6.22,4366,3.409,4367,3.409,4368,3.409,4369,3.409,4370,3.409,4371,3.409,4372,5.698,4373,3.409,4374,7.341,4375,3.409,4376,4.879,4377,3.409,4378,7.911,4379,7.943,4380,3.409,4381,3.409,4382,3.409,4383,3.409,4384,3.409,4385,4.879,4386,5.698,4387,3.409,4388,3.409,4389,3.409,4390,3.409,4391,6.22,4392,6.582,4393,3.409,4394,4.879,4395,6.22,4396,4.879,4397,3.409,4398,6.582,4399,4.879,4400,3.409,4401,3.409,4402,5.698,4403,3.409,4404,3.409,4405,3.409,4406,3.409,4407,4.879,4408,3.409,4409,3.409,4410,3.409,4411,5.698,4412,3.409,4413,3.409,4414,5.698,4415,3.409,4416,3.409,4417,3.409,4418,7.448,4419,3.409,4420,3.409,4421,4.879,4422,5.698,4423,4.879,4424,4.879,4425,4.879,4426,4.879,4427,4.879,4428,5.698,4429,4.879,4430,4.879,4431,4.879,4432,4.879,4433,3.409,4434,4.879,4435,3.409,4436,6.582,4437,7.05,4438,4.879,4439,4.879,4440,4.879,4441,3.409,4442,4.879,4443,3.409,4444,3.409,4445,3.409,4446,5.698,4447,3.409,4448,3.409,4449,4.879,4450,4.879,4451,3.409,4452,3.409,4453,3.409,4454,3.409,4455,3.409,4456,3.409,4457,3.409,4458,4.879,4459,3.409,4460,3.409,4461,3.409,4462,3.409,4463,3.409,4464,3.409,4465,3.409,4466,3.409,4467,3.409,4468,3.409,4469,3.409,4470,3.409,4471,7.211,4472,3.409,4473,3.409,4474,3.409,4475,3.409,4476,6.22,4477,4.879,4478,6.22,4479,3.409,4480,3.409,4481,3.409,4482,3.409,4483,3.409,4484,3.409,4485,4.879,4486,4.879,4487,3.409,4488,3.409,4489,4.879,4490,3.409,4491,3.409,4492,6.582,4493,3.409,4494,3.409,4495,3.409,4496,3.409,4497,3.409,4498,3.409,4499,5.698,4500,3.409,4501,3.409,4502,3.409,4503,3.409,4504,3.409,4505,3.409,4506,3.409,4507,3.409,4508,4.879,4509,3.409,4510,3.409,4511,3.409,4512,3.409,4513,3.409,4514,3.409,4515,3.409,4516,3.409,4517,3.409,4518,6.22,4519,4.879,4520,4.879,4521,3.409,4522,3.409,4523,3.409,4524,3.409,4525,3.409,4526,3.409,4527,3.409,4528,3.409,4529,4.879,4530,3.409,4531,3.409,4532,3.409,4533,6.582,4534,3.409,4535,3.409,4536,3.409,4537,3.409,4538,3.409,4539,3.409,4540,3.409,4541,3.409,4542,6.582,4543,3.409,4544,3.409,4545,3.409,4546,3.409,4547,3.409,4548,3.409,4549,3.409,4550,3.409,4551,3.409,4552,3.409,4553,3.409,4554,3.409,4555,3.409,4556,3.409,4557,5.698,4558,3.409,4559,3.409,4560,3.409,4561,3.409,4562,4.879,4563,3.409,4564,3.409,4565,3.409,4566,3.409,4567,3.409,4568,3.409,4569,3.409,4570,3.409,4571,3.409,4572,3.409,4573,3.409,4574,3.409,4575,3.409,4576,3.409,4577,4.879,4578,3.409,4579,3.409,4580,4.879,4581,4.879,4582,3.409,4583,3.409,4584,3.409,4585,3.409,4586,3.409,4587,3.409,4588,3.409,4589,3.409,4590,3.409,4591,3.409,4592,3.409]],["title/modules.html",[784,3.608]],["body/modules.html",[18,0.013,301,0.011,302,0.013,303,0.011,783,4.323,784,4.323,1078,4.607,1100,4.924,1521,4.656,4593,7.385,4594,7.385]],["title/overview.html",[4595,4.702]],["body/overview.html",[2,1.206,18,0.015,33,2.758,36,3.819,39,4.039,41,4.039,49,3.819,52,3.819,263,2.151,301,0.009,302,0.011,303,0.009,306,3.286,375,1.699,376,1.206,386,1.12,389,1.08,393,1.763,395,1.507,397,1.507,400,1.507,402,1.763,404,1.736,408,1.507,410,1.507,412,1.452,414,1.452,418,1.564,420,1.507,421,1.507,424,1.452,427,1.507,428,1.507,431,1.507,433,1.507,435,1.507,436,1.507,438,1.507,441,1.507,443,1.507,446,1.577,448,1.637,449,1.507,451,1.507,452,1.507,453,1.507,454,1.507,456,1.507,459,1.452,605,3.54,713,2.894,782,3.286,783,5.669,784,3.286,785,3.075,786,3.857,787,3.54,788,3.857,789,4.283,790,4.283,791,4.283,792,4.283,793,4.587,794,4.899,1014,1.477,1521,5.735,1522,4.283,1523,4.283,1525,4.283,1760,3.475,3536,3.54,3830,2.894,4140,4.283,4173,4.283,4595,4.283,4596,4.928]],["title/miscellaneous/variables.html",[4252,2.364,4597,4.135]],["body/miscellaneous/variables.html",[6,0.143,7,0.084,14,0.183,17,0.349,18,0.015,26,4.177,59,0.99,103,1.046,188,3.736,192,3.736,290,0.67,301,0.009,302,0.011,303,0.009,314,5.776,319,0.831,343,6.369,362,5.776,382,1.674,795,3.736,796,6.144,839,6.726,899,5.069,900,4.521,901,5.069,902,4.521,903,5.069,904,4.521,905,5.069,906,4.521,907,5.069,908,4.521,909,5.069,910,4.521,953,3.221,1450,5.3,4214,4.521,4215,4.521,4216,4.521,4217,4.521,4230,6.413,4252,3.736,4597,4.521,4598,7.74,4599,5.202,4600,5.202,4601,5.202,4602,5.202,4603,7.38,4604,7.38,4605,7.38,4606,7.38,4607,7.38,4608,7.38,4609,7.38,4610,7.38,4611,7.052,4612,7.38,4613,7.052,4614,7.38,4615,7.052,4616,7.38,4617,7.052,4618,5.202,4619,5.202,4620,5.202,4621,5.202,4622,5.202,4623,5.202]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":726,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["0.5.1",{"_index":4237,"title":{},"body":{"dependencies.html":{}}}],["0.7.2",{"_index":4235,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":4251,"title":{},"body":{"dependencies.html":{}}}],["0.9.2017.07.28",{"_index":57,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["0/1",{"_index":4131,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":4158,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":4181,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":4167,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":4179,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":4168,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":4139,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":4166,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":4188,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":4184,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":4143,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":4153,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":4172,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":4170,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4171,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4145,"title":{},"body":{"coverage.html":{}}}],["0/48",{"_index":4187,"title":{},"body":{"coverage.html":{}}}],["0/49",{"_index":4182,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":4138,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":4190,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":4183,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":4156,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":4157,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1014,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{},"overview.html":{}}}],["1).tostring",{"_index":1583,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{}}}],["1.1.20150312",{"_index":4226,"title":{},"body":{"dependencies.html":{}}}],["1.1.6",{"_index":4247,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":1540,"title":{},"body":{"classes/Examples.html":{}}}],["1/13",{"_index":4169,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":4141,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":4197,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":4191,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":4177,"title":{},"body":{"coverage.html":{}}}],["1/27",{"_index":4149,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":4193,"title":{},"body":{"coverage.html":{}}}],["1/30",{"_index":4163,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":4208,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1289,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["10/51",{"_index":4148,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1308,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["1000000",{"_index":2721,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{}}}],["1000000).tostring",{"_index":2559,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["11",{"_index":4164,"title":{},"body":{"coverage.html":{}}}],["11/37",{"_index":4206,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":4210,"title":{},"body":{"coverage.html":{}}}],["14/34",{"_index":4135,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":4161,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":4151,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":4147,"title":{},"body":{"coverage.html":{}}}],["1].touppercase",{"_index":3917,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["2",{"_index":1760,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"classes/TextNode.html":{},"overview.html":{}}}],["2.0",{"_index":812,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["2.0.0",{"_index":4241,"title":{},"body":{"dependencies.html":{}}}],["2.20.1",{"_index":4239,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":4224,"title":{},"body":{"dependencies.html":{}}}],["2.5.5",{"_index":4228,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1546,"title":{},"body":{"classes/Examples.html":{}}}],["2/12",{"_index":4162,"title":{},"body":{"coverage.html":{}}}],["2/18",{"_index":4165,"title":{},"body":{"coverage.html":{}}}],["2/31",{"_index":4155,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":4213,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":4185,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":932,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["2004",{"_index":4321,"title":{},"body":{"license.html":{}}}],["2017",{"_index":803,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["204",{"_index":930,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["23",{"_index":4195,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":4207,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":2504,"title":{},"body":{"classes/LineModel.html":{}}}],["28",{"_index":4212,"title":{},"body":{"coverage.html":{}}}],["29",{"_index":4205,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1716,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["3.0.1",{"_index":4242,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":4245,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":4233,"title":{},"body":{"dependencies.html":{}}}],["3/50",{"_index":4178,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":64,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{}}}],["30).tostring",{"_index":1220,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["300",{"_index":1307,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["30000",{"_index":63,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["32",{"_index":4596,"title":{},"body":{"overview.html":{}}}],["33",{"_index":4192,"title":{},"body":{"coverage.html":{}}}],["34",{"_index":4173,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["35",{"_index":4159,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":4198,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":1537,"title":{},"body":{"classes/Examples.html":{},"dependencies.html":{}}}],["4.1.2",{"_index":4222,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":4231,"title":{},"body":{"dependencies.html":{}}}],["4/27",{"_index":4211,"title":{},"body":{"coverage.html":{}}}],["4/53",{"_index":4180,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":3184,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["41",{"_index":4134,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":2521,"title":{},"body":{"classes/LineModel.html":{},"coverage.html":{}}}],["5/21",{"_index":4203,"title":{},"body":{"coverage.html":{}}}],["5/24",{"_index":4186,"title":{},"body":{"coverage.html":{}}}],["5/43",{"_index":4189,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":4176,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["500",{"_index":748,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["52",{"_index":4200,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":4154,"title":{},"body":{"coverage.html":{}}}],["6.1.0",{"_index":4221,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":4249,"title":{},"body":{"dependencies.html":{}}}],["6/20",{"_index":4144,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":4136,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":4140,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["7/11",{"_index":4137,"title":{},"body":{"coverage.html":{}}}],["7/19",{"_index":4199,"title":{},"body":{"coverage.html":{}}}],["7/20",{"_index":4160,"title":{},"body":{"coverage.html":{}}}],["7/30",{"_index":4196,"title":{},"body":{"coverage.html":{}}}],["8/23",{"_index":4174,"title":{},"body":{"coverage.html":{}}}],["8/45",{"_index":4152,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1756,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"components/MappingFieldContainerComponent.html":{},"classes/TextNode.html":{},"license.html":{}}}],["9/17",{"_index":4201,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":4043,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["_cfg",{"_index":2161,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["_issource",{"_index":3661,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["_lmcinstance",{"_index":16,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["_nodes",{"_index":1593,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["_showmappingpreview",{"_index":148,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["_type",{"_index":3672,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["above",{"_index":4305,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":1555,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["accept",{"_index":1923,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["acceptance",{"_index":4560,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":4557,"title":{},"body":{"license.html":{}}}],["acceptinput",{"_index":2925,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acceptinput(event",{"_index":2945,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["access",{"_index":2347,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["accessing",{"_index":2261,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["accessors",{"_index":1045,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/FileManagementService.html":{}}}],["accordingly",{"_index":3883,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["acp",{"_index":2985,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acp.length",{"_index":3001,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acp[0].value",{"_index":3002,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acp[1].value",{"_index":3003,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acpv",{"_index":2997,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acpv.push(argument",{"_index":2999,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["act",{"_index":4566,"title":{},"body":{"license.html":{}}}],["acting",{"_index":4337,"title":{},"body":{"license.html":{}}}],["action",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["action's",{"_index":1872,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action'},{'name",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.argumentvalues",{"_index":1811,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.argumentvalues.length",{"_index":1812,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.argumentvalues.values",{"_index":3074,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.argumentvalues[argvalindex].value",{"_index":3023,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["action.component",{"_index":877,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["action.component.html",{"_index":3038,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts",{"_index":3037,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"coverage.html":{}}}],["action.component.ts:29",{"_index":3043,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:30",{"_index":3045,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:31",{"_index":3044,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:32",{"_index":3046,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:33",{"_index":3058,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:35",{"_index":3051,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:39",{"_index":3053,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:43",{"_index":3047,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:47",{"_index":3050,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:56",{"_index":3055,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:66",{"_index":3049,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.definition",{"_index":1808,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["action.model",{"_index":1927,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.model.ts",{"_index":1777,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["action.model.ts:101",{"_index":1793,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:18",{"_index":1832,"title":{},"body":{"classes/FieldActionArgument.html":{}}}],["action.model.ts:19",{"_index":1834,"title":{},"body":{"classes/FieldActionArgument.html":{}}}],["action.model.ts:20",{"_index":1835,"title":{},"body":{"classes/FieldActionArgument.html":{}}}],["action.model.ts:21",{"_index":1833,"title":{},"body":{"classes/FieldActionArgument.html":{}}}],["action.model.ts:25",{"_index":1836,"title":{},"body":{"classes/FieldActionArgumentValue.html":{}}}],["action.model.ts:26",{"_index":1837,"title":{},"body":{"classes/FieldActionArgumentValue.html":{}}}],["action.model.ts:37",{"_index":1844,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:38",{"_index":1841,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:39",{"_index":1840,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:40",{"_index":1842,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:41",{"_index":1846,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:42",{"_index":1847,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:43",{"_index":1843,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:44",{"_index":1845,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:46",{"_index":1849,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:65",{"_index":1848,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:77",{"_index":1786,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:78",{"_index":1785,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:79",{"_index":1783,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:81",{"_index":1788,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:88",{"_index":1790,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.multiplicity",{"_index":1957,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.name",{"_index":1807,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionComponent.html":{},"classes/MappingUtil.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.service",{"_index":51,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["action.service.ts",{"_index":1851,"title":{},"body":{"injectables/FieldActionService.html":{},"coverage.html":{}}}],["action.service.ts:112",{"_index":1895,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:134",{"_index":1898,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:142",{"_index":1889,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:169",{"_index":1891,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:202",{"_index":1913,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:242",{"_index":1871,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:264",{"_index":1901,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:279",{"_index":1880,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:28",{"_index":1918,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:29",{"_index":1917,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:304",{"_index":1886,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:339",{"_index":1906,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:351",{"_index":1911,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:357",{"_index":1888,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:36",{"_index":1925,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:37",{"_index":1924,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:39",{"_index":1869,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:46",{"_index":1893,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.setargumentvalue(arg.name",{"_index":1817,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["action.sourcetype",{"_index":2044,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.targettype",{"_index":2048,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actionconfigparamselectionchanged",{"_index":2926,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["actionconfigparamselectionchanged(event",{"_index":2947,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["actionconfigparamval",{"_index":3035,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["actionconfigs",{"_index":1978,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actionconfigs.push(fieldactionconfig",{"_index":1992,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondef",{"_index":1973,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondef.name",{"_index":1974,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondefinition",{"_index":3227,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{}}}],["actiondefinition.populatefieldaction(action",{"_index":3230,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{}}}],["actiondetail",{"_index":1892,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.actionschema",{"_index":2010,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.actionschema.properties[key",{"_index":2013,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.custom",{"_index":2001,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.method",{"_index":2007,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.multiplicity",{"_index":2008,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.name",{"_index":1999,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.sourcetype",{"_index":2003,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.targettype",{"_index":2005,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actionindex",{"_index":2935,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["actionname",{"_index":1896,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["actions",{"_index":1852,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{}}}],["actions.concat(arr",{"_index":1972,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actionsexistforfield",{"_index":3039,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["active",{"_index":709,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/LineModel.html":{},"components/MappingListComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/NamespaceListComponent.html":{}}}],["activemapping",{"_index":2474,"title":{},"body":{"classes/LineModel.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["activemapping.islookupmode",{"_index":2901,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["acts",{"_index":4540,"title":{},"body":{"license.html":{}}}],["actual",{"_index":2303,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["actual_component",{"_index":461,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["actualdelimiter",{"_index":3987,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["add",{"_index":1654,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/NamespaceListComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["adddocument(docinitmodel",{"_index":193,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["adddocuments(docmodels",{"_index":232,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["added",{"_index":1635,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["addeditnamespace",{"_index":3588,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["addeditnamespace(ns",{"_index":3596,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["addendum",{"_index":4491,"title":{},"body":{"license.html":{}}}],["adderror",{"_index":1437,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["adderror(message",{"_index":1449,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["addfield(field",{"_index":2745,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["adding",{"_index":353,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["additional",{"_index":4492,"title":{},"body":{"license.html":{}}}],["additions",{"_index":4393,"title":{},"body":{"license.html":{}}}],["addline(l",{"_index":2447,"title":{},"body":{"classes/LineModel.html":{}}}],["addlinefromparams(sourcex",{"_index":2438,"title":{},"body":{"classes/LineModel.html":{}}}],["addmappedfield(mappedfield",{"_index":2760,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["addmapping",{"_index":3336,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/ToolbarComponent.html":{}}}],["addtable",{"_index":2825,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["addtable(table",{"_index":2843,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["addtransformation",{"_index":3190,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["addvalidationerror(message",{"_index":2723,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["adjust",{"_index":1155,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["adm",{"_index":348,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["adm,.jar",{"_index":3928,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["admhttptimeout",{"_index":62,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["admredrawmappinglinesevent",{"_index":1,"title":{"classes/AdmRedrawMappingLinesEvent.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/LineModel.html":{},"coverage.html":{}}}],["advised",{"_index":4555,"title":{},"body":{"license.html":{}}}],["aftercontentchecked",{"_index":2363,"title":{},"body":{"directives/FocusDirective.html":{}}}],["afterviewinit",{"_index":1250,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["again",{"_index":3954,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["against",{"_index":4450,"title":{},"body":{"license.html":{}}}],["aggregatebuffer",{"_index":2288,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["agree",{"_index":4569,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":821,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["agreement",{"_index":4505,"title":{},"body":{"license.html":{}}}],["alertmodule",{"_index":848,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["alertmodule.forroot",{"_index":908,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["alertmoduleforroot",{"_index":907,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alias",{"_index":2112,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["alleging",{"_index":4455,"title":{},"body":{"license.html":{}}}],["allfields",{"_index":3675,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["allowdrop",{"_index":1027,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["allowdrop(event",{"_index":1055,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["alone",{"_index":654,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"license.html":{}}}],["along",{"_index":4483,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":4490,"title":{},"body":{"license.html":{}}}],["alphabetizefields(fields",{"_index":1363,"title":{},"body":{"classes/EnumValue.html":{}}}],["alphebatize",{"_index":3804,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["already",{"_index":511,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["alt",{"_index":3934,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["ampersand",{"_index":3999,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["and(b",{"_index":4467,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":4473,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":4479,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":4563,"title":{},"body":{"license.html":{}}}],["angle",{"_index":531,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["angular",{"_index":311,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["angular/animations",{"_index":4220,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":841,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["angular/common/http",{"_index":333,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["angular/core",{"_index":327,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"modules/ExampleAppModule.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["angular/forms",{"_index":847,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["angular/platform",{"_index":1099,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"modules/ExampleAppModule.html":{},"classes/LineModel.html":{}}}],["angular/router",{"_index":1530,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["angular2",{"_index":2480,"title":{},"body":{"classes/LineModel.html":{}}}],["annotations",{"_index":1545,"title":{},"body":{"classes/Examples.html":{},"license.html":{}}}],["another",{"_index":4306,"title":{},"body":{"index.html":{}}}],["answer",{"_index":1749,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["answer.push(fn",{"_index":1764,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["answer.push(new",{"_index":1757,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["any_date",{"_index":2049,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["apache",{"_index":809,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["apihttpxsrftokenextractor",{"_index":305,"title":{"injectables/ApiHttpXsrfTokenExtractor.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{},"coverage.html":{}}}],["apixsrfinterceptor",{"_index":345,"title":{"interceptors/ApiXsrfInterceptor.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{},"coverage.html":{}}}],["app",{"_index":3959,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["app.component",{"_index":614,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["app.component.ts",{"_index":4142,"title":{},"body":{"coverage.html":{}}}],["app.module.ts",{"_index":1527,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["appcomponent",{"_index":375,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":988,"title":{},"body":{"classes/DataMapperUtil.html":{},"license.html":{}}}],["append",{"_index":1656,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["appended",{"_index":1652,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["appendfieldnode(mfield",{"_index":1768,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["appendix",{"_index":4376,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":819,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldDetailComponent.html":{},"license.html":{}}}],["application/json",{"_index":1920,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["application/octet",{"_index":1921,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["applied",{"_index":1882,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["applies",{"_index":4441,"title":{},"body":{"license.html":{}}}],["appliestofield",{"_index":1854,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["appliestofield(action",{"_index":1870,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["appliestosourcefield",{"_index":1855,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["appliestosourcefield(action",{"_index":1878,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["appliestotargetfield",{"_index":1856,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["appliestotargetfield(action",{"_index":1884,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["apply",{"_index":4577,"title":{},"body":{"license.html":{}}}],["appropriate",{"_index":4584,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":4527,"title":{},"body":{"license.html":{}}}],["archive",{"_index":3882,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["archives",{"_index":4591,"title":{},"body":{"license.html":{}}}],["area",{"_index":2320,"title":{},"body":{"injectables/FileManagementService.html":{},"components/MappingFieldContainerComponent.html":{}}}],["arg",{"_index":1813,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["argconfig",{"_index":2936,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argconfig.values",{"_index":2998,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argconfig.values[argvalindex",{"_index":3027,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argconfigname",{"_index":2971,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument",{"_index":1819,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["argument'},{'name",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["argument.component",{"_index":878,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["argument.component.html",{"_index":2922,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts",{"_index":2921,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"coverage.html":{}}}],["argument.component.ts:132",{"_index":2958,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:146",{"_index":2966,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:150",{"_index":2978,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:157",{"_index":2975,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:30",{"_index":2939,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:31",{"_index":2940,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:32",{"_index":2942,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:33",{"_index":2941,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:34",{"_index":2943,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:35",{"_index":2944,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:37",{"_index":2986,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:38",{"_index":2938,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:45",{"_index":2972,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:52",{"_index":2953,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:62",{"_index":2946,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:71",{"_index":2956,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:84",{"_index":2980,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:99",{"_index":2948,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.name",{"_index":1820,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["argumentdefinition",{"_index":2015,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentdefinition.name",{"_index":2016,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentdefinition.serviceobject",{"_index":2021,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentdefinition.type",{"_index":2017,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentdefinition.values",{"_index":2019,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentname",{"_index":1791,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["arguments",{"_index":1802,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["argumentvalues",{"_index":1778,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["argval",{"_index":3054,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["argvalindex",{"_index":2937,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argvalue",{"_index":1824,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["argvalue.name",{"_index":1826,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["arising",{"_index":4545,"title":{},"body":{"license.html":{}}}],["array",{"_index":510,"title":{},"body":{"components/ClassNameComponent.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["arraybuffer",{"_index":2269,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["arraydoesnotcontainerror",{"_index":1438,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["arraydoesnotcontainerror(message",{"_index":1452,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["arrays",{"_index":2300,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["arrow",{"_index":529,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["asserted",{"_index":4575,"title":{},"body":{"license.html":{}}}],["associated",{"_index":2430,"title":{},"body":{"classes/LineModel.html":{},"license.html":{}}}],["assume",{"_index":4530,"title":{},"body":{"license.html":{}}}],["async",{"_index":922,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["async(result",{"_index":2339,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["async(value",{"_index":2322,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["asynchronous",{"_index":951,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/ToolbarComponent.html":{}}}],["asynchronously",{"_index":958,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["at_sign",{"_index":4000,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["atlas",{"_index":220,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["atlasmap",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["atlasmapcatalogname",{"_index":2271,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["atlasmapnavbarcomponent",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["atlasmapping",{"_index":2228,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["atlasmap}/standalone",{"_index":4298,"title":{},"body":{"index.html":{}}}],["atlasmap}/ui",{"_index":4315,"title":{},"body":{"index.html":{}}}],["atlasserviceurl",{"_index":4610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["atsign",{"_index":4026,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["attach",{"_index":4578,"title":{},"body":{"license.html":{}}}],["attached",{"_index":4375,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":4317,"title":{},"body":{"index.html":{}}}],["attempting",{"_index":2982,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["attribute",{"_index":2096,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["attributes",{"_index":3016,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["attributes.getnameditem('actionindex').value",{"_index":3021,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["attributes.getnameditem('argvalindex').value",{"_index":3020,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["attributes.getnameditem('value').value",{"_index":3019,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["attribution",{"_index":4476,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":4333,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":4372,"title":{},"body":{"license.html":{}}}],["autocreate",{"_index":2541,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["automatically",{"_index":2125,"title":{},"body":{"components/FieldEditComponent.html":{},"index.html":{}}}],["available",{"_index":688,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/FileManagementService.html":{},"index.html":{},"license.html":{}}}],["avoid",{"_index":355,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["avoids",{"_index":3960,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["await",{"_index":2293,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["awesome",{"_index":4230,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["back",{"_index":3219,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["backend",{"_index":1954,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["backendurls",{"_index":4609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backslash",{"_index":4001,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["bad",{"_index":2111,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["bar",{"_index":100,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["base",{"_index":626,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["based",{"_index":2963,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"index.html":{},"license.html":{}}}],["basejavainspectionserviceurl",{"_index":67,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["basejsoninspectionserviceurl",{"_index":70,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["basemappingserviceurl",{"_index":71,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["baseurl",{"_index":2265,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["basexmlinspectionserviceurl",{"_index":69,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["basis",{"_index":825,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["before",{"_index":619,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["begin",{"_index":3176,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["beginning",{"_index":944,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["behalf",{"_index":4398,"title":{},"body":{"license.html":{}}}],["below",{"_index":4377,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":4358,"title":{},"body":{"license.html":{}}}],["between",{"_index":1686,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{},"index.html":{}}}],["big",{"_index":584,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["binary",{"_index":952,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["binbuffer",{"_index":2313,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["bind",{"_index":4390,"title":{},"body":{"license.html":{}}}],["bit",{"_index":4294,"title":{},"body":{"index.html":{}}}],["blob",{"_index":983,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["blob([compress",{"_index":2316,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["blob([filebin",{"_index":2337,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["blob([value",{"_index":2323,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["block",{"_index":1462,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["body",{"_index":1245,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"injectables/FieldActionService.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["body'},{'name",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["body.actiondetails",{"_index":1988,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["body.actiondetails.actiondetail",{"_index":1989,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["body.actiondetails.actiondetail.length",{"_index":1990,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["body.stringmap.stringmapentry",{"_index":2253,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["boilerplate",{"_index":4579,"title":{},"body":{"license.html":{}}}],["bolt",{"_index":1151,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["boolean",{"_index":117,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["boot:run",{"_index":4301,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":787,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["brackets",{"_index":4581,"title":{},"body":{"license.html":{}}}],["break",{"_index":1689,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/NamespaceEditComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["browse",{"_index":4594,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1100,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"modules/ExampleAppModule.html":{},"classes/LineModel.html":{},"index.html":{},"modules.html":{}}}],["browsermodule",{"_index":1528,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["bsdropdownmodule",{"_index":849,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":904,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["bsdropdownmoduleforroot",{"_index":903,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["buffer",{"_index":2196,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["bug",{"_index":1124,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["build",{"_index":3797,"title":{},"body":{"classes/NamespaceModel.html":{},"index.html":{}}}],["build&restart",{"_index":4312,"title":{},"body":{"index.html":{}}}],["button",{"_index":551,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["buttonclicked",{"_index":3539,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["buttonclicked(okclicked",{"_index":1316,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["buttontext",{"_index":3488,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["byte",{"_index":586,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/DataMapperUtil.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["bytearray",{"_index":587,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["bytes",{"_index":3907,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["c",{"_index":622,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"modules/ExampleAppModule.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["c.cfg",{"_index":2907,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["c.getfielddetailcomponent(field",{"_index":1180,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["c.getselectedmapping",{"_index":2911,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["c.initcfg.basejavainspectionserviceurl",{"_index":629,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.basejsoninspectionserviceurl",{"_index":633,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.basemappingserviceurl",{"_index":635,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.basexmlinspectionserviceurl",{"_index":631,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.classpath",{"_index":648,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.classpathfetchtimeoutinmilliseconds",{"_index":647,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.disablemappingpreviewmode",{"_index":652,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.disablenavbar",{"_index":655,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.pompayload",{"_index":645,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.xsrfcookiename",{"_index":638,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.xsrfdefaulttokenvalue",{"_index":639,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.xsrfheadername",{"_index":637,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initialize(this.cfg",{"_index":4125,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["c.mappings",{"_index":2909,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["c.modalwindow",{"_index":2910,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["c.nativeelement.attributes['sourcevalue'].value",{"_index":2623,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["c.nativeelement.selectedoptions",{"_index":2619,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["c.parentcomponent",{"_index":3357,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["c.savetable",{"_index":4126,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["c.selected",{"_index":3361,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["c.selectedfield",{"_index":2906,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["cache",{"_index":3798,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cached",{"_index":3746,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cachedfield",{"_index":3744,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cachedfield.children",{"_index":3748,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cachedfield.copy",{"_index":3747,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["call",{"_index":82,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["calls",{"_index":628,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["camel",{"_index":977,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["camelcasestring",{"_index":981,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["camelcasestring.charat(0).touppercase",{"_index":1013,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["camelcasestring.indexof",{"_index":1011,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["can't",{"_index":3703,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cancel",{"_index":1321,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["cancelbuttonhandler",{"_index":1261,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["candidate",{"_index":1907,"title":{},"body":{"injectables/FieldActionService.html":{},"components/PropertyFieldEditComponent.html":{}}}],["candidatetype",{"_index":1909,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["canvas",{"_index":3886,"title":{},"body":{"components/ToolbarComponent.html":{},"index.html":{}}}],["capture",{"_index":940,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingFieldContainerComponent.html":{}}}],["caret",{"_index":1645,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["carry",{"_index":4469,"title":{},"body":{"license.html":{}}}],["case",{"_index":716,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["catalog",{"_index":2180,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["catalog.adm",{"_index":2272,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["catalogname",{"_index":2263,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["catch",{"_index":2330,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["catch((error",{"_index":1960,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["catheaders",{"_index":2267,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["cause",{"_index":4346,"title":{},"body":{"license.html":{}}}],["cd",{"_index":4287,"title":{},"body":{"index.html":{}}}],["cfg",{"_index":134,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceListComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["cfg(cfg",{"_index":2247,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["cfg.constantdoc",{"_index":3444,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.errors.length",{"_index":727,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["cfg.errorservice.displayerrorblock(cfg.mappings.activemapping.getpreviewerrors",{"_index":2919,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["cfg.errorservice.displayerrorblock(cfg.mappings.activemapping.getpreviewwarnings",{"_index":2918,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["cfg.errorservice.displayerrorblock(cfg.mappings.activemapping.getvalidationerrors",{"_index":2916,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["cfg.errorservice.displayerrorblock(cfg.mappings.activemapping.getvalidationwarnings",{"_index":2915,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["cfg.errorservice.error('could",{"_index":2601,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappingUtil.html":{}}}],["cfg.fieldactionservice.getactiondefinitionforname(action.argumentvalues[0].value",{"_index":3483,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.fieldactionservice.getactiondefinitionforname(action.name",{"_index":3484,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.getalldocs",{"_index":3436,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.getdocs(issource",{"_index":257,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["cfg.getdocurimap(cfg",{"_index":3432,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.getfirstxmldoc(false).name",{"_index":3639,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["cfg.mappings.activemapping.clearpreviewerrors",{"_index":2920,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["cfg.mappings.activemapping.clearvalidationerrors",{"_index":2917,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["cfg.mappings.gettablebyname(mapping.transition.lookuptablename",{"_index":2600,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["cfg.mappings.mappings",{"_index":3434,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.mappings.mappings.length",{"_index":3319,"title":{},"body":{"components/MappingListComponent.html":{}}}],["cfg.propertydoc",{"_index":3442,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.validationerrors.length",{"_index":725,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["change",{"_index":1887,"title":{},"body":{"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"index.html":{}}}],["changed",{"_index":2954,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"license.html":{}}}],["changedetectorref",{"_index":1251,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["char",{"_index":588,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["character",{"_index":4113,"title":{},"body":{"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["characterencoding",{"_index":3679,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["charge",{"_index":4428,"title":{},"body":{"license.html":{}}}],["chart.js",{"_index":4223,"title":{},"body":{"dependencies.html":{}}}],["check",{"_index":1881,"title":{},"body":{"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/MappingUtil.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["checkfieldeligibiltyforlinedrawing(field",{"_index":2525,"title":{},"body":{"classes/LineModel.html":{}}}],["checkiconenabled",{"_index":2923,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["checkout",{"_index":4281,"title":{},"body":{"index.html":{}}}],["child",{"_index":1106,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["childfield",{"_index":1351,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["childfield.children",{"_index":3803,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["childfield.copy",{"_index":3749,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["childfield.hasunmappedchildren",{"_index":1353,"title":{},"body":{"classes/EnumValue.html":{}}}],["childfield.parentfield",{"_index":3750,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["childrein",{"_index":3805,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["children",{"_index":1338,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["choose",{"_index":4558,"title":{},"body":{"license.html":{}}}],["circle",{"_index":1153,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["claim",{"_index":4452,"title":{},"body":{"license.html":{}}}],["claims",{"_index":4442,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"license.html":{}}}],["class.pipe",{"_index":898,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["class.pipe.ts",{"_index":3833,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{}}}],["class.pipe.ts:7",{"_index":3837,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["class=\"text",{"_index":3820,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"overview.html":{}}}],["classidentifier",{"_index":1331,"title":{},"body":{"classes/EnumValue.html":{}}}],["classlist.js",{"_index":4225,"title":{},"body":{"dependencies.html":{}}}],["classname",{"_index":226,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["classnameblacklist",{"_index":92,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["classnamecomponent",{"_index":395,"title":{"components/ClassNameComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classpath",{"_index":79,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["classpathfetchtimeoutinmilliseconds",{"_index":78,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["clean",{"_index":4289,"title":{},"body":{"index.html":{}}}],["cleanstr",{"_index":1630,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["clear",{"_index":259,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["clearactiondefinitions",{"_index":1857,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["cleardocs",{"_index":267,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["clearfields",{"_index":3755,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["clearlines",{"_index":2452,"title":{},"body":{"classes/LineModel.html":{}}}],["clearmappingerrors",{"_index":1439,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["clearpreviewerrors",{"_index":2729,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["cleartext(nodeid",{"_index":1619,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["cleartimeout(this.mouseeventtimer",{"_index":749,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["cleartoend(index",{"_index":1724,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["clearvalidationerrors",{"_index":1440,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["clearwarnings",{"_index":1441,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["cli",{"_index":4244,"title":{},"body":{"dependencies.html":{}}}],["click",{"_index":1080,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["clicked",{"_index":1322,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["clone",{"_index":4285,"title":{},"body":{"index.html":{}}}],["close",{"_index":1305,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["closeclicked",{"_index":3540,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["closeclicked(event",{"_index":1303,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["cluster_datamappermodule",{"_index":789,"title":{},"body":{"modules/DataMapperModule.html":{},"overview.html":{}}}],["cluster_datamappermodule_declarations",{"_index":790,"title":{},"body":{"modules/DataMapperModule.html":{},"overview.html":{}}}],["cluster_datamappermodule_exports",{"_index":791,"title":{},"body":{"modules/DataMapperModule.html":{},"overview.html":{}}}],["cluster_datamappermodule_providers",{"_index":792,"title":{},"body":{"modules/DataMapperModule.html":{},"overview.html":{}}}],["cluster_exampleappmodule",{"_index":1522,"title":{},"body":{"modules/ExampleAppModule.html":{},"overview.html":{}}}],["cluster_exampleappmodule_bootstrap",{"_index":1525,"title":{},"body":{"modules/ExampleAppModule.html":{},"overview.html":{}}}],["cluster_exampleappmodule_declarations",{"_index":1523,"title":{},"body":{"modules/ExampleAppModule.html":{},"overview.html":{}}}],["cluster_exampleappmodule_imports",{"_index":1524,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["clz",{"_index":1152,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["code",{"_index":1143,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{},"license.html":{}}}],["cog",{"_index":3942,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["collapsable",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["collapsableheadercomponent",{"_index":397,"title":{"components/CollapsableHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["collapsed",{"_index":519,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"classes/EnumValue.html":{}}}],["collection",{"_index":508,"title":{},"body":{"components/ClassNameComponent.html":{},"components/DataMapperErrorComponent.html":{},"injectables/FieldActionService.html":{},"components/ToolbarComponent.html":{}}}],["collectionclassname",{"_index":122,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["collectiontype",{"_index":47,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/enumerations.html":{}}}],["collectiontype.none",{"_index":228,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["collectiontypeselectionchanged",{"_index":471,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["collectiontypeselectionchanged(event",{"_index":478,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["colon",{"_index":4002,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["com.fasterxml.jackson.core",{"_index":1543,"title":{},"body":{"classes/Examples.html":{}}}],["combination",{"_index":4447,"title":{},"body":{"license.html":{}}}],["combobox",{"_index":4091,"title":{},"body":{"components/TransitionSelectionComponent.html":{},"dependencies.html":{}}}],["combobox').on('blur",{"_index":4106,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["combobox').on('input",{"_index":4110,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["coming",{"_index":1105,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["comma",{"_index":4003,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["command",{"_index":4316,"title":{},"body":{"index.html":{}}}],["comment",{"_index":4585,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":4553,"title":{},"body":{"license.html":{}}}],["commit",{"_index":2227,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["common",{"_index":4341,"title":{},"body":{"license.html":{}}}],["common/config.types",{"_index":48,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["common/data",{"_index":2242,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["common/focus.directive",{"_index":884,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["common/to",{"_index":896,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["commonmodule",{"_index":840,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["communication",{"_index":4402,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":4369,"title":{},"body":{"license.html":{}}}],["complex",{"_index":589,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["complexfieldsbyclassidentifier",{"_index":3677,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["compliance",{"_index":814,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["complies",{"_index":4497,"title":{},"body":{"license.html":{}}}],["component",{"_index":374,"title":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["componentfactory",{"_index":1294,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["componentfactoryresolver",{"_index":1249,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["componentloaded",{"_index":1271,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["components",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"overview.html":{}}}],["components/class",{"_index":862,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/collapsable",{"_index":864,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/constant",{"_index":870,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/data",{"_index":853,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/document",{"_index":866,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/expression.component",{"_index":885,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/field",{"_index":871,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/line",{"_index":860,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/mapping/lookup",{"_index":881,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/mapping/mapping",{"_index":873,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/mapping/transition",{"_index":883,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/modal",{"_index":856,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/namespace",{"_index":872,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/property",{"_index":869,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/template",{"_index":858,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/toolbar.component",{"_index":857,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["compound",{"_index":1083,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["compress",{"_index":2185,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["compressed",{"_index":2195,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["compressedbuffer",{"_index":2224,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["computer",{"_index":4550,"title":{},"body":{"license.html":{}}}],["concat(issource",{"_index":238,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["concat(targetvalues",{"_index":2610,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["concat(this.allfields",{"_index":3687,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["concat(this.cfg.getfirstxmldoc(false).namespaces",{"_index":3635,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["concat(this.cfg.mappings.getallmappings(true",{"_index":3304,"title":{},"body":{"components/MappingListComponent.html":{}}}],["concat(this.mappings",{"_index":2874,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["concat(this.terminalfields",{"_index":3720,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["conditional",{"_index":3161,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{}}}],["conditionalmappingexpressionenabled",{"_index":3847,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["conditions",{"_index":828,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["config",{"_index":140,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{}}}],["configmodel",{"_index":123,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["configmodel.cfg",{"_index":177,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["configmodel.getconfig",{"_index":325,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/DataMapperErrorComponent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/NamespaceEditComponent.html":{}}}],["configmodel.getconfig().errors.filter(e",{"_index":732,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["configmodel.getconfig().isrequiredfieldvalid(this.field.name",{"_index":2137,"title":{},"body":{"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["configmodel.getconfig().isrequiredfieldvalid(this.field.value",{"_index":581,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["configmodel.getconfig().isrequiredfieldvalid(this.userclassname",{"_index":504,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["configmodel.getconfig().mappings.activemapping.removevalidationerror(erroridentifier.value",{"_index":738,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["configmodel.getconfig().validationerrors.filter(e",{"_index":729,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["configmodel.isrequiredfieldvalid(this.namespace.alias",{"_index":3584,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["configmodel.isrequiredfieldvalid(this.namespace.uri",{"_index":3585,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["configs",{"_index":1968,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["configselectionchanged",{"_index":3040,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["configselectionchanged(event",{"_index":3048,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["configuration",{"_index":77,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["configuring",{"_index":4270,"title":{},"body":{"index.html":{}}}],["confirmbuttondisabled",{"_index":1264,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["confirmbuttontext",{"_index":1265,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["confirmed",{"_index":3893,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["connect",{"_index":1964,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["consequential",{"_index":4544,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":4565,"title":{},"body":{"license.html":{}}}],["console.log(\"copied",{"_index":1402,"title":{},"body":{"classes/EnumValue.html":{}}}],["conspicuously",{"_index":4415,"title":{},"body":{"license.html":{}}}],["const",{"_index":194,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["constant",{"_index":264,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["constantcomponent",{"_index":1196,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["constantcomponent.getfield",{"_index":1206,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["constantcomponent.initialize(self.field",{"_index":1197,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["constantdoc",{"_index":158,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["constantfield",{"_index":3452,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.displayname",{"_index":3457,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.name",{"_index":3458,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.path",{"_index":3459,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.type",{"_index":3455,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.usercreated",{"_index":3460,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.value",{"_index":3453,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfieldeditcomponent",{"_index":400,"title":{"components/ConstantFieldEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["constants",{"_index":172,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/enumerations.html":{}}}],["constitutes",{"_index":4456,"title":{},"body":{"license.html":{}}}],["constrain",{"_index":3142,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["constructor",{"_index":105,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["constructor(componentfactoryresolver",{"_index":3492,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{}}}],["constructor(delimiter",{"_index":3991,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["constructor(elementref",{"_index":2366,"title":{},"body":{"directives/FocusDirective.html":{}}}],["constructor(errorservice",{"_index":1867,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["constructor(initializationservice",{"_index":609,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["constructor(logger",{"_index":2174,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["constructor(mapping",{"_index":2143,"title":{},"body":{"classes/FieldNode.html":{}}}],["constructor(message",{"_index":1506,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["constructor(node",{"_index":1772,"title":{},"body":{"classes/ExpressionUpdatedEvent.html":{}}}],["constructor(prefix",{"_index":1558,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["constructor(private",{"_index":617,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["constructor(public",{"_index":1569,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["constructor(sanitizer",{"_index":1047,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["constructor(str",{"_index":3825,"title":{},"body":{"classes/TextNode.html":{}}}],["construed",{"_index":4493,"title":{},"body":{"license.html":{}}}],["consumers",{"_index":887,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["contained",{"_index":4481,"title":{},"body":{"license.html":{}}}],["container",{"_index":3080,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container'},{'name",{"_index":434,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["container.component",{"_index":876,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["container.component.html",{"_index":3081,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts",{"_index":3079,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:103",{"_index":3104,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:107",{"_index":3101,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:117",{"_index":3106,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:138",{"_index":3103,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:144",{"_index":3102,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:168",{"_index":3127,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:172",{"_index":3114,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:182",{"_index":3107,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:207",{"_index":3123,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:212",{"_index":3118,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:221",{"_index":3115,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:225",{"_index":3113,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:229",{"_index":3121,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:33",{"_index":3097,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:34",{"_index":3098,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:35",{"_index":3099,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:36",{"_index":3100,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:38",{"_index":3130,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:40",{"_index":3131,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:41",{"_index":3129,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:42",{"_index":3133,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:43",{"_index":3128,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:44",{"_index":3132,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:45",{"_index":3096,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:53",{"_index":3120,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:57",{"_index":3119,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:61",{"_index":3117,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:77",{"_index":3125,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["contains",{"_index":1637,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["content",{"_index":987,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["contentchanged",{"_index":2927,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["contents",{"_index":251,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"license.html":{}}}],["context",{"_index":3422,"title":{},"body":{"classes/MappingUtil.html":{}}}],["continue",{"_index":1369,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["contract",{"_index":4350,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":4392,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":4446,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":4499,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":4418,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":4457,"title":{},"body":{"license.html":{}}}],["control",{"_index":4339,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":4340,"title":{},"body":{"license.html":{}}}],["conversion",{"_index":2983,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["conversions",{"_index":4370,"title":{},"body":{"license.html":{}}}],["convert",{"_index":976,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["cookie",{"_index":4607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cookiename",{"_index":4606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cookies",{"_index":317,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["copies",{"_index":1393,"title":{},"body":{"classes/EnumValue.html":{},"license.html":{}}}],["copy",{"_index":816,"title":{},"body":{"modules/DataMapperModule.html":{},"classes/EnumValue.html":{},"modules/ExampleAppModule.html":{},"classes/NamespaceModel.html":{},"license.html":{}}}],["copy.children",{"_index":1399,"title":{},"body":{"classes/EnumValue.html":{}}}],["copy.children.push(childfield.copy",{"_index":1401,"title":{},"body":{"classes/EnumValue.html":{}}}],["copy.docdef",{"_index":1398,"title":{},"body":{"classes/EnumValue.html":{}}}],["copy.parentfield",{"_index":1396,"title":{},"body":{"classes/EnumValue.html":{}}}],["copy.serviceobject",{"_index":1394,"title":{},"body":{"classes/EnumValue.html":{}}}],["copyfrom",{"_index":3649,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["copyfrom(that",{"_index":1405,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["copyright",{"_index":802,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["core",{"_index":1548,"title":{},"body":{"classes/Examples.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["correctly",{"_index":3141,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["corresponding",{"_index":1729,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["couldn't",{"_index":3146,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["counter",{"_index":2569,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["counterclaim",{"_index":4453,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":4128,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1779,"title":{},"body":{"classes/FieldAction.html":{},"miscellaneous/enumerations.html":{}}}],["create(definition",{"_index":1787,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["created",{"_index":3111,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["createdbyuser",{"_index":3645,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["createlinestyle(l",{"_index":2479,"title":{},"body":{"classes/LineModel.html":{}}}],["createnodesfromtext(text",{"_index":1753,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["creation",{"_index":553,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["cross",{"_index":4451,"title":{},"body":{"license.html":{}}}],["css",{"_index":2484,"title":{},"body":{"classes/LineModel.html":{}}}],["cssclass",{"_index":1156,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/NamespaceListComponent.html":{}}}],["csv",{"_index":4261,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ctrl/cmd",{"_index":1082,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["current",{"_index":137,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["currentdraggedfield",{"_index":149,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["currentparentpath",{"_index":3711,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["currentpathsection",{"_index":3712,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["custom",{"_index":11,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["custom_elements_schema",{"_index":799,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["customaction",{"_index":3482,"title":{},"body":{"classes/MappingUtil.html":{}}}],["customary",{"_index":4514,"title":{},"body":{"license.html":{}}}],["d",{"_index":278,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["d.id",{"_index":280,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["d.push(tabledata",{"_index":2614,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["d.sourceenumvalue",{"_index":2626,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["damages",{"_index":4542,"title":{},"body":{"license.html":{}}}],["dash",{"_index":4004,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["data",{"_index":7,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["databind",{"_index":1547,"title":{},"body":{"classes/Examples.html":{}}}],["dataisvalid",{"_index":3583,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["datamapperappcomponent",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datamapperappexamplehostcomponent",{"_index":404,"title":{"components/DataMapperAppExampleHostComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datamappercomponent",{"_index":607,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["datamappererrorcomponent",{"_index":408,"title":{"components/DataMapperErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datamapperinitializationmodel",{"_index":55,"title":{"classes/DataMapperInitializationModel.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{}}}],["datamappermodule",{"_index":783,"title":{"modules/DataMapperModule.html":{}},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"modules.html":{},"overview.html":{}}}],["datamappermodule.withinterceptor",{"_index":1535,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["datamapperutil",{"_index":916,"title":{"classes/DataMapperUtil.html":{}},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["datamapperutil.extractdisplaypath(field.getfieldlabel(configmodel.getconfig().showtypes",{"_index":3183,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["datamapperutil.http_status_no_content",{"_index":2258,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["datamapperutil.readbinaryfile(mappingsfilename",{"_index":2336,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["datamapperutil.removeitemfromarray(action",{"_index":2715,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["datamapperutil.removeitemfromarray(field",{"_index":3761,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["datamapperutil.removeitemfromarray(field.path",{"_index":3734,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["datamapperutil.removeitemfromarray(m",{"_index":2880,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["datamapperutil.removeitemfromarray(mappedfield",{"_index":2763,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["datamapperutil.removeitemfromarray(mappedfields.find(mf",{"_index":2750,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["datamapperutil.removeitemfromarray(ns",{"_index":3634,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["datamapperutil.str2bytes(aggregatebuffer",{"_index":2314,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["datamapperutil.todisplayable",{"_index":3057,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["datamapperutil.todisplayable(argconfigname",{"_index":3028,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["datamapperutil.writefile(filecontent",{"_index":2324,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["datamapperversion",{"_index":56,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["datasource",{"_index":2057,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["date",{"_index":596,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"license.html":{}}}],["date().gettime",{"_index":2557,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["date_time",{"_index":2050,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["date_time_tz",{"_index":2051,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["datetime",{"_index":597,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["datetimetz",{"_index":600,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["datetz",{"_index":598,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["debug",{"_index":1442,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"miscellaneous/enumerations.html":{}}}],["debug(message",{"_index":1457,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["decimal",{"_index":590,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["declarations",{"_index":786,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}],["decorators",{"_index":492,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["deep",{"_index":3802,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["default",{"_index":319,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaulttokenvalue",{"_index":4608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defend",{"_index":4571,"title":{},"body":{"license.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["definition",{"_index":1174,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"license.html":{}}}],["definition'},{'name",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["definition.component",{"_index":867,"title":{},"body":{"modules/DataMapperModule.html":{},"classes/LineModel.html":{}}}],["definition.component.ts",{"_index":4146,"title":{},"body":{"coverage.html":{}}}],["definition.model",{"_index":30,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["definition.model.ts",{"_index":2819,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["definition.model.ts:108",{"_index":2856,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:24",{"_index":3653,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:25",{"_index":2837,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:26",{"_index":2836,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:27",{"_index":2835,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:28",{"_index":2838,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:29",{"_index":2842,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:30",{"_index":3652,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:31",{"_index":2839,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:32",{"_index":2841,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:33",{"_index":2834,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:39",{"_index":2859,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:41",{"_index":3655,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:43",{"_index":2844,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:49",{"_index":2851,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:53",{"_index":2853,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:55",{"_index":3654,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:58",{"_index":2854,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:70",{"_index":2858,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:82",{"_index":2848,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:98",{"_index":2846,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.name",{"_index":1823,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["definitions",{"_index":266,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["definitions.length",{"_index":2025,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["deflate",{"_index":2239,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["deflate(binbuffer",{"_index":2315,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["defnames",{"_index":2027,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["defnames.push(name",{"_index":2031,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["defnames.sort",{"_index":2033,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["defsbyname",{"_index":2026,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["defsbyname[name",{"_index":2030,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["delete",{"_index":2216,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["deliberate",{"_index":4537,"title":{},"body":{"license.html":{}}}],["delimiter",{"_index":3988,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["delimiter.prettyname",{"_index":3036,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["delimitermodel",{"_index":2976,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["delimitermodel.delimiter",{"_index":3031,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["delimitermodels",{"_index":4017,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["delimiters",{"_index":2924,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["delta",{"_index":1017,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["deltas",{"_index":2469,"title":{},"body":{"classes/LineModel.html":{}}}],["depend",{"_index":1117,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["dependencies",{"_index":785,"title":{"dependencies.html":{}},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depth",{"_index":3781,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["derivative",{"_index":4378,"title":{},"body":{"license.html":{}}}],["derived",{"_index":4380,"title":{},"body":{"license.html":{}}}],["describing",{"_index":2302,"title":{},"body":{"injectables/FileManagementService.html":{},"license.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTableUtil.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"license.html":{}}}],["design",{"_index":1965,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["designated",{"_index":4417,"title":{},"body":{"license.html":{}}}],["designed",{"_index":4275,"title":{},"body":{"index.html":{}}}],["desire",{"_index":2109,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["detail",{"_index":1022,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail'},{'name",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["detail.component",{"_index":868,"title":{},"body":{"modules/DataMapperModule.html":{},"classes/LineModel.html":{}}}],["detail.component.html",{"_index":1023,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts",{"_index":1021,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:105",{"_index":1070,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:115",{"_index":3222,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:118",{"_index":1064,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:120",{"_index":3223,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:123",{"_index":1075,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:125",{"_index":3208,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:129",{"_index":3207,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:130",{"_index":1071,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:141",{"_index":1065,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:158",{"_index":1066,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:171",{"_index":1086,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:177",{"_index":1072,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:188",{"_index":1076,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:197",{"_index":1068,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:216",{"_index":1061,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:261",{"_index":1088,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:280",{"_index":1073,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:285",{"_index":1069,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:289",{"_index":1097,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:30",{"_index":3199,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:31",{"_index":3202,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:32",{"_index":3200,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":3201,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:35",{"_index":2886,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:36",{"_index":2887,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:37",{"_index":1051,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:38",{"_index":1052,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:39",{"_index":1053,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{}}}],["detail.component.ts:40",{"_index":1054,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:41",{"_index":2893,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:42",{"_index":1095,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:43",{"_index":1093,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{}}}],["detail.component.ts:45",{"_index":1049,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:49",{"_index":1090,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{}}}],["detail.component.ts:50",{"_index":3203,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:53",{"_index":2888,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:57",{"_index":2890,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:62",{"_index":3206,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:66",{"_index":1059,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:69",{"_index":3205,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:73",{"_index":2892,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:74",{"_index":1056,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:86",{"_index":3204,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:88",{"_index":1063,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:98",{"_index":3210,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["details",{"_index":2900,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["detected",{"_index":3742,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["detector",{"_index":1274,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["determine",{"_index":1643,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/TextNode.html":{}}}],["determining",{"_index":4526,"title":{},"body":{"license.html":{}}}],["dev",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["developer",{"_index":4277,"title":{},"body":{"index.html":{}}}],["development",{"_index":4303,"title":{},"body":{"index.html":{}}}],["diagnostic",{"_index":296,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["diff",{"_index":3082,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["different",{"_index":4307,"title":{},"body":{"index.html":{},"license.html":{}}}],["differing",{"_index":3005,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["direct",{"_index":4344,"title":{},"body":{"license.html":{}}}],["direction",{"_index":4347,"title":{},"body":{"license.html":{}}}],["directive",{"_index":389,"title":{"directives/FocusDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":458,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["directly",{"_index":4318,"title":{},"body":{"index.html":{}}}],["directory",{"_index":991,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["disable",{"_index":549,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["disableconsolelogging",{"_index":4605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disablemappingpreviewmode",{"_index":97,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disablenavbar",{"_index":102,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disableprivateonlyfields",{"_index":93,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disableprotectedonlyfields",{"_index":94,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disablepublicgettersetterfields",{"_index":96,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disablepubliconlyfields",{"_index":95,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disarm",{"_index":714,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["discard",{"_index":1367,"title":{},"body":{"classes/EnumValue.html":{}}}],["disclaimer",{"_index":4517,"title":{},"body":{"license.html":{}}}],["discovercomplexfields(fields",{"_index":3807,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["discussing",{"_index":4412,"title":{},"body":{"license.html":{}}}],["dismiss",{"_index":3509,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["dismissall",{"_index":3489,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["display",{"_index":1461,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingFieldContainerComponent.html":{},"license.html":{}}}],["displayablestring",{"_index":1012,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["displayed",{"_index":2960,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["displayerrorblock",{"_index":1443,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["displayerrorblock(errorblock",{"_index":1459,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["displayfieldsearchbox",{"_index":3086,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["displayindex",{"_index":3191,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["displayname",{"_index":1332,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["displayname.tolowercase().indexof(filter.tolowercase",{"_index":3181,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["displayparentobject",{"_index":3192,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["displaytransitionselection",{"_index":3087,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["distribute",{"_index":4436,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":824,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["distribution",{"_index":4325,"title":{},"body":{"license.html":{}}}],["dm",{"_index":2213,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["doc",{"_index":256,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"classes/MappingUtil.html":{}}}],["doc.addfield(constantfield",{"_index":3461,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.addfield(mappedfield.field",{"_index":3477,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.getfield(mappedfield.parseddata.parsedpath",{"_index":3451,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.getfield(parentpath",{"_index":3476,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.id",{"_index":3437,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.initialized",{"_index":287,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["doc.inspectionresult",{"_index":276,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["doc.inspectionsource",{"_index":2306,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["doc.inspectiontype",{"_index":2307,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["doc.name",{"_index":3438,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.type",{"_index":273,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["doccount",{"_index":2298,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["docdef",{"_index":195,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["docdef.description",{"_index":204,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.fields[0",{"_index":2097,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["docdef.id",{"_index":198,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.initmodel",{"_index":196,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.inspectionresult",{"_index":214,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.inspectionsource",{"_index":212,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.inspectiontype",{"_index":210,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.issource",{"_index":206,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.name",{"_index":202,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.selectedroot",{"_index":216,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.showfields",{"_index":208,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.type",{"_index":200,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.type.tolowercase",{"_index":224,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.uri",{"_index":219,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdefcomponent",{"_index":2516,"title":{},"body":{"classes/LineModel.html":{}}}],["docdefcomponent.getdocdefelementposition(field.docdef",{"_index":2519,"title":{},"body":{"classes/LineModel.html":{}}}],["docdefcomponent.getfielddetailcomponentposition(parentfield",{"_index":2523,"title":{},"body":{"classes/LineModel.html":{}}}],["docdefinput",{"_index":2394,"title":{},"body":{"classes/LineModel.html":{}}}],["docdefoutput",{"_index":2395,"title":{},"body":{"classes/LineModel.html":{}}}],["docdefs",{"_index":233,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdefs.push(this.adddocument(docmodel",{"_index":236,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel",{"_index":197,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.collectionclassname",{"_index":229,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.collectiontype",{"_index":227,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.description",{"_index":205,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.id",{"_index":199,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.inspectionresult",{"_index":215,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.inspectionsource",{"_index":213,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.inspectiontype",{"_index":211,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.issource",{"_index":207,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.name",{"_index":203,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.selectedroot",{"_index":217,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.showfields",{"_index":209,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.type",{"_index":201,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docmap",{"_index":255,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/MappingUtil.html":{}}}],["docmap[doc.uri",{"_index":258,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docmap[mappedfield.parseddata.parseddocuri",{"_index":3445,"title":{},"body":{"classes/MappingUtil.html":{}}}],["docmodel",{"_index":234,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docmodels",{"_index":235,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docs",{"_index":242,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{}}}],["document",{"_index":32,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["document).ready",{"_index":4088,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["documentation",{"_index":4129,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentdefinition",{"_index":31,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/MappingDefinition.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["documentdefinitioncomponent",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documentfielddetailcomponent",{"_index":412,"title":{"components/DocumentFieldDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documentid",{"_index":281,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/MappingUtil.html":{}}}],["documentinitializationmodel",{"_index":113,"title":{"classes/DocumentInitializationModel.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["documentmanagementservice",{"_index":36,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["documentmanagementservice.generateexportblockdata(doc.inspectionsource",{"_index":2312,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["documentmanagementservice.generateexportmappings(this.jsonbuffer[0",{"_index":2295,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["documentmanagementservice.generateexportmetastr(doc",{"_index":2311,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["documents",{"_index":261,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["documentsareloaded",{"_index":286,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["documentservice",{"_index":151,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["documenttype",{"_index":45,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"miscellaneous/enumerations.html":{}}}],["documenttype.constant",{"_index":170,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["documenttype.java",{"_index":225,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["documenttype.java_archive",{"_index":222,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["documenttype.json",{"_index":3973,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["documenttype.property",{"_index":165,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["documenttype.xml",{"_index":283,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/FieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["documenttype.xsd",{"_index":218,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["doesn't",{"_index":349,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/FieldEditComponent.html":{},"index.html":{}}}],["dofetchfieldactions",{"_index":1858,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["dom",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["domsanitizer",{"_index":1048,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["don't",{"_index":2482,"title":{},"body":{"classes/LineModel.html":{},"license.html":{}}}],["dormant",{"_index":2386,"title":{},"body":{"classes/LineModel.html":{}}}],["double",{"_index":591,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["down",{"_index":533,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["download",{"_index":3251,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["downloads",{"_index":990,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["drag",{"_index":1103,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["dragenter/dragleave/dragover",{"_index":1113,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["dragenterleave",{"_index":1028,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["dragenterleave(event",{"_index":1057,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["dragged",{"_index":1119,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["draggedmappedfield",{"_index":3124,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["draghover",{"_index":1162,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["drawcurrentline(x",{"_index":2457,"title":{},"body":{"classes/LineModel.html":{}}}],["drawingline",{"_index":2398,"title":{},"body":{"classes/LineModel.html":{}}}],["drawline(event",{"_index":2454,"title":{},"body":{"classes/LineModel.html":{}}}],["drawlinesformapping(m",{"_index":2488,"title":{},"body":{"classes/LineModel.html":{}}}],["drop",{"_index":3147,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["dropdown",{"_index":2123,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["droppedfield",{"_index":1130,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["droppedmappedfield",{"_index":3157,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["dskiptests",{"_index":4297,"title":{},"body":{"index.html":{}}}],["dupe",{"_index":1366,"title":{},"body":{"classes/EnumValue.html":{}}}],["during",{"_index":1112,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["dynamic",{"_index":911,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["dynamically",{"_index":1279,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["e",{"_index":696,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["e.identifier",{"_index":1490,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["e.level",{"_index":730,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["e.message",{"_index":1501,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ModalErrorWindowComponent.html":{}}}],["e.name",{"_index":2608,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["e.sourcevalue",{"_index":2622,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["e.targetvalue",{"_index":2624,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["each",{"_index":3215,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"license.html":{}}}],["easier",{"_index":4589,"title":{},"body":{"license.html":{}}}],["edit",{"_index":536,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["edit'},{'name",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["edit.component",{"_index":859,"title":{},"body":{"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["edit.component.html",{"_index":537,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["edit.component.ts",{"_index":535,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:108",{"_index":2072,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:112",{"_index":2082,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:116",{"_index":2080,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:120",{"_index":2069,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:140",{"_index":2073,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:158",{"_index":2078,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:162",{"_index":2074,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:27",{"_index":3824,"title":{},"body":{"components/TemplateEditComponent.html":{}}}],["edit.component.ts:28",{"_index":3823,"title":{},"body":{"components/TemplateEditComponent.html":{}}}],["edit.component.ts:29",{"_index":3573,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:30",{"_index":3574,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["edit.component.ts:31",{"_index":3572,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:32",{"_index":558,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:33",{"_index":559,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:34",{"_index":564,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["edit.component.ts:35",{"_index":557,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:36",{"_index":563,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:37",{"_index":562,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:38",{"_index":561,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:39",{"_index":2086,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:40",{"_index":546,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:41",{"_index":2088,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:42",{"_index":2084,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:43",{"_index":2083,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:44",{"_index":2085,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:45",{"_index":2067,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:50",{"_index":3570,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:52",{"_index":556,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:53",{"_index":2077,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:56",{"_index":543,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:57",{"_index":3568,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:65",{"_index":3815,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:66",{"_index":547,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["edit.component.ts:69",{"_index":3814,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:70",{"_index":544,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["edit.component.ts:77",{"_index":3816,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:78",{"_index":548,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["edit.component.ts:93",{"_index":2076,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:97",{"_index":2081,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edited",{"_index":3212,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["editfield",{"_index":1029,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["editfield(event",{"_index":1060,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["editmode",{"_index":2058,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["editorial",{"_index":4381,"title":{},"body":{"license.html":{}}}],["edittemplate",{"_index":3848,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["el",{"_index":1165,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["el.offsetheight",{"_index":2491,"title":{},"body":{"classes/LineModel.html":{}}}],["el.offsetleft",{"_index":1167,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["el.offsetparent",{"_index":1169,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["el.offsettop",{"_index":1168,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["elaborations",{"_index":4383,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":4399,"title":{},"body":{"license.html":{}}}],["elem",{"_index":660,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["element",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["elementref",{"_index":482,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["emits",{"_index":1639,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["empty",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["emptymodalbodycomponent",{"_index":414,"title":{"components/EmptyModalBodyComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["enable",{"_index":98,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["enableexpression",{"_index":3939,"title":{},"body":{"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["enables",{"_index":4310,"title":{},"body":{"index.html":{}}}],["enclosed",{"_index":4580,"title":{},"body":{"license.html":{}}}],["end",{"_index":1614,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"classes/TextNode.html":{},"license.html":{}}}],["enddrag",{"_index":1030,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["enddrag(event",{"_index":1062,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["endoffset",{"_index":1618,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["engine",{"_index":4273,"title":{},"body":{"index.html":{}}}],["entering",{"_index":1058,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["entities",{"_index":4338,"title":{},"body":{"license.html":{}}}],["entity",{"_index":4332,"title":{},"body":{"license.html":{}}}],["entries",{"_index":2252,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["entry",{"_index":2255,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["entry.sourcevalue",{"_index":2563,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["entry.targetvalue",{"_index":2571,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["entrycomponents",{"_index":797,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["enum",{"_index":1513,"title":{},"body":{"classes/ErrorInfo.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["enumeration",{"_index":1336,"title":{},"body":{"classes/EnumValue.html":{},"components/TransitionSelectionComponent.html":{}}}],["enumerations",{"_index":4253,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumfieldsbyclassidentifier",{"_index":3678,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["enumvalue",{"_index":1325,"title":{"classes/EnumValue.html":{}},"body":{"classes/EnumValue.html":{},"coverage.html":{}}}],["enumvalues",{"_index":1337,"title":{},"body":{"classes/EnumValue.html":{}}}],["environment",{"_index":26,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.backendurls.atlasserviceurl",{"_index":636,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["environment.backendurls.javainspectionserviceurl",{"_index":630,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["environment.backendurls.jsoninspectionserviceurl",{"_index":634,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["environment.backendurls.xmlinspectionserviceurl",{"_index":632,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["environment.xsrf",{"_index":106,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["environment.xsrf.cookiename",{"_index":110,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["environment.xsrf.defaulttokenvalue",{"_index":112,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["environment.xsrf.headername",{"_index":108,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["environments/environment",{"_index":27,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["equal",{"_index":4005,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["equivalent",{"_index":992,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["error",{"_index":293,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["error'},{'name",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["error('could",{"_index":3717,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["error(message",{"_index":1468,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["error.component",{"_index":855,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["error.component.html",{"_index":659,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts",{"_index":658,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:107",{"_index":717,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:112",{"_index":681,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:120",{"_index":683,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:128",{"_index":689,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:31",{"_index":676,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:32",{"_index":677,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:33",{"_index":678,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:35",{"_index":720,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:36",{"_index":722,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:37",{"_index":721,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:38",{"_index":719,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:43",{"_index":679,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:48",{"_index":682,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:53",{"_index":693,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:58",{"_index":692,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:63",{"_index":698,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:71",{"_index":695,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:82",{"_index":700,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:97",{"_index":712,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.message",{"_index":1497,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["error.status",{"_index":1961,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["error.statustext",{"_index":2329,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["error1",{"_index":2331,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["errorblock",{"_index":1467,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errorblock[0",{"_index":1493,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errorhandlerservice",{"_index":33,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{},"overview.html":{}}}],["erroridentifier",{"_index":735,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["erroridentifier.value",{"_index":737,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["erroridentifiercounter",{"_index":1505,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["errorinfo",{"_index":43,"title":{"classes/ErrorInfo.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{}}}],["errorinfo(message",{"_index":1499,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["errorinfo.erroridentifiercounter",{"_index":1520,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["errorinfo.erroridentifiercounter.tostring",{"_index":1517,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["errorlevel",{"_index":723,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"pipes/ToErrorIconClassPipe.html":{},"miscellaneous/enumerations.html":{}}}],["errorlevel.debug",{"_index":1484,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errorlevel.error",{"_index":731,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["errorlevel.info",{"_index":734,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["errorlevel.mapping_error",{"_index":1486,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errorlevel.validation_error",{"_index":1485,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["errorlevel.warn",{"_index":733,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["errormessage",{"_index":298,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["erroroccurred",{"_index":3673,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["errors",{"_index":162,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["errorservice",{"_index":153,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{}}}],["errorservicerequired",{"_index":663,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["escaped",{"_index":644,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["establish",{"_index":2181,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["established",{"_index":512,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["establishing",{"_index":2284,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["even",{"_index":3299,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"license.html":{}}}],["event",{"_index":480,"title":{},"body":{"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["event's",{"_index":1109,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["event._lmcinstance",{"_index":2412,"title":{},"body":{"classes/LineModel.html":{}}}],["event.ctrlkey",{"_index":1133,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["event.currenttarget",{"_index":3148,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["event.datatransfer.setdata('text",{"_index":1122,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["event.item['field",{"_index":2122,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["event.metakey",{"_index":1134,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["event.offsety.tostring",{"_index":2456,"title":{},"body":{"classes/LineModel.html":{}}}],["event.preventdefault",{"_index":1128,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{}}}],["event.srcelement.value",{"_index":3925,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["event.stoppropagation",{"_index":1129,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["event.target",{"_index":2433,"title":{},"body":{"classes/LineModel.html":{}}}],["event.target.attributes.getnameditem('erroridentifier",{"_index":736,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["event.target.files[0",{"_index":3912,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["event.target.selectedoptions",{"_index":3015,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["event.target.selectedoptions.item(0).attributes",{"_index":3017,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["event.target.selectedoptions.item(0).attributes.getnameditem('value').value",{"_index":507,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["event.target.value",{"_index":3009,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/ToolbarComponent.html":{}}}],["event.target.value.length",{"_index":3010,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["event['clienty",{"_index":3150,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["event['pagey",{"_index":3149,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["events",{"_index":12,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["evt",{"_index":3154,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["evt.preventdefault",{"_index":3156,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["evt.stoppropagation",{"_index":3155,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["evt1",{"_index":710,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["evt1.preventdefault",{"_index":746,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["evt1.stoppropagation",{"_index":745,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["evt1['clienty",{"_index":3137,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["evt1['pagey",{"_index":3136,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["example",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"license.html":{}}}],["exampleappmodule",{"_index":1521,"title":{"modules/ExampleAppModule.html":{}},"body":{"modules/ExampleAppModule.html":{},"modules.html":{},"overview.html":{}}}],["examples",{"_index":615,"title":{"classes/Examples.html":{}},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/Examples.html":{},"coverage.html":{}}}],["examples.pom",{"_index":646,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["except",{"_index":813,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["exchange",{"_index":3930,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["excluding",{"_index":4414,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":4427,"title":{},"body":{"license.html":{}}}],["executed",{"_index":4506,"title":{},"body":{"license.html":{}}}],["executesearch",{"_index":2063,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["executesearch(filter",{"_index":2068,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["exercise",{"_index":4532,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":4360,"title":{},"body":{"license.html":{}}}],["exist",{"_index":2106,"title":{},"body":{"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{}}}],["existing",{"_index":3425,"title":{},"body":{"classes/MappingUtil.html":{}}}],["exists",{"_index":552,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["explicitly",{"_index":4500,"title":{},"body":{"license.html":{}}}],["export",{"_index":54,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["exportblockdata",{"_index":2297,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["exported",{"_index":2219,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["exportmappings",{"_index":3938,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["exportmappingscatalog",{"_index":2163,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["exportmappingscatalog(mappingsfilename",{"_index":2176,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["exportmeta",{"_index":2296,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["exports",{"_index":788,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}],["express",{"_index":830,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["expression",{"_index":1575,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["expression'},{'name",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["expression.component",{"_index":3904,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["expression.model",{"_index":3997,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["expressioncomponent",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["expressionmodel",{"_index":1589,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{}}}],["expressionnode",{"_index":1550,"title":{"classes/ExpressionNode.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["expressionnode.sequence",{"_index":1572,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:26",{"_index":2147,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:27",{"_index":2148,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:33",{"_index":2151,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:37",{"_index":2153,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:38",{"_index":2152,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnodes",{"_index":1650,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressions",{"_index":3162,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["expressionupdated",{"_index":1591,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionupdatedevent",{"_index":1568,"title":{"classes/ExpressionUpdatedEvent.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["expressionupdatedsource",{"_index":1590,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["extends",{"_index":1574,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["extractdisplaypath",{"_index":921,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["extractdisplaypath(path",{"_index":934,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["extracted",{"_index":2207,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["extractfieldactiondefinition",{"_index":1859,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["extractfieldactiondefinition(actiondetail",{"_index":1890,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["extractor",{"_index":315,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["f",{"_index":2737,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["f(x",{"_index":3985,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["f.field",{"_index":2741,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["f.field.enumeration",{"_index":2744,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["f.field.isincollection",{"_index":2740,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fa",{"_index":530,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["fade",{"_index":1268,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["failure",{"_index":4551,"title":{},"body":{"license.html":{}}}],["fake",{"_index":2107,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fakenamespace",{"_index":2116,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fakenamespace.alias",{"_index":2117,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["false",{"_index":59,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/variables.html":{}}}],["faster",{"_index":4295,"title":{},"body":{"index.html":{}}}],["fatal",{"_index":2327,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["fee",{"_index":4559,"title":{},"body":{"license.html":{}}}],["feeding",{"_index":1465,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["fetch",{"_index":316,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["fetchedactionconfigs.foreach(action",{"_index":1956,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fetchedactionconfigs.length",{"_index":1951,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fetchfieldactions",{"_index":1860,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fetching",{"_index":76,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["field",{"_index":289,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["field's",{"_index":3056,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"classes/NamespaceModel.html":{}}}],["field'},{'name",{"_index":440,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["field.alphabetizefields(cachedfield.children",{"_index":3806,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.alphabetizefields(field.parentfield.children",{"_index":3739,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.alphabetizefields(fields",{"_index":2785,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["field.alphabetizefields(this.fields",{"_index":3723,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.children",{"_index":1352,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.children.length",{"_index":1374,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.children.push(childfield",{"_index":3754,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.component",{"_index":875,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["field.component.html",{"_index":3321,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts",{"_index":3320,"title":{},"body":{"components/MappingListFieldComponent.html":{},"coverage.html":{}}}],["field.component.ts:28",{"_index":3326,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:29",{"_index":3325,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:30",{"_index":3324,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:31",{"_index":3323,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:33",{"_index":3330,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:37",{"_index":3328,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:44",{"_index":3327,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:52",{"_index":3329,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.copy",{"_index":571,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["field.docdef",{"_index":1177,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["field.docdef.showfields",{"_index":2517,"title":{},"body":{"classes/LineModel.html":{}}}],["field.docdef.type",{"_index":3692,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.enumeration",{"_index":3793,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.fielddepth",{"_index":3752,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.fieldhasunmappedchild(childfield",{"_index":1354,"title":{},"body":{"classes/EnumValue.html":{}}}],["field.fieldhasunmappedchild(field",{"_index":3779,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.getfieldlabel(cfg.showtypes",{"_index":1230,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["field.getfieldlabel(configmodel.getconfig().showtypes",{"_index":2129,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["field.getnamewithnamespace",{"_index":3782,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.hasunmappedchildren",{"_index":3765,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.isarray",{"_index":3784,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.isattribute",{"_index":3787,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.iscollection",{"_index":3783,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.isparentfield",{"_index":2128,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["field.issource",{"_index":2802,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["field.isterminal",{"_index":1349,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.model",{"_index":2692,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["field.name",{"_index":3691,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield",{"_index":3730,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield.children",{"_index":3763,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield.children.push(field",{"_index":3738,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield.fielddepth",{"_index":3732,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield.path",{"_index":3731,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.partofmapping",{"_index":1350,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.partoftransformation",{"_index":3766,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.path",{"_index":1176,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingListComponent.html":{},"classes/NamespaceModel.html":{}}}],["field.path.tolowercase().includes(filter",{"_index":3315,"title":{},"body":{"components/MappingListComponent.html":{}}}],["field.serviceobject",{"_index":3788,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.serviceobject.path",{"_index":3789,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.serviceobject.status",{"_index":3808,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.type",{"_index":566,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["field.uuidcounter",{"_index":1378,"title":{},"body":{"classes/EnumValue.html":{}}}],["field.uuidcounter.tostring",{"_index":1377,"title":{},"body":{"classes/EnumValue.html":{}}}],["field.visibleincurrentdocumentsearch",{"_index":2526,"title":{},"body":{"classes/LineModel.html":{}}}],["fieldaction",{"_index":1775,"title":{"classes/FieldAction.html":{}},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["fieldactionargument",{"_index":1794,"title":{"classes/FieldActionArgument.html":{}},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"coverage.html":{}}}],["fieldactionargumentvalue",{"_index":1782,"title":{"classes/FieldActionArgumentValue.html":{}},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"coverage.html":{}}}],["fieldactionconfig",{"_index":1991,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactionconfig.name",{"_index":2028,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition",{"_index":1784,"title":{"classes/FieldActionDefinition.html":{}},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["fieldactiondefinition.arguments.push(argumentdefinition",{"_index":2022,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.arguments[0",{"_index":3075,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["fieldactiondefinition.arguments[0].values",{"_index":3076,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["fieldactiondefinition.arguments[0].values.length",{"_index":3077,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["fieldactiondefinition.iscustom",{"_index":2000,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.method",{"_index":2006,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.multiplicity",{"_index":1933,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.name",{"_index":1935,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.populatefieldaction(action",{"_index":3069,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["fieldactiondefinition.serviceobject",{"_index":2009,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.sourcetype",{"_index":2002,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.targettype",{"_index":2004,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactions",{"_index":1979,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactionservice",{"_index":49,"title":{"injectables/FieldActionService.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"coverage.html":{},"overview.html":{}}}],["fieldcomponent",{"_index":1198,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldcomponent.getfield",{"_index":1207,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldcomponent.initialize(self.field",{"_index":1201,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldcomponent.issource",{"_index":1199,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldcomponents",{"_index":1024,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fielddepth",{"_index":1339,"title":{},"body":{"classes/EnumValue.html":{}}}],["fielddescription",{"_index":294,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["fielddetail",{"_index":1157,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fielddetailelement",{"_index":1025,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldeditcomponent",{"_index":420,"title":{"components/FieldEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fieldexists(targetfield",{"_index":3689,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["fieldhasunmappedchild(field",{"_index":1348,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldisconstant",{"_index":2703,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldisproperty",{"_index":2702,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldmappingpair",{"_index":1883,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldmode",{"_index":538,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"miscellaneous/enumerations.html":{}}}],["fieldmode.create",{"_index":569,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["fieldmode.edit",{"_index":568,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["fieldname",{"_index":3365,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{}}}],["fieldname.indexof",{"_index":3469,"title":{},"body":{"classes/MappingUtil.html":{}}}],["fieldname.split(':')[0",{"_index":3470,"title":{},"body":{"classes/MappingUtil.html":{}}}],["fieldname.split(':')[1",{"_index":3471,"title":{},"body":{"classes/MappingUtil.html":{}}}],["fieldnameblacklist",{"_index":91,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["fieldnames",{"_index":1365,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldnames.push(field.name",{"_index":1370,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldnames.sort",{"_index":1371,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldnode",{"_index":1580,"title":{"classes/FieldNode.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["fieldnode(this.mapping",{"_index":1744,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fieldnodes",{"_index":1687,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fieldnodes.find(n",{"_index":1742,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fieldpairmatchessearch",{"_index":3262,"title":{},"body":{"components/MappingListComponent.html":{}}}],["fieldpairmatchessearch(mapping",{"_index":3274,"title":{},"body":{"components/MappingListComponent.html":{}}}],["fieldpath",{"_index":1362,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["fieldpaths",{"_index":2708,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["fieldpaths.push(path",{"_index":2712,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldpaths.sort",{"_index":2713,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldpos",{"_index":2522,"title":{},"body":{"classes/LineModel.html":{}}}],["fields",{"_index":1357,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["fields.concat(docdef.getterminalfields",{"_index":3180,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["fields.length",{"_index":1372,"title":{},"body":{"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["fields.push(field",{"_index":3699,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["fields.push(fieldsbyname[name",{"_index":1373,"title":{},"body":{"classes/EnumValue.html":{}}}],["fields.push(mappedfield.field",{"_index":2782,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fields[fields.length",{"_index":2780,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldsbyname",{"_index":1364,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldsbyname[field.name",{"_index":1368,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldsbypath",{"_index":2707,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["fieldsbypath[path",{"_index":2711,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldshouldbevisible",{"_index":1031,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldtype",{"_index":2059,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fieldtypeselectionchanged",{"_index":2064,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fieldtypeselectionchanged(event",{"_index":2071,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fieldwidth",{"_index":935,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["fifty",{"_index":4353,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"license.html":{}}}],["filebin",{"_index":2333,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["filebody",{"_index":1001,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["filecontent",{"_index":993,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["filed",{"_index":4461,"title":{},"body":{"license.html":{}}}],["filedata",{"_index":3845,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filemanagementservice",{"_index":52,"title":{"injectables/FileManagementService.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["filename",{"_index":954,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/ToolbarComponent.html":{}}}],["filename.concat('.adm",{"_index":3982,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filename.length",{"_index":3977,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filename.split('.').pop",{"_index":3981,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filereader",{"_index":2334,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["files",{"_index":2179,"title":{},"body":{"injectables/FileManagementService.html":{},"license.html":{}}}],["files.gz",{"_index":2264,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["fileservice",{"_index":154,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["filter",{"_index":2070,"title":{},"body":{"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["filtering",{"_index":89,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["find",{"_index":2602,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{}}}],["findmappingfiles",{"_index":2164,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["findmappingfiles(filter",{"_index":2189,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["findmappingsforfield",{"_index":2826,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["findmappingsforfield(field",{"_index":2845,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["finish",{"_index":4124,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["firefox",{"_index":1123,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["first",{"_index":1419,"title":{},"body":{"classes/EnumValue.html":{},"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ToolbarComponent.html":{}}}],["first.parentfield",{"_index":1420,"title":{},"body":{"classes/EnumValue.html":{}}}],["first.parentfield.getcollectionparentfield",{"_index":1421,"title":{},"body":{"classes/EnumValue.html":{}}}],["fitness",{"_index":4522,"title":{},"body":{"license.html":{}}}],["fits",{"_index":937,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["fixed",{"_index":684,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["fixme",{"_index":3767,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["flags",{"_index":90,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["float",{"_index":592,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["fn",{"_index":1754,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fn.field",{"_index":1762,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fname",{"_index":984,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["focus",{"_index":460,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["focusdirective",{"_index":459,"title":{"directives/FocusDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["focusel",{"_index":467,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["following",{"_index":3213,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"index.html":{},"license.html":{}}}],["font",{"_index":4229,"title":{},"body":{"dependencies.html":{}}}],["foo.bar",{"_index":1538,"title":{},"body":{"classes/Examples.html":{}}}],["for_each",{"_index":3998,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["forkjoin",{"_index":2241,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["forkjoin(operations).topromise().then((data",{"_index":2355,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["form",{"_index":980,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingFieldActionArgumentComponent.html":{},"license.html":{}}}],["format",{"_index":2183,"title":{},"body":{"injectables/FileManagementService.html":{},"license.html":{}}}],["formattedfield",{"_index":2130,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["formattedfield['displayname'].tolowercase().indexof(filter.tolowercase",{"_index":2131,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["formattedfields",{"_index":2126,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["formattedfields.length",{"_index":2133,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["formattedfields.push(formattedfield",{"_index":2132,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["formsmodule",{"_index":845,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["found",{"_index":4279,"title":{},"body":{"index.html":{}}}],["foundfields",{"_index":3694,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["foundfields.length",{"_index":3696,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["foundselectedmapping",{"_index":2475,"title":{},"body":{"classes/LineModel.html":{}}}],["free",{"_index":4430,"title":{},"body":{"license.html":{}}}],["fromjson",{"_index":2631,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["fromjson(json",{"_index":2552,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["full",{"_index":687,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/FileManagementService.html":{}}}],["function",{"_index":1259,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"injectables/FileManagementService.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/TransitionSelectionComponent.html":{}}}],["g",{"_index":1579,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["generated",{"_index":2771,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"license.html":{}}}],["generateinitialexpression",{"_index":1596,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["generating",{"_index":291,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["generically",{"_index":1908,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["geometry",{"_index":2414,"title":{},"body":{"classes/LineModel.html":{}}}],["getactionconfigparamvalues",{"_index":2928,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getactionconfigparamvalues(argconfig",{"_index":2955,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getactionconfigparamvdefault",{"_index":2929,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getactionconfigparamvdefault(argconfig",{"_index":2957,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getactionconfigs",{"_index":3041,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["getactiondefinitionforname",{"_index":1861,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactiondefinitionforname(actionname",{"_index":1894,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactionsappliestofield",{"_index":1862,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactionsappliestofield(mapping",{"_index":1897,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactualfield",{"_index":1863,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactualfield(mapping",{"_index":1900,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getaddbuttonlabel",{"_index":3088,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getalldocs",{"_index":284,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getallfields",{"_index":2792,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["getallmappedfields",{"_index":2794,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getallmappings",{"_index":2827,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["getallmappings(includeactivemapping",{"_index":2847,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["getargumentforname",{"_index":1838,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["getargumentforname(name",{"_index":1818,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["getargumentvalue",{"_index":1780,"title":{},"body":{"classes/FieldAction.html":{}}}],["getargumentvalue(argumentname",{"_index":1789,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["getcfg",{"_index":2235,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getclass",{"_index":3376,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getcollectionparentfield",{"_index":1412,"title":{},"body":{"classes/EnumValue.html":{}}}],["getcollectiontype",{"_index":1423,"title":{},"body":{"classes/EnumValue.html":{}}}],["getcomplexfield(classidentifier",{"_index":3683,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getconfig",{"_index":175,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getcssclass",{"_index":516,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["getcssclass(action",{"_index":3862,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["getcurrentadmcatalog",{"_index":2165,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getcurrentmappingcatalog",{"_index":2166,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getcurrentmappingjson",{"_index":2167,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getdocbyid",{"_index":3408,"title":{},"body":{"classes/MappingUtil.html":{}}}],["getdocbyid(documentid",{"_index":3414,"title":{},"body":{"classes/MappingUtil.html":{}}}],["getdocforidentifier(documentid",{"_index":277,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getdocs(issource",{"_index":241,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getdocswithoutpropertydoc(issource",{"_index":237,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getdocurimap(cfg",{"_index":253,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["geteditorsettingscssclass",{"_index":3849,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["geteditorsettingscssclass(open",{"_index":3864,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["getelementposition",{"_index":1032,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getentryforsource",{"_index":2532,"title":{},"body":{"classes/LookupTable.html":{}}}],["getentryforsource(sourcevalue",{"_index":2540,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["getenumfield(classidentifier",{"_index":3685,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["geterrors",{"_index":664,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["geterrors().length",{"_index":3534,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["getfield",{"_index":541,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["getfield(fieldpath",{"_index":1361,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["getfielddetailcomponent",{"_index":1033,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getfielddetailcomponent(field",{"_index":1067,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getfieldid",{"_index":1034,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getfieldlabel(showtypes",{"_index":1425,"title":{},"body":{"classes/EnumValue.html":{}}}],["getfieldnames(fields",{"_index":1359,"title":{},"body":{"classes/EnumValue.html":{}}}],["getfieldnames(issource",{"_index":2783,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getfieldpath",{"_index":3193,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["getfieldpaths(fields",{"_index":1355,"title":{},"body":{"classes/EnumValue.html":{}}}],["getfieldpaths(issource",{"_index":2788,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getfields(fieldpaths",{"_index":3697,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getfields(issource",{"_index":2781,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getfieldtypeicon",{"_index":1035,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getfilesuffix",{"_index":3850,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["getfirstcollectionfield(issource",{"_index":2736,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getfirsterror",{"_index":665,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getfirsterror().message",{"_index":756,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getfirstmappingforlookuptable",{"_index":2641,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["getfirstmappingforlookuptable(mappingdefinition",{"_index":2644,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["getfirstwarning",{"_index":666,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getfirstwarning().message",{"_index":755,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getfirstxmldoc(issource",{"_index":282,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getformattedoutputpath",{"_index":3337,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["getformattedoutputpath(path",{"_index":3341,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["getformattedoutputpath(selectedfield.path",{"_index":3373,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["getformattedoutputpath(sourcefield.field.path",{"_index":3403,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getformattedoutputpath(targetfield.field.path",{"_index":3405,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getindexformappedfield(mappedfield",{"_index":2769,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getinfos",{"_index":667,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getinitialfocuselement",{"_index":472,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["getinputoutputkey",{"_index":2533,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["getitemscssclass",{"_index":3263,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["getjsonbuf",{"_index":2168,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getlabel",{"_index":2930,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["getlabel(actionconfig.name",{"_index":3078,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["getlabel(argconfig.name",{"_index":3034,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getlabel(argconfigname",{"_index":2965,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getlastmappedfield(issource",{"_index":2779,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getlastnode",{"_index":1604,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["getlastnodeindex",{"_index":1602,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["getmappedfieldactions",{"_index":2931,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["getmappedfieldforfield(field",{"_index":2765,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getmappedfieldforindex(index",{"_index":2766,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getmappedfields",{"_index":3264,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappedfields(issource",{"_index":2778,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getmappedfields(mapping",{"_index":3277,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappedtarget(field",{"_index":2801,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getmappedvaluecount",{"_index":4077,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["getmappingclass",{"_index":1036,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getmappingcssclass",{"_index":3265,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappingcssclass(mapping",{"_index":3279,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappingid",{"_index":2169,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getmappingmodename",{"_index":4059,"title":{},"body":{"classes/TransitionModel.html":{}}}],["getmappingmodename(mode",{"_index":4045,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["getmappingrowscssclass",{"_index":3266,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappings",{"_index":3267,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmultiplicityactionconfigs",{"_index":4078,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["getname(showtypes",{"_index":3700,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getnamespacecssclass",{"_index":3589,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getnamespacecssclass(namespace",{"_index":3599,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getnamespaceforalias(alias",{"_index":3701,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getnamespaces",{"_index":3590,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getnamespaces().length",{"_index":3643,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getnamewithnamespace",{"_index":1379,"title":{},"body":{"classes/EnumValue.html":{}}}],["getnode(nodeid",{"_index":1606,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["getparentobjectname",{"_index":3194,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["getparenttoggleclass",{"_index":1037,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getprettylabel",{"_index":3650,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getprettyname",{"_index":4049,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["getpreviewerrors",{"_index":2732,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getpreviewwarnings",{"_index":2734,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getrowscssclass",{"_index":3591,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getrowtitlecssclass",{"_index":3268,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["getscreenposforfield(field",{"_index":2515,"title":{},"body":{"classes/LineModel.html":{}}}],["getsearchiconcssclass",{"_index":3269,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["getsearchplaceholder",{"_index":3089,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getselected",{"_index":1096,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getselectedmapping",{"_index":3338,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["getselectedmappingcomponent",{"_index":3339,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["getsourceiconcssclass",{"_index":3195,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["getsourcetargetlabeltext",{"_index":3377,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getsourcetargetlabeltext(false",{"_index":3404,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getsourcetargetlabeltext(issource",{"_index":3392,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getsourcetargetlabeltext(true",{"_index":3402,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getspacerwidth",{"_index":1038,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["gettablebyname",{"_index":2828,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettablebyname(name",{"_index":2850,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettablebysourcetarget",{"_index":2829,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettablebysourcetarget(sourceidentifier",{"_index":2852,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettables",{"_index":2830,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettargetfieldfromline(selectedlineattrs",{"_index":2416,"title":{},"body":{"classes/LineModel.html":{}}}],["getterminalfields",{"_index":3719,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getting",{"_index":4264,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettitle",{"_index":2884,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["gettoken",{"_index":322,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["gettopfieldtypelabel",{"_index":3090,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["gettransformationclass",{"_index":1039,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getunqualifiednamespace",{"_index":3651,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getuserfieldcount(field",{"_index":2752,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getusermappedfields(issource",{"_index":2773,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getuuid",{"_index":1554,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["getvalidationerrors",{"_index":2725,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getvalidationwarnings",{"_index":2727,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getwarnings",{"_index":668,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["getwarnings().length",{"_index":3533,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["git",{"_index":4284,"title":{},"body":{"index.html":{}}}],["github",{"_index":4283,"title":{},"body":{"index.html":{}}}],["give",{"_index":4465,"title":{},"body":{"license.html":{}}}],["global",{"_index":1114,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["glue",{"_index":1685,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["go",{"_index":1691,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["goodwill",{"_index":4548,"title":{},"body":{"license.html":{}}}],["governing",{"_index":835,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["gradient",{"_index":2385,"title":{},"body":{"classes/LineModel.html":{}}}],["grant",{"_index":4422,"title":{},"body":{"license.html":{}}}],["granted",{"_index":4361,"title":{},"body":{"license.html":{}}}],["granting",{"_index":4334,"title":{},"body":{"license.html":{}}}],["grants",{"_index":4424,"title":{},"body":{"license.html":{}}}],["grossly",{"_index":4538,"title":{},"body":{"license.html":{}}}],["gzip",{"_index":2186,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["half",{"_index":707,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["hand",{"_index":3211,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["handle",{"_index":701,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlealertclick",{"_index":3490,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["handlealertclick(event",{"_index":3503,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["handlealertclose",{"_index":669,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlealertclose(e",{"_index":694,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handleclick",{"_index":670,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handleclick(event",{"_index":697,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handled",{"_index":1938,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["handledocumentfieldmouseover(component",{"_index":2460,"title":{},"body":{"classes/LineModel.html":{}}}],["handleerror",{"_index":2170,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["handleerror(message",{"_index":2200,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["handleexportclick",{"_index":3851,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handleexportclick(event",{"_index":3868,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handleexportmapping",{"_index":3852,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handleexportmapping(event",{"_index":3871,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handleexportmappingcancel",{"_index":3853,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handlelineclick(event",{"_index":2431,"title":{},"body":{"classes/LineModel.html":{}}}],["handlemappingsinstancename",{"_index":3854,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handlemappingsinstancename(event",{"_index":3876,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handlemouseclick",{"_index":517,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["handlemouseclick(event",{"_index":524,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["handlemouseenter",{"_index":671,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlemouseenter(evt1",{"_index":699,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlemouseleave",{"_index":672,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlemouseleave(evt1",{"_index":711,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlemouseover",{"_index":1040,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["handlemouseover(event",{"_index":1085,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["handlemouseover(evt1",{"_index":3116,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["handleonblur",{"_index":2065,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["handleonblur(event",{"_index":2075,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["handler.service",{"_index":35,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["handler.service.ts",{"_index":1436,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:24",{"_index":1482,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:26",{"_index":1458,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:27",{"_index":1471,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:28",{"_index":1481,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:29",{"_index":1469,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:30",{"_index":1479,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:31",{"_index":1473,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:33",{"_index":1477,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:38",{"_index":1475,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:43",{"_index":1454,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:51",{"_index":1455,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:59",{"_index":1456,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:73",{"_index":1460,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:80",{"_index":1451,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:90",{"_index":1453,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleredrawmappinglinesevent(event",{"_index":2410,"title":{},"body":{"classes/LineModel.html":{}}}],["handles",{"_index":2156,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["handling",{"_index":1665,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LookupTableUtil.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{}}}],["happen",{"_index":3771,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["happening",{"_index":3769,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["harmless",{"_index":4573,"title":{},"body":{"license.html":{}}}],["hasfieldactions",{"_index":2789,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["hasfocus",{"_index":2364,"title":{},"body":{"directives/FocusDirective.html":{}}}],["hash",{"_index":4006,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["hasjavadocuments",{"_index":271,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["hasmappedfield(issource",{"_index":2755,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["hastransformation",{"_index":2798,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["hasunmappedchildren",{"_index":1341,"title":{},"body":{"classes/EnumValue.html":{}}}],["hat",{"_index":805,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["hdd",{"_index":3250,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["header",{"_index":344,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/CollapsableHeaderComponent.html":{}}}],["header'},{'name",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["header.component",{"_index":865,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingDetailComponent.html":{}}}],["header.component.html",{"_index":515,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["header.component.ts",{"_index":514,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:25",{"_index":522,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["header.component.ts:26",{"_index":521,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["header.component.ts:28",{"_index":526,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["header.component.ts:32",{"_index":523,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["headername",{"_index":362,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":365,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["headertext",{"_index":1256,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["height",{"_index":4234,"title":{},"body":{"dependencies.html":{}}}],["hello",{"_index":3521,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["here",{"_index":13,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["hereby",{"_index":4423,"title":{},"body":{"license.html":{}}}],["herein",{"_index":4503,"title":{},"body":{"license.html":{}}}],["hold",{"_index":4572,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3214,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["host",{"_index":606,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["host'},{'name",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["host.component",{"_index":854,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["host.component.ts",{"_index":603,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"coverage.html":{}}}],["host.component.ts:38",{"_index":610,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["host.component.ts:42",{"_index":611,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["html",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["htmlcache",{"_index":1595,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["http",{"_index":312,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["http://127.0.0.1:8585",{"_index":4302,"title":{},"body":{"index.html":{}}}],["http://localhost:3000",{"_index":4319,"title":{},"body":{"index.html":{}}}],["http://localhost:8585/v2/atlas",{"_index":4611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8585/v2/atlas/java",{"_index":4613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8585/v2/atlas/json",{"_index":4617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8585/v2/atlas/xml",{"_index":4615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://stackoverflow.com/questions/40811809/add",{"_index":1278,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["http://www.apache.org/licenses",{"_index":4322,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":817,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["http://www.w3schools.com/howto/howto_css_modals.asp",{"_index":1253,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["http_interceptors",{"_index":844,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["http_status_no_content",{"_index":919,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["http_status_ok",{"_index":920,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["httpclient",{"_index":1868,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["httpclientmodule",{"_index":842,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["httpclientxsrfmodule",{"_index":843,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["httpclientxsrfmodule.withoptions(environment.xsrf",{"_index":906,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["httpclientxsrfmoduleforroot",{"_index":905,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpevent",{"_index":328,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httphandler",{"_index":330,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httpheaders",{"_index":1919,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["httpinterceptor",{"_index":329,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httprequest",{"_index":331,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httprequest.clone",{"_index":364,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httprequest.headers.has(headername",{"_index":363,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httprequest.headers.set(headername",{"_index":366,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["https://github.com/atlasmap/atlasmap",{"_index":4286,"title":{},"body":{"index.html":{}}}],["https://github.com/atlasmap/atlasmap/issues/1128",{"_index":3716,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["https://github.com/atlasmap/atlasmap/issues/329",{"_index":3968,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["httpxsrftokenextractor",{"_index":332,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{}}}],["human",{"_index":978,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["i.message",{"_index":754,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["icon",{"_index":897,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{}}}],["id",{"_index":114,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["identification",{"_index":4590,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":1476,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"coverage.html":{}}}],["identify",{"_index":3014,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["identifying",{"_index":4583,"title":{},"body":{"license.html":{}}}],["ignore",{"_index":1102,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["ignoring",{"_index":1958,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["ii",{"_index":4351,"title":{},"body":{"license.html":{}}}],["iii",{"_index":4357,"title":{},"body":{"license.html":{}}}],["immutable",{"_index":2718,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["implements",{"_index":337,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["implied",{"_index":831,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["import",{"_index":21,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"modules/ExampleAppModule.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["import/export",{"_index":101,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{}}}],["importadmcatalog",{"_index":2171,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["importadmcatalog(mappingsfilename",{"_index":2202,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["imported",{"_index":2220,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["importmappings",{"_index":3937,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["imports",{"_index":912,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"components/ToolbarComponent.html":{}}}],["improving",{"_index":4413,"title":{},"body":{"license.html":{}}}],["inability",{"_index":4546,"title":{},"body":{"license.html":{}}}],["inc",{"_index":806,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["incidental",{"_index":4543,"title":{},"body":{"license.html":{}}}],["include",{"_index":4386,"title":{},"body":{"license.html":{}}}],["includeactivemapping",{"_index":2849,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["included",{"_index":2772,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"license.html":{}}}],["includepath",{"_index":1426,"title":{},"body":{"classes/EnumValue.html":{}}}],["includes",{"_index":4480,"title":{},"body":{"license.html":{}}}],["including",{"_index":2159,"title":{},"body":{"injectables/FileManagementService.html":{},"license.html":{}}}],["inclusion",{"_index":4396,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":4421,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":4574,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":4570,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":4561,"title":{},"body":{"license.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexing",{"_index":3160,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["indexselectionchanged",{"_index":3196,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["indexselectionchanged(event",{"_index":3209,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["indicated",{"_index":4373,"title":{},"body":{"license.html":{}}}],["indicator",{"_index":1616,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["indices",{"_index":3217,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["indirect",{"_index":4345,"title":{},"body":{"license.html":{}}}],["individual",{"_index":4359,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["info(message",{"_index":1470,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["information",{"_index":618,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"license.html":{}}}],["informational",{"_index":4488,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":4445,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4458,"title":{},"body":{"license.html":{}}}],["ingoring",{"_index":1937,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["inherit",{"_index":2102,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["inherited",{"_index":2146,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["initcfg",{"_index":136,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["initialfocuselement",{"_index":1300,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["initialfocuselement.nativeelement.focus",{"_index":1302,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["initialization",{"_index":3956,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["initializationerroroccurred",{"_index":66,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["initializationservice",{"_index":41,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{},"overview.html":{}}}],["initialize",{"_index":473,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["initialize(cfg",{"_index":2578,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["initialize(field",{"_index":483,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["initialize(namespace",{"_index":3569,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["initialized",{"_index":58,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["initializefromfields",{"_index":3721,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["initializing",{"_index":620,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["initmodel",{"_index":3671,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["injectable",{"_index":304,"title":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"coverage.html":{}}}],["injectables",{"_index":306,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"overview.html":{}}}],["input",{"_index":527,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceListComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["inputclassidentifier",{"_index":2658,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["inputfield",{"_index":2497,"title":{},"body":{"classes/LineModel.html":{},"classes/LookupTableUtil.html":{}}}],["inputfield.classidentifier",{"_index":2661,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["inputfieldpos",{"_index":2500,"title":{},"body":{"classes/LineModel.html":{}}}],["inputfieldpos.y",{"_index":2503,"title":{},"body":{"classes/LineModel.html":{}}}],["inputid",{"_index":3083,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["inputs",{"_index":518,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"directives/FocusDirective.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["inputvalue",{"_index":4102,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["inputvalue.length",{"_index":4111,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["insert",{"_index":1634,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["insertbeforemappedfield",{"_index":3105,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["inserted",{"_index":1727,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["insertion",{"_index":3244,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["insertionindex",{"_index":3239,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["insertnodes(newnodes",{"_index":1655,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["insertposition",{"_index":1651,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["inserttext(str",{"_index":1648,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["inside",{"_index":1280,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["inspection",{"_index":87,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["inspectionresult",{"_index":120,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["inspectionsource",{"_index":119,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["inspectiontype",{"_index":46,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["inspectiontype.instance",{"_index":2308,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["inspectiontype.java_class",{"_index":2310,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["inspectiontype.schema",{"_index":2309,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["install",{"_index":4296,"title":{},"body":{"index.html":{}}}],["installor",{"_index":4290,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1464,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["instance.definition",{"_index":1821,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["instance.name",{"_index":1822,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["instance/schema/mappings",{"_index":2304,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["instanceof",{"_index":1623,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["instead",{"_index":320,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["institute",{"_index":4448,"title":{},"body":{"license.html":{}}}],["instr",{"_index":968,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["int8array(reader.result",{"_index":1005,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["integer",{"_index":585,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["integrations",{"_index":4271,"title":{},"body":{"index.html":{}}}],["intentionally",{"_index":4394,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":4267,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":369,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{}}}],["intercept(httprequest",{"_index":346,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["interceptor",{"_index":340,"title":{"interceptors/ApiXsrfInterceptor.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":368,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{}}}],["interface",{"_index":1254,"title":{"interfaces/ModalErrorWindowValidator.html":{},"interfaces/ModalWindowValidator.html":{}},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":3536,"title":{},"body":{"interfaces/ModalErrorWindowValidator.html":{},"interfaces/ModalWindowValidator.html":{},"license.html":{},"overview.html":{}}}],["internal",{"_index":2968,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["invalidate",{"_index":3066,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["invoke",{"_index":4090,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["io.atlasmap.java.v2",{"_index":128,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["io.atlasmap.json.v2",{"_index":130,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["io.atlasmap.json.v2.jsonfield",{"_index":2135,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["io.atlasmap.v2",{"_index":126,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["io.atlasmap.xml.v2",{"_index":132,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["io.atlasmap.xml.v2.xmlfield",{"_index":2136,"title":{},"body":{"components/FieldEditComponent.html":{},"classes/MappingUtil.html":{}}}],["iokey",{"_index":2870,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["irrevocable",{"_index":4431,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":3322,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["isactivemapping",{"_index":3270,"title":{},"body":{"components/MappingListComponent.html":{}}}],["isactivemapping(mapping",{"_index":3285,"title":{},"body":{"components/MappingListComponent.html":{}}}],["isadd",{"_index":484,"title":{},"body":{"components/ClassNameComponent.html":{},"components/FieldEditComponent.html":{}}}],["isaddbuttonvisible",{"_index":3091,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["isarray",{"_index":1343,"title":{},"body":{"classes/EnumValue.html":{}}}],["isattribute",{"_index":1344,"title":{},"body":{"classes/EnumValue.html":{}}}],["isclasspathresolutionneeded",{"_index":274,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["isclosing",{"_index":539,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["iscollection",{"_index":1342,"title":{},"body":{"classes/EnumValue.html":{}}}],["isconstant",{"_index":1187,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{}}}],["iscustom",{"_index":1801,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["isdatavalid",{"_index":474,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["isdebugenabled",{"_index":187,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["isdragdroptarget",{"_index":1026,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["iseditmode",{"_index":3619,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["isempty",{"_index":2758,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["isenumerationmode",{"_index":4058,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["isfieldmapped(field",{"_index":2796,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["isfieldsexist(fields",{"_index":3693,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["isforeachmode",{"_index":4057,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["isfullymapped",{"_index":2759,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["isincollection",{"_index":1416,"title":{},"body":{"classes/EnumValue.html":{}}}],["isindexarg",{"_index":3042,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["isindexarg(argval",{"_index":3052,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["isinitialized",{"_index":1853,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["isinnestedcollection",{"_index":1418,"title":{},"body":{"classes/EnumValue.html":{}}}],["islookupmode",{"_index":2742,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["ismanytoonemode",{"_index":4056,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["ismappingstale",{"_index":3409,"title":{},"body":{"classes/MappingUtil.html":{}}}],["ismappingstale(mapping",{"_index":3416,"title":{},"body":{"classes/MappingUtil.html":{}}}],["isn't",{"_index":1111,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["isoddrow",{"_index":3378,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["isonetomanymode",{"_index":4054,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["isonetoonemode",{"_index":4055,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["isopen",{"_index":661,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["ispadfield",{"_index":2679,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["isparentfield",{"_index":1382,"title":{},"body":{"classes/EnumValue.html":{}}}],["ispartialcomponent",{"_index":3092,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["isprimitive",{"_index":1345,"title":{},"body":{"classes/EnumValue.html":{}}}],["isproperty",{"_index":1185,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{}}}],["ispropertyorconstant",{"_index":1432,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["isrequiredfieldvalid(value",{"_index":297,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["isselectedmapping",{"_index":2492,"title":{},"body":{"classes/LineModel.html":{}}}],["issource",{"_index":116,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{}}}],["isstringfield",{"_index":1386,"title":{},"body":{"classes/EnumValue.html":{}}}],["issue",{"_index":4408,"title":{},"body":{"license.html":{}}}],["istarget",{"_index":3646,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["isterminal",{"_index":1387,"title":{},"body":{"classes/EnumValue.html":{}}}],["istraceenabled",{"_index":190,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["istransformcapable",{"_index":3197,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["isuserdelimiter",{"_index":2932,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["isuserdelimiter(delimitermodel",{"_index":2973,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["isvalidation",{"_index":674,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["isxml",{"_index":2060,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["it's",{"_index":1104,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["item",{"_index":962,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["itemrow",{"_index":3616,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["items",{"_index":960,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["items.length",{"_index":996,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["itemwasremoved",{"_index":997,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["jackson",{"_index":1544,"title":{},"body":{"classes/Examples.html":{}}}],["january",{"_index":4320,"title":{},"body":{"license.html":{}}}],["jar",{"_index":1541,"title":{},"body":{"classes/Examples.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["jars",{"_index":3894,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["java",{"_index":223,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["java_archive",{"_index":4259,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["java_class",{"_index":4262,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["javainspectionserviceurl",{"_index":4612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["javaservicespackageprefix",{"_index":127,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["jquery",{"_index":4232,"title":{},"body":{"dependencies.html":{}}}],["jquery(function",{"_index":4089,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["js",{"_index":4227,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":2182,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/LookupTableEntry.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["json.sourcetype",{"_index":2554,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["json.sourcevalue",{"_index":2553,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["json.stringify(actiondetail",{"_index":1998,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["json.stringify(body",{"_index":1987,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["json.stringify(data",{"_index":2357,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["json.stringify(res",{"_index":2277,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["json.targettype",{"_index":2556,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["json.targetvalue",{"_index":2555,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["jsonbuffer",{"_index":2162,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["jsonheaders",{"_index":2351,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["jsoninspectionserviceurl",{"_index":4616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jsonservicespackageprefix",{"_index":129,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["kept",{"_index":2229,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["key",{"_index":254,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["keypos",{"_index":1624,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["kind",{"_index":829,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["knowing",{"_index":1118,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["l",{"_index":2439,"title":{},"body":{"classes/LineModel.html":{}}}],["l.sourcex",{"_index":2440,"title":{},"body":{"classes/LineModel.html":{}}}],["l.sourcey",{"_index":2441,"title":{},"body":{"classes/LineModel.html":{}}}],["l.stroke",{"_index":2444,"title":{},"body":{"classes/LineModel.html":{}}}],["l.style",{"_index":2485,"title":{},"body":{"classes/LineModel.html":{}}}],["l.targetfield",{"_index":2445,"title":{},"body":{"classes/LineModel.html":{}}}],["l.targetx",{"_index":2442,"title":{},"body":{"classes/LineModel.html":{}}}],["l.targety",{"_index":2443,"title":{},"body":{"classes/LineModel.html":{}}}],["label",{"_index":2969,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["language",{"_index":834,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["last",{"_index":1657,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["last.str",{"_index":1712,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["last.str.length",{"_index":1711,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["last.str.substring(0",{"_index":1713,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastaddedindex",{"_index":1682,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastfieldrefremoved(removed.field",{"_index":1710,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastnewnodeindex",{"_index":1669,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastnode",{"_index":1622,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastnode.str.indexof",{"_index":1625,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastnode.str.length",{"_index":1770,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastseparator",{"_index":3465,"title":{},"body":{"classes/MappingUtil.html":{}}}],["lasttextnode",{"_index":1660,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["latest",{"_index":1640,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["law",{"_index":820,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["lawsuit",{"_index":4454,"title":{},"body":{"license.html":{}}}],["leaf",{"_index":942,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingFieldContainerComponent.html":{}}}],["leaf.length",{"_index":1018,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["leaf.substr(0",{"_index":1016,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["leave",{"_index":2110,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["left",{"_index":1223,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["left_bracket",{"_index":3667,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["legal",{"_index":4335,"title":{},"body":{"license.html":{}}}],["legend",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"overview.html":{}}}],["legible",{"_index":2970,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["length",{"_index":4114,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["level",{"_index":1450,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/NamespaceModel.html":{},"miscellaneous/variables.html":{}}}],["liability",{"_index":4533,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4541,"title":{},"body":{"license.html":{}}}],["lib/atlasmap",{"_index":1532,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["licensable",{"_index":4443,"title":{},"body":{"license.html":{}}}],["license",{"_index":810,"title":{"license.html":{}},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["license.you",{"_index":4495,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":807,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["licenses",{"_index":4459,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":4330,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":4520,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":837,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["limited",{"_index":4365,"title":{},"body":{"license.html":{}}}],["line",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["line.sourcex",{"_index":2420,"title":{},"body":{"classes/LineModel.html":{}}}],["line.sourcey",{"_index":2422,"title":{},"body":{"classes/LineModel.html":{}}}],["line.targetfield",{"_index":2427,"title":{},"body":{"classes/LineModel.html":{}}}],["line.targetx",{"_index":2424,"title":{},"body":{"classes/LineModel.html":{}}}],["line.targety",{"_index":2426,"title":{},"body":{"classes/LineModel.html":{}}}],["linebeingformed",{"_index":2397,"title":{},"body":{"classes/LineModel.html":{}}}],["linemachine",{"_index":1043,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["linemachinecomponent",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["linemachineelement",{"_index":2401,"title":{},"body":{"classes/LineModel.html":{}}}],["linemachineheight",{"_index":2490,"title":{},"body":{"classes/LineModel.html":{}}}],["linemodel",{"_index":2373,"title":{"classes/LineModel.html":{}},"body":{"classes/LineModel.html":{},"coverage.html":{}}}],["lines",{"_index":2396,"title":{},"body":{"classes/LineModel.html":{},"components/ToolbarComponent.html":{}}}],["link",{"_index":3308,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["list",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["list'},{'name",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["list.component",{"_index":874,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["list.component.html",{"_index":3259,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts",{"_index":3258,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"coverage.html":{}}}],["list.component.ts:104",{"_index":3613,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:107",{"_index":3286,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:109",{"_index":3604,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:111",{"_index":3288,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:114",{"_index":3606,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:134",{"_index":3608,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:148",{"_index":3609,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:30",{"_index":3273,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:31",{"_index":3595,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:32",{"_index":3294,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:33",{"_index":3293,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:34",{"_index":3295,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:35",{"_index":3614,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:36",{"_index":3276,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:37",{"_index":3615,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:39",{"_index":3600,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:40",{"_index":3289,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:47",{"_index":3280,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:48",{"_index":3610,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:55",{"_index":3612,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:56",{"_index":3291,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:59",{"_index":3598,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:60",{"_index":3283,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:63",{"_index":3603,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:64",{"_index":3281,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:67",{"_index":3602,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:68",{"_index":3282,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:71",{"_index":3601,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:72",{"_index":3278,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:75",{"_index":3597,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:76",{"_index":3292,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:81",{"_index":3284,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:86",{"_index":3275,"title":{},"body":{"components/MappingListComponent.html":{}}}],["lists",{"_index":4406,"title":{},"body":{"license.html":{}}}],["literal",{"_index":2840,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["litigation",{"_index":4449,"title":{},"body":{"license.html":{}}}],["little",{"_index":4293,"title":{},"body":{"index.html":{}}}],["live",{"_index":3878,"title":{},"body":{"components/ToolbarComponent.html":{},"index.html":{}}}],["lmcinstance",{"_index":2411,"title":{},"body":{"classes/LineModel.html":{}}}],["lmcinstance.redrawlinesformappings",{"_index":2413,"title":{},"body":{"classes/LineModel.html":{}}}],["load",{"_index":1967,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["loadcomponent",{"_index":1291,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["loading",{"_index":61,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["loadingstatus",{"_index":60,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["local",{"_index":358,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["locale",{"_index":3680,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["location",{"_index":3586,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{}}}],["locationuri",{"_index":3647,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["logger",{"_index":25,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["loggermodule",{"_index":852,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["loggermodule.forroot(environment.ngxloggerconfig",{"_index":910,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["loggermoduleforroot",{"_index":909,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["long",{"_index":593,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["looking",{"_index":3704,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["lookup",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["lookuptable",{"_index":2527,"title":{"classes/LookupTable.html":{}},"body":{"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["lookuptablecomponent",{"_index":424,"title":{"components/LookupTableComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lookuptabledata",{"_index":2582,"title":{"classes/LookupTableData.html":{}},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"coverage.html":{}}}],["lookuptableentry",{"_index":2536,"title":{"classes/LookupTableEntry.html":{}},"body":{"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"coverage.html":{}}}],["lookuptablename",{"_index":2645,"title":{},"body":{"classes/LookupTableUtil.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["lookuptableutil",{"_index":2638,"title":{"classes/LookupTableUtil.html":{}},"body":{"classes/LookupTableUtil.html":{},"coverage.html":{}}}],["lookuptableutil.getfirstmappingforlookuptable(mappingdefinition",{"_index":2672,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["lookuptableutil.populatemappinglookuptable(mappingdefinition",{"_index":2676,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["loss",{"_index":4547,"title":{},"body":{"license.html":{}}}],["losses",{"_index":4554,"title":{},"body":{"license.html":{}}}],["lost",{"_index":4105,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["m",{"_index":2476,"title":{},"body":{"classes/LineModel.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{}}}],["m.getfields(false).length",{"_index":2657,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m.getfields(false)[0",{"_index":2674,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m.getfields(true).length",{"_index":2656,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m.getfields(true)[0",{"_index":2660,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m.isfieldmapped(field",{"_index":2805,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{}}}],["m.sourcefields",{"_index":2496,"title":{},"body":{"classes/LineModel.html":{}}}],["m.sourcefields.length",{"_index":2493,"title":{},"body":{"classes/LineModel.html":{}}}],["m.sourcefields[0].field.name",{"_index":2806,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["m.targetfields",{"_index":2506,"title":{},"body":{"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["m.targetfields.length",{"_index":2494,"title":{},"body":{"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["m.transition.lookuptablename",{"_index":2655,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m.transition.mode",{"_index":2653,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m1",{"_index":1081,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["machine",{"_index":2392,"title":{},"body":{"classes/LineModel.html":{}}}],["machine'},{'name",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["machine.component",{"_index":861,"title":{},"body":{"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["machine.component.html",{"_index":2393,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts",{"_index":2375,"title":{},"body":{"classes/LineModel.html":{},"coverage.html":{}}}],["machine.component.ts:29",{"_index":2382,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:30",{"_index":2383,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:31",{"_index":2390,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:32",{"_index":2391,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:33",{"_index":2387,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:34",{"_index":2388,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:35",{"_index":2389,"title":{},"body":{"classes/LineModel.html":{}}}],["made",{"_index":2950,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["mailing",{"_index":4405,"title":{},"body":{"license.html":{}}}],["main",{"_index":1466,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["make",{"_index":1390,"title":{},"body":{"classes/EnumValue.html":{},"components/MappingFieldActionArgumentComponent.html":{},"license.html":{}}}],["making",{"_index":4363,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":4552,"title":{},"body":{"license.html":{}}}],["managed",{"_index":4410,"title":{},"body":{"license.html":{}}}],["management",{"_index":3874,"title":{},"body":{"components/ToolbarComponent.html":{},"license.html":{}}}],["management.service",{"_index":38,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{}}}],["management.service.ts",{"_index":2155,"title":{},"body":{"injectables/FileManagementService.html":{},"coverage.html":{}}}],["management.service.ts:108",{"_index":2191,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:138",{"_index":2215,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:162",{"_index":2226,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:186",{"_index":2218,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:213",{"_index":2177,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:313",{"_index":2203,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:33",{"_index":2233,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:35",{"_index":2234,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:356",{"_index":2198,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:38",{"_index":2175,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:381",{"_index":2197,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:416",{"_index":2199,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:42",{"_index":2236,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:420",{"_index":2201,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:46",{"_index":2238,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:53",{"_index":2190,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:81",{"_index":2192,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["manipulation",{"_index":2157,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["manner",{"_index":1940,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["manually",{"_index":4313,"title":{},"body":{"index.html":{}}}],["many",{"_index":4047,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["many_to_one",{"_index":1799,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["map",{"_index":247,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["mapped",{"_index":1726,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["mappedfield",{"_index":1565,"title":{"classes/MappedField.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["mappedfield.actions",{"_index":3479,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.actions.length",{"_index":2791,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedfield.actions.push(action",{"_index":3485,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field",{"_index":2709,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{}}}],["mappedfield.field.displayname",{"_index":3472,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field.isattribute",{"_index":3473,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field.issource",{"_index":3246,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["mappedfield.field.name",{"_index":3255,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{}}}],["mappedfield.field.namespacealias",{"_index":3474,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field.parentfield",{"_index":3475,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field.path",{"_index":2710,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingUtil.html":{}}}],["mappedfield.field.serviceobject.jsontype",{"_index":3463,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field.type",{"_index":3254,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{}}}],["mappedfield.field.usercreated",{"_index":3464,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.ispadfield",{"_index":2754,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedfield.parseddata.fieldisconstant",{"_index":3443,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.fieldisproperty",{"_index":3441,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedactions",{"_index":3481,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedactions.length",{"_index":3480,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parseddocid",{"_index":3449,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parseddocuri",{"_index":3448,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedindex",{"_index":3487,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedname",{"_index":3446,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedpath",{"_index":3462,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedvalue",{"_index":3454,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedvaluetype",{"_index":3456,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.usercreated",{"_index":3450,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfieldindex",{"_index":3440,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfieldparsingdata",{"_index":2684,"title":{"classes/MappedFieldParsingData.html":{}},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"coverage.html":{}}}],["mappedfields",{"_index":1731,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{}}}],["mappedfields.includes(node.field",{"_index":1737,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["mappedfields.length",{"_index":2706,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["mappedfields[+index",{"_index":2768,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedfields[0].field.isincollection",{"_index":3170,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["mappedinputfield",{"_index":2495,"title":{},"body":{"classes/LineModel.html":{}}}],["mappedinputfield.field",{"_index":2498,"title":{},"body":{"classes/LineModel.html":{}}}],["mappedoutputfield",{"_index":2505,"title":{},"body":{"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedoutputfield.field",{"_index":2507,"title":{},"body":{"classes/LineModel.html":{}}}],["mappedoutputfield.field.docdef",{"_index":2803,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedoutputfield.field.path",{"_index":2804,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mapper",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"index.html":{}}}],["mapper'},{'name",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["mapper.module",{"_index":1533,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["mapper.module.ts",{"_index":796,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapper.module.ts:167",{"_index":801,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["mapper/common/config.types.ts",{"_index":4258,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mapper/common/data",{"_index":917,"title":{},"body":{"classes/DataMapperUtil.html":{},"coverage.html":{}}}],["mapper/common/focus.directive.ts",{"_index":2362,"title":{},"body":{"directives/FocusDirective.html":{},"coverage.html":{}}}],["mapper/common/focus.directive.ts:14",{"_index":2369,"title":{},"body":{"directives/FocusDirective.html":{}}}],["mapper/common/focus.directive.ts:8",{"_index":2368,"title":{},"body":{"directives/FocusDirective.html":{}}}],["mapper/common/focus.directive.ts:9",{"_index":2367,"title":{},"body":{"directives/FocusDirective.html":{}}}],["mapper/common/to",{"_index":3832,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{}}}],["mapper/components/class",{"_index":462,"title":{},"body":{"components/ClassNameComponent.html":{},"coverage.html":{}}}],["mapper/components/collapsable",{"_index":513,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"coverage.html":{}}}],["mapper/components/constant",{"_index":534,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"coverage.html":{}}}],["mapper/components/data",{"_index":602,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"coverage.html":{}}}],["mapper/components/document",{"_index":1020,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"coverage.html":{}}}],["mapper/components/expression.component.ts",{"_index":4150,"title":{},"body":{"coverage.html":{}}}],["mapper/components/field",{"_index":2056,"title":{},"body":{"components/FieldEditComponent.html":{},"coverage.html":{}}}],["mapper/components/line",{"_index":2374,"title":{},"body":{"classes/LineModel.html":{},"coverage.html":{}}}],["mapper/components/mapping/lookup",{"_index":2572,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"coverage.html":{}}}],["mapper/components/mapping/mapping",{"_index":2881,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"coverage.html":{}}}],["mapper/components/mapping/transition",{"_index":4076,"title":{},"body":{"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["mapper/components/modal",{"_index":1243,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"coverage.html":{}}}],["mapper/components/namespace",{"_index":3565,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"coverage.html":{}}}],["mapper/components/property",{"_index":3812,"title":{},"body":{"components/PropertyFieldEditComponent.html":{},"coverage.html":{}}}],["mapper/components/template",{"_index":3821,"title":{},"body":{"components/TemplateEditComponent.html":{},"coverage.html":{}}}],["mapper/components/toolbar.component.ts",{"_index":3842,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["mapper/components/toolbar.component.ts:102",{"_index":3863,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:127",{"_index":3865,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:131",{"_index":3897,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:192",{"_index":3879,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:205",{"_index":3891,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:227",{"_index":3861,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:250",{"_index":3869,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:265",{"_index":3877,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:283",{"_index":3872,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:294",{"_index":3875,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:298",{"_index":3860,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:31",{"_index":3858,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:32",{"_index":3859,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:34",{"_index":3899,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:36",{"_index":3903,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:38",{"_index":3900,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:39",{"_index":3901,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:40",{"_index":3902,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:47",{"_index":3889,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:63",{"_index":3881,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:93",{"_index":3885,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:98",{"_index":3867,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/data",{"_index":795,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapper/models/config.model.ts",{"_index":8,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{}}}],["mapper/models/config.model.ts:33",{"_index":767,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:333",{"_index":20,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{}}}],["mapper/models/config.model.ts:34",{"_index":776,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:35",{"_index":777,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:36",{"_index":759,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:37",{"_index":775,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:39",{"_index":760,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:40",{"_index":763,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:41",{"_index":761,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:42",{"_index":762,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:44",{"_index":781,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:45",{"_index":779,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:46",{"_index":780,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:49",{"_index":766,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:51",{"_index":778,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:53",{"_index":765,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:56",{"_index":774,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:57",{"_index":764,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:58",{"_index":770,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:59",{"_index":771,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:60",{"_index":773,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:61",{"_index":772,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:63",{"_index":768,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:66",{"_index":769,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:68",{"_index":757,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:81",{"_index":1234,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:82",{"_index":1242,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:83",{"_index":1239,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:84",{"_index":1233,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:85",{"_index":1238,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:86",{"_index":1241,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:87",{"_index":1237,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:88",{"_index":1236,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:89",{"_index":1235,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:90",{"_index":1240,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:91",{"_index":1232,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:92",{"_index":1231,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/document",{"_index":3644,"title":{},"body":{"classes/NamespaceModel.html":{},"coverage.html":{}}}],["mapper/models/error.model.ts",{"_index":1503,"title":{},"body":{"classes/ErrorInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mapper/models/error.model.ts:20",{"_index":1509,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:22",{"_index":1510,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:23",{"_index":1512,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:24",{"_index":1511,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:25",{"_index":1507,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/examples.ts",{"_index":1536,"title":{},"body":{"classes/Examples.html":{},"coverage.html":{}}}],["mapper/models/examples.ts:18",{"_index":1549,"title":{},"body":{"classes/Examples.html":{}}}],["mapper/models/expression.model.ts",{"_index":1551,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["mapper/models/expression.model.ts:21",{"_index":1773,"title":{},"body":{"classes/ExpressionUpdatedEvent.html":{}}}],["mapper/models/expression.model.ts:22",{"_index":1774,"title":{},"body":{"classes/ExpressionUpdatedEvent.html":{}}}],["mapper/models/expression.model.ts:26",{"_index":1561,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:27",{"_index":1559,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:33",{"_index":1562,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:37",{"_index":1564,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:38",{"_index":1563,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:43",{"_index":3826,"title":{},"body":{"classes/TextNode.html":{}}}],["mapper/models/expression.model.ts:45",{"_index":3827,"title":{},"body":{"classes/TextNode.html":{}}}],["mapper/models/expression.model.ts:49",{"_index":3829,"title":{},"body":{"classes/TextNode.html":{}}}],["mapper/models/expression.model.ts:53",{"_index":3828,"title":{},"body":{"classes/TextNode.html":{}}}],["mapper/models/expression.model.ts:61",{"_index":2144,"title":{},"body":{"classes/FieldNode.html":{}}}],["mapper/models/expression.model.ts:63",{"_index":2145,"title":{},"body":{"classes/FieldNode.html":{}}}],["mapper/models/expression.model.ts:73",{"_index":2150,"title":{},"body":{"classes/FieldNode.html":{}}}],["mapper/models/expression.model.ts:77",{"_index":2149,"title":{},"body":{"classes/FieldNode.html":{}}}],["mapper/models/field",{"_index":1776,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mapper/models/field.model.ts",{"_index":1326,"title":{},"body":{"classes/EnumValue.html":{},"coverage.html":{}}}],["mapper/models/field.model.ts:21",{"_index":1328,"title":{},"body":{"classes/EnumValue.html":{}}}],["mapper/models/field.model.ts:22",{"_index":1329,"title":{},"body":{"classes/EnumValue.html":{}}}],["mapper/models/lookup",{"_index":2528,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"coverage.html":{}}}],["mapper/models/mapping",{"_index":2818,"title":{},"body":{"classes/MappingDefinition.html":{},"coverage.html":{}}}],["mapper/models/mapping.model.ts",{"_index":2677,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"coverage.html":{}}}],["mapper/models/mapping.model.ts:26",{"_index":2813,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:27",{"_index":2814,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:28",{"_index":2815,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:29",{"_index":2810,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:30",{"_index":2811,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:31",{"_index":2812,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:32",{"_index":2808,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:33",{"_index":2807,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:34",{"_index":2816,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:35",{"_index":2809,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:36",{"_index":2817,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:40",{"_index":2685,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:41",{"_index":2683,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:42",{"_index":2682,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:44",{"_index":2691,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:66",{"_index":2686,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:70",{"_index":2687,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:74",{"_index":2689,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/transition.model.ts",{"_index":3986,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mapper/models/transition.model.ts:122",{"_index":4069,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:133",{"_index":4074,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:137",{"_index":4075,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:141",{"_index":4073,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:145",{"_index":4072,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:149",{"_index":4071,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:33",{"_index":3994,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["mapper/models/transition.model.ts:34",{"_index":3996,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["mapper/models/transition.model.ts:35",{"_index":3995,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["mapper/models/transition.model.ts:36",{"_index":3992,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["mapper/models/transition.model.ts:48",{"_index":4062,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:50",{"_index":4066,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:51",{"_index":4061,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:52",{"_index":4067,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:53",{"_index":4065,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:54",{"_index":4064,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:55",{"_index":4063,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:56",{"_index":4060,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:62",{"_index":4070,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:90",{"_index":4068,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/services/api",{"_index":307,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"coverage.html":{}}}],["mapper/services/document",{"_index":4194,"title":{},"body":{"coverage.html":{}}}],["mapper/services/error",{"_index":1435,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["mapper/services/field",{"_index":1850,"title":{},"body":{"injectables/FieldActionService.html":{},"coverage.html":{}}}],["mapper/services/file",{"_index":2154,"title":{},"body":{"injectables/FileManagementService.html":{},"coverage.html":{}}}],["mapper/services/initialization.service.ts",{"_index":4202,"title":{},"body":{"coverage.html":{}}}],["mapper/services/mapping",{"_index":4204,"title":{},"body":{"coverage.html":{}}}],["mapper/utils/lookup",{"_index":2639,"title":{},"body":{"classes/LookupTableUtil.html":{},"coverage.html":{}}}],["mapper/utils/mapping",{"_index":3407,"title":{},"body":{"classes/MappingUtil.html":{},"coverage.html":{}}}],["mapping",{"_index":29,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"index.html":{}}}],["mapping.adm",{"_index":2292,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["mapping.getallfields",{"_index":3775,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mapping.getallmappedfields",{"_index":3314,"title":{},"body":{"components/MappingListComponent.html":{}}}],["mapping.getfields(false)[0",{"_index":2594,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["mapping.getfields(issource",{"_index":2039,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["mapping.getfields(true)[0",{"_index":2604,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["mapping.getindexformappedfield(mappedfield",{"_index":3256,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["mapping.getmappedfieldforfield(field).actions.length",{"_index":3776,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mapping.getmappedfieldforindex((index",{"_index":1582,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["mapping.getmappedfields(issource",{"_index":3439,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mapping.getusermappedfields(issource",{"_index":3305,"title":{},"body":{"components/MappingListComponent.html":{}}}],["mapping.getusermappedfields(true",{"_index":1732,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["mapping.isfullymapped",{"_index":4123,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["mapping.model",{"_index":1566,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappingDefinition.html":{},"classes/TextNode.html":{}}}],["mapping.sourcefields.length",{"_index":3399,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["mapping.targetfields.length",{"_index":3400,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["mapping.transition.getprettyname",{"_index":3312,"title":{},"body":{"components/MappingListComponent.html":{}}}],["mapping.transition.userdelimiter",{"_index":4127,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["mapping/gz",{"_index":2266,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping/json",{"_index":2281,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping/reset",{"_index":2274,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping/zip",{"_index":2273,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping_error",{"_index":1515,"title":{},"body":{"classes/ErrorInfo.html":{},"miscellaneous/enumerations.html":{}}}],["mappingchanged",{"_index":2464,"title":{},"body":{"classes/LineModel.html":{}}}],["mappingdefinition",{"_index":28,"title":{"classes/MappingDefinition.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["mappingdefinition.activemapping",{"_index":3774,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mappingdefinition.addtable(table",{"_index":2666,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["mappingdefinition.getallmappings(true",{"_index":3772,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mappingdefinition.gettablebysourcetarget(inputclassidentifier",{"_index":2663,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["mappingdefinition.gettables",{"_index":2669,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["mappingdefinition.mappings",{"_index":2675,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["mappingdetailcomponent",{"_index":427,"title":{"components/MappingDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingerror",{"_index":1444,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["mappingerror(message",{"_index":1472,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["mappingfieldactionargumentcomponent",{"_index":428,"title":{"components/MappingFieldActionArgumentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfieldactioncomponent",{"_index":431,"title":{"components/MappingFieldActionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfieldcontainercomponent",{"_index":433,"title":{"components/MappingFieldContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfielddetailcomponent",{"_index":435,"title":{"components/MappingFieldDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfilenames",{"_index":2254,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappingfilenames.push(entry.name",{"_index":2256,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappingfiles",{"_index":159,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["mappinginitialized",{"_index":104,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["mappingisactive",{"_index":3773,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mappinglistcomponent",{"_index":436,"title":{"components/MappingListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappinglistfieldcomponent",{"_index":438,"title":{"components/MappingListFieldComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingmanagementservice",{"_index":39,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{},"overview.html":{}}}],["mappingmodel",{"_index":891,"title":{},"body":{"modules/DataMapperModule.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["mappingname",{"_index":2350,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappings",{"_index":160,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/ToolbarComponent.html":{}}}],["mappings.\\n",{"_index":2332,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappings.push(this.activemapping",{"_index":2876,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["mappingselectioncomponent",{"_index":441,"title":{"components/MappingSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingselectionrequiredsubscription",{"_index":2882,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["mappingselectionsection",{"_index":3395,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["mappingselectionsectioncomponent",{"_index":443,"title":{"components/MappingSelectionSectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingserializer",{"_index":893,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{}}}],["mappingservice",{"_index":152,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["mappingservicespackageprefix",{"_index":125,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["mappingsfilename",{"_index":2188,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["mappingsfilename.length",{"_index":2291,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappingsforfield",{"_index":2877,"title":{},"body":{"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{}}}],["mappingsforfield.push(m",{"_index":2879,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["mappingupdatedsubscription",{"_index":2403,"title":{},"body":{"classes/LineModel.html":{}}}],["mappingutil",{"_index":3406,"title":{"classes/MappingUtil.html":{}},"body":{"classes/MappingUtil.html":{},"coverage.html":{}}}],["mappingutil.updatemappedfieldsfromdocuments(mapping",{"_index":3435,"title":{},"body":{"classes/MappingUtil.html":{}}}],["margin",{"_index":1222,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["marked",{"_index":4416,"title":{},"body":{"license.html":{}}}],["marks",{"_index":4511,"title":{},"body":{"license.html":{}}}],["master",{"_index":2214,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["match",{"_index":1175,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"dependencies.html":{}}}],["matches",{"_index":1876,"title":{},"body":{"injectables/FieldActionService.html":{},"components/MappingFieldContainerComponent.html":{}}}],["matchesdate",{"_index":1864,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["matchesdate(candidatetype",{"_index":1904,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["matchesnumeric",{"_index":1865,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["matchesnumeric(candidatetype",{"_index":1910,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["matching",{"_index":302,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materializing",{"_index":3961,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["math.floor((math.random",{"_index":2720,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{}}}],["math.floor(math.random",{"_index":2558,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["maven",{"_index":81,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["max",{"_index":3243,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["max_path_width",{"_index":1015,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["mean",{"_index":4327,"title":{},"body":{"license.html":{}}}],["means",{"_index":1647,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"license.html":{}}}],["mechanical",{"_index":4367,"title":{},"body":{"license.html":{}}}],["media",{"_index":4371,"title":{},"body":{"license.html":{}}}],["medium",{"_index":4463,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4464,"title":{},"body":{"license.html":{}}}],["menu",{"_index":2952,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["menus",{"_index":3073,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["merchantability",{"_index":4521,"title":{},"body":{"license.html":{}}}],["merely",{"_index":4389,"title":{},"body":{"license.html":{}}}],["mergedarray",{"_index":1495,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["mergedtextnode",{"_index":1672,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["mergedtextnode.str",{"_index":1674,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["message",{"_index":1262,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"injectables/FileManagementService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["message).length",{"_index":1502,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["messages",{"_index":1463,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["meta",{"_index":2301,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["metadata",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["method",{"_index":341,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/ToolbarComponent.html":{}}}],["methods",{"_index":321,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/FieldAction.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["mf.field",{"_index":2751,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mfield",{"_index":1741,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["minimal",{"_index":2231,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["miscellaneous",{"_index":4252,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1936,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["mkdirp",{"_index":4236,"title":{},"body":{"dependencies.html":{}}}],["modal",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["modalerrorwindow",{"_index":675,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["modalerrorwindowcomponent",{"_index":446,"title":{"components/ModalErrorWindowComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalerrorwindowvalidator",{"_index":3517,"title":{"interfaces/ModalErrorWindowValidator.html":{}},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"coverage.html":{}}}],["modalwindow",{"_index":1044,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["modalwindowcomponent",{"_index":448,"title":{"components/ModalWindowComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalwindowvalidator",{"_index":464,"title":{"interfaces/ModalWindowValidator.html":{}},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"coverage.html":{}}}],["mode",{"_index":650,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["modeisenum",{"_index":4079,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["modeissupported",{"_index":2933,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["modeissupported(delimitermodel",{"_index":2977,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["model",{"_index":262,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/Examples.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{}}}],["model['field'].docdef",{"_index":3253,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["model['field'].docdef.name",{"_index":2138,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["model['field'].path",{"_index":2139,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["model[\\'field\\'].docdef",{"_index":3257,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["model[\\'field\\'].docdef.name",{"_index":2141,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["model[\\'field\\'].path",{"_index":2142,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["models",{"_index":4021,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["models.push(new",{"_index":4022,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["models/config.model",{"_index":336,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["models/document",{"_index":499,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"modules/DataMapperModule.html":{},"components/FieldEditComponent.html":{},"classes/MappingDefinition.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["models/error.model",{"_index":44,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["models/examples",{"_index":616,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["models/field",{"_index":1926,"title":{},"body":{"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"components/TransitionSelectionComponent.html":{}}}],["models/field.model",{"_index":500,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/PropertyFieldEditComponent.html":{}}}],["models/lookup",{"_index":2588,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/TransitionSelectionComponent.html":{}}}],["models/mapping",{"_index":890,"title":{},"body":{"modules/DataMapperModule.html":{},"classes/LookupTableUtil.html":{},"classes/NamespaceModel.html":{}}}],["models/mapping.model",{"_index":892,"title":{},"body":{"modules/DataMapperModule.html":{},"injectables/FieldActionService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/TransitionSelectionComponent.html":{}}}],["models/transition.model",{"_index":2652,"title":{},"body":{"classes/LookupTableUtil.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["modifications",{"_index":4364,"title":{},"body":{"license.html":{}}}],["modified",{"_index":4468,"title":{},"body":{"license.html":{}}}],["modify",{"_index":4489,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":4494,"title":{},"body":{"license.html":{}}}],["module",{"_index":782,"title":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}],["modules",{"_index":784,"title":{"modules.html":{}},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":839,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["moment",{"_index":4238,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":3178,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"classes/NamespaceModel.html":{},"license.html":{}}}],["mouse",{"_index":1079,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["mouseevent",{"_index":525,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["mouseeventtimer",{"_index":662,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["mousing",{"_index":703,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["movement",{"_index":3143,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["much",{"_index":941,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["multi",{"_index":915,"title":{},"body":{"modules/DataMapperModule.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["multi_space",{"_index":4007,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["multiple",{"_index":2964,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/ToolbarComponent.html":{}}}],["multiplicity",{"_index":1796,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionComponent.html":{},"classes/MappingUtil.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["multiplicity.many_to_one",{"_index":1915,"title":{},"body":{"injectables/FieldActionService.html":{},"components/TransitionSelectionComponent.html":{}}}],["multiplicity.one_to_many",{"_index":1914,"title":{},"body":{"injectables/FieldActionService.html":{},"components/TransitionSelectionComponent.html":{}}}],["multiplicity.one_to_one",{"_index":1805,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionComponent.html":{},"classes/MappingUtil.html":{}}}],["multiplicity.one_to_one).length",{"_index":3061,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["multiplicity.zero_to_one",{"_index":1916,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["multispace",{"_index":4035,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["mvnw",{"_index":4288,"title":{},"body":{"index.html":{}}}],["mw",{"_index":1191,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["mw.nestedcomponent",{"_index":1193,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["mwc",{"_index":545,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["mytarget",{"_index":1270,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["mytargetchangessubscription",{"_index":1272,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["n",{"_index":1498,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["n.field",{"_index":1708,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["n.getuuid",{"_index":1610,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["n/a",{"_index":1588,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["n\\sourceidentifier",{"_index":2567,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["n\\targetidentifier",{"_index":2568,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["n\\tentry",{"_index":2570,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["name",{"_index":115,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["name'},{'name",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["name.component",{"_index":863,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["name.component.html",{"_index":466,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts",{"_index":463,"title":{},"body":{"components/ClassNameComponent.html":{},"coverage.html":{}}}],["name.component.ts:31",{"_index":490,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:32",{"_index":494,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:33",{"_index":495,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:34",{"_index":497,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:35",{"_index":496,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:36",{"_index":491,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:37",{"_index":477,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:42",{"_index":485,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:47",{"_index":488,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:50",{"_index":486,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:54",{"_index":481,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:58",{"_index":489,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:62",{"_index":479,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["namednodemap",{"_index":2417,"title":{},"body":{"classes/LineModel.html":{}}}],["nameexistsoncreation",{"_index":3813,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["nameonly",{"_index":3342,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["names",{"_index":2786,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"license.html":{}}}],["names.push(field.name",{"_index":2787,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["namespace",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["namespace.alias",{"_index":3640,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespace.copy",{"_index":3576,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["namespace.istarget",{"_index":3577,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{}}}],["namespace.locationuri",{"_index":3642,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespace.uri",{"_index":3641,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacealias",{"_index":1347,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/MappingUtil.html":{}}}],["namespacecomponent",{"_index":3621,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacecomponent.initialize(ns",{"_index":3622,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacecomponent.namespace",{"_index":3624,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespaceeditcomponent",{"_index":449,"title":{"components/NamespaceEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["namespacefound",{"_index":2113,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["namespacelistcomponent",{"_index":451,"title":{"components/NamespaceListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["namespacematchessearch",{"_index":3592,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacematchessearch(ns",{"_index":3605,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacemodel",{"_index":2087,"title":{"classes/NamespaceModel.html":{}},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["namespacemodel.getunqualifiednamespace",{"_index":2099,"title":{},"body":{"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{}}}],["namespacemodel.unqualifiednamespace",{"_index":3656,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["namespaces",{"_index":2061,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["namespaceselectionchanged",{"_index":2066,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["namespaceselectionchanged(event",{"_index":2079,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["navbar'},{'name",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["navbar.component",{"_index":1531,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["navbar.component.ts",{"_index":4133,"title":{},"body":{"coverage.html":{}}}],["navigation",{"_index":99,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["nbsp",{"_index":1229,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["ncp",{"_index":4240,"title":{},"body":{"dependencies.html":{}}}],["necessarily",{"_index":4444,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":680,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["need",{"_index":356,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["need/use",{"_index":350,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["needed",{"_index":3072,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["needs",{"_index":685,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["negligence",{"_index":4536,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":4539,"title":{},"body":{"license.html":{}}}],["nestedcomponent",{"_index":1263,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["nestedcomponentinitializedcallback",{"_index":1258,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["nestedcomponenttype",{"_index":1257,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["network",{"_index":1963,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["new",{"_index":135,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["newargvalue",{"_index":1827,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["newargvalue.name",{"_index":1828,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["newargvalue.value",{"_index":1829,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["newfield",{"_index":1204,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["newlines",{"_index":642,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["newnamespace",{"_index":3623,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["newnodes",{"_index":1653,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.length",{"_index":1670,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.pop",{"_index":1702,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.push(new",{"_index":1678,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.push(targetnode",{"_index":1680,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.splice(0",{"_index":1662,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.splice(lastnewnodeindex",{"_index":1677,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes[0",{"_index":1659,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes[lastnewnodeindex",{"_index":1671,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes[lastnewnodeindex]as",{"_index":1676,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes[newnodes.length",{"_index":1700,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newoffset",{"_index":1715,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["next",{"_index":347,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["next.handle(httprequest",{"_index":367,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["nextnode",{"_index":1698,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["nextnode.str",{"_index":1701,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["nextnodeindex",{"_index":1697,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["ng",{"_index":4248,"title":{},"body":{"dependencies.html":{}}}],["ngaftercontentchecked",{"_index":2365,"title":{},"body":{"directives/FocusDirective.html":{}}}],["ngafterviewinit",{"_index":1275,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["ngif",{"_index":1281,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["ngmodule",{"_index":838,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["ngondestroy",{"_index":1290,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["ngoninit",{"_index":608,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["ngx",{"_index":24,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"dependencies.html":{}}}],["ngxlogger",{"_index":22,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["ngxloggerconfig",{"_index":4604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxloggerlevel",{"_index":23,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["ngxloggerlevel.debug",{"_index":188,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/variables.html":{}}}],["ngxloggerlevel.info",{"_index":4619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxloggerlevel.off",{"_index":4618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxloggerlevel.trace",{"_index":192,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/variables.html":{}}}],["ngxloggerlevel.trace].includes(this.logger.getconfigsnapshot().level",{"_index":189,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["node",{"_index":1570,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["node.tohtml",{"_index":1752,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["node.totext",{"_index":1751,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["nodeid",{"_index":1607,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["nodes",{"_index":1599,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["non",{"_index":1902,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["none",{"_index":509,"title":{},"body":{"components/ClassNameComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["normally",{"_index":4487,"title":{},"body":{"license.html":{}}}],["note",{"_index":640,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["nothing",{"_index":4502,"title":{},"body":{"license.html":{}}}],["notice",{"_index":4374,"title":{},"body":{"license.html":{}}}],["notices",{"_index":4471,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":4501,"title":{},"body":{"license.html":{}}}],["ns",{"_index":2114,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["ns.alias",{"_index":2115,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["ns.alias.tolowercase().includes(filter",{"_index":3629,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.copyfrom(newnamespace",{"_index":3625,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.createdbyuser",{"_index":3620,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.getprettylabel",{"_index":2140,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["ns.istarget",{"_index":3578,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{}}}],["ns.locationuri",{"_index":3632,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.locationuri.tolowercase().includes(filter",{"_index":3633,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.uri",{"_index":3630,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.uri.tolowercase().includes(filter",{"_index":3631,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["null",{"_index":150,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["number",{"_index":758,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["number'].indexof(arg.type",{"_index":1816,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["number'].indexof(selectedtype",{"_index":2053,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["number(event.target.value",{"_index":3240,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["numeric",{"_index":1912,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["numerical",{"_index":3220,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["numerics",{"_index":1815,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["o",{"_index":1138,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{}}}],["object",{"_index":953,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object.assign(copy",{"_index":1389,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["object.assign(this",{"_index":1406,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["object.freeze(this.previewerrors",{"_index":2731,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["object.freeze(this.validationerrors",{"_index":2722,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["object.keys(actiondetail.actionschema.properties",{"_index":2011,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["object.keys(multiplicity).foreach(m",{"_index":2054,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["object.keys(this.actions).foreach(multiplicity",{"_index":2023,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["object.values(this.actions).foreach(arr",{"_index":1971,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["obligations",{"_index":4562,"title":{},"body":{"license.html":{}}}],["observable",{"_index":334,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{}}}],["observable((observer",{"_index":1977,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["observable.create((observer",{"_index":2090,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["observer",{"_index":3110,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["observer.complete",{"_index":1994,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["observer.error(error",{"_index":1995,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["observer.next('no",{"_index":2356,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["observer.next(actionconfigs",{"_index":1993,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["observer.next(body",{"_index":2270,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["observer.next(data",{"_index":2358,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["observer.next(mappingfilenames",{"_index":2257,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["observer.next(this.executesearch(observer.outervalue",{"_index":2091,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["observer.next(this.executesearch(this.searchfilter",{"_index":3134,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["observer.next(true",{"_index":2278,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["obtain",{"_index":815,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["occurred",{"_index":2260,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["octet",{"_index":2335,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["odd",{"_index":3398,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["offer",{"_index":4439,"title":{},"body":{"license.html":{}}}],["offset",{"_index":1571,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["ok",{"_index":1266,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["okbuttonhandler",{"_index":1260,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["okclicked",{"_index":1317,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["oldparentfield",{"_index":2121,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["oldpath",{"_index":1182,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/NamespaceModel.html":{}}}],["oldselecteditem",{"_index":3358,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["oldselecteditem.selected",{"_index":3360,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["once",{"_index":2205,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{}}}],["ondestroy",{"_index":613,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["one",{"_index":686,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["one_to_many",{"_index":1798,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["one_to_one",{"_index":1797,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["oninit",{"_index":604,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["open",{"_index":3866,"title":{},"body":{"components/ToolbarComponent.html":{},"index.html":{}}}],["operation",{"_index":2352,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["operations",{"_index":2349,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["operations.push(operation",{"_index":2354,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["opn",{"_index":4243,"title":{},"body":{"dependencies.html":{}}}],["option",{"_index":2108,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["optional",{"_index":372,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["optionselected",{"_index":4095,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["optionselected.val",{"_index":4098,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["order",{"_index":3221,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["ordinal",{"_index":1327,"title":{},"body":{"classes/EnumValue.html":{}}}],["origin",{"_index":4515,"title":{},"body":{"license.html":{}}}],["original",{"_index":2984,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"license.html":{}}}],["originalpath",{"_index":3706,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["originalpath.indexof(pathseparator",{"_index":3709,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["originalpath.substr(0",{"_index":3713,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["originalpath.substr(originalpath.indexof(pathseparator",{"_index":3715,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["originalpath.substring(1",{"_index":3710,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["otherwise",{"_index":554,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"license.html":{}}}],["out",{"_index":713,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"license.html":{},"overview.html":{}}}],["outcome",{"_index":4311,"title":{},"body":{"index.html":{}}}],["output",{"_index":2509,"title":{},"body":{"classes/LineModel.html":{}}}],["outputclassidentifier",{"_index":2659,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["outputfield",{"_index":1161,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{},"classes/LookupTableUtil.html":{}}}],["outputfield.classidentifier",{"_index":2662,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["outputfieldpos",{"_index":2510,"title":{},"body":{"classes/LineModel.html":{}}}],["outputfieldpos.y",{"_index":2512,"title":{},"body":{"classes/LineModel.html":{}}}],["outputnumber",{"_index":3379,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["outputselects",{"_index":2575,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["outstanding",{"_index":4355,"title":{},"body":{"license.html":{}}}],["over",{"_index":704,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["overhead",{"_index":2232,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["override",{"_index":309,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["overview",{"_index":4595,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":4331,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":4352,"title":{},"body":{"license.html":{}}}],["package",{"_index":313,"title":{"dependencies.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{}}}],["padding",{"_index":1903,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["paddingfield",{"_index":2695,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["padfield",{"_index":3666,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["page",{"_index":4588,"title":{},"body":{"license.html":{}}}],["pair",{"_index":1899,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["pako",{"_index":2240,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["panel",{"_index":250,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["panels",{"_index":2428,"title":{},"body":{"classes/LineModel.html":{}}}],["param",{"_index":252,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["parameter",{"_index":2949,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["parameters",{"_index":371,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["parent",{"_index":1413,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/ToolbarComponent.html":{}}}],["parent.iscollection",{"_index":1414,"title":{},"body":{"classes/EnumValue.html":{}}}],["parent.parentfield",{"_index":1415,"title":{},"body":{"classes/EnumValue.html":{}}}],["parentcomponent",{"_index":3380,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["parentfield",{"_index":1160,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"classes/NamespaceModel.html":{}}}],["parentfield.parentfield",{"_index":2524,"title":{},"body":{"classes/LineModel.html":{},"classes/NamespaceModel.html":{}}}],["parentfield.partofmapping",{"_index":3777,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["parentfield.partoftransformation",{"_index":3778,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["parentfieldname",{"_index":2062,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["parentobjectname",{"_index":3188,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["parentpath",{"_index":3466,"title":{},"body":{"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{}}}],["parentselectionchanged",{"_index":475,"title":{},"body":{"components/ClassNameComponent.html":{},"components/FieldEditComponent.html":{}}}],["parentselectionchanged(event",{"_index":487,"title":{},"body":{"components/ClassNameComponent.html":{},"components/FieldEditComponent.html":{}}}],["parsed",{"_index":1809,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["parsedactions",{"_index":2705,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parseddata",{"_index":2678,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parseddocid",{"_index":2699,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parseddocs",{"_index":2820,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["parseddocuri",{"_index":2700,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedindex",{"_index":2701,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedname",{"_index":2696,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedpath",{"_index":2697,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedvalue",{"_index":2698,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedvaluetype",{"_index":2704,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parseint(selectedvalue",{"_index":4100,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["parseint(text.substring(position",{"_index":1759,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["parses",{"_index":1636,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["part",{"_index":4478,"title":{},"body":{"license.html":{}}}],["particular",{"_index":4523,"title":{},"body":{"license.html":{}}}],["partofmapping",{"_index":1144,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{}}}],["partofmappingicon",{"_index":1149,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["partofmappingiconhidden",{"_index":1150,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["partoftransformation",{"_index":1334,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["party",{"_index":4486,"title":{},"body":{"license.html":{}}}],["passed",{"_index":3740,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["patent",{"_index":4437,"title":{},"body":{"license.html":{}}}],["path",{"_index":75,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"index.html":{}}}],["path.lastindexof",{"_index":3364,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{}}}],["path.replace",{"_index":3363,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["path.substr(0",{"_index":1019,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["path.substr(path.lastindexof",{"_index":3366,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["path.substring(0",{"_index":3467,"title":{},"body":{"classes/MappingUtil.html":{}}}],["path.substring(lastseparator",{"_index":3468,"title":{},"body":{"classes/MappingUtil.html":{}}}],["paths",{"_index":1356,"title":{},"body":{"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["paths.push(field.name",{"_index":1360,"title":{},"body":{"classes/EnumValue.html":{}}}],["paths.push(field.path",{"_index":1358,"title":{},"body":{"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["pathseparator",{"_index":3674,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["patternfly",{"_index":4246,"title":{},"body":{"dependencies.html":{}}}],["peer",{"_index":4219,"title":{},"body":{"dependencies.html":{}}}],["percent",{"_index":4354,"title":{},"body":{"license.html":{}}}],["perform",{"_index":950,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldDetailComponent.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["performance",{"_index":2210,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["period",{"_index":4008,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["permission",{"_index":4509,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":836,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["perpetual",{"_index":4425,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":4477,"title":{},"body":{"license.html":{}}}],["pficon",{"_index":3840,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{}}}],["pipe",{"_index":3830,"title":{"pipes/ToErrorIconClassPipe.html":{}},"body":{"pipes/ToErrorIconClassPipe.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["pipe(map((res",{"_index":2353,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["pipe(timeout(this.cfg.initcfg.admhttptimeout",{"_index":2262,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["pipes",{"_index":3831,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["pipetransform",{"_index":3838,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["pitests",{"_index":4299,"title":{},"body":{"index.html":{}}}],["place",{"_index":10,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["places",{"_index":4482,"title":{},"body":{"license.html":{}}}],["please",{"_index":3818,"title":{},"body":{"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["pointers",{"_index":1391,"title":{},"body":{"classes/EnumValue.html":{}}}],["pom",{"_index":84,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/Examples.html":{}}}],["pompayload",{"_index":86,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["populate",{"_index":3071,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"classes/NamespaceModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["populatechildren(field",{"_index":3743,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["populatefieldaction",{"_index":1839,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["populatefieldaction(action",{"_index":1806,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["populatefielddata(field",{"_index":3790,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["populatefieldparentpaths(field",{"_index":3780,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["populatemappinglookuptable",{"_index":2642,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["populatemappinglookuptable(mappingdefinition",{"_index":2647,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["popup",{"_index":3892,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["port",{"_index":4308,"title":{},"body":{"index.html":{}}}],["pos",{"_index":2518,"title":{},"body":{"classes/LineModel.html":{}}}],["pos['y",{"_index":2520,"title":{},"body":{"classes/LineModel.html":{}}}],["position",{"_index":1615,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["possibility",{"_index":4556,"title":{},"body":{"license.html":{}}}],["possible",{"_index":943,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["post",{"_index":1675,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["post.length",{"_index":1668,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["power",{"_index":4343,"title":{},"body":{"license.html":{}}}],["pre",{"_index":1667,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["pre.length",{"_index":1673,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["predefines",{"_index":3070,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["preferred",{"_index":4362,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":1560,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["preloadedfieldactionmetadata",{"_index":161,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["prepare",{"_index":4433,"title":{},"body":{"license.html":{}}}],["preparecomplexfields",{"_index":3796,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["present",{"_index":1810,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["prettyname",{"_index":3989,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["preview",{"_index":649,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["previewerrors",{"_index":2719,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["previous",{"_index":2800,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldDetailComponent.html":{}}}],["previously",{"_index":3067,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["primarily",{"_index":4274,"title":{},"body":{"index.html":{}}}],["printed",{"_index":4587,"title":{},"body":{"license.html":{}}}],["private",{"_index":133,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["process",{"_index":3478,"title":{},"body":{"classes/MappingUtil.html":{},"components/ToolbarComponent.html":{}}}],["processimportedfile",{"_index":3855,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["processimportedfile(event",{"_index":3880,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["processing",{"_index":3919,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["processmappingscatalog",{"_index":3856,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["processmappingscatalog(selectedfile",{"_index":3884,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["product",{"_index":4512,"title":{},"body":{"license.html":{}}}],["production",{"_index":4603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prominent",{"_index":4470,"title":{},"body":{"license.html":{}}}],["promise",{"_index":955,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["promise((resolve",{"_index":998,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["promise(async(resolve",{"_index":2287,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["properties",{"_index":15,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["property",{"_index":265,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["propertycomponent",{"_index":1192,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["propertycomponent.getfield",{"_index":1205,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["propertycomponent.initialize(self.field",{"_index":1194,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["propertydoc",{"_index":157,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["propertyfieldeditcomponent",{"_index":452,"title":{"components/PropertyFieldEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["propertyobject",{"_index":2012,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["propertyobject.const",{"_index":2014,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["propertyobject.enum",{"_index":2020,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["propertyobject.type",{"_index":2018,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["protected",{"_index":1552,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["provide",{"_index":913,"title":{},"body":{"modules/DataMapperModule.html":{},"license.html":{}}}],["provided",{"_index":939,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"license.html":{}}}],["providers",{"_index":605,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}],["provides",{"_index":4519,"title":{},"body":{"license.html":{}}}],["public",{"_index":1273,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{}}}],["publicly",{"_index":4434,"title":{},"body":{"license.html":{}}}],["pull",{"_index":2951,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["purpose",{"_index":4411,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":4342,"title":{},"body":{"license.html":{}}}],["push",{"_index":2204,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["pushed",{"_index":2206,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["put",{"_index":1644,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["px",{"_index":1224,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["querylist",{"_index":1091,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["quotes",{"_index":641,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["range",{"_index":1613,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["re",{"_index":3216,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["reactiveformsmodule",{"_index":846,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["read",{"_index":357,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/DataMapperUtil.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/FileManagementService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["readable",{"_index":979,"title":{},"body":{"classes/DataMapperUtil.html":{},"license.html":{}}}],["readbinaryfile",{"_index":923,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["readbinaryfile(filename",{"_index":947,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["reader",{"_index":948,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["reader.onload",{"_index":1000,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["reader.readasarraybuffer(filename",{"_index":1006,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["reader.readastext(filename",{"_index":1004,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["reader.result",{"_index":1002,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["readfile",{"_index":924,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/ToolbarComponent.html":{}}}],["readfile(filecontent",{"_index":3888,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["readfile(filename",{"_index":956,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["readonly",{"_index":1504,"title":{},"body":{"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["readonlyarray",{"_index":1600,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["reason",{"_index":4576,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":4513,"title":{},"body":{"license.html":{}}}],["reasons",{"_index":2211,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["received",{"_index":4419,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":4466,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":4586,"title":{},"body":{"license.html":{}}}],["red",{"_index":804,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["redistributing",{"_index":4529,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":4462,"title":{},"body":{"license.html":{}}}],["redrawlinesformappings",{"_index":2466,"title":{},"body":{"classes/LineModel.html":{}}}],["reference",{"_index":1638,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["references",{"_index":625,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["referencing",{"_index":3951,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["refers",{"_index":3423,"title":{},"body":{"classes/MappingUtil.html":{}}}],["reflect",{"_index":1725,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["regarding",{"_index":4507,"title":{},"body":{"license.html":{}}}],["reinitialize",{"_index":3895,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["reject",{"_index":999,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["reject(`could",{"_index":1966,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["reject(`fatal",{"_index":1962,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["related",{"_index":4278,"title":{},"body":{"index.html":{}}}],["relative",{"_index":3152,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["remain",{"_index":4387,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":945,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["remove",{"_index":1212,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionComponent.html":{},"classes/MappingUtil.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["removeaction",{"_index":2680,"title":{},"body":{"classes/MappedField.html":{},"components/MappingFieldActionComponent.html":{}}}],["removeaction(action",{"_index":2688,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionComponent.html":{}}}],["removed",{"_index":1705,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["removed.field",{"_index":1709,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["removeerror",{"_index":1445,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["removeerror(identifier",{"_index":1474,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["removefield",{"_index":1041,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["removefield(event",{"_index":1087,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["removefield(field",{"_index":2748,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["removeitemfromarray",{"_index":925,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["removeitemfromarray(item",{"_index":959,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["removemappedfield",{"_index":3093,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["removemappedfield(mappedfield",{"_index":2762,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["removemapping",{"_index":2831,"title":{},"body":{"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{}}}],["removemapping(event",{"_index":2889,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["removemapping(m",{"_index":2855,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["removenamespace",{"_index":3593,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["removenamespace(ns",{"_index":3607,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["removepreviewerror(identifier",{"_index":2735,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["removestalemappings",{"_index":3410,"title":{},"body":{"classes/MappingUtil.html":{}}}],["removestalemappings(cfg",{"_index":3420,"title":{},"body":{"classes/MappingUtil.html":{}}}],["removetablebyname",{"_index":2832,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["removetablebyname(name",{"_index":2857,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["removetoken(lastfieldrefremoved",{"_index":1704,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["removevalidationerror(identifier",{"_index":2728,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["replace",{"_index":1722,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["replaced",{"_index":4582,"title":{},"body":{"license.html":{}}}],["repo",{"_index":4282,"title":{},"body":{"index.html":{}}}],["represent",{"_index":4384,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":4404,"title":{},"body":{"license.html":{}}}],["representing",{"_index":2959,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["reproduce",{"_index":4432,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":4516,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":4324,"title":{},"body":{"license.html":{}}}],["request",{"_index":339,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["requested",{"_index":3873,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["requests",{"_index":354,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["required",{"_index":299,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"modules/ExampleAppModule.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"license.html":{}}}],["requires",{"_index":1664,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["res",{"_index":2279,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["reset",{"_index":263,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"injectables/FileManagementService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["resetall",{"_index":1446,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["resetting",{"_index":2280,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["resolve",{"_index":83,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["resolve(bytes",{"_index":3909,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["resolve(false",{"_index":1955,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["resolve(filebody",{"_index":1003,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["resolve(true",{"_index":1008,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["respective",{"_index":1874,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["response",{"_index":1986,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["responsetype",{"_index":2268,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["responsibility",{"_index":4568,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":4525,"title":{},"body":{"license.html":{}}}],["restart",{"_index":2212,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["result",{"_index":301,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.push(fieldsbypath[name",{"_index":2714,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["resultfields",{"_index":2775,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["resultfields.push(mappedfield",{"_index":2776,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["resultfields.shift",{"_index":2777,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["resulting",{"_index":4366,"title":{},"body":{"license.html":{}}}],["results",{"_index":303,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":4474,"title":{},"body":{"license.html":{}}}],["retrieve",{"_index":2193,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["return",{"_index":176,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["returned",{"_index":1953,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["returnedcomponent",{"_index":1179,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["returning",{"_index":3890,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["returns",{"_index":324,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/FieldAction.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["revisions",{"_index":4382,"title":{},"body":{"license.html":{}}}],["right",{"_index":532,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["right_bracket",{"_index":3669,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["rights",{"_index":4564,"title":{},"body":{"license.html":{}}}],["risks",{"_index":4531,"title":{},"body":{"license.html":{}}}],["root",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["root'},{'name",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["routermodule",{"_index":1529,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["routermodule.forroot",{"_index":1534,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["routines",{"_index":2640,"title":{},"body":{"classes/LookupTableUtil.html":{},"classes/MappingUtil.html":{}}}],["rows",{"_index":3302,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["rowtitles",{"_index":3301,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["royalty",{"_index":4429,"title":{},"body":{"license.html":{}}}],["run",{"_index":4272,"title":{},"body":{"index.html":{}}}],["running",{"_index":4304,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":1948,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["rxjs",{"_index":335,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":2245,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["safestyle",{"_index":1074,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["same",{"_index":1392,"title":{},"body":{"classes/EnumValue.html":{},"license.html":{}}}],["samenameddefs",{"_index":2029,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["samenameddefs.push(fieldactionconfig",{"_index":2032,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["sanitizer",{"_index":1050,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["save",{"_index":550,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/FileManagementService.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["saveas",{"_index":994,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["saveas(filecontent",{"_index":1007,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["saver",{"_index":995,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["savetable",{"_index":2576,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["saving",{"_index":2223,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["schema",{"_index":2184,"title":{},"body":{"injectables/FileManagementService.html":{},"miscellaneous/enumerations.html":{}}}],["schemas",{"_index":798,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["scroll",{"_index":2468,"title":{},"body":{"classes/LineModel.html":{}}}],["search",{"_index":3108,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["search(searchfilter",{"_index":3287,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchboxicon",{"_index":3307,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchfilter",{"_index":3084,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchmode",{"_index":3260,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchresults",{"_index":3261,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchresultsvisible",{"_index":3271,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchshown",{"_index":3297,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["second",{"_index":708,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["seconds",{"_index":65,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["section",{"_index":3145,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"license.html":{}}}],["section'},{'name",{"_index":445,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["section.component",{"_index":880,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingSelectionComponent.html":{}}}],["section.component.html",{"_index":3375,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts",{"_index":3374,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{},"coverage.html":{}}}],["section.component.ts:27",{"_index":3385,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:28",{"_index":3384,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:29",{"_index":3388,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:30",{"_index":3387,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:31",{"_index":3389,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:32",{"_index":3386,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:33",{"_index":3383,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:35",{"_index":3390,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:46",{"_index":3393,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:53",{"_index":3391,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:64",{"_index":3394,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["sectioncomponents",{"_index":3334,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["sections",{"_index":4328,"title":{},"body":{"license.html":{}}}],["see",{"_index":832,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"components/MappingFieldContainerComponent.html":{},"index.html":{},"license.html":{}}}],["select",{"_index":1084,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["select#separator').combobox({clearifnomatch",{"_index":4093,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["select#separator').on('change",{"_index":4094,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selecte",{"_index":2124,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["selected",{"_index":1046,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selected.targetvalue",{"_index":2613,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedactionindex",{"_index":3064,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["selectedactionname",{"_index":3063,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selectedargvalname",{"_index":3018,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["selectedcallback",{"_index":3381,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["selectedelement",{"_index":2432,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedelement.nodename",{"_index":2434,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedfield",{"_index":1159,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingSelectionComponent.html":{}}}],["selectedfield.issource",{"_index":3372,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selectedfieldissource",{"_index":3382,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["selectedfile",{"_index":3887,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["selectedicon",{"_index":3309,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["selectedlineattrs",{"_index":2415,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedlineattrs[1].nodevalue",{"_index":2419,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedlineattrs[2].nodevalue",{"_index":2421,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedlineattrs[3].nodevalue",{"_index":2423,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedlineattrs[4].nodevalue",{"_index":2425,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedmappingcomponent",{"_index":3335,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selectedmappingselectionsection",{"_index":3396,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["selectednamespace",{"_index":3587,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["selectedoptions",{"_index":2618,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedoptions.length",{"_index":2620,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedoptions[0].label",{"_index":2621,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedroot",{"_index":121,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["selectedsourcefield",{"_index":1879,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["selectedsourcefield.type",{"_index":2042,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["selectedtargetenumvalue",{"_index":2592,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedtargetfield",{"_index":1885,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["selectedtargetfield.type",{"_index":2045,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["selectedtype",{"_index":1905,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["selectedvalue",{"_index":4097,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["selection'},{'name",{"_index":442,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component",{"_index":879,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingDetailComponent.html":{}}}],["selection.component.html",{"_index":3333,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts",{"_index":3332,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:100",{"_index":4086,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:104",{"_index":4083,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:116",{"_index":4087,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:140",{"_index":4084,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:155",{"_index":4082,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:179",{"_index":4085,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:32",{"_index":3352,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:33",{"_index":3351,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:34",{"_index":3355,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:35",{"_index":3350,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:36",{"_index":4081,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:37",{"_index":3354,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:39",{"_index":3356,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:41",{"_index":3347,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:45",{"_index":3344,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:49",{"_index":3349,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:57",{"_index":3343,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:65",{"_index":3340,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:70",{"_index":3345,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:74",{"_index":3346,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selectionchanged",{"_index":3094,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{}}}],["selectionchanged(c",{"_index":3348,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selectionchanged(event",{"_index":3122,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["selectmapping",{"_index":2885,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/MappingListComponent.html":{}}}],["selectmapping(field",{"_index":2891,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["selectmapping(mapping",{"_index":3290,"title":{},"body":{"components/MappingListComponent.html":{}}}],["selectnamespace",{"_index":3594,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["selectnamespace(ns",{"_index":3611,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["selector",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["self",{"_index":1181,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ToolbarComponent.html":{}}}],["self.cfg",{"_index":2908,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["self.cfg.mappingservice.notifymappingupdated",{"_index":1210,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["self.cfg.mappingservice.removefieldfromallmappings(self.field",{"_index":1217,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.cfg.mappingservice.selectmapping(mapping",{"_index":2912,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["self.cfg.mappingservice.selectmapping(null",{"_index":2914,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["self.field.copyfrom(newfield",{"_index":1208,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.field.docdef.removefield(self.field",{"_index":1218,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.field.docdef.updatefield(self.field",{"_index":1209,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.field.issource",{"_index":1200,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.getselectedmappingcomponent",{"_index":3359,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["self.selectedmappingcomponent",{"_index":3362,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["sell",{"_index":4440,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1077,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["semicolon",{"_index":4009,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["send",{"_index":2342,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["sent",{"_index":4403,"title":{},"body":{"license.html":{}}}],["separable",{"_index":4388,"title":{},"body":{"license.html":{}}}],["separate",{"_index":718,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/FileManagementService.html":{},"license.html":{}}}],["separately",{"_index":2209,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["separator",{"_index":3708,"title":{},"body":{"classes/NamespaceModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["sequence",{"_index":1553,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{}}}],["sequential",{"_index":2962,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["serializedvalue",{"_index":3990,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["serializer",{"_index":895,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["serializer.ts",{"_index":4209,"title":{},"body":{"coverage.html":{}}}],["server",{"_index":2194,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["service",{"_index":88,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["serviceobject",{"_index":1333,"title":{},"body":{"classes/EnumValue.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["services",{"_index":621,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["services/api",{"_index":888,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["services/document",{"_index":37,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/error",{"_index":34,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["services/field",{"_index":50,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/file",{"_index":53,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/initialization.service",{"_index":42,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/mapping",{"_index":40,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/types",{"_index":886,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["set",{"_index":180,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["setargumentvalue",{"_index":1781,"title":{},"body":{"classes/FieldAction.html":{}}}],["setargumentvalue(argumentname",{"_index":1792,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["setbinaryfiletoservice",{"_index":2172,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["setbinaryfiletoservice(compressedbuffer",{"_index":2217,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["setcfg(cfg",{"_index":2237,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["setconfig(cfg",{"_index":178,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["setconfigmodel(cfg",{"_index":1611,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["setlinebeingformed(l",{"_index":2450,"title":{},"body":{"classes/LineModel.html":{}}}],["setmappingtoservice",{"_index":2173,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["setmappingtoservice(jsonbuffer",{"_index":2225,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["settimeout",{"_index":743,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["shall",{"_index":4326,"title":{},"body":{"license.html":{}}}],["share",{"_index":3933,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["shares",{"_index":4356,"title":{},"body":{"license.html":{}}}],["short",{"_index":594,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["shortest",{"_index":4280,"title":{},"body":{"index.html":{}}}],["show",{"_index":182,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["showactiveerrors",{"_index":673,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["showdetails",{"_index":3929,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["showfields",{"_index":118,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["showlines",{"_index":3932,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["showlinesalways",{"_index":144,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["showlookuptable",{"_index":4080,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["showmappedfields",{"_index":146,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["showmappingdetailtray",{"_index":141,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["showmappingpreview",{"_index":186,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["showmappingpreview(show",{"_index":181,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["showmappingtable",{"_index":142,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["shownamespacetable",{"_index":143,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["showtypes",{"_index":145,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/NamespaceModel.html":{},"components/ToolbarComponent.html":{}}}],["showunmappedfields",{"_index":147,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["sign",{"_index":4027,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["signal",{"_index":2483,"title":{},"body":{"classes/LineModel.html":{}}}],["simplifies",{"_index":4269,"title":{},"body":{"index.html":{}}}],["simply",{"_index":2981,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["skip",{"_index":4291,"title":{},"body":{"index.html":{}}}],["skipped",{"_index":85,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["slash",{"_index":4010,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["software",{"_index":823,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["sole",{"_index":4567,"title":{},"body":{"license.html":{}}}],["solely",{"_index":4524,"title":{},"body":{"license.html":{}}}],["solution",{"_index":4266,"title":{},"body":{"index.html":{}}}],["something",{"_index":3008,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["somethingtoshow",{"_index":3491,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["somewhere",{"_index":1115,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["sort",{"_index":3218,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["sortedactiondefinitions",{"_index":2024,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["sortedactiondefinitions.push(fieldactiondefinition",{"_index":2034,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["sortfieldactiondefinitions",{"_index":1866,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["sortmappedfieldsbypath",{"_index":2681,"title":{},"body":{"classes/MappedField.html":{}}}],["sortmappedfieldsbypath(mappedfields",{"_index":2690,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["source/target",{"_index":1120,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/FieldActionService.html":{},"classes/NamespaceModel.html":{}}}],["source/target/mapping",{"_index":260,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["sourcedocmap",{"_index":3431,"title":{},"body":{"classes/MappingUtil.html":{}}}],["sourcedocs",{"_index":155,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["sourceenumvalue",{"_index":2590,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["sourcefield",{"_index":2603,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["sourcefield.enumvalues",{"_index":2605,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["sourcefieldpaths",{"_index":3417,"title":{},"body":{"classes/MappingUtil.html":{}}}],["sourcefields",{"_index":2716,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["sourceiconcssclass",{"_index":3189,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["sourceidentifier",{"_index":2530,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappingDefinition.html":{}}}],["sources",{"_index":248,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/LineModel.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"index.html":{}}}],["sourcesheader",{"_index":2883,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["sourcetype",{"_index":1803,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["sourcevalue",{"_index":2543,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["sourcex",{"_index":2376,"title":{},"body":{"classes/LineModel.html":{}}}],["sourcey",{"_index":2377,"title":{},"body":{"classes/LineModel.html":{}}}],["space",{"_index":946,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["spaces",{"_index":4036,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["special",{"_index":1939,"title":{},"body":{"injectables/FieldActionService.html":{},"license.html":{}}}],["specific",{"_index":833,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"components/MappingFieldActionArgumentComponent.html":{},"license.html":{}}}],["specified",{"_index":80,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["specify",{"_index":3012,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["split",{"_index":966,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["splitbystring",{"_index":926,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["splitbystring(instr",{"_index":963,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["splitmarker",{"_index":964,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["spring",{"_index":4300,"title":{},"body":{"index.html":{}}}],["src",{"_index":1403,"title":{},"body":{"classes/EnumValue.html":{}}}],["src/.../config.types.ts",{"_index":4254,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../data",{"_index":4598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.dev.ts",{"_index":4599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":4600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.trace.ts",{"_index":4601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":4602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error.model.ts",{"_index":4255,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../field",{"_index":4256,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transition.model.ts",{"_index":4257,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.ts",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/atlasmap",{"_index":4132,"title":{},"body":{"coverage.html":{}}}],["src/app/example",{"_index":1526,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["src/app/lib/atlasmap",{"_index":6,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.dev.ts",{"_index":4214,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":4215,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.trace.ts",{"_index":4216,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":4217,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stand",{"_index":653,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["standalone",{"_index":651,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"index.html":{}}}],["standard",{"_index":4109,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["start",{"_index":3085,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"index.html":{}}}],["startdrag",{"_index":1042,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["startdrag(event",{"_index":1089,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["started",{"_index":4265,"title":{"index.html":{},"license.html":{}},"body":{}}],["startoffset",{"_index":1617,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["state",{"_index":139,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"license.html":{}}}],["stated",{"_index":4438,"title":{},"body":{"license.html":{}}}],["statement",{"_index":4496,"title":{},"body":{"license.html":{}}}],["statements",{"_index":4130,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":124,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["stating",{"_index":4472,"title":{},"body":{"license.html":{}}}],["stay",{"_index":705,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["stock",{"_index":310,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/TransitionSelectionComponent.html":{}}}],["stoppage",{"_index":4549,"title":{},"body":{"license.html":{}}}],["storage",{"_index":359,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["store",{"_index":624,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["stored",{"_index":2158,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["str",{"_index":972,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["str2bytes",{"_index":927,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["str2bytes(str",{"_index":969,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["stream",{"_index":1922,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["string",{"_index":68,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["strip",{"_index":3707,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["stroke",{"_index":2378,"title":{},"body":{"classes/LineModel.html":{}}}],["style",{"_index":2379,"title":{},"body":{"classes/LineModel.html":{}}}],["subject",{"_index":1567,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"license.html":{}}}],["sublicense",{"_index":4435,"title":{},"body":{"license.html":{}}}],["submission",{"_index":4498,"title":{},"body":{"license.html":{}}}],["submit",{"_index":4397,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":4395,"title":{},"body":{"license.html":{}}}],["subscriber",{"_index":1642,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["subscription",{"_index":1252,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["subsequently",{"_index":4420,"title":{},"body":{"license.html":{}}}],["substring",{"_index":967,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["such",{"_index":4348,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":3979,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["super",{"_index":3662,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["super(fieldnode.prefix",{"_index":1581,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["super(textnode.prefix",{"_index":1576,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["supersede",{"_index":4504,"title":{},"body":{"license.html":{}}}],["supersedes",{"_index":4092,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["support",{"_index":1078,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{},"modules.html":{}}}],["supported",{"_index":3809,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["supports",{"_index":3967,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["sure",{"_index":1215,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["svg",{"_index":4593,"title":{},"body":{"modules.html":{}}}],["svgstyle",{"_index":2399,"title":{},"body":{"classes/LineModel.html":{}}}],["switch",{"_index":4046,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["syndesis",{"_index":4276,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":1690,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"license.html":{}}}],["system",{"_index":656,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["systems",{"_index":4407,"title":{},"body":{"license.html":{}}}],["t",{"_index":2668,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["t.name",{"_index":2673,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["t.sourceidentifier",{"_index":2670,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["t.targetidentifier",{"_index":2671,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["table",{"_index":2565,"title":{},"body":{"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["table.component",{"_index":882,"title":{},"body":{"modules/DataMapperModule.html":{},"components/TransitionSelectionComponent.html":{}}}],["table.component.html",{"_index":2574,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["table.component.ts",{"_index":2573,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"coverage.html":{}}}],["table.component.ts:27",{"_index":2629,"title":{},"body":{"classes/LookupTableData.html":{}}}],["table.component.ts:28",{"_index":2630,"title":{},"body":{"classes/LookupTableData.html":{}}}],["table.component.ts:29",{"_index":2628,"title":{},"body":{"classes/LookupTableData.html":{}}}],["table.component.ts:38",{"_index":2584,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:40",{"_index":2587,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:41",{"_index":2583,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:43",{"_index":2586,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:45",{"_index":2579,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:73",{"_index":2580,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:77",{"_index":2577,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:81",{"_index":2581,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.entries",{"_index":4121,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["table.entries.length",{"_index":4122,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["table.getinputoutputkey",{"_index":2871,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["table.model",{"_index":2589,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/TransitionSelectionComponent.html":{}}}],["table.model.ts",{"_index":2529,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"coverage.html":{}}}],["table.model.ts:18",{"_index":2633,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:19",{"_index":2632,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:20",{"_index":2635,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:21",{"_index":2634,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:23",{"_index":2637,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:32",{"_index":2636,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:41",{"_index":2538,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:42",{"_index":2537,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:43",{"_index":2539,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:44",{"_index":2535,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:50",{"_index":2544,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:54",{"_index":2542,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:69",{"_index":2545,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.name",{"_index":2667,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["table.sourceidentifier",{"_index":2664,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["table.targetidentifier",{"_index":2665,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["tabledata",{"_index":2606,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["tabledata.selectedtargetenumvalue",{"_index":2612,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["tabledata.sourceenumvalue",{"_index":2607,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["tabledata.targetenumvalues",{"_index":2609,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["tablename",{"_index":4118,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["tables",{"_index":2821,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["tables.push(table",{"_index":2869,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["tablesbyname",{"_index":2822,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["tablesbysourcetargetkey",{"_index":2823,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":4218,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":643,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["tack",{"_index":3978,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["target",{"_index":1404,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["target'.includes(filter",{"_index":3628,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["targetdoc",{"_index":3969,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["targetdoc.type",{"_index":3972,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["targetdocmap",{"_index":3433,"title":{},"body":{"classes/MappingUtil.html":{}}}],["targetdocs",{"_index":156,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["targetenabled",{"_index":3566,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["targetenumvalue",{"_index":2627,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["targetenumvalues",{"_index":2591,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetfield",{"_index":2038,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/NamespaceModel.html":{}}}],["targetfield.enumvalues",{"_index":2597,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetfield.name",{"_index":2040,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/NamespaceModel.html":{}}}],["targetfielddocdeftype",{"_index":3688,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["targetfields",{"_index":2717,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["targetidentifier",{"_index":2531,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappingDefinition.html":{}}}],["targetindex",{"_index":3242,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["targetnode",{"_index":1620,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetnode.str",{"_index":1627,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetnode.str.replace(targetnode.str.substring(startoffset",{"_index":1631,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetnode.str.substring(0",{"_index":1628,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetnodeindex",{"_index":1621,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targets",{"_index":249,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/LineModel.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["targetsourcepaths",{"_index":3418,"title":{},"body":{"classes/MappingUtil.html":{}}}],["targetstring",{"_index":1717,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetstring.substr(1",{"_index":1718,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetstring.substring(0",{"_index":1719,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetstring.substring(offset",{"_index":1720,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetsupportstemplate",{"_index":3846,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["targettoggled",{"_index":3567,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["targettype",{"_index":1804,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["targetvalue",{"_index":2546,"title":{},"body":{"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{}}}],["targetvalues",{"_index":2595,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetvalues.push",{"_index":2596,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetvalues.push(e.name",{"_index":2598,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetx",{"_index":2380,"title":{},"body":{"classes/LineModel.html":{}}}],["targety",{"_index":2381,"title":{},"body":{"classes/LineModel.html":{}}}],["template",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["templatecomponent",{"_index":3974,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["templatecomponent.templatetext",{"_index":3975,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["templateeditcomponent",{"_index":453,"title":{"components/TemplateEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["templateexists",{"_index":2833,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["templatetext",{"_index":2824,"title":{},"body":{"classes/MappingDefinition.html":{},"components/TemplateEditComponent.html":{}}}],["templateurl",{"_index":465,"title":{},"body":{"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["terminal",{"_index":3741,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["terminalfields",{"_index":3676,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["terminate",{"_index":4460,"title":{},"body":{"license.html":{}}}],["terminating",{"_index":1723,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["terms",{"_index":4323,"title":{},"body":{"license.html":{}}}],["test",{"_index":1542,"title":{},"body":{"classes/Examples.html":{}}}],["test.model",{"_index":1539,"title":{},"body":{"classes/Examples.html":{}}}],["tests",{"_index":4292,"title":{},"body":{"index.html":{}}}],["text",{"_index":1137,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["text.indexof",{"_index":1761,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["text.length",{"_index":1766,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["text.search(/\\$\\{[0",{"_index":1755,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["text.substring(text.indexof",{"_index":1765,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textcache",{"_index":1594,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textinput",{"_index":3033,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["textnode",{"_index":1573,"title":{"classes/TextNode.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["textnode(post",{"_index":1679,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textnode(text",{"_index":1767,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textnode(text.substring(0",{"_index":1758,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textnode).str",{"_index":1661,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textnode).str.length",{"_index":1695,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["that.cfg.errorservice.error('the",{"_index":4112,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.cfg.mappingservice.notifymappingupdated",{"_index":4101,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.cfg.mappingservice.updatemappedfield(that.fieldpair",{"_index":4117,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.children",{"_index":1410,"title":{},"body":{"classes/EnumValue.html":{}}}],["that.docdef",{"_index":1409,"title":{},"body":{"classes/EnumValue.html":{}}}],["that.fieldpair.transition.delimiter",{"_index":4115,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.fieldpair.transition.userdelimiter",{"_index":4116,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.mapping.transition.delimiter",{"_index":4099,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.mapping.transition.userdelimiter",{"_index":4104,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.parentfield",{"_index":1408,"title":{},"body":{"classes/EnumValue.html":{}}}],["that.serviceobject",{"_index":1407,"title":{},"body":{"classes/EnumValue.html":{}}}],["then((fetchedactionconfigs",{"_index":1950,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["then(async(result",{"_index":2319,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["theory",{"_index":4534,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":4391,"title":{},"body":{"license.html":{}}}],["they've",{"_index":3007,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["third",{"_index":4485,"title":{},"body":{"license.html":{}}}],["this).find('option:selected",{"_index":4096,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this).find('option:selected').val(that.mapping.transition.userdelimiter",{"_index":4107,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this).val",{"_index":4103,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this).val(that.mapping.transition.userdelimiter).trigger('input",{"_index":4108,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this._cfg",{"_index":2246,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this._cfg.logger",{"_index":2248,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this._issource",{"_index":3665,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this._nodes",{"_index":1601,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.filter(n",{"_index":1735,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.find(n",{"_index":1609,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.foreach(node",{"_index":1750,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.indexof(lastnode",{"_index":1626,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.indexof(node",{"_index":1738,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.indexof(targetnode",{"_index":1629,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.length",{"_index":1603,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.pop",{"_index":1707,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.push(...newnodes",{"_index":1658,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.push(lastnode",{"_index":1769,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.push(new",{"_index":1771,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(index",{"_index":1739,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(lastaddedindex",{"_index":1692,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(nextnodeindex",{"_index":1703,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(targetnodeindex",{"_index":1681,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(this.getlastnodeindex",{"_index":1663,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[index",{"_index":1740,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[lastaddedindex",{"_index":1683,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[nextnodeindex",{"_index":1699,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[targetnodeindex",{"_index":1714,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[this.getlastnodeindex",{"_index":1605,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._showmappingpreview",{"_index":183,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this._type",{"_index":3682,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.action",{"_index":2993,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.actionconfigparamselectionchanged(event",{"_index":2996,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.actions",{"_index":1969,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.actions[action.multiplicity].push(action",{"_index":1959,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.actions[fieldactiondefinition.multiplicity].push(fieldactiondefinition",{"_index":1941,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.actions[m",{"_index":2055,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.actions[multiplicity",{"_index":1970,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.actions[multiplicity].filter(d",{"_index":1975,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.activemapping",{"_index":2875,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.actualdelimiter",{"_index":4016,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.adderror(message",{"_index":1483,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.addline(l",{"_index":2446,"title":{},"body":{"classes/LineModel.html":{}}}],["this.addlinefromparams('0",{"_index":2514,"title":{},"body":{"classes/LineModel.html":{}}}],["this.alias",{"_index":3658,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.allfields",{"_index":3756,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.allfields.push(field",{"_index":3792,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.alphabetizefields(field.children",{"_index":1375,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.appendfieldnode(f",{"_index":1598,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.appendfieldnode(mfield",{"_index":1745,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.appliestofield(d",{"_index":1976,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.appliestosourcefield(action",{"_index":2036,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.appliestotargetfield(action",{"_index":2037,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.arguments",{"_index":1814,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.argumentvalues",{"_index":1825,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.argumentvalues.push(newargvalue",{"_index":1830,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.arraydoesnotcontainerror(errorblock[0].message",{"_index":1494,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.arraydoesnotcontainerror(message",{"_index":1496,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.buttonclicked(false",{"_index":1304,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cancelbuttonhandler",{"_index":1315,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cancelbuttonhandler(this",{"_index":1323,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cfg",{"_index":1612,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"classes/TextNode.html":{}}}],["this.cfg.cleardocs",{"_index":2340,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.currentdraggedfield",{"_index":1108,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["this.cfg.currentdraggedfield.issource",{"_index":1126,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.currentdraggedfield.selected",{"_index":1131,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.documentservice.processdocument(event.target.files[0",{"_index":3924,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.errors",{"_index":1487,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.cfg.errors.filter(e",{"_index":1489,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.cfg.errors.length",{"_index":3520,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.cfg.errors.unshift(e",{"_index":1500,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.cfg.errorservice.clearmappingerrors",{"_index":3000,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.errorservice.clearvalidationerrors",{"_index":1318,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/MappingDetailComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cfg.errorservice.error('could",{"_index":3923,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.errorservice.error('fatal",{"_index":3922,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.errorservice.error('unable",{"_index":1763,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.cfg.errorservice.info('at",{"_index":1721,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.cfg.errorservice.info('please",{"_index":3955,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.errorservice.info('the",{"_index":3229,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.cfg.errorservice.info('you",{"_index":3011,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.cfg.errorservice.mappingerror",{"_index":2326,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.errorservice.mappingerror('please",{"_index":3004,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.errorservice.mappingerror('unable",{"_index":2325,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.errorservice.mappingerror(message",{"_index":2360,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.errorservice.removeerror(e.identifier",{"_index":3528,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.cfg.errorservice.removeerror(erroridentifier.value",{"_index":3523,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.cfg.errorservice.removeerror(w.identifier",{"_index":3532,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.cfg.errorservice.resetall",{"_index":3918,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.errorservice.warn",{"_index":3950,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.errorservice.warn('mapping",{"_index":1945,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.fieldactionservice.getactiondefinitionforname(selectedactionname",{"_index":3068,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.fieldactionservice.getactionsappliestofield(this.mapping",{"_index":3059,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.fileservice.exportmappingscatalog(filename",{"_index":3984,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.fileservice.importadmcatalog(selectedfile",{"_index":3927,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.fileservice.resetall().topromise().then",{"_index":3920,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.getalldocs",{"_index":2305,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.getdocs(this.issource",{"_index":3179,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.cfg.getfirstxmldoc(false).namespaces",{"_index":3618,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.cfg.getfirstxmldoc(false).namespaces.push(newnamespace",{"_index":3626,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.cfg.initcfg.basemappingserviceurl",{"_index":1946,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["this.cfg.initcfg.initialized",{"_index":2361,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/LineModel.html":{}}}],["this.cfg.initcfg.xsrfdefaulttokenvalue",{"_index":338,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["this.cfg.initcfg.xsrfheadername",{"_index":360,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["this.cfg.initializationservice.initialize",{"_index":2341,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.initializationservice.systeminitializedsource.next",{"_index":3962,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.initializationservice.updateloadingstatus('importing",{"_index":3926,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.isdebugenabled",{"_index":1996,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.istraceenabled",{"_index":1984,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["this.cfg.logger.debug(`deserializing",{"_index":1997,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.logger.trace('field",{"_index":1980,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.logger.trace('mapping",{"_index":2250,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.logger.trace('set",{"_index":2285,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.logger.trace(`field",{"_index":1985,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.logger.trace(`mapping",{"_index":2251,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.logger.trace(`set",{"_index":2286,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappingfiles",{"_index":2348,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappingfiles.length",{"_index":2359,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappingfiles[0",{"_index":2343,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappings",{"_index":1226,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.activemapping",{"_index":1227,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.mappings.activemapping.getfields(this.field.issource()).includes(this.field",{"_index":1228,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.mappings.activemapping.getfirstcollectionfield(false",{"_index":3949,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.activemapping.getfirstcollectionfield(true",{"_index":3952,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.activemapping.islookupmode",{"_index":2899,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappings.activemapping.removevalidationerror(e.identifier",{"_index":3527,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.cfg.mappings.activemapping.removevalidationerror(erroridentifier.value",{"_index":3522,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.cfg.mappings.activemapping.removevalidationerror(w.identifier",{"_index":3531,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.cfg.mappings.activemapping.transition",{"_index":3940,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.activemapping.transition.enableexpression",{"_index":3941,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.activemapping.transition.mode",{"_index":3953,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.findmappingsforfield(field",{"_index":2905,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappings.getallmappings(true",{"_index":3316,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.cfg.mappings.gettablebyname(tablename",{"_index":4120,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this.cfg.mappings.mappings",{"_index":2473,"title":{},"body":{"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.cfg.mappings.name",{"_index":2344,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappings.removetablebyname(activemapping.transition.lookuptablename",{"_index":2902,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappings.templateexists",{"_index":3931,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.templatetext",{"_index":3976,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappingservice",{"_index":1944,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.mappingservice.addnewmapping(null",{"_index":3943,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappingservice.addnewmapping(this.selectedfield",{"_index":3367,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.cfg.mappingservice.addplaceholders(insertionindex",{"_index":3245,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.deselectmapping",{"_index":3944,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappingservice.fieldselected(event.item['field",{"_index":3185,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.cfg.mappingservice.fieldselected(targetfield",{"_index":2436,"title":{},"body":{"classes/LineModel.html":{}}}],["this.cfg.mappingservice.fieldselected(this.cfg.currentdraggedfield",{"_index":1132,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.fieldselected(this.field",{"_index":1135,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.isfieldselectable(activemapping",{"_index":3182,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.cfg.mappingservice.mappingselectionrequired$.subscribe((field",{"_index":2896,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappingservice.mappingupdated$.subscribe",{"_index":2405,"title":{},"body":{"classes/LineModel.html":{}}}],["this.cfg.mappingservice.movemappedfieldto(this.mapping",{"_index":3158,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.notifymappingupdated",{"_index":2995,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.mappingservice.removemapping(activemapping",{"_index":2903,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappingservice.selectmapping(mapping",{"_index":3300,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.cfg.mappingservice.updatemappedfield(this.mapping",{"_index":3187,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["this.cfg.preloadedfieldactionmetadata",{"_index":1928,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.preloadedfieldactionmetadata.actiondetails",{"_index":1930,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.preloadedfieldactionmetadata.actiondetails.actiondetail",{"_index":1931,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.showlinesalways",{"_index":2513,"title":{},"body":{"classes/LineModel.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.showmappedfields",{"_index":1146,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.showmappingdetailtray",{"_index":2904,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.showmappingpreview",{"_index":3947,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.showmappingtable",{"_index":3935,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.shownamespacetable",{"_index":3936,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.showtypes",{"_index":3946,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.showunmappedfields",{"_index":1147,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.targetdocs[0",{"_index":3970,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.validationerrors",{"_index":1488,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.cfg.validationerrors.filter(e",{"_index":1491,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.checkfieldeligibiltyforlinedrawing(inputfield",{"_index":2499,"title":{},"body":{"classes/LineModel.html":{}}}],["this.checkfieldeligibiltyforlinedrawing(outputfield",{"_index":2508,"title":{},"body":{"classes/LineModel.html":{}}}],["this.checkiconenabled",{"_index":2994,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.children",{"_index":1400,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.children.push(childfield.copy",{"_index":1411,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.classidentifier",{"_index":3663,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.clearactiondefinitions",{"_index":1929,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.clearlines",{"_index":2467,"title":{},"body":{"classes/LineModel.html":{}}}],["this.close",{"_index":1324,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.collapsed",{"_index":528,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["this.complexfieldsbyclassidentifier",{"_index":3759,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.complexfieldsbyclassidentifier.hasownproperty(key",{"_index":3800,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.complexfieldsbyclassidentifier[classidentifier",{"_index":3684,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.complexfieldsbyclassidentifier[field.classidentifier",{"_index":3810,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.complexfieldsbyclassidentifier[key",{"_index":3801,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.nestedcomponenttype",{"_index":1295,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.componentloaded",{"_index":1283,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.confirmbuttondisabled",{"_index":1309,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.confirmbuttontext",{"_index":1310,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.constantdoc.clearfields",{"_index":269,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc.issource",{"_index":173,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc.name",{"_index":171,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc.showfields",{"_index":174,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc.type",{"_index":169,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc].concat(docs",{"_index":245,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc].concat(this.sourcedocs).concat(this.targetdocs",{"_index":285,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.createlinestyle(l",{"_index":2448,"title":{},"body":{"classes/LineModel.html":{}}}],["this.data",{"_index":2615,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.datasource",{"_index":2089,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["this.delimiter",{"_index":4013,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.delimiters",{"_index":2989,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.detector.detectchanges",{"_index":1288,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.diff",{"_index":3138,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.discovercomplexfields(field.children",{"_index":3811,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.discovercomplexfields(fields",{"_index":3799,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.displayname",{"_index":3664,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.docdef",{"_index":502,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.docdef.fieldexists(this.getfield",{"_index":582,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.docdef.getallfields",{"_index":2127,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.docdef.ispropertyorconstant",{"_index":1433,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.docdef.issource",{"_index":1422,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.docdef.type",{"_index":1434,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{}}}],["this.docdefinput",{"_index":2502,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefinput.handlescroll(null",{"_index":2471,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefinput.setlinemachine(this",{"_index":2407,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefoutput",{"_index":2470,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefoutput.getfielddetailcomponentposition(component.field).y",{"_index":2461,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefoutput.handlescroll(null",{"_index":2472,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefoutput.setlinemachine(this",{"_index":2408,"title":{},"body":{"classes/LineModel.html":{}}}],["this.dofetchfieldactions().topromise",{"_index":1949,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.drawcurrentline('100",{"_index":2462,"title":{},"body":{"classes/LineModel.html":{}}}],["this.drawcurrentline(event.offsetx.tostring",{"_index":2455,"title":{},"body":{"classes/LineModel.html":{}}}],["this.drawingline",{"_index":2453,"title":{},"body":{"classes/LineModel.html":{}}}],["this.drawlinesformapping(activemapping",{"_index":2478,"title":{},"body":{"classes/LineModel.html":{}}}],["this.drawlinesformapping(m",{"_index":2477,"title":{},"body":{"classes/LineModel.html":{}}}],["this.editmode",{"_index":2092,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.edittemplate",{"_index":3945,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.elem",{"_index":744,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["this.elem.onmouseup",{"_index":3153,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.elem.style.position",{"_index":3151,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.elem.style['top",{"_index":3140,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.elementref.nativeelement.focus",{"_index":2372,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.enablecheck",{"_index":3025,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.entries",{"_index":2562,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.entries.length",{"_index":2566,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.entries.push(entry",{"_index":2564,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.enumeration",{"_index":1388,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.enumfieldsbyclassidentifier",{"_index":3760,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.enumfieldsbyclassidentifier[classidentifier",{"_index":3686,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.enumfieldsbyclassidentifier[field.classidentifier",{"_index":3794,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.error",{"_index":1519,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["this.errorservice",{"_index":724,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.errorservice.removeerror(e.identifier",{"_index":741,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.errorservice.removeerror(erroridentifier.value",{"_index":739,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.errorservice.validationerror(errormessage",{"_index":300,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.expressionupdatedsource.asobservable",{"_index":1592,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.expressionupdatedsource.next",{"_index":1633,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.expressionupdatedsource.next(updatedevent",{"_index":1696,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.extractfieldactiondefinition(actiondetail",{"_index":1932,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.fade",{"_index":1306,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.field",{"_index":570,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{}}}],["this.field.collapsed",{"_index":1172,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.displayname",{"_index":574,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.docdef",{"_index":580,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.docdef.type",{"_index":1141,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.enumeration",{"_index":1136,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.field",{"_index":1586,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.field.field.name",{"_index":1587,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.field.fielddepth",{"_index":1219,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.hasunmappedchildren",{"_index":1154,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.isattribute",{"_index":1142,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{}}}],["this.field.iscollection",{"_index":1139,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.isconstant",{"_index":1188,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.isproperty",{"_index":1186,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.ispropertyorconstant",{"_index":1213,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.issource",{"_index":1125,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.field.isterminal",{"_index":1101,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.name",{"_index":576,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.name.length",{"_index":1225,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.namespacealias",{"_index":2101,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.field.parentfield",{"_index":2093,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.field.partofmapping",{"_index":1145,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.partoftransformation",{"_index":1148,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.path",{"_index":577,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.serviceobject.jsontype",{"_index":2134,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.field.type",{"_index":578,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.usercreated",{"_index":579,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.value",{"_index":575,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["this.fieldcomponents.toarray",{"_index":1178,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.fielddetailelement.nativeelement",{"_index":1166,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.fieldmode",{"_index":567,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.fieldpairmatchessearch(mapping",{"_index":3317,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.fieldpaths",{"_index":3735,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldpaths.push(field.path",{"_index":3791,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldpaths.sort",{"_index":3727,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fields",{"_index":3724,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fields.push(field",{"_index":3736,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath",{"_index":3758,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath[currentparentpath",{"_index":3714,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath[field.path",{"_index":3762,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath[fieldpath",{"_index":3702,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath[oldpath",{"_index":3733,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldtype",{"_index":2095,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.filedata",{"_index":3964,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.focus",{"_index":2370,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.focusel",{"_index":505,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["this.getactualfield(mapping",{"_index":2035,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.getalldocs",{"_index":272,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.getallfields",{"_index":3690,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.getallmappedfields",{"_index":2790,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getargumentvalue(argumentname).value",{"_index":1831,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.getcollectionparentfield",{"_index":1417,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.getcomplexfield(field.classidentifier",{"_index":3745,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.getcurrentadmcatalog().subscribe",{"_index":2321,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getcurrentmappingjson().topromise().then((result",{"_index":2345,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getdocs(issource",{"_index":279,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.getdocswithoutpropertydoc(issource",{"_index":243,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.geterrors",{"_index":3526,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.geterrors().length",{"_index":3524,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.geterrors()[0",{"_index":752,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.getfield(fieldpath",{"_index":3698,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.getfields(field.getfieldpaths(fields",{"_index":3695,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.getfields(issource",{"_index":2784,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getfields(true).concat(this.getfields(false",{"_index":2793,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getjsonbuf",{"_index":2294,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getlastnode",{"_index":1608,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.getmappedfieldactions()[actionindex",{"_index":3026,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.getmappedfieldactions()[selectedactionindex",{"_index":3065,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["this.getmappedfieldforfield(field",{"_index":2797,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(field.issource",{"_index":2749,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(field.issource()).push(mappedfield",{"_index":2747,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(field.issource()).unshift(mappedfield",{"_index":2746,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(issource",{"_index":2767,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(issource).push(mappedfield",{"_index":2761,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(mappedfield.field.issource",{"_index":2764,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(mappedfield.field.issource()).indexof(mappedfield",{"_index":2770,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(true).concat(this.getmappedfields(false",{"_index":2795,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappingid",{"_index":2282,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getmappingid()).topromise",{"_index":2318,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getmappingid()).topromise().then",{"_index":2338,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getnamewithnamespace",{"_index":1428,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.getparentobjectname",{"_index":3249,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.getscreenposforfield(inputfield",{"_index":2501,"title":{},"body":{"classes/LineModel.html":{}}}],["this.getscreenposforfield(outputfield",{"_index":2511,"title":{},"body":{"classes/LineModel.html":{}}}],["this.getselectedmappingcomponent().mapping",{"_index":3369,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.getsourceiconcssclass",{"_index":3248,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.gettargetfieldfromline(selectedelement.attributes",{"_index":2435,"title":{},"body":{"classes/LineModel.html":{}}}],["this.getwarnings",{"_index":3530,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.getwarnings().length",{"_index":3525,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.getwarnings()[0",{"_index":753,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.handleerror('error",{"_index":2259,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.hasfocus",{"_index":2371,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.headers",{"_index":1982,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["this.headertext",{"_index":1312,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.htmlcache",{"_index":1747,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.http.delete(url",{"_index":2275,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.http.get(url",{"_index":1981,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["this.http.put(url",{"_index":2283,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.identifier",{"_index":1516,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["this.index",{"_index":1584,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.initcfg.classpath",{"_index":275,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.initializationservice.cfg",{"_index":623,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["this.initializationservice.initialize",{"_index":657,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["this.initialized",{"_index":3728,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.inputid",{"_index":3135,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.insertnodes([new",{"_index":1743,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.insertnodes(this.createnodesfromtext(str",{"_index":1649,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.isarray",{"_index":1424,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.isclosing",{"_index":573,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.iscollection",{"_index":1383,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.isdragdroptarget",{"_index":1127,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["this.isinitialized",{"_index":1943,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.isoddrow",{"_index":3397,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["this.isopen",{"_index":740,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.isprimitive",{"_index":1384,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.isproperty",{"_index":1430,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.ispropertyorconstant",{"_index":1429,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["this.issource",{"_index":3060,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.issource)[0",{"_index":3228,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.istarget",{"_index":3659,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.isvalidation",{"_index":728,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.isxml",{"_index":2094,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.jsonbuffer",{"_index":2346,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.left_bracket",{"_index":3785,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.level",{"_index":1518,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["this.linebeingformed",{"_index":2451,"title":{},"body":{"classes/LineModel.html":{}}}],["this.linebeingformed.targetx",{"_index":2458,"title":{},"body":{"classes/LineModel.html":{}}}],["this.linebeingformed.targety",{"_index":2459,"title":{},"body":{"classes/LineModel.html":{}}}],["this.linemachine",{"_index":1170,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.linemachine.handledocumentfieldmouseover(this",{"_index":1171,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.linemachine.redrawlinesformappings",{"_index":1173,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.linemachineelement.nativeelement",{"_index":2489,"title":{},"body":{"classes/LineModel.html":{}}}],["this.lines",{"_index":2418,"title":{},"body":{"classes/LineModel.html":{}}}],["this.lines.push(l",{"_index":2449,"title":{},"body":{"classes/LineModel.html":{}}}],["this.loadcomponent",{"_index":1287,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.logger",{"_index":2249,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.logger.debug('no",{"_index":1952,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.logger.debug(`field",{"_index":1934,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.logger.getconfigsnapshot().level",{"_index":191,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.lookuptablename",{"_index":4053,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.mappedfield",{"_index":2991,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.actions",{"_index":2992,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["this.mappedfield.actions.push(action",{"_index":3231,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.actions[actionindex",{"_index":3022,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.mappedfield.field",{"_index":3232,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.field.docdef",{"_index":3236,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.field.docdef.getname(configmodel.getconfig().showtypes",{"_index":3252,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.field.getfieldlabel(configmodel.getconfig().showtypes",{"_index":3331,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.field.name",{"_index":3235,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.field.name.length",{"_index":3226,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.field.path",{"_index":3233,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.ispadfield",{"_index":3225,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.parseddata.usercreated",{"_index":3013,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.mappedfield.removeaction(action",{"_index":3062,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["this.mapping",{"_index":2593,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldDetailComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.mapping.getindexformappedfield(insertbeforemappedfield",{"_index":3159,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.getindexformappedfield(this.field",{"_index":1585,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.mapping.getmappedfields(mappedfield.issource",{"_index":3241,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mapping.getmappedfields(this.issource",{"_index":3169,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.getmappedfields(this.issource).length",{"_index":3238,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mapping.getusermappedfields(true).foreach(f",{"_index":1597,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.mapping.removemappedfield(mappedfield",{"_index":3186,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["this.mapping.transition",{"_index":3163,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.transition.enableexpression",{"_index":3164,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["this.mapping.transition.expression.updatefieldreference(this.mapping",{"_index":3165,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.transition.isenumerationmode",{"_index":3168,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.mapping.transition.ismanytoonemode",{"_index":3167,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.transition.isonetomanymode",{"_index":3166,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.transition.lookuptablename",{"_index":4119,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this.mapping.transition.mode",{"_index":3171,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.mappingchanged",{"_index":2406,"title":{},"body":{"classes/LineModel.html":{}}}],["this.mappingfiles",{"_index":270,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.mappings",{"_index":2878,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.mappingselectionrequiredsubscription",{"_index":2895,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.mappingselectionrequiredsubscription.unsubscribe",{"_index":2898,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.mappingservice.disablemappingpreview",{"_index":185,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.mappingservice.enablemappingpreview",{"_index":184,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.mappingsfilename",{"_index":3963,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.mappingsfilename.length",{"_index":3983,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.mappingupdatedsubscription",{"_index":2404,"title":{},"body":{"classes/LineModel.html":{}}}],["this.mappingupdatedsubscription.unsubscribe",{"_index":2409,"title":{},"body":{"classes/LineModel.html":{}}}],["this.matchesdate(action.sourcetype",{"_index":2041,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.matchesdate(action.targettype",{"_index":2046,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.matchesnumeric(action.sourcetype",{"_index":2043,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.matchesnumeric(action.targettype",{"_index":2047,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.message",{"_index":1311,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/ErrorInfo.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorwindow.reset",{"_index":750,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.modalerrorwindow.show",{"_index":751,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.modalwindow",{"_index":1195,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{}}}],["this.modalwindow.cancelbuttonhandler",{"_index":2913,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.modalwindow.close",{"_index":3368,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.modalwindow.confirmbuttontext",{"_index":1184,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.headertext",{"_index":1189,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.message",{"_index":1214,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.modalwindow.nestedcomponentinitializedcallback",{"_index":1190,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.nestedcomponenttype",{"_index":1202,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.okbuttonhandler",{"_index":1203,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.reset",{"_index":1183,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.show",{"_index":1211,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindowcomponent",{"_index":572,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.modalwindowcomponent.confirmbuttondisabled",{"_index":583,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.mode",{"_index":4050,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.mouseeventtimer",{"_index":742,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.mytarget",{"_index":1285,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytarget.changes.subscribe(changes",{"_index":1282,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytarget.toarray().length",{"_index":1286,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytarget.toarray()[0",{"_index":1292,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytargetchangessubscription",{"_index":1276,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytargetchangessubscription.unsubscribe",{"_index":1277,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.name",{"_index":1381,"title":{},"body":{"classes/EnumValue.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["this.namespace",{"_index":3575,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["this.namespace.alias",{"_index":3581,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["this.namespace.istarget",{"_index":3580,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["this.namespacealias",{"_index":1380,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{}}}],["this.namespacematchessearch(ns",{"_index":3636,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.namespaces",{"_index":2104,"title":{},"body":{"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{}}}],["this.namespaces.push(fakenamespace",{"_index":2118,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.nestedcomponent",{"_index":1296,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponent.getinitialfocuselement",{"_index":1301,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponent.isdatavalid",{"_index":1319,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponentinitializedcallback",{"_index":1298,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponentinitializedcallback(this",{"_index":1299,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponenttype",{"_index":1313,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nodes[lastaddedindex",{"_index":1684,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.okbuttonhandler",{"_index":1314,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.okbuttonhandler(this",{"_index":1320,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.outputselects.toarray",{"_index":2617,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.parentfield",{"_index":1397,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{}}}],["this.parentfield.name",{"_index":2120,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.parentfield.namespacealias",{"_index":2103,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.parentfieldname",{"_index":2119,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.parentobjectname",{"_index":3234,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.parentobjectname.length",{"_index":3237,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.path",{"_index":1427,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["this.pathseparator",{"_index":3705,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatechildren(field.parentfield",{"_index":3737,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatechildren(parentfield",{"_index":3718,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatefielddata(childfield",{"_index":3753,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatefielddata(field",{"_index":3726,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatefieldparentpaths(childfield",{"_index":3751,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatefieldparentpaths(field",{"_index":3725,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.preparecomplexfields",{"_index":3722,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.prettyname",{"_index":4015,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.previewerrors",{"_index":2730,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.previewerrors.filter(e",{"_index":2733,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.processmappingscatalog(userfile",{"_index":3921,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.propertydoc",{"_index":244,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.clearfields",{"_index":268,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.issource",{"_index":167,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.name",{"_index":166,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.showfields",{"_index":168,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.type",{"_index":164,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.reader",{"_index":3965,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.reader.onload",{"_index":3905,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.reader.readasarraybuffer(filecontent",{"_index":3910,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.reader.result",{"_index":3906,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.redrawlinesformappings",{"_index":2437,"title":{},"body":{"classes/LineModel.html":{}}}],["this.removeerror(e.identifier",{"_index":1492,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.resetall",{"_index":3948,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.right_bracket",{"_index":3786,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.sanitizer.bypasssecuritytruststyle('display:inline",{"_index":1221,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytruststyle('stroke",{"_index":2486,"title":{},"body":{"classes/LineModel.html":{}}}],["this.search(this.searchfilter",{"_index":3306,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchfilter",{"_index":3175,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchfilter.tolowercase",{"_index":3310,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchmode",{"_index":3296,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchresults",{"_index":3303,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchresults.length",{"_index":3298,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchresults.push(mapping",{"_index":3318,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.searchresults.push(ns",{"_index":3637,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.sectioncomponents.toarray",{"_index":3371,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.selected",{"_index":1158,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["this.selectedcallback(this",{"_index":3401,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["this.selectedmappingcomponent",{"_index":3370,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.selectednamespace",{"_index":3617,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.selectmapping(field",{"_index":2897,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.selectnamespace",{"_index":3638,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.serializedvalue",{"_index":4014,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.serviceobject",{"_index":1395,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.setbinaryfiletoservice(filecontent",{"_index":2317,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.setlinebeingformed(null",{"_index":2465,"title":{},"body":{"classes/LineModel.html":{}}}],["this.showactiveerrors",{"_index":747,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.sortfieldactiondefinitions",{"_index":1942,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.sourcedocs",{"_index":239,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.sourcedocs.push(docdef",{"_index":230,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.sourcefields",{"_index":2738,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.sourcefields.concat(this.targetfields",{"_index":2743,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.sourcefields.length",{"_index":2756,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.sourceiconcssclass",{"_index":3247,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.sourceidentifier",{"_index":2560,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.sourcetype",{"_index":2549,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.sourcevalue",{"_index":2548,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.start",{"_index":3139,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.str",{"_index":1577,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.str.replace",{"_index":1578,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.table",{"_index":2599,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.table.entries",{"_index":2616,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.table.entries.push(e",{"_index":2625,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.table.getentryforsource(tabledata.sourceenumvalue",{"_index":2611,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.tables.push(table",{"_index":2863,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tables[this.tables.indexof(table",{"_index":2872,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname",{"_index":2866,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname.hasownproperty(key",{"_index":2867,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname[key",{"_index":2868,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname[name",{"_index":2864,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname[table.name",{"_index":2862,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbysourcetargetkey[iokey",{"_index":2873,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbysourcetargetkey[key",{"_index":2865,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbysourcetargetkey[table.getinputoutputkey",{"_index":2861,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.targetdocs",{"_index":240,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.targetdocs.push(docdef",{"_index":231,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.targetenabled",{"_index":3579,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["this.targetfields",{"_index":2739,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.targetfields.length",{"_index":2757,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.targetidentifier",{"_index":2561,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.targetsupportstemplate",{"_index":3971,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.targettype",{"_index":2551,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.targetvalue",{"_index":2550,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.templatetext",{"_index":2860,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.terminalfields",{"_index":3757,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.terminalfields.push(field",{"_index":3795,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.textcache",{"_index":1746,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.tokenextractor.gettoken",{"_index":361,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["this.transitionfieldaction.name",{"_index":4052,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.type",{"_index":1385,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["this.updatecache",{"_index":1632,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.updatetemplatevalues",{"_index":3224,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.uri",{"_index":3660,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.userclassname",{"_index":503,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["this.usercollectiontype",{"_index":506,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["this.uuid",{"_index":1376,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["this.validateactionconfigparamselection(action.argumentvalues",{"_index":3024,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.validationerrors",{"_index":2724,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.validationerrors.filter(e",{"_index":2726,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.value",{"_index":1431,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.valuetype",{"_index":565,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.visible",{"_index":1284,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.xsrfcookiename",{"_index":109,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.xsrfdefaulttokenvalue",{"_index":111,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.xsrfheadername",{"_index":107,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.yoffset).tostring",{"_index":2463,"title":{},"body":{"classes/LineModel.html":{}}}],["those",{"_index":1116,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"license.html":{}}}],["through",{"_index":4329,"title":{},"body":{"license.html":{}}}],["throw",{"_index":2481,"title":{},"body":{"classes/LineModel.html":{},"classes/NamespaceModel.html":{}}}],["time",{"_index":595,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["time'].indexof(selectedtype",{"_index":2052,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["timeout",{"_index":2244,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["timer",{"_index":715,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["times",{"_index":3770,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["timetz",{"_index":599,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["title",{"_index":520,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"license.html":{}}}],["tns",{"_index":3582,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{}}}],["tns'.includes(filter",{"_index":3627,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["toadd",{"_index":1733,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["todisplayable",{"_index":928,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["todisplayable(camelcasestring",{"_index":974,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["toerroriconclass",{"_index":3834,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["toerroriconclasspipe",{"_index":793,"title":{"pipes/ToErrorIconClassPipe.html":{}},"body":{"modules/DataMapperModule.html":{},"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{},"overview.html":{}}}],["togglesearch",{"_index":3272,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["tohtml",{"_index":1556,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["tojson",{"_index":2547,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["token",{"_index":314,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tokenposition",{"_index":1706,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["toolbar",{"_index":3843,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":455,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["toolbar.component.html",{"_index":3844,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarbuttonclicked",{"_index":3857,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarbuttonclicked(action",{"_index":3896,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcomponent",{"_index":454,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tooltipmodule",{"_index":850,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["tooltipmodule.forroot",{"_index":902,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["tooltipmoduleforroot",{"_index":901,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["topromise().then((body",{"_index":1983,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["topromise().then((res",{"_index":2276,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["toremove",{"_index":1734,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["tort",{"_index":4535,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":2534,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["totext",{"_index":1557,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["tracking",{"_index":4409,"title":{},"body":{"license.html":{}}}],["trade",{"_index":4510,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4475,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":4508,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1110,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"license.html":{}}}],["transform",{"_index":3835,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["transform(value",{"_index":3836,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["transformation",{"_index":1877,"title":{},"body":{"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"license.html":{}}}],["transformations",{"_index":1875,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["transition",{"_index":457,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["transition.model",{"_index":2694,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["transitiondelimiter",{"_index":2987,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["transitiondelimiter.none",{"_index":3029,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["transitiondelimiter.space",{"_index":3993,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimiter.user_defined",{"_index":3032,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["transitiondelimiter.user_defined].includes(delimitermodel.delimiter",{"_index":3030,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["transitiondelimitermodel",{"_index":2974,"title":{"classes/TransitionDelimiterModel.html":{}},"body":{"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{}}}],["transitiondelimitermodel(transitiondelimiter.ampersand",{"_index":4024,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.at_sign",{"_index":4025,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.backslash",{"_index":4028,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.colon",{"_index":4029,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.comma",{"_index":4030,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.dash",{"_index":4031,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.equal",{"_index":4032,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.hash",{"_index":4033,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.multi_space",{"_index":4034,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.none",{"_index":4023,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.period",{"_index":4037,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.pipe",{"_index":4038,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.semicolon",{"_index":4039,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.slash",{"_index":4040,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.space",{"_index":4041,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.underscore",{"_index":4042,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.user_defined",{"_index":4044,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionfieldaction",{"_index":4019,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmode",{"_index":2651,"title":{},"body":{"classes/LookupTableUtil.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["transitionmode.enum",{"_index":2654,"title":{},"body":{"classes/LookupTableUtil.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmode.for_each",{"_index":4048,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmode.many_to_one",{"_index":3173,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["transitionmode.one_to_many",{"_index":3174,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["transitionmode.one_to_one",{"_index":3172,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmodel",{"_index":2693,"title":{"classes/TransitionModel.html":{}},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{}}}],["transitionmodel.delimitermodels",{"_index":2990,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmodel.delimitermodels.length",{"_index":4020,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmodel.getmappingmodename(this.mode",{"_index":4051,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmodel.initialize",{"_index":2988,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionname",{"_index":3311,"title":{},"body":{"components/MappingListComponent.html":{}}}],["transitionname.tolowercase().includes(filter",{"_index":3313,"title":{},"body":{"components/MappingListComponent.html":{}}}],["transitionselectioncomponent",{"_index":456,"title":{"components/TransitionSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["translate",{"_index":2967,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["translation",{"_index":4368,"title":{},"body":{"license.html":{}}}],["tree",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["triangle",{"_index":3841,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["trigger",{"_index":3957,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["triggered",{"_index":3109,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["true",{"_index":103,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":2290,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["turn",{"_index":971,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["two",{"_index":2299,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["type",{"_index":17,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type(type",{"_index":3681,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["typeaheadmodule",{"_index":851,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["typeaheadmodule.forroot",{"_index":900,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["typeaheadmoduleforroot",{"_index":899,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1009,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["types",{"_index":1873,"title":{},"body":{"injectables/FieldActionService.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["typing",{"_index":3177,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["ui",{"_index":138,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"classes/MappingDefinition.html":{},"index.html":{}}}],["ui's",{"_index":4314,"title":{},"body":{"index.html":{}}}],["uint8array",{"_index":973,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["uint8array(arraybuffer",{"_index":3908,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["ul",{"_index":1140,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["un",{"_index":3424,"title":{},"body":{"classes/MappingUtil.html":{}}}],["unable",{"_index":2328,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["undefined",{"_index":1010,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{}}}],["under",{"_index":808,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["underscore",{"_index":4011,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["union",{"_index":4336,"title":{},"body":{"license.html":{}}}],["unique",{"_index":3819,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["units",{"_index":3006,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["unknown",{"_index":4263,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unless",{"_index":818,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["unmapped",{"_index":1736,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["unqualified",{"_index":3657,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["unqualifiednamespace",{"_index":3648,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["unqualifiedns",{"_index":2098,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["unqualifiedns.alias",{"_index":2100,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["unqualifiedns].concat(this.docdef.namespaces",{"_index":2105,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["unselected",{"_index":1728,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["unsigned",{"_index":601,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["until",{"_index":3966,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["update",{"_index":2178,"title":{},"body":{"injectables/FileManagementService.html":{},"components/MappingFieldContainerComponent.html":{},"index.html":{}}}],["updatecache",{"_index":1748,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updated",{"_index":2230,"title":{},"body":{"injectables/FileManagementService.html":{},"components/MappingFieldDetailComponent.html":{}}}],["updatedevent",{"_index":1666,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updatedevent.node",{"_index":1693,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updatedevent.offset",{"_index":1694,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updatedocumentnamespacesfrommappings",{"_index":3411,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatedocumentnamespacesfrommappings(cfg",{"_index":3426,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatefield(field",{"_index":3729,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["updatefieldreference(mapping",{"_index":1730,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updatefromconfig",{"_index":3958,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["updatefrommappings(mappingdefinition",{"_index":3764,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["updatelookuptables",{"_index":2643,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["updatelookuptables(mappingdefinition",{"_index":2649,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["updatemappedfieldsfromdocuments",{"_index":3412,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatemappedfieldsfromdocuments(mapping",{"_index":3428,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatemappingsfromdocuments",{"_index":3413,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatemappingsfromdocuments(cfg",{"_index":3430,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatesearchfilter",{"_index":3095,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["updatesearchfilter(value",{"_index":3126,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["updatetemplatevalues",{"_index":3198,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["uri",{"_index":3447,"title":{},"body":{"classes/MappingUtil.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["uri:documentdefinition",{"_index":246,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["url",{"_index":1947,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"index.html":{}}}],["url(#line",{"_index":2384,"title":{},"body":{"classes/LineModel.html":{}}}],["urls",{"_index":627,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["use",{"_index":352,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LineModel.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["useclass",{"_index":914,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["used",{"_index":295,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["user",{"_index":702,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"index.html":{}}}],["user's",{"_index":989,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["user_defined",{"_index":4012,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["userclassname",{"_index":468,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["usercollectionclassname",{"_index":469,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["usercollectiontype",{"_index":470,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["usercreated",{"_index":1346,"title":{},"body":{"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["userdelimiter",{"_index":4018,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["userexport",{"_index":2289,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["userfieldcount",{"_index":2753,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["userfile",{"_index":3911,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["userfile.name.split",{"_index":3914,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["userfilecomps",{"_index":3913,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["userfilecomps[userfilecomps.length",{"_index":3916,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["userfilesuffix",{"_index":3915,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["using",{"_index":4528,"title":{},"body":{"license.html":{}}}],["util",{"_index":2243,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["util.ts",{"_index":918,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/LookupTableUtil.html":{},"classes/MappingUtil.html":{},"coverage.html":{}}}],["util.ts:101",{"_index":949,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:118",{"_index":985,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:130",{"_index":975,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:152",{"_index":936,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:160",{"_index":3421,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:181",{"_index":3419,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:197",{"_index":3427,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:20",{"_index":933,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:21",{"_index":931,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:223",{"_index":3415,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:23",{"_index":961,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:28",{"_index":2648,"title":{},"body":{"classes/LookupTableUtil.html":{},"classes/MappingUtil.html":{}}}],["util.ts:43",{"_index":3429,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:46",{"_index":965,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:60",{"_index":2650,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["util.ts:71",{"_index":970,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:85",{"_index":957,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:86",{"_index":2646,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["utils/mapping",{"_index":894,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["uuid",{"_index":1340,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["uuidcounter",{"_index":1330,"title":{},"body":{"classes/EnumValue.html":{}}}],["v2/atlas",{"_index":4620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2/atlas/java",{"_index":4621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2/atlas/json",{"_index":4623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2/atlas/xml",{"_index":4622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":288,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["validateactionconfigparamselection",{"_index":2934,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["validateactionconfigparamselection(acp",{"_index":2979,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["validation",{"_index":292,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{}}}],["validation_error",{"_index":1514,"title":{},"body":{"classes/ErrorInfo.html":{},"miscellaneous/enumerations.html":{}}}],["validationerror",{"_index":1447,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["validationerror(message",{"_index":1478,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["validationerrors",{"_index":163,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["value",{"_index":290,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.some(e",{"_index":3839,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["valued",{"_index":2961,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["valueexistsoncreation",{"_index":476,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{}}}],["values",{"_index":1795,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["valuetype",{"_index":540,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["valuetypeselectionchanged",{"_index":542,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["valuetypeselectionchanged(event",{"_index":555,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["var",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["variable",{"_index":4175,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":4597,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":4400,"title":{},"body":{"license.html":{}}}],["verify",{"_index":2429,"title":{},"body":{"classes/LineModel.html":{}}}],["version",{"_index":811,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["vertical",{"_index":3144,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["via",{"_index":2160,"title":{},"body":{"injectables/FileManagementService.html":{},"index.html":{}}}],["viewchild",{"_index":498,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["viewchild('class",{"_index":493,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["viewchild('datamappercomponent",{"_index":612,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["viewchild('expressioncomponent",{"_index":3898,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["viewchild('fielddetailelement",{"_index":1094,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["viewchild('linemachineelement",{"_index":2400,"title":{},"body":{"classes/LineModel.html":{}}}],["viewchild('name",{"_index":3817,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["viewchild('namespace",{"_index":3571,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["viewchild('sourcesheader",{"_index":2894,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["viewchild('template",{"_index":3822,"title":{},"body":{"components/TemplateEditComponent.html":{}}}],["viewchild('value",{"_index":560,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{}}}],["viewchildren",{"_index":1098,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewchildren('dyn_target",{"_index":1269,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewchildren('fielddetail",{"_index":1092,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["viewchildren('mappingsection",{"_index":3353,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["viewchildren('outputselect",{"_index":2585,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["viewcontainerref",{"_index":1248,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewcontainerref.clear",{"_index":1293,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewcontainerref.createcomponent(componentfactory).instance",{"_index":1297,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["visible",{"_index":1267,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["visibleincurrentdocumentsearch",{"_index":1335,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["void",{"_index":179,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["w",{"_index":3529,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["w.message",{"_index":3535,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["walk",{"_index":2799,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["want",{"_index":1216,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["warn",{"_index":1448,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"miscellaneous/enumerations.html":{}}}],["warn(message",{"_index":1480,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["warning",{"_index":690,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["warnings",{"_index":691,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["warranties",{"_index":827,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["warranty",{"_index":4518,"title":{},"body":{"license.html":{}}}],["wasn't",{"_index":3980,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["way",{"_index":2221,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["we'll",{"_index":351,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["we're",{"_index":2222,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{}}}],["web",{"_index":4268,"title":{},"body":{"index.html":{}}}],["well",{"_index":2208,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["wherever",{"_index":4484,"title":{},"body":{"license.html":{}}}],["whether",{"_index":4349,"title":{},"body":{"license.html":{}}}],["who's",{"_index":1107,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["whole",{"_index":4385,"title":{},"body":{"license.html":{}}}],["whose",{"_index":3112,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["widget",{"_index":1646,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/TextNode.html":{}}}],["width",{"_index":938,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["width:4px",{"_index":2487,"title":{},"body":{"classes/LineModel.html":{}}}],["window",{"_index":318,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["window'},{'name",{"_index":447,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["window.component",{"_index":501,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["window.component.html",{"_index":1255,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["window.component.ts",{"_index":1244,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"coverage.html":{}}}],["window.component.ts:111",{"_index":3500,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:113",{"_index":3548,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:114",{"_index":3547,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:120",{"_index":3553,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:127",{"_index":3552,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:139",{"_index":3546,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:26",{"_index":3538,"title":{},"body":{"interfaces/ModalErrorWindowValidator.html":{}}}],["window.component.ts:27",{"_index":3537,"title":{},"body":{"interfaces/ModalErrorWindowValidator.html":{}}}],["window.component.ts:28",{"_index":3564,"title":{},"body":{"interfaces/ModalWindowValidator.html":{}}}],["window.component.ts:29",{"_index":3563,"title":{},"body":{"interfaces/ModalWindowValidator.html":{}}}],["window.component.ts:36",{"_index":3495,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:37",{"_index":3498,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:38",{"_index":3497,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:39",{"_index":1247,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:40",{"_index":3494,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:41",{"_index":3496,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:43",{"_index":1246,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:44",{"_index":3515,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:45",{"_index":3518,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:46",{"_index":3512,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:47",{"_index":3510,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:48",{"_index":3519,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:49",{"_index":3514,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:51",{"_index":3516,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:53",{"_index":3511,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:54",{"_index":3493,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:55",{"_index":3543,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:56",{"_index":3513,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{}}}],["window.component.ts:57",{"_index":3545,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:58",{"_index":3505,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{}}}],["window.component.ts:59",{"_index":3541,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:60",{"_index":3542,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:61",{"_index":3544,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:62",{"_index":3499,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:63",{"_index":3559,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:64",{"_index":3561,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:65",{"_index":3555,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:66",{"_index":3556,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:67",{"_index":3562,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:68",{"_index":3558,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:69",{"_index":3508,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:70",{"_index":3560,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:72",{"_index":3554,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:73",{"_index":3507,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{}}}],["window.component.ts:75",{"_index":3557,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:77",{"_index":3550,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:82",{"_index":3506,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:90",{"_index":3501,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:94",{"_index":3502,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:95",{"_index":3551,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:98",{"_index":3504,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:99",{"_index":3549,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.event",{"_index":1121,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["within",{"_index":706,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"index.html":{},"license.html":{}}}],["withinterceptor",{"_index":800,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["without",{"_index":826,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"index.html":{},"license.html":{}}}],["won't",{"_index":1688,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["work",{"_index":3768,"title":{},"body":{"classes/NamespaceModel.html":{},"index.html":{},"license.html":{}}}],["worked",{"_index":1641,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["workingfields",{"_index":2774,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["works",{"_index":4379,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":4426,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":342,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["write",{"_index":986,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["writefile",{"_index":929,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["writefile(filecontent",{"_index":982,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["writing",{"_index":822,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["written",{"_index":4401,"title":{},"body":{"license.html":{}}}],["wudget",{"_index":3870,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["x",{"_index":1163,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["x5b",{"_index":3668,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["x5d",{"_index":3670,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["xml",{"_index":221,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["xmlinspectionserviceurl",{"_index":4614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xmlservicespackageprefix",{"_index":131,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["xsd",{"_index":4260,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["xsrf",{"_index":343,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"miscellaneous/variables.html":{}}}],["xsrf.service",{"_index":889,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["xsrf.service.ts",{"_index":308,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"coverage.html":{}}}],["xsrf.service.ts:19",{"_index":326,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{}}}],["xsrf.service.ts:20",{"_index":323,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{}}}],["xsrf.service.ts:32",{"_index":373,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{}}}],["xsrf.service.ts:33",{"_index":370,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{}}}],["xsrfcookiename",{"_index":73,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["xsrfdefaulttokenvalue",{"_index":74,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["xsrfheadername",{"_index":72,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["y",{"_index":1164,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["yarn",{"_index":4309,"title":{},"body":{"index.html":{}}}],["yes",{"_index":1508,"title":{},"body":{"classes/ErrorInfo.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{}}}],["yoffset",{"_index":2402,"title":{},"body":{"classes/LineModel.html":{}}}],["yyyy",{"_index":4592,"title":{},"body":{"license.html":{}}}],["zero_to_one",{"_index":1800,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"miscellaneous/enumerations.html":{}}}],["zerobasedindex",{"_index":3486,"title":{},"body":{"classes/MappingUtil.html":{}}}],["zip",{"_index":2187,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["zone.js",{"_index":4250,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":794,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AdmRedrawMappingLinesEvent.html":{"url":"classes/AdmRedrawMappingLinesEvent.html","title":"class - AdmRedrawMappingLinesEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdmRedrawMappingLinesEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/config.model.ts\n        \n\n            \n                Description\n            \n            \n                Place all custom events here.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _lmcInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _lmcInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:333\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NGXLogger, NgxLoggerLevel } from 'ngx-logger';\nimport { environment } from '../../../../environments/environment';\nimport { MappingDefinition } from './mapping-definition.model';\nimport { DocumentDefinition } from './document-definition.model';\n\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { DocumentManagementService } from '../services/document-management.service';\nimport { MappingManagementService } from '../services/mapping-management.service';\nimport { InitializationService } from '../services/initialization.service';\nimport { ErrorInfo } from '../models/error.model';\n\nimport { DocumentType, InspectionType, CollectionType } from '../common/config.types';\nimport { FieldActionService } from '../services/field-action.service';\nimport { FileManagementService } from '../services/file-management.service';\n\nexport class DataMapperInitializationModel {\n  dataMapperVersion = '0.9.2017.07.28';\n  initialized = false;\n  loadingStatus = 'Loading.';\n  admHttpTimeout = 30000;  // 30 seconds\n  initializationErrorOccurred = false;\n\n  baseJavaInspectionServiceUrl: string;\n  baseXMLInspectionServiceUrl: string;\n  baseJSONInspectionServiceUrl: string;\n  baseMappingServiceUrl: string;\n\n  xsrfHeaderName: string;\n  xsrfCookieName: string;\n  xsrfDefaultTokenValue: string;\n\n  /* class path fetching configuration */\n  classPathFetchTimeoutInMilliseconds = 30000;\n  // if classPath is specified, maven call to resolve pom will be skipped\n  pomPayload: string;\n\n  classPath: string;\n\n  /* inspection service filtering flags */\n  fieldNameBlacklist: string[] = [];\n  classNameBlacklist: string[] = [];\n  disablePrivateOnlyFields = false;\n  disableProtectedOnlyFields = false;\n  disablePublicOnlyFields = false;\n  disablePublicGetterSetterFields = false;\n\n  disableMappingPreviewMode = false;\n\n  /* enable the navigation bar and import/export */\n  disableNavbar = true;\n\n  mappingInitialized = false;\n\n  constructor() {\n    if (environment.xsrf) {\n      this.xsrfHeaderName = environment.xsrf.headerName;\n      this.xsrfCookieName = environment.xsrf.cookieName;\n      this.xsrfDefaultTokenValue = environment.xsrf.defaultTokenValue;\n    }\n  }\n\n}\n\nexport class DocumentInitializationModel {\n  id: string;\n  type: DocumentType;\n  name: string;\n  description: string;\n  isSource: boolean;\n  showFields = true;\n  inspectionType: InspectionType;\n  inspectionSource: string;\n  inspectionResult: string;\n  selectedRoot: string;\n  collectionType: CollectionType;\n  collectionClassName: string;\n}\n\nexport class ConfigModel {\n  static mappingServicesPackagePrefix = 'io.atlasmap.v2';\n  static javaServicesPackagePrefix = 'io.atlasmap.java.v2';\n  static jsonServicesPackagePrefix = 'io.atlasmap.json.v2';\n  static xmlServicesPackagePrefix = 'io.atlasmap.xml.v2';\n  private static cfg: ConfigModel = new ConfigModel();\n\n  initCfg: DataMapperInitializationModel = new DataMapperInitializationModel;\n\n  /* current ui state config */\n  showMappingDetailTray = false;\n  showMappingTable = false;\n  showNamespaceTable = false;\n  showLinesAlways = true;\n  showTypes = false;\n  showMappedFields = true;\n  showUnmappedFields = true;\n  _showMappingPreview = false;\n  currentDraggedField: any = null;\n\n  documentService: DocumentManagementService;\n  mappingService: MappingManagementService;\n  errorService: ErrorHandlerService;\n  initializationService: InitializationService;\n  fieldActionService: FieldActionService;\n  fileService: FileManagementService;\n\n  sourceDocs: DocumentDefinition[] = [];\n  targetDocs: DocumentDefinition[] = [];\n  propertyDoc: DocumentDefinition = new DocumentDefinition();\n  constantDoc: DocumentDefinition = new DocumentDefinition();\n  mappingFiles: string[] = [];\n\n  mappings: MappingDefinition = null;\n\n  preloadedFieldActionMetadata: any;\n\n  errors: ErrorInfo[] = [];\n  validationErrors: ErrorInfo[] = [];\n\n  logger: NGXLogger;\n\n  constructor() {\n    this.propertyDoc.type = DocumentType.PROPERTY;\n    this.propertyDoc.name = 'Properties';\n    this.propertyDoc.isSource = true;\n    this.propertyDoc.showFields = false;\n    this.constantDoc.type = DocumentType.CONSTANT;\n    this.constantDoc.name = 'Constants';\n    this.constantDoc.isSource = true;\n    this.constantDoc.showFields = false;\n  }\n\n  static getConfig(): ConfigModel {\n    return ConfigModel.cfg;\n  }\n\n  static setConfig(cfg: ConfigModel): void {\n    ConfigModel.cfg = cfg;\n  }\n\n  set showMappingPreview(show: boolean) {\n    if (show && !this._showMappingPreview) {\n      this.mappingService.enableMappingPreview();\n    } else if (!show && this._showMappingPreview) {\n      this.mappingService.disableMappingPreview();\n    }\n    this._showMappingPreview = show;\n  }\n\n  get showMappingPreview(): boolean {\n    return this._showMappingPreview;\n  }\n\n  isDebugEnabled(): boolean {\n    return [NgxLoggerLevel.DEBUG, NgxLoggerLevel.TRACE].includes(this.logger.getConfigSnapshot().level);\n  }\n\n  isTraceEnabled(): boolean {\n    return this.logger.getConfigSnapshot().level === NgxLoggerLevel.TRACE;\n  }\n\n  addDocument(docInitModel: DocumentInitializationModel): DocumentDefinition {\n    const docDef: DocumentDefinition = new DocumentDefinition();\n    docDef.initModel = docInitModel;\n    docDef.id = docInitModel.id;\n    docDef.type = docInitModel.type;\n    docDef.name = docInitModel.name;\n    docDef.description = docInitModel.description;\n    docDef.isSource = docInitModel.isSource;\n    docDef.showFields = docInitModel.showFields;\n    docDef.inspectionType = docInitModel.inspectionType;\n    docDef.inspectionSource = docInitModel.inspectionSource;\n    docDef.inspectionResult = docInitModel.inspectionResult;\n    docDef.selectedRoot = docInitModel.selectedRoot;\n\n    if (docDef.type === DocumentType.XSD) {\n      docDef.uri = 'atlas:' + 'xml' + ':' + docDef.id;\n    } else if (docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri = 'atlas:' + 'java' + ':' + docDef.id;\n    } else {\n      docDef.uri = 'atlas:' + docDef.type.toLowerCase() + ':' + docDef.id;\n    }\n\n    if (docDef.type === DocumentType.JAVA || docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri += '?className=' + docDef.inspectionSource;\n      if (docInitModel.collectionType && docInitModel.collectionType !== CollectionType.NONE) {\n        docDef.uri += '&collectionType=' + docInitModel.collectionType;\n        if (docInitModel.collectionClassName) {\n          docDef.uri += '&collectionClassName=' + docInitModel.collectionClassName;\n        }\n      }\n    }\n\n    if (docInitModel.isSource) {\n      this.sourceDocs.push(docDef);\n    } else {\n      this.targetDocs.push(docDef);\n    }\n    return docDef;\n  }\n\n  addDocuments(docModels: DocumentInitializationModel[]): DocumentDefinition[] {\n    const docDefs: DocumentDefinition[] = [];\n    for (const docModel of docModels) {\n      docDefs.push(this.addDocument(docModel));\n    }\n    return docDefs;\n  }\n\n  getDocsWithoutPropertyDoc(isSource: boolean): DocumentDefinition[] {\n    return [].concat(isSource ? this.sourceDocs : this.targetDocs);\n  }\n\n  getDocs(isSource: boolean): DocumentDefinition[] {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    return isSource ? [this.propertyDoc, this.constantDoc].concat(docs) : docs;\n  }\n\n  /**\n   * Return a uri:DocumentDefinition document map for either the sources or targets panel contents.\n   *\n   * @param cfg\n   * @param isSource\n   */\n  getDocUriMap(cfg: ConfigModel, isSource: boolean): {[key: string]: DocumentDefinition} {\n    const docMap: {[key: string]: DocumentDefinition} = {};\n    for (const doc of cfg.getDocs(isSource)) {\n      docMap[doc.uri] = doc;\n    }\n    return docMap;\n  }\n\n  /**\n   * Clear source/target/mapping documents from the model.  Reset constant and property document definitions.\n   */\n  clearDocs(): void {\n    this.sourceDocs = [];\n    this.targetDocs = [];\n    this.propertyDoc.clearFields();\n    this.constantDoc.clearFields();\n    this.mappingFiles = [];\n  }\n\n  hasJavaDocuments(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isClassPathResolutionNeeded(): boolean {\n    if (this.initCfg.classPath) {\n      return false;\n    }\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA && doc.inspectionResult == null) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getDocForIdentifier(documentId: string, isSource: boolean): DocumentDefinition {\n    for (const d of this.getDocs(isSource)) {\n      if (d.id === documentId) {\n        return d;\n      }\n    }\n    return null;\n  }\n\n  getFirstXmlDoc(isSource: boolean) {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    for (const doc of docs) {\n      if (doc.type === DocumentType.XML) {\n        return doc;\n      }\n    }\n    return null;\n  }\n\n  getAllDocs(): DocumentDefinition[] {\n    return [this.propertyDoc, this.constantDoc].concat(this.sourceDocs).concat(this.targetDocs);\n  }\n\n  documentsAreLoaded(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (!doc.initialized) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Validate the specified field value, generating a validation error if not defined.\n   * @param value - field to validate\n   * @param fieldDescription - used in error diagnostic\n   */\n  isRequiredFieldValid(value: string, fieldDescription: string): boolean {\n\n    if (value == null || '' === value) {\n      const errorMessage: string = fieldDescription + ' is required.';\n      this.errorService.validationError(errorMessage, null);\n      return false;\n    }\n    return true;\n  }\n\n}\n\n/**\n * Place all custom events here.\n */\nexport class AdmRedrawMappingLinesEvent {\n  _lmcInstance: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiHttpXsrfTokenExtractor.html":{"url":"injectables/ApiHttpXsrfTokenExtractor.html","title":"injectable - ApiHttpXsrfTokenExtractor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiHttpXsrfTokenExtractor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts\n        \n\n            \n                Description\n            \n            \n                Override the stock @angular HTTP package token extractor to not fetch cookies from\nthe Window document.  Return a default token value instead.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cfg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpXsrfTokenExtractor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ConfigModel } from '../models/config.model';\n\n/**\n * Override the stock @angular HTTP package token extractor to *not* fetch cookies from\n * the Window document.  Return a default token value instead.\n */\n@Injectable()\nexport class ApiHttpXsrfTokenExtractor implements HttpXsrfTokenExtractor {\n  private cfg = ConfigModel.getConfig();\n  getToken(): string {\n    return this.cfg.initCfg.xsrfDefaultTokenValue;\n  }\n}\n\n/**\n * Override the stock @angular HTTP package request interceptor method to wrap the request\n * with default XSRF header name and token value.\n */\n@Injectable()\nexport class ApiXsrfInterceptor implements HttpInterceptor {\n\n  private cfg = ConfigModel.getConfig();\n  intercept(httpRequest: HttpRequest, next: HttpHandler): Observable> {\n    /*\n      ADM doesn't need/use cookies so we'll use the default token value initialized from the environment when\n      adding the XSRF header to HTTP requests.  This will avoid the need to read cookies from local storage.\n    */\n    if (this.cfg.initCfg.xsrfHeaderName) {\n      // const token = this.tokenExtractor.getToken() || this.cfg.initCfg.xsrfDefaultTokenValue;\n      const token = this.cfg.initCfg.xsrfDefaultTokenValue;\n      const headerName = this.cfg.initCfg.xsrfHeaderName;\n\n      if (!httpRequest.headers.has(headerName)) {\n        httpRequest = httpRequest.clone({ headers: httpRequest.headers.set(headerName, token) });\n      }\n    }\n    return next.handle(httpRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ApiXsrfInterceptor.html":{"url":"interceptors/ApiXsrfInterceptor.html","title":"interceptor - ApiXsrfInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ApiXsrfInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts\n        \n\n            \n                Description\n            \n            \n                Override the stock @angular HTTP package request interceptor method to wrap the request\nwith default XSRF header name and token value.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cfg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(httpRequest: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    httpRequest\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts:32\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpXsrfTokenExtractor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ConfigModel } from '../models/config.model';\n\n/**\n * Override the stock @angular HTTP package token extractor to *not* fetch cookies from\n * the Window document.  Return a default token value instead.\n */\n@Injectable()\nexport class ApiHttpXsrfTokenExtractor implements HttpXsrfTokenExtractor {\n  private cfg = ConfigModel.getConfig();\n  getToken(): string {\n    return this.cfg.initCfg.xsrfDefaultTokenValue;\n  }\n}\n\n/**\n * Override the stock @angular HTTP package request interceptor method to wrap the request\n * with default XSRF header name and token value.\n */\n@Injectable()\nexport class ApiXsrfInterceptor implements HttpInterceptor {\n\n  private cfg = ConfigModel.getConfig();\n  intercept(httpRequest: HttpRequest, next: HttpHandler): Observable> {\n    /*\n      ADM doesn't need/use cookies so we'll use the default token value initialized from the environment when\n      adding the XSRF header to HTTP requests.  This will avoid the need to read cookies from local storage.\n    */\n    if (this.cfg.initCfg.xsrfHeaderName) {\n      // const token = this.tokenExtractor.getToken() || this.cfg.initCfg.xsrfDefaultTokenValue;\n      const token = this.cfg.initCfg.xsrfDefaultTokenValue;\n      const headerName = this.cfg.initCfg.xsrfHeaderName;\n\n      if (!httpRequest.headers.has(headerName)) {\n        httpRequest = httpRequest.clone({ headers: httpRequest.headers.set(headerName, token) });\n      }\n    }\n    return next.handle(httpRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atlasmap-dev-root\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'atlasmap-dev-root',\n  template: '',\n})\n\nexport class AppComponent { }\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClassNameComponent.html":{"url":"components/ClassNameComponent.html","title":"component - ClassNameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ClassNameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/class-name.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                class-name\n            \n\n\n\n\n            \n                templateUrl\n                ./class-name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                docDef\n                            \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                isSource\n                            \n                            \n                                userClassName\n                            \n                            \n                                userCollectionClassName\n                            \n                            \n                                userCollectionType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                collectionTypeSelectionChanged\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                parentSelectionChanged\n                            \n                            \n                                valueExistsOnCreation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:37\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            collectionTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncollectionTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(field: Field, docDef: DocumentDefinition, isAdd: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docDef\n                                    \n                                                DocumentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isAdd\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parentSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nparentSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueExistsOnCreation\n                        \n                        \n                    \n                \n            \n            \n                \nvalueExistsOnCreation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('class')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userClassName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userCollectionClassName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userCollectionType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CollectionType.NONE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { DocumentDefinition } from '../models/document-definition.model';\nimport { Field } from '../models/field.model';\nimport { ConfigModel } from '../models/config.model';\nimport { ModalWindowValidator } from './modal-window.component';\nimport { CollectionType } from '../common/config.types';\n\n@Component({\n  selector: 'class-name',\n  templateUrl: './class-name.component.html',\n})\n\nexport class ClassNameComponent implements ModalWindowValidator {\n  cfg: ConfigModel = ConfigModel.getConfig();\n  isSource: boolean;\n  userClassName: string = null;\n  userCollectionType = CollectionType.NONE;\n  userCollectionClassName = null;\n  docDef: DocumentDefinition = null;\n  @ViewChild('class') private focusEl: ElementRef;\n\n  constructor() {\n  }\n\n  initialize(field: Field, docDef: DocumentDefinition, isAdd: boolean): void {\n    this.docDef = docDef;\n    this.userClassName = '';\n  }\n\n  parentSelectionChanged(event: any): void {\n  }\n\n  isDataValid(): boolean {\n    return ConfigModel.getConfig().isRequiredFieldValid(this.userClassName, 'Class name');\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n  valueExistsOnCreation(): boolean {\n    return false;\n  }\n\n  collectionTypeSelectionChanged(event: any) {\n      this.userCollectionType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n}\n\n    \n\n    \n        \n\n  \n    Class package name:\n      \n    \n    Collection Type:\n      \n        NONE\n        ARRAY\n        LIST\n        Map -->\n      \n    \n    Collection class name:\n      \n    \n    \n      Class name has already been established.\n          \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Class package name:              Collection Type:              NONE        ARRAY        LIST        Map -->              Collection class name:                    Class name has already been established.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ClassNameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CollapsableHeaderComponent.html":{"url":"components/CollapsableHeaderComponent.html","title":"component - CollapsableHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CollapsableHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/collapsable-header.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                collapsable-header\n            \n\n\n\n\n            \n                templateUrl\n                ./collapsable-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCSSClass\n                            \n                            \n                                handleMouseClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                collapsed\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        collapsed\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/collapsable-header.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/collapsable-header.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/collapsable-header.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseClick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/collapsable-header.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'collapsable-header',\n  templateUrl: './collapsable-header.component.html',\n})\n\nexport class CollapsableHeaderComponent {\n  @Input() title: string;\n  @Input() collapsed = false;\n\n  handleMouseClick(event: MouseEvent): void {\n    this.collapsed = !this.collapsed;\n  }\n\n  getCSSClass() {\n    return 'arrow fa fa-angle-' + (this.collapsed ? 'right' : 'down');\n  }\n}\n\n    \n\n    \n        \n  \n    {{ title }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ title }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'CollapsableHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConstantFieldEditComponent.html":{"url":"components/ConstantFieldEditComponent.html","title":"component - ConstantFieldEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConstantFieldEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                constant-field-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./constant-field-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                docDef\n                            \n                            \n                                field\n                            \n                            \n                                fieldMode\n                            \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                isClosing\n                            \n                            \n                                modalWindowComponent\n                            \n                            \n                                valueType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getField\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                valueExistsOnCreation\n                            \n                            \n                                valueTypeSelectionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getField\n                        \n                        \n                    \n                \n            \n            \n                \ngetField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Field\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(field: Field, docDef: DocumentDefinition, mwc: ModalWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docDef\n                                    \n                                                DocumentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mwc\n                                    \n                                                ModalWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueExistsOnCreation\n                        \n                        \n                    \n                \n            \n            \n                \nvalueExistsOnCreation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:78\n                \n            \n\n\n            \n                \n                    Return true and disable the save button if the constant field already exists on creation, return false\nand enable the save button otherwise.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nvalueTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                    \n                        \n                            Default value : new Field()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('value')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isClosing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalWindowComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { DocumentType, FieldMode } from '../common/config.types';\n\nimport { ConfigModel } from '../models/config.model';\nimport { DocumentDefinition } from '../models/document-definition.model';\nimport { Field } from '../models/field.model';\nimport { ModalWindowComponent, ModalWindowValidator } from './modal-window.component';\n\n@Component({\n  selector: 'constant-field-edit',\n  templateUrl: './constant-field-edit.component.html',\n})\n\nexport class ConstantFieldEditComponent implements ModalWindowValidator {\n  field: Field = new Field();\n  fieldMode: FieldMode;\n  valueType: any = 'STRING';\n  docDef: DocumentDefinition;\n  modalWindowComponent: ModalWindowComponent;\n  isClosing: boolean;\n  @ViewChild('value') private focusEl: ElementRef;\n\n  initialize(field: Field, docDef: DocumentDefinition, mwc: ModalWindowComponent): void {\n    if (field != null) {\n      this.valueType = field.type;\n      this.fieldMode = FieldMode.EDIT;\n    } else { this.fieldMode = FieldMode.CREATE; }\n\n    this.field = field == null ? new Field() : field.copy();\n    this.docDef = docDef;\n    this.modalWindowComponent = mwc;\n    this.isClosing = false;\n  }\n\n  valueTypeSelectionChanged(event: any): void {\n    this.valueType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  getField(): Field {\n    this.field.displayName = this.field.value;\n    this.field.name = this.field.value;\n    this.field.path = this.field.value;\n    this.field.type = this.valueType;\n    this.field.userCreated = true;\n    this.field.docDef = this.docDef;\n    return this.field;\n  }\n\n  isDataValid(): boolean {\n    return ConfigModel.getConfig().isRequiredFieldValid(this.field.value, 'Value');\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n  /**\n   * Return true and disable the save button if the constant field already exists on creation, return false\n   * and enable the save button otherwise.\n   */\n  valueExistsOnCreation(): boolean {\n    if (this.isClosing) {\n      return false;\n    }\n    if (this.fieldMode === FieldMode.CREATE && this.docDef != null &&\n        this.docDef.fieldExists(this.getField(), DocumentType.CONSTANT)) {\n      this.modalWindowComponent.confirmButtonDisabled = true;\n      return true;\n    }\n    this.modalWindowComponent.confirmButtonDisabled = false;\n    return false;\n  }\n}\n\n    \n\n    \n        \n  \n    Value:\n    \n    \n      Constant value already exists.\n    \n  \n  \n    Value Type:\n    \n      Boolean\n      Big Integer\n      Byte\n      ByteArray\n      Char\n      Complex\n      Decimal\n      Double\n      Float\n      Integer\n      Long\n      Short\n      String\n      Time\n      Date\n      DateTime\n      DateTZ\n      TimeTZ\n      DateTimeTZ\n      Unsigned Byte\n      Unsigned Integer\n      Unsigned Long\n      Unsigned Short\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Value:              Constant value already exists.            Value Type:          Boolean      Big Integer      Byte      ByteArray      Char      Complex      Decimal      Double      Float      Integer      Long      Short      String      Time      Date      DateTime      DateTZ      TimeTZ      DateTimeTZ      Unsigned Byte      Unsigned Integer      Unsigned Long      Unsigned Short      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConstantFieldEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataMapperAppExampleHostComponent.html":{"url":"components/DataMapperAppExampleHostComponent.html","title":"component - DataMapperAppExampleHostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataMapperAppExampleHostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                MappingManagementService\n                                ErrorHandlerService\n                                DocumentManagementService\n                \n            \n\n\n            \n                selector\n                data-mapper-example-host\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataMapperComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(initializationService: InitializationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initializationService\n                                                  \n                                                        \n                                                                        InitializationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataMapperComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataMapperAppComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dataMapperComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, OnInit, OnDestroy } from '@angular/core';\nimport { ConfigModel } from '../models/config.model';\n\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { DocumentManagementService } from '../services/document-management.service';\nimport { MappingManagementService } from '../services/mapping-management.service';\nimport { InitializationService } from '../services/initialization.service';\n\nimport { DataMapperAppComponent } from './data-mapper-app.component';\nimport { environment } from '../../../../environments/environment';\nimport { Examples } from '../models/examples';\n\n@Component({\n  selector: 'data-mapper-example-host',\n  template: '',\n  providers: [MappingManagementService, ErrorHandlerService, DocumentManagementService],\n})\n\nexport class DataMapperAppExampleHostComponent implements OnInit {\n\n  @ViewChild('dataMapperComponent')\n  dataMapperComponent: DataMapperAppComponent;\n\n  constructor(private initializationService: InitializationService) { }\n\n  ngOnInit() {\n    // initialize config information before initializing services\n    const c: ConfigModel = this.initializationService.cfg;\n\n    // store references to our services in our config model\n\n    // initialize base urls for our service calls\n    c.initCfg.baseJavaInspectionServiceUrl = environment.backendUrls.javaInspectionServiceUrl;\n    c.initCfg.baseXMLInspectionServiceUrl = environment.backendUrls.xmlInspectionServiceUrl;\n    c.initCfg.baseJSONInspectionServiceUrl = environment.backendUrls.jsonInspectionServiceUrl;\n    c.initCfg.baseMappingServiceUrl = environment.backendUrls.atlasServiceUrl;\n\n    if (environment.xsrf) {\n      c.initCfg.xsrfHeaderName = environment.xsrf.headerName;\n      c.initCfg.xsrfCookieName = environment.xsrf.cookieName;\n      c.initCfg.xsrfDefaultTokenValue = environment.xsrf.defaultTokenValue;\n    }\n\n    // initialize data for our class path service call\n    // note that quotes, newlines, and tabs are escaped\n    c.initCfg.pomPayload = Examples.pom;\n    c.initCfg.classPathFetchTimeoutInMilliseconds = 30000;\n    // if classPath is specified, maven call to resolve pom will be skipped\n    c.initCfg.classPath = null;\n\n    // enable mapping preview mode for standalone\n    c.initCfg.disableMappingPreviewMode = false;\n\n    // enable the navigation bar and import/export for stand-alone\n    c.initCfg.disableNavbar = false;\n\n    // initialize system\n    this.initializationService.initialize();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DataMapperAppExampleHostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataMapperErrorComponent.html":{"url":"components/DataMapperErrorComponent.html","title":"component - DataMapperErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataMapperErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                data-mapper-error\n            \n\n\n\n\n            \n                templateUrl\n                ./data-mapper-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                    Private\n                                elem\n                            \n                            \n                                isOpen\n                            \n                            \n                                    Private\n                                mouseEventTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                errorServiceRequired\n                            \n                            \n                                getConfig\n                            \n                            \n                                getErrors\n                            \n                            \n                                getFirstError\n                            \n                            \n                                getFirstWarning\n                            \n                            \n                                getInfos\n                            \n                            \n                                getWarnings\n                            \n                            \n                                handleAlertClose\n                            \n                            \n                                handleClick\n                            \n                            \n                                handleMouseEnter\n                            \n                            \n                                handleMouseLeave\n                            \n                            \n                                    Private\n                                showActiveErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorService\n                            \n                            \n                                isValidation\n                            \n                            \n                                modalErrorWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorService\n                    \n                \n                \n                    \n                        Type :         ErrorHandlerService\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isValidation\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalErrorWindow\n                    \n                \n                \n                    \n                        Type :         ModalErrorWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            errorServiceRequired\n                        \n                        \n                    \n                \n            \n            \n                \nerrorServiceRequired()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:43\n                \n            \n\n\n            \n                \n                    Return true if an error window is necessary, false otherwise.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ConfigModel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFirstError\n                        \n                        \n                    \n                \n            \n            \n                \ngetFirstError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:120\n                \n            \n\n\n            \n                \n                    The fixed error window only needs to show one error.  The full collection of errors is\navailable from the error modal window.\n\n\n                    \n                        Returns :         ErrorInfo\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFirstWarning\n                        \n                        \n                    \n                \n            \n            \n                \ngetFirstWarning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:128\n                \n            \n\n\n            \n                \n                    The fixed error window only needs to show one warning.  The full collection of warnings is\navailable from the error modal window.\n\n\n                    \n                        Returns :         ErrorInfo\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInfos\n                        \n                        \n                    \n                \n            \n            \n                \ngetInfos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWarnings\n                        \n                        \n                    \n                \n            \n            \n                \ngetWarnings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleAlertClose\n                        \n                        \n                    \n                \n            \n            \n                \nhandleAlertClose(e: ErrorInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                ErrorInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleClick(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseEnter\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseEnter(evt1: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:82\n                \n            \n\n\n            \n                \n                    Handle the event of a user mousing over the error window.  If they stay within the window\nfor a half-second then the active errors modal will show all of the errors/ warnings.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt1\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseLeave\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseLeave(evt1: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:97\n                \n            \n\n\n            \n                \n                    Handle the event of a user mousing out of the error window.  Disarm the event timer if that case.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt1\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            showActiveErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showActiveErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:107\n                \n            \n\n\n            \n                \n                    Show all errors/ warnings in a separate modal window.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            elem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mouseEventTimer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild } from '@angular/core';\n\nimport { ModalErrorWindowComponent } from './modal-error-window.component';\n\nimport { ErrorInfo, ErrorLevel } from '../models/error.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { ConfigModel } from '../models/config.model';\n\n@Component({\n  selector: 'data-mapper-error',\n  templateUrl: './data-mapper-error.component.html',\n})\n\nexport class DataMapperErrorComponent {\n  @Input() errorService: ErrorHandlerService;\n  @Input() isValidation = false;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  private elem = null;\n  private mouseEventTimer = null;\n  isOpen = true;\n  cfg: ConfigModel = null;\n\n  /**\n   * Return true if an error window is necessary, false otherwise.\n   */\n  errorServiceRequired(): boolean {\n    const cfg = ConfigModel.getConfig();\n    return (this.errorService && (cfg.validationErrors.length > 0 || cfg.errors.length > 0));\n  }\n\n  getErrors(): ErrorInfo[] {\n    return this.isValidation ? ConfigModel.getConfig().validationErrors.filter(e => e.level >= ErrorLevel.ERROR)\n      : ConfigModel.getConfig().errors.filter(e => e.level >= ErrorLevel.ERROR);\n  }\n\n  getWarnings(): ErrorInfo[] {\n    return this.isValidation ? ConfigModel.getConfig().validationErrors.filter(e => e.level === ErrorLevel.WARN)\n      : ConfigModel.getConfig().errors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  getInfos(): ErrorInfo[] {\n    return this.isValidation ? ConfigModel.getConfig().validationErrors.filter(e => e.level === ErrorLevel.INFO)\n      : ConfigModel.getConfig().errors.filter(e => e.level === ErrorLevel.INFO);\n  }\n\n  handleClick(event: any) {\n    const errorIdentifier = event.target.attributes.getNamedItem('errorIdentifier');\n    if (errorIdentifier && errorIdentifier.value) {\n      ConfigModel.getConfig().mappings.activeMapping.removeValidationError(errorIdentifier.value);\n      this.errorService.removeError(errorIdentifier.value);\n    }\n  }\n\n  handleAlertClose(e: ErrorInfo): void {\n    this.isOpen = true;\n    this.errorService.removeError(e.identifier);\n  }\n\n  /**\n   * Handle the event of a user mousing over the error window.  If they stay within the window\n   * for a half-second then the active errors modal will show all of the errors/ warnings.\n   *\n   * @param evt1\n   */\n  handleMouseEnter(evt1: MouseEvent): void {\n    this.mouseEventTimer =  setTimeout(() => {\n        if (this.elem != null) {\n            evt1.stopPropagation();\n            evt1.preventDefault();\n          }\n      this.showActiveErrors();\n    }, 500);\n  }\n\n  /**\n   * Handle the event of a user mousing out of the error window.  Disarm the event timer if that case.\n   *\n   * @param evt1\n   */\n  handleMouseLeave(evt1: MouseEvent): void {\n    if (this.mouseEventTimer) {\n      clearTimeout(this.mouseEventTimer);\n    }\n    this.mouseEventTimer = null;\n  }\n\n  /**\n   * Show all errors/ warnings in a separate modal window.\n   */\n  private showActiveErrors(): void {\n    this.modalErrorWindow.reset();\n    this.modalErrorWindow.show();\n  }\n\n  getConfig(): ConfigModel {\n    return ConfigModel.getConfig();\n  }\n\n  /**\n   * The fixed error window only needs to show one error.  The full collection of errors is\n   * available from the error modal window.\n   */\n  getFirstError(): ErrorInfo {\n    return this.getErrors()[0];\n  }\n\n  /**\n   * The fixed error window only needs to show one warning.  The full collection of warnings is\n   * available from the error modal window.\n   */\n  getFirstWarning(): ErrorInfo {\n    return this.getWarnings()[0];\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    {{ i.message }}\n  \n\n  \n    \n    {{ getFirstWarning().message }}\n  \n\n  \n    \n    {{ getFirstError().message }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ i.message }}            {{ getFirstWarning().message }}            {{ getFirstError().message }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DataMapperErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataMapperInitializationModel.html":{"url":"classes/DataMapperInitializationModel.html","title":"class - DataMapperInitializationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataMapperInitializationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/config.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                admHttpTimeout\n                            \n                            \n                                baseJavaInspectionServiceUrl\n                            \n                            \n                                baseJSONInspectionServiceUrl\n                            \n                            \n                                baseMappingServiceUrl\n                            \n                            \n                                baseXMLInspectionServiceUrl\n                            \n                            \n                                classNameBlacklist\n                            \n                            \n                                classPath\n                            \n                            \n                                classPathFetchTimeoutInMilliseconds\n                            \n                            \n                                dataMapperVersion\n                            \n                            \n                                disableMappingPreviewMode\n                            \n                            \n                                disableNavbar\n                            \n                            \n                                disablePrivateOnlyFields\n                            \n                            \n                                disableProtectedOnlyFields\n                            \n                            \n                                disablePublicGetterSetterFields\n                            \n                            \n                                disablePublicOnlyFields\n                            \n                            \n                                fieldNameBlacklist\n                            \n                            \n                                initializationErrorOccurred\n                            \n                            \n                                initialized\n                            \n                            \n                                loadingStatus\n                            \n                            \n                                mappingInitialized\n                            \n                            \n                                pomPayload\n                            \n                            \n                                xsrfCookieName\n                            \n                            \n                                xsrfDefaultTokenValue\n                            \n                            \n                                xsrfHeaderName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:68\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admHttpTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseJavaInspectionServiceUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseJSONInspectionServiceUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseMappingServiceUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseXMLInspectionServiceUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            classNameBlacklist\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            classPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            classPathFetchTimeoutInMilliseconds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataMapperVersion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0.9.2017.07.28'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableMappingPreviewMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableNavbar\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disablePrivateOnlyFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableProtectedOnlyFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disablePublicGetterSetterFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disablePublicOnlyFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldNameBlacklist\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initializationErrorOccurred\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Loading.'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappingInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pomPayload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xsrfCookieName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xsrfDefaultTokenValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xsrfHeaderName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NGXLogger, NgxLoggerLevel } from 'ngx-logger';\nimport { environment } from '../../../../environments/environment';\nimport { MappingDefinition } from './mapping-definition.model';\nimport { DocumentDefinition } from './document-definition.model';\n\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { DocumentManagementService } from '../services/document-management.service';\nimport { MappingManagementService } from '../services/mapping-management.service';\nimport { InitializationService } from '../services/initialization.service';\nimport { ErrorInfo } from '../models/error.model';\n\nimport { DocumentType, InspectionType, CollectionType } from '../common/config.types';\nimport { FieldActionService } from '../services/field-action.service';\nimport { FileManagementService } from '../services/file-management.service';\n\nexport class DataMapperInitializationModel {\n  dataMapperVersion = '0.9.2017.07.28';\n  initialized = false;\n  loadingStatus = 'Loading.';\n  admHttpTimeout = 30000;  // 30 seconds\n  initializationErrorOccurred = false;\n\n  baseJavaInspectionServiceUrl: string;\n  baseXMLInspectionServiceUrl: string;\n  baseJSONInspectionServiceUrl: string;\n  baseMappingServiceUrl: string;\n\n  xsrfHeaderName: string;\n  xsrfCookieName: string;\n  xsrfDefaultTokenValue: string;\n\n  /* class path fetching configuration */\n  classPathFetchTimeoutInMilliseconds = 30000;\n  // if classPath is specified, maven call to resolve pom will be skipped\n  pomPayload: string;\n\n  classPath: string;\n\n  /* inspection service filtering flags */\n  fieldNameBlacklist: string[] = [];\n  classNameBlacklist: string[] = [];\n  disablePrivateOnlyFields = false;\n  disableProtectedOnlyFields = false;\n  disablePublicOnlyFields = false;\n  disablePublicGetterSetterFields = false;\n\n  disableMappingPreviewMode = false;\n\n  /* enable the navigation bar and import/export */\n  disableNavbar = true;\n\n  mappingInitialized = false;\n\n  constructor() {\n    if (environment.xsrf) {\n      this.xsrfHeaderName = environment.xsrf.headerName;\n      this.xsrfCookieName = environment.xsrf.cookieName;\n      this.xsrfDefaultTokenValue = environment.xsrf.defaultTokenValue;\n    }\n  }\n\n}\n\nexport class DocumentInitializationModel {\n  id: string;\n  type: DocumentType;\n  name: string;\n  description: string;\n  isSource: boolean;\n  showFields = true;\n  inspectionType: InspectionType;\n  inspectionSource: string;\n  inspectionResult: string;\n  selectedRoot: string;\n  collectionType: CollectionType;\n  collectionClassName: string;\n}\n\nexport class ConfigModel {\n  static mappingServicesPackagePrefix = 'io.atlasmap.v2';\n  static javaServicesPackagePrefix = 'io.atlasmap.java.v2';\n  static jsonServicesPackagePrefix = 'io.atlasmap.json.v2';\n  static xmlServicesPackagePrefix = 'io.atlasmap.xml.v2';\n  private static cfg: ConfigModel = new ConfigModel();\n\n  initCfg: DataMapperInitializationModel = new DataMapperInitializationModel;\n\n  /* current ui state config */\n  showMappingDetailTray = false;\n  showMappingTable = false;\n  showNamespaceTable = false;\n  showLinesAlways = true;\n  showTypes = false;\n  showMappedFields = true;\n  showUnmappedFields = true;\n  _showMappingPreview = false;\n  currentDraggedField: any = null;\n\n  documentService: DocumentManagementService;\n  mappingService: MappingManagementService;\n  errorService: ErrorHandlerService;\n  initializationService: InitializationService;\n  fieldActionService: FieldActionService;\n  fileService: FileManagementService;\n\n  sourceDocs: DocumentDefinition[] = [];\n  targetDocs: DocumentDefinition[] = [];\n  propertyDoc: DocumentDefinition = new DocumentDefinition();\n  constantDoc: DocumentDefinition = new DocumentDefinition();\n  mappingFiles: string[] = [];\n\n  mappings: MappingDefinition = null;\n\n  preloadedFieldActionMetadata: any;\n\n  errors: ErrorInfo[] = [];\n  validationErrors: ErrorInfo[] = [];\n\n  logger: NGXLogger;\n\n  constructor() {\n    this.propertyDoc.type = DocumentType.PROPERTY;\n    this.propertyDoc.name = 'Properties';\n    this.propertyDoc.isSource = true;\n    this.propertyDoc.showFields = false;\n    this.constantDoc.type = DocumentType.CONSTANT;\n    this.constantDoc.name = 'Constants';\n    this.constantDoc.isSource = true;\n    this.constantDoc.showFields = false;\n  }\n\n  static getConfig(): ConfigModel {\n    return ConfigModel.cfg;\n  }\n\n  static setConfig(cfg: ConfigModel): void {\n    ConfigModel.cfg = cfg;\n  }\n\n  set showMappingPreview(show: boolean) {\n    if (show && !this._showMappingPreview) {\n      this.mappingService.enableMappingPreview();\n    } else if (!show && this._showMappingPreview) {\n      this.mappingService.disableMappingPreview();\n    }\n    this._showMappingPreview = show;\n  }\n\n  get showMappingPreview(): boolean {\n    return this._showMappingPreview;\n  }\n\n  isDebugEnabled(): boolean {\n    return [NgxLoggerLevel.DEBUG, NgxLoggerLevel.TRACE].includes(this.logger.getConfigSnapshot().level);\n  }\n\n  isTraceEnabled(): boolean {\n    return this.logger.getConfigSnapshot().level === NgxLoggerLevel.TRACE;\n  }\n\n  addDocument(docInitModel: DocumentInitializationModel): DocumentDefinition {\n    const docDef: DocumentDefinition = new DocumentDefinition();\n    docDef.initModel = docInitModel;\n    docDef.id = docInitModel.id;\n    docDef.type = docInitModel.type;\n    docDef.name = docInitModel.name;\n    docDef.description = docInitModel.description;\n    docDef.isSource = docInitModel.isSource;\n    docDef.showFields = docInitModel.showFields;\n    docDef.inspectionType = docInitModel.inspectionType;\n    docDef.inspectionSource = docInitModel.inspectionSource;\n    docDef.inspectionResult = docInitModel.inspectionResult;\n    docDef.selectedRoot = docInitModel.selectedRoot;\n\n    if (docDef.type === DocumentType.XSD) {\n      docDef.uri = 'atlas:' + 'xml' + ':' + docDef.id;\n    } else if (docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri = 'atlas:' + 'java' + ':' + docDef.id;\n    } else {\n      docDef.uri = 'atlas:' + docDef.type.toLowerCase() + ':' + docDef.id;\n    }\n\n    if (docDef.type === DocumentType.JAVA || docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri += '?className=' + docDef.inspectionSource;\n      if (docInitModel.collectionType && docInitModel.collectionType !== CollectionType.NONE) {\n        docDef.uri += '&collectionType=' + docInitModel.collectionType;\n        if (docInitModel.collectionClassName) {\n          docDef.uri += '&collectionClassName=' + docInitModel.collectionClassName;\n        }\n      }\n    }\n\n    if (docInitModel.isSource) {\n      this.sourceDocs.push(docDef);\n    } else {\n      this.targetDocs.push(docDef);\n    }\n    return docDef;\n  }\n\n  addDocuments(docModels: DocumentInitializationModel[]): DocumentDefinition[] {\n    const docDefs: DocumentDefinition[] = [];\n    for (const docModel of docModels) {\n      docDefs.push(this.addDocument(docModel));\n    }\n    return docDefs;\n  }\n\n  getDocsWithoutPropertyDoc(isSource: boolean): DocumentDefinition[] {\n    return [].concat(isSource ? this.sourceDocs : this.targetDocs);\n  }\n\n  getDocs(isSource: boolean): DocumentDefinition[] {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    return isSource ? [this.propertyDoc, this.constantDoc].concat(docs) : docs;\n  }\n\n  /**\n   * Return a uri:DocumentDefinition document map for either the sources or targets panel contents.\n   *\n   * @param cfg\n   * @param isSource\n   */\n  getDocUriMap(cfg: ConfigModel, isSource: boolean): {[key: string]: DocumentDefinition} {\n    const docMap: {[key: string]: DocumentDefinition} = {};\n    for (const doc of cfg.getDocs(isSource)) {\n      docMap[doc.uri] = doc;\n    }\n    return docMap;\n  }\n\n  /**\n   * Clear source/target/mapping documents from the model.  Reset constant and property document definitions.\n   */\n  clearDocs(): void {\n    this.sourceDocs = [];\n    this.targetDocs = [];\n    this.propertyDoc.clearFields();\n    this.constantDoc.clearFields();\n    this.mappingFiles = [];\n  }\n\n  hasJavaDocuments(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isClassPathResolutionNeeded(): boolean {\n    if (this.initCfg.classPath) {\n      return false;\n    }\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA && doc.inspectionResult == null) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getDocForIdentifier(documentId: string, isSource: boolean): DocumentDefinition {\n    for (const d of this.getDocs(isSource)) {\n      if (d.id === documentId) {\n        return d;\n      }\n    }\n    return null;\n  }\n\n  getFirstXmlDoc(isSource: boolean) {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    for (const doc of docs) {\n      if (doc.type === DocumentType.XML) {\n        return doc;\n      }\n    }\n    return null;\n  }\n\n  getAllDocs(): DocumentDefinition[] {\n    return [this.propertyDoc, this.constantDoc].concat(this.sourceDocs).concat(this.targetDocs);\n  }\n\n  documentsAreLoaded(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (!doc.initialized) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Validate the specified field value, generating a validation error if not defined.\n   * @param value - field to validate\n   * @param fieldDescription - used in error diagnostic\n   */\n  isRequiredFieldValid(value: string, fieldDescription: string): boolean {\n\n    if (value == null || '' === value) {\n      const errorMessage: string = fieldDescription + ' is required.';\n      this.errorService.validationError(errorMessage, null);\n      return false;\n    }\n    return true;\n  }\n\n}\n\n/**\n * Place all custom events here.\n */\nexport class AdmRedrawMappingLinesEvent {\n  _lmcInstance: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataMapperModule.html":{"url":"modules/DataMapperModule.html","title":"module - DataMapperModule","body":"\n                   \n\n\n\n\n    Modules\n    DataMapperModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataMapperModule\n\n\n\ncluster_DataMapperModule_declarations\n\n\n\ncluster_DataMapperModule_exports\n\n\n\ncluster_DataMapperModule_providers\n\n\n\n\nClassNameComponent\n\nClassNameComponent\n\n\n\nDataMapperModule\n\nDataMapperModule\n\nDataMapperModule -->\n\nClassNameComponent->DataMapperModule\n\n\n\n\n\nCollapsableHeaderComponent\n\nCollapsableHeaderComponent\n\nDataMapperModule -->\n\nCollapsableHeaderComponent->DataMapperModule\n\n\n\n\n\nConstantFieldEditComponent\n\nConstantFieldEditComponent\n\nDataMapperModule -->\n\nConstantFieldEditComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppComponent\n\nDataMapperAppComponent\n\nDataMapperModule -->\n\nDataMapperAppComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppExampleHostComponent\n\nDataMapperAppExampleHostComponent\n\nDataMapperModule -->\n\nDataMapperAppExampleHostComponent->DataMapperModule\n\n\n\n\n\nDataMapperErrorComponent\n\nDataMapperErrorComponent\n\nDataMapperModule -->\n\nDataMapperErrorComponent->DataMapperModule\n\n\n\n\n\nDocumentDefinitionComponent\n\nDocumentDefinitionComponent\n\nDataMapperModule -->\n\nDocumentDefinitionComponent->DataMapperModule\n\n\n\n\n\nDocumentFieldDetailComponent\n\nDocumentFieldDetailComponent\n\nDataMapperModule -->\n\nDocumentFieldDetailComponent->DataMapperModule\n\n\n\n\n\nEmptyModalBodyComponent\n\nEmptyModalBodyComponent\n\nDataMapperModule -->\n\nEmptyModalBodyComponent->DataMapperModule\n\n\n\n\n\nExpressionComponent\n\nExpressionComponent\n\nDataMapperModule -->\n\nExpressionComponent->DataMapperModule\n\n\n\n\n\nFieldEditComponent\n\nFieldEditComponent\n\nDataMapperModule -->\n\nFieldEditComponent->DataMapperModule\n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nDataMapperModule -->\n\nFocusDirective->DataMapperModule\n\n\n\n\n\nLineMachineComponent\n\nLineMachineComponent\n\nDataMapperModule -->\n\nLineMachineComponent->DataMapperModule\n\n\n\n\n\nLookupTableComponent\n\nLookupTableComponent\n\nDataMapperModule -->\n\nLookupTableComponent->DataMapperModule\n\n\n\n\n\nMappingDetailComponent\n\nMappingDetailComponent\n\nDataMapperModule -->\n\nMappingDetailComponent->DataMapperModule\n\n\n\n\n\nMappingFieldActionArgumentComponent\n\nMappingFieldActionArgumentComponent\n\nDataMapperModule -->\n\nMappingFieldActionArgumentComponent->DataMapperModule\n\n\n\n\n\nMappingFieldActionComponent\n\nMappingFieldActionComponent\n\nDataMapperModule -->\n\nMappingFieldActionComponent->DataMapperModule\n\n\n\n\n\nMappingFieldContainerComponent\n\nMappingFieldContainerComponent\n\nDataMapperModule -->\n\nMappingFieldContainerComponent->DataMapperModule\n\n\n\n\n\nMappingFieldDetailComponent\n\nMappingFieldDetailComponent\n\nDataMapperModule -->\n\nMappingFieldDetailComponent->DataMapperModule\n\n\n\n\n\nMappingListComponent\n\nMappingListComponent\n\nDataMapperModule -->\n\nMappingListComponent->DataMapperModule\n\n\n\n\n\nMappingListFieldComponent\n\nMappingListFieldComponent\n\nDataMapperModule -->\n\nMappingListFieldComponent->DataMapperModule\n\n\n\n\n\nMappingSelectionComponent\n\nMappingSelectionComponent\n\nDataMapperModule -->\n\nMappingSelectionComponent->DataMapperModule\n\n\n\n\n\nMappingSelectionSectionComponent\n\nMappingSelectionSectionComponent\n\nDataMapperModule -->\n\nMappingSelectionSectionComponent->DataMapperModule\n\n\n\n\n\nModalErrorWindowComponent\n\nModalErrorWindowComponent\n\nDataMapperModule -->\n\nModalErrorWindowComponent->DataMapperModule\n\n\n\n\n\nModalWindowComponent\n\nModalWindowComponent\n\nDataMapperModule -->\n\nModalWindowComponent->DataMapperModule\n\n\n\n\n\nNamespaceEditComponent\n\nNamespaceEditComponent\n\nDataMapperModule -->\n\nNamespaceEditComponent->DataMapperModule\n\n\n\n\n\nNamespaceListComponent\n\nNamespaceListComponent\n\nDataMapperModule -->\n\nNamespaceListComponent->DataMapperModule\n\n\n\n\n\nPropertyFieldEditComponent\n\nPropertyFieldEditComponent\n\nDataMapperModule -->\n\nPropertyFieldEditComponent->DataMapperModule\n\n\n\n\n\nTemplateEditComponent\n\nTemplateEditComponent\n\nDataMapperModule -->\n\nTemplateEditComponent->DataMapperModule\n\n\n\n\n\nToErrorIconClassPipe\n\nToErrorIconClassPipe\n\nDataMapperModule -->\n\nToErrorIconClassPipe->DataMapperModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nDataMapperModule -->\n\nToolbarComponent->DataMapperModule\n\n\n\n\n\nTransitionSelectionComponent\n\nTransitionSelectionComponent\n\nDataMapperModule -->\n\nTransitionSelectionComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppComponent \n\nDataMapperAppComponent \n\nDataMapperAppComponent  -->\n\nDataMapperModule->DataMapperAppComponent \n\n\n\n\n\nDataMapperAppExampleHostComponent \n\nDataMapperAppExampleHostComponent \n\nDataMapperAppExampleHostComponent  -->\n\nDataMapperModule->DataMapperAppExampleHostComponent \n\n\n\nDataMapperAppExampleHostComponent  -->\n\nDataMapperModule->DataMapperAppExampleHostComponent \n\n\n\n\n\nModalErrorWindowComponent \n\nModalErrorWindowComponent \n\nModalErrorWindowComponent  -->\n\nDataMapperModule->ModalErrorWindowComponent \n\n\n\n\n\nModalWindowComponent \n\nModalWindowComponent \n\nModalWindowComponent  -->\n\nDataMapperModule->ModalWindowComponent \n\n\n\n\n\nDocumentManagementService\n\nDocumentManagementService\n\nDataMapperModule -->\n\nDocumentManagementService->DataMapperModule\n\n\n\n\n\nErrorHandlerService\n\nErrorHandlerService\n\nDataMapperModule -->\n\nErrorHandlerService->DataMapperModule\n\n\n\n\n\nFieldActionService\n\nFieldActionService\n\nDataMapperModule -->\n\nFieldActionService->DataMapperModule\n\n\n\n\n\nFileManagementService\n\nFileManagementService\n\nDataMapperModule -->\n\nFileManagementService->DataMapperModule\n\n\n\n\n\nInitializationService\n\nInitializationService\n\nDataMapperModule -->\n\nInitializationService->DataMapperModule\n\n\n\n\n\nMappingManagementService\n\nMappingManagementService\n\nDataMapperModule -->\n\nMappingManagementService->DataMapperModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ClassNameComponent\n                        \n                        \n                            CollapsableHeaderComponent\n                        \n                        \n                            ConstantFieldEditComponent\n                        \n                        \n                            DataMapperAppComponent\n                        \n                        \n                            DataMapperAppExampleHostComponent\n                        \n                        \n                            DataMapperErrorComponent\n                        \n                        \n                            DocumentDefinitionComponent\n                        \n                        \n                            DocumentFieldDetailComponent\n                        \n                        \n                            EmptyModalBodyComponent\n                        \n                        \n                            ExpressionComponent\n                        \n                        \n                            FieldEditComponent\n                        \n                        \n                            FocusDirective\n                        \n                        \n                            LineMachineComponent\n                        \n                        \n                            LookupTableComponent\n                        \n                        \n                            MappingDetailComponent\n                        \n                        \n                            MappingFieldActionArgumentComponent\n                        \n                        \n                            MappingFieldActionComponent\n                        \n                        \n                            MappingFieldContainerComponent\n                        \n                        \n                            MappingFieldDetailComponent\n                        \n                        \n                            MappingListComponent\n                        \n                        \n                            MappingListFieldComponent\n                        \n                        \n                            MappingSelectionComponent\n                        \n                        \n                            MappingSelectionSectionComponent\n                        \n                        \n                            ModalErrorWindowComponent\n                        \n                        \n                            ModalWindowComponent\n                        \n                        \n                            NamespaceEditComponent\n                        \n                        \n                            NamespaceListComponent\n                        \n                        \n                            PropertyFieldEditComponent\n                        \n                        \n                            TemplateEditComponent\n                        \n                        \n                            ToErrorIconClassPipe\n                        \n                        \n                            ToolbarComponent\n                        \n                        \n                            TransitionSelectionComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ClassNameComponent\n                        \n                        \n                            ConstantFieldEditComponent\n                        \n                        \n                            EmptyModalBodyComponent\n                        \n                        \n                            FieldEditComponent\n                        \n                        \n                            LookupTableComponent\n                        \n                        \n                            MappingSelectionComponent\n                        \n                        \n                            NamespaceEditComponent\n                        \n                        \n                            PropertyFieldEditComponent\n                        \n                        \n                            TemplateEditComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DocumentManagementService\n                        \n                        \n                            ErrorHandlerService\n                        \n                        \n                            FieldActionService\n                        \n                        \n                            FileManagementService\n                        \n                        \n                            InitializationService\n                        \n                        \n                            MappingManagementService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DataMapperAppComponent\n                        \n                        \n                            DataMapperAppExampleHostComponent\n                        \n                        \n                            ModalErrorWindowComponent\n                        \n                        \n                            ModalWindowComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            DataMapperAppExampleHostComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            withInterceptor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    withInterceptor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/data-mapper.module.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n    Copyright (C) 2017 Red Hat, Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\nimport { NgModule, ModuleWithProviders, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HttpClientXsrfModule, HttpXsrfTokenExtractor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AlertModule, BsDropdownModule, TooltipModule, TypeaheadModule } from 'ngx-bootstrap';\nimport { LoggerModule, NGXLogger } from 'ngx-logger';\nimport { environment } from '../../../environments/environment';\nimport { DocumentManagementService } from './services/document-management.service';\nimport { MappingManagementService } from './services/mapping-management.service';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { InitializationService } from './services/initialization.service';\n\nimport { DataMapperAppExampleHostComponent } from './components/data-mapper-example-host.component';\nimport { DataMapperAppComponent } from './components/data-mapper-app.component';\nimport { DataMapperErrorComponent } from './components/data-mapper-error.component';\nimport { ModalWindowComponent, EmptyModalBodyComponent } from './components/modal-window.component';\nimport { ModalErrorWindowComponent } from './components/modal-error-window.component';\nimport { ToolbarComponent } from './components/toolbar.component';\nimport { TemplateEditComponent } from './components/template-edit.component';\nimport { LineMachineComponent } from './components/line-machine.component';\nimport { ClassNameComponent } from './components/class-name.component';\nimport { CollapsableHeaderComponent } from './components/collapsable-header.component';\nimport { DocumentDefinitionComponent } from './components/document-definition.component';\nimport { DocumentFieldDetailComponent } from './components/document-field-detail.component';\nimport { PropertyFieldEditComponent } from './components/property-field-edit.component';\nimport { ConstantFieldEditComponent } from './components/constant-field-edit.component';\nimport { FieldEditComponent } from './components/field-edit.component';\nimport { NamespaceEditComponent } from './components/namespace-edit.component';\nimport { MappingListComponent } from './components/mapping/mapping-list.component';\nimport { MappingListFieldComponent } from './components/mapping/mapping-list-field.component';\nimport { NamespaceListComponent } from './components/namespace-list.component';\nimport { MappingDetailComponent } from './components/mapping/mapping-detail.component';\nimport { MappingFieldContainerComponent } from './components/mapping/mapping-field-container.component';\nimport { MappingFieldDetailComponent } from './components/mapping/mapping-field-detail.component';\nimport { MappingFieldActionComponent } from './components/mapping/mapping-field-action.component';\nimport { MappingFieldActionArgumentComponent } from './components/mapping/mapping-field-action-argument.component';\nimport { MappingSelectionComponent } from './components/mapping/mapping-selection.component';\nimport { MappingSelectionSectionComponent } from './components/mapping/mapping-selection-section.component';\nimport { LookupTableComponent } from './components/mapping/lookup-table.component';\nimport { TransitionSelectionComponent } from './components/mapping/transition-selection.component';\nimport { FocusDirective } from './common/focus.directive';\nimport { ExpressionComponent } from './components/expression.component';\n\n// export services/types for consumers of this module\nexport { ApiXsrfInterceptor, ApiHttpXsrfTokenExtractor } from './services/api-xsrf.service';\nexport { ErrorHandlerService } from './services/error-handler.service';\nexport { DocumentManagementService } from './services/document-management.service';\nexport { MappingManagementService } from './services/mapping-management.service';\nexport { InitializationService } from './services/initialization.service';\nexport { DocumentDefinition } from './models/document-definition.model';\nexport { MappingDefinition } from './models/mapping-definition.model';\nexport { DocumentType, InspectionType } from './common/config.types';\nexport { ConfigModel, DocumentInitializationModel } from './models/config.model';\nexport { MappingModel } from './models/mapping.model';\nexport { MappingSerializer } from './utils/mapping-serializer';\n\nimport { ToErrorIconClassPipe } from './common/to-error-icon-class.pipe';\nimport { ApiXsrfInterceptor, ApiHttpXsrfTokenExtractor } from './services/api-xsrf.service';\nimport { FieldActionService } from './services/field-action.service';\nimport { FileManagementService } from './services/file-management.service';\n\nexport { DataMapperAppComponent } from './components/data-mapper-app.component';\n\nexport const typeaheadModuleForRoot: ModuleWithProviders = TypeaheadModule.forRoot();\nexport const tooltipModuleForRoot: ModuleWithProviders = TooltipModule.forRoot();\nexport const bsDropdownModuleForRoot: ModuleWithProviders = BsDropdownModule.forRoot();\nexport const httpClientXsrfModuleForRoot: ModuleWithProviders = HttpClientXsrfModule.withOptions(environment.xsrf);\nexport const alertModuleForRoot: ModuleWithProviders = AlertModule.forRoot();\nexport const loggerModuleForRoot: ModuleWithProviders = LoggerModule.forRoot(environment.ngxLoggerConfig);\n\n// @dynamic\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    typeaheadModuleForRoot,\n    tooltipModuleForRoot,\n    bsDropdownModuleForRoot,\n    httpClientXsrfModuleForRoot,\n    alertModuleForRoot,\n    loggerModuleForRoot,\n  ],\n  declarations: [\n    DataMapperAppComponent,\n    ClassNameComponent,\n    DocumentDefinitionComponent,\n    MappingDetailComponent,\n    MappingFieldContainerComponent,\n    ModalWindowComponent,\n    ModalErrorWindowComponent,\n    DataMapperAppExampleHostComponent,\n    MappingFieldActionComponent,\n    MappingFieldActionArgumentComponent,\n    MappingFieldDetailComponent,\n    DocumentFieldDetailComponent,\n    DataMapperErrorComponent,\n    TransitionSelectionComponent,\n    LineMachineComponent,\n    MappingSelectionComponent,\n    MappingSelectionSectionComponent,\n    ToolbarComponent,\n    LookupTableComponent,\n    EmptyModalBodyComponent,\n    FieldEditComponent,\n    NamespaceEditComponent,\n    PropertyFieldEditComponent,\n    ConstantFieldEditComponent,\n    CollapsableHeaderComponent,\n    MappingListComponent,\n    MappingListFieldComponent,\n    NamespaceListComponent,\n    TemplateEditComponent,\n    ExpressionComponent,\n    FocusDirective,\n    ToErrorIconClassPipe\n  ],\n  exports: [\n    DataMapperAppExampleHostComponent,\n    ModalWindowComponent,\n    ModalErrorWindowComponent,\n    DataMapperAppComponent,\n    AlertModule\n  ],\n  providers: [\n    DocumentManagementService,\n    MappingManagementService,\n    ErrorHandlerService,\n    InitializationService,\n    FieldActionService,\n    FileManagementService,\n    NGXLogger,\n  ],\n  entryComponents: [\n    MappingSelectionComponent,\n    LookupTableComponent,\n    EmptyModalBodyComponent,\n    FieldEditComponent,\n    NamespaceEditComponent,\n    PropertyFieldEditComponent,\n    ClassNameComponent,\n    ConstantFieldEditComponent,\n    TemplateEditComponent,\n  ],\n  bootstrap: [DataMapperAppExampleHostComponent],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\n\nexport class DataMapperModule {\n  static withInterceptor(): Array {\n    return [\n      { ngModule: DataMapperModule,\n        providers: [\n          DocumentManagementService,\n          MappingManagementService,\n          ErrorHandlerService,\n          FieldActionService,\n          FileManagementService,\n          InitializationService,\n          {\n            provide: HTTP_INTERCEPTORS,\n            useClass: ApiXsrfInterceptor,\n            multi: true\n          },\n        ],\n      },\n      { ngModule: DataMapperModule,\n        providers: [\n          DocumentManagementService,\n          MappingManagementService,\n          ErrorHandlerService,\n          FieldActionService,\n          FileManagementService,\n          InitializationService,\n          {\n            provide: HttpXsrfTokenExtractor,\n            useClass: ApiHttpXsrfTokenExtractor,\n            multi: false\n          },\n        ],\n      }\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataMapperUtil.html":{"url":"classes/DataMapperUtil.html","title":"class - DataMapperUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataMapperUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                HTTP_STATUS_NO_CONTENT\n                            \n                            \n                                    Static\n                                HTTP_STATUS_OK\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                extractDisplayPath\n                            \n                            \n                                    Static\n                                    Async\n                                readBinaryFile\n                            \n                            \n                                    Static\n                                    Async\n                                readFile\n                            \n                            \n                                    Static\n                                removeItemFromArray\n                            \n                            \n                                    Static\n                                splitByString\n                            \n                            \n                                    Static\n                                str2bytes\n                            \n                            \n                                    Static\n                                toDisplayable\n                            \n                            \n                                    Static\n                                    Async\n                                writeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            HTTP_STATUS_NO_CONTENT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 204\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            HTTP_STATUS_OK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            extractDisplayPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractDisplayPath(path: string, fieldWidth: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:152\n                \n            \n\n\n            \n                \n                    Return a string path that fits into the width provided.  Capture as much of the leaf\nas possible, then as much of the beginning with the remaining space.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fieldWidth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            readBinaryFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readBinaryFile(fileName: any, reader: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:101\n                \n            \n\n\n            \n                \n                    Perform an asynchronous binary read of the specified file name with the specified reader object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fileName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nfile to read\n\n\n                                    \n                                \n                                \n                                    reader\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nreader object\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            readFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(fileName: any, reader: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:85\n                \n            \n\n\n            \n                \n                    Asynchronously read from the specified file and return as a string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reader\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            removeItemFromArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItemFromArray(item: any, items: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    items\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            splitByString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    splitByString(inStr: string, splitMarker: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:46\n                \n            \n\n\n            \n                \n                    Split a source string by the specified substring into a string array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inStr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    splitMarker\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            str2bytes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    str2bytes(str: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:71\n                \n            \n\n\n            \n                \n                    Turn a string into a byte array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Uint8Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            toDisplayable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toDisplayable(camelCaseString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:130\n                \n            \n\n\n            \n                \n                    Convert a camel-case string into human-readable form.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camelCaseString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            writeFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeFile(fileContent: Blob, fName: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:118\n                \n            \n\n\n            \n                \n                    Asynchronously write the specified file content (Blob) to the specified file name.  It will appear\nin the user's local Downloads directory (or equivalent).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileContent\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { saveAs } from 'file-saver';\n\nexport class DataMapperUtil {\n\n  static HTTP_STATUS_OK = 200;\n  static HTTP_STATUS_NO_CONTENT = 204;\n\n  static removeItemFromArray(item: any, items: any[]): boolean {\n    if (item == null || items == null || items.length === 0) {\n      return false;\n    }\n    let i = 0;\n    let itemWasRemoved = false;\n    while (i  {\n    return new Promise((resolve, reject) => {\n      reader.onload = (event: any) => {\n        const fileBody = reader.result;\n        resolve(fileBody);\n      };\n      reader.readAsText(fileName);\n    });\n  }\n\n  /**\n   *  Perform an asynchronous binary read of the specified file name with the specified reader object.\n   *\n   * @param fileName - file to read\n   * @param reader - reader object\n   */\n  static async readBinaryFile(fileName: any, reader: any): Promise {\n    return new Promise((resolve, reject) => {\n      reader.onload = (event: any) => {\n        const fileBody = new Int8Array(reader.result);\n        resolve(fileBody);\n      };\n      reader.readAsArrayBuffer(fileName);\n    });\n  }\n\n  /**\n   * Asynchronously write the specified file content (Blob) to the specified file name.  It will appear\n   * in the user's local Downloads directory (or equivalent).\n   *\n   * @param fileContent\n   * @param fName\n   */\n  static async writeFile(fileContent: Blob, fName: any): Promise {\n    return new Promise((resolve, reject) => {\n      saveAs(fileContent, fName);\n      resolve(true);\n    });\n  }\n\n  /**\n   * Convert a camel-case string into human-readable form.\n   *\n   * @param camelCaseString\n   */\n  static toDisplayable(camelCaseString: string): string {\n    if (typeof camelCaseString === 'undefined' || !camelCaseString || camelCaseString.indexOf(' ') >= 0) {\n      return camelCaseString;\n    }\n    let displayableString: string = camelCaseString.charAt(0).toUpperCase();\n    for (let index = 1; index = MAX_PATH_WIDTH) {\n      return leaf.substr(0, MAX_PATH_WIDTH);\n    }\n    const delta = MAX_PATH_WIDTH - leaf.length;\n    return path.substr(0, delta) + '...' + leaf;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentFieldDetailComponent.html":{"url":"components/DocumentFieldDetailComponent.html","title":"component - DocumentFieldDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentFieldDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                document-field-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./document-field-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fieldComponents\n                            \n                            \n                                fieldDetailElement\n                            \n                            \n                                    Private\n                                isDragDropTarget\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allowDrop\n                            \n                            \n                                dragEnterLeave\n                            \n                            \n                                editField\n                            \n                            \n                                endDrag\n                            \n                            \n                                fieldShouldBeVisible\n                            \n                            \n                                getCssClass\n                            \n                            \n                                getElementPosition\n                            \n                            \n                                getFieldDetailComponent\n                            \n                            \n                                getFieldId\n                            \n                            \n                                getFieldTypeIcon\n                            \n                            \n                                getMappingClass\n                            \n                            \n                                getParentToggleClass\n                            \n                            \n                                getSpacerWidth\n                            \n                            \n                                getTransformationClass\n                            \n                            \n                                handleMouseClick\n                            \n                            \n                                handleMouseOver\n                            \n                            \n                                removeField\n                            \n                            \n                                startDrag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                field\n                            \n                            \n                                lineMachine\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selected\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         Field\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMachine\n                    \n                \n                \n                    \n                        Type :         LineMachineComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:40\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allowDrop\n                        \n                        \n                    \n                \n            \n            \n                \nallowDrop(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragEnterLeave\n                        \n                        \n                    \n                \n            \n            \n                \ndragEnterLeave(event: any, entering: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entering\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editField\n                        \n                        \n                    \n                \n            \n            \n                \neditField(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endDrag\n                        \n                        \n                    \n                \n            \n            \n                \nendDrag(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fieldShouldBeVisible\n                        \n                        \n                    \n                \n            \n            \n                \nfieldShouldBeVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCssClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetCssClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getElementPosition\n                        \n                        \n                    \n                \n            \n            \n                \ngetElementPosition()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldDetailComponent\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldDetailComponent(field: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DocumentFieldDetailComponent\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldId\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:285\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldTypeIcon\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldTypeIcon()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappingClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappingClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParentToggleClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetParentToggleClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSpacerWidth\n                        \n                        \n                    \n                \n            \n            \n                \ngetSpacerWidth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:280\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SafeStyle\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTransformationClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetTransformationClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseClick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:188\n                \n            \n\n\n            \n                \n                    Semantic support for a mouse click.\n\nM1 - the field is selected\nCtrl/Cmd-M1 - compound-select\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseOver\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseOver(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeField\n                        \n                        \n                    \n                \n            \n            \n                \nremoveField(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:261\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startDrag\n                        \n                        \n                    \n                \n            \n            \n                \nstartDrag(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldComponents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('fieldDetail')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldDetailElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('fieldDetailElement')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDragDropTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n\n                \n                    \n                        getselected()\n                    \n                \n                            \n                                \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:289\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, ElementRef, ViewChild, ViewChildren, QueryList } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { DocumentType } from '../common/config.types';\nimport { ConfigModel } from '../models/config.model';\nimport { Field } from '../models/field.model';\n\nimport { LineMachineComponent } from './line-machine.component';\nimport { ModalWindowComponent } from './modal-window.component';\n\nimport { PropertyFieldEditComponent } from './property-field-edit.component';\nimport { ConstantFieldEditComponent } from './constant-field-edit.component';\nimport { FieldEditComponent } from './field-edit.component';\n\n@Component({\n  selector: 'document-field-detail',\n  templateUrl: './document-field-detail.component.html',\n})\n\nexport class DocumentFieldDetailComponent {\n  @Input() cfg: ConfigModel;\n  @Input() field: Field;\n  @Input() lineMachine: LineMachineComponent;\n  @Input() modalWindow: ModalWindowComponent;\n\n  @ViewChild('fieldDetailElement') fieldDetailElement: ElementRef;\n  @ViewChildren('fieldDetail') fieldComponents: QueryList;\n\n  private isDragDropTarget = false;\n\n  constructor(private sanitizer: DomSanitizer) { }\n\n  startDrag(event: any): void {\n\n    if (!this.field.isTerminal()) {\n      // ignore drag event, it's coming from a child field who's already set on the drag event\n      return;\n    }\n\n    this.cfg.currentDraggedField = null;\n\n    // event's data transfer store isn't available during dragenter/dragleave/dragover, so we need\n    // to store this info in a global somewhere since those methods depend on knowing if the\n    // dragged field is source/target\n    event = event || window.event;\n    event.dataTransfer.setData('text', '');  // firefox bug\n    this.cfg.currentDraggedField = this.field;\n  }\n\n  dragEnterLeave(event: any, entering: boolean): void {\n    if (!this.field.isTerminal() || (this.field.isSource() === this.cfg.currentDraggedField.isSource())) {\n      this.isDragDropTarget = false;\n      return;\n    }\n    this.isDragDropTarget = entering;\n  }\n\n  allowDrop(event: any): void {\n    if (!this.field.isTerminal() || (this.field.isSource() === this.cfg.currentDraggedField.isSource())) {\n      this.isDragDropTarget = false;\n      return;\n    }\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n    this.isDragDropTarget = true;\n  }\n\n  endDrag(event: MouseEvent): void {\n    this.isDragDropTarget = false;\n    if (!this.field.isTerminal() || (this.field.isSource() === this.cfg.currentDraggedField.isSource())) {\n      return;\n    }\n\n    const droppedField: Field = this.cfg.currentDraggedField;\n    if (droppedField == null) {\n      return;\n    }\n\n    if (!this.cfg.currentDraggedField.selected) {\n      this.cfg.mappingService.fieldSelected(this.cfg.currentDraggedField, event.ctrlKey || event.metaKey);\n    }\n    this.cfg.mappingService.fieldSelected(this.field, false);\n  }\n\n  getFieldTypeIcon(): string {\n    if (this.field.enumeration) {\n      return 'fa fa-file-text-o';\n    }\n    if (this.field.isCollection) {\n      return 'fa fa-list-ul';\n    }\n    if (this.field.docDef.type === DocumentType.XML) {\n      return this.field.isAttribute ? 'fa fa-at' : 'fa fa-code';\n    }\n    return 'fa fa-file-o';\n  }\n\n  fieldShouldBeVisible(): boolean {\n    const partOfMapping: boolean = this.field.partOfMapping;\n    return partOfMapping ? this.cfg.showMappedFields : this.cfg.showUnmappedFields;\n  }\n\n  getTransformationClass(): string {\n    if (!this.field.partOfMapping || !this.field.partOfTransformation) {\n      return 'partOfMappingIcon partOfMappingIconHidden';\n    }\n    return 'partOfMappingIcon fa fa-bolt';\n  }\n\n  getMappingClass(): string {\n    if (!this.field.partOfMapping) {\n      return 'partOfMappingIcon partOfMappingIconHidden';\n    }\n    let clz = 'fa fa-circle';\n    if (!this.field.isTerminal() && this.field.hasUnmappedChildren) {\n      clz = 'fa fa-adjust';\n    }\n    return 'partOfMappingIcon ' + clz;\n  }\n\n  getCssClass(): string {\n    let cssClass = 'fieldDetail';\n    if (this.selected) {\n      cssClass += ' selectedField';\n    }\n    if (!this.field.isTerminal()) {\n      cssClass += ' parentField';\n    }\n    if (!this.field.isSource()) {\n      cssClass += ' outputField';\n    }\n    if (this.isDragDropTarget) {\n      cssClass += ' dragHover';\n    }\n    return cssClass;\n  }\n\n  getElementPosition(): any {\n    let x = 0;\n    let y = 0;\n\n    let el: any = this.fieldDetailElement.nativeElement;\n    while (el != null) {\n      x += el.offsetLeft;\n      y += el.offsetTop;\n      el = el.offsetParent;\n    }\n    return { 'x': x, 'y': y };\n  }\n\n  handleMouseOver(event: MouseEvent): void {\n    if (this.field.isTerminal() && this.lineMachine != null) {\n      this.lineMachine.handleDocumentFieldMouseOver(this, event, this.field.isSource());\n    }\n  }\n\n  getParentToggleClass() {\n    return 'arrow fa fa-angle-' + (this.field.collapsed ? 'right' : 'down');\n  }\n\n  /**\n   * Semantic support for a mouse click.\n   * * M1 - the field is selected\n   * * Ctrl/Cmd-M1 - compound-select\n   *\n   * @param event\n   */\n  handleMouseClick(event: MouseEvent): void {\n    this.cfg.mappingService.fieldSelected(this.field, event.ctrlKey || event.metaKey);\n    if (this.lineMachine != null) {\n      setTimeout(() => {\n        this.lineMachine.redrawLinesForMappings();\n      }, 1);\n    }\n  }\n\n  getFieldDetailComponent(field: Field): DocumentFieldDetailComponent {\n    if (this.field === field) {\n      return this;\n    }\n\n    // Matching name and doc definition is a match\n    if ((this.field.path === field.path) && (this.field.docDef === field.docDef)) {\n      this.field = field;\n      return this;\n    }\n    for (const c of this.fieldComponents.toArray()) {\n      const returnedComponent: DocumentFieldDetailComponent = c.getFieldDetailComponent(field);\n      if (returnedComponent != null) {\n        return returnedComponent;\n      }\n    }\n    return null;\n  }\n\n  editField(event: any): void {\n    event.stopPropagation();\n    const self: DocumentFieldDetailComponent = this;\n    const oldPath: string = this.field.path;\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Save';\n    const isProperty: boolean = this.field.isProperty();\n    const isConstant: boolean = this.field.isConstant();\n    this.modalWindow.headerText = isProperty ? 'Edit Property' : (isConstant ? 'Edit Constant' : 'Edit Field');\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      if (isProperty) {\n        const propertyComponent: PropertyFieldEditComponent = mw.nestedComponent as PropertyFieldEditComponent;\n        propertyComponent.initialize(self.field, this.field.docDef, this.modalWindow);\n      } else if (isConstant) {\n        const constantComponent: ConstantFieldEditComponent = mw.nestedComponent as ConstantFieldEditComponent;\n        constantComponent.initialize(self.field, this.field.docDef, this.modalWindow);\n      } else {\n        const fieldComponent: FieldEditComponent = mw.nestedComponent as FieldEditComponent;\n        fieldComponent.isSource = self.field.isSource();\n        fieldComponent.initialize(self.field, this.field.docDef, false);\n      }\n    };\n    this.modalWindow.nestedComponentType = isProperty ? PropertyFieldEditComponent\n      : (isConstant ? ConstantFieldEditComponent : FieldEditComponent);\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      let newField: Field = null;\n      if (isProperty) {\n        const propertyComponent: PropertyFieldEditComponent = mw.nestedComponent as PropertyFieldEditComponent;\n        newField = propertyComponent.getField();\n      } else if (isConstant) {\n        const constantComponent: ConstantFieldEditComponent = mw.nestedComponent as ConstantFieldEditComponent;\n        newField = constantComponent.getField();\n      } else {\n        const fieldComponent: FieldEditComponent = mw.nestedComponent as FieldEditComponent;\n        newField = fieldComponent.getField();\n      }\n      self.field.copyFrom(newField);\n\n      self.field.docDef.updateField(self.field, oldPath);\n\n      self.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  removeField(event: any): void {\n    event.stopPropagation();\n    const self: DocumentFieldDetailComponent = this;\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Remove';\n    if (this.field.isPropertyOrConstant()) {\n      this.modalWindow.headerText = this.field.isProperty() ? 'Remove Property?' : 'Remove Constant?';\n    } else {\n      this.modalWindow.headerText = 'Remove field?';\n    }\n    this.modalWindow.message = 'Are you sure you want to remove \\'' + this.field.displayName + '\\'?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      self.cfg.mappingService.removeFieldFromAllMappings(self.field);\n      self.field.docDef.removeField(self.field);\n      self.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  getSpacerWidth(): SafeStyle {\n    const width: string = (this.field.fieldDepth * 30).toString();\n    return this.sanitizer.bypassSecurityTrustStyle('display:inline; margin-left:' + width + 'px');\n  }\n\n  getFieldId(): string {\n    return this.field.name && this.field.name.length > 0 ? this.field.name : 'document-root';\n  }\n\n  get selected(): boolean {\n    if (this.cfg.mappings && this.cfg.mappings.activeMapping) {\n      return this.cfg.mappings.activeMapping.getFields(this.field.isSource()).includes(this.field);\n    }\n    return false;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n      \n      &nbsp;\n      \n        \n        \n        \n      \n      \n        \n      \n    \n    &nbsp;\n    \n      {{ field.getFieldLabel(cfg.showTypes, false) }}\n    \n\n    \n      {{ field.getFieldLabel(cfg.showTypes, false) }}\n    \n\n    \n      \n      \n    \n    \n      \n      \n    \n    \n\n    \n      \n        \n          \n          \n            \n            \n              \n                \n                  \n                    \n                      Preview Results\n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n    \n  \n\n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                    {{ field.getFieldLabel(cfg.showTypes, false) }}              {{ field.getFieldLabel(cfg.showTypes, false) }}                                                                                                                                                                                                        Preview Results                                                                                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DocumentFieldDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DocumentInitializationModel.html":{"url":"classes/DocumentInitializationModel.html","title":"class - DocumentInitializationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DocumentInitializationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/config.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collectionClassName\n                            \n                            \n                                collectionType\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                inspectionResult\n                            \n                            \n                                inspectionSource\n                            \n                            \n                                inspectionType\n                            \n                            \n                                isSource\n                            \n                            \n                                name\n                            \n                            \n                                selectedRoot\n                            \n                            \n                                showFields\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collectionClassName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collectionType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CollectionType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inspectionResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inspectionSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inspectionType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InspectionType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:82\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NGXLogger, NgxLoggerLevel } from 'ngx-logger';\nimport { environment } from '../../../../environments/environment';\nimport { MappingDefinition } from './mapping-definition.model';\nimport { DocumentDefinition } from './document-definition.model';\n\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { DocumentManagementService } from '../services/document-management.service';\nimport { MappingManagementService } from '../services/mapping-management.service';\nimport { InitializationService } from '../services/initialization.service';\nimport { ErrorInfo } from '../models/error.model';\n\nimport { DocumentType, InspectionType, CollectionType } from '../common/config.types';\nimport { FieldActionService } from '../services/field-action.service';\nimport { FileManagementService } from '../services/file-management.service';\n\nexport class DataMapperInitializationModel {\n  dataMapperVersion = '0.9.2017.07.28';\n  initialized = false;\n  loadingStatus = 'Loading.';\n  admHttpTimeout = 30000;  // 30 seconds\n  initializationErrorOccurred = false;\n\n  baseJavaInspectionServiceUrl: string;\n  baseXMLInspectionServiceUrl: string;\n  baseJSONInspectionServiceUrl: string;\n  baseMappingServiceUrl: string;\n\n  xsrfHeaderName: string;\n  xsrfCookieName: string;\n  xsrfDefaultTokenValue: string;\n\n  /* class path fetching configuration */\n  classPathFetchTimeoutInMilliseconds = 30000;\n  // if classPath is specified, maven call to resolve pom will be skipped\n  pomPayload: string;\n\n  classPath: string;\n\n  /* inspection service filtering flags */\n  fieldNameBlacklist: string[] = [];\n  classNameBlacklist: string[] = [];\n  disablePrivateOnlyFields = false;\n  disableProtectedOnlyFields = false;\n  disablePublicOnlyFields = false;\n  disablePublicGetterSetterFields = false;\n\n  disableMappingPreviewMode = false;\n\n  /* enable the navigation bar and import/export */\n  disableNavbar = true;\n\n  mappingInitialized = false;\n\n  constructor() {\n    if (environment.xsrf) {\n      this.xsrfHeaderName = environment.xsrf.headerName;\n      this.xsrfCookieName = environment.xsrf.cookieName;\n      this.xsrfDefaultTokenValue = environment.xsrf.defaultTokenValue;\n    }\n  }\n\n}\n\nexport class DocumentInitializationModel {\n  id: string;\n  type: DocumentType;\n  name: string;\n  description: string;\n  isSource: boolean;\n  showFields = true;\n  inspectionType: InspectionType;\n  inspectionSource: string;\n  inspectionResult: string;\n  selectedRoot: string;\n  collectionType: CollectionType;\n  collectionClassName: string;\n}\n\nexport class ConfigModel {\n  static mappingServicesPackagePrefix = 'io.atlasmap.v2';\n  static javaServicesPackagePrefix = 'io.atlasmap.java.v2';\n  static jsonServicesPackagePrefix = 'io.atlasmap.json.v2';\n  static xmlServicesPackagePrefix = 'io.atlasmap.xml.v2';\n  private static cfg: ConfigModel = new ConfigModel();\n\n  initCfg: DataMapperInitializationModel = new DataMapperInitializationModel;\n\n  /* current ui state config */\n  showMappingDetailTray = false;\n  showMappingTable = false;\n  showNamespaceTable = false;\n  showLinesAlways = true;\n  showTypes = false;\n  showMappedFields = true;\n  showUnmappedFields = true;\n  _showMappingPreview = false;\n  currentDraggedField: any = null;\n\n  documentService: DocumentManagementService;\n  mappingService: MappingManagementService;\n  errorService: ErrorHandlerService;\n  initializationService: InitializationService;\n  fieldActionService: FieldActionService;\n  fileService: FileManagementService;\n\n  sourceDocs: DocumentDefinition[] = [];\n  targetDocs: DocumentDefinition[] = [];\n  propertyDoc: DocumentDefinition = new DocumentDefinition();\n  constantDoc: DocumentDefinition = new DocumentDefinition();\n  mappingFiles: string[] = [];\n\n  mappings: MappingDefinition = null;\n\n  preloadedFieldActionMetadata: any;\n\n  errors: ErrorInfo[] = [];\n  validationErrors: ErrorInfo[] = [];\n\n  logger: NGXLogger;\n\n  constructor() {\n    this.propertyDoc.type = DocumentType.PROPERTY;\n    this.propertyDoc.name = 'Properties';\n    this.propertyDoc.isSource = true;\n    this.propertyDoc.showFields = false;\n    this.constantDoc.type = DocumentType.CONSTANT;\n    this.constantDoc.name = 'Constants';\n    this.constantDoc.isSource = true;\n    this.constantDoc.showFields = false;\n  }\n\n  static getConfig(): ConfigModel {\n    return ConfigModel.cfg;\n  }\n\n  static setConfig(cfg: ConfigModel): void {\n    ConfigModel.cfg = cfg;\n  }\n\n  set showMappingPreview(show: boolean) {\n    if (show && !this._showMappingPreview) {\n      this.mappingService.enableMappingPreview();\n    } else if (!show && this._showMappingPreview) {\n      this.mappingService.disableMappingPreview();\n    }\n    this._showMappingPreview = show;\n  }\n\n  get showMappingPreview(): boolean {\n    return this._showMappingPreview;\n  }\n\n  isDebugEnabled(): boolean {\n    return [NgxLoggerLevel.DEBUG, NgxLoggerLevel.TRACE].includes(this.logger.getConfigSnapshot().level);\n  }\n\n  isTraceEnabled(): boolean {\n    return this.logger.getConfigSnapshot().level === NgxLoggerLevel.TRACE;\n  }\n\n  addDocument(docInitModel: DocumentInitializationModel): DocumentDefinition {\n    const docDef: DocumentDefinition = new DocumentDefinition();\n    docDef.initModel = docInitModel;\n    docDef.id = docInitModel.id;\n    docDef.type = docInitModel.type;\n    docDef.name = docInitModel.name;\n    docDef.description = docInitModel.description;\n    docDef.isSource = docInitModel.isSource;\n    docDef.showFields = docInitModel.showFields;\n    docDef.inspectionType = docInitModel.inspectionType;\n    docDef.inspectionSource = docInitModel.inspectionSource;\n    docDef.inspectionResult = docInitModel.inspectionResult;\n    docDef.selectedRoot = docInitModel.selectedRoot;\n\n    if (docDef.type === DocumentType.XSD) {\n      docDef.uri = 'atlas:' + 'xml' + ':' + docDef.id;\n    } else if (docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri = 'atlas:' + 'java' + ':' + docDef.id;\n    } else {\n      docDef.uri = 'atlas:' + docDef.type.toLowerCase() + ':' + docDef.id;\n    }\n\n    if (docDef.type === DocumentType.JAVA || docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri += '?className=' + docDef.inspectionSource;\n      if (docInitModel.collectionType && docInitModel.collectionType !== CollectionType.NONE) {\n        docDef.uri += '&collectionType=' + docInitModel.collectionType;\n        if (docInitModel.collectionClassName) {\n          docDef.uri += '&collectionClassName=' + docInitModel.collectionClassName;\n        }\n      }\n    }\n\n    if (docInitModel.isSource) {\n      this.sourceDocs.push(docDef);\n    } else {\n      this.targetDocs.push(docDef);\n    }\n    return docDef;\n  }\n\n  addDocuments(docModels: DocumentInitializationModel[]): DocumentDefinition[] {\n    const docDefs: DocumentDefinition[] = [];\n    for (const docModel of docModels) {\n      docDefs.push(this.addDocument(docModel));\n    }\n    return docDefs;\n  }\n\n  getDocsWithoutPropertyDoc(isSource: boolean): DocumentDefinition[] {\n    return [].concat(isSource ? this.sourceDocs : this.targetDocs);\n  }\n\n  getDocs(isSource: boolean): DocumentDefinition[] {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    return isSource ? [this.propertyDoc, this.constantDoc].concat(docs) : docs;\n  }\n\n  /**\n   * Return a uri:DocumentDefinition document map for either the sources or targets panel contents.\n   *\n   * @param cfg\n   * @param isSource\n   */\n  getDocUriMap(cfg: ConfigModel, isSource: boolean): {[key: string]: DocumentDefinition} {\n    const docMap: {[key: string]: DocumentDefinition} = {};\n    for (const doc of cfg.getDocs(isSource)) {\n      docMap[doc.uri] = doc;\n    }\n    return docMap;\n  }\n\n  /**\n   * Clear source/target/mapping documents from the model.  Reset constant and property document definitions.\n   */\n  clearDocs(): void {\n    this.sourceDocs = [];\n    this.targetDocs = [];\n    this.propertyDoc.clearFields();\n    this.constantDoc.clearFields();\n    this.mappingFiles = [];\n  }\n\n  hasJavaDocuments(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isClassPathResolutionNeeded(): boolean {\n    if (this.initCfg.classPath) {\n      return false;\n    }\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA && doc.inspectionResult == null) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getDocForIdentifier(documentId: string, isSource: boolean): DocumentDefinition {\n    for (const d of this.getDocs(isSource)) {\n      if (d.id === documentId) {\n        return d;\n      }\n    }\n    return null;\n  }\n\n  getFirstXmlDoc(isSource: boolean) {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    for (const doc of docs) {\n      if (doc.type === DocumentType.XML) {\n        return doc;\n      }\n    }\n    return null;\n  }\n\n  getAllDocs(): DocumentDefinition[] {\n    return [this.propertyDoc, this.constantDoc].concat(this.sourceDocs).concat(this.targetDocs);\n  }\n\n  documentsAreLoaded(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (!doc.initialized) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Validate the specified field value, generating a validation error if not defined.\n   * @param value - field to validate\n   * @param fieldDescription - used in error diagnostic\n   */\n  isRequiredFieldValid(value: string, fieldDescription: string): boolean {\n\n    if (value == null || '' === value) {\n      const errorMessage: string = fieldDescription + ' is required.';\n      this.errorService.validationError(errorMessage, null);\n      return false;\n    }\n    return true;\n  }\n\n}\n\n/**\n * Place all custom events here.\n */\nexport class AdmRedrawMappingLinesEvent {\n  _lmcInstance: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmptyModalBodyComponent.html":{"url":"components/EmptyModalBodyComponent.html","title":"component - EmptyModalBodyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmptyModalBodyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                empty-modal-body\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitialFocusElement\n                            \n                            \n                                isDataValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  Component, Input, ViewChildren, QueryList, OnDestroy,\n  ViewContainerRef, Type, ComponentFactoryResolver, AfterViewInit, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../models/config.model';\nimport { Subscription } from 'rxjs';\nimport { ModalErrorWindowComponent } from './modal-error-window.component';\n\n// source: http://www.w3schools.com/howto/howto_css_modals.asp\n\nexport interface ModalWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'empty-modal-body',\n  template: '',\n})\n\nexport class EmptyModalBodyComponent implements ModalWindowValidator {\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n}\n\n@Component({\n  selector: 'modal-window',\n  templateUrl: './modal-window.component.html',\n})\n\nexport class ModalWindowComponent implements AfterViewInit, OnDestroy {\n  @Input() headerText = '';\n  @Input() nestedComponentType: Type;\n  @Input() nestedComponentInitializedCallback: Function;\n  @Input() okButtonHandler: Function;\n  @Input() cancelButtonHandler: Function;\n  @Input() cfg: ConfigModel;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  message: string = null;\n  nestedComponent: ModalWindowValidator;\n  confirmButtonDisabled = false;\n  confirmButtonText = 'OK';\n  visible = false;\n  fade = false;\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  private componentLoaded = false;\n  private myTargetChangesSubscription: Subscription;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, public detector: ChangeDetectorRef) { }\n\n  ngAfterViewInit() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n\n    // from: http://stackoverflow.com/questions/40811809/add-component-dynamically-inside-an-ngif\n    this.myTargetChangesSubscription = this.myTarget.changes.subscribe(changes => {\n      setTimeout(() => {\n        if (!this.componentLoaded && this.visible && this.myTarget && (this.myTarget.toArray().length)) {\n          this.loadComponent();\n        }\n        setTimeout(() => {\n          this.detector.detectChanges();\n        }, 10);\n      }, 10);\n    });\n  }\n\n  ngOnDestroy() {\n    this.myTargetChangesSubscription.unsubscribe();\n  }\n\n  loadComponent(): void {\n    const viewContainerRef: ViewContainerRef = this.myTarget.toArray()[0];\n    viewContainerRef.clear();\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.nestedComponentType);\n    this.nestedComponent = viewContainerRef.createComponent(componentFactory).instance as ModalWindowValidator;\n    if (this.nestedComponentInitializedCallback != null) {\n      this.nestedComponentInitializedCallback(this);\n    }\n    const initialFocusElement = this.nestedComponent.getInitialFocusElement();\n    if (initialFocusElement) {\n      initialFocusElement.nativeElement.focus();\n    }\n  }\n\n  closeClicked(event: MouseEvent): void { this.buttonClicked(false); }\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.visible = false;\n    }, 300);\n  }\n  show(): void {\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.nestedComponentInitializedCallback = null;\n    this.confirmButtonDisabled = false;\n    this.confirmButtonText = 'OK';\n    this.message = '';\n    this.headerText = '';\n    this.componentLoaded = false;\n    this.nestedComponentType = EmptyModalBodyComponent;\n    this.okButtonHandler = null;\n    this.cancelButtonHandler = null;\n  }\n\n  private buttonClicked(okClicked: boolean): void {\n    if (okClicked) {\n      if (this.nestedComponent != null) {\n        this.cfg.errorService.clearValidationErrors();\n        if (!(this.nestedComponent.isDataValid())) {\n          return;\n        }\n      }\n      if (this.okButtonHandler) {\n        this.okButtonHandler(this);\n      }\n    } else { // cancel clicked\n      if (this.cancelButtonHandler) {\n        this.cancelButtonHandler(this);\n      }\n    }\n    this.close();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmptyModalBodyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnumValue.html":{"url":"classes/EnumValue.html","title":"class - EnumValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnumValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                ordinal\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ordinal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field.model.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DocumentType } from '../common/config.types';\nimport { DocumentDefinition } from './document-definition.model';\n\nexport class EnumValue {\n  name: string;\n  ordinal: number;\n}\n\nexport class Field {\n  private static uuidCounter = 0;\n\n  name: string = null;\n  classIdentifier: string = null;\n  displayName: string;\n  path: string = null;\n  type: string = null;\n  value: string = null;\n  serviceObject: any = new Object();\n  parentField: Field;\n  partOfMapping = false;\n  partOfTransformation = false;\n  visibleInCurrentDocumentSearch = true;\n  enumeration = false;\n  enumValues: EnumValue[] = [];\n  children: Field[] = [];\n  fieldDepth = 0;\n  uuid: string = null;\n  collapsed = true;\n  hasUnmappedChildren = false;\n  isCollection = false;\n  isArray = false;\n  isAttribute = false;\n  isPrimitive = false;\n  userCreated = false;\n  docDef: DocumentDefinition = null;\n  namespaceAlias: string = null;\n\n  static fieldHasUnmappedChild(field: Field): boolean {\n    if (field == null) {\n      return false;\n    }\n    if (field.isTerminal()) {\n      return (field.partOfMapping === false);\n    }\n    for (const childField of field.children) {\n      if (childField.hasUnmappedChildren || Field.fieldHasUnmappedChild(childField)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static getFieldPaths(fields: Field[]): string[] {\n    const paths: string[] = [];\n    for (const field of fields) {\n      paths.push(field.path);\n    }\n    return paths;\n  }\n\n  static getFieldNames(fields: Field[]): string[] {\n    const paths: string[] = [];\n    for (const field of fields) {\n      paths.push(field.name);\n    }\n    return paths;\n  }\n\n  static getField(fieldPath: string, fields: Field[]): Field {\n    for (const field of fields) {\n      if (fieldPath === field.path) {\n        return field;\n      }\n    }\n    return null;\n  }\n\n  static alphabetizeFields(fields: Field[]): void {\n    const fieldsByName: { [key: string]: Field; } = {};\n    const fieldNames: string[] = [];\n    for (const field of fields) {\n      // if field is a dupe, discard it\n      if (fieldsByName[field.name] != null) {\n        continue;\n      }\n      fieldsByName[field.name] = field;\n      fieldNames.push(field.name);\n    }\n    fieldNames.sort();\n    fields.length = 0;\n    for (const name of fieldNames) {\n      fields.push(fieldsByName[name]);\n    }\n\n    for (const field of fields) {\n      if (field.children && field.children.length) {\n        this.alphabetizeFields(field.children);\n      }\n    }\n  }\n\n  constructor() {\n    this.uuid = Field.uuidCounter.toString();\n    Field.uuidCounter++;\n  }\n\n  getNameWithNamespace(): string {\n    if (!this.namespaceAlias) {\n      return this.name;\n    }\n    return this.namespaceAlias + ':' + this.name;\n  }\n\n  isParentField(): boolean {\n    if (this.isCollection && !this.isPrimitive) {\n      return true;\n    }\n    return (this.type === 'COMPLEX');\n  }\n\n  isStringField(): boolean {\n    return (this.type === 'STRING');\n  }\n\n  isTerminal(): boolean {\n    if (this.enumeration) {\n      return true;\n    }\n    if (this.isCollection && !this.isPrimitive) {\n      return false;\n    }\n    return (this.type !== 'COMPLEX');\n  }\n\n  copy(): Field {\n    const copy: Field = new Field();\n    Object.assign(copy, this);\n\n    // make these pointers to the same object, not copies\n    copy.serviceObject = this.serviceObject;\n    copy.parentField = this.parentField;\n    copy.docDef = this.docDef;\n\n    copy.children = [];\n    for (const childField of this.children) {\n      copy.children.push(childField.copy());\n    }\n    // console.log(\"Copied: \" + this.name, { \"src\": this, \"target\": copy });\n    return copy;\n  }\n\n  copyFrom(that: Field): void {\n    Object.assign(this, that);\n\n    // make these pointers to the same object, not copies\n    this.serviceObject = that.serviceObject;\n    this.parentField = that.parentField;\n    this.docDef = that.docDef;\n\n    this.children = [];\n    for (const childField of that.children) {\n      this.children.push(childField.copy());\n    }\n  }\n\n  getCollectionParentField(): Field {\n    let parent: Field = this;\n    while (parent != null) {\n      if (parent.isCollection) {\n        return parent;\n      }\n      parent = parent.parentField;\n    }\n    return null;\n  }\n\n  isInCollection(): boolean {\n    return (this.getCollectionParentField() != null);\n  }\n\n  isInNestedCollection(): boolean {\n    const first = this.getCollectionParentField();\n    return first && first.parentField && first.parentField.getCollectionParentField() ? true : false;\n  }\n\n  isSource(): boolean {\n    return (this.docDef != null) && this.docDef.isSource;\n  }\n\n  getCollectionType(): string {\n    return this.isCollection ? (this.isArray ? 'ARRAY' : 'LIST') : null;\n  }\n\n  getFieldLabel(showTypes: boolean, includePath: boolean): string {\n    let fieldPath = includePath ? this.path : this.getNameWithNamespace();\n    if (showTypes && this.type && !this.isPropertyOrConstant()) {\n      fieldPath += ' (' + this.type + ')';\n    } else if (this.isProperty() && this.value != null) {\n      fieldPath += ' = ' + this.value;\n      if (showTypes && this.type) {\n        fieldPath += ' (' + this.type + ')';\n      }\n    }\n    if (!fieldPath && !this.parentField) {\n      fieldPath = '';\n    }\n    return fieldPath;\n  }\n\n  isPropertyOrConstant(): boolean {\n    return (this.docDef == null) ? false : this.docDef.isPropertyOrConstant;\n  }\n\n  isProperty(): boolean {\n    return (this.docDef == null) ? false : this.docDef.type === DocumentType.PROPERTY;\n  }\n\n  isConstant(): boolean {\n    return (this.docDef == null) ? false : this.docDef.type === DocumentType.CONSTANT;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addError\n                            \n                            \n                                    Private\n                                arrayDoesNotContainError\n                            \n                            \n                                clearMappingErrors\n                            \n                            \n                                clearValidationErrors\n                            \n                            \n                                clearWarnings\n                            \n                            \n                                debug\n                            \n                            \n                                displayErrorBlock\n                            \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                mappingError\n                            \n                            \n                                removeError\n                            \n                            \n                                resetAll\n                            \n                            \n                                validationError\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addError(message: string, level: ErrorLevel, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                ErrorLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            arrayDoesNotContainError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    arrayDoesNotContainError(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearMappingErrors\n                        \n                        \n                    \n                \n            \n            \n                \nclearMappingErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearValidationErrors\n                        \n                        \n                    \n                \n            \n            \n                \nclearValidationErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearWarnings\n                        \n                        \n                    \n                \n            \n            \n                \nclearWarnings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: string, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayErrorBlock\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayErrorBlock(errorBlock: ErrorInfo[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:73\n                \n            \n\n\n            \n                \n                    Display a block of error messages (from validation for instance) by feeding them into the main\nerror array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorBlock\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(message: string, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mappingError\n                        \n                        \n                    \n                \n            \n            \n                \nmappingError(message: string, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeError\n                        \n                        \n                    \n                \n            \n            \n                \nremoveError(identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetAll\n                        \n                        \n                    \n                \n            \n            \n                \nresetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validationError\n                        \n                        \n                    \n                \n            \n            \n                \nvalidationError(message: string, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: string, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ErrorInfo, ErrorLevel } from '../models/error.model';\nimport { ConfigModel } from '../models/config.model';\n\n@Injectable()\nexport class ErrorHandlerService {\n  cfg: ConfigModel = null;\n\n  debug(message: string, error: any) { this.addError(message, ErrorLevel.DEBUG, error); }\n  info(message: string, error: any) { this.addError(message, ErrorLevel.INFO, error); }\n  warn(message: string, error: any) { this.addError(message, ErrorLevel.WARN, error); }\n  error(message: string, error: any) { this.addError(message, ErrorLevel.ERROR, error); }\n  validationError(message: string, error: any) { this.addError(message, ErrorLevel.VALIDATION_ERROR, error); }\n  mappingError(message: string, error: any) { this.addError(message, ErrorLevel.MAPPING_ERROR, error); }\n\n  resetAll(): void {\n    this.cfg.errors = [];\n    this.cfg.validationErrors = [];\n  }\n\n  removeError(identifier: string): void {\n    this.cfg.errors = this.cfg.errors.filter(e => e.identifier !== identifier);\n    this.cfg.validationErrors = this.cfg.validationErrors.filter(e => e.identifier !== identifier);\n  }\n\n  clearMappingErrors(): void {\n    for (const e of this.cfg.errors) {\n      if (e.level === ErrorLevel.MAPPING_ERROR) {\n        this.removeError(e.identifier);\n      }\n    }\n  }\n\n  clearValidationErrors(): void {\n    for (const e of this.cfg.errors) {\n      if (e.level === ErrorLevel.VALIDATION_ERROR) {\n        this.removeError(e.identifier);\n      }\n    }\n  }\n\n  clearWarnings(): void {\n      for (const e of this.cfg.errors) {\n        if (e.level === ErrorLevel.WARN) {\n          this.removeError(e.identifier);\n        }\n      }\n  }\n\n  /**\n   * Display a block of error messages (from validation for instance) by feeding them into the main\n   * error array.\n   *\n   * @param errorBlock\n   */\n  displayErrorBlock(errorBlock: ErrorInfo[]): void {\n    if (errorBlock[0] && this.arrayDoesNotContainError(errorBlock[0].message)) {\n      const mergedArray = [ ...this.cfg.errors, ...errorBlock ];\n      this.cfg.errors = mergedArray;\n    }\n  }\n\n  private addError(message: string, level: ErrorLevel, error: any): void {\n    if (this.arrayDoesNotContainError(message)) {\n      if (error && error.message) {\n        message += ('\\n' + error.message);\n      }\n      const e = new ErrorInfo(message, level, error);\n      this.cfg.errors.unshift(e);\n    }\n  }\n\n  private arrayDoesNotContainError(message: string) {\n    return this.cfg.errors.filter(e => e.message === message).length === 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorInfo.html":{"url":"classes/ErrorInfo.html","title":"class - ErrorInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/error.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                error\n                            \n                            \n                                    Private\n                                    Static\n                                errorIdentifierCounter\n                            \n                            \n                                    Readonly\n                                identifier\n                            \n                            \n                                    Readonly\n                                level\n                            \n                            \n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, level: ErrorLevel, error?: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        ErrorLevel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            errorIdentifierCounter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorLevel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum ErrorLevel { DEBUG, INFO, WARN, ERROR, VALIDATION_ERROR, MAPPING_ERROR }\n\nexport class ErrorInfo {\n  private static errorIdentifierCounter = 0;\n\n  readonly identifier: string;\n  readonly message: string;\n  readonly level: ErrorLevel;\n  readonly error: any;\n\n  constructor(message: string, level: ErrorLevel, error?: any) {\n    this.identifier = ErrorInfo.errorIdentifierCounter.toString();\n    this.message = message;\n    this.level = level;\n    this.error = error;\n    ErrorInfo.errorIdentifierCounter++;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExampleAppModule.html":{"url":"modules/ExampleAppModule.html","title":"module - ExampleAppModule","body":"\n                   \n\n\n\n\n    Modules\n    ExampleAppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExampleAppModule\n\n\n\ncluster_ExampleAppModule_declarations\n\n\n\ncluster_ExampleAppModule_imports\n\n\n\ncluster_ExampleAppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nExampleAppModule\n\nExampleAppModule\n\nExampleAppModule -->\n\nAppComponent->ExampleAppModule\n\n\n\n\n\nAtlasmapNavbarComponent\n\nAtlasmapNavbarComponent\n\nExampleAppModule -->\n\nAtlasmapNavbarComponent->ExampleAppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nExampleAppModule->AppComponent \n\n\n\n\n\nAtlasmapNavbarComponent \n\nAtlasmapNavbarComponent \n\nAtlasmapNavbarComponent  -->\n\nExampleAppModule->AtlasmapNavbarComponent \n\n\n\n\n\nDataMapperModule\n\nDataMapperModule\n\nExampleAppModule -->\n\nDataMapperModule->ExampleAppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/example-app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AtlasmapNavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataMapperModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AtlasmapNavbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n    Copyright (C) 2017 Red Hat, Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { AtlasmapNavbarComponent } from './atlasmap-navbar.component';\n\nimport { DataMapperModule } from './lib/atlasmap-data-mapper/data-mapper.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AtlasmapNavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot([]),\n    DataMapperModule.withInterceptor(),\n  ],\n  providers: [],\n  bootstrap: [\n    AppComponent,\n    AtlasmapNavbarComponent,\n  ],\n})\n\nexport class ExampleAppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Examples.html":{"url":"classes/Examples.html","title":"class - Examples","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Examples\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/examples.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                pom\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            pom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `\n    \n\n        4.0.0\n        foo.bar\n        test.model\n        1.10.0\n        jar\n        Test :: Model\n\n        \n            \n                com.fasterxml.jackson.core\n                jackson-annotations\n                2.8.5\n            \n            \n                com.fasterxml.jackson.core\n                jackson-databind\n                2.8.5\n            \n            \n                com.fasterxml.jackson.core\n                jackson-core\n                2.8.5\n            \n        \n    \n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/examples.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Examples {\n  static pom = `\n    \n\n        4.0.0\n        foo.bar\n        test.model\n        1.10.0\n        jar\n        Test :: Model\n\n        \n            \n                com.fasterxml.jackson.core\n                jackson-annotations\n                2.8.5\n            \n            \n                com.fasterxml.jackson.core\n                jackson-databind\n                2.8.5\n            \n            \n                com.fasterxml.jackson.core\n                jackson-core\n                2.8.5\n            \n        \n    \n  `;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpressionNode.html":{"url":"classes/ExpressionNode.html","title":"class - ExpressionNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpressionNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                sequence\n                            \n                            \n                                    Protected\n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUuid\n                            \n                            \n                                    Abstract\n                                toHTML\n                            \n                            \n                                    Abstract\n                                toText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prefix: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prefix\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            sequence\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            uuid\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:27\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetUuid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toHTML()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { MappedField, MappingModel } from './mapping.model';\nimport { Subject } from 'rxjs';\n\nexport class ExpressionUpdatedEvent {\n  constructor(public node?: ExpressionNode, public offset?: number) {}\n}\n\nexport abstract class ExpressionNode {\n  protected static sequence = 0;\n  protected uuid;\n\n  constructor(prefix: string) {\n    this.uuid = prefix + ExpressionNode.sequence++;\n  }\n\n  getUuid() {\n    return this.uuid;\n  }\n\n  abstract toText(): string;\n  abstract toHTML(): string;\n}\n\nexport class TextNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-text-';\n\n  constructor(public str: string) {\n    super(TextNode.PREFIX);\n  }\n\n  toText(): string {\n    return this.str;\n  }\n\n  toHTML(): string {\n    return `${this.str.replace(/ /g, '&nbsp;')}`;\n  }\n\n}\n\nexport class FieldNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-field-';\n\n  constructor(private mapping: MappingModel, public field?: MappedField, private index?: number) {\n    super(FieldNode.PREFIX);\n    if (!field) {\n      this.field = mapping.getMappedFieldForIndex((index + 1).toString(), true);\n    }\n    if (!index) {\n      this.index = this.mapping.getIndexForMappedField(this.field) - 1;\n    }\n  }\n\n  toText(): string {\n    return '${' + this.index + '}';\n  }\n\n  toHTML(): string {\n    if (this.field && this.field.field) {\n      return `${this.field.field.name}`;\n    } else {\n      return `N/A`;\n    }\n  }\n\n}\n\nexport class ExpressionModel {\n  expressionUpdatedSource = new Subject();\n  expressionUpdated$ = this.expressionUpdatedSource.asObservable();\n\n  private _nodes: ExpressionNode[] = [];\n  private textCache = '';\n  private htmlCache = '';\n\n  constructor(private mapping: MappingModel, private cfg: ConfigModel) {}\n\n  generateInitialExpression() {\n    this.mapping.getUserMappedFields(true).forEach(f => this.appendFieldNode(f));\n  }\n\n  get nodes(): ReadonlyArray {\n    return this._nodes;\n  }\n\n  getLastNodeIndex() {\n    return this._nodes.length - 1;\n  }\n\n  getLastNode() {\n    return this._nodes[this.getLastNodeIndex()];\n  }\n\n  getNode(nodeId?: string): any {\n    if (!nodeId) {\n      return this.getLastNode();\n    }\n    return this._nodes.find(n => n.getUuid() === nodeId);\n  }\n\n  setConfigModel(cfg: ConfigModel) {\n    this.cfg = cfg;\n  }\n\n  /**\n   * Clear all text from the specified TextNode offset range or from the '@' to the end\n   * of the text node if no node ID is specified.\n   *\n   * Return the new UUID position indicator string or null.\n   *\n   * @param nodeId\n   * @param startOffset\n   * @param endOffset\n   */\n  clearText(nodeId?: string, startOffset?: number, endOffset?: number): TextNode {\n    let targetNode: TextNode;\n    let targetNodeIndex = 0;\n    if (!nodeId) {\n      const lastNode = this.getLastNode();\n      if (!(lastNode instanceof TextNode)) {\n        return null;\n      }\n      const keyPos = lastNode.str.indexOf('@');\n      if (keyPos !== -1) {\n        targetNodeIndex = this._nodes.indexOf(lastNode);\n        targetNode = lastNode;\n        targetNode.str = targetNode.str.substring(0, keyPos);\n      }\n    } else {\n      const node = this._nodes.find(n => n.getUuid() === nodeId);\n      if (!(node instanceof TextNode) || !endOffset) {\n        return null;\n      }\n      targetNode = node;\n      targetNodeIndex = this._nodes.indexOf(targetNode);\n      const cleanStr = targetNode.str.replace(targetNode.str.substring(startOffset, endOffset), '');\n      targetNode.str = cleanStr;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n    return targetNode;\n  }\n\n  /**\n   * Insert text into expression at specified position. If nodeId is not specified,\n   * it will be added to the end of expression. It parses the string\n   * and insert a set of TextNode & FieldNode if it contains field reference like ${0},\n   * otherwise just one TextNode.\n   * This emits ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   * @param str string to insert\n   * @param nodeId target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertText(str: string, nodeId?: string, offset?: number) {\n    this.insertNodes(this.createNodesFromText(str), nodeId, offset);\n  }\n\n  /**\n   * Insert an array of ExpressionNodes at the specified position. If insertPosition is\n   * not specified the nodes will be appended to the end of the expression.\n   * This emits an ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   *\n   * @param newNodes an array of ExpressionNode to add\n   * @param insertPosition target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertNodes(newNodes: ExpressionNode[], insertPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!insertPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        this._nodes.push(...newNodes);\n      } else if (last instanceof TextNode && newNodes[0] instanceof TextNode) {\n        const lastTextNode = last as TextNode;\n        (last as TextNode).str += (newNodes[0] as TextNode).str;\n        newNodes.splice(0, 1, last);\n        this._nodes.splice(this.getLastNodeIndex(), 1, ...newNodes);\n      } else if (last instanceof FieldNode && newNodes[0] instanceof FieldNode) {\n        this._nodes.splice(this.getLastNodeIndex(), 0, new TextNode(' + '), ...newNodes);\n      } else {\n        this._nodes.push(...newNodes);\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    const updatedEvent = new ExpressionUpdatedEvent();\n    const targetNode = this._nodes.find(n => n.getUuid() === insertPosition);\n    const targetNodeIndex = this._nodes.indexOf(targetNode);\n\n    if (targetNode instanceof TextNode) {\n      if (offset === undefined || offset === null || offset  0) {\n        if (newNodes[0] instanceof TextNode) {\n          targetNode.str = pre + (newNodes[0] as TextNode).str;\n          newNodes.splice(0, 1, targetNode);\n        } else {\n          targetNode.str = pre;\n          newNodes.splice(0, 0, targetNode);\n        }\n      }\n      if (post.length > 0) {\n        const lastNewNodeIndex = newNodes.length - 1;\n        if (newNodes[lastNewNodeIndex] instanceof TextNode) {\n          let mergedTextNode: TextNode;\n          if (pre.length > 0) {\n            mergedTextNode = newNodes[lastNewNodeIndex] as TextNode;\n            mergedTextNode.str += post;\n          } else {\n            mergedTextNode = targetNode;\n            mergedTextNode.str = (newNodes[lastNewNodeIndex]as TextNode).str + post;\n          }\n          newNodes.splice(lastNewNodeIndex, 1, mergedTextNode);\n        } else {\n          if (pre.length > 0) {\n            newNodes.push(new TextNode(post));\n          } else {\n            targetNode.str = post;\n            newNodes.push(targetNode);\n          }\n        }\n      }\n      this._nodes.splice(targetNodeIndex, 1, ...newNodes);\n      const lastAddedIndex = targetNodeIndex + newNodes.length - 1;\n      if (this._nodes[lastAddedIndex] instanceof FieldNode\n          && this.nodes[lastAddedIndex + 1] instanceof FieldNode) {\n        // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n        const space = new TextNode(' + ');\n        this._nodes.splice(lastAddedIndex + 1, 0, space);\n        updatedEvent.node = space;\n        updatedEvent.offset = 1;\n      } else if (this._nodes[lastAddedIndex] instanceof FieldNode) {\n        updatedEvent.node = this._nodes[lastAddedIndex + 1];\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = this._nodes[lastAddedIndex];\n        updatedEvent.offset = (this._nodes[lastAddedIndex] as TextNode).str.length - post.length;\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next(updatedEvent);\n      return;\n    }\n\n    // targetNode is a FieldNode - insert the text before it if offset is 0, otherwise after it\n    if (offset !== 0 && newNodes[0] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      newNodes.splice(0, 0, new TextNode(' + '));\n    }\n    const nextNodeIndex = offset === 0 ? targetNodeIndex : targetNodeIndex + 1;\n    const nextNode = this._nodes[nextNodeIndex];\n    if (nextNode instanceof TextNode && newNodes[newNodes.length - 1] instanceof TextNode) {\n      updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      nextNode.str = (newNodes[newNodes.length - 1] as TextNode).str + (nextNode as TextNode).str;\n      newNodes.pop();\n      this._nodes.splice(nextNodeIndex, 1, ...newNodes);\n      updatedEvent.node = nextNode;\n    } else if (nextNode instanceof FieldNode && newNodes[newNodes.length - 1] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      const space = new TextNode(' + ');\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes, space);\n      updatedEvent.node = space;\n      updatedEvent.offset = 1;\n    } else {\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes);\n      if (nextNode instanceof TextNode) {\n        updatedEvent.node = nextNode;\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = newNodes[newNodes.length - 1];\n        updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  removeToken(lastFieldRefRemoved: (removed: MappedField) => void, tokenPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!tokenPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        return;\n      }\n      if (last instanceof FieldNode) {\n        const removed = this._nodes.pop() as FieldNode;\n        if (!this._nodes.find(n => n instanceof FieldNode && n.field === removed.field)) {\n          lastFieldRefRemoved(removed.field);\n        }\n      } else if (last instanceof TextNode) {\n        if (last.str.length > 0) {\n          last.str = last.str.substring(0, last.str.length - 1);\n        } else {\n          this._nodes.pop();\n        }\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    let updatedEvent = new ExpressionUpdatedEvent();\n    let targetNode = this._nodes.find(n => n.getUuid() === tokenPosition);\n    let targetNodeIndex = this._nodes.indexOf(targetNode);\n    if (!targetNode || offset === -1) {\n      if (targetNodeIndex  n instanceof FieldNode && n.field === removed.field)) {\n        lastFieldRefRemoved(removed.field);\n      }\n      if (this._nodes.length > targetNodeIndex) {\n        if (this._nodes[targetNodeIndex - 1] instanceof TextNode\n            && this._nodes[targetNodeIndex] instanceof TextNode) {\n          const newOffset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n          (this._nodes[targetNodeIndex - 1] as TextNode).str\n              += (this._nodes[targetNodeIndex] as TextNode).str;\n          this._nodes.splice(targetNodeIndex, 1);\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = newOffset;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof FieldNode\n            && this._nodes[targetNodeIndex] instanceof FieldNode) {\n          const glue = new TextNode(' + ');\n          this._nodes.splice(targetNodeIndex, 0, glue);\n          updatedEvent.node = glue;\n          updatedEvent.offset = 3;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n        } else if (this._nodes[targetNodeIndex] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex];\n          updatedEvent.offset = 0;\n        }\n      } else {\n        // end of line\n        updatedEvent = undefined;\n      }\n    } else {\n      const targetString = (targetNode as TextNode).str;\n      (targetNode as TextNode).str = offset === 0 ? targetString.substr(1)\n        : targetString.substring(0, offset) + targetString.substring(offset + 1);\n      if ((targetNode as TextNode).str.length === 0) {\n        this.cfg.errorService.info('At least one space is required between field references.', null);\n        return;\n      }\n      updatedEvent.node = targetNode;\n      updatedEvent.offset = offset;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  /**\n   * Replace the content of the last text node with a substring terminating at the\n   * specified index.\n   *\n   * @param index\n   */\n  clearToEnd(index: number): void {\n    const last = this.getLastNode();\n    if (!(last instanceof TextNode)) {\n      return;\n    }\n    last.str = last.str.substring(0, index);\n  }\n\n  /**\n   * Reflect mapped source fields to the field references in the expression.\n   * Selected source fields are inserted into or appended to the expression,\n   * and unselected source fields are removed from expression.\n   *\n   * @param mapping Corresponding MappingModel object\n   */\n  updateFieldReference(mapping: MappingModel, insertPosition?: string, offset?: number) {\n    const mappedFields = mapping.getUserMappedFields(true);\n    const toAdd: MappedField[] = [];\n    const toRemove: MappedField[] = [];\n    let fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n\n    // Remove the field from the expression if unmapped.\n    for (const node of fieldNodes) {\n      if (mappedFields.includes(node.field)) {\n        continue;\n      }\n      const index = this._nodes.indexOf(node);\n      this._nodes.splice(index, 1);\n      if (this._nodes.length > index && this._nodes[index - 1] instanceof TextNode\n          && this._nodes[index] instanceof TextNode) {\n        (this._nodes[index - 1] as TextNode).str += (this._nodes[index] as TextNode).str;\n        this._nodes.splice(index, 1);\n      }\n    }\n\n    // Add the specified field into the expression - append if no insert position is specified.\n    fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n    for (const mfield of mappedFields) {\n      if (!fieldNodes.find(n => n.field === mfield)) {\n        if (insertPosition) {\n          this.insertNodes([new FieldNode(this.mapping, mfield)], insertPosition, offset);\n        } else {\n          this.appendFieldNode(mfield);\n        }\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  clear() {\n    this._nodes = [];\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  toText() {\n    return this.textCache;\n  }\n\n  toHTML() {\n    return this.htmlCache;\n  }\n\n  private updateCache() {\n    let answer = '';\n    this._nodes.forEach(node => answer += node.toText());\n    this.textCache = answer;\n    answer = '';\n    this._nodes.forEach(node => answer += node.toHTML());\n    this.htmlCache = answer;\n  }\n\n  private createNodesFromText(text: string): ExpressionNode[] {\n    const answer = [];\n    let position = -1;\n    let fn = null;\n\n    while ((position = text.search(/\\$\\{[0-9]+\\}/)) !== -1 ) {\n      if (position !== 0) {\n        answer.push(new TextNode(text.substring(0, position)));\n      }\n      const index = parseInt(text.substring(position + 2, text.indexOf('}')), 10);\n      fn = new FieldNode(this.mapping, null, index);\n      if (fn.field === null) {\n        this.cfg.errorService.error('Unable to map expression index to field node.', index);\n      } else {\n        answer.push(fn);\n      }\n      text = text.substring(text.indexOf('}') + 1);\n    }\n    if (text.length > 0) {\n      answer.push(new TextNode(text));\n    }\n    return answer;\n  }\n\n  private appendFieldNode(mfield: MappedField) {\n    const lastNode = this._nodes.pop();\n    if (lastNode instanceof FieldNode) {\n        this._nodes.push(lastNode, new TextNode(' + '));\n    } else if (lastNode instanceof TextNode) {\n      if (lastNode.str.length === 0) {\n        this._nodes.push(new TextNode(' + '));\n      } else {\n        this._nodes.push(lastNode);\n      }\n    }\n    this._nodes.push(new FieldNode(this.mapping, mfield));\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpressionUpdatedEvent.html":{"url":"classes/ExpressionUpdatedEvent.html","title":"class - ExpressionUpdatedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpressionUpdatedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                node\n                            \n                            \n                                    Public\n                                    Optional\n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(node?: ExpressionNode, offset?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                  \n                                                        \n                                                                        ExpressionNode\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        offset\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            node\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExpressionNode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            offset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { MappedField, MappingModel } from './mapping.model';\nimport { Subject } from 'rxjs';\n\nexport class ExpressionUpdatedEvent {\n  constructor(public node?: ExpressionNode, public offset?: number) {}\n}\n\nexport abstract class ExpressionNode {\n  protected static sequence = 0;\n  protected uuid;\n\n  constructor(prefix: string) {\n    this.uuid = prefix + ExpressionNode.sequence++;\n  }\n\n  getUuid() {\n    return this.uuid;\n  }\n\n  abstract toText(): string;\n  abstract toHTML(): string;\n}\n\nexport class TextNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-text-';\n\n  constructor(public str: string) {\n    super(TextNode.PREFIX);\n  }\n\n  toText(): string {\n    return this.str;\n  }\n\n  toHTML(): string {\n    return `${this.str.replace(/ /g, '&nbsp;')}`;\n  }\n\n}\n\nexport class FieldNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-field-';\n\n  constructor(private mapping: MappingModel, public field?: MappedField, private index?: number) {\n    super(FieldNode.PREFIX);\n    if (!field) {\n      this.field = mapping.getMappedFieldForIndex((index + 1).toString(), true);\n    }\n    if (!index) {\n      this.index = this.mapping.getIndexForMappedField(this.field) - 1;\n    }\n  }\n\n  toText(): string {\n    return '${' + this.index + '}';\n  }\n\n  toHTML(): string {\n    if (this.field && this.field.field) {\n      return `${this.field.field.name}`;\n    } else {\n      return `N/A`;\n    }\n  }\n\n}\n\nexport class ExpressionModel {\n  expressionUpdatedSource = new Subject();\n  expressionUpdated$ = this.expressionUpdatedSource.asObservable();\n\n  private _nodes: ExpressionNode[] = [];\n  private textCache = '';\n  private htmlCache = '';\n\n  constructor(private mapping: MappingModel, private cfg: ConfigModel) {}\n\n  generateInitialExpression() {\n    this.mapping.getUserMappedFields(true).forEach(f => this.appendFieldNode(f));\n  }\n\n  get nodes(): ReadonlyArray {\n    return this._nodes;\n  }\n\n  getLastNodeIndex() {\n    return this._nodes.length - 1;\n  }\n\n  getLastNode() {\n    return this._nodes[this.getLastNodeIndex()];\n  }\n\n  getNode(nodeId?: string): any {\n    if (!nodeId) {\n      return this.getLastNode();\n    }\n    return this._nodes.find(n => n.getUuid() === nodeId);\n  }\n\n  setConfigModel(cfg: ConfigModel) {\n    this.cfg = cfg;\n  }\n\n  /**\n   * Clear all text from the specified TextNode offset range or from the '@' to the end\n   * of the text node if no node ID is specified.\n   *\n   * Return the new UUID position indicator string or null.\n   *\n   * @param nodeId\n   * @param startOffset\n   * @param endOffset\n   */\n  clearText(nodeId?: string, startOffset?: number, endOffset?: number): TextNode {\n    let targetNode: TextNode;\n    let targetNodeIndex = 0;\n    if (!nodeId) {\n      const lastNode = this.getLastNode();\n      if (!(lastNode instanceof TextNode)) {\n        return null;\n      }\n      const keyPos = lastNode.str.indexOf('@');\n      if (keyPos !== -1) {\n        targetNodeIndex = this._nodes.indexOf(lastNode);\n        targetNode = lastNode;\n        targetNode.str = targetNode.str.substring(0, keyPos);\n      }\n    } else {\n      const node = this._nodes.find(n => n.getUuid() === nodeId);\n      if (!(node instanceof TextNode) || !endOffset) {\n        return null;\n      }\n      targetNode = node;\n      targetNodeIndex = this._nodes.indexOf(targetNode);\n      const cleanStr = targetNode.str.replace(targetNode.str.substring(startOffset, endOffset), '');\n      targetNode.str = cleanStr;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n    return targetNode;\n  }\n\n  /**\n   * Insert text into expression at specified position. If nodeId is not specified,\n   * it will be added to the end of expression. It parses the string\n   * and insert a set of TextNode & FieldNode if it contains field reference like ${0},\n   * otherwise just one TextNode.\n   * This emits ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   * @param str string to insert\n   * @param nodeId target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertText(str: string, nodeId?: string, offset?: number) {\n    this.insertNodes(this.createNodesFromText(str), nodeId, offset);\n  }\n\n  /**\n   * Insert an array of ExpressionNodes at the specified position. If insertPosition is\n   * not specified the nodes will be appended to the end of the expression.\n   * This emits an ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   *\n   * @param newNodes an array of ExpressionNode to add\n   * @param insertPosition target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertNodes(newNodes: ExpressionNode[], insertPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!insertPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        this._nodes.push(...newNodes);\n      } else if (last instanceof TextNode && newNodes[0] instanceof TextNode) {\n        const lastTextNode = last as TextNode;\n        (last as TextNode).str += (newNodes[0] as TextNode).str;\n        newNodes.splice(0, 1, last);\n        this._nodes.splice(this.getLastNodeIndex(), 1, ...newNodes);\n      } else if (last instanceof FieldNode && newNodes[0] instanceof FieldNode) {\n        this._nodes.splice(this.getLastNodeIndex(), 0, new TextNode(' + '), ...newNodes);\n      } else {\n        this._nodes.push(...newNodes);\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    const updatedEvent = new ExpressionUpdatedEvent();\n    const targetNode = this._nodes.find(n => n.getUuid() === insertPosition);\n    const targetNodeIndex = this._nodes.indexOf(targetNode);\n\n    if (targetNode instanceof TextNode) {\n      if (offset === undefined || offset === null || offset  0) {\n        if (newNodes[0] instanceof TextNode) {\n          targetNode.str = pre + (newNodes[0] as TextNode).str;\n          newNodes.splice(0, 1, targetNode);\n        } else {\n          targetNode.str = pre;\n          newNodes.splice(0, 0, targetNode);\n        }\n      }\n      if (post.length > 0) {\n        const lastNewNodeIndex = newNodes.length - 1;\n        if (newNodes[lastNewNodeIndex] instanceof TextNode) {\n          let mergedTextNode: TextNode;\n          if (pre.length > 0) {\n            mergedTextNode = newNodes[lastNewNodeIndex] as TextNode;\n            mergedTextNode.str += post;\n          } else {\n            mergedTextNode = targetNode;\n            mergedTextNode.str = (newNodes[lastNewNodeIndex]as TextNode).str + post;\n          }\n          newNodes.splice(lastNewNodeIndex, 1, mergedTextNode);\n        } else {\n          if (pre.length > 0) {\n            newNodes.push(new TextNode(post));\n          } else {\n            targetNode.str = post;\n            newNodes.push(targetNode);\n          }\n        }\n      }\n      this._nodes.splice(targetNodeIndex, 1, ...newNodes);\n      const lastAddedIndex = targetNodeIndex + newNodes.length - 1;\n      if (this._nodes[lastAddedIndex] instanceof FieldNode\n          && this.nodes[lastAddedIndex + 1] instanceof FieldNode) {\n        // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n        const space = new TextNode(' + ');\n        this._nodes.splice(lastAddedIndex + 1, 0, space);\n        updatedEvent.node = space;\n        updatedEvent.offset = 1;\n      } else if (this._nodes[lastAddedIndex] instanceof FieldNode) {\n        updatedEvent.node = this._nodes[lastAddedIndex + 1];\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = this._nodes[lastAddedIndex];\n        updatedEvent.offset = (this._nodes[lastAddedIndex] as TextNode).str.length - post.length;\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next(updatedEvent);\n      return;\n    }\n\n    // targetNode is a FieldNode - insert the text before it if offset is 0, otherwise after it\n    if (offset !== 0 && newNodes[0] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      newNodes.splice(0, 0, new TextNode(' + '));\n    }\n    const nextNodeIndex = offset === 0 ? targetNodeIndex : targetNodeIndex + 1;\n    const nextNode = this._nodes[nextNodeIndex];\n    if (nextNode instanceof TextNode && newNodes[newNodes.length - 1] instanceof TextNode) {\n      updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      nextNode.str = (newNodes[newNodes.length - 1] as TextNode).str + (nextNode as TextNode).str;\n      newNodes.pop();\n      this._nodes.splice(nextNodeIndex, 1, ...newNodes);\n      updatedEvent.node = nextNode;\n    } else if (nextNode instanceof FieldNode && newNodes[newNodes.length - 1] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      const space = new TextNode(' + ');\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes, space);\n      updatedEvent.node = space;\n      updatedEvent.offset = 1;\n    } else {\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes);\n      if (nextNode instanceof TextNode) {\n        updatedEvent.node = nextNode;\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = newNodes[newNodes.length - 1];\n        updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  removeToken(lastFieldRefRemoved: (removed: MappedField) => void, tokenPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!tokenPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        return;\n      }\n      if (last instanceof FieldNode) {\n        const removed = this._nodes.pop() as FieldNode;\n        if (!this._nodes.find(n => n instanceof FieldNode && n.field === removed.field)) {\n          lastFieldRefRemoved(removed.field);\n        }\n      } else if (last instanceof TextNode) {\n        if (last.str.length > 0) {\n          last.str = last.str.substring(0, last.str.length - 1);\n        } else {\n          this._nodes.pop();\n        }\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    let updatedEvent = new ExpressionUpdatedEvent();\n    let targetNode = this._nodes.find(n => n.getUuid() === tokenPosition);\n    let targetNodeIndex = this._nodes.indexOf(targetNode);\n    if (!targetNode || offset === -1) {\n      if (targetNodeIndex  n instanceof FieldNode && n.field === removed.field)) {\n        lastFieldRefRemoved(removed.field);\n      }\n      if (this._nodes.length > targetNodeIndex) {\n        if (this._nodes[targetNodeIndex - 1] instanceof TextNode\n            && this._nodes[targetNodeIndex] instanceof TextNode) {\n          const newOffset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n          (this._nodes[targetNodeIndex - 1] as TextNode).str\n              += (this._nodes[targetNodeIndex] as TextNode).str;\n          this._nodes.splice(targetNodeIndex, 1);\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = newOffset;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof FieldNode\n            && this._nodes[targetNodeIndex] instanceof FieldNode) {\n          const glue = new TextNode(' + ');\n          this._nodes.splice(targetNodeIndex, 0, glue);\n          updatedEvent.node = glue;\n          updatedEvent.offset = 3;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n        } else if (this._nodes[targetNodeIndex] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex];\n          updatedEvent.offset = 0;\n        }\n      } else {\n        // end of line\n        updatedEvent = undefined;\n      }\n    } else {\n      const targetString = (targetNode as TextNode).str;\n      (targetNode as TextNode).str = offset === 0 ? targetString.substr(1)\n        : targetString.substring(0, offset) + targetString.substring(offset + 1);\n      if ((targetNode as TextNode).str.length === 0) {\n        this.cfg.errorService.info('At least one space is required between field references.', null);\n        return;\n      }\n      updatedEvent.node = targetNode;\n      updatedEvent.offset = offset;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  /**\n   * Replace the content of the last text node with a substring terminating at the\n   * specified index.\n   *\n   * @param index\n   */\n  clearToEnd(index: number): void {\n    const last = this.getLastNode();\n    if (!(last instanceof TextNode)) {\n      return;\n    }\n    last.str = last.str.substring(0, index);\n  }\n\n  /**\n   * Reflect mapped source fields to the field references in the expression.\n   * Selected source fields are inserted into or appended to the expression,\n   * and unselected source fields are removed from expression.\n   *\n   * @param mapping Corresponding MappingModel object\n   */\n  updateFieldReference(mapping: MappingModel, insertPosition?: string, offset?: number) {\n    const mappedFields = mapping.getUserMappedFields(true);\n    const toAdd: MappedField[] = [];\n    const toRemove: MappedField[] = [];\n    let fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n\n    // Remove the field from the expression if unmapped.\n    for (const node of fieldNodes) {\n      if (mappedFields.includes(node.field)) {\n        continue;\n      }\n      const index = this._nodes.indexOf(node);\n      this._nodes.splice(index, 1);\n      if (this._nodes.length > index && this._nodes[index - 1] instanceof TextNode\n          && this._nodes[index] instanceof TextNode) {\n        (this._nodes[index - 1] as TextNode).str += (this._nodes[index] as TextNode).str;\n        this._nodes.splice(index, 1);\n      }\n    }\n\n    // Add the specified field into the expression - append if no insert position is specified.\n    fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n    for (const mfield of mappedFields) {\n      if (!fieldNodes.find(n => n.field === mfield)) {\n        if (insertPosition) {\n          this.insertNodes([new FieldNode(this.mapping, mfield)], insertPosition, offset);\n        } else {\n          this.appendFieldNode(mfield);\n        }\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  clear() {\n    this._nodes = [];\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  toText() {\n    return this.textCache;\n  }\n\n  toHTML() {\n    return this.htmlCache;\n  }\n\n  private updateCache() {\n    let answer = '';\n    this._nodes.forEach(node => answer += node.toText());\n    this.textCache = answer;\n    answer = '';\n    this._nodes.forEach(node => answer += node.toHTML());\n    this.htmlCache = answer;\n  }\n\n  private createNodesFromText(text: string): ExpressionNode[] {\n    const answer = [];\n    let position = -1;\n    let fn = null;\n\n    while ((position = text.search(/\\$\\{[0-9]+\\}/)) !== -1 ) {\n      if (position !== 0) {\n        answer.push(new TextNode(text.substring(0, position)));\n      }\n      const index = parseInt(text.substring(position + 2, text.indexOf('}')), 10);\n      fn = new FieldNode(this.mapping, null, index);\n      if (fn.field === null) {\n        this.cfg.errorService.error('Unable to map expression index to field node.', index);\n      } else {\n        answer.push(fn);\n      }\n      text = text.substring(text.indexOf('}') + 1);\n    }\n    if (text.length > 0) {\n      answer.push(new TextNode(text));\n    }\n    return answer;\n  }\n\n  private appendFieldNode(mfield: MappedField) {\n    const lastNode = this._nodes.pop();\n    if (lastNode instanceof FieldNode) {\n        this._nodes.push(lastNode, new TextNode(' + '));\n    } else if (lastNode instanceof TextNode) {\n      if (lastNode.str.length === 0) {\n        this._nodes.push(new TextNode(' + '));\n      } else {\n        this._nodes.push(lastNode);\n      }\n    }\n    this._nodes.push(new FieldNode(this.mapping, mfield));\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldAction.html":{"url":"classes/FieldAction.html","title":"class - FieldAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                argumentValues\n                            \n                            \n                                definition\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                getArgumentValue\n                            \n                            \n                                setArgumentValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            argumentValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldActionArgumentValue[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            definition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldActionDefinition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:77\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(definition: FieldActionDefinition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                FieldActionDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldAction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getArgumentValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetArgumentValue(argumentName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argumentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldActionArgumentValue\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setArgumentValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetArgumentValue(argumentName: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argumentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FieldActionArgument {\n  name: string = null;\n  type = 'STRING';\n  values = null;\n  serviceObject: any = new Object();\n}\n\nexport class FieldActionArgumentValue {\n  name: string = null;\n  value: string = null;\n}\n\nexport enum Multiplicity {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  ZERO_TO_ONE = 'ZERO_TO_ONE'\n}\n\nexport class FieldActionDefinition {\n  name: string;\n  isCustom: boolean;\n  arguments: FieldActionArgument[] = [];\n  method: string;\n  sourceType = 'undefined';\n  targetType = 'undefined';\n  multiplicity = Multiplicity.ONE_TO_ONE;\n  serviceObject: any = new Object();\n\n  populateFieldAction(action: FieldAction): void {\n    action.name = this.name;\n    action.definition = this;\n\n    // Use the parsed values if present, otherwise set to '0'.\n    if (action.argumentValues == null || action.argumentValues.length === 0) {\n      action.argumentValues = [];\n      for (const arg of this.arguments) {\n\n        // Default the input field to 0 for numerics\n        if (['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(arg.type) !== -1) {\n          action.setArgumentValue(arg.name, '0');\n        } else {\n          action.setArgumentValue(arg.name, '');\n        }\n      }\n    }\n  }\n\n  getArgumentForName(name: string): FieldActionArgument {\n    for (const argument of this.arguments) {\n      if (argument.name === name) {\n        return argument;\n      }\n    }\n    return null;\n  }\n\n}\n\nexport class FieldAction {\n  name: string;\n  definition: FieldActionDefinition = null;\n  argumentValues: FieldActionArgumentValue[] = [];\n\n  static create(definition: FieldActionDefinition): FieldAction {\n    const instance = new FieldAction();\n    instance.definition = definition;\n    instance.name = definition.name;\n    return instance;\n  }\n\n  getArgumentValue(argumentName: string): FieldActionArgumentValue {\n    for (const argValue of this.argumentValues) {\n      if (argValue.name === argumentName) {\n        return argValue;\n      }\n    }\n    const newArgValue: FieldActionArgumentValue = new FieldActionArgumentValue();\n    newArgValue.name = argumentName;\n    newArgValue.value = '0';\n    this.argumentValues.push(newArgValue);\n    return newArgValue;\n  }\n\n  setArgumentValue(argumentName: string, value: string): void {\n    this.getArgumentValue(argumentName).value = value;\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldActionArgument.html":{"url":"classes/FieldActionArgument.html","title":"class - FieldActionArgument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldActionArgument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                serviceObject\n                            \n                            \n                                type\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : new Object()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            values\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FieldActionArgument {\n  name: string = null;\n  type = 'STRING';\n  values = null;\n  serviceObject: any = new Object();\n}\n\nexport class FieldActionArgumentValue {\n  name: string = null;\n  value: string = null;\n}\n\nexport enum Multiplicity {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  ZERO_TO_ONE = 'ZERO_TO_ONE'\n}\n\nexport class FieldActionDefinition {\n  name: string;\n  isCustom: boolean;\n  arguments: FieldActionArgument[] = [];\n  method: string;\n  sourceType = 'undefined';\n  targetType = 'undefined';\n  multiplicity = Multiplicity.ONE_TO_ONE;\n  serviceObject: any = new Object();\n\n  populateFieldAction(action: FieldAction): void {\n    action.name = this.name;\n    action.definition = this;\n\n    // Use the parsed values if present, otherwise set to '0'.\n    if (action.argumentValues == null || action.argumentValues.length === 0) {\n      action.argumentValues = [];\n      for (const arg of this.arguments) {\n\n        // Default the input field to 0 for numerics\n        if (['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(arg.type) !== -1) {\n          action.setArgumentValue(arg.name, '0');\n        } else {\n          action.setArgumentValue(arg.name, '');\n        }\n      }\n    }\n  }\n\n  getArgumentForName(name: string): FieldActionArgument {\n    for (const argument of this.arguments) {\n      if (argument.name === name) {\n        return argument;\n      }\n    }\n    return null;\n  }\n\n}\n\nexport class FieldAction {\n  name: string;\n  definition: FieldActionDefinition = null;\n  argumentValues: FieldActionArgumentValue[] = [];\n\n  static create(definition: FieldActionDefinition): FieldAction {\n    const instance = new FieldAction();\n    instance.definition = definition;\n    instance.name = definition.name;\n    return instance;\n  }\n\n  getArgumentValue(argumentName: string): FieldActionArgumentValue {\n    for (const argValue of this.argumentValues) {\n      if (argValue.name === argumentName) {\n        return argValue;\n      }\n    }\n    const newArgValue: FieldActionArgumentValue = new FieldActionArgumentValue();\n    newArgValue.name = argumentName;\n    newArgValue.value = '0';\n    this.argumentValues.push(newArgValue);\n    return newArgValue;\n  }\n\n  setArgumentValue(argumentName: string, value: string): void {\n    this.getArgumentValue(argumentName).value = value;\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldActionArgumentValue.html":{"url":"classes/FieldActionArgumentValue.html","title":"class - FieldActionArgumentValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldActionArgumentValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FieldActionArgument {\n  name: string = null;\n  type = 'STRING';\n  values = null;\n  serviceObject: any = new Object();\n}\n\nexport class FieldActionArgumentValue {\n  name: string = null;\n  value: string = null;\n}\n\nexport enum Multiplicity {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  ZERO_TO_ONE = 'ZERO_TO_ONE'\n}\n\nexport class FieldActionDefinition {\n  name: string;\n  isCustom: boolean;\n  arguments: FieldActionArgument[] = [];\n  method: string;\n  sourceType = 'undefined';\n  targetType = 'undefined';\n  multiplicity = Multiplicity.ONE_TO_ONE;\n  serviceObject: any = new Object();\n\n  populateFieldAction(action: FieldAction): void {\n    action.name = this.name;\n    action.definition = this;\n\n    // Use the parsed values if present, otherwise set to '0'.\n    if (action.argumentValues == null || action.argumentValues.length === 0) {\n      action.argumentValues = [];\n      for (const arg of this.arguments) {\n\n        // Default the input field to 0 for numerics\n        if (['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(arg.type) !== -1) {\n          action.setArgumentValue(arg.name, '0');\n        } else {\n          action.setArgumentValue(arg.name, '');\n        }\n      }\n    }\n  }\n\n  getArgumentForName(name: string): FieldActionArgument {\n    for (const argument of this.arguments) {\n      if (argument.name === name) {\n        return argument;\n      }\n    }\n    return null;\n  }\n\n}\n\nexport class FieldAction {\n  name: string;\n  definition: FieldActionDefinition = null;\n  argumentValues: FieldActionArgumentValue[] = [];\n\n  static create(definition: FieldActionDefinition): FieldAction {\n    const instance = new FieldAction();\n    instance.definition = definition;\n    instance.name = definition.name;\n    return instance;\n  }\n\n  getArgumentValue(argumentName: string): FieldActionArgumentValue {\n    for (const argValue of this.argumentValues) {\n      if (argValue.name === argumentName) {\n        return argValue;\n      }\n    }\n    const newArgValue: FieldActionArgumentValue = new FieldActionArgumentValue();\n    newArgValue.name = argumentName;\n    newArgValue.value = '0';\n    this.argumentValues.push(newArgValue);\n    return newArgValue;\n  }\n\n  setArgumentValue(argumentName: string, value: string): void {\n    this.getArgumentValue(argumentName).value = value;\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldActionDefinition.html":{"url":"classes/FieldActionDefinition.html","title":"class - FieldActionDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldActionDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                arguments\n                            \n                            \n                                isCustom\n                            \n                            \n                                method\n                            \n                            \n                                multiplicity\n                            \n                            \n                                name\n                            \n                            \n                                serviceObject\n                            \n                            \n                                sourceType\n                            \n                            \n                                targetType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getArgumentForName\n                            \n                            \n                                populateFieldAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arguments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldActionArgument[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCustom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            method\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            multiplicity\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Multiplicity.ONE_TO_ONE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : new Object()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'undefined'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'undefined'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:42\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getArgumentForName\n                        \n                        \n                    \n                \n            \n            \n                \ngetArgumentForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldActionArgument\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            populateFieldAction\n                        \n                        \n                    \n                \n            \n            \n                \npopulateFieldAction(action: FieldAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FieldActionArgument {\n  name: string = null;\n  type = 'STRING';\n  values = null;\n  serviceObject: any = new Object();\n}\n\nexport class FieldActionArgumentValue {\n  name: string = null;\n  value: string = null;\n}\n\nexport enum Multiplicity {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  ZERO_TO_ONE = 'ZERO_TO_ONE'\n}\n\nexport class FieldActionDefinition {\n  name: string;\n  isCustom: boolean;\n  arguments: FieldActionArgument[] = [];\n  method: string;\n  sourceType = 'undefined';\n  targetType = 'undefined';\n  multiplicity = Multiplicity.ONE_TO_ONE;\n  serviceObject: any = new Object();\n\n  populateFieldAction(action: FieldAction): void {\n    action.name = this.name;\n    action.definition = this;\n\n    // Use the parsed values if present, otherwise set to '0'.\n    if (action.argumentValues == null || action.argumentValues.length === 0) {\n      action.argumentValues = [];\n      for (const arg of this.arguments) {\n\n        // Default the input field to 0 for numerics\n        if (['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(arg.type) !== -1) {\n          action.setArgumentValue(arg.name, '0');\n        } else {\n          action.setArgumentValue(arg.name, '');\n        }\n      }\n    }\n  }\n\n  getArgumentForName(name: string): FieldActionArgument {\n    for (const argument of this.arguments) {\n      if (argument.name === name) {\n        return argument;\n      }\n    }\n    return null;\n  }\n\n}\n\nexport class FieldAction {\n  name: string;\n  definition: FieldActionDefinition = null;\n  argumentValues: FieldActionArgumentValue[] = [];\n\n  static create(definition: FieldActionDefinition): FieldAction {\n    const instance = new FieldAction();\n    instance.definition = definition;\n    instance.name = definition.name;\n    return instance;\n  }\n\n  getArgumentValue(argumentName: string): FieldActionArgumentValue {\n    for (const argValue of this.argumentValues) {\n      if (argValue.name === argumentName) {\n        return argValue;\n      }\n    }\n    const newArgValue: FieldActionArgumentValue = new FieldActionArgumentValue();\n    newArgValue.name = argumentName;\n    newArgValue.value = '0';\n    this.argumentValues.push(newArgValue);\n    return newArgValue;\n  }\n\n  setArgumentValue(argumentName: string, value: string): void {\n    this.getArgumentValue(argumentName).value = value;\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FieldActionService.html":{"url":"injectables/FieldActionService.html","title":"injectable - FieldActionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FieldActionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/field-action.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                cfg\n                            \n                            \n                                    Private\n                                headers\n                            \n                            \n                                isInitialized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                appliesToField\n                            \n                            \n                                    Private\n                                appliesToSourceField\n                            \n                            \n                                    Private\n                                appliesToTargetField\n                            \n                            \n                                    Private\n                                clearActionDefinitions\n                            \n                            \n                                    Private\n                                doFetchFieldActions\n                            \n                            \n                                    Private\n                                extractFieldActionDefinition\n                            \n                            \n                                    Async\n                                fetchFieldActions\n                            \n                            \n                                getActionDefinitionForName\n                            \n                            \n                                getActionsAppliesToField\n                            \n                            \n                                    Private\n                                getActualField\n                            \n                            \n                                    Private\n                                matchesDate\n                            \n                            \n                                    Private\n                                matchesNumeric\n                            \n                            \n                                    Private\n                                sortFieldActionDefinitions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorService: ErrorHandlerService, logger: NGXLogger, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            appliesToField\n                        \n                        \n                    \n                \n            \n            \n                \nappliesToField(action: FieldActionDefinition, mapping: MappingModel, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:242\n                \n            \n\n\n            \n                \n                    Return true if the action's source/target types and collection types match the respective source/target\nfield properties for source transformations, or matches the respective target field properties only for\na target transformation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldActionDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            appliesToSourceField\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    appliesToSourceField(action: FieldActionDefinition, mapping: MappingModel, selectedSourceField: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:279\n                \n            \n\n\n            \n                \n                    Check if it could be applied to source field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldActionDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FieldMappingPair\n\n                                    \n                                \n                                \n                                    selectedSourceField\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected source field\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            appliesToTargetField\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    appliesToTargetField(action: FieldActionDefinition, mapping: MappingModel, selectedTargetField: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:304\n                \n            \n\n\n            \n                \n                    Check if it could be applied for target field. Target type may not change.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldActionDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FieldMappingPair\n\n                                    \n                                \n                                \n                                    selectedTargetField\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected target field\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearActionDefinitions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearActionDefinitions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:357\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            doFetchFieldActions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doFetchFieldActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractFieldActionDefinition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractFieldActionDefinition(actionDetail: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actionDetail\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldActionDefinition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchFieldActions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchFieldActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionDefinitionForName\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionDefinitionForName(actionName: string, multiplicity?: Multiplicity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    multiplicity\n                                    \n                                                Multiplicity\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldActionDefinition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionsAppliesToField\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionsAppliesToField(mapping: MappingModel, isSource: boolean, multiplicity: Multiplicity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:134\n                \n            \n\n\n            \n                \n                    Return the field action Definitions applicable to the specified field mapping pair.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                                \n                                    multiplicity\n                                    \n                                                Multiplicity\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        Multiplicity.ONE_TO_ONE\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     FieldActionDefinition[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getActualField\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getActualField(mapping: MappingModel, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:264\n                \n            \n\n\n            \n                \n                    Return the first non-padding field in either the source or target mappings.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Field\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            matchesDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchesDate(candidateType: string, selectedType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:339\n                \n            \n\n\n            \n                \n                    Return true if the candidate type and selected type are generically a date, false otherwise.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    candidateType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            matchesNumeric\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchesNumeric(candidateType: string, selectedType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:351\n                \n            \n\n\n            \n                \n                    Return true if the candidate type and selected type are generically numeric, false otherwise.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    candidateType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sortFieldActionDefinitions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sortFieldActionDefinitions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n    [Multiplicity.ONE_TO_ONE]: [],\n    [Multiplicity.ONE_TO_MANY]: [],\n    [Multiplicity.MANY_TO_ONE]: [],\n    [Multiplicity.ZERO_TO_ONE]: []\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new HttpHeaders(\n    {'Content-Type': 'application/json; application/octet-stream',\n     'Accept':       'application/json; application/octet-stream'})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ConfigModel } from '../models/config.model';\nimport { NGXLogger } from 'ngx-logger';\nimport { ErrorHandlerService } from './error-handler.service';\nimport { FieldActionDefinition, FieldActionArgument, Multiplicity } from '../models/field-action.model';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { MappingModel } from '../models/mapping.model';\nimport { Field } from '../models/field.model';\n\n@Injectable()\nexport class FieldActionService {\n  cfg: ConfigModel = ConfigModel.getConfig();\n  actions: { [key in Multiplicity]: FieldActionDefinition[]} = {\n    [Multiplicity.ONE_TO_ONE]: [],\n    [Multiplicity.ONE_TO_MANY]: [],\n    [Multiplicity.MANY_TO_ONE]: [],\n    [Multiplicity.ZERO_TO_ONE]: []\n  };\n\n  isInitialized = false;\n  private headers = new HttpHeaders(\n    {'Content-Type': 'application/json; application/octet-stream',\n     'Accept':       'application/json; application/octet-stream'});\n\n  constructor(\n    private errorService: ErrorHandlerService,\n    private logger: NGXLogger,\n    private http: HttpClient) {}\n\n  async fetchFieldActions(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this.cfg.preloadedFieldActionMetadata) {\n        this.clearActionDefinitions();\n        if (this.cfg.preloadedFieldActionMetadata && this.cfg.preloadedFieldActionMetadata.ActionDetails) {\n          for (const actionDetail of this.cfg.preloadedFieldActionMetadata.ActionDetails.actionDetail) {\n            const fieldActionDefinition = this.extractFieldActionDefinition(actionDetail);\n            if (!fieldActionDefinition.multiplicity) {\n              this.logger.debug(`Field action (${fieldActionDefinition.name}) is missing multiplicity, ingoring`);\n              continue;\n            }\n            if (fieldActionDefinition.name === 'Expression') { // Expression is handled in special manner\n              continue;\n            }\n            this.actions[fieldActionDefinition.multiplicity].push(fieldActionDefinition);\n          }\n        }\n        this.sortFieldActionDefinitions();\n        this.isInitialized = true;\n        resolve(true);\n        return;\n      }\n\n      if (this.cfg.mappingService == null) {\n        this.cfg.errorService.warn('Mapping service is not provided. Field Actions will not be used.', null);\n        this.isInitialized = true;\n        resolve(true);\n        return;\n      } else if (this.cfg.initCfg.baseMappingServiceUrl == null) {\n        this.cfg.errorService.warn('Mapping service URL is not provided. Field Actions will not be used.', null);\n        this.isInitialized = true;\n        resolve(true);\n        return;\n      }\n\n      // Fetch the field actions from the runtime service.\n      this.doFetchFieldActions().toPromise()\n        .then((fetchedActionConfigs: FieldActionDefinition[]) => {\n          if (fetchedActionConfigs.length === 1) {\n            this.logger.debug('No field action was returned from backend');\n            resolve(false);\n          }\n          this.clearActionDefinitions();\n          fetchedActionConfigs.forEach(action => {\n            if (!action.multiplicity) {\n              this.logger.debug(`Field action  (${action.name}) is missing multiplicity, ignoring`);\n              return;\n            }\n            if (action.name === 'Expression') { // Expression is handled in special manner\n              return;\n            }\n            this.actions[action.multiplicity].push(action);\n          });\n          this.sortFieldActionDefinitions();\n          this.isInitialized = true;\n          resolve(true);\n        }).catch((error: any) => {\n          if (error.status === 0) {\n            reject(`Fatal network error: Could not connect to AtlasMap design runtime service. (${error})`);\n          } else {\n            reject(`Could not load field action configs: (${error.message})`);\n          }\n        });\n    });\n  }\n\n  getActionDefinitionForName(actionName: string, multiplicity?: Multiplicity): FieldActionDefinition {\n    if (!this.actions || !actionName) {\n      return null;\n    }\n    let actions: FieldActionDefinition[] = [];\n    if (multiplicity) {\n      actions = this.actions[multiplicity];\n     } else {\n       Object.values(this.actions).forEach(arr => actions = actions.concat(arr));\n     }\n    for (const actionDef of actions) {\n      if (actionName === actionDef.name) {\n        return actionDef;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Return the field action Definitions applicable to the specified field mapping pair.\n   * @param mapping\n   */\n  getActionsAppliesToField(mapping: MappingModel, isSource: boolean = true,\n  multiplicity: Multiplicity = Multiplicity.ONE_TO_ONE): FieldActionDefinition[] {\n    if (!mapping || !this.actions) {\n      return [];\n    }\n    return this.actions[multiplicity].filter(d => this.appliesToField(d, mapping, isSource));\n  }\n\n  private doFetchFieldActions(): Observable {\n    return new Observable((observer: any) => {\n      const actionConfigs: FieldActionDefinition[] = [];\n      const url: string = this.cfg.initCfg.baseMappingServiceUrl + 'fieldActions';\n      this.cfg.logger.trace('Field Action Config Request');\n      this.http.get(url, { headers: this.headers }).toPromise().then((body: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Field Action Config Response: ${JSON.stringify(body)}`);\n        }\n        if (body && body.ActionDetails\n          && body.ActionDetails.actionDetail\n          && body.ActionDetails.actionDetail.length) {\n          for (const actionDetail of body.ActionDetails.actionDetail) {\n            const fieldActionConfig = this.extractFieldActionDefinition(actionDetail);\n            actionConfigs.push(fieldActionConfig);\n          }\n        }\n        observer.next(actionConfigs);\n        observer.complete();\n      }).catch((error: any) => {\n        observer.error(error);\n        observer.next(actionConfigs);\n        observer.complete();\n      });\n    });\n  }\n\n  private extractFieldActionDefinition(actionDetail: any): FieldActionDefinition {\n    if (this.cfg.isDebugEnabled()) {\n      this.cfg.logger.debug(`Deserializing field action definition: ${JSON.stringify(actionDetail)}`);\n    }\n\n    const fieldActionDefinition = new FieldActionDefinition();\n    fieldActionDefinition.name = actionDetail.name;\n    fieldActionDefinition.isCustom = actionDetail.custom;\n    fieldActionDefinition.sourceType = actionDetail.sourceType;\n    fieldActionDefinition.targetType = actionDetail.targetType;\n    fieldActionDefinition.method = actionDetail.method;\n    fieldActionDefinition.multiplicity = actionDetail.multiplicity;\n    fieldActionDefinition.serviceObject = actionDetail;\n\n    if (actionDetail.actionSchema) {\n\n      for (const key of Object.keys(actionDetail.actionSchema.properties)) {\n        const propertyObject = actionDetail.actionSchema.properties[key];\n        if (key === '@type') {\n          fieldActionDefinition.name = propertyObject.const;\n          continue;\n        }\n        const argumentDefinition = new FieldActionArgument();\n        argumentDefinition.name = key;\n        argumentDefinition.type = propertyObject.type;\n        argumentDefinition.values = propertyObject.enum;\n        argumentDefinition.serviceObject = propertyObject;\n        fieldActionDefinition.arguments.push(argumentDefinition);\n      }\n    }\n    return fieldActionDefinition;\n  }\n\n  private sortFieldActionDefinitions() {\n    Object.keys(this.actions).forEach(multiplicity => {\n      const definitions = this.actions[multiplicity];\n      const sortedActionDefinitions: FieldActionDefinition[] = [];\n      if (definitions == null || definitions.length === 0) {\n        return;\n      }\n\n      const defsByName: { [key: string]: FieldActionDefinition[]; } = {};\n      const defNames: string[] = [];\n      for (const fieldActionConfig of definitions) {\n        const name: string = fieldActionConfig.name;\n        let sameNamedDefs: FieldActionDefinition[] = defsByName[name];\n        if (!sameNamedDefs) {\n          sameNamedDefs = [];\n          defNames.push(name);\n        }\n        sameNamedDefs.push(fieldActionConfig);\n        defsByName[name] = sameNamedDefs;\n      }\n\n      defNames.sort();\n\n      for (const name of defNames) {\n        const sameNamedDefs: FieldActionDefinition[] = defsByName[name];\n        for (const fieldActionDefinition of sameNamedDefs) {\n          sortedActionDefinitions.push(fieldActionDefinition);\n        }\n      }\n      this.actions[multiplicity] = sortedActionDefinitions;\n    });\n  }\n\n  /**\n   * Return true if the action's source/target types and collection types match the respective source/target\n   * field properties for source transformations, or matches the respective target field properties only for\n   * a target transformation.\n   *\n   * @param mapping\n   */\n  appliesToField(action: FieldActionDefinition, mapping: MappingModel, isSource: boolean): boolean {\n\n    if (mapping == null) {\n      return false;\n    }\n    const selectedSourceField: Field = this.getActualField(mapping, true);\n    const selectedTargetField: Field = this.getActualField(mapping, false);\n\n    if ((isSource && selectedSourceField == null) || (!isSource) && selectedTargetField == null) {\n      return false;\n    }\n\n    return isSource ? this.appliesToSourceField(action, mapping, selectedSourceField)\n     : this.appliesToTargetField(action, mapping, selectedTargetField);\n  }\n\n  /**\n   * Return the first non-padding field in either the source or target mappings.\n   *\n   * @param mapping\n   * @param isSource\n   */\n  private getActualField(mapping: MappingModel, isSource: boolean): Field {\n    let targetField: Field = null;\n    for (targetField of mapping.getFields(isSource)) {\n      if ((targetField.name !== '')) {\n        break;\n      }\n    }\n    return targetField;\n  }\n\n  /**\n   * Check if it could be applied to source field.\n   * @param mapping FieldMappingPair\n   * @param selectedSourceField selected source field\n   */\n  private appliesToSourceField(action: FieldActionDefinition, mapping: MappingModel, selectedSourceField: Field): boolean {\n\n    // Check for matching types - date.\n    if (this.matchesDate(action.sourceType, selectedSourceField.type)) {\n      return true;\n    }\n\n    // Check for matching types - numeric.\n    if (this.matchesNumeric(action.sourceType, selectedSourceField.type)) {\n      return true;\n    }\n\n    // First check if the source types match.\n    if ((action.sourceType === 'ANY') || (selectedSourceField.type === action.sourceType)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if it could be applied for target field. Target type may not change.\n   * @param mapping FieldMappingPair\n   * @param selectedTargetField selected target field\n   */\n  private appliesToTargetField(action: FieldActionDefinition, mapping: MappingModel, selectedTargetField: Field): boolean {\n    if (selectedTargetField == null) {\n      return false;\n    }\n\n    if (action.multiplicity !== Multiplicity.ONE_TO_ONE) {\n      return false;\n    }\n\n    // Check for matching types - date.\n    if (this.matchesDate(action.sourceType, selectedTargetField.type)\n     && this.matchesDate(action.targetType, selectedTargetField.type)) {\n      return true;\n    }\n\n    // Check for matching types - numeric.\n    if (this.matchesNumeric(action.sourceType, selectedTargetField.type)\n     && this.matchesNumeric(action.targetType, selectedTargetField.type)) {\n      return true;\n    }\n\n    if (action.sourceType !== 'ANY' && action.sourceType !== selectedTargetField.type) {\n      return false;\n    }\n\n    // All other types must match the selected field types with the candidate field action types.\n    return (action.targetType === 'ANY' || selectedTargetField.type === action.targetType);\n  }\n\n  /**\n   * Return true if the candidate type and selected type are generically a date, false otherwise.\n   *\n   * @param candidateType\n   * @param selectedType\n   */\n  private matchesDate(candidateType: string, selectedType: string): boolean {\n    return ((candidateType === 'ANY') ||\n      (candidateType === 'ANY_DATE' &&\n        ['DATE', 'DATE_TIME', 'DATE_TIME_TZ', 'TIME'].indexOf(selectedType) !== -1));\n  }\n\n  /**\n   * Return true if the candidate type and selected type are generically numeric, false otherwise.\n   *\n   * @param candidateType\n   * @param selectedType\n   */\n  private matchesNumeric(candidateType: string, selectedType: string): boolean {\n    return ((candidateType === 'ANY') ||\n      (candidateType === 'NUMBER' &&\n        ['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(selectedType) !== -1));\n  }\n\n  private clearActionDefinitions() {\n    Object.keys(Multiplicity).forEach(m => this.actions[m] = []);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FieldEditComponent.html":{"url":"components/FieldEditComponent.html","title":"component - FieldEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FieldEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                field-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./field-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                dataSource\n                            \n                            \n                                docDef\n                            \n                            \n                                editMode\n                            \n                            \n                                field\n                            \n                            \n                                fieldType\n                            \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                isSource\n                            \n                            \n                                isXML\n                            \n                            \n                                namespaceAlias\n                            \n                            \n                                namespaces\n                            \n                            \n                                parentField\n                            \n                            \n                                parentFieldName\n                            \n                            \n                                valueType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                executeSearch\n                            \n                            \n                                fieldTypeSelectionChanged\n                            \n                            \n                                getField\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                handleOnBlur\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                namespaceSelectionChanged\n                            \n                            \n                                parentSelectionChanged\n                            \n                            \n                                valueTypeSelectionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:45\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            executeSearch\n                        \n                        \n                    \n                \n            \n            \n                \nexecuteSearch(filter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fieldTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nfieldTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getField\n                        \n                        \n                    \n                \n            \n            \n                \ngetField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Field\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleOnBlur\n                        \n                        \n                    \n                \n            \n            \n                \nhandleOnBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(field: Field, docDef: DocumentDefinition, isAdd: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docDef\n                                    \n                                                DocumentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isAdd\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            namespaceSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nnamespaceSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parentSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nparentSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nvalueTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                    \n                        \n                            Default value : new Field()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 'element'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('value')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isXML\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespaceAlias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespaces\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentFieldName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { DocumentDefinition, NamespaceModel } from '../models/document-definition.model';\nimport { Field } from '../models/field.model';\nimport { DocumentType } from '../common/config.types';\nimport { ConfigModel } from '../models/config.model';\nimport { Observable } from 'rxjs';\nimport { ModalWindowValidator } from './modal-window.component';\n\n@Component({\n  selector: 'field-edit',\n  templateUrl: './field-edit.component.html',\n})\n\nexport class FieldEditComponent implements ModalWindowValidator {\n  cfg: ConfigModel = ConfigModel.getConfig();\n  field: Field = new Field();\n  parentField: Field;\n  parentFieldName: String = null;\n  isSource = false;\n  fieldType: any = 'element';\n  valueType: any = 'STRING';\n  namespaceAlias = '';\n  editMode = false;\n  namespaces: NamespaceModel[] = [];\n  docDef: DocumentDefinition = null;\n  dataSource: Observable;\n  isXML = false;\n  @ViewChild('value') private focusEl: ElementRef;\n\n  constructor() {\n    this.dataSource = Observable.create((observer: any) => {\n      observer.next(this.executeSearch(observer.outerValue));\n    });\n  }\n\n  initialize(field: Field, docDef: DocumentDefinition, isAdd: boolean): void {\n    this.docDef = docDef;\n    this.editMode = !isAdd;\n    this.field = field == null ? new Field() : field.copy();\n    this.valueType = (this.field.type == null) ? 'STRING' : this.field.type;\n    this.parentField = this.field.parentField;\n\n    if (this.docDef.type === DocumentType.XML) {\n      this.isXML = true;\n      this.fieldType = this.field.isAttribute ? 'attribute' : 'element';\n      this.parentField = (this.field.parentField == null) ? docDef.fields[0] : this.field.parentField;\n      const unqualifiedNS: NamespaceModel = NamespaceModel.getUnqualifiedNamespace();\n      this.namespaceAlias = unqualifiedNS.alias;\n      if (this.field.namespaceAlias) {\n        this.namespaceAlias = this.field.namespaceAlias;\n      }\n      if (isAdd) { // on add, inherit namespace from parent field\n        this.namespaceAlias = this.parentField.namespaceAlias == null ? unqualifiedNS.alias : this.parentField.namespaceAlias;\n      }\n\n      this.namespaces = [unqualifiedNS].concat(this.docDef.namespaces);\n\n      // if the field references a namespace that doesn't exist, add a fake namespace option for the\n      // user to select if they desire to leave that bad namespace alias in place\n      let namespaceFound = false;\n      for (const ns of this.namespaces) {\n        if (ns.alias === this.namespaceAlias) {\n          namespaceFound = true;\n          break;\n        }\n      }\n      if (!namespaceFound) {\n        const fakeNamespace: NamespaceModel = new NamespaceModel();\n        fakeNamespace.alias = this.namespaceAlias;\n        this.namespaces.push(fakeNamespace);\n      }\n    }\n    this.parentFieldName = this.parentField.name;\n  }\n\n  handleOnBlur(event: any): void {\n    this.parentFieldName = this.parentField.name;\n  }\n\n  parentSelectionChanged(event: any): void {\n    const oldParentField: Field = this.parentField;\n    this.parentField = event.item['field'];\n    this.parentField = (this.parentField == null) ? oldParentField : this.parentField;\n    this.parentFieldName = this.parentField.name;\n\n    // change namespace dropdown selecte option to match parent fields' namespace automatically\n    const unqualifiedNS: NamespaceModel = NamespaceModel.getUnqualifiedNamespace();\n    this.namespaceAlias = this.parentField.namespaceAlias == null ? unqualifiedNS.alias : this.parentField.namespaceAlias;\n  }\n\n  fieldTypeSelectionChanged(event: any): void {\n    this.fieldType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  valueTypeSelectionChanged(event: any): void {\n    this.valueType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  namespaceSelectionChanged(event: any): void {\n    this.namespaceAlias = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  executeSearch(filter: string): any[] {\n    const formattedFields: any[] = [];\n\n    for (const field of this.docDef.getAllFields()) {\n      if (!field.isParentField()) {\n        continue;\n      }\n      const displayName = (field == null) ? '' : field.getFieldLabel(ConfigModel.getConfig().showTypes, true);\n      const formattedField: any = { 'field': field, 'displayName': displayName };\n      if (filter == null || filter === ''\n        || formattedField['displayName'].toLowerCase().indexOf(filter.toLowerCase()) !== -1) {\n        formattedFields.push(formattedField);\n      }\n      if (formattedFields.length > 9) {\n        break;\n      }\n    }\n    return formattedFields;\n  }\n\n  getField(): Field {\n    this.field.displayName = this.field.name;\n    this.field.parentField = this.parentField;\n    this.field.type = this.valueType;\n    this.field.userCreated = true;\n    this.field.serviceObject.jsonType = 'io.atlasmap.json.v2.JsonField';\n    if (this.docDef.type === DocumentType.XML) {\n      this.field.isAttribute = (this.fieldType === 'attribute');\n      this.field.namespaceAlias = this.namespaceAlias;\n      const unqualifiedNS: NamespaceModel = NamespaceModel.getUnqualifiedNamespace();\n      if (this.namespaceAlias === unqualifiedNS.alias) {\n        this.field.namespaceAlias = null;\n      }\n      this.field.serviceObject.jsonType = 'io.atlasmap.xml.v2.XmlField';\n    }\n    return this.field;\n  }\n\n  isDataValid(): boolean {\n    return ConfigModel.getConfig().isRequiredFieldValid(this.field.name, 'Name');\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n}\n\n    \n\n    \n        \n\n  {{ model['field'].docDef.name }}\n  {{ model['field'].path }}\n\n\n\n  \n    Parent\n    \n  \n  \n    Name\n    \n  \n  \n    Namespace\n    \n      \n        {{ ns.getPrettyLabel() }}\n      \n    \n  \n  \n    Field Type\n    \n      Element\n      Attribute\n    \n  \n  \n    Value Type\n    \n      Boolean\n      Byte\n      ByteArray\n      Char\n      Complex\n      Decimal\n      Double\n      Float\n      Integer\n      Long\n      Short\n      String\n      Time\n      Date\n      DateTime\n      DateTZ\n      TimeTZ\n      DateTimeTZ\n      Unsigned Byte\n      Unsigned Integer\n      Unsigned Long\n      Unsigned Short\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ model[\\'field\\'].docDef.name }}  {{ model[\\'field\\'].path }}      Parent            Name            Namespace                  {{ ns.getPrettyLabel() }}                  Field Type          Element      Attribute            Value Type          Boolean      Byte      ByteArray      Char      Complex      Decimal      Double      Float      Integer      Long      Short      String      Time      Date      DateTime      DateTZ      TimeTZ      DateTimeTZ      Unsigned Byte      Unsigned Integer      Unsigned Long      Unsigned Short      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'FieldEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldNode.html":{"url":"classes/FieldNode.html","title":"class - FieldNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ExpressionNode\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                field\n                            \n                            \n                                    Static\n                                    Readonly\n                                PREFIX\n                            \n                            \n                                    Protected\n                                    Static\n                                sequence\n                            \n                            \n                                    Protected\n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toHTML\n                            \n                            \n                                toText\n                            \n                            \n                                getUuid\n                            \n                            \n                                    Abstract\n                                toHTML\n                            \n                            \n                                    Abstract\n                                toText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapping: MappingModel, field?: MappedField, index?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        MappingModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        MappedField\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        index\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappedField\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PREFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'expression-field-'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            sequence\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                            \n                                \n                                    Inherited from         ExpressionNode\n\n                                \n                            \n                        \n                            \n                                    Defined in         ExpressionNode:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            uuid\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         ExpressionNode\n\n                                \n                            \n                        \n                            \n                                    Defined in         ExpressionNode:27\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \ntoHTML()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \ntoText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetUuid()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toHTML()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toText()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { MappedField, MappingModel } from './mapping.model';\nimport { Subject } from 'rxjs';\n\nexport class ExpressionUpdatedEvent {\n  constructor(public node?: ExpressionNode, public offset?: number) {}\n}\n\nexport abstract class ExpressionNode {\n  protected static sequence = 0;\n  protected uuid;\n\n  constructor(prefix: string) {\n    this.uuid = prefix + ExpressionNode.sequence++;\n  }\n\n  getUuid() {\n    return this.uuid;\n  }\n\n  abstract toText(): string;\n  abstract toHTML(): string;\n}\n\nexport class TextNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-text-';\n\n  constructor(public str: string) {\n    super(TextNode.PREFIX);\n  }\n\n  toText(): string {\n    return this.str;\n  }\n\n  toHTML(): string {\n    return `${this.str.replace(/ /g, '&nbsp;')}`;\n  }\n\n}\n\nexport class FieldNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-field-';\n\n  constructor(private mapping: MappingModel, public field?: MappedField, private index?: number) {\n    super(FieldNode.PREFIX);\n    if (!field) {\n      this.field = mapping.getMappedFieldForIndex((index + 1).toString(), true);\n    }\n    if (!index) {\n      this.index = this.mapping.getIndexForMappedField(this.field) - 1;\n    }\n  }\n\n  toText(): string {\n    return '${' + this.index + '}';\n  }\n\n  toHTML(): string {\n    if (this.field && this.field.field) {\n      return `${this.field.field.name}`;\n    } else {\n      return `N/A`;\n    }\n  }\n\n}\n\nexport class ExpressionModel {\n  expressionUpdatedSource = new Subject();\n  expressionUpdated$ = this.expressionUpdatedSource.asObservable();\n\n  private _nodes: ExpressionNode[] = [];\n  private textCache = '';\n  private htmlCache = '';\n\n  constructor(private mapping: MappingModel, private cfg: ConfigModel) {}\n\n  generateInitialExpression() {\n    this.mapping.getUserMappedFields(true).forEach(f => this.appendFieldNode(f));\n  }\n\n  get nodes(): ReadonlyArray {\n    return this._nodes;\n  }\n\n  getLastNodeIndex() {\n    return this._nodes.length - 1;\n  }\n\n  getLastNode() {\n    return this._nodes[this.getLastNodeIndex()];\n  }\n\n  getNode(nodeId?: string): any {\n    if (!nodeId) {\n      return this.getLastNode();\n    }\n    return this._nodes.find(n => n.getUuid() === nodeId);\n  }\n\n  setConfigModel(cfg: ConfigModel) {\n    this.cfg = cfg;\n  }\n\n  /**\n   * Clear all text from the specified TextNode offset range or from the '@' to the end\n   * of the text node if no node ID is specified.\n   *\n   * Return the new UUID position indicator string or null.\n   *\n   * @param nodeId\n   * @param startOffset\n   * @param endOffset\n   */\n  clearText(nodeId?: string, startOffset?: number, endOffset?: number): TextNode {\n    let targetNode: TextNode;\n    let targetNodeIndex = 0;\n    if (!nodeId) {\n      const lastNode = this.getLastNode();\n      if (!(lastNode instanceof TextNode)) {\n        return null;\n      }\n      const keyPos = lastNode.str.indexOf('@');\n      if (keyPos !== -1) {\n        targetNodeIndex = this._nodes.indexOf(lastNode);\n        targetNode = lastNode;\n        targetNode.str = targetNode.str.substring(0, keyPos);\n      }\n    } else {\n      const node = this._nodes.find(n => n.getUuid() === nodeId);\n      if (!(node instanceof TextNode) || !endOffset) {\n        return null;\n      }\n      targetNode = node;\n      targetNodeIndex = this._nodes.indexOf(targetNode);\n      const cleanStr = targetNode.str.replace(targetNode.str.substring(startOffset, endOffset), '');\n      targetNode.str = cleanStr;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n    return targetNode;\n  }\n\n  /**\n   * Insert text into expression at specified position. If nodeId is not specified,\n   * it will be added to the end of expression. It parses the string\n   * and insert a set of TextNode & FieldNode if it contains field reference like ${0},\n   * otherwise just one TextNode.\n   * This emits ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   * @param str string to insert\n   * @param nodeId target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertText(str: string, nodeId?: string, offset?: number) {\n    this.insertNodes(this.createNodesFromText(str), nodeId, offset);\n  }\n\n  /**\n   * Insert an array of ExpressionNodes at the specified position. If insertPosition is\n   * not specified the nodes will be appended to the end of the expression.\n   * This emits an ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   *\n   * @param newNodes an array of ExpressionNode to add\n   * @param insertPosition target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertNodes(newNodes: ExpressionNode[], insertPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!insertPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        this._nodes.push(...newNodes);\n      } else if (last instanceof TextNode && newNodes[0] instanceof TextNode) {\n        const lastTextNode = last as TextNode;\n        (last as TextNode).str += (newNodes[0] as TextNode).str;\n        newNodes.splice(0, 1, last);\n        this._nodes.splice(this.getLastNodeIndex(), 1, ...newNodes);\n      } else if (last instanceof FieldNode && newNodes[0] instanceof FieldNode) {\n        this._nodes.splice(this.getLastNodeIndex(), 0, new TextNode(' + '), ...newNodes);\n      } else {\n        this._nodes.push(...newNodes);\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    const updatedEvent = new ExpressionUpdatedEvent();\n    const targetNode = this._nodes.find(n => n.getUuid() === insertPosition);\n    const targetNodeIndex = this._nodes.indexOf(targetNode);\n\n    if (targetNode instanceof TextNode) {\n      if (offset === undefined || offset === null || offset  0) {\n        if (newNodes[0] instanceof TextNode) {\n          targetNode.str = pre + (newNodes[0] as TextNode).str;\n          newNodes.splice(0, 1, targetNode);\n        } else {\n          targetNode.str = pre;\n          newNodes.splice(0, 0, targetNode);\n        }\n      }\n      if (post.length > 0) {\n        const lastNewNodeIndex = newNodes.length - 1;\n        if (newNodes[lastNewNodeIndex] instanceof TextNode) {\n          let mergedTextNode: TextNode;\n          if (pre.length > 0) {\n            mergedTextNode = newNodes[lastNewNodeIndex] as TextNode;\n            mergedTextNode.str += post;\n          } else {\n            mergedTextNode = targetNode;\n            mergedTextNode.str = (newNodes[lastNewNodeIndex]as TextNode).str + post;\n          }\n          newNodes.splice(lastNewNodeIndex, 1, mergedTextNode);\n        } else {\n          if (pre.length > 0) {\n            newNodes.push(new TextNode(post));\n          } else {\n            targetNode.str = post;\n            newNodes.push(targetNode);\n          }\n        }\n      }\n      this._nodes.splice(targetNodeIndex, 1, ...newNodes);\n      const lastAddedIndex = targetNodeIndex + newNodes.length - 1;\n      if (this._nodes[lastAddedIndex] instanceof FieldNode\n          && this.nodes[lastAddedIndex + 1] instanceof FieldNode) {\n        // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n        const space = new TextNode(' + ');\n        this._nodes.splice(lastAddedIndex + 1, 0, space);\n        updatedEvent.node = space;\n        updatedEvent.offset = 1;\n      } else if (this._nodes[lastAddedIndex] instanceof FieldNode) {\n        updatedEvent.node = this._nodes[lastAddedIndex + 1];\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = this._nodes[lastAddedIndex];\n        updatedEvent.offset = (this._nodes[lastAddedIndex] as TextNode).str.length - post.length;\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next(updatedEvent);\n      return;\n    }\n\n    // targetNode is a FieldNode - insert the text before it if offset is 0, otherwise after it\n    if (offset !== 0 && newNodes[0] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      newNodes.splice(0, 0, new TextNode(' + '));\n    }\n    const nextNodeIndex = offset === 0 ? targetNodeIndex : targetNodeIndex + 1;\n    const nextNode = this._nodes[nextNodeIndex];\n    if (nextNode instanceof TextNode && newNodes[newNodes.length - 1] instanceof TextNode) {\n      updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      nextNode.str = (newNodes[newNodes.length - 1] as TextNode).str + (nextNode as TextNode).str;\n      newNodes.pop();\n      this._nodes.splice(nextNodeIndex, 1, ...newNodes);\n      updatedEvent.node = nextNode;\n    } else if (nextNode instanceof FieldNode && newNodes[newNodes.length - 1] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      const space = new TextNode(' + ');\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes, space);\n      updatedEvent.node = space;\n      updatedEvent.offset = 1;\n    } else {\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes);\n      if (nextNode instanceof TextNode) {\n        updatedEvent.node = nextNode;\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = newNodes[newNodes.length - 1];\n        updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  removeToken(lastFieldRefRemoved: (removed: MappedField) => void, tokenPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!tokenPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        return;\n      }\n      if (last instanceof FieldNode) {\n        const removed = this._nodes.pop() as FieldNode;\n        if (!this._nodes.find(n => n instanceof FieldNode && n.field === removed.field)) {\n          lastFieldRefRemoved(removed.field);\n        }\n      } else if (last instanceof TextNode) {\n        if (last.str.length > 0) {\n          last.str = last.str.substring(0, last.str.length - 1);\n        } else {\n          this._nodes.pop();\n        }\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    let updatedEvent = new ExpressionUpdatedEvent();\n    let targetNode = this._nodes.find(n => n.getUuid() === tokenPosition);\n    let targetNodeIndex = this._nodes.indexOf(targetNode);\n    if (!targetNode || offset === -1) {\n      if (targetNodeIndex  n instanceof FieldNode && n.field === removed.field)) {\n        lastFieldRefRemoved(removed.field);\n      }\n      if (this._nodes.length > targetNodeIndex) {\n        if (this._nodes[targetNodeIndex - 1] instanceof TextNode\n            && this._nodes[targetNodeIndex] instanceof TextNode) {\n          const newOffset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n          (this._nodes[targetNodeIndex - 1] as TextNode).str\n              += (this._nodes[targetNodeIndex] as TextNode).str;\n          this._nodes.splice(targetNodeIndex, 1);\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = newOffset;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof FieldNode\n            && this._nodes[targetNodeIndex] instanceof FieldNode) {\n          const glue = new TextNode(' + ');\n          this._nodes.splice(targetNodeIndex, 0, glue);\n          updatedEvent.node = glue;\n          updatedEvent.offset = 3;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n        } else if (this._nodes[targetNodeIndex] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex];\n          updatedEvent.offset = 0;\n        }\n      } else {\n        // end of line\n        updatedEvent = undefined;\n      }\n    } else {\n      const targetString = (targetNode as TextNode).str;\n      (targetNode as TextNode).str = offset === 0 ? targetString.substr(1)\n        : targetString.substring(0, offset) + targetString.substring(offset + 1);\n      if ((targetNode as TextNode).str.length === 0) {\n        this.cfg.errorService.info('At least one space is required between field references.', null);\n        return;\n      }\n      updatedEvent.node = targetNode;\n      updatedEvent.offset = offset;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  /**\n   * Replace the content of the last text node with a substring terminating at the\n   * specified index.\n   *\n   * @param index\n   */\n  clearToEnd(index: number): void {\n    const last = this.getLastNode();\n    if (!(last instanceof TextNode)) {\n      return;\n    }\n    last.str = last.str.substring(0, index);\n  }\n\n  /**\n   * Reflect mapped source fields to the field references in the expression.\n   * Selected source fields are inserted into or appended to the expression,\n   * and unselected source fields are removed from expression.\n   *\n   * @param mapping Corresponding MappingModel object\n   */\n  updateFieldReference(mapping: MappingModel, insertPosition?: string, offset?: number) {\n    const mappedFields = mapping.getUserMappedFields(true);\n    const toAdd: MappedField[] = [];\n    const toRemove: MappedField[] = [];\n    let fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n\n    // Remove the field from the expression if unmapped.\n    for (const node of fieldNodes) {\n      if (mappedFields.includes(node.field)) {\n        continue;\n      }\n      const index = this._nodes.indexOf(node);\n      this._nodes.splice(index, 1);\n      if (this._nodes.length > index && this._nodes[index - 1] instanceof TextNode\n          && this._nodes[index] instanceof TextNode) {\n        (this._nodes[index - 1] as TextNode).str += (this._nodes[index] as TextNode).str;\n        this._nodes.splice(index, 1);\n      }\n    }\n\n    // Add the specified field into the expression - append if no insert position is specified.\n    fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n    for (const mfield of mappedFields) {\n      if (!fieldNodes.find(n => n.field === mfield)) {\n        if (insertPosition) {\n          this.insertNodes([new FieldNode(this.mapping, mfield)], insertPosition, offset);\n        } else {\n          this.appendFieldNode(mfield);\n        }\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  clear() {\n    this._nodes = [];\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  toText() {\n    return this.textCache;\n  }\n\n  toHTML() {\n    return this.htmlCache;\n  }\n\n  private updateCache() {\n    let answer = '';\n    this._nodes.forEach(node => answer += node.toText());\n    this.textCache = answer;\n    answer = '';\n    this._nodes.forEach(node => answer += node.toHTML());\n    this.htmlCache = answer;\n  }\n\n  private createNodesFromText(text: string): ExpressionNode[] {\n    const answer = [];\n    let position = -1;\n    let fn = null;\n\n    while ((position = text.search(/\\$\\{[0-9]+\\}/)) !== -1 ) {\n      if (position !== 0) {\n        answer.push(new TextNode(text.substring(0, position)));\n      }\n      const index = parseInt(text.substring(position + 2, text.indexOf('}')), 10);\n      fn = new FieldNode(this.mapping, null, index);\n      if (fn.field === null) {\n        this.cfg.errorService.error('Unable to map expression index to field node.', index);\n      } else {\n        answer.push(fn);\n      }\n      text = text.substring(text.indexOf('}') + 1);\n    }\n    if (text.length > 0) {\n      answer.push(new TextNode(text));\n    }\n    return answer;\n  }\n\n  private appendFieldNode(mfield: MappedField) {\n    const lastNode = this._nodes.pop();\n    if (lastNode instanceof FieldNode) {\n        this._nodes.push(lastNode, new TextNode(' + '));\n    } else if (lastNode instanceof TextNode) {\n      if (lastNode.str.length === 0) {\n        this._nodes.push(new TextNode(' + '));\n      } else {\n        this._nodes.push(lastNode);\n      }\n    }\n    this._nodes.push(new FieldNode(this.mapping, mfield));\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileManagementService.html":{"url":"injectables/FileManagementService.html","title":"injectable - FileManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/file-management.service.ts\n        \n\n            \n                Description\n            \n            \n                Handles file manipulation stored in the backend, including import/export via UI.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _cfg\n                            \n                            \n                                    Private\n                                headers\n                            \n                            \n                                    Private\n                                jsonBuffer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportMappingsCatalog\n                            \n                            \n                                findMappingFiles\n                            \n                            \n                                getCurrentADMCatalog\n                            \n                            \n                                getCurrentMappingCatalog\n                            \n                            \n                                    Private\n                                getCurrentMappingJson\n                            \n                            \n                                    Private\n                                    Async\n                                getJsonBuf\n                            \n                            \n                                    Private\n                                getMappingId\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Async\n                                importADMCatalog\n                            \n                            \n                                resetAll\n                            \n                            \n                                setBinaryFileToService\n                            \n                            \n                                setMappingToService\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    cfg\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: NGXLogger, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            exportMappingsCatalog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exportMappingsCatalog(mappingsFileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:213\n                \n            \n\n\n            \n                \n                    Update the current mapping files and export the current mappings catalog (ADM).\nEstablish the file content in JSON format (mappings + schema + instance-schema), compress\nit (GZIP), update the runtime, then fetch the full ADM catalog ZIP file from the runtime\nand export it.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappingsFileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findMappingFiles\n                        \n                        \n                    \n                \n            \n            \n                \nfindMappingFiles(filter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentADMCatalog\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentADMCatalog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentMappingCatalog\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentMappingCatalog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:81\n                \n            \n\n\n            \n                \n                    Retrieve the current user data mappings catalog from the server as a GZIP compressed byte array buffer.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCurrentMappingJson\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentMappingJson()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:381\n                \n            \n\n\n            \n                \n                    Retrieve the current user AtlasMap data mappings from the server as an JSON buffer.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getJsonBuf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getJsonBuf()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:356\n                \n            \n\n\n            \n                \n                    Asynchronously retrieve the current user-defined AtlasMap mappings from the runtime server as an JSON buffer.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getMappingId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMappingId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:416\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(message: string, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:420\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            importADMCatalog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    importADMCatalog(mappingsFileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:313\n                \n            \n\n\n            \n                \n                    Perform a binary read of the specified catalog (.ADM) file and push it to the runtime.  The ADM file is\nin (ZIP) file format.  Once pushed, we can retrieve from runtime the extracted compressed (GZIP) mappings\nfile catalog as well as the mappings JSON file.  These files exist separately for performance reasons.\nOnce the runtime has its ADM catalog, catalog files and mappings file set then restart the DM.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    mappingsFileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nADM master ZIP catalog\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetAll\n                        \n                        \n                    \n                \n            \n            \n                \nresetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:138\n                \n            \n\n\n            \n                \n                    Establish an observable function to delete mapping files on the runtime.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBinaryFileToService\n                        \n                        \n                    \n                \n            \n            \n                \nsetBinaryFileToService(compressedBuffer: any, url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:186\n                \n            \n\n\n            \n                \n                    The user has either exported their mappings or imported new mappings.  Either way we're saving them on the server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    compressedBuffer\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMappingToService\n                        \n                        \n                    \n                \n            \n            \n                \nsetMappingToService(jsonBuffer: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:162\n                \n            \n\n\n            \n                \n                    Commit the specified AtlasMapping JSON user mapping string to the runtime service.  The mappings\nare kept separate so they can be updated with minimal overhead.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    jsonBuffer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new HttpHeaders(\n    {'Content-Type': 'application/json; application/octet-stream',\n     'Accept':       'application/json; application/octet-stream'})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            jsonBuffer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:38\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n\n                \n                    \n                        getcfg()\n                    \n                \n                            \n                                \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:42\n                                \n                            \n\n                \n                    \n                        setcfg(cfg)\n                    \n                \n                            \n                                \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:46\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            cfg\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ConfigModel } from '../models/config.model';\nimport { NGXLogger } from 'ngx-logger';\nimport { deflate } from 'pako';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, forkJoin } from 'rxjs';\nimport { DataMapperUtil } from '../common/data-mapper-util';\nimport { map, timeout } from 'rxjs/operators';\nimport { DocumentManagementService } from './document-management.service';\nimport { InspectionType } from '../common/config.types';\n\n/**\n * Handles file manipulation stored in the backend, including import/export via UI.\n */\n@Injectable()\nexport class FileManagementService {\n  _cfg: ConfigModel;\n\n  private headers = new HttpHeaders(\n    {'Content-Type': 'application/json; application/octet-stream',\n     'Accept':       'application/json; application/octet-stream'});\n  private jsonBuffer: string;\n\n  constructor(private logger: NGXLogger, private http: HttpClient) {}\n\n  get cfg() {\n    return this._cfg;\n  }\n\n  set cfg(cfg: ConfigModel) {\n    this._cfg = cfg;\n    if (!this._cfg.logger) {\n      this._cfg.logger = this.logger;\n    }\n  }\n\n  findMappingFiles(filter: string): Observable {\n    return new Observable((observer: any) => {\n      const url = this.cfg.initCfg.baseMappingServiceUrl + 'mappings' + (filter == null ? '' : '?filter=' + filter);\n      this.cfg.logger.trace('Mapping List Request');\n      this.http.get(url, { headers: this.headers }).toPromise().then((body: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping List Response: ${JSON.stringify(body)}`);\n        }\n        const entries: any[] = body.StringMap.stringMapEntry;\n        const mappingFileNames: string[] = [];\n        for (const entry of entries) {\n          mappingFileNames.push(entry.name);\n        }\n        observer.next(mappingFileNames);\n        observer.complete();\n      }).catch((error: any) => {\n        if (error.status !== DataMapperUtil.HTTP_STATUS_NO_CONTENT) {\n          this.handleError('Error occurred while accessing the current mapping files from the runtime service.', error);\n          observer.error(error);\n        }\n        observer.complete();\n      });\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n  /**\n   * Retrieve the current user data mappings catalog from the server as a GZIP compressed byte array buffer.\n   */\n  getCurrentMappingCatalog(): Observable {\n    const catalogName = 'adm-catalog-files.gz';\n    return new Observable((observer: any) => {\n      const baseURL: string = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/GZ/';\n      const url: string = baseURL + catalogName;\n      this.cfg.logger.trace('Mapping Catalog Request');\n      const catHeaders = new HttpHeaders(\n        { 'Content-Type':  'application/octet-stream',\n          'Accept':        'application/octet-stream',\n          'Response-Type': 'application/octet-stream'\n        });\n      this.http.get(url, { headers: catHeaders, responseType: 'arraybuffer' }).toPromise().then((body: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping Catalog Response: ${JSON.stringify(body)}`);\n        }\n        observer.next(body);\n        observer.complete();\n      }).catch((error: any) => {\n        if (error.status !== DataMapperUtil.HTTP_STATUS_NO_CONTENT) {\n          this.handleError('Error occurred while accessing the current mappings catalog from the runtime service.', error);\n          observer.error(error);\n        }\n        observer.complete();\n      });\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n  getCurrentADMCatalog(): Observable {\n    const atlasmapCatalogName = 'atlasmap-catalog.adm';\n    return new Observable((observer: any) => {\n      const baseURL: string = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/ZIP/';\n      const url: string = baseURL + atlasmapCatalogName;\n      this.cfg.logger.trace('Mapping Catalog Request');\n      const catHeaders = new HttpHeaders(\n        { 'Content-Type':  'application/octet-stream',\n          'Accept':        'application/octet-stream',\n          'Response-Type': 'application/octet-stream'\n        });\n      this.http.get(url, { headers: catHeaders, responseType: 'arraybuffer' }).toPromise().then((body: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping Catalog Response: ${JSON.stringify(body)}`);\n        }\n        observer.next(body);\n        observer.complete();\n      }).catch((error: any) => {\n        if (error.status !== DataMapperUtil.HTTP_STATUS_NO_CONTENT) {\n          this.handleError('Error occurred while accessing the ADM catalog from the runtime service.', error);\n          observer.error(error);\n        }\n        observer.complete();\n      });\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n  /**\n   * Establish an observable function to delete mapping files on the runtime.\n   */\n  resetAll(): Observable {\n    return new Observable((observer: any) => {\n      const url = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/RESET';\n      this.cfg.logger.trace('Mapping Service Request - Reset');\n      this.http.delete(url, { headers: this.headers }).toPromise().then((res: any) => {\n          if (this.cfg.isTraceEnabled()) {\n            this.cfg.logger.trace(`Mapping Service Response - Reset: ${JSON.stringify(res)}`);\n          }\n          observer.next(true);\n          observer.complete();\n          return res;\n        })\n        .catch((error: any) => {\n          this.handleError('Error occurred while resetting mappings.', error); },\n      );\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n /**\n  * Commit the specified AtlasMapping JSON user mapping string to the runtime service.  The mappings\n  * are kept separate so they can be updated with minimal overhead.\n  *\n  * @param buffer - JSON content\n  */\n  setMappingToService(jsonBuffer: string): Observable {\n    return new Observable((observer: any) => {\n      const url = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/JSON/' + this.getMappingId();\n      this.cfg.logger.trace('Mapping Service Request');\n      this.http.put(url, jsonBuffer, { headers: this.headers }).toPromise().then((res: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping Service Response: ${JSON.stringify(res)}`);\n        }\n        observer.next(true);\n        observer.complete();\n      })\n      .catch((error: any) => {\n        this.handleError('Error occurred while establishing mappings from an imported JSON.', error);\n        observer.error(error);\n        observer.complete();\n      });\n    });\n  }\n\n  /**\n   * The user has either exported their mappings or imported new mappings.  Either way we're saving them on the server.\n   *\n   * @param compressedBuffer\n   */\n   setBinaryFileToService(compressedBuffer: any, url: string): Observable {\n     return new Observable((observer: any) => {\n       this.cfg.logger.trace('Set Compressed Mapping Service Request');\n       this.http.put(url, compressedBuffer, { headers: this.headers }).toPromise().then((res: any) => {\n          if (this.cfg.isTraceEnabled()) {\n            this.cfg.logger.trace(`Set Compressed Mapping Service Response: ${JSON.stringify(res)}`);\n          }\n          observer.next(true);\n          observer.complete();\n       })\n      .catch((error: any) => {\n        this.handleError('Error occurred while saving mapping.', error);\n        observer.error(error);\n        observer.complete();\n      });\n    });\n   }\n\n  /**\n   * Update the current mapping files and export the current mappings catalog (ADM).\n   *\n   * Establish the file content in JSON format (mappings + schema + instance-schema), compress\n   * it (GZIP), update the runtime, then fetch the full ADM catalog ZIP file from the runtime\n   * and export it.\n   *\n   * @param event\n   */\n  async exportMappingsCatalog(mappingsFileName: string): Promise {\n    return new Promise(async(resolve, reject) => {\n      let aggregateBuffer = '   {\\n';\n      let userExport = true;\n\n      try {\n        if (mappingsFileName === null || mappingsFileName.length === 0) {\n          mappingsFileName = 'atlasmap-mapping.adm';\n          userExport = false;\n        }\n\n        // Retrieve the JSON mappings buffer from the server.\n        if (await this.getJsonBuf()) {\n          aggregateBuffer += DocumentManagementService.generateExportMappings(this.jsonBuffer[0]);\n        }\n\n        let exportMeta = '   \"exportMeta\": [\\n';\n        let exportBlockData = '      \"exportBlockData\": [\\n';\n        let docCount = 0;\n\n        // Establish two string arrays:\n        //   exportMeta - meta-data describing the instance or schema documents.\n        //   exportBlockData - the actual source of the instance/schema/mappings documents or the Java class name.\n        for (const doc of this.cfg.getAllDocs()) {\n          if (doc.inspectionSource !== null &&\n               (doc.inspectionType === InspectionType.INSTANCE) || (doc.inspectionType === InspectionType.SCHEMA) ||\n                 (doc.inspectionType === InspectionType.JAVA_CLASS) ) {\n            if (docCount > 0) {\n              exportMeta += ',\\n';\n              exportBlockData += ',\\n';\n            }\n            exportMeta += DocumentManagementService.generateExportMetaStr(doc);\n            exportBlockData += DocumentManagementService.generateExportBlockData(doc.inspectionSource);\n            docCount++;\n          }\n        }\n        exportMeta += '   ],\\n';\n        exportBlockData += '   ]\\n';\n        aggregateBuffer += exportMeta;\n        aggregateBuffer += exportBlockData;\n        aggregateBuffer += '   }\\n';\n\n        // Compress the JSON buffer - write out as binary.\n        const binBuffer = DataMapperUtil.str2bytes(aggregateBuffer);\n        try {\n          const compress = deflate(binBuffer, {gzip: true});\n          let fileContent: Blob = new Blob([compress], {type: 'application/octet-stream'});\n\n          // Save the model mappings to the runtime.\n          this.setBinaryFileToService(fileContent,\n            this.cfg.initCfg.baseMappingServiceUrl + 'mapping/GZ/' + this.getMappingId()).toPromise()\n            .then(async(result: boolean) => {\n\n            // Fetch the full ADM catalog file from the runtime (ZIP) and export it to to the local\n            // downloads area.\n            if (userExport) {\n\n              this.getCurrentADMCatalog().subscribe( async(value: Uint8Array) => {\n\n                // If value is null then no compressed mappings catalog is available on the server.\n                if (value !== null) {\n                  fileContent = new Blob([value], {type: 'application/octet-stream'});\n                  if (!await DataMapperUtil.writeFile(fileContent, mappingsFileName)) {\n                    this.cfg.errorService.mappingError('Unable to save the current data mappings.', null);\n                  }\n                }\n                resolve(true);\n              });\n            }\n            resolve(true);\n          }).catch((error: any) => {\n            if (error.status === 0) {\n              this.cfg.errorService.mappingError(\n                'Fatal network error: Unable to connect to the AtlasMap design runtime service.', error);\n            } else {\n              this.cfg.errorService.mappingError(\n                'Unable to update the catalog mappings file to the AtlasMap design runtime service.  ' +\n                  error.status + ' ' + error.statusText, error);\n            }\n          });\n        } catch (error1) {\n          this.cfg.errorService.mappingError('Unable to compress the current data mappings.\\n', error1);\n          return;\n        }\n      } catch (error) {\n        this.cfg.errorService.mappingError('Unable to export the current data mappings.', error);\n        return;\n      }\n    });\n  }\n\n  /**\n   * Perform a binary read of the specified catalog (.ADM) file and push it to the runtime.  The ADM file is\n   * in (ZIP) file format.  Once pushed, we can retrieve from runtime the extracted compressed (GZIP) mappings\n   * file catalog as well as the mappings JSON file.  These files exist separately for performance reasons.\n   *\n   * Once the runtime has its ADM catalog, catalog files and mappings file set then restart the DM.\n   *\n   * @param mappingsFileName - ADM master ZIP catalog\n   */\n  async importADMCatalog(mappingsFileName: string): Promise {\n    return new Promise(async(resolve, reject) => {\n      let fileBin = null;\n      const reader = new FileReader();\n\n      // Turn the imported ADM file into a binary octet stream.\n      try {\n        fileBin = await DataMapperUtil.readBinaryFile(mappingsFileName, reader);\n      } catch (error) {\n        this.cfg.errorService.mappingError('Unable to import the specified catalog file \\'' + mappingsFileName + '\\'', error);\n        return;\n      }\n      const fileContent: Blob = new Blob([fileBin], {type: 'application/octet-stream'});\n\n      // Push the binary stream to the runtime.\n      this.setBinaryFileToService(fileContent, this.cfg.initCfg.baseMappingServiceUrl +\n        'mapping/ZIP/' + this.getMappingId()).toPromise().then( async(result: boolean) => {\n\n        try {\n          this.cfg.mappings = null;\n          this.cfg.clearDocs();\n          await this.cfg.initializationService.initialize();\n        } catch (error) {\n          this.cfg.errorService.mappingError('Unable to import the catalog file: \\n' + mappingsFileName +\n            '\\n' + error.message, error);\n          return;\n        }\n      }).catch((error: any) => {\n        if (error.status === 0) {\n          this.cfg.errorService.mappingError(\n            'Fatal network error: Unable to connect to the AtlasMap design runtime service.', error);\n        } else {\n          this.cfg.errorService.mappingError(\n            'Unable to send the ADM file to the runtime service.  ' + error.status + ' ' + error.statusText, error);\n        }\n      });\n      resolve(true);\n    });\n  }\n\n  /**\n   * Asynchronously retrieve the current user-defined AtlasMap mappings from the runtime server as an JSON buffer.\n   */\n  private async getJsonBuf(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this.cfg.mappings === null) {\n        resolve(false);\n      }\n      this.cfg.mappingFiles[0] = this.cfg.mappings.name;\n      this.getCurrentMappingJson().toPromise().then((result: string) => {\n        this.jsonBuffer = result;\n        resolve(true);\n      }).catch((error: any) => {\n        if (error.status === 0) {\n          this.cfg.errorService.mappingError(\n            'Fatal network error: Unable to connect to the AtlasMap design runtime service.', error);\n        } else {\n          this.cfg.errorService.mappingError(\n            'Unable to access current mapping definitions: ' + error.status + ' ' + error.statusText, error);\n        }\n        resolve(false);\n      });\n    });\n  }\n\n  /**\n   * Retrieve the current user AtlasMap data mappings from the server as an JSON buffer.\n   */\n  private getCurrentMappingJson(): Observable {\n    const mappingFileNames: string[] = this.cfg.mappingFiles;\n    return new Observable((observer: any) => {\n      const baseURL: string = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/JSON/';\n      const operations: Observable[] = [];\n      for (const mappingName of mappingFileNames) {\n        const url: string = baseURL + mappingName;\n        this.cfg.logger.trace('Mapping Service Request');\n        const jsonHeaders = new HttpHeaders(\n          { 'Content-Type':  'application/json',\n            'Accept':        'application/json',\n            'Response-Type': 'application/json'\n          });\n        const operation = this.http.get(url, { headers: jsonHeaders, responseType: 'text' }).pipe(map((res: any) => res ));\n        operations.push(operation);\n      }\n\n      forkJoin(operations).toPromise().then((data: string[]) => {\n        if (!data) {\n          observer.next('no data');\n          observer.complete();\n          return;\n        }\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping Service Response: ${JSON.stringify(data)}`);\n        }\n        observer.next(data);\n        observer.complete();\n      }).catch((error: any) => {\n        observer.error(error);\n        observer.complete();\n      });\n    });\n  }\n\n  private getMappingId(): string {\n    return (this.cfg.mappingFiles.length > 0) ? this.cfg.mappingFiles[0] : '0';\n  }\n\n  private handleError(message: string, error: any): void {\n    this.cfg.errorService.mappingError(message, error);\n    this.cfg.initCfg.initialized = true;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusDirective.html":{"url":"directives/FocusDirective.html","title":"directive - FocusDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FocusDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/common/focus.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterContentChecked\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [focus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hasFocus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentChecked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/common/focus.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        focus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/common/focus.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentChecked\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentChecked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/focus.directive.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hasFocus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/common/focus.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input, AfterContentChecked } from '@angular/core';\n\n@Directive({\n  selector: '[focus]'\n})\nexport class FocusDirective implements AfterContentChecked {\n\n  @Input() focus: boolean;\n  private hasFocus = false;\n\n  constructor(private elementRef: ElementRef) {\n  }\n\n  ngAfterContentChecked() {\n    if (this.focus && !this.hasFocus) {\n      this.elementRef.nativeElement.focus();\n      this.hasFocus = true;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LineModel.html":{"url":"classes/LineModel.html","title":"class - LineModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LineModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/components/line-machine.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sourceX\n                            \n                            \n                                sourceY\n                            \n                            \n                                stroke\n                            \n                            \n                                style\n                            \n                            \n                                targetField\n                            \n                            \n                                targetX\n                            \n                            \n                                targetY\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/line-machine.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/line-machine.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stroke\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'url(#line-gradient-dormant)'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/line-machine.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeStyle\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/line-machine.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/line-machine.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/line-machine.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/line-machine.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, Input, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { ConfigModel, AdmRedrawMappingLinesEvent } from '../models/config.model';\nimport { MappingModel } from '../models/mapping.model';\nimport { Field } from '../models/field.model';\n\nimport { DocumentDefinitionComponent } from './document-definition.component';\nimport { DocumentFieldDetailComponent } from './document-field-detail.component';\nimport { Subscription } from 'rxjs';\n\nexport class LineModel {\n  sourceX: string;\n  sourceY: string;\n  targetX: string;\n  targetY: string;\n  stroke = 'url(#line-gradient-dormant)';\n  style: SafeStyle;\n  targetField: Field;\n}\n\n@Component({\n  selector: 'line-machine',\n  templateUrl: './line-machine.component.html',\n})\n\nexport class LineMachineComponent implements OnInit, OnDestroy {\n  @Input() cfg: ConfigModel;\n  @Input() docDefInput: DocumentDefinitionComponent;\n  @Input() docDefOutput: DocumentDefinitionComponent;\n\n  lines: LineModel[] = [];\n  lineBeingFormed: LineModel;\n  drawingLine = false;\n  svgStyle: SafeStyle;\n\n  @ViewChild('lineMachineElement') lineMachineElement: ElementRef;\n\n  private yOffset = 3;\n  private mappingUpdatedSubscription: Subscription;\n\n  constructor(private sanitizer: DomSanitizer, public detector: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.mappingUpdatedSubscription = this.cfg.mappingService.mappingUpdated$.subscribe(() => {\n      this.mappingChanged();\n      this.docDefInput.setLineMachine(this);\n      this.docDefOutput.setLineMachine(this);\n    });\n  }\n\n  ngOnDestroy() {\n    this.mappingUpdatedSubscription.unsubscribe();\n  }\n\n  handleRedrawMappingLinesEvent(event: AdmRedrawMappingLinesEvent): void {\n    const lmcInstance: LineMachineComponent = event._lmcInstance;\n    lmcInstance.redrawLinesForMappings();\n  }\n\n  /**\n   * Match the line geometry of a selected line to determine the matching line model array element.  Return\n   * the target field from that array element.\n   *\n   * @param selectedLineAttrs\n   */\n  private getTargetFieldFromLine(selectedLineAttrs: NamedNodeMap): Field {\n    for (const line of this.lines) {\n      if ((selectedLineAttrs[1].nodeValue === line.sourceX) &&\n          (selectedLineAttrs[2].nodeValue === line.sourceY) &&\n          (selectedLineAttrs[3].nodeValue === line.targetX) &&\n          (selectedLineAttrs[4].nodeValue === line.targetY)) {\n        return line.targetField;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * The user has selected between the panels.  This is likely a line - verify it and select the fields\n   * associated with the line.\n   *\n   * @param event\n   */\n  handleLineClick(event) {\n    const selectedElement = event.target;\n    if (selectedElement !== null && selectedElement.nodeName === 'line') {\n      const targetField: Field = this.getTargetFieldFromLine(selectedElement.attributes);\n      if (targetField != null) {\n        this.cfg.mappingService.fieldSelected(targetField, false);\n        setTimeout(() => {\n          this.redrawLinesForMappings();\n        }, 1);\n      }\n    }\n  }\n\n  addLineFromParams(sourceX: string, sourceY: string, targetX: string, targetY: string, stroke: string, targetField: Field): void {\n    const l: LineModel = new LineModel();\n    l.sourceX = sourceX;\n    l.sourceY = sourceY;\n    l.targetX = targetX;\n    l.targetY = targetY;\n    l.stroke = stroke;\n    l.targetField = targetField;\n    this.addLine(l);\n  }\n\n  addLine(l: LineModel): void {\n    this.createLineStyle(l);\n    this.lines.push(l);\n  }\n\n  setLineBeingFormed(l: LineModel): void {\n    if (l != null) {\n      this.createLineStyle(l);\n    }\n    this.lineBeingFormed = l;\n  }\n\n  clearLines(): void {\n    this.lines = [];\n    this.lineBeingFormed = null;\n    this.drawingLine = false;\n  }\n\n  drawLine(event: MouseEvent): void {\n    this.drawCurrentLine(event.offsetX.toString(), event.offsetY.toString());\n  }\n\n  drawCurrentLine(x: string, y: string): void {\n    if (this.drawingLine && this.lineBeingFormed) {\n      this.lineBeingFormed.targetX = x;\n      this.lineBeingFormed.targetY = y;\n    }\n  }\n\n  handleDocumentFieldMouseOver(component: DocumentFieldDetailComponent, event: any, isSource: boolean): void {\n    if (!this.drawingLine) {\n      return;\n    }\n    if (isSource) {\n      return;\n    }\n    const targetY = this.docDefOutput.getFieldDetailComponentPosition(component.field).y;\n    this.drawCurrentLine('100%', (targetY + this.yOffset).toString());\n  }\n\n  mappingChanged(): void {\n    this.drawingLine = false;\n    this.setLineBeingFormed(null);\n    this.redrawLinesForMappings();\n  }\n\n  redrawLinesForMappings(): void {\n    if (!this.cfg.initCfg.initialized || !this.cfg.mappings) {\n      this.clearLines();\n\n      // Clear any scroll deltas from the sources and targets panels.\n      if (this.docDefOutput) {\n        this.docDefInput.handleScroll(null);\n      }\n      if (this.docDefOutput) {\n        this.docDefOutput.handleScroll(null);\n      }\n      return;\n    }\n    if (!this.cfg.mappings.activeMapping) {\n      this.setLineBeingFormed(null);\n    }\n    this.clearLines();\n    if (!this.cfg.showMappedFields) {\n      return;\n    }\n    const mappings: MappingModel[] = this.cfg.mappings.mappings;\n    const activeMapping: MappingModel = this.cfg.mappings.activeMapping;\n    let foundSelectedMapping = false;\n    for (const m of mappings) {\n      foundSelectedMapping = foundSelectedMapping || (m === activeMapping);\n      this.drawLinesForMapping(m);\n    }\n    if (!foundSelectedMapping && activeMapping) {\n      this.drawLinesForMapping(activeMapping);\n    }\n    setTimeout(() => {\n      this.detector.detectChanges();\n    }, 10);\n  }\n\n  private createLineStyle(l: LineModel): void {\n    // angular2 will throw an error if we don't use this sanitizer to signal to angular2 that the css style value is ok.\n    l.style = this.sanitizer.bypassSecurityTrustStyle('stroke:' + l.stroke + '; stroke-width:4px;');\n  }\n\n  private drawLinesForMapping(m: MappingModel): void {\n    const el: any = this.lineMachineElement.nativeElement;\n    const lineMachineHeight: number = el.offsetHeight;\n\n    const isSelectedMapping: boolean = (this.cfg.mappings.activeMapping === m);\n    const stroke: string = 'url(#line-gradient-' + (isSelectedMapping ? 'active' : 'dormant') + ')';\n    if (!m.sourceFields.length || !m.targetFields.length) {\n      return;\n    }\n\n    for (const mappedInputField of m.sourceFields) {\n      const inputField: Field = mappedInputField.field;\n      if (!this.checkFieldEligibiltyForLineDrawing(inputField, 'input', m)) {\n        continue;\n      }\n\n      const inputFieldPos: any = this.getScreenPosForField(inputField, this.docDefInput);\n      if (inputFieldPos == null) {\n        continue;\n      }\n\n      let sourceY: number = inputFieldPos.y;\n      sourceY = (sourceY  (lineMachineHeight - 27)) ? (lineMachineHeight - 27) : sourceY;\n\n      for (const mappedOutputField of m.targetFields) {\n        const outputField: Field = mappedOutputField.field;\n        if (!this.checkFieldEligibiltyForLineDrawing(outputField, 'output', m)) {\n          continue;\n        }\n\n        const outputFieldPos: any = this.getScreenPosForField(outputField, this.docDefOutput);\n        if (outputFieldPos == null) {\n          continue;\n        }\n\n        let targetY: number = outputFieldPos.y;\n        targetY = (targetY  (lineMachineHeight - 27)) ? (lineMachineHeight - 27) : targetY;\n\n        if (isSelectedMapping || (this.cfg.showLinesAlways)) {\n          this.addLineFromParams('0', (sourceY + this.yOffset).toString(),\n            '100%', (targetY + this.yOffset).toString(), stroke, outputField);\n        }\n      }\n    }\n  }\n\n  private getScreenPosForField(field: Field, docDefComponent: DocumentDefinitionComponent): any {\n    if (field == null || field.docDef == null) {\n      return null;\n    }\n    if (!field.docDef.showFields) {\n      const pos: any = docDefComponent.getDocDefElementPosition(field.docDef);\n      if (pos) {\n        pos['y'] = pos['y'] + 5;\n      }\n      return pos;\n    }\n    let parentField: Field = field;\n    while (parentField != null) {\n      const fieldPos: any = docDefComponent.getFieldDetailComponentPosition(parentField);\n      if (fieldPos != null) {\n        return fieldPos;\n      }\n      parentField = parentField.parentField;\n    }\n    return null;\n  }\n\n  private checkFieldEligibiltyForLineDrawing(field: Field, description: string, m: MappingModel): boolean {\n    if (!field) {\n      return false;\n    }\n    if (!field.visibleInCurrentDocumentSearch) {\n      return false;\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LookupTable.html":{"url":"classes/LookupTable.html","title":"class - LookupTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LookupTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                name\n                            \n                            \n                                sourceIdentifier\n                            \n                            \n                                targetIdentifier\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEntryForSource\n                            \n                            \n                                getInputOutputKey\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:44\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LookupTableEntry[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceIdentifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetIdentifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:44\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEntryForSource\n                        \n                        \n                    \n                \n            \n            \n                \ngetEntryForSource(sourceValue: string, autocreate: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    autocreate\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LookupTableEntry\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInputOutputKey\n                        \n                        \n                    \n                \n            \n            \n                \ngetInputOutputKey()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class LookupTableEntry {\n  sourceValue: string;\n  sourceType = 'STRING';\n  targetValue: string;\n  targetType = 'STRING';\n\n  toJSON(): any {\n    return {\n      'sourceValue': this.sourceValue,\n      'sourceType': this.sourceType,\n      'targetValue': this.targetValue,\n      'targetType': this.targetType,\n    };\n  }\n\n  fromJSON(json: any): void {\n    this.sourceValue = json.sourceValue;\n    this.sourceType = json.sourceType;\n    this.targetValue = json.targetValue;\n    this.targetType = json.targetType;\n  }\n}\n\nexport class LookupTable {\n  name: string;\n  entries: LookupTableEntry[] = [];\n  sourceIdentifier: string;\n  targetIdentifier: string;\n\n  constructor() {\n    this.name = (new Date().getTime() + '-' + Math.floor(Math.random() * 1000000).toString());\n  }\n\n  getInputOutputKey(): string {\n    return this.sourceIdentifier + ':' + this.targetIdentifier;\n  }\n\n  getEntryForSource(sourceValue: string, autocreate: boolean): LookupTableEntry {\n    for (const entry of this.entries) {\n      if (entry.sourceValue === sourceValue) {\n        return entry;\n      }\n    }\n    if (autocreate) {\n      const entry: LookupTableEntry = new LookupTableEntry();\n      entry.sourceValue = sourceValue;\n      this.entries.push(entry);\n      return entry;\n    }\n    return null;\n  }\n\n  toString() {\n    let result: string = 'Lookup Table, name: ' + this.name + ', entries: ' + this.entries.length;\n    result += '\\n\\sourceIdentifier: ' + this.sourceIdentifier;\n    result += '\\n\\targetIdentifier: ' + this.targetIdentifier;\n    let counter = 0;\n    for (const entry of this.entries) {\n      result += '\\n\\tEntry #' + counter + ': ' + entry.sourceValue + ' => ' + entry.targetValue;\n      counter += 1;\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LookupTableComponent.html":{"url":"components/LookupTableComponent.html","title":"component - LookupTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LookupTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lookup-table\n            \n\n\n\n\n            \n                templateUrl\n                ./lookup-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                mapping\n                            \n                            \n                                outputSelects\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                saveTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(cfg: ConfigModel, mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveTable\n                        \n                        \n                    \n                \n            \n            \n                \nsaveTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LookupTableData[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            outputSelects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('outputSelect')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            table\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LookupTable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChildren, ElementRef, QueryList } from '@angular/core';\n\nimport { LookupTable, LookupTableEntry } from '../../models/lookup-table.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\nimport { MappingModel } from '../../models/mapping.model';\nimport { ModalWindowValidator } from '../modal-window.component';\n\nexport class LookupTableData {\n  sourceEnumValue: string;\n  targetEnumValues: string[];\n  selectedTargetEnumValue: string;\n}\n\n@Component({\n  selector: 'lookup-table',\n  templateUrl: './lookup-table.component.html',\n})\n\nexport class LookupTableComponent implements ModalWindowValidator {\n  mapping: MappingModel;\n\n  table: LookupTable;\n  data: LookupTableData[];\n\n  @ViewChildren('outputSelect') outputSelects: QueryList;\n\n  initialize(cfg: ConfigModel, mapping: MappingModel): void {\n    this.mapping = mapping;\n\n    const targetField: Field = mapping.getFields(false)[0];\n    const targetValues: string[] = [];\n    targetValues.push('[ None ]');\n    for (const e of targetField.enumValues) {\n      targetValues.push(e.name);\n    }\n\n    this.table = cfg.mappings.getTableByName(mapping.transition.lookupTableName);\n    if (this.table == null) {\n      cfg.errorService.error('Could not find enum lookup table for mapping.', mapping);\n    }\n\n    const d: LookupTableData[] = [];\n    const sourceField: Field = mapping.getFields(true)[0];\n    for (const e of sourceField.enumValues) {\n      const tableData: LookupTableData = new LookupTableData();\n      tableData.sourceEnumValue = e.name;\n      tableData.targetEnumValues = [].concat(targetValues);\n      const selected: LookupTableEntry = this.table.getEntryForSource(tableData.sourceEnumValue, false);\n      tableData.selectedTargetEnumValue = (selected == null) ? '[ None ]' : selected.targetValue;\n      d.push(tableData);\n    }\n    this.data = d;\n  }\n\n  isDataValid() {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n  saveTable(): void {\n    this.table.entries = [];\n    for (const c of this.outputSelects.toArray()) {\n      const selectedOptions: any[] = c.nativeElement.selectedOptions;\n      if (selectedOptions && selectedOptions.length) {\n        const targetValue: string = selectedOptions[0].label;\n        if (targetValue === '[ None ]') {\n          continue;\n        }\n        const e: LookupTableEntry = new LookupTableEntry();\n        e.sourceValue = c.nativeElement.attributes['sourceValue'].value;\n        e.targetValue = targetValue;\n        this.table.entries.push(e);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{ d.sourceEnumValue }}\n    \n      {{ targetEnumValue }}\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ d.sourceEnumValue }}          {{ targetEnumValue }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'LookupTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LookupTableData.html":{"url":"classes/LookupTableData.html","title":"class - LookupTableData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LookupTableData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedTargetEnumValue\n                            \n                            \n                                sourceEnumValue\n                            \n                            \n                                targetEnumValues\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTargetEnumValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceEnumValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetEnumValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, ViewChildren, ElementRef, QueryList } from '@angular/core';\n\nimport { LookupTable, LookupTableEntry } from '../../models/lookup-table.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\nimport { MappingModel } from '../../models/mapping.model';\nimport { ModalWindowValidator } from '../modal-window.component';\n\nexport class LookupTableData {\n  sourceEnumValue: string;\n  targetEnumValues: string[];\n  selectedTargetEnumValue: string;\n}\n\n@Component({\n  selector: 'lookup-table',\n  templateUrl: './lookup-table.component.html',\n})\n\nexport class LookupTableComponent implements ModalWindowValidator {\n  mapping: MappingModel;\n\n  table: LookupTable;\n  data: LookupTableData[];\n\n  @ViewChildren('outputSelect') outputSelects: QueryList;\n\n  initialize(cfg: ConfigModel, mapping: MappingModel): void {\n    this.mapping = mapping;\n\n    const targetField: Field = mapping.getFields(false)[0];\n    const targetValues: string[] = [];\n    targetValues.push('[ None ]');\n    for (const e of targetField.enumValues) {\n      targetValues.push(e.name);\n    }\n\n    this.table = cfg.mappings.getTableByName(mapping.transition.lookupTableName);\n    if (this.table == null) {\n      cfg.errorService.error('Could not find enum lookup table for mapping.', mapping);\n    }\n\n    const d: LookupTableData[] = [];\n    const sourceField: Field = mapping.getFields(true)[0];\n    for (const e of sourceField.enumValues) {\n      const tableData: LookupTableData = new LookupTableData();\n      tableData.sourceEnumValue = e.name;\n      tableData.targetEnumValues = [].concat(targetValues);\n      const selected: LookupTableEntry = this.table.getEntryForSource(tableData.sourceEnumValue, false);\n      tableData.selectedTargetEnumValue = (selected == null) ? '[ None ]' : selected.targetValue;\n      d.push(tableData);\n    }\n    this.data = d;\n  }\n\n  isDataValid() {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n  saveTable(): void {\n    this.table.entries = [];\n    for (const c of this.outputSelects.toArray()) {\n      const selectedOptions: any[] = c.nativeElement.selectedOptions;\n      if (selectedOptions && selectedOptions.length) {\n        const targetValue: string = selectedOptions[0].label;\n        if (targetValue === '[ None ]') {\n          continue;\n        }\n        const e: LookupTableEntry = new LookupTableEntry();\n        e.sourceValue = c.nativeElement.attributes['sourceValue'].value;\n        e.targetValue = targetValue;\n        this.table.entries.push(e);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LookupTableEntry.html":{"url":"classes/LookupTableEntry.html","title":"class - LookupTableEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LookupTableEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sourceType\n                            \n                            \n                                sourceValue\n                            \n                            \n                                targetType\n                            \n                            \n                                targetValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fromJSON\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fromJSON\n                        \n                        \n                    \n                \n            \n            \n                \nfromJSON(json: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    json\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class LookupTableEntry {\n  sourceValue: string;\n  sourceType = 'STRING';\n  targetValue: string;\n  targetType = 'STRING';\n\n  toJSON(): any {\n    return {\n      'sourceValue': this.sourceValue,\n      'sourceType': this.sourceType,\n      'targetValue': this.targetValue,\n      'targetType': this.targetType,\n    };\n  }\n\n  fromJSON(json: any): void {\n    this.sourceValue = json.sourceValue;\n    this.sourceType = json.sourceType;\n    this.targetValue = json.targetValue;\n    this.targetType = json.targetType;\n  }\n}\n\nexport class LookupTable {\n  name: string;\n  entries: LookupTableEntry[] = [];\n  sourceIdentifier: string;\n  targetIdentifier: string;\n\n  constructor() {\n    this.name = (new Date().getTime() + '-' + Math.floor(Math.random() * 1000000).toString());\n  }\n\n  getInputOutputKey(): string {\n    return this.sourceIdentifier + ':' + this.targetIdentifier;\n  }\n\n  getEntryForSource(sourceValue: string, autocreate: boolean): LookupTableEntry {\n    for (const entry of this.entries) {\n      if (entry.sourceValue === sourceValue) {\n        return entry;\n      }\n    }\n    if (autocreate) {\n      const entry: LookupTableEntry = new LookupTableEntry();\n      entry.sourceValue = sourceValue;\n      this.entries.push(entry);\n      return entry;\n    }\n    return null;\n  }\n\n  toString() {\n    let result: string = 'Lookup Table, name: ' + this.name + ', entries: ' + this.entries.length;\n    result += '\\n\\sourceIdentifier: ' + this.sourceIdentifier;\n    result += '\\n\\targetIdentifier: ' + this.targetIdentifier;\n    let counter = 0;\n    for (const entry of this.entries) {\n      result += '\\n\\tEntry #' + counter + ': ' + entry.sourceValue + ' => ' + entry.targetValue;\n      counter += 1;\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LookupTableUtil.html":{"url":"classes/LookupTableUtil.html","title":"class - LookupTableUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LookupTableUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/utils/lookup-table-util.ts\n        \n\n            \n                Description\n            \n            \n                Static routines for handling LookupTable.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getFirstMappingForLookupTable\n                            \n                            \n                                    Static\n                                populateMappingLookupTable\n                            \n                            \n                                    Static\n                                updateLookupTables\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getFirstMappingForLookupTable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirstMappingForLookupTable(mappingDefinition: MappingDefinition, lookupTableName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/lookup-table-util.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappingDefinition\n                                    \n                                                MappingDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lookupTableName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MappingModel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            populateMappingLookupTable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    populateMappingLookupTable(mappingDefinition: MappingDefinition, m: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/lookup-table-util.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappingDefinition\n                                    \n                                                MappingDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    m\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateLookupTables\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLookupTables(mappingDefinition: MappingDefinition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/lookup-table-util.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappingDefinition\n                                    \n                                                MappingDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MappingModel } from '../models/mapping.model';\nimport { TransitionMode } from '../models/transition.model';\nimport { Field } from '../models/field.model';\nimport { LookupTable } from '../models/lookup-table.model';\nimport { MappingDefinition } from '../models/mapping-definition.model';\n\n/**\n * Static routines for handling LookupTable.\n */\nexport class LookupTableUtil {\n\n  static populateMappingLookupTable(mappingDefinition: MappingDefinition, m: MappingModel): void {\n    if (!(m.transition.mode === TransitionMode.ENUM\n      && m.transition.lookupTableName == null\n      && m.getFields(true).length === 1\n      && m.getFields(false).length === 1)) {\n      return;\n    }\n    let inputClassIdentifier: string = null;\n    let outputClassIdentifier: string = null;\n\n    const inputField: Field = m.getFields(true)[0];\n    if (inputField) {\n      inputClassIdentifier = inputField.classIdentifier;\n    }\n    const outputField: Field = m.getFields(true)[0];\n    if (outputField) {\n      outputClassIdentifier = outputField.classIdentifier;\n    }\n    if (inputClassIdentifier && outputClassIdentifier) {\n      let table: LookupTable = mappingDefinition.getTableBySourceTarget(inputClassIdentifier, outputClassIdentifier);\n      if (table == null) {\n        table = new LookupTable();\n        table.sourceIdentifier = inputClassIdentifier;\n        table.targetIdentifier = outputClassIdentifier;\n        mappingDefinition.addTable(table);\n        m.transition.lookupTableName = table.name;\n      } else {\n        m.transition.lookupTableName = table.name;\n      }\n    }\n  }\n\n  static updateLookupTables(mappingDefinition: MappingDefinition) {\n    for (const t of mappingDefinition.getTables()) {\n      if (t.sourceIdentifier && t.targetIdentifier) {\n        continue;\n      }\n      const m: MappingModel = LookupTableUtil.getFirstMappingForLookupTable(mappingDefinition, t.name);\n      if (m != null && m.transition.lookupTableName != null) {\n        if (!t.sourceIdentifier) {\n          const inputField: Field = m.getFields(true)[0];\n          if (inputField) {\n            t.sourceIdentifier = inputField.classIdentifier;\n          }\n        }\n        if (!t.targetIdentifier) {\n          const outputField: Field = m.getFields(false)[0];\n          if (outputField) {\n            t.targetIdentifier = outputField.classIdentifier;\n          }\n        }\n      }\n    }\n    for (const m of mappingDefinition.mappings) {\n      LookupTableUtil.populateMappingLookupTable(mappingDefinition, m);\n    }\n  }\n\n  private static getFirstMappingForLookupTable(mappingDefinition: MappingDefinition, lookupTableName: string): MappingModel {\n    for (const m of mappingDefinition.mappings) {\n      if (m.transition.lookupTableName === lookupTableName) {\n        return m;\n      }\n    }\n    return null;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MappedField.html":{"url":"classes/MappedField.html","title":"class - MappedField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MappedField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                field\n                            \n                            \n                                parsedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isPadField\n                            \n                            \n                                isSource\n                            \n                            \n                                removeAction\n                            \n                            \n                                    Static\n                                sortMappedFieldsByPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldAction[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappedFieldParsingData\n\n                        \n                    \n                    \n                        \n                            Default value : new MappedFieldParsingData()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:40\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPadField\n                        \n                        \n                    \n                \n            \n            \n                \nisPadField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSource\n                        \n                        \n                    \n                \n            \n            \n                \nisSource()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeAction\n                        \n                        \n                    \n                \n            \n            \n                \nremoveAction(action: FieldAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            sortMappedFieldsByPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sortMappedFieldsByPath(mappedFields: MappedField[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappedFields\n                                    \n                                            MappedField[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MappedField[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { Field } from './field.model';\nimport { TransitionModel } from './transition.model';\nimport { ErrorInfo, ErrorLevel } from '../models/error.model';\n\nimport { DataMapperUtil } from '../common/data-mapper-util';\nimport { FieldAction } from './field-action.model';\nimport { PaddingField } from './document-definition.model';\n\nexport class MappedFieldParsingData {\n  parsedName: string = null;\n  parsedPath: string = null;\n  parsedValue: string = null;\n  parsedDocID: string = null;\n  parsedDocURI: string = null;\n  parsedIndex: string = null;\n  fieldIsProperty = false;\n  fieldIsConstant = false;\n  parsedValueType: string = null;\n  parsedActions: FieldAction[] = [];\n  userCreated = false;\n}\n\nexport class MappedField {\n  parsedData: MappedFieldParsingData = new MappedFieldParsingData();\n  field: Field;\n  actions: FieldAction[] = [];\n\n  static sortMappedFieldsByPath(mappedFields: MappedField[]): MappedField[] {\n    if (mappedFields == null || mappedFields.length === 0) {\n      return [];\n    }\n    const fieldsByPath: { [key: string]: MappedField; } = {};\n    const fieldPaths: string[] = [];\n    for (const mappedField of mappedFields) {\n      if (mappedField == null || mappedField.field == null) {\n        continue;\n      }\n      const path: string = mappedField.field.path;\n      fieldsByPath[path] = mappedField;\n      fieldPaths.push(path);\n    }\n    fieldPaths.sort();\n    const result: MappedField[] = [];\n    for (const name of fieldPaths) {\n      result.push(fieldsByPath[name]);\n    }\n    return result;\n  }\n\n  isPadField(): boolean {\n    return this.field instanceof PaddingField;\n  }\n\n  isSource(): boolean {\n    return this.field.isSource();\n  }\n\n  removeAction(action: FieldAction): void {\n    DataMapperUtil.removeItemFromArray(action, this.actions);\n  }\n\n}\n\nexport class MappingModel {\n  cfg: ConfigModel;\n  uuid: string;\n\n  sourceFields: MappedField[] = [];\n  targetFields: MappedField[] = [];\n  transition: TransitionModel = new TransitionModel();\n\n  validationErrors: ErrorInfo[] = []; // must be immutable\n  previewErrors: ErrorInfo[] = []; // must be immutable\n\n  constructor() {\n    this.uuid = 'mapping.' + Math.floor((Math.random() * 1000000) + 1).toString();\n    this.cfg = ConfigModel.getConfig();\n    Object.freeze(this.validationErrors);\n  }\n\n  addValidationError(message: string) {\n    const e = new ErrorInfo(message, ErrorLevel.VALIDATION_ERROR);\n    this.validationErrors = [...this.validationErrors, e];\n    Object.freeze(this.validationErrors);\n  }\n\n  clearValidationErrors(): void {\n    this.validationErrors = [];\n    Object.freeze(this.validationErrors);\n  }\n\n  getValidationErrors(): ErrorInfo[] {\n    return this.validationErrors.filter(e => e.level >= ErrorLevel.ERROR);\n  }\n\n  getValidationWarnings(): ErrorInfo[] {\n    return this.validationErrors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  removeValidationError(identifier: string) {\n    this.validationErrors = this.validationErrors.filter(e => e.identifier !== identifier);\n    Object.freeze(this.validationErrors);\n  }\n\n  clearPreviewErrors(): void {\n    this.previewErrors = [];\n    Object.freeze(this.previewErrors);\n  }\n\n  getPreviewErrors(): ErrorInfo[] {\n    return this.previewErrors.filter(e => e.level >= ErrorLevel.ERROR);\n  }\n\n  getPreviewWarnings(): ErrorInfo[] {\n    return this.previewErrors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  removePreviewError(identifier: string) {\n    this.previewErrors = this.previewErrors.filter(e => e.identifier !== identifier);\n    Object.freeze(this.previewErrors);\n  }\n\n  getFirstCollectionField(isSource: boolean): Field {\n    for (const f of isSource ? this.sourceFields : this.targetFields) {\n      if (f.field.isInCollection()) {\n        return f.field;\n      }\n    }\n    return null;\n  }\n\n  isLookupMode(): boolean {\n    for (const f of this.sourceFields.concat(this.targetFields)) {\n      if (f.field.enumeration) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Add the specified field to this field mapping.\n   *\n   * @param field - field to add to the mapping\n   * @param first - if true add the field to the beginning of the array, last otherwise.\n   */\n  addField(field: Field, first: boolean): MappedField {\n    const mappedField: MappedField = new MappedField();\n    mappedField.field = field;\n    if (first) {\n      this.getMappedFields(field.isSource()).unshift(mappedField);\n    } else {\n      this.getMappedFields(field.isSource()).push(mappedField);\n    }\n    return mappedField;\n  }\n\n  /**\n   * Remove the specified field from this field mapping.\n   *\n   * @param field\n   */\n  removeField(field: Field) {\n    const mappedFields = this.getMappedFields(field.isSource());\n    DataMapperUtil.removeItemFromArray(mappedFields.find(mf => mf.field === field), mappedFields);\n  }\n\n  /**\n   * Return the number of user-defined (non-padding) fields in this mapping.\n   *\n   * @param field\n   */\n  getUserFieldCount(field: Field): number {\n    const mappedFields = this.getMappedFields(field.isSource());\n    let userFieldCount = 0;\n\n    for (const mappedField of mappedFields) {\n      if (!mappedField.isPadField()) {\n        userFieldCount++;\n      }\n    }\n    return userFieldCount;\n  }\n\n  hasMappedField(isSource: boolean) {\n    return isSource ? this.sourceFields.length > 0 : this.targetFields.length > 0;\n  }\n\n  isEmpty() {\n    return this.sourceFields.length === 0 && this.targetFields.length === 0;\n  }\n\n  isFullyMapped(): boolean {\n    return this.sourceFields.length > 0 && this.targetFields.length > 0;\n  }\n\n  addMappedField(mappedField: MappedField, isSource: boolean): void {\n    this.getMappedFields(isSource).push(mappedField);\n  }\n\n  removeMappedField(mappedField: MappedField): void {\n    DataMapperUtil.removeItemFromArray(mappedField, this.getMappedFields(mappedField.field.isSource()));\n  }\n\n  getMappedFieldForField(field: Field): MappedField {\n    for (const mappedField of this.getMappedFields(field.isSource())) {\n      if (mappedField.field === field) {\n        return mappedField;\n      }\n    }\n    return null;\n  }\n\n  getMappedFieldForIndex(index: string, isSource: boolean): MappedField {\n    if (!index) {\n      return null;\n    }\n    const mappedFields = this.getMappedFields(isSource);\n    if (+index - 1 > mappedFields.length - 1) {\n      return null;\n    }\n    return mappedFields[+index - 1];\n  }\n\n  getIndexForMappedField(mappedField: MappedField): number {\n    if (!mappedField || !mappedField.field) {\n      return null;\n    }\n    return this.getMappedFields(mappedField.field.isSource()).indexOf(mappedField) + 1;\n  }\n\n  /**\n   * Return an array of user mapped fields for the specified panel in this field pair instance.  No\n   * data-mapper generated padding fields will be included.\n   *\n   * @param isSource - true source panel, false target panel\n   */\n  getUserMappedFields(isSource: boolean): MappedField[] {\n    const workingFields = isSource ? this.sourceFields : this.targetFields;\n    const resultFields: MappedField[] = [new MappedField()];\n\n    for (const mappedField of workingFields) {\n      if (!mappedField.isPadField()) {\n        resultFields.push(mappedField);\n      }\n    }\n    resultFields.shift();\n    return resultFields;\n  }\n\n  getMappedFields(isSource: boolean): MappedField[] {\n    return isSource ? this.sourceFields : this.targetFields;\n  }\n\n  getLastMappedField(isSource: boolean): MappedField {\n    const fields: MappedField[] = this.getMappedFields(isSource);\n    if ((fields != null) && (fields.length > 0)) {\n      return fields[fields.length - 1];\n    }\n    return null;\n  }\n\n  getFields(isSource: boolean): Field[] {\n    const fields: Field[] = [];\n    for (const mappedField of this.getMappedFields(isSource)) {\n      if (mappedField.field != null) {\n        fields.push(mappedField.field);\n      }\n    }\n    return fields;\n  }\n\n  getFieldNames(isSource: boolean): string[] {\n    const fields: Field[] = this.getFields(isSource);\n    Field.alphabetizeFields(fields);\n    const names: string[] = [];\n    for (const field of fields) {\n      names.push(field.name);\n    }\n    return names;\n  }\n\n  getFieldPaths(isSource: boolean): string[] {\n    const fields: Field[] = this.getFields(isSource);\n    Field.alphabetizeFields(fields);\n    const paths: string[] = [];\n    for (const field of fields) {\n      paths.push(field.path);\n    }\n    return paths;\n  }\n\n  hasFieldActions(): boolean {\n    for (const mappedField of this.getAllMappedFields()) {\n      if (mappedField.actions.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getAllFields(): Field[] {\n    return this.getFields(true).concat(this.getFields(false));\n  }\n\n  getAllMappedFields(): MappedField[] {\n    return this.getMappedFields(true).concat(this.getMappedFields(false));\n  }\n\n  isFieldMapped(field: Field): boolean {\n    return this.getMappedFieldForField(field) != null;\n  }\n\n  hasTransformation(): boolean {\n    const mappedFields: MappedField[] = this.getAllMappedFields();\n    for (const mappedField of mappedFields) {\n      if (mappedField.actions.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Walk all target field mappings and return one of corresponding source field name\n   * if the specified field is already the target of a previous mapping, null otherwise.\n   *\n   * @param field\n   */\n  public getMappedTarget(field: Field): string {\n    const mappings: MappingModel[] = this.cfg.mappings.mappings;\n\n    if (field.isSource()) {\n      return null;\n    }\n    for (const m of mappings) {\n      if (m.targetFields.length === 0) {\n        continue;\n      }\n\n      for (const mappedOutputField of m.targetFields) {\n        if (mappedOutputField.field.docDef === field.docDef\n          && mappedOutputField.field.path === field.path) {\n          if (m.isFieldMapped(field)) {\n            return m.sourceFields[0].field.name;\n          }\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MappedFieldParsingData.html":{"url":"classes/MappedFieldParsingData.html","title":"class - MappedFieldParsingData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MappedFieldParsingData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fieldIsConstant\n                            \n                            \n                                fieldIsProperty\n                            \n                            \n                                parsedActions\n                            \n                            \n                                parsedDocID\n                            \n                            \n                                parsedDocURI\n                            \n                            \n                                parsedIndex\n                            \n                            \n                                parsedName\n                            \n                            \n                                parsedPath\n                            \n                            \n                                parsedValue\n                            \n                            \n                                parsedValueType\n                            \n                            \n                                userCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldIsConstant\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldIsProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldAction[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedDocID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedDocURI\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedValueType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userCreated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { Field } from './field.model';\nimport { TransitionModel } from './transition.model';\nimport { ErrorInfo, ErrorLevel } from '../models/error.model';\n\nimport { DataMapperUtil } from '../common/data-mapper-util';\nimport { FieldAction } from './field-action.model';\nimport { PaddingField } from './document-definition.model';\n\nexport class MappedFieldParsingData {\n  parsedName: string = null;\n  parsedPath: string = null;\n  parsedValue: string = null;\n  parsedDocID: string = null;\n  parsedDocURI: string = null;\n  parsedIndex: string = null;\n  fieldIsProperty = false;\n  fieldIsConstant = false;\n  parsedValueType: string = null;\n  parsedActions: FieldAction[] = [];\n  userCreated = false;\n}\n\nexport class MappedField {\n  parsedData: MappedFieldParsingData = new MappedFieldParsingData();\n  field: Field;\n  actions: FieldAction[] = [];\n\n  static sortMappedFieldsByPath(mappedFields: MappedField[]): MappedField[] {\n    if (mappedFields == null || mappedFields.length === 0) {\n      return [];\n    }\n    const fieldsByPath: { [key: string]: MappedField; } = {};\n    const fieldPaths: string[] = [];\n    for (const mappedField of mappedFields) {\n      if (mappedField == null || mappedField.field == null) {\n        continue;\n      }\n      const path: string = mappedField.field.path;\n      fieldsByPath[path] = mappedField;\n      fieldPaths.push(path);\n    }\n    fieldPaths.sort();\n    const result: MappedField[] = [];\n    for (const name of fieldPaths) {\n      result.push(fieldsByPath[name]);\n    }\n    return result;\n  }\n\n  isPadField(): boolean {\n    return this.field instanceof PaddingField;\n  }\n\n  isSource(): boolean {\n    return this.field.isSource();\n  }\n\n  removeAction(action: FieldAction): void {\n    DataMapperUtil.removeItemFromArray(action, this.actions);\n  }\n\n}\n\nexport class MappingModel {\n  cfg: ConfigModel;\n  uuid: string;\n\n  sourceFields: MappedField[] = [];\n  targetFields: MappedField[] = [];\n  transition: TransitionModel = new TransitionModel();\n\n  validationErrors: ErrorInfo[] = []; // must be immutable\n  previewErrors: ErrorInfo[] = []; // must be immutable\n\n  constructor() {\n    this.uuid = 'mapping.' + Math.floor((Math.random() * 1000000) + 1).toString();\n    this.cfg = ConfigModel.getConfig();\n    Object.freeze(this.validationErrors);\n  }\n\n  addValidationError(message: string) {\n    const e = new ErrorInfo(message, ErrorLevel.VALIDATION_ERROR);\n    this.validationErrors = [...this.validationErrors, e];\n    Object.freeze(this.validationErrors);\n  }\n\n  clearValidationErrors(): void {\n    this.validationErrors = [];\n    Object.freeze(this.validationErrors);\n  }\n\n  getValidationErrors(): ErrorInfo[] {\n    return this.validationErrors.filter(e => e.level >= ErrorLevel.ERROR);\n  }\n\n  getValidationWarnings(): ErrorInfo[] {\n    return this.validationErrors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  removeValidationError(identifier: string) {\n    this.validationErrors = this.validationErrors.filter(e => e.identifier !== identifier);\n    Object.freeze(this.validationErrors);\n  }\n\n  clearPreviewErrors(): void {\n    this.previewErrors = [];\n    Object.freeze(this.previewErrors);\n  }\n\n  getPreviewErrors(): ErrorInfo[] {\n    return this.previewErrors.filter(e => e.level >= ErrorLevel.ERROR);\n  }\n\n  getPreviewWarnings(): ErrorInfo[] {\n    return this.previewErrors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  removePreviewError(identifier: string) {\n    this.previewErrors = this.previewErrors.filter(e => e.identifier !== identifier);\n    Object.freeze(this.previewErrors);\n  }\n\n  getFirstCollectionField(isSource: boolean): Field {\n    for (const f of isSource ? this.sourceFields : this.targetFields) {\n      if (f.field.isInCollection()) {\n        return f.field;\n      }\n    }\n    return null;\n  }\n\n  isLookupMode(): boolean {\n    for (const f of this.sourceFields.concat(this.targetFields)) {\n      if (f.field.enumeration) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Add the specified field to this field mapping.\n   *\n   * @param field - field to add to the mapping\n   * @param first - if true add the field to the beginning of the array, last otherwise.\n   */\n  addField(field: Field, first: boolean): MappedField {\n    const mappedField: MappedField = new MappedField();\n    mappedField.field = field;\n    if (first) {\n      this.getMappedFields(field.isSource()).unshift(mappedField);\n    } else {\n      this.getMappedFields(field.isSource()).push(mappedField);\n    }\n    return mappedField;\n  }\n\n  /**\n   * Remove the specified field from this field mapping.\n   *\n   * @param field\n   */\n  removeField(field: Field) {\n    const mappedFields = this.getMappedFields(field.isSource());\n    DataMapperUtil.removeItemFromArray(mappedFields.find(mf => mf.field === field), mappedFields);\n  }\n\n  /**\n   * Return the number of user-defined (non-padding) fields in this mapping.\n   *\n   * @param field\n   */\n  getUserFieldCount(field: Field): number {\n    const mappedFields = this.getMappedFields(field.isSource());\n    let userFieldCount = 0;\n\n    for (const mappedField of mappedFields) {\n      if (!mappedField.isPadField()) {\n        userFieldCount++;\n      }\n    }\n    return userFieldCount;\n  }\n\n  hasMappedField(isSource: boolean) {\n    return isSource ? this.sourceFields.length > 0 : this.targetFields.length > 0;\n  }\n\n  isEmpty() {\n    return this.sourceFields.length === 0 && this.targetFields.length === 0;\n  }\n\n  isFullyMapped(): boolean {\n    return this.sourceFields.length > 0 && this.targetFields.length > 0;\n  }\n\n  addMappedField(mappedField: MappedField, isSource: boolean): void {\n    this.getMappedFields(isSource).push(mappedField);\n  }\n\n  removeMappedField(mappedField: MappedField): void {\n    DataMapperUtil.removeItemFromArray(mappedField, this.getMappedFields(mappedField.field.isSource()));\n  }\n\n  getMappedFieldForField(field: Field): MappedField {\n    for (const mappedField of this.getMappedFields(field.isSource())) {\n      if (mappedField.field === field) {\n        return mappedField;\n      }\n    }\n    return null;\n  }\n\n  getMappedFieldForIndex(index: string, isSource: boolean): MappedField {\n    if (!index) {\n      return null;\n    }\n    const mappedFields = this.getMappedFields(isSource);\n    if (+index - 1 > mappedFields.length - 1) {\n      return null;\n    }\n    return mappedFields[+index - 1];\n  }\n\n  getIndexForMappedField(mappedField: MappedField): number {\n    if (!mappedField || !mappedField.field) {\n      return null;\n    }\n    return this.getMappedFields(mappedField.field.isSource()).indexOf(mappedField) + 1;\n  }\n\n  /**\n   * Return an array of user mapped fields for the specified panel in this field pair instance.  No\n   * data-mapper generated padding fields will be included.\n   *\n   * @param isSource - true source panel, false target panel\n   */\n  getUserMappedFields(isSource: boolean): MappedField[] {\n    const workingFields = isSource ? this.sourceFields : this.targetFields;\n    const resultFields: MappedField[] = [new MappedField()];\n\n    for (const mappedField of workingFields) {\n      if (!mappedField.isPadField()) {\n        resultFields.push(mappedField);\n      }\n    }\n    resultFields.shift();\n    return resultFields;\n  }\n\n  getMappedFields(isSource: boolean): MappedField[] {\n    return isSource ? this.sourceFields : this.targetFields;\n  }\n\n  getLastMappedField(isSource: boolean): MappedField {\n    const fields: MappedField[] = this.getMappedFields(isSource);\n    if ((fields != null) && (fields.length > 0)) {\n      return fields[fields.length - 1];\n    }\n    return null;\n  }\n\n  getFields(isSource: boolean): Field[] {\n    const fields: Field[] = [];\n    for (const mappedField of this.getMappedFields(isSource)) {\n      if (mappedField.field != null) {\n        fields.push(mappedField.field);\n      }\n    }\n    return fields;\n  }\n\n  getFieldNames(isSource: boolean): string[] {\n    const fields: Field[] = this.getFields(isSource);\n    Field.alphabetizeFields(fields);\n    const names: string[] = [];\n    for (const field of fields) {\n      names.push(field.name);\n    }\n    return names;\n  }\n\n  getFieldPaths(isSource: boolean): string[] {\n    const fields: Field[] = this.getFields(isSource);\n    Field.alphabetizeFields(fields);\n    const paths: string[] = [];\n    for (const field of fields) {\n      paths.push(field.path);\n    }\n    return paths;\n  }\n\n  hasFieldActions(): boolean {\n    for (const mappedField of this.getAllMappedFields()) {\n      if (mappedField.actions.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getAllFields(): Field[] {\n    return this.getFields(true).concat(this.getFields(false));\n  }\n\n  getAllMappedFields(): MappedField[] {\n    return this.getMappedFields(true).concat(this.getMappedFields(false));\n  }\n\n  isFieldMapped(field: Field): boolean {\n    return this.getMappedFieldForField(field) != null;\n  }\n\n  hasTransformation(): boolean {\n    const mappedFields: MappedField[] = this.getAllMappedFields();\n    for (const mappedField of mappedFields) {\n      if (mappedField.actions.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Walk all target field mappings and return one of corresponding source field name\n   * if the specified field is already the target of a previous mapping, null otherwise.\n   *\n   * @param field\n   */\n  public getMappedTarget(field: Field): string {\n    const mappings: MappingModel[] = this.cfg.mappings.mappings;\n\n    if (field.isSource()) {\n      return null;\n    }\n    for (const m of mappings) {\n      if (m.targetFields.length === 0) {\n        continue;\n      }\n\n      for (const mappedOutputField of m.targetFields) {\n        if (mappedOutputField.field.docDef === field.docDef\n          && mappedOutputField.field.path === field.path) {\n          if (m.isFieldMapped(field)) {\n            return m.sourceFields[0].field.name;\n          }\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MappingDefinition.html":{"url":"classes/MappingDefinition.html","title":"class - MappingDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MappingDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeMapping\n                            \n                            \n                                mappings\n                            \n                            \n                                name\n                            \n                            \n                                parsedDocs\n                            \n                            \n                                    Private\n                                tables\n                            \n                            \n                                    Private\n                                tablesByName\n                            \n                            \n                                    Private\n                                tablesBySourceTargetKey\n                            \n                            \n                                templateText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTable\n                            \n                            \n                                findMappingsForField\n                            \n                            \n                                getAllMappings\n                            \n                            \n                                getTableByName\n                            \n                            \n                                getTableBySourceTarget\n                            \n                            \n                                getTables\n                            \n                            \n                                removeMapping\n                            \n                            \n                                removeTableByName\n                            \n                            \n                                templateExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeMapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedDocs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LookupTable[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tablesByName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tablesBySourceTargetKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templateText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:29\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTable\n                        \n                        \n                    \n                \n            \n            \n                \naddTable(table: LookupTable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                LookupTable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findMappingsForField\n                        \n                        \n                    \n                \n            \n            \n                \nfindMappingsForField(field: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MappingModel[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllMappings\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllMappings(includeActiveMapping: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    includeActiveMapping\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MappingModel[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTableByName\n                        \n                        \n                    \n                \n            \n            \n                \ngetTableByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LookupTable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTableBySourceTarget\n                        \n                        \n                    \n                \n            \n            \n                \ngetTableBySourceTarget(sourceIdentifier: string, targetIdentifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceIdentifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetIdentifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LookupTable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTables\n                        \n                        \n                    \n                \n            \n            \n                \ngetTables()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LookupTable[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMapping\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMapping(m: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    m\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeTableByName\n                        \n                        \n                    \n                \n            \n            \n                \nremoveTableByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            templateExists\n                        \n                        \n                    \n                \n            \n            \n                \ntemplateExists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MappingModel } from './mapping.model';\nimport { LookupTable } from '../models/lookup-table.model';\nimport { Field } from '../models/field.model';\nimport { DocumentDefinition } from '../models/document-definition.model';\n\nimport { DataMapperUtil } from '../common/data-mapper-util';\n\nexport class MappingDefinition {\n  name: string = null;\n  mappings: MappingModel[] = [];\n  activeMapping: MappingModel = null;\n  parsedDocs: DocumentDefinition[] = [];\n  templateText: string = null;\n\n  private tables: LookupTable[] = [];\n  private tablesBySourceTargetKey: { [key: string]: LookupTable; } = {};\n  private tablesByName: { [key: string]: LookupTable; } = {};\n\n  constructor() {\n    this.name = 'UI.' + Math.floor((Math.random() * 1000000) + 1).toString();\n  }\n\n  templateExists(): boolean {\n    return ((this.templateText != null) && (this.templateText !== ''));\n  }\n\n  addTable(table: LookupTable): void {\n    this.tablesBySourceTargetKey[table.getInputOutputKey()] = table;\n    this.tablesByName[table.name] = table;\n    this.tables.push(table);\n  }\n\n  getTableByName(name: string): LookupTable {\n    return this.tablesByName[name];\n  }\n\n  getTableBySourceTarget(sourceIdentifier: string, targetIdentifier: string): LookupTable {\n    const key: string = sourceIdentifier + ':' + targetIdentifier;\n    return this.tablesBySourceTargetKey[key];\n  }\n\n  getTables(): LookupTable[] {\n    const tables: LookupTable[] = [];\n    for (const key in this.tablesByName) {\n      if (!this.tablesByName.hasOwnProperty(key)) {\n        continue;\n      }\n      const table: LookupTable = this.tablesByName[key];\n      tables.push(table);\n    }\n    return tables;\n  }\n\n  removeTableByName(name: string) {\n    if (name) {\n      const table = this.tablesByName[name];\n      const iokey = table.getInputOutputKey();\n      if (this.tablesByName[name]) {\n        delete this.tables[this.tables.indexOf(table)];\n        delete this.tablesByName[name];\n        delete this.tablesBySourceTargetKey[iokey];\n      }\n    }\n  }\n\n  getAllMappings(includeActiveMapping: boolean): MappingModel[] {\n    const mappings: MappingModel[] = [].concat(this.mappings);\n    if (includeActiveMapping) {\n      if (this.activeMapping == null) {\n        return mappings;\n      }\n      for (const mapping of mappings) {\n        if (mapping === this.activeMapping) {\n          return mappings;\n        }\n      }\n      mappings.push(this.activeMapping);\n    }\n    return mappings;\n  }\n\n  findMappingsForField(field: Field): MappingModel[] {\n    const mappingsForField: MappingModel[] = [];\n    for (const m of this.mappings) {\n      if (m.isFieldMapped(field)) {\n        mappingsForField.push(m);\n      }\n    }\n    return mappingsForField;\n  }\n\n  removeMapping(m: MappingModel): boolean {\n    return DataMapperUtil.removeItemFromArray(m, this.mappings);\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingDetailComponent.html":{"url":"components/MappingDetailComponent.html","title":"component - MappingDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mappingSelectionRequiredSubscription\n                            \n                            \n                                sourcesHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitle\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeMapping\n                            \n                            \n                                    Private\n                                selectMapping\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMapping\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMapping(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            selectMapping\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectMapping(field: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mappingSelectionRequiredSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourcesHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CollapsableHeaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('sourcesHeader')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnDestroy, ViewChild } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\nimport { MappingModel } from '../../models/mapping.model';\n\nimport { CollapsableHeaderComponent } from '../collapsable-header.component';\n\nimport { ModalWindowComponent } from '../modal-window.component';\nimport { MappingSelectionComponent } from './mapping-selection.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'mapping-detail',\n  templateUrl: './mapping-detail.component.html',\n})\n\nexport class MappingDetailComponent implements OnInit, OnDestroy {\n  @Input() cfg: ConfigModel;\n  @Input() modalWindow: ModalWindowComponent;\n\n  @ViewChild('sourcesHeader')\n  sourcesHeader: CollapsableHeaderComponent;\n\n  private mappingSelectionRequiredSubscription: Subscription;\n\n  ngOnInit(): void {\n    this.mappingSelectionRequiredSubscription = this.cfg.mappingService.mappingSelectionRequired$.subscribe((field: Field) => {\n      this.selectMapping(field);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.mappingSelectionRequiredSubscription.unsubscribe();\n  }\n\n  getTitle(): string {\n    return this.cfg.mappings.activeMapping.isLookupMode() ? 'Lookup Mapping' : 'Mapping Details';\n  }\n\n  removeMapping(event: MouseEvent): void {\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Remove';\n    this.modalWindow.headerText = 'Remove Mapping?';\n    this.modalWindow.message = 'Are you sure you want to remove the current mapping?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      const activeMapping = this.cfg.mappings.activeMapping;\n      if (activeMapping.isLookupMode) {\n        this.cfg.mappings.removeTableByName(activeMapping.transition.lookupTableName);\n      }\n      this.cfg.mappingService.removeMapping(activeMapping);\n      this.cfg.showMappingDetailTray = false;\n    };\n    this.modalWindow.show();\n  }\n\n  private selectMapping(field: Field): void {\n    const mappingsForField: MappingModel[] = this.cfg.mappings.findMappingsForField(field);\n    const self: MappingDetailComponent = this;\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Select';\n    this.modalWindow.headerText = 'Select Mapping';\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      const c: MappingSelectionComponent = mw.nestedComponent as MappingSelectionComponent;\n      c.selectedField = field;\n      c.cfg = self.cfg;\n      c.mappings = mappingsForField;\n      c.modalWindow = this.modalWindow;\n    };\n    this.modalWindow.nestedComponentType = MappingSelectionComponent;\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      this.cfg.errorService.clearValidationErrors();\n      const c: MappingSelectionComponent = mw.nestedComponent as MappingSelectionComponent;\n      const mapping: MappingModel = c.getSelectedMapping();\n      self.cfg.mappingService.selectMapping(mapping);\n    };\n    this.modalWindow.cancelButtonHandler = (mw: ModalWindowComponent) => {\n      self.cfg.mappingService.selectMapping(null);\n    };\n    this.modalWindow.show();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        {{ getTitle() }}\n        \n      \n    \n\n    \n\n      {{ cfg.errorService.displayErrorBlock(cfg.mappings.activeMapping.getValidationWarnings()) }}\n      {{ cfg.errorService.displayErrorBlock(cfg.mappings.activeMapping.getValidationErrors()) }}\n      {{ cfg.mappings.activeMapping.clearValidationErrors() }}\n\n      {{ cfg.errorService.displayErrorBlock(cfg.mappings.activeMapping.getPreviewWarnings()) }}\n      {{ cfg.errorService.displayErrorBlock(cfg.mappings.activeMapping.getPreviewErrors()) }}\n      {{ cfg.mappings.activeMapping.clearPreviewErrors() }}\n\n      \n        \n\n          \n          \n            \n\n              \n                \n                  \n                  \n                \n              \n            \n\n            \n              \n              \n                \n                  \n                  \n                \n              \n            \n          \n\n          \n          \n            \n\n              \n                \n                  \n                  \n                \n              \n            \n\n            \n              \n              \n                \n                  \n                  \n                \n              \n            \n          \n        \n      \n\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ getTitle() }}                            {{ cfg.errorService.displayErrorBlock(cfg.mappings.activeMapping.getValidationWarnings()) }}      {{ cfg.errorService.displayErrorBlock(cfg.mappings.activeMapping.getValidationErrors()) }}      {{ cfg.mappings.activeMapping.clearValidationErrors() }}      {{ cfg.errorService.displayErrorBlock(cfg.mappings.activeMapping.getPreviewWarnings()) }}      {{ cfg.errorService.displayErrorBlock(cfg.mappings.activeMapping.getPreviewErrors()) }}      {{ cfg.mappings.activeMapping.clearPreviewErrors() }}n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingFieldActionArgumentComponent.html":{"url":"components/MappingFieldActionArgumentComponent.html","title":"component - MappingFieldActionArgumentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingFieldActionArgumentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-field-action-argument\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-field-action-argument.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkIconEnabled\n                            \n                            \n                                delimiters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acceptInput\n                            \n                            \n                                actionConfigParamSelectionChanged\n                            \n                            \n                                contentChanged\n                            \n                            \n                                getActionConfigParamValues\n                            \n                            \n                                getActionConfigParamVDefault\n                            \n                            \n                                getLabel\n                            \n                            \n                                getMappedFieldActions\n                            \n                            \n                                isUserDelimiter\n                            \n                            \n                                modeIsSupported\n                            \n                            \n                                validateActionConfigParamSelection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                actionIndex\n                            \n                            \n                                argConfig\n                            \n                            \n                                argValIndex\n                            \n                            \n                                cfg\n                            \n                            \n                                mappedField\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:38\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :         FieldAction\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        actionIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        argConfig\n                    \n                \n                \n                    \n                        Type :         FieldActionArgument\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        argValIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mappedField\n                    \n                \n                \n                    \n                        Type :         MappedField\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            acceptInput\n                        \n                        \n                    \n                \n            \n            \n                \nacceptInput(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:62\n                \n            \n\n\n            \n                \n                    The user has selected the check icon at the end of the input text widget.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            actionConfigParamSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nactionConfigParamSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:99\n                \n            \n\n\n            \n                \n                    A mapping field action parameter selection has been made either from a pull-down menu\nor from user input to a text field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contentChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncontentChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:52\n                \n            \n\n\n            \n                \n                    The input text widget content has changed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionConfigParamValues\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionConfigParamValues(argConfig: FieldActionArgument)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:71\n                \n            \n\n\n            \n                \n                    Return in a string array the parameter values for the specified field action argument.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argConfig\n                                    \n                                                FieldActionArgument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     String[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionConfigParamVDefault\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionConfigParamVDefault(argConfig: FieldActionArgument, actionIndex: number, argValIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:132\n                \n            \n\n\n            \n                \n                    Return a string representing the default value for the field action argument pull-down.  If a mapped\nfield already exists for this component then use that to determine the displayed valued in the\npull-down; otherwise use the sequential configuration value based on the argument value index.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    argConfig\n                                    \n                                                FieldActionArgument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nargument configuration used if no mapped field exists\n\n\n                                    \n                                \n                                \n                                    actionIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nused when multiple actions are specified\n\n\n                                    \n                                \n                                \n                                    argValIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nindex into the argument values for any one specific action.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLabel(argConfigName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:146\n                \n            \n\n\n            \n                \n                    Translate an internal label to a human legible form.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argConfigName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedFieldActions\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedFieldActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     FieldAction[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserDelimiter\n                        \n                        \n                    \n                \n            \n            \n                \nisUserDelimiter(delimiterModel: TransitionDelimiterModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    delimiterModel\n                                    \n                                                TransitionDelimiterModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            modeIsSupported\n                        \n                        \n                    \n                \n            \n            \n                \nmodeIsSupported(delimiterModel: TransitionDelimiterModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    delimiterModel\n                                    \n                                                TransitionDelimiterModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateActionConfigParamSelection\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateActionConfigParamSelection(acp: FieldActionArgumentValue[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:84\n                \n            \n\n\n            \n                \n                    Simply validate that the user isn't attempting a conversion to the original type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    acp\n                                    \n                                            FieldActionArgumentValue[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkIconEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delimiters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionDelimiterModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\nimport { MappedField } from '../../models/mapping.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { FieldAction, FieldActionArgument, FieldActionArgumentValue } from '../../models/field-action.model';\nimport { TransitionDelimiterModel, TransitionModel, TransitionDelimiter } from '../../models/transition.model';\n\n@Component({\n  selector: 'mapping-field-action-argument',\n  templateUrl: './mapping-field-action-argument.component.html',\n})\n\nexport class MappingFieldActionArgumentComponent {\n  @Input() action: FieldAction;\n  @Input() actionIndex: number;\n  @Input() argValIndex: number;\n  @Input() argConfig: FieldActionArgument;\n  @Input() cfg: ConfigModel;\n  @Input() mappedField: MappedField;\n\n  delimiters: TransitionDelimiterModel[];\n  private checkIconEnabled = false;\n\n  constructor() {\n    TransitionModel.initialize();\n    this.delimiters = TransitionModel.delimiterModels;\n  }\n\n  getMappedFieldActions(): FieldAction[] {\n    return this.mappedField ? this.mappedField.actions : [this.action];\n  }\n\n  /**\n   * The input text widget content has changed.\n   */\n  contentChanged(): void {\n    this.checkIconEnabled = true;\n    this.cfg.mappingService.notifyMappingUpdated();\n  }\n\n  /**\n   * The user has selected the check icon at the end of the input text widget.\n   *\n   * @param event\n   */\n  acceptInput(event: any): void {\n    this.actionConfigParamSelectionChanged(event);\n  }\n\n  /**\n   * Return in a string array the parameter values for the specified field action argument.\n   *\n   * @param argConfig\n   */\n  getActionConfigParamValues(argConfig: FieldActionArgument): String[] {\n    const acpv: String[] = [];\n    for (const argument of argConfig.values) {\n      acpv.push(argument);\n    }\n    return acpv;\n  }\n\n  /**\n   * Simply validate that the user isn't attempting a conversion to the original type.\n   *\n   * @param acp\n   */\n  validateActionConfigParamSelection(acp: FieldActionArgumentValue[]): void {\n    this.cfg.errorService.clearMappingErrors();\n    if (acp != null && acp.length === 2) {\n      if (acp[0].value === acp[1].value) {\n        this.cfg.errorService.mappingError('Please select differing \\'from\\' and \\'to\\' units in your conversion transformation.', null);\n      }\n    }\n  }\n\n  /**\n   * A mapping field action parameter selection has been made either from a pull-down menu\n   * or from user input to a text field.\n   *\n   * @param event\n   */\n  actionConfigParamSelectionChanged(event: any): void {\n\n    // Make sure they've specified something.\n    if (!event.target.value || event.target.value.length === 0) {\n      this.cfg.errorService.info('You must specify a transformation argument value.', null);\n      return;\n    }\n    this.mappedField.parsedData.userCreated = true;\n\n    // Identify the pull-down\n    if (event.target.selectedOptions != null) {\n      const attributes: any = event.target.selectedOptions.item(0).attributes;\n      const selectedArgValName: any = attributes.getNamedItem('value').value;\n      const argValIndex: any = attributes.getNamedItem('argValIndex').value;\n      const actionIndex: any = attributes.getNamedItem('actionIndex').value;\n      const action: FieldAction = this.mappedField ? this.mappedField.actions[actionIndex] : this.action;\n      action.argumentValues[argValIndex].value = selectedArgValName;\n      this.validateActionConfigParamSelection(action.argumentValues);\n    }\n    this.cfg.mappingService.notifyMappingUpdated();\n    this.checkIconEnabled = false;\n    // this.enableCheck();\n  }\n\n  /**\n   * Return a string representing the default value for the field action argument pull-down.  If a mapped\n   * field already exists for this component then use that to determine the displayed valued in the\n   * pull-down; otherwise use the sequential configuration value based on the argument value index.\n   *\n   * @param argConfig - argument configuration used if no mapped field exists\n   * @param actionIndex - used when multiple actions are specified\n   * @param argValIndex - index into the argument values for any one specific action.\n   */\n  getActionConfigParamVDefault(argConfig: FieldActionArgument, actionIndex: number, argValIndex: number): String {\n    const action: FieldAction = this.getMappedFieldActions()[actionIndex];\n    if (action != null && action.argumentValues.length > 0) {\n      return action.argumentValues[argValIndex].value;\n    } else {\n      return argConfig.values[argValIndex];\n    }\n  }\n\n  /**\n   * Translate an internal label to a human legible form.\n   *\n   * @param argConfigName\n   */\n  getLabel(argConfigName: string): string {\n    return DataMapperUtil.toDisplayable(argConfigName);\n  }\n\n  modeIsSupported(delimiterModel: TransitionDelimiterModel): boolean {\n    if ([TransitionDelimiter.NONE, TransitionDelimiter.USER_DEFINED].includes(delimiterModel.delimiter)) {\n      return false;\n    }\n    return true;\n  }\n\n  isUserDelimiter(delimiterModel: TransitionDelimiterModel) {\n    return (delimiterModel.delimiter === TransitionDelimiter.USER_DEFINED);\n  }\n\n}\n\n    \n\n    \n        \n  \n\n  \n     0; then dropdown; else textInput\"> \n  \n  \n    {{ getLabel(argConfig.name) }}\n    \n      {{ actionConfigParamVal }}\n      \n    \n  \n  \n    {{ getLabel(argConfig.name) }}\n    \n      \n        \n          {{ delimiter.prettyName }}\n        \n      \n    \n  \n\n  \n    {{ getLabel(argConfig.name) }}: \n    \n      \n    \n    \n      \n    \n\n    \n      \n        \n      \n      \n        \n      \n    \n    -->\n  \n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         0; then dropdown; else textInput\">         {{ getLabel(argConfig.name) }}          {{ actionConfigParamVal }}                  {{ getLabel(argConfig.name) }}                            {{ delimiter.prettyName }}                          {{ getLabel(argConfig.name) }}:                                                                                 -->    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingFieldActionArgumentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingFieldActionComponent.html":{"url":"components/MappingFieldActionComponent.html","title":"component - MappingFieldActionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingFieldActionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-field-action\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-field-action.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actionsExistForField\n                            \n                            \n                                configSelectionChanged\n                            \n                            \n                                getActionConfigs\n                            \n                            \n                                getMappedFieldActions\n                            \n                            \n                                isIndexArg\n                            \n                            \n                                removeAction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                isSource\n                            \n                            \n                                mappedField\n                            \n                            \n                                mapping\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSource\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mappedField\n                    \n                \n                \n                    \n                        Type :         MappedField\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            actionsExistForField\n                        \n                        \n                    \n                \n            \n            \n                \nactionsExistForField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nconfigSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:66\n                \n            \n\n\n            \n                \n                    A mapping field action configuration selection has been made.  Note that action field arguments, if any,\nmay be specified by either a text field or pull-down menu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionConfigs\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionConfigs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     FieldActionDefinition[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedFieldActions\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedFieldActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     FieldAction[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isIndexArg\n                        \n                        \n                    \n                \n            \n            \n                \nisIndexArg(argVal: string, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeAction\n                        \n                        \n                    \n                \n            \n            \n                \nremoveAction(action: FieldAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:56\n                \n            \n\n\n            \n                \n                    Remove the specified field action (transformation) from the current mapped field's\nactions.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : DataMapperUtil.toDisplayable\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\nimport { MappingModel, MappedField } from '../../models/mapping.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { FieldAction, FieldActionDefinition, Multiplicity } from '../../models/field-action.model';\n\n@Component({\n  selector: 'mapping-field-action',\n  templateUrl: './mapping-field-action.component.html',\n})\n\nexport class MappingFieldActionComponent {\n  @Input() cfg: ConfigModel;\n  @Input() mappedField: MappedField;\n  @Input() isSource: boolean;\n  @Input() mapping: MappingModel;\n  getLabel = DataMapperUtil.toDisplayable;\n\n  getMappedFieldActions(): FieldAction[] {\n    return this.mappedField.actions;\n  }\n\n  isIndexArg(argVal: string, index: number): boolean {\n    return (argVal === 'Index' && index === 0);\n  }\n\n  actionsExistForField(): boolean {\n    return (this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, this.isSource, Multiplicity.ONE_TO_ONE).length > 0);\n  }\n\n  getActionConfigs(): FieldActionDefinition[] {\n    return this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, this.isSource, Multiplicity.ONE_TO_ONE);\n  }\n\n  /**\n   * Remove the specified field action (transformation) from the current mapped field's\n   * actions.\n   * @param action\n   */\n  removeAction(action: FieldAction): void {\n    this.mappedField.removeAction(action);\n    this.cfg.mappingService.notifyMappingUpdated();\n  }\n\n  /**\n   * A mapping field action configuration selection has been made.  Note that action field arguments, if any,\n   * may be specified by either a text field or pull-down menu.\n   * @param event\n   */\n  configSelectionChanged(event: any) {\n    const attributes: any = event.target.selectedOptions.item(0).attributes;\n    const selectedActionName: any = attributes.getNamedItem('value').value;\n    const selectedActionIndex: any = attributes.getNamedItem('actionIndex').value;\n    const action: FieldAction = this.getMappedFieldActions()[selectedActionIndex];\n    if (action.name !== selectedActionName) {\n      action.argumentValues = [];  // Invalidate the previously selected field action arguments.\n      const fieldActionDefinition = this.cfg.fieldActionService.getActionDefinitionForName(selectedActionName, Multiplicity.ONE_TO_ONE);\n      fieldActionDefinition.populateFieldAction(action);\n\n      // If the field action configuration predefines argument values then populate the fields with\n      // default values.  Needed to support pull-down menus in action argument definitions.\n      if (action.argumentValues.values && action.argumentValues.length > 0\n        && fieldActionDefinition.arguments[0] && fieldActionDefinition.arguments[0].values\n        && fieldActionDefinition.arguments[0].values.length > 0) {\n        for (let i = 0; i \n    \n\n    \n        \n  \n\n    \n      \n        \n        \n          {{ getLabel(actionConfig.name) }}\n        \n        \n          \n        \n        \n      \n\n      \n        \n\n          \n          \n\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      {{ getLabel(actionConfig.name) }}                                                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingFieldActionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingFieldContainerComponent.html":{"url":"components/MappingFieldContainerComponent.html","title":"component - MappingFieldContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingFieldContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-field-container\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-field-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                    Private\n                                diff\n                            \n                            \n                                    Private\n                                elem\n                            \n                            \n                                inputId\n                            \n                            \n                                    Private\n                                isDragDropTarget\n                            \n                            \n                                    Private\n                                searchFilter\n                            \n                            \n                                    Private\n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allowDrop\n                            \n                            \n                                displayFieldSearchBox\n                            \n                            \n                                displayTransitionSelection\n                            \n                            \n                                dragEnterLeave\n                            \n                            \n                                endDrag\n                            \n                            \n                                executeSearch\n                            \n                            \n                                getAddButtonLabel\n                            \n                            \n                                getSearchPlaceholder\n                            \n                            \n                                getTopFieldTypeLabel\n                            \n                            \n                                handleMouseOver\n                            \n                            \n                                isAddButtonVisible\n                            \n                            \n                                isPartialComponent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeMappedField\n                            \n                            \n                                selectionChanged\n                            \n                            \n                                startDrag\n                            \n                            \n                                updateSearchFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                isSource\n                            \n                            \n                                mapping\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:45\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSource\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allowDrop\n                        \n                        \n                    \n                \n            \n            \n                \nallowDrop(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayFieldSearchBox\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayFieldSearchBox()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayTransitionSelection\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayTransitionSelection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragEnterLeave\n                        \n                        \n                    \n                \n            \n            \n                \ndragEnterLeave(event: any, entering: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entering\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endDrag\n                        \n                        \n                    \n                \n            \n            \n                \nendDrag(event: any, insertBeforeMappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    insertBeforeMappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            executeSearch\n                        \n                        \n                    \n                \n            \n            \n                \nexecuteSearch(filter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:182\n                \n            \n\n\n            \n                \n                    This search is triggered off of the observer created in the constructor.  Note that we display any\nfield whose path matches but we capture only the field leaf name for display.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAddButtonLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetAddButtonLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:225\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSearchPlaceholder\n                        \n                        \n                    \n                \n            \n            \n                \ngetSearchPlaceholder()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTopFieldTypeLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetTopFieldTypeLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:221\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseOver\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseOver(evt1: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt1\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAddButtonVisible\n                        \n                        \n                    \n                \n            \n            \n                \nisAddButtonVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPartialComponent\n                        \n                        \n                    \n                \n            \n            \n                \nisPartialComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMappedField\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMappedField(mappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:229\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startDrag\n                        \n                        \n                    \n                \n            \n            \n                \nstartDrag(event: any, draggedMappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    draggedMappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSearchFilter\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSearchFilter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            diff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            elem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDragDropTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\nimport { MappingModel, MappedField } from '../../models/mapping.model';\nimport { TransitionMode } from '../../models/transition.model';\nimport { Observable } from 'rxjs';\nimport { Field } from '../../models/field.model';\nimport { ModalWindowComponent } from '../modal-window.component';\n\n@Component({\n  selector: 'mapping-field-container',\n  templateUrl: './mapping-field-container.component.html',\n})\n\nexport class MappingFieldContainerComponent implements OnInit {\n  @Input() cfg: ConfigModel;\n  @Input() isSource = false;\n  @Input() mapping: MappingModel;\n  @Input() modalWindow: ModalWindowComponent;\n\n  inputId: String;\n\n  private isDragDropTarget = false;\n  private elem = null;\n  private start = 0;\n  private diff = 0;\n  private searchFilter = '';\n  dataSource: Observable;\n\n  constructor() {\n    this.dataSource = Observable.create((observer: any) => {\n      observer.next(this.executeSearch(this.searchFilter));\n    });\n  }\n\n  ngOnInit() {\n    this.inputId = 'input-' + this.isSource ? 'source' : 'target';\n  }\n\n  isPartialComponent(): boolean {\n    return true;\n  }\n\n  handleMouseOver(evt1: MouseEvent): void {\n    if (this.elem != null) {\n      evt1.stopPropagation();\n      evt1.preventDefault();\n      let end = 0;\n\n      if (evt1['pageY']) {\n        end = evt1['pageY'];\n      } else if (evt1['clientY']) {\n        end = evt1['clientY'];\n      }\n      this.diff = end - this.start;\n      this.elem.style['top'] = this.diff + 'px';\n    }\n  }\n\n  startDrag(event: any, draggedMappedField: MappedField): void {\n    event = event || window.event;\n    event.dataTransfer.setData('text', '');  // firefox bug\n    this.cfg.currentDraggedField = draggedMappedField;\n    /* this code does correctly constrain the drag movement to the vertical area of\n     * the mapping details section. It couldn't correctly identify the on-drop target\n    event = event || window.event;\n    event.stopPropagation();\n    event.preventDefault();\n    this.elem = event.currentTarget;\n\n    if (event['pageY']) {\n        this.start = event['pageY'];\n    } else if (event['clientY']) {\n        this.start = event['clientY'];\n    }\n\n    this.elem.style.position = 'relative';\n    this.elem.onmouseup = (evt: any) => {\n      // See endDrag()\n      evt.stopPropagation();\n      evt.preventDefault();\n    };\n    */\n  }\n\n  dragEnterLeave(event: any, entering: boolean): void {\n    this.isDragDropTarget = entering;\n  }\n\n  allowDrop(event: any): void {\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n    this.isDragDropTarget = true;\n  }\n\n  endDrag(event: any, insertBeforeMappedField: MappedField): void {\n    this.isDragDropTarget = false;\n\n    const droppedMappedField: MappedField = this.cfg.currentDraggedField;\n    if (droppedMappedField == null) {\n      return;\n    }\n\n    if (insertBeforeMappedField != null) {\n      this.cfg.mappingService.moveMappedFieldTo(this.mapping, droppedMappedField,\n        this.mapping.getIndexForMappedField(insertBeforeMappedField));\n\n      // Update indexing in any conditional mapping expressions.\n      if (this.mapping.transition && this.mapping.transition.enableExpression) {\n        this.mapping.transition.expression.updateFieldReference(this.mapping);\n        this.cfg.mappingService.notifyMappingUpdated();\n      }\n    }\n    this.cfg.currentDraggedField = null;\n  }\n\n  displayTransitionSelection(): boolean {\n    return (this.isSource && !this.mapping.transition.enableExpression &&\n      (this.mapping.transition.isOneToManyMode() || this.mapping.transition.isManyToOneMode()\n      || this.mapping.transition.isEnumerationMode()));\n  }\n\n  displayFieldSearchBox(): boolean {\n\n    const mappedFields = this.mapping.getMappedFields(this.isSource);\n    if (mappedFields.length === 0) {\n      return true;\n    } else if (mappedFields[0].field.isInCollection()) {\n      return false;\n    }\n\n    if (this.mapping.transition.mode === TransitionMode.ONE_TO_ONE) {\n      return true;\n    }\n    if (this.isSource) {\n      if (this.mapping.transition.mode === TransitionMode.MANY_TO_ONE) {\n        return !mappedFields[0].field.isInCollection();\n      }\n    } else {\n      if (this.mapping.transition.mode === TransitionMode.ONE_TO_MANY) {\n        return !mappedFields[0].field.isInCollection();\n      }\n    }\n    return false;\n  }\n\n  updateSearchFilter(value: string) {\n    this.searchFilter = value;\n  }\n\n  getSearchPlaceholder(): string {\n    return 'Begin typing to search for more ' + (this.isSource ? 'sources' : 'targets');\n  }\n\n  /**\n   * This search is triggered off of the observer created in the constructor.  Note that we display any\n   * field whose path matches but we capture only the field leaf name for display.\n   *\n   * @param filter\n   */\n  executeSearch(filter: string): any[] {\n    const formattedFields: any[] = [];\n    let fields: Field[] = [];\n    for (const docDef of this.cfg.getDocs(this.isSource)) {\n      fields = fields.concat(docDef.getTerminalFields());\n    }\n    const activeMapping: MappingModel = this.cfg.mappings.activeMapping;\n    for (const field of fields) {\n      let displayName = (field == null) ? '' : field.getFieldLabel(ConfigModel.getConfig().showTypes, true);\n\n      if (filter == null || filter === '' || displayName.toLowerCase().indexOf(filter.toLowerCase()) !== -1) {\n        if (!this.cfg.mappingService.isFieldSelectable(activeMapping, field)) {\n          continue;\n        }\n        displayName = DataMapperUtil.extractDisplayPath(field.getFieldLabel(ConfigModel.getConfig().showTypes, true), 40);\n        const formattedField: any = { 'field': field, 'displayName': displayName };\n        formattedFields.push(formattedField);\n      }\n      if (formattedFields.length > 9) {\n        break;\n      }\n    }\n    return formattedFields;\n  }\n\n  selectionChanged(event: any): void {\n    this.cfg.mappingService.fieldSelected(event.item['field'], true);\n    this.searchFilter = '';\n  }\n\n  isAddButtonVisible(): boolean {\n    if (this.isSource && this.mapping.transition.isManyToOneMode()) {\n      return true;\n    } else if (!this.isSource && this.mapping.transition.isOneToManyMode()) {\n      return true;\n    }\n    return false;\n  }\n\n  getTopFieldTypeLabel(): string {\n    return this.isSource ? 'Source' : 'Target';\n  }\n\n  getAddButtonLabel(): string {\n    return this.isSource ? 'Add Source' : 'Add Target';\n  }\n\n  removeMappedField(mappedField: MappedField): void {\n    this.mapping.removeMappedField(mappedField);\n    this.cfg.mappingService.updateMappedField(this.mapping);\n  }\n}\n\n    \n\n    \n        \n\n  \n\n    \n      \n        \n        \n      \n    \n\n    \n      \n    \n  \n\n  \n\n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingFieldContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingFieldDetailComponent.html":{"url":"components/MappingFieldDetailComponent.html","title":"component - MappingFieldDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingFieldDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-field-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-field-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                parentObjectName\n                            \n                            \n                                sourceIconCSSClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTransformation\n                            \n                            \n                                displayIndex\n                            \n                            \n                                displayParentObject\n                            \n                            \n                                getFieldPath\n                            \n                            \n                                    Private\n                                getParentObjectName\n                            \n                            \n                                    Private\n                                getSourceIconCSSClass\n                            \n                            \n                                indexSelectionChanged\n                            \n                            \n                                isTransformCapable\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeMappedField\n                            \n                            \n                                    Private\n                                updateTemplateValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                isSource\n                            \n                            \n                                mappedField\n                            \n                            \n                                mapping\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSource\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mappedField\n                    \n                \n                \n                    \n                        Type :         MappedField\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTransformation\n                        \n                        \n                    \n                \n            \n            \n                \naddTransformation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:50\n                \n            \n\n\n            \n                \n                    The add transformation icon has been selected.  Add a field action to the current\nmapped field.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayIndex\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayParentObject\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayParentObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldPath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getParentObjectName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getParentObjectName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getSourceIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceIconCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            indexSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nindexSelectionChanged(event: any, mappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:98\n                \n            \n\n\n            \n                \n                    The user has hand-edited the index value of a mapped field.  Perform the following:\n\nAdd place-holders for each index value between the updated value and its previous value.\nRe-sequence the field action indices.\nSort the mapped fields array to get then back into numerical order.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTransformCapable\n                        \n                        \n                    \n                \n            \n            \n                \nisTransformCapable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMappedField\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMappedField(mappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateTemplateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTemplateValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentObjectName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceIconCSSClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { MappingModel, MappedField } from '../../models/mapping.model';\nimport { FieldAction } from '../../models/field-action.model';\n\n@Component({\n  selector: 'mapping-field-detail',\n  templateUrl: './mapping-field-detail.component.html',\n})\n\nexport class MappingFieldDetailComponent implements OnInit {\n\n  @Input() cfg: ConfigModel;\n  @Input() mapping: MappingModel;\n  @Input() isSource: boolean;\n  @Input() mappedField: MappedField;\n\n  sourceIconCSSClass: string;\n  parentObjectName: string;\n\n  ngOnInit() {\n    this.updateTemplateValues();\n  }\n\n  isTransformCapable() {\n    return (!this.mappedField.isPadField() && this.mappedField.field.name.length > 0);\n  }\n\n  /**\n   * The add transformation icon has been selected.  Add a field action to the current\n   * mapped field.\n   */\n  addTransformation(): void {\n    const actionDefinition = this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, this.isSource)[0];\n    if (actionDefinition == null) {\n      this.cfg.errorService.info('The selected field has no applicable transformation actions.', null);\n      return;\n    }\n    const action: FieldAction = new FieldAction();\n    actionDefinition.populateFieldAction(action);\n    this.mappedField.actions.push(action);\n    this.cfg.mappingService.notifyMappingUpdated();\n  }\n\n  getFieldPath(): string {\n    if (this.mappedField == null || this.mappedField.field == null) {\n      return '[None]';\n    }\n    return this.mappedField.field.path;\n  }\n\n  displayParentObject(): boolean {\n    if (this.mappedField != null && this.mappedField.isPadField()) {\n      this.parentObjectName = '';\n      return true;\n    }\n    if (this.mappedField == null || this.mappedField.field == null\n      || this.mappedField.field.name === null\n      || this.mappedField.field.name.length === 0\n      || this.mappedField.field.docDef == null) {\n      return false;\n    }\n    if (this.parentObjectName == null || this.parentObjectName.length === 0) {\n      this.updateTemplateValues();\n    }\n    return true;\n  }\n\n  displayIndex(): boolean {\n    return this.mapping.getMappedFields(this.isSource).length > 1 && !this.mapping.transition.enableExpression;\n  }\n\n  /**\n   * The user has hand-edited the index value of a mapped field.  Perform the following:\n   *   - Add place-holders for each index value between the updated value and its previous value.\n   *   - Re-sequence the field action indices.\n   *   - Sort the mapped fields array to get then back into numerical order.\n   * @param event\n   * @param mappedField\n   */\n  indexSelectionChanged(event: any, mappedField: MappedField): void {\n    const insertionIndex = Number(event.target.value) || 0;\n    if (insertionIndex === 0) {\n      return;\n    }\n    const mappedFields = this.mapping.getMappedFields(mappedField.isSource());\n    const targetIndex = mappedFields.length;\n    if (insertionIndex > targetIndex) {\n\n      // Add place-holders for each index value between the previous max index and the insertion index.\n      this.cfg.mappingService.addPlaceholders(insertionIndex - mappedFields.length,\n        this.mapping, targetIndex, mappedField.field.isSource());\n    }\n    this.cfg.mappingService.moveMappedFieldTo(this.mapping, mappedField, insertionIndex);\n    this.cfg.mappingService.notifyMappingUpdated();\n  }\n\n  removeMappedField(mappedField: MappedField): void {\n    this.mapping.removeMappedField(mappedField);\n    this.cfg.mappingService.updateMappedField(this.mapping);\n  }\n\n  private updateTemplateValues(): void {\n    this.sourceIconCSSClass = this.getSourceIconCSSClass();\n    this.parentObjectName = this.getParentObjectName();\n  }\n\n  private getSourceIconCSSClass(): string {\n    return this.isSource ? 'fa fa-hdd-o' : 'fa fa-download';\n  }\n\n  private getParentObjectName() {\n    if (this.mappedField == null || this.mappedField.field == null || this.mappedField.field.docDef == null) {\n      return '';\n    }\n    return this.mappedField.field.docDef.getName(ConfigModel.getConfig().showTypes);\n  }\n}\n\n    \n\n    \n        \n\n{{ model['field'].docDef == null ?\n  'Not yet defined' : model['field'].docDef.name }}\n{{ model['field'].path }}\n\n\n\n\n\n\n  \n     {{ parentObjectName }}\n  \n  {{ getFieldPath() }}\n  ({{ mappedField.field.type }})\n  \n\n\n\n\n\n  \n\n    \n    \n    \n\n    \n    \n      {{ mappedField.field.name }}\n    \n\n    \n    \n      Index:\n\n      \n        \n          {{ mapping.getIndexForMappedField(mappedField) }}\n        \n        \n          \n        \n      \n      \n        \n      \n    \n  \n\n  \n\n  \n  \n    \n      \n        Add Transformation\n      \n    \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ model[\\'field\\'].docDef == null ?  \\'Not yet defined\\' : model[\\'field\\'].docDef.name }}{{ model[\\'field\\'].path }}       {{ parentObjectName }}    {{ getFieldPath() }}  ({{ mappedField.field.type }})                              {{ mappedField.field.name }}                  Index:                        {{ mapping.getIndexForMappedField(mappedField) }}                                                                                          Add Transformation                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingFieldDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingListComponent.html":{"url":"components/MappingListComponent.html","title":"component - MappingListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-list\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                searchFilter\n                            \n                            \n                                searchMode\n                            \n                            \n                                    Private\n                                searchResults\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fieldPairMatchesSearch\n                            \n                            \n                                getItemsCSSClass\n                            \n                            \n                                getMappedFields\n                            \n                            \n                                getMappingCSSClass\n                            \n                            \n                                getMappingRowsCSSClass\n                            \n                            \n                                getMappings\n                            \n                            \n                                getRowTitleCSSClass\n                            \n                            \n                                getSearchIconCSSClass\n                            \n                            \n                                isActiveMapping\n                            \n                            \n                                    Private\n                                search\n                            \n                            \n                                searchResultsVisible\n                            \n                            \n                                selectMapping\n                            \n                            \n                                toggleSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fieldPairMatchesSearch\n                        \n                        \n                    \n                \n            \n            \n                \nfieldPairMatchesSearch(mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItemsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetItemsCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedFields\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedFields(mapping: MappingModel, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MappedField[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappingCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappingCSSClass(mapping: MappingModel, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappingRowsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappingRowsCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappings\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MappingModel[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRowTitleCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetRowTitleCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSearchIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetSearchIconCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActiveMapping\n                        \n                        \n                    \n                \n            \n            \n                \nisActiveMapping(mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(searchFilter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchFilter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchResultsVisible\n                        \n                        \n                    \n                \n            \n            \n                \nsearchResultsVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectMapping\n                        \n                        \n                    \n                \n            \n            \n                \nselectMapping(mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSearch\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\nimport { MappingModel, MappedField } from '../../models/mapping.model';\nimport { DocumentDefinition } from '../../models/document-definition.model';\n\n@Component({\n  selector: 'mapping-list',\n  templateUrl: './mapping-list.component.html',\n})\n\nexport class MappingListComponent {\n  @Input() cfg: ConfigModel;\n\n  searchMode = false;\n  private searchFilter = '';\n  private searchResults: MappingModel[] = [];\n\n  getItemsCSSClass(): string {\n    return 'items mappings' + (this.searchMode ? ' searchShown' : '');\n  }\n\n  searchResultsVisible(): boolean {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      return false;\n    }\n    return (this.searchResults.length === 0);\n  }\n\n  getMappingCSSClass(mapping: MappingModel, index: number): string {\n    let cssClass = 'item ';\n    cssClass += (index % 2 === 1) ? ' even' : '';\n    if (mapping === this.cfg.mappings.activeMapping) {\n      cssClass += ' active';\n    }\n    return cssClass;\n  }\n\n  selectMapping(mapping: MappingModel): void {\n    this.cfg.mappingService.selectMapping(mapping);\n  }\n\n  getRowTitleCSSClass(): string {\n    return this.searchMode ? 'rowTitles searchShown' : 'rowTitles';\n  }\n\n  getMappingRowsCSSClass(): string {\n    return this.searchMode ? 'rows searchShown' : 'rows';\n  }\n\n  getMappings(): MappingModel[] {\n    return this.searchMode ? this.searchResults : [].concat(this.cfg.mappings.getAllMappings(true));\n  }\n\n  getMappedFields(mapping: MappingModel, isSource: boolean): MappedField[] {\n    return mapping.getUserMappedFields(isSource);\n  }\n\n  toggleSearch(): void {\n    this.searchMode = !this.searchMode;\n    this.search(this.searchFilter);\n  }\n\n  getSearchIconCSSClass(): string {\n    const cssClass = 'fa fa-search searchBoxIcon link';\n    return this.searchMode ? (cssClass + ' selectedIcon') : cssClass;\n  }\n\n  fieldPairMatchesSearch(mapping: MappingModel): boolean {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      return true;\n    }\n    const filter: string = this.searchFilter.toLowerCase();\n    const transitionName: string = mapping.transition.getPrettyName();\n    if (transitionName != null && transitionName.toLowerCase().includes(filter)) {\n      return true;\n    }\n    for (const mappedField of mapping.getAllMappedFields()) {\n      const field: Field = mappedField.field;\n      if (field == null || field.path == null) {\n        continue;\n      }\n      if (field.path.toLowerCase().includes(filter)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isActiveMapping(mapping: MappingModel): boolean {\n    return this.cfg.mappings.activeMapping === mapping;\n  }\n\n  private search(searchFilter: string): void {\n    this.searchFilter = searchFilter;\n\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      this.searchResults = [].concat(this.cfg.mappings.getAllMappings(true));\n      return;\n    }\n\n    this.searchResults = [];\n    for (const mapping of this.cfg.mappings.getAllMappings(true)) {\n      if (this.fieldPairMatchesSearch(mapping)) {\n        this.searchResults.push(mapping);\n        break;\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          Mappings\n        \n        \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          \n            Sources\n          \n            Targets\n          \n            Type\n          \n        \n        \n      \n    \n    \n      \n        \n          \n            \n              \n              \n            \n            \n              \n              \n            \n            \n              {{ mapping.transition.getPrettyName() }}\n              \n            \n            \n              \n            \n            \n          \n        \n      \n      \n        No search results.\n        \n      \n    \n    {{ cfg.mappings.mappings.length }} mappings\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Mappings                                                                                                                Sources                      Targets                      Type                                                                                                                                                                                                  {{ mapping.transition.getPrettyName() }}                                                                                                                  No search results.                      {{ cfg.mappings.mappings.length }} mappings      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingListFieldComponent.html":{"url":"components/MappingListFieldComponent.html","title":"component - MappingListFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingListFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list-field.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-list-field\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-list-field.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayParentObject\n                            \n                            \n                                getFieldPath\n                            \n                            \n                                getParentObjectName\n                            \n                            \n                                getSourceIconCSSClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                isActive\n                            \n                            \n                                isSource\n                            \n                            \n                                mappedField\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list-field.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isActive\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list-field.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSource\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list-field.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mappedField\n                    \n                \n                \n                    \n                        Type :         MappedField\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list-field.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayParentObject\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayParentObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list-field.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldPath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list-field.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParentObjectName\n                        \n                        \n                    \n                \n            \n            \n                \ngetParentObjectName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list-field.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSourceIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetSourceIconCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list-field.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { MappedField } from '../../models/mapping.model';\n\n@Component({\n  selector: 'mapping-list-field',\n  templateUrl: './mapping-list-field.component.html',\n})\n\nexport class MappingListFieldComponent {\n  @Input() mappedField: MappedField;\n  @Input() isSource: boolean;\n  @Input() isActive: boolean;\n  @Input() cfg: ConfigModel;\n\n  getSourceIconCSSClass(): string {\n    return this.isSource ? 'fa fa-hdd-o' : 'fa fa-download';\n  }\n\n  getFieldPath(): string {\n    if (this.mappedField == null || this.mappedField.field == null) {\n      return '[None]';\n    }\n    return this.mappedField.field.getFieldLabel(ConfigModel.getConfig().showTypes, true);\n  }\n\n  displayParentObject(): boolean {\n    if (this.mappedField == null || this.mappedField.field == null\n      || this.mappedField.field.docDef == null) {\n      return false;\n    }\n    return true;\n  }\n\n  getParentObjectName() {\n    if (this.mappedField == null || this.mappedField.field == null || this.mappedField.field.docDef == null) {\n      return '';\n    }\n    return this.mappedField.field.docDef.getName(ConfigModel.getConfig().showTypes);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ getParentObjectName() }}\n    \n    {{ getFieldPath() }}\n    \n  \n\n\n\n  \n    \n      \n        \n          {{ getFieldPath() }}\n           0\">\n        \n      \n    \n  \n\n  \n    \n      \n        \n        \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ getParentObjectName() }}        {{ getFieldPath() }}                                    {{ getFieldPath() }}           0\">                                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingListFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingSelectionComponent.html":{"url":"components/MappingSelectionComponent.html","title":"component - MappingSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-selection\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                mappings\n                            \n                            \n                                modalWindow\n                            \n                            \n                                sectionComponents\n                            \n                            \n                                selectedField\n                            \n                            \n                                    Private\n                                selectedMappingComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMapping\n                            \n                            \n                                getFormattedOutputPath\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                getSelectedMapping\n                            \n                            \n                                    Private\n                                getSelectedMappingComponent\n                            \n                            \n                                isDataValid\n                            \n                            \n                                selectionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addMapping\n                        \n                        \n                    \n                \n            \n            \n                \naddMapping()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFormattedOutputPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetFormattedOutputPath(path: string, nameOnly: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nameOnly\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSelectedMapping\n                        \n                        \n                    \n                \n            \n            \n                \ngetSelectedMapping()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MappingModel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getSelectedMappingComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSelectedMappingComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MappingSelectionSectionComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged(c: MappingSelectionSectionComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                MappingSelectionSectionComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalWindow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sectionComponents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('mappingSection')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedMappingComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingSelectionSectionComponent\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChildren, QueryList, ElementRef } from '@angular/core';\n\nimport { MappingModel } from '../../models/mapping.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\n\nimport { ModalWindowComponent, ModalWindowValidator } from '../modal-window.component';\nimport { MappingSelectionSectionComponent } from './mapping-selection-section.component';\n\n@Component({\n  selector: 'mapping-selection',\n  templateUrl: './mapping-selection.component.html',\n})\n\nexport class MappingSelectionComponent implements ModalWindowValidator {\n  modalWindow: ModalWindowComponent;\n  mappings: MappingModel[];\n  selectedField: Field = null;\n  cfg: ConfigModel;\n\n  @ViewChildren('mappingSection') sectionComponents: QueryList;\n\n  private selectedMappingComponent: MappingSelectionSectionComponent = null;\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n  selectionChanged(c: MappingSelectionSectionComponent) {\n    const self: MappingSelectionComponent = c.parentComponent as MappingSelectionComponent;\n    const oldSelectedItem: MappingSelectionSectionComponent = self.getSelectedMappingComponent();\n    oldSelectedItem.selected = false;\n    c.selected = true;\n    self.selectedMappingComponent = c;\n  }\n\n  getFormattedOutputPath(path: string, nameOnly: boolean) {\n    path = path.replace('.', '/');\n    const index: number = path.lastIndexOf('/');\n    const fieldName: string = (index === -1) ? path : path.substr(path.lastIndexOf('/') + 1);\n    path = (index === -1) ? '' : path.substr(0, path.lastIndexOf('/') + 1);\n    return nameOnly ? fieldName : path;\n  }\n\n  addMapping() {\n    this.cfg.mappingService.addNewMapping(this.selectedField, false);\n    this.modalWindow.close();\n  }\n\n  getSelectedMapping(): MappingModel {\n    return this.getSelectedMappingComponent().mapping;\n  }\n\n  private getSelectedMappingComponent(): MappingSelectionSectionComponent {\n    if (this.selectedMappingComponent == null) {\n      for (const c of this.sectionComponents.toArray()) {\n        if (c.selected) {\n          this.selectedMappingComponent = c;\n          break;\n        }\n      }\n    }\n    return this.selectedMappingComponent;\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ selectedField.isSource() ? 'Source' : 'Target' }}\n    \n      {{ getFormattedOutputPath(selectedField.path, false) }}\n      {{ getFormattedOutputPath(selectedField.path, true) }}\n      \n    \n    \n    \n      Add New Mapping\n    \n  \n  \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ selectedField.isSource() ? \\'Source\\' : \\'Target\\' }}          {{ getFormattedOutputPath(selectedField.path, false) }}      {{ getFormattedOutputPath(selectedField.path, true) }}                        Add New Mapping                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingSelectionSectionComponent.html":{"url":"components/MappingSelectionSectionComponent.html","title":"component - MappingSelectionSectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingSelectionSectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-selection-section\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-selection-section.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClass\n                            \n                            \n                                getFormattedOutputPath\n                            \n                            \n                                getSourceTargetLabelText\n                            \n                            \n                                handleMouseClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOddRow\n                            \n                            \n                                mapping\n                            \n                            \n                                outputNumber\n                            \n                            \n                                parentComponent\n                            \n                            \n                                selected\n                            \n                            \n                                selectedCallback\n                            \n                            \n                                selectedFieldIsSource\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOddRow\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        outputNumber\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentComponent\n                    \n                \n                \n                    \n                        Type :         Component\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedCallback\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedFieldIsSource\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFormattedOutputPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetFormattedOutputPath(path: string, nameOnly: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nameOnly\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSourceTargetLabelText\n                        \n                        \n                    \n                \n            \n            \n                \ngetSourceTargetLabelText(isSource: boolean, mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseClick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { MappingModel } from '../../models/mapping.model';\n\n@Component({\n  selector: 'mapping-selection-section',\n  templateUrl: './mapping-selection-section.component.html',\n})\n\nexport class MappingSelectionSectionComponent {\n  @Input() outputNumber: number;\n  @Input() mapping: MappingModel;\n  @Input() selectedCallback: Function;\n  @Input() selected = false;\n  @Input() selectedFieldIsSource = false;\n  @Input() parentComponent: Component;\n  @Input() isOddRow = false;\n\n  getClass(): string {\n    let cssClass = 'MappingSelectionSection';\n    if (this.selected) {\n      cssClass += ' SelectedMappingSelectionSection';\n    }\n    if (this.isOddRow) {\n      cssClass += ' odd';\n    }\n    return cssClass;\n  }\n\n  getSourceTargetLabelText(isSource: boolean, mapping: MappingModel): string {\n    if (isSource) {\n      return (mapping.sourceFields.length > 0) ? 'Sources' : 'Source';\n    }\n    return (mapping.targetFields.length > 0) ? 'Targets' : 'Target';\n  }\n\n  getFormattedOutputPath(path: string, nameOnly: boolean) {\n    if (path == null) {\n      return '';\n    }\n    path = path.replace('.', '/');\n    const index: number = path.lastIndexOf('/');\n    const fieldName: string = (index === -1) ? path : path.substr(path.lastIndexOf('/') + 1);\n    path = (index === -1) ? '' : path.substr(0, path.lastIndexOf('/') + 1);\n    return nameOnly ? fieldName : path;\n  }\n\n  handleMouseClick(event: MouseEvent) {\n    this.selectedCallback(this);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ outputNumber + 1 }}\n  \n  \n    \n      \n        {{ getSourceTargetLabelText(true, mapping) }}\n        \n          \n            \n              \n              {{ getFormattedOutputPath(sourceField.field.path, false) }}\n            \n            {{ getFormattedOutputPath(sourceField.field.path, true) }}\n            \n          \n        \n      \n      \n        {{ getSourceTargetLabelText(false, mapping) }}\n        \n          \n            \n              \n              {{ getFormattedOutputPath(targetField.field.path, false) }}\n            \n            {{ getFormattedOutputPath(targetField.field.path, true) }}\n            \n          \n        \n      \n    \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ outputNumber + 1 }}                      {{ getSourceTargetLabelText(true, mapping) }}                                                          {{ getFormattedOutputPath(sourceField.field.path, false) }}                        {{ getFormattedOutputPath(sourceField.field.path, true) }}                                                  {{ getSourceTargetLabelText(false, mapping) }}                                                          {{ getFormattedOutputPath(targetField.field.path, false) }}                        {{ getFormattedOutputPath(targetField.field.path, true) }}                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingSelectionSectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MappingUtil.html":{"url":"classes/MappingUtil.html","title":"class - MappingUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MappingUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts\n        \n\n            \n                Description\n            \n            \n                Static routines for handling mappings.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getDocById\n                            \n                            \n                                    Private\n                                    Static\n                                isMappingStale\n                            \n                            \n                                    Static\n                                removeStaleMappings\n                            \n                            \n                                    Static\n                                updateDocumentNamespacesFromMappings\n                            \n                            \n                                    Static\n                                updateMappedFieldsFromDocuments\n                            \n                            \n                                    Static\n                                updateMappingsFromDocuments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getDocById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDocById(documentId: string, docs: DocumentDefinition[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:223\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    documentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docs\n                                    \n                                                DocumentDefinition[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DocumentDefinition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            isMappingStale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMappingStale(mapping: MappingModel, sourceFieldPaths: string[], targetSourcePaths: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sourceFieldPaths\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetSourcePaths\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            removeStaleMappings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeStaleMappings(cfg: ConfigModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:160\n                \n            \n\n\n            \n                \n                    Check all mappings in the current context and remove if it refers to un-existing fields.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ConfigModel\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateDocumentNamespacesFromMappings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDocumentNamespacesFromMappings(cfg: ConfigModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateMappedFieldsFromDocuments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMappedFieldsFromDocuments(mapping: MappingModel, cfg: ConfigModel, docMap: any, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docMap\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateMappingsFromDocuments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMappingsFromDocuments(cfg: ConfigModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PaddingField, DocumentDefinition } from '../models/document-definition.model';\nimport { MappingModel, MappedField } from '../models/mapping.model';\nimport { ConfigModel } from '../models/config.model';\nimport { Field } from '../models/field.model';\nimport { Multiplicity } from '../models/field-action.model';\n\n/**\n * Static routines for handling mappings.\n */\nexport class MappingUtil {\n\n  static updateMappingsFromDocuments(cfg: ConfigModel): void {\n    const sourceDocMap = cfg.getDocUriMap(cfg, true);\n    const targetDocMap = cfg.getDocUriMap(cfg, false);\n\n    for (const mapping of cfg.mappings.mappings) {\n      MappingUtil.updateMappedFieldsFromDocuments(mapping, cfg, sourceDocMap, true);\n      MappingUtil.updateMappedFieldsFromDocuments(mapping, cfg, targetDocMap, false);\n    }\n    for (const doc of cfg.getAllDocs()) {\n      if (doc.id == null) {\n        doc.id = 'DOC.' + doc.name + '.' + Math.floor((Math.random() * 1000000) + 1).toString();\n      }\n    }\n  }\n\n  static updateMappedFieldsFromDocuments(mapping: MappingModel, cfg: ConfigModel, docMap: any, isSource: boolean): void {\n    let mappedFields: MappedField[] = mapping.getMappedFields(isSource);\n    let mappedFieldIndex = -1;\n\n    for (const mappedField of mappedFields) {\n      let doc: DocumentDefinition = null;\n      mappedFieldIndex += 1;\n\n      if (mappedField.parsedData.fieldIsProperty) {\n        doc = cfg.propertyDoc;\n      } else if (mappedField.parsedData.fieldIsConstant) {\n        doc = cfg.constantDoc;\n      } else {\n        if (docMap === null) {\n          docMap = cfg.getDocUriMap(cfg, isSource);\n        }\n        doc = docMap[mappedField.parsedData.parsedDocURI] as DocumentDefinition;\n        if (doc == null) {\n          if (mappedField.parsedData.parsedName != null) {\n            cfg.errorService.error('Could not find document for mapped field \\'' + mappedField.parsedData.parsedName +\n              '\\' at URI ' + mappedField.parsedData.parsedDocURI, null);\n          }\n          continue;\n        }\n\n        if (mappedField.parsedData.parsedDocID == null) {\n          cfg.errorService.error('Could not find doc ID for mapped field ' + mappedField.parsedData.parsedName, null);\n          continue;\n        }\n        doc.id = mappedField.parsedData.parsedDocID;\n      }\n      mappedField.field = null;\n      if (!mappedField.parsedData.userCreated) {\n        mappedField.field = doc.getField(mappedField.parsedData.parsedPath);\n      }\n      if (mappedField.field == null) {\n        if (mappedField.parsedData.fieldIsConstant || mappedField.parsedData.fieldIsProperty) {\n          const constantField: Field = new Field();\n          constantField.value = mappedField.parsedData.parsedValue;\n          constantField.type = mappedField.parsedData.parsedValueType;\n          constantField.displayName = constantField.value;\n          constantField.name = constantField.value;\n          constantField.path = constantField.value;\n          constantField.userCreated = true;\n          mappedField.field = constantField;\n          doc.addField(constantField);\n        } else if (mappedField.parsedData.userCreated || mappedField.parsedData.parsedPath) {\n          const path: string = mappedField.parsedData.parsedPath;\n\n          mappedField.field = new Field();\n          mappedField.field.serviceObject.jsonType = 'io.atlasmap.xml.v2.XmlField';\n          mappedField.field.path = path;\n          mappedField.field.type = mappedField.parsedData.parsedValueType;\n          mappedField.field.userCreated = true;\n\n          const lastSeparator: number = path.lastIndexOf('/');\n\n          const parentPath: string = (lastSeparator > 0) ? path.substring(0, lastSeparator) : null;\n          let fieldName: string = (lastSeparator === -1) ? path : path.substring(lastSeparator + 1);\n          let namespaceAlias: string = null;\n          if (fieldName.indexOf(':') !== -1) {\n            namespaceAlias = fieldName.split(':')[0];\n            fieldName = fieldName.split(':')[1];\n          }\n\n          mappedField.field.name = fieldName;\n          mappedField.field.displayName = fieldName;\n          mappedField.field.isAttribute = (fieldName.indexOf('@') !== -1);\n          mappedField.field.namespaceAlias = namespaceAlias;\n\n          if (parentPath != null) {\n            mappedField.field.parentField = doc.getField(parentPath);\n          }\n\n          doc.addField(mappedField.field);\n        } else {\n          cfg.errorService.error('Could not find field from document for mapped field \\'' + mappedField.parsedData.parsedName + '\\'',\n            { 'mappedField': mappedField, 'doc': doc });\n          return;\n        }\n      }\n\n      // Process field actions.\n      mappedField.actions = [];\n      if (mappedField.parsedData.parsedActions.length > 0) {\n\n        for (const action of mappedField.parsedData.parsedActions) {\n          let actionDefinition = null;\n          if (action.name === 'CustomAction') {\n            actionDefinition = cfg.fieldActionService.getActionDefinitionForName(action.argumentValues[0].value, Multiplicity.ONE_TO_ONE);\n          } else {\n            actionDefinition = cfg.fieldActionService.getActionDefinitionForName(action.name, Multiplicity.ONE_TO_ONE);\n          }\n          if (actionDefinition == null) {\n            cfg.errorService.error('Could not find field action definition for action \\'' + action.name + '\\'', null);\n            continue;\n          }\n          actionDefinition.populateFieldAction(action);\n          mappedField.actions.push(action);\n        }\n      }\n\n      const zeroBasedIndex = +mappedField.parsedData.parsedIndex;\n      mappedFields = mapping.getMappedFields(isSource);\n      if (zeroBasedIndex \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalErrorWindowComponent.html":{"url":"components/ModalErrorWindowComponent.html","title":"component - ModalErrorWindowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalErrorWindowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-error-window\n            \n\n\n\n\n            \n                templateUrl\n                ./modal-error-window.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                cfg\n                            \n                            \n                                    Private\n                                componentLoaded\n                            \n                            \n                                confirmButtonDisabled\n                            \n                            \n                                    Public\n                                detector\n                            \n                            \n                                fade\n                            \n                            \n                                message\n                            \n                            \n                                myTarget\n                            \n                            \n                                    Private\n                                myTargetChangesSubscription\n                            \n                            \n                                nestedComponent\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                dismissAll\n                            \n                            \n                                getErrors\n                            \n                            \n                                getWarnings\n                            \n                            \n                                handleAlertClick\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                            \n                                show\n                            \n                            \n                                somethingToShow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelButtonHandler\n                            \n                            \n                                headerText\n                            \n                            \n                                modalErrorWindow\n                            \n                            \n                                nestedComponentInitializedCallback\n                            \n                            \n                                nestedComponentType\n                            \n                            \n                                okButtonHandler\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, detector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cancelButtonHandler\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        headerText\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalErrorWindow\n                    \n                \n                \n                    \n                        Type :         ModalErrorWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nestedComponentInitializedCallback\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nestedComponentType\n                    \n                \n                \n                    \n                        Type :     Type\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        okButtonHandler\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dismissAll\n                        \n                        \n                    \n                \n            \n            \n                \ndismissAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWarnings\n                        \n                        \n                    \n                \n            \n            \n                \ngetWarnings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleAlertClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleAlertClick(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            somethingToShow\n                        \n                        \n                    \n                \n            \n            \n                \nsomethingToShow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Dismiss All'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            componentLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmButtonDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            detector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fade\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('dyn_target', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            myTargetChangesSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nestedComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalErrorWindowValidator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component, Input, ViewChildren, QueryList, OnDestroy, OnInit,\n  ViewContainerRef, Type, ComponentFactoryResolver, AfterViewInit, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../models/config.model';\nimport { Subscription } from 'rxjs';\nimport { ErrorInfo, ErrorLevel } from '../models/error.model';\n\nexport interface ModalErrorWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'modal-error-window',\n  templateUrl: './modal-error-window.component.html',\n})\n\nexport class ModalErrorWindowComponent implements OnInit {\n  @Input() headerText = '';\n  @Input() nestedComponentType: Type;\n  @Input() nestedComponentInitializedCallback: Function;\n  @Input() okButtonHandler: Function;\n  @Input() cancelButtonHandler: Function;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  cfg: ConfigModel = null;\n  message: string = null;\n  nestedComponent: ModalErrorWindowValidator;\n  confirmButtonDisabled = false;\n  buttonText = 'Dismiss All';\n  visible = false;\n  fade = false;\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  private componentLoaded = false;\n  private myTargetChangesSubscription: Subscription;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, public detector: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.cfg = ConfigModel.getConfig();\n  }\n\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.visible = false;\n    }, 300);\n  }\n\n  somethingToShow(): boolean {\n    return (this.cfg.errors.length > 0);\n  }\n\n  show(): void {\n    this.headerText = 'Errors and Warnings - Current Active Mapping';\n    this.message = '';\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.message = 'Hello!';\n    this.headerText = '';\n    this.componentLoaded = false;\n    this.okButtonHandler = null;\n    this.cancelButtonHandler = null;\n  }\n\n  getErrors(): ErrorInfo[] {\n    return this.cfg.errors.filter(e => e.level >= ErrorLevel.ERROR);\n  }\n\n  getWarnings(): ErrorInfo[] {\n    return this.cfg.errors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  handleAlertClick(event: any) {\n    const errorIdentifier = event.target.attributes.getNamedItem('errorIdentifier');\n    if (errorIdentifier && errorIdentifier.value) {\n      if (this.cfg.mappings.activeMapping) {\n        this.cfg.mappings.activeMapping.removeValidationError(errorIdentifier.value);\n      }\n      this.cfg.errorService.removeError(errorIdentifier.value);\n    }\n    if (this.getErrors().length === 0 && this.getWarnings().length === 0) {\n      this.close();\n    }\n  }\n\n  dismissAll(): void {\n    for (const e of this.getErrors()) {\n      if (this.cfg.mappings && this.cfg.mappings.activeMapping) {\n        this.cfg.mappings.activeMapping.removeValidationError(e.identifier);\n      }\n      this.cfg.errorService.removeError(e.identifier);\n    }\n    for (const w of this.getWarnings()) {\n      if (this.cfg.mappings && this.cfg.mappings.activeMapping) {\n        this.cfg.mappings.activeMapping.removeValidationError(w.identifier);\n      }\n      this.cfg.errorService.removeError(w.identifier);\n    }\n    this.close();\n  }\n}\n\n    \n\n    \n        \n   -->\n  \n    \n      \n        \n          \n            \n              \n            \n          \n          {{ headerText }}\n          \n             {{ getWarnings().length }}\n             | \n             {{ getErrors().length }}\n          \n        \n        \n        \n        \n          \n              \n              \n                \n              \n              \n              {{ w.message }}\n            \n          \n            \n              \n                \n              \n              \n              {{ e.message }}\n            \n\n          \n          \n        \n        \n          \n            {{ buttonText }} \n            Cancel -->\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->                                                                                        {{ headerText }}                       {{ getWarnings().length }}             |              {{ getErrors().length }}                                                                                                                                          {{ w.message }}                                                                                                          {{ e.message }}                                                                      {{ buttonText }}             Cancel -->                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalErrorWindowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalErrorWindowValidator.html":{"url":"interfaces/ModalErrorWindowValidator.html","title":"interface - ModalErrorWindowValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModalErrorWindowValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getInitialFocusElement\n                                \n                                \n                                    isDataValid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Component, Input, ViewChildren, QueryList, OnDestroy, OnInit,\n  ViewContainerRef, Type, ComponentFactoryResolver, AfterViewInit, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../models/config.model';\nimport { Subscription } from 'rxjs';\nimport { ErrorInfo, ErrorLevel } from '../models/error.model';\n\nexport interface ModalErrorWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'modal-error-window',\n  templateUrl: './modal-error-window.component.html',\n})\n\nexport class ModalErrorWindowComponent implements OnInit {\n  @Input() headerText = '';\n  @Input() nestedComponentType: Type;\n  @Input() nestedComponentInitializedCallback: Function;\n  @Input() okButtonHandler: Function;\n  @Input() cancelButtonHandler: Function;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  cfg: ConfigModel = null;\n  message: string = null;\n  nestedComponent: ModalErrorWindowValidator;\n  confirmButtonDisabled = false;\n  buttonText = 'Dismiss All';\n  visible = false;\n  fade = false;\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  private componentLoaded = false;\n  private myTargetChangesSubscription: Subscription;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, public detector: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.cfg = ConfigModel.getConfig();\n  }\n\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.visible = false;\n    }, 300);\n  }\n\n  somethingToShow(): boolean {\n    return (this.cfg.errors.length > 0);\n  }\n\n  show(): void {\n    this.headerText = 'Errors and Warnings - Current Active Mapping';\n    this.message = '';\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.message = 'Hello!';\n    this.headerText = '';\n    this.componentLoaded = false;\n    this.okButtonHandler = null;\n    this.cancelButtonHandler = null;\n  }\n\n  getErrors(): ErrorInfo[] {\n    return this.cfg.errors.filter(e => e.level >= ErrorLevel.ERROR);\n  }\n\n  getWarnings(): ErrorInfo[] {\n    return this.cfg.errors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  handleAlertClick(event: any) {\n    const errorIdentifier = event.target.attributes.getNamedItem('errorIdentifier');\n    if (errorIdentifier && errorIdentifier.value) {\n      if (this.cfg.mappings.activeMapping) {\n        this.cfg.mappings.activeMapping.removeValidationError(errorIdentifier.value);\n      }\n      this.cfg.errorService.removeError(errorIdentifier.value);\n    }\n    if (this.getErrors().length === 0 && this.getWarnings().length === 0) {\n      this.close();\n    }\n  }\n\n  dismissAll(): void {\n    for (const e of this.getErrors()) {\n      if (this.cfg.mappings && this.cfg.mappings.activeMapping) {\n        this.cfg.mappings.activeMapping.removeValidationError(e.identifier);\n      }\n      this.cfg.errorService.removeError(e.identifier);\n    }\n    for (const w of this.getWarnings()) {\n      if (this.cfg.mappings && this.cfg.mappings.activeMapping) {\n        this.cfg.mappings.activeMapping.removeValidationError(w.identifier);\n      }\n      this.cfg.errorService.removeError(w.identifier);\n    }\n    this.close();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalWindowComponent.html":{"url":"components/ModalWindowComponent.html","title":"component - ModalWindowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalWindowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-window\n            \n\n\n\n\n            \n                templateUrl\n                ./modal-window.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                componentLoaded\n                            \n                            \n                                confirmButtonDisabled\n                            \n                            \n                                confirmButtonText\n                            \n                            \n                                    Public\n                                detector\n                            \n                            \n                                fade\n                            \n                            \n                                message\n                            \n                            \n                                myTarget\n                            \n                            \n                                    Private\n                                myTargetChangesSubscription\n                            \n                            \n                                nestedComponent\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buttonClicked\n                            \n                            \n                                close\n                            \n                            \n                                closeClicked\n                            \n                            \n                                loadComponent\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                reset\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelButtonHandler\n                            \n                            \n                                cfg\n                            \n                            \n                                headerText\n                            \n                            \n                                modalErrorWindow\n                            \n                            \n                                nestedComponentInitializedCallback\n                            \n                            \n                                nestedComponentType\n                            \n                            \n                                okButtonHandler\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, detector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cancelButtonHandler\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        headerText\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalErrorWindow\n                    \n                \n                \n                    \n                        Type :         ModalErrorWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nestedComponentInitializedCallback\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nestedComponentType\n                    \n                \n                \n                    \n                        Type :     Type\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        okButtonHandler\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:58\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buttonClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buttonClicked(okClicked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    okClicked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeClicked\n                        \n                        \n                    \n                \n            \n            \n                \ncloseClicked(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadComponent\n                        \n                        \n                    \n                \n            \n            \n                \nloadComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            componentLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmButtonDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmButtonText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'OK'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            detector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fade\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('dyn_target', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            myTargetChangesSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nestedComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowValidator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:67\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component, Input, ViewChildren, QueryList, OnDestroy,\n  ViewContainerRef, Type, ComponentFactoryResolver, AfterViewInit, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../models/config.model';\nimport { Subscription } from 'rxjs';\nimport { ModalErrorWindowComponent } from './modal-error-window.component';\n\n// source: http://www.w3schools.com/howto/howto_css_modals.asp\n\nexport interface ModalWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'empty-modal-body',\n  template: '',\n})\n\nexport class EmptyModalBodyComponent implements ModalWindowValidator {\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n}\n\n@Component({\n  selector: 'modal-window',\n  templateUrl: './modal-window.component.html',\n})\n\nexport class ModalWindowComponent implements AfterViewInit, OnDestroy {\n  @Input() headerText = '';\n  @Input() nestedComponentType: Type;\n  @Input() nestedComponentInitializedCallback: Function;\n  @Input() okButtonHandler: Function;\n  @Input() cancelButtonHandler: Function;\n  @Input() cfg: ConfigModel;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  message: string = null;\n  nestedComponent: ModalWindowValidator;\n  confirmButtonDisabled = false;\n  confirmButtonText = 'OK';\n  visible = false;\n  fade = false;\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  private componentLoaded = false;\n  private myTargetChangesSubscription: Subscription;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, public detector: ChangeDetectorRef) { }\n\n  ngAfterViewInit() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n\n    // from: http://stackoverflow.com/questions/40811809/add-component-dynamically-inside-an-ngif\n    this.myTargetChangesSubscription = this.myTarget.changes.subscribe(changes => {\n      setTimeout(() => {\n        if (!this.componentLoaded && this.visible && this.myTarget && (this.myTarget.toArray().length)) {\n          this.loadComponent();\n        }\n        setTimeout(() => {\n          this.detector.detectChanges();\n        }, 10);\n      }, 10);\n    });\n  }\n\n  ngOnDestroy() {\n    this.myTargetChangesSubscription.unsubscribe();\n  }\n\n  loadComponent(): void {\n    const viewContainerRef: ViewContainerRef = this.myTarget.toArray()[0];\n    viewContainerRef.clear();\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.nestedComponentType);\n    this.nestedComponent = viewContainerRef.createComponent(componentFactory).instance as ModalWindowValidator;\n    if (this.nestedComponentInitializedCallback != null) {\n      this.nestedComponentInitializedCallback(this);\n    }\n    const initialFocusElement = this.nestedComponent.getInitialFocusElement();\n    if (initialFocusElement) {\n      initialFocusElement.nativeElement.focus();\n    }\n  }\n\n  closeClicked(event: MouseEvent): void { this.buttonClicked(false); }\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.visible = false;\n    }, 300);\n  }\n  show(): void {\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.nestedComponentInitializedCallback = null;\n    this.confirmButtonDisabled = false;\n    this.confirmButtonText = 'OK';\n    this.message = '';\n    this.headerText = '';\n    this.componentLoaded = false;\n    this.nestedComponentType = EmptyModalBodyComponent;\n    this.okButtonHandler = null;\n    this.cancelButtonHandler = null;\n  }\n\n  private buttonClicked(okClicked: boolean): void {\n    if (okClicked) {\n      if (this.nestedComponent != null) {\n        this.cfg.errorService.clearValidationErrors();\n        if (!(this.nestedComponent.isDataValid())) {\n          return;\n        }\n      }\n      if (this.okButtonHandler) {\n        this.okButtonHandler(this);\n      }\n    } else { // cancel clicked\n      if (this.cancelButtonHandler) {\n        this.cancelButtonHandler(this);\n      }\n    }\n    this.close();\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          \n            \n              \n            \n          \n          {{ headerText }}\n        \n        \n          \n        \n        \n          {{ message }}\n          \n        \n        \n          \n            {{ confirmButtonText }} \n            Cancel\n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                          {{ headerText }}                                                    {{ message }}                                                {{ confirmButtonText }}             Cancel                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalWindowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalWindowValidator.html":{"url":"interfaces/ModalWindowValidator.html","title":"interface - ModalWindowValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModalWindowValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getInitialFocusElement\n                                \n                                \n                                    isDataValid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Component, Input, ViewChildren, QueryList, OnDestroy,\n  ViewContainerRef, Type, ComponentFactoryResolver, AfterViewInit, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../models/config.model';\nimport { Subscription } from 'rxjs';\nimport { ModalErrorWindowComponent } from './modal-error-window.component';\n\n// source: http://www.w3schools.com/howto/howto_css_modals.asp\n\nexport interface ModalWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'empty-modal-body',\n  template: '',\n})\n\nexport class EmptyModalBodyComponent implements ModalWindowValidator {\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n}\n\n@Component({\n  selector: 'modal-window',\n  templateUrl: './modal-window.component.html',\n})\n\nexport class ModalWindowComponent implements AfterViewInit, OnDestroy {\n  @Input() headerText = '';\n  @Input() nestedComponentType: Type;\n  @Input() nestedComponentInitializedCallback: Function;\n  @Input() okButtonHandler: Function;\n  @Input() cancelButtonHandler: Function;\n  @Input() cfg: ConfigModel;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  message: string = null;\n  nestedComponent: ModalWindowValidator;\n  confirmButtonDisabled = false;\n  confirmButtonText = 'OK';\n  visible = false;\n  fade = false;\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  private componentLoaded = false;\n  private myTargetChangesSubscription: Subscription;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, public detector: ChangeDetectorRef) { }\n\n  ngAfterViewInit() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n\n    // from: http://stackoverflow.com/questions/40811809/add-component-dynamically-inside-an-ngif\n    this.myTargetChangesSubscription = this.myTarget.changes.subscribe(changes => {\n      setTimeout(() => {\n        if (!this.componentLoaded && this.visible && this.myTarget && (this.myTarget.toArray().length)) {\n          this.loadComponent();\n        }\n        setTimeout(() => {\n          this.detector.detectChanges();\n        }, 10);\n      }, 10);\n    });\n  }\n\n  ngOnDestroy() {\n    this.myTargetChangesSubscription.unsubscribe();\n  }\n\n  loadComponent(): void {\n    const viewContainerRef: ViewContainerRef = this.myTarget.toArray()[0];\n    viewContainerRef.clear();\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.nestedComponentType);\n    this.nestedComponent = viewContainerRef.createComponent(componentFactory).instance as ModalWindowValidator;\n    if (this.nestedComponentInitializedCallback != null) {\n      this.nestedComponentInitializedCallback(this);\n    }\n    const initialFocusElement = this.nestedComponent.getInitialFocusElement();\n    if (initialFocusElement) {\n      initialFocusElement.nativeElement.focus();\n    }\n  }\n\n  closeClicked(event: MouseEvent): void { this.buttonClicked(false); }\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.visible = false;\n    }, 300);\n  }\n  show(): void {\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.nestedComponentInitializedCallback = null;\n    this.confirmButtonDisabled = false;\n    this.confirmButtonText = 'OK';\n    this.message = '';\n    this.headerText = '';\n    this.componentLoaded = false;\n    this.nestedComponentType = EmptyModalBodyComponent;\n    this.okButtonHandler = null;\n    this.cancelButtonHandler = null;\n  }\n\n  private buttonClicked(okClicked: boolean): void {\n    if (okClicked) {\n      if (this.nestedComponent != null) {\n        this.cfg.errorService.clearValidationErrors();\n        if (!(this.nestedComponent.isDataValid())) {\n          return;\n        }\n      }\n      if (this.okButtonHandler) {\n        this.okButtonHandler(this);\n      }\n    } else { // cancel clicked\n      if (this.cancelButtonHandler) {\n        this.cancelButtonHandler(this);\n      }\n    }\n    this.close();\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NamespaceEditComponent.html":{"url":"components/NamespaceEditComponent.html","title":"component - NamespaceEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NamespaceEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/namespace-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                namespace-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./namespace-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                namespace\n                            \n                            \n                                targetEnabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                targetToggled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-edit.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(namespace: NamespaceModel, namespaces: NamespaceModel[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-edit.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    namespaces\n                                    \n                                                NamespaceModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-edit.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            targetToggled\n                        \n                        \n                    \n                \n            \n            \n                \ntargetToggled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-edit.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('namespace')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-edit.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel\n\n                        \n                    \n                    \n                        \n                            Default value : new NamespaceModel()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-edit.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-edit.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { ConfigModel } from '../models/config.model';\nimport { NamespaceModel } from '../models/document-definition.model';\nimport { ModalWindowValidator } from './modal-window.component';\n\n@Component({\n  selector: 'namespace-edit',\n  templateUrl: './namespace-edit.component.html',\n})\n\nexport class NamespaceEditComponent implements ModalWindowValidator {\n  namespace: NamespaceModel = new NamespaceModel();\n  targetEnabled = true;\n  @ViewChild('namespace') private focusEl: ElementRef;\n\n  initialize(namespace: NamespaceModel, namespaces: NamespaceModel[]): void {\n    this.namespace = (namespace == null) ? new NamespaceModel() : namespace.copy();\n    if (!namespace.isTarget) {\n      for (const ns of namespaces) {\n        if (ns.isTarget) {\n          this.targetEnabled = false;\n          break;\n        }\n      }\n    }\n  }\n\n  targetToggled(): void {\n    this.namespace.isTarget = !this.namespace.isTarget;\n    this.namespace.alias = this.namespace.isTarget ? 'tns' : '';\n  }\n\n  isDataValid(): boolean {\n    const configModel: ConfigModel = ConfigModel.getConfig();\n    let dataIsValid: boolean = configModel.isRequiredFieldValid(this.namespace.alias, 'Alias');\n    dataIsValid = configModel.isRequiredFieldValid(this.namespace.uri, 'URI') && dataIsValid;\n    return dataIsValid;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n}\n\n    \n\n    \n        \n  \n    Alias\n    \n  \n  \n    URI\n    \n  \n  \n    Location URI\n    \n  \n  \n    Type\n    \n    Target Namespace\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Alias            URI            Location URI            Type        Target Namespace      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'NamespaceEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NamespaceListComponent.html":{"url":"components/NamespaceListComponent.html","title":"component - NamespaceListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NamespaceListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                namespace-list\n            \n\n\n\n\n            \n                templateUrl\n                ./namespace-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                searchFilter\n                            \n                            \n                                searchMode\n                            \n                            \n                                    Private\n                                searchResults\n                            \n                            \n                                    Private\n                                selectedNamespace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEditNamespace\n                            \n                            \n                                getItemsCSSClass\n                            \n                            \n                                getNamespaceCSSClass\n                            \n                            \n                                getNamespaces\n                            \n                            \n                                getRowsCSSClass\n                            \n                            \n                                getRowTitleCSSClass\n                            \n                            \n                                getSearchIconCSSClass\n                            \n                            \n                                namespaceMatchesSearch\n                            \n                            \n                                removeNamespace\n                            \n                            \n                                    Private\n                                search\n                            \n                            \n                                searchResultsVisible\n                            \n                            \n                                selectNamespace\n                            \n                            \n                                toggleSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEditNamespace\n                        \n                        \n                    \n                \n            \n            \n                \naddEditNamespace(ns: NamespaceModel, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ns\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItemsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetItemsCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNamespaceCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetNamespaceCSSClass(namespace: NamespaceModel, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNamespaces\n                        \n                        \n                    \n                \n            \n            \n                \ngetNamespaces()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         NamespaceModel[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRowsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetRowsCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRowTitleCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetRowTitleCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSearchIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetSearchIconCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            namespaceMatchesSearch\n                        \n                        \n                    \n                \n            \n            \n                \nnamespaceMatchesSearch(ns: NamespaceModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ns\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeNamespace\n                        \n                        \n                    \n                \n            \n            \n                \nremoveNamespace(ns: NamespaceModel, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ns\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(searchFilter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchFilter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchResultsVisible\n                        \n                        \n                    \n                \n            \n            \n                \nsearchResultsVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNamespace\n                        \n                        \n                    \n                \n            \n            \n                \nselectNamespace(ns: NamespaceModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ns\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSearch\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ConfigModel } from '../models/config.model';\nimport { NamespaceModel } from '../models/document-definition.model';\nimport { NamespaceEditComponent } from './namespace-edit.component';\nimport { ModalWindowComponent } from './modal-window.component';\nimport { DataMapperUtil } from '../common/data-mapper-util';\n\n@Component({\n  selector: 'namespace-list',\n  templateUrl: './namespace-list.component.html',\n})\n\nexport class NamespaceListComponent {\n  @Input() cfg: ConfigModel;\n  @Input() modalWindow: ModalWindowComponent;\n\n  searchMode = false;\n  private searchFilter = '';\n  private selectedNamespace: NamespaceModel = null;\n  private searchResults: NamespaceModel[] = [];\n\n  getNamespaceCSSClass(namespace: NamespaceModel, index: number): string {\n    let cssClass = 'item itemRow ';\n    cssClass += (index % 2 === 1) ? ' even' : '';\n    if (namespace === this.selectedNamespace) {\n      cssClass += ' active';\n    }\n    return cssClass;\n  }\n\n  searchResultsVisible(): boolean {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      return false;\n    }\n    return (this.searchResults.length === 0);\n  }\n\n  selectNamespace(ns: NamespaceModel): void {\n    this.selectedNamespace = (this.selectedNamespace === ns) ? null : ns;\n  }\n\n  getItemsCSSClass(): string {\n    return 'items namespaces' + (this.searchMode ? ' searchShown' : '');\n  }\n\n  getRowTitleCSSClass(): string {\n    return this.searchMode ? 'rowTitles searchShown' : 'rowTitles';\n  }\n\n  getRowsCSSClass(): string {\n    return this.searchMode ? 'rows searchShown' : 'rows';\n  }\n\n  getNamespaces(): NamespaceModel[] {\n    return this.searchMode ? this.searchResults : this.cfg.getFirstXmlDoc(false).namespaces;\n  }\n\n  addEditNamespace(ns: NamespaceModel, event: any): void {\n    event.stopPropagation();\n    const isEditMode = (ns != null);\n    if (!isEditMode) {\n      ns = new NamespaceModel();\n      ns.createdByUser = true;\n    }\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Save';\n    this.modalWindow.headerText = (ns == null) ? 'Add Namespace' : 'Edit Namespace';\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      const namespaceComponent: NamespaceEditComponent = mw.nestedComponent as NamespaceEditComponent;\n      namespaceComponent.initialize(ns, this.cfg.getFirstXmlDoc(false).namespaces);\n    };\n    this.modalWindow.nestedComponentType = NamespaceEditComponent;\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      const namespaceComponent: NamespaceEditComponent = mw.nestedComponent as NamespaceEditComponent;\n      const newNamespace: NamespaceModel = namespaceComponent.namespace;\n      if (isEditMode) {\n        ns.copyFrom(newNamespace);\n      } else {\n        this.cfg.getFirstXmlDoc(false).namespaces.push(newNamespace);\n      }\n      this.search(this.searchFilter);\n      this.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  toggleSearch(): void {\n    this.searchMode = !this.searchMode;\n    this.search(this.searchFilter);\n  }\n\n  getSearchIconCSSClass(): string {\n    const cssClass = 'fa fa-search searchBoxIcon link';\n    return this.searchMode ? (cssClass + ' selectedIcon') : cssClass;\n  }\n\n  namespaceMatchesSearch(ns: NamespaceModel): boolean {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      return true;\n    }\n    const filter: string = this.searchFilter.toLowerCase();\n    if (ns.isTarget && ('tns'.includes(filter) || 'target'.includes(filter))) {\n      return true;\n    }\n    if (ns.alias != null && ns.alias.toLowerCase().includes(filter)) {\n      return true;\n    }\n    if (ns.uri != null && ns.uri.toLowerCase().includes(filter)) {\n      return true;\n    }\n    if (ns.locationUri != null && ns.locationUri.toLowerCase().includes(filter)) {\n      return true;\n    }\n    return false;\n  }\n\n  removeNamespace(ns: NamespaceModel, event: any): void {\n    event.stopPropagation();\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Remove';\n    this.modalWindow.headerText = 'Remove Namespace?';\n    this.modalWindow.message = 'Are you sure you want to remove \\'' + ns.alias + '\\' ?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      DataMapperUtil.removeItemFromArray(ns, this.cfg.getFirstXmlDoc(false).namespaces);\n      this.selectedNamespace = null;\n      this.search(this.searchFilter);\n    };\n    this.modalWindow.show();\n  }\n\n  private search(searchFilter: string): void {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      this.searchResults = [].concat(this.cfg.getFirstXmlDoc(false).namespaces);\n      return;\n    }\n\n    this.searchFilter = searchFilter;\n    this.searchResults = [];\n    for (const ns of this.cfg.getFirstXmlDoc(false).namespaces) {\n      if (this.namespaceMatchesSearch(ns)) {\n        this.searchResults.push(ns);\n      } else if (this.selectedNamespace != null) {\n        this.selectNamespace = null;\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          Namespaces for {{ cfg.getFirstXmlDoc(false).name }}\n        \n        \n        \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          Alias\n          Uri\n          Location URI\n          \n        \n        \n      \n    \n    \n      \n        \n          {{ namespace.isTarget ? 'Target (tns)' : namespace.alias }}\n          {{ namespace.uri }}\n          {{ namespace.locationUri }}\n          \n            \n            \n          \n          \n        \n      \n      \n        No search results.\n        \n      \n    \n    {{ getNamespaces().length }} namespaces\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Namespaces for {{ cfg.getFirstXmlDoc(false).name }}                                                                                                            Alias          Uri          Location URI                                                                {{ namespace.isTarget ? \\'Target (tns)\\' : namespace.alias }}          {{ namespace.uri }}          {{ namespace.locationUri }}                                                                                  No search results.                      {{ getNamespaces().length }} namespaces      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'NamespaceListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NamespaceModel.html":{"url":"classes/NamespaceModel.html","title":"class - NamespaceModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NamespaceModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                createdByUser\n                            \n                            \n                                isTarget\n                            \n                            \n                                locationUri\n                            \n                            \n                                    Private\n                                    Static\n                                unqualifiedNamespace\n                            \n                            \n                                uri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                copyFrom\n                            \n                            \n                                getPrettyLabel\n                            \n                            \n                                    Static\n                                getUnqualifiedNamespace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdByUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locationUri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            unqualifiedNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:27\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         NamespaceModel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyFrom\n                        \n                        \n                    \n                \n            \n            \n                \ncopyFrom(that: NamespaceModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    that\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPrettyLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetPrettyLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getUnqualifiedNamespace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnqualifiedNamespace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         NamespaceModel\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Field } from './field.model';\nimport { DocumentType, InspectionType } from '../common/config.types';\nimport { MappingDefinition } from '../models/mapping-definition.model';\nimport { DataMapperUtil } from '../common/data-mapper-util';\nimport { DocumentInitializationModel } from '../models/config.model';\n\nexport class NamespaceModel {\n  private static unqualifiedNamespace: NamespaceModel = null;\n\n  alias: string = null;\n  uri: string = null;\n  locationUri: string = null;\n  createdByUser = false;\n  isTarget = false;\n\n  static getUnqualifiedNamespace(): NamespaceModel {\n    if (NamespaceModel.unqualifiedNamespace == null) {\n      const ns: NamespaceModel = new NamespaceModel();\n      ns.alias = 'Unqualified';\n      NamespaceModel.unqualifiedNamespace = ns;\n    }\n    return NamespaceModel.unqualifiedNamespace;\n  }\n\n  getPrettyLabel(): string {\n    if (this === NamespaceModel.getUnqualifiedNamespace()) {\n      return this.alias;\n    }\n    return (this.isTarget ? 'Target' : this.alias)\n      + ' [' + (this.uri == null ? 'NO URI' : this.uri) + ']';\n  }\n\n  copy(): NamespaceModel {\n    const copy: NamespaceModel = new NamespaceModel();\n    Object.assign(copy, this);\n    return copy;\n  }\n\n  copyFrom(that: NamespaceModel): void {\n    Object.assign(this, that);\n  }\n}\n\nexport class PaddingField extends Field {\n  constructor(private _isSource: boolean) {\n    super();\n    this.name = '';\n    this.classIdentifier = '';\n    this.type = '';\n    this.displayName = '';\n    this.path = '';\n  }\n\n  isSource(): boolean {\n    return this._isSource;\n  }\n\n}\n\nexport class DocumentDefinition {\n  private static padField: Field = null;\n\n  LEFT_BRACKET = '\\x5b';\n  RIGHT_BRACKET = '\\x5d';\n\n  initModel: DocumentInitializationModel;\n  id: string;\n  _type: DocumentType;\n  name: string;\n  description: string;\n  uri: string;\n  inspectionType: InspectionType;\n  inspectionSource: string;\n  inspectionResult: string;\n  isSource: boolean;\n  isPropertyOrConstant: boolean;\n  selectedRoot: string;\n\n  classPath: string;\n  initialized = false;\n  errorOccurred = false;\n  pathSeparator = '/';\n  fields: Field[] = [];\n  allFields: Field[] = [];\n  terminalFields: Field[] = [];\n  complexFieldsByClassIdentifier: { [key: string]: Field; } = {};\n  enumFieldsByClassIdentifier: { [key: string]: Field; } = {};\n  fieldsByPath: { [key: string]: Field; } = {};\n  fieldPaths: string[] = [];\n  showFields = true;\n  visibleInCurrentDocumentSearch = true;\n  namespaces: NamespaceModel[] = [];\n  characterEncoding: string = null;\n  locale: string = null;\n\n  set type(type: DocumentType) {\n    this._type = type;\n    this.isPropertyOrConstant = type === DocumentType.CONSTANT || type === DocumentType.PROPERTY;\n  }\n\n  get type(): DocumentType {\n    return this._type;\n  }\n\n  getComplexField(classIdentifier: string): Field {\n    return this.complexFieldsByClassIdentifier[classIdentifier];\n  }\n\n  getEnumField(classIdentifier: string): Field {\n    return this.enumFieldsByClassIdentifier[classIdentifier];\n  }\n\n  getAllFields(): Field[] {\n    return [].concat(this.allFields);\n  }\n\n  /**\n   * Return true if the specified field name already exists in the specified document definition,\n   * false otherwise.\n   *\n   * @param targetField\n   * @param targetFieldDocDefType\n   */\n  fieldExists(targetField: Field, targetFieldDocDefType: DocumentType): boolean {\n\n    for (const field of this.getAllFields()) {\n      if (field.name === targetField.name && field.docDef.type === targetFieldDocDefType) {\n          return true;\n      }\n    }\n    return false;\n  }\n\n  isFieldsExist(fields: Field[]): boolean {\n    if (fields == null || fields.length === 0) {\n      return true;\n    }\n    const foundFields: Field[] = this.getFields(Field.getFieldPaths(fields));\n    return (foundFields != null) && (fields.length === foundFields.length);\n  }\n\n  getFields(fieldPaths: string[]): Field[] {\n    const fields: Field[] = [];\n    for (const fieldPath of fieldPaths) {\n      const field: Field = this.getField(fieldPath);\n      if (field != null) {\n        fields.push(field);\n      }\n    }\n    return fields;\n  }\n\n  getName(showTypes: boolean): string {\n    let name = this.name;\n    if (showTypes && !this.isPropertyOrConstant) {\n      const type = this.type;\n      if (type) {\n        name += ' (' + type + ')';\n      }\n    }\n    return name;\n  }\n\n  getNamespaceForAlias(alias: string): NamespaceModel {\n    for (const ns of this.namespaces) {\n      if (alias === ns.alias) {\n        return ns;\n      }\n    }\n    return null;\n  }\n\n  getField(fieldPath: string): Field {\n    if (!fieldPath) {\n      return null;\n    }\n    let field: Field = this.fieldsByPath[fieldPath];\n    // if we can't find the field we're looking for, find parent fields and populate their children\n    const pathSeparator: string = this.pathSeparator;\n    let originalPath: string = fieldPath;\n    // strip beginning path separator from path\n    if (originalPath != null && originalPath.indexOf(pathSeparator) === 0) {\n      originalPath = originalPath.substring(1);\n    }\n    if (field == null && (originalPath.indexOf(pathSeparator) !== -1)) {\n      let currentParentPath = '';\n      while (originalPath.indexOf(pathSeparator) !== -1) {\n        const currentPathSection: string = originalPath.substr(0, originalPath.indexOf(pathSeparator));\n        currentParentPath += pathSeparator + currentPathSection;\n        const parentField: Field = this.fieldsByPath[currentParentPath];\n        if (parentField == null) {\n          if (originalPath.indexOf(pathSeparator) !== -1) {\n            originalPath = originalPath.substr(originalPath.indexOf(pathSeparator) + 1);\n            continue;\n          } else {\n            break;\n          }\n          // https://github.com/atlasmap/atlasmap/issues/1128\n          // throw new Error('Could not populate parent field with path \\''\n          //  + currentParentPath + '\\' (for: ' + fieldPath + ')');\n        }\n        this.populateChildren(parentField);\n        if (originalPath.indexOf(pathSeparator) !== -1) {\n          originalPath = originalPath.substr(originalPath.indexOf(pathSeparator) + 1);\n        }\n      }\n      field = this.fieldsByPath[fieldPath];\n    }\n    return field;\n  }\n\n  getTerminalFields(): Field[] {\n    return [].concat(this.terminalFields);\n  }\n\n  initializeFromFields(): void {\n    if (this.type === DocumentType.JAVA) {\n      this.prepareComplexFields();\n    }\n\n    Field.alphabetizeFields(this.fields);\n\n    for (const field of this.fields) {\n      this.populateFieldParentPaths(field, null, 0);\n      this.populateFieldData(field);\n    }\n\n    this.fieldPaths.sort();\n    this.initialized = true;\n  }\n\n  updateField(field: Field, oldPath: string): void {\n    Field.alphabetizeFields(this.fields);\n    if (!field.parentField || this.isPropertyOrConstant) {\n      this.populateFieldParentPaths(field, null, 0);\n    } else {\n      const pathSeparator: string = this.pathSeparator;\n      this.populateFieldParentPaths(field, field.parentField.path + pathSeparator,\n        field.parentField.fieldDepth + 1);\n    }\n    if (oldPath != null && this.fieldsByPath[oldPath] != null) {\n      delete (this.fieldsByPath[oldPath]);\n    }\n    DataMapperUtil.removeItemFromArray(field.path, this.fieldPaths);\n    this.populateFieldData(field);\n    this.fieldPaths.sort();\n  }\n\n  addField(field: Field): void {\n    if (!field.parentField || this.isPropertyOrConstant) {\n      this.fields.push(field);\n      Field.alphabetizeFields(this.fields);\n      this.populateFieldParentPaths(field, null, 0);\n    } else {\n      this.populateChildren(field.parentField);\n      field.parentField.children.push(field);\n      Field.alphabetizeFields(field.parentField.children);\n      const pathSeparator: string = this.pathSeparator;\n      this.populateFieldParentPaths(field, field.parentField.path + pathSeparator,\n        field.parentField.fieldDepth + 1);\n    }\n    this.populateFieldData(field);\n    this.fieldPaths.sort();\n  }\n\n  /**\n   * Return true if the passed field is terminal or children are detected, false otherwise.\n   * @param field - target field\n   */\n  populateChildren(field: Field): boolean {\n\n    // populate complex fields\n    if (field.isTerminal() || (field.children.length > 0)) {\n      return true;\n    }\n\n    let cachedField = this.getComplexField(field.classIdentifier);\n    if (cachedField == null) {\n      return false;\n    }\n\n    // copy cached field children\n    cachedField = cachedField.copy();\n    const pathSeparator: string = this.pathSeparator;\n    for (let childField of cachedField.children) {\n      childField = childField.copy();\n      childField.parentField = field;\n      this.populateFieldParentPaths(childField, field.path + pathSeparator, field.fieldDepth + 1);\n      this.populateFieldData(childField);\n      field.children.push(childField);\n    }\n\n    if (field.children.length > 0) {\n      this.fieldPaths.sort();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Clear all fields in this document.\n   */\n  clearFields(): void {\n    this.initialized = false;\n    this.fields = [];\n    this.allFields = [];\n    this.terminalFields = [];\n    this.fieldPaths = [];\n    this.namespaces = [];\n    this.fieldsByPath = {};\n    this.complexFieldsByClassIdentifier = {};\n    this.enumFieldsByClassIdentifier = {};\n  }\n\n  /**\n   * Remove the specified field from this document definition.\n   *\n   * @param field\n   */\n  removeField(field: Field): void {\n    if (field == null) {\n      return;\n    }\n    DataMapperUtil.removeItemFromArray(field, this.fields);\n    DataMapperUtil.removeItemFromArray(field, this.allFields);\n    DataMapperUtil.removeItemFromArray(field, this.terminalFields);\n    DataMapperUtil.removeItemFromArray(field.path, this.fieldPaths);\n    delete (this.fieldsByPath[field.path]);\n    if (field.parentField != null) {\n      DataMapperUtil.removeItemFromArray(field, field.parentField.children);\n    }\n  }\n\n  updateFromMappings(mappingDefinition: MappingDefinition): void {\n\n    if (mappingDefinition === null) {\n      return;\n    }\n\n    for (const field of this.allFields) {\n      field.partOfMapping = false;\n      field.hasUnmappedChildren = false;\n      field.partOfTransformation = false;\n    }\n\n    // FIXME: some of this work is happening N times for N source/target docs, should only happen once.\n    for (const mapping of mappingDefinition.getAllMappings(true)) {\n      const mappingIsActive: boolean = (mapping === mappingDefinition.activeMapping);\n\n      for (const field of mapping.getAllFields()) {\n        let parentField = field;\n        const partOfTransformation = mapping.getMappedFieldForField(field).actions.length > 0;\n        while (parentField != null) {\n          parentField.partOfMapping = true;\n          parentField.partOfTransformation = parentField.partOfTransformation || partOfTransformation;\n          parentField = parentField.parentField;\n        }\n      }\n    }\n    for (const field of this.allFields) {\n      field.hasUnmappedChildren = Field.fieldHasUnmappedChild(field);\n    }\n  }\n\n  private populateFieldParentPaths(field: Field, parentPath: string, depth: number): void {\n    if (parentPath == null) {\n      parentPath = this.pathSeparator;\n    }\n    field.path = parentPath + field.getNameWithNamespace();\n    if (field.isCollection) {\n      field.path += field.isArray ? (this.LEFT_BRACKET + this.RIGHT_BRACKET) : '<>';\n    }\n    if (field.isAttribute) {\n      field.path = parentPath += '@' + field.name;\n    }\n    if (field.serviceObject) {\n      field.serviceObject.path = field.path;\n    }\n    field.fieldDepth = depth;\n    const pathSeparator: string = this.pathSeparator;\n    for (const childField of field.children) {\n      childField.parentField = field;\n      this.populateFieldParentPaths(childField, field.path + pathSeparator, depth + 1);\n    }\n  }\n\n  private populateFieldData(field: Field): void {\n    field.docDef = this;\n    this.fieldPaths.push(field.path);\n    this.allFields.push(field);\n    this.fieldsByPath[field.path] = field;\n    if (field.enumeration) {\n      this.enumFieldsByClassIdentifier[field.classIdentifier] = field;\n    }\n    if (field.isTerminal()) {\n      this.terminalFields.push(field);\n    } else {\n      for (const childField of field.children) {\n        this.populateFieldData(childField);\n      }\n    }\n  }\n\n  private prepareComplexFields(): void {\n    const fields: Field[] = this.fields;\n\n    // build complex field cache\n    this.discoverComplexFields(fields);\n\n    for (const key in this.complexFieldsByClassIdentifier) {\n      if (!this.complexFieldsByClassIdentifier.hasOwnProperty(key)) {\n        continue;\n      }\n      const cachedField: Field = this.complexFieldsByClassIdentifier[key];\n      // remove children more than one level deep in cached fields\n      for (const childField of cachedField.children) {\n        childField.children = [];\n      }\n      // alphebatize complex field's childrein\n      Field.alphabetizeFields(cachedField.children);\n    }\n  }\n\n  private discoverComplexFields(fields: Field[]): void {\n    for (const field of fields) {\n      if (field.type !== 'COMPLEX') {\n        continue;\n      }\n      if (field.serviceObject.status === 'SUPPORTED') {\n        this.complexFieldsByClassIdentifier[field.classIdentifier] = field.copy();\n      }\n      if (field.children) {\n        this.discoverComplexFields(field.children);\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PropertyFieldEditComponent.html":{"url":"components/PropertyFieldEditComponent.html","title":"component - PropertyFieldEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PropertyFieldEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                property-field-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./property-field-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                docDef\n                            \n                            \n                                field\n                            \n                            \n                                fieldMode\n                            \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                isClosing\n                            \n                            \n                                modalWindowComponent\n                            \n                            \n                                valueType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getField\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                nameExistsOnCreation\n                            \n                            \n                                valueTypeSelectionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getField\n                        \n                        \n                    \n                \n            \n            \n                \ngetField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Field\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(field: Field, docDef: DocumentDefinition, mwc: ModalWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docDef\n                                    \n                                                DocumentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mwc\n                                    \n                                                ModalWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            nameExistsOnCreation\n                        \n                        \n                    \n                \n            \n            \n                \nnameExistsOnCreation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:77\n                \n            \n\n\n            \n                \n                    Return true and disable the save button if the candidate name already exists on creation, return false\nand enable the save button otherwise.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nvalueTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                    \n                        \n                            Default value : new Field()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('name')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isClosing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalWindowComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { DocumentType, FieldMode } from '../common/config.types';\n\nimport { ConfigModel } from '../models/config.model';\nimport { DocumentDefinition } from '../models/document-definition.model';\nimport { Field } from '../models/field.model';\nimport { ModalWindowComponent, ModalWindowValidator } from './modal-window.component';\n\n@Component({\n  selector: 'property-field-edit',\n  templateUrl: './property-field-edit.component.html',\n})\n\nexport class PropertyFieldEditComponent implements ModalWindowValidator {\n  field: Field = new Field();\n  fieldMode: FieldMode;\n  valueType: any = 'STRING';\n  docDef: DocumentDefinition;\n  modalWindowComponent: ModalWindowComponent;\n  isClosing: boolean;\n  @ViewChild('name') private focusEl: ElementRef;\n\n  initialize(field: Field, docDef: DocumentDefinition, mwc: ModalWindowComponent): void {\n    if (field != null) {\n      this.valueType = field.type;\n      this.fieldMode = FieldMode.EDIT;\n    } else { this.fieldMode = FieldMode.CREATE; }\n\n    this.field = field == null ? new Field() : field.copy();\n    this.docDef = docDef;\n    this.modalWindowComponent = mwc;\n    this.isClosing = false;\n  }\n\n  valueTypeSelectionChanged(event: any): void {\n    this.valueType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  getField(): Field {\n    this.field.displayName = this.field.name;\n    this.field.path = this.field.name;\n    this.field.type = this.valueType;\n    this.field.userCreated = true;\n    this.field.docDef = this.docDef;\n    return this.field;\n  }\n\n  isDataValid(): boolean {\n    return ConfigModel.getConfig().isRequiredFieldValid(this.field.name, 'Name');\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n  /**\n   * Return true and disable the save button if the candidate name already exists on creation, return false\n   * and enable the save button otherwise.\n   */\n  nameExistsOnCreation(): boolean {\n    if (this.isClosing) {\n      return false;\n    }\n    if (this.fieldMode === FieldMode.CREATE && this.docDef != null &&\n        this.docDef.fieldExists(this.getField(), DocumentType.PROPERTY)) {\n      this.modalWindowComponent.confirmButtonDisabled = true;\n      return true;\n    }\n    this.modalWindowComponent.confirmButtonDisabled = false;\n    return false;\n  }\n}\n\n    \n\n    \n        \n  \n    Name:\n    \n    \n      Property name already exists, please select a unique name.\n    \n  \n  \n    Value:\n    \n     0)\" class=\"text-info\">\n      A property value must be specified.\n    \n  \n  \n    Value Type:\n    \n      ANY\n      Big Integer\n      Boolean\n      Byte\n      ByteArray\n      Char\n      Complex\n      Decimal\n      Double\n      Float\n      Integer\n      Long\n      Short\n      String\n      Time\n      Date\n      DateTime\n      DateTZ\n      TimeTZ\n      DateTimeTZ\n      Unsigned Byte\n      Unsigned Integer\n      Unsigned Long\n      Unsigned Short\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Name:              Property name already exists, please select a unique name.            Value:         0)\" class=\"text-info\">      A property value must be specified.            Value Type:          ANY      Big Integer      Boolean      Byte      ByteArray      Char      Complex      Decimal      Double      Float      Integer      Long      Short      String      Time      Date      DateTime      DateTZ      TimeTZ      DateTimeTZ      Unsigned Byte      Unsigned Integer      Unsigned Long      Unsigned Short      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'PropertyFieldEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TemplateEditComponent.html":{"url":"components/TemplateEditComponent.html","title":"component - TemplateEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TemplateEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/template-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                template-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./template-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                templateText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitialFocusElement\n                            \n                            \n                                isDataValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/template-edit.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/template-edit.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('template')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/template-edit.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templateText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/template-edit.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { ModalWindowValidator } from './modal-window.component';\n\n@Component({\n  selector: 'template-edit',\n  templateUrl: './template-edit.component.html',\n})\n\nexport class TemplateEditComponent implements ModalWindowValidator {\n  templateText: string = null;\n  @ViewChild('template') private focusEl: ElementRef;\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'TemplateEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TextNode.html":{"url":"classes/TextNode.html","title":"class - TextNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TextNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ExpressionNode\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                PREFIX\n                            \n                            \n                                    Public\n                                str\n                            \n                            \n                                    Protected\n                                    Static\n                                sequence\n                            \n                            \n                                    Protected\n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toHTML\n                            \n                            \n                                toText\n                            \n                            \n                                getUuid\n                            \n                            \n                                    Abstract\n                                toHTML\n                            \n                            \n                                    Abstract\n                                toText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(str: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        str\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PREFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'expression-text-'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            str\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            sequence\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                            \n                                \n                                    Inherited from         ExpressionNode\n\n                                \n                            \n                        \n                            \n                                    Defined in         ExpressionNode:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            uuid\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         ExpressionNode\n\n                                \n                            \n                        \n                            \n                                    Defined in         ExpressionNode:27\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \ntoHTML()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \ntoText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetUuid()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toHTML()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toText()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { MappedField, MappingModel } from './mapping.model';\nimport { Subject } from 'rxjs';\n\nexport class ExpressionUpdatedEvent {\n  constructor(public node?: ExpressionNode, public offset?: number) {}\n}\n\nexport abstract class ExpressionNode {\n  protected static sequence = 0;\n  protected uuid;\n\n  constructor(prefix: string) {\n    this.uuid = prefix + ExpressionNode.sequence++;\n  }\n\n  getUuid() {\n    return this.uuid;\n  }\n\n  abstract toText(): string;\n  abstract toHTML(): string;\n}\n\nexport class TextNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-text-';\n\n  constructor(public str: string) {\n    super(TextNode.PREFIX);\n  }\n\n  toText(): string {\n    return this.str;\n  }\n\n  toHTML(): string {\n    return `${this.str.replace(/ /g, '&nbsp;')}`;\n  }\n\n}\n\nexport class FieldNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-field-';\n\n  constructor(private mapping: MappingModel, public field?: MappedField, private index?: number) {\n    super(FieldNode.PREFIX);\n    if (!field) {\n      this.field = mapping.getMappedFieldForIndex((index + 1).toString(), true);\n    }\n    if (!index) {\n      this.index = this.mapping.getIndexForMappedField(this.field) - 1;\n    }\n  }\n\n  toText(): string {\n    return '${' + this.index + '}';\n  }\n\n  toHTML(): string {\n    if (this.field && this.field.field) {\n      return `${this.field.field.name}`;\n    } else {\n      return `N/A`;\n    }\n  }\n\n}\n\nexport class ExpressionModel {\n  expressionUpdatedSource = new Subject();\n  expressionUpdated$ = this.expressionUpdatedSource.asObservable();\n\n  private _nodes: ExpressionNode[] = [];\n  private textCache = '';\n  private htmlCache = '';\n\n  constructor(private mapping: MappingModel, private cfg: ConfigModel) {}\n\n  generateInitialExpression() {\n    this.mapping.getUserMappedFields(true).forEach(f => this.appendFieldNode(f));\n  }\n\n  get nodes(): ReadonlyArray {\n    return this._nodes;\n  }\n\n  getLastNodeIndex() {\n    return this._nodes.length - 1;\n  }\n\n  getLastNode() {\n    return this._nodes[this.getLastNodeIndex()];\n  }\n\n  getNode(nodeId?: string): any {\n    if (!nodeId) {\n      return this.getLastNode();\n    }\n    return this._nodes.find(n => n.getUuid() === nodeId);\n  }\n\n  setConfigModel(cfg: ConfigModel) {\n    this.cfg = cfg;\n  }\n\n  /**\n   * Clear all text from the specified TextNode offset range or from the '@' to the end\n   * of the text node if no node ID is specified.\n   *\n   * Return the new UUID position indicator string or null.\n   *\n   * @param nodeId\n   * @param startOffset\n   * @param endOffset\n   */\n  clearText(nodeId?: string, startOffset?: number, endOffset?: number): TextNode {\n    let targetNode: TextNode;\n    let targetNodeIndex = 0;\n    if (!nodeId) {\n      const lastNode = this.getLastNode();\n      if (!(lastNode instanceof TextNode)) {\n        return null;\n      }\n      const keyPos = lastNode.str.indexOf('@');\n      if (keyPos !== -1) {\n        targetNodeIndex = this._nodes.indexOf(lastNode);\n        targetNode = lastNode;\n        targetNode.str = targetNode.str.substring(0, keyPos);\n      }\n    } else {\n      const node = this._nodes.find(n => n.getUuid() === nodeId);\n      if (!(node instanceof TextNode) || !endOffset) {\n        return null;\n      }\n      targetNode = node;\n      targetNodeIndex = this._nodes.indexOf(targetNode);\n      const cleanStr = targetNode.str.replace(targetNode.str.substring(startOffset, endOffset), '');\n      targetNode.str = cleanStr;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n    return targetNode;\n  }\n\n  /**\n   * Insert text into expression at specified position. If nodeId is not specified,\n   * it will be added to the end of expression. It parses the string\n   * and insert a set of TextNode & FieldNode if it contains field reference like ${0},\n   * otherwise just one TextNode.\n   * This emits ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   * @param str string to insert\n   * @param nodeId target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertText(str: string, nodeId?: string, offset?: number) {\n    this.insertNodes(this.createNodesFromText(str), nodeId, offset);\n  }\n\n  /**\n   * Insert an array of ExpressionNodes at the specified position. If insertPosition is\n   * not specified the nodes will be appended to the end of the expression.\n   * This emits an ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   *\n   * @param newNodes an array of ExpressionNode to add\n   * @param insertPosition target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertNodes(newNodes: ExpressionNode[], insertPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!insertPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        this._nodes.push(...newNodes);\n      } else if (last instanceof TextNode && newNodes[0] instanceof TextNode) {\n        const lastTextNode = last as TextNode;\n        (last as TextNode).str += (newNodes[0] as TextNode).str;\n        newNodes.splice(0, 1, last);\n        this._nodes.splice(this.getLastNodeIndex(), 1, ...newNodes);\n      } else if (last instanceof FieldNode && newNodes[0] instanceof FieldNode) {\n        this._nodes.splice(this.getLastNodeIndex(), 0, new TextNode(' + '), ...newNodes);\n      } else {\n        this._nodes.push(...newNodes);\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    const updatedEvent = new ExpressionUpdatedEvent();\n    const targetNode = this._nodes.find(n => n.getUuid() === insertPosition);\n    const targetNodeIndex = this._nodes.indexOf(targetNode);\n\n    if (targetNode instanceof TextNode) {\n      if (offset === undefined || offset === null || offset  0) {\n        if (newNodes[0] instanceof TextNode) {\n          targetNode.str = pre + (newNodes[0] as TextNode).str;\n          newNodes.splice(0, 1, targetNode);\n        } else {\n          targetNode.str = pre;\n          newNodes.splice(0, 0, targetNode);\n        }\n      }\n      if (post.length > 0) {\n        const lastNewNodeIndex = newNodes.length - 1;\n        if (newNodes[lastNewNodeIndex] instanceof TextNode) {\n          let mergedTextNode: TextNode;\n          if (pre.length > 0) {\n            mergedTextNode = newNodes[lastNewNodeIndex] as TextNode;\n            mergedTextNode.str += post;\n          } else {\n            mergedTextNode = targetNode;\n            mergedTextNode.str = (newNodes[lastNewNodeIndex]as TextNode).str + post;\n          }\n          newNodes.splice(lastNewNodeIndex, 1, mergedTextNode);\n        } else {\n          if (pre.length > 0) {\n            newNodes.push(new TextNode(post));\n          } else {\n            targetNode.str = post;\n            newNodes.push(targetNode);\n          }\n        }\n      }\n      this._nodes.splice(targetNodeIndex, 1, ...newNodes);\n      const lastAddedIndex = targetNodeIndex + newNodes.length - 1;\n      if (this._nodes[lastAddedIndex] instanceof FieldNode\n          && this.nodes[lastAddedIndex + 1] instanceof FieldNode) {\n        // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n        const space = new TextNode(' + ');\n        this._nodes.splice(lastAddedIndex + 1, 0, space);\n        updatedEvent.node = space;\n        updatedEvent.offset = 1;\n      } else if (this._nodes[lastAddedIndex] instanceof FieldNode) {\n        updatedEvent.node = this._nodes[lastAddedIndex + 1];\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = this._nodes[lastAddedIndex];\n        updatedEvent.offset = (this._nodes[lastAddedIndex] as TextNode).str.length - post.length;\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next(updatedEvent);\n      return;\n    }\n\n    // targetNode is a FieldNode - insert the text before it if offset is 0, otherwise after it\n    if (offset !== 0 && newNodes[0] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      newNodes.splice(0, 0, new TextNode(' + '));\n    }\n    const nextNodeIndex = offset === 0 ? targetNodeIndex : targetNodeIndex + 1;\n    const nextNode = this._nodes[nextNodeIndex];\n    if (nextNode instanceof TextNode && newNodes[newNodes.length - 1] instanceof TextNode) {\n      updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      nextNode.str = (newNodes[newNodes.length - 1] as TextNode).str + (nextNode as TextNode).str;\n      newNodes.pop();\n      this._nodes.splice(nextNodeIndex, 1, ...newNodes);\n      updatedEvent.node = nextNode;\n    } else if (nextNode instanceof FieldNode && newNodes[newNodes.length - 1] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      const space = new TextNode(' + ');\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes, space);\n      updatedEvent.node = space;\n      updatedEvent.offset = 1;\n    } else {\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes);\n      if (nextNode instanceof TextNode) {\n        updatedEvent.node = nextNode;\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = newNodes[newNodes.length - 1];\n        updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  removeToken(lastFieldRefRemoved: (removed: MappedField) => void, tokenPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!tokenPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        return;\n      }\n      if (last instanceof FieldNode) {\n        const removed = this._nodes.pop() as FieldNode;\n        if (!this._nodes.find(n => n instanceof FieldNode && n.field === removed.field)) {\n          lastFieldRefRemoved(removed.field);\n        }\n      } else if (last instanceof TextNode) {\n        if (last.str.length > 0) {\n          last.str = last.str.substring(0, last.str.length - 1);\n        } else {\n          this._nodes.pop();\n        }\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    let updatedEvent = new ExpressionUpdatedEvent();\n    let targetNode = this._nodes.find(n => n.getUuid() === tokenPosition);\n    let targetNodeIndex = this._nodes.indexOf(targetNode);\n    if (!targetNode || offset === -1) {\n      if (targetNodeIndex  n instanceof FieldNode && n.field === removed.field)) {\n        lastFieldRefRemoved(removed.field);\n      }\n      if (this._nodes.length > targetNodeIndex) {\n        if (this._nodes[targetNodeIndex - 1] instanceof TextNode\n            && this._nodes[targetNodeIndex] instanceof TextNode) {\n          const newOffset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n          (this._nodes[targetNodeIndex - 1] as TextNode).str\n              += (this._nodes[targetNodeIndex] as TextNode).str;\n          this._nodes.splice(targetNodeIndex, 1);\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = newOffset;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof FieldNode\n            && this._nodes[targetNodeIndex] instanceof FieldNode) {\n          const glue = new TextNode(' + ');\n          this._nodes.splice(targetNodeIndex, 0, glue);\n          updatedEvent.node = glue;\n          updatedEvent.offset = 3;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n        } else if (this._nodes[targetNodeIndex] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex];\n          updatedEvent.offset = 0;\n        }\n      } else {\n        // end of line\n        updatedEvent = undefined;\n      }\n    } else {\n      const targetString = (targetNode as TextNode).str;\n      (targetNode as TextNode).str = offset === 0 ? targetString.substr(1)\n        : targetString.substring(0, offset) + targetString.substring(offset + 1);\n      if ((targetNode as TextNode).str.length === 0) {\n        this.cfg.errorService.info('At least one space is required between field references.', null);\n        return;\n      }\n      updatedEvent.node = targetNode;\n      updatedEvent.offset = offset;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  /**\n   * Replace the content of the last text node with a substring terminating at the\n   * specified index.\n   *\n   * @param index\n   */\n  clearToEnd(index: number): void {\n    const last = this.getLastNode();\n    if (!(last instanceof TextNode)) {\n      return;\n    }\n    last.str = last.str.substring(0, index);\n  }\n\n  /**\n   * Reflect mapped source fields to the field references in the expression.\n   * Selected source fields are inserted into or appended to the expression,\n   * and unselected source fields are removed from expression.\n   *\n   * @param mapping Corresponding MappingModel object\n   */\n  updateFieldReference(mapping: MappingModel, insertPosition?: string, offset?: number) {\n    const mappedFields = mapping.getUserMappedFields(true);\n    const toAdd: MappedField[] = [];\n    const toRemove: MappedField[] = [];\n    let fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n\n    // Remove the field from the expression if unmapped.\n    for (const node of fieldNodes) {\n      if (mappedFields.includes(node.field)) {\n        continue;\n      }\n      const index = this._nodes.indexOf(node);\n      this._nodes.splice(index, 1);\n      if (this._nodes.length > index && this._nodes[index - 1] instanceof TextNode\n          && this._nodes[index] instanceof TextNode) {\n        (this._nodes[index - 1] as TextNode).str += (this._nodes[index] as TextNode).str;\n        this._nodes.splice(index, 1);\n      }\n    }\n\n    // Add the specified field into the expression - append if no insert position is specified.\n    fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n    for (const mfield of mappedFields) {\n      if (!fieldNodes.find(n => n.field === mfield)) {\n        if (insertPosition) {\n          this.insertNodes([new FieldNode(this.mapping, mfield)], insertPosition, offset);\n        } else {\n          this.appendFieldNode(mfield);\n        }\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  clear() {\n    this._nodes = [];\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  toText() {\n    return this.textCache;\n  }\n\n  toHTML() {\n    return this.htmlCache;\n  }\n\n  private updateCache() {\n    let answer = '';\n    this._nodes.forEach(node => answer += node.toText());\n    this.textCache = answer;\n    answer = '';\n    this._nodes.forEach(node => answer += node.toHTML());\n    this.htmlCache = answer;\n  }\n\n  private createNodesFromText(text: string): ExpressionNode[] {\n    const answer = [];\n    let position = -1;\n    let fn = null;\n\n    while ((position = text.search(/\\$\\{[0-9]+\\}/)) !== -1 ) {\n      if (position !== 0) {\n        answer.push(new TextNode(text.substring(0, position)));\n      }\n      const index = parseInt(text.substring(position + 2, text.indexOf('}')), 10);\n      fn = new FieldNode(this.mapping, null, index);\n      if (fn.field === null) {\n        this.cfg.errorService.error('Unable to map expression index to field node.', index);\n      } else {\n        answer.push(fn);\n      }\n      text = text.substring(text.indexOf('}') + 1);\n    }\n    if (text.length > 0) {\n      answer.push(new TextNode(text));\n    }\n    return answer;\n  }\n\n  private appendFieldNode(mfield: MappedField) {\n    const lastNode = this._nodes.pop();\n    if (lastNode instanceof FieldNode) {\n        this._nodes.push(lastNode, new TextNode(' + '));\n    } else if (lastNode instanceof TextNode) {\n      if (lastNode.str.length === 0) {\n        this._nodes.push(new TextNode(' + '));\n      } else {\n        this._nodes.push(lastNode);\n      }\n    }\n    this._nodes.push(new FieldNode(this.mapping, mfield));\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ToErrorIconClassPipe.html":{"url":"pipes/ToErrorIconClassPipe.html","title":"pipe - ToErrorIconClassPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ToErrorIconClassPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/common/to-error-icon-class.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        toErrorIconClass\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: ErrorInfo[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/to-error-icon-class.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { ErrorInfo, ErrorLevel } from '../models/error.model';\n\n@Pipe({ name: 'toErrorIconClass' })\nexport class ToErrorIconClassPipe implements PipeTransform {\n\n  transform(value: ErrorInfo[]): string {\n    if (value.some(e => e.level >= ErrorLevel.ERROR)) {\n      return 'pficon pficon-error-circle-o';\n    } else if (value.some(e => e.level === ErrorLevel.WARN)) {\n      return 'pficon pficon-warning-triangle-o';\n    } else if (value.some(e => e.level === ErrorLevel.INFO)) {\n      return 'pficon pficon-info';\n    } else {\n      return '';\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                toolbar\n            \n\n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expressionComponent\n                            \n                            \n                                    Private\n                                fileData\n                            \n                            \n                                    Private\n                                mappingsFileName\n                            \n                            \n                                    Private\n                                reader\n                            \n                            \n                                targetSupportsTemplate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                conditionalMappingExpressionEnabled\n                            \n                            \n                                    Private\n                                editTemplate\n                            \n                            \n                                getCSSClass\n                            \n                            \n                                getEditorSettingsCSSClass\n                            \n                            \n                                getFileSuffix\n                            \n                            \n                                handleExportClick\n                            \n                            \n                                handleExportMapping\n                            \n                            \n                                handleExportMappingCancel\n                            \n                            \n                                handleMappingsInstanceName\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                processImportedFile\n                            \n                            \n                                    Async\n                                processMappingsCatalog\n                            \n                            \n                                    Async\n                                readFile\n                            \n                            \n                                    Private\n                                resetAll\n                            \n                            \n                                toolbarButtonClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            conditionalMappingExpressionEnabled\n                        \n                        \n                    \n                \n            \n            \n                \nconditionalMappingExpressionEnabled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:298\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            editTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editTemplate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetCSSClass(action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEditorSettingsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetEditorSettingsCSSClass(open: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    open\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFileSuffix\n                        \n                        \n                    \n                \n            \n            \n                \ngetFileSuffix()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleExportClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleExportClick(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:250\n                \n            \n\n\n            \n                \n                    The user has clicked in the export file text wudget.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleExportMapping\n                        \n                        \n                    \n                \n            \n            \n                \nhandleExportMapping(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:283\n                \n            \n\n\n            \n                \n                    The user has requested their current mappings be exported.  Use the mapping management\nservice to establish the file content and to push it down to the server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleExportMappingCancel\n                        \n                        \n                    \n                \n            \n            \n                \nhandleExportMappingCancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:294\n                \n            \n\n\n            \n                \n                    Cancel button - Export > Current Mapping\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMappingsInstanceName\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMappingsInstanceName(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:265\n                \n            \n\n\n            \n                \n                    The user has specified an AtlasMap mappings catalog file name into which the current live mappings and\nsupport documents will be exported.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processImportedFile\n                        \n                        \n                    \n                \n            \n            \n                \nprocessImportedFile(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:63\n                \n            \n\n\n            \n                \n                    The user has imported a file (mapping catalog or Java archive).  Process accordingly.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            processMappingsCatalog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processMappingsCatalog(selectedFile: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:93\n                \n            \n\n\n            \n                \n                    A user has selected a compressed mappings catalog (ZIP) file to be imported into the canvas.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedFile\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            readFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(fileContent: Blob)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:47\n                \n            \n\n\n            \n                \n                    Perform an asynchronous read of a local file, returning a byte array for the file content.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileContent\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:205\n                \n            \n\n\n            \n                \n                    Establish a modal window popup and if confirmed remove all documents and imported JARs from\nthe server and reinitialize the DM.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toolbarButtonClicked\n                        \n                        \n                    \n                \n            \n            \n                \ntoolbarButtonClicked(action: string, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expressionComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExpressionComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('expressionComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fileData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mappingsFileName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            reader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FileReader\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetSupportsTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, ViewChild } from '@angular/core';\n\nimport { InspectionType } from '../common/config.types';\nimport { ConfigModel } from '../models/config.model';\nimport { ModalWindowComponent } from './modal-window.component';\nimport { TemplateEditComponent } from './template-edit.component';\nimport { ExpressionComponent } from './expression.component';\nimport { TransitionMode } from '../models/transition.model';\n\n@Component({\n  selector: 'toolbar',\n  templateUrl: './toolbar.component.html',\n})\n\nexport class ToolbarComponent implements OnInit {\n  @Input() cfg: ConfigModel;\n  @Input() modalWindow: ModalWindowComponent;\n\n  @ViewChild('expressionComponent') expressionComponent: ExpressionComponent;\n\n  targetSupportsTemplate = false;\n\n  private fileData: any;\n  private mappingsFileName: string;\n  private reader: FileReader;\n\n  /**\n   * Perform an asynchronous read of a local file, returning a byte array for the file content.\n   *\n   * @param fileContent\n   */\n  async readFile(fileContent: Blob): Promise {\n    return new Promise((resolve, reject) => {\n      this.reader.onload = (event: any) => {\n        const arrayBuffer: any = this.reader.result;\n        const bytes = new Uint8Array(arrayBuffer);\n        resolve(bytes);\n      };\n      this.reader.readAsArrayBuffer(fileContent);\n    });\n  }\n\n  /**\n   * The user has imported a file (mapping catalog or Java archive).  Process accordingly.\n   *\n   * @param event\n   */\n  processImportedFile(event) {\n    const userFile = event.target.files[0];\n    const userFileComps = userFile.name.split('.');\n    const userFileSuffix: string = userFileComps[userFileComps.length - 1].toUpperCase();\n\n    if (userFileSuffix === 'ADM') {\n        this.cfg.errorService.resetAll();\n\n        // Clear out current user documents from the runtime service before processing the imported ADM.\n        this.cfg.fileService.resetAll().toPromise().then( async(result: boolean) => {\n          await this.processMappingsCatalog(userFile);\n        }).catch((error: any) => {\n          if (error.status === 0) {\n            this.cfg.errorService.error('Fatal network error: Could not connect to AtlasMap design runtime service.', error);\n          } else {\n            this.cfg.errorService.error('Could not reset document definitions before import.', error);\n          }\n        });\n    } else if (userFileSuffix === 'JAR') {\n      this.cfg.documentService.processDocument(event.target.files[0], InspectionType.JAVA_CLASS, false);\n    }\n\n    event.srcElement.value = null;\n  }\n\n  /**\n   * A user has selected a compressed mappings catalog (ZIP) file to be imported into the canvas.\n   *\n   * @param selectedFile\n   */\n  async processMappingsCatalog(selectedFile: any) {\n    this.cfg.initializationService.updateLoadingStatus('Importing AtlasMap Catalog');\n    await this.cfg.fileService.importADMCatalog(selectedFile);\n  }\n\n  getFileSuffix() {\n    return '.adm,.jar';\n  }\n\n  getCSSClass(action: string) {\n    if (this.cfg.mappings !== null) {\n      if ('showDetails' === action) {\n        return 'fa fa-exchange link' + (this.cfg.mappings.activeMapping ? ' selected' : '');\n      } else if ('editTemplate' === action) {\n          return 'fa fa-file-text-o link' + (this.cfg.mappings.templateExists() ? ' selected' : '');\n      }\n    }\n    if ('showLines' === action) {\n      return 'fa fa-share-alt link' + (this.cfg.showLinesAlways ? ' selected' : '');\n    } else if ('showMappingTable' === action) {\n      return 'fa fa-table link' + (this.cfg.showMappingTable ? ' selected' : '');\n    } else if ('showNamespaceTable' === action) {\n      return 'fa fa-code link' + (this.cfg.showNamespaceTable ? ' selected' : '');\n    } else if ('importMappings' === action) {\n      return 'pficon pficon-import link';\n    } else if ('exportMappings' === action) {\n      return 'pficon pficon-export link';\n    } else if ('enableExpression' === action) {\n      return (this.cfg.mappings && this.cfg.mappings.activeMapping\n          && this.cfg.mappings.activeMapping.transition\n          && this.cfg.mappings.activeMapping.transition.enableExpression ? ' selected' : '');\n    }\n  }\n\n  getEditorSettingsCSSClass(open: boolean) {\n    return 'fa fa-cog link ' + (open ? ' selected' : '');\n  }\n\n  toolbarButtonClicked(action: string, event: any): void {\n    event.preventDefault();\n    if ('showDetails' === action) {\n      if (this.cfg.mappings.activeMapping == null) {\n        this.cfg.mappingService.addNewMapping(null, false);\n      } else {\n        this.cfg.mappingService.deselectMapping();\n      }\n    } else if ('editTemplate' === action) {\n      this.editTemplate();\n    } else if ('showLines' === action) {\n      this.cfg.showLinesAlways = !this.cfg.showLinesAlways;\n    } else if ('showTypes' === action) {\n      this.cfg.showTypes = !this.cfg.showTypes;\n    } else if ('showMappedFields' === action) {\n      this.cfg.showMappedFields = !this.cfg.showMappedFields;\n    } else if ('showUnmappedFields' === action) {\n      this.cfg.showUnmappedFields = !this.cfg.showUnmappedFields;\n    } else if ('addMapping' === action) {\n      this.cfg.mappingService.addNewMapping(null, false);\n    } else if ('showMappingTable' === action) {\n      this.cfg.showMappingTable = !this.cfg.showMappingTable;\n      if (this.cfg.showMappingTable) {\n        this.cfg.showNamespaceTable = false;\n      }\n    } else if ('showNamespaceTable' === action) {\n      this.cfg.showNamespaceTable = !this.cfg.showNamespaceTable;\n      if (this.cfg.showNamespaceTable) {\n        this.cfg.showMappingTable = false;\n      }\n    } else if ('showMappingPreview' === action) {\n      this.cfg.showMappingPreview = !this.cfg.showMappingPreview;\n    } else if ('resetAll' === action) {\n      this.resetAll();\n    } else if ('enableExpression') {\n      if (this.cfg.mappings && this.cfg.mappings.activeMapping && this.cfg.mappings.activeMapping.transition) {\n\n        if (this.cfg.mappings.activeMapping.getFirstCollectionField(false)) {\n          this.cfg.errorService.warn(\n           `Cannot establish a conditional mapping expression when referencing a target collection field.`, null);\n        } else if (this.cfg.mappings.activeMapping.getFirstCollectionField(true)) {\n         this.cfg.errorService.warn(\n           `Cannot establish a conditional mapping expression when referencing a source collection field.`, null);\n        } else if (this.cfg.mappings.activeMapping.transition.mode === TransitionMode.ONE_TO_MANY) {\n          this.cfg.errorService.warn(\n           `Cannot establish a conditional mapping expression when multiple target fields are selected.\n            Please select only one target field and try again.`, null);\n        } else {\n          this.cfg.mappings.activeMapping.transition.enableExpression\n            = !this.cfg.mappings.activeMapping.transition.enableExpression;\n        }\n      } else {\n        this.cfg.errorService.info('Please select a mapping first.', null);\n      }\n    }\n    // Use the initialization service to trigger the observable updateFromConfig method\n    // in the parent data-mapper-app class.  This avoids materializing the lineMachine object\n    // post-check.\n    this.cfg.initializationService.systemInitializedSource.next();\n  }\n\n  ngOnInit() {\n    this.mappingsFileName = '';\n    this.fileData = null;\n    this.reader = new FileReader();\n    // Disable template until runtime supports it - https://github.com/atlasmap/atlasmap/issues/329\n    // const targetDoc: DocumentDefinition = this.cfg.targetDocs[0];\n    // this.targetSupportsTemplate = targetDoc && (targetDoc.type == DocumentType.XML || targetDoc.type == DocumentType.JSON);\n  }\n\n  /**\n   * Establish a modal window popup and if confirmed remove all documents and imported JARs from\n   * the server and reinitialize the DM.\n   */\n  private resetAll(): void {\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Reset';\n    this.modalWindow.headerText = 'Reset All Mappings and Imports?';\n    this.modalWindow.message = 'Are you sure you want to reset all mappings and clear all imported documents?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      this.cfg.errorService.resetAll();\n      this.cfg.fileService.resetAll().toPromise().then( async(result: boolean) => {\n        this.cfg.mappings = null;\n        this.cfg.clearDocs();\n        await this.cfg.initializationService.initialize();\n      }).catch((error: any) => {\n        if (error.status === 0) {\n          this.cfg.errorService.error('Fatal network error: Could not connect to AtlasMap design runtime service.', error);\n        } else {\n          this.cfg.errorService.error('Could not reset mapping definitions.', error);\n        }\n      });\n    };\n    this.modalWindow.show();\n  }\n\n  private editTemplate(): void {\n    const self: ToolbarComponent = this;\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Save';\n    this.modalWindow.headerText = this.cfg.mappings.templateExists() ? 'Edit Template' : 'Add Template';\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      const templateComponent: TemplateEditComponent = mw.nestedComponent as TemplateEditComponent;\n      templateComponent.templateText = this.cfg.mappings.templateText;\n    };\n    this.modalWindow.nestedComponentType = TemplateEditComponent;\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      const templateComponent: TemplateEditComponent = mw.nestedComponent as TemplateEditComponent;\n      this.cfg.mappings.templateText = templateComponent.templateText;\n      self.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  /**\n   * The user has clicked in the export file text wudget.\n   *\n   * @param event\n   */\n  handleExportClick(event) {\n    if (event.preventDefault) {\n        event.preventDefault();\n    }\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * The user has specified an AtlasMap mappings catalog file name into which the current live mappings and\n   * support documents will be exported.\n   *\n   * @param event\n   */\n  handleMappingsInstanceName(event) {\n      let filename = event.target.value;\n      if (filename !== null && filename.length > 0) {\n\n        // Tack on a .adm suffix if one wasn't already specified.\n        if (filename.split('.').pop() !== 'adm') {\n          filename = filename.concat('.adm');\n        }\n        this.mappingsFileName = filename;\n      }\n    }\n\n  /**\n   * The user has requested their current mappings be exported.  Use the mapping management\n   * service to establish the file content and to push it down to the server.\n   *\n   * @param event\n   */\n  handleExportMapping(event) {\n    let fileName = this.mappingsFileName;\n    if (this.mappingsFileName.length === 0) {\n        fileName = 'atlasmap-mapping.adm';\n    }\n    this.cfg.fileService.exportMappingsCatalog(fileName);\n  }\n\n  /**\n   * Cancel button - Export > Current Mapping\n   */\n  handleExportMappingCancel(): void {\n    this.mappingsFileName = '';\n  }\n\n  conditionalMappingExpressionEnabled(): boolean {\n    return (this.cfg.mappings && this.cfg.mappings.activeMapping &&\n      this.cfg.mappings.activeMapping.transition &&\n      this.cfg.mappings.activeMapping.transition.enableExpression);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    f(x)\n    \n\n    \n      \n    \n\n    |\n\n    \n      \n        \n      \n    \n\n    \n      \n      \n        \n          \n            Export mappings\n              \n                OK\n                Cancel\n            \n          \n        \n      \n    \n\n    |\n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n      \n\n      \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Types\n            \n          \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Lines\n            \n          \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Mapped Fields\n            \n          \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Unmapped Fields\n            \n          \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Mapping Preview\n            \n          \n          \n        \n        \n        \n          \n            \n              \n                Reset All\n              \n            \n          \n\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      f(x)                      |                                                                          Export mappings                              OK                Cancel                                            |                                                                                                                                                            Show Types                                                                                                                                                                Show Lines                                                                                                                                                                Show Mapped Fields                                                                                                                                                                Show Unmapped Fields                                                                                                                                                                Show Mapping Preview                                                                                                            Reset All                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransitionDelimiterModel.html":{"url":"classes/TransitionDelimiterModel.html","title":"class - TransitionDelimiterModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransitionDelimiterModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualDelimiter\n                            \n                            \n                                delimiter\n                            \n                            \n                                prettyName\n                            \n                            \n                                serializedValue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(delimiter: TransitionDelimiter, serializedValue: string, prettyName: string, actualDelimiter)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        delimiter\n                                                  \n                                                        \n                                                                        TransitionDelimiter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serializedValue\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prettyName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actualDelimiter\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actualDelimiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delimiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionDelimiter\n\n                        \n                    \n                    \n                        \n                            Default value : TransitionDelimiter.SPACE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prettyName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serializedValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ExpressionModel } from './expression.model';\nimport { FieldAction } from './field-action.model';\n\nexport enum TransitionMode {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  ENUM = 'ENUM',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  FOR_EACH = 'FOR_EACH'\n}\n\nexport enum TransitionDelimiter {\n  NONE, AMPERSAND, AT_SIGN, BACKSLASH, COLON, COMMA, DASH, EQUAL, HASH,\n  MULTI_SPACE, PERIOD, PIPE, SEMICOLON, SLASH, SPACE, UNDERSCORE, USER_DEFINED\n}\n\nexport class TransitionDelimiterModel {\n  delimiter: TransitionDelimiter = TransitionDelimiter.SPACE;\n  serializedValue: string = null;\n  prettyName: string = null;\n  actualDelimiter = '';\n\n  constructor(\n    delimiter: TransitionDelimiter, serializedValue: string, prettyName: string, actualDelimiter) {\n    this.delimiter = delimiter;\n    this.serializedValue = serializedValue;\n    this.prettyName = prettyName;\n    this.actualDelimiter = actualDelimiter;\n  }\n}\n\nexport class TransitionModel {\n  static delimiterModels: TransitionDelimiterModel[] = [];\n\n  mode: TransitionMode = TransitionMode.ONE_TO_ONE;\n  delimiter: TransitionDelimiter = TransitionDelimiter.SPACE;\n  userDelimiter = '';\n  lookupTableName: string = null;\n  expression: ExpressionModel;\n  enableExpression = false;\n  transitionFieldAction: FieldAction;\n\n  constructor() {\n    TransitionModel.initialize();\n  }\n\n  static initialize() {\n    if (TransitionModel.delimiterModels.length === 0) {\n      const models: TransitionDelimiterModel[] = [];\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.NONE, null, '[None]', ''));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.AMPERSAND, 'Ampersand', 'Ampersand [&]', '\\&'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.AT_SIGN, 'AtSign', 'At Sign [@]', '\\@'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.BACKSLASH, 'Backslash', 'Backslash [\\\\]', '\\\\'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.COLON, 'Colon', 'Colon [:]', '\\:'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.COMMA, 'Comma', 'Comma [,]', '\\,'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.DASH, 'Dash', 'Dash [-]', '\\-'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.EQUAL, 'Equal', 'Equal [=]', '\\='));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.HASH, 'Hash', 'Hash [#]', '\\#'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.MULTI_SPACE, 'MultiSpace', 'Multi Spaces', '  '));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.PERIOD, 'Period', 'Period [.]', '\\.'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.PIPE, 'Pipe', 'Pipe [|]', '\\|'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SEMICOLON, 'Semicolon', 'Semicolon [;]', '\\;'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SLASH, 'Slash', 'Slash [/]', '\\/'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SPACE, 'Space', 'Space [ ]', ' '));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.UNDERSCORE, 'Underscore', 'Underscore [_]', '\\_'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.USER_DEFINED, 'User defined', 'User defined', ''));\n      TransitionModel.delimiterModels = models;\n    }\n  }\n\n  /**\n   * Translate a mapping mode number into a string.\n   * @param mode\n   */\n  static getMappingModeName(mode: TransitionMode): string {\n    let actionName: string;\n\n    switch (mode) {\n      case TransitionMode.ONE_TO_ONE: {\n        actionName = 'One to One';\n        break;\n      }\n      case TransitionMode.MANY_TO_ONE: {\n        actionName = 'Many to One';\n        break;\n      }\n      case TransitionMode.ONE_TO_MANY: {\n        actionName = 'One to Many';\n        break;\n      }\n      case TransitionMode.ENUM: {\n        actionName = 'ENUM';\n        break;\n      }\n      case TransitionMode.FOR_EACH: {\n        actionName = 'For Each';\n        break;\n      }\n      default: {\n         actionName = '';\n         break;\n      }\n    }\n    return actionName;\n  }\n\n  getPrettyName() {\n    if (this.mode === TransitionMode.ONE_TO_MANY) {\n      return TransitionModel.getMappingModeName(this.mode) + ' (' + this.transitionFieldAction.name + ')';\n    } else if (this.mode === TransitionMode.MANY_TO_ONE) {\n      return TransitionModel.getMappingModeName(this.mode) + ' (' + this.transitionFieldAction.name + ')';\n    } else if (this.mode === TransitionMode.ENUM) {\n      return 'Enum (table: ' + this.lookupTableName + ')';\n    }\n    return TransitionModel.getMappingModeName(this.mode);\n  }\n\n  isOneToManyMode(): boolean {\n    return this.mode === TransitionMode.ONE_TO_MANY;\n  }\n\n  isOneToOneMode(): boolean {\n    return this.mode === TransitionMode.ONE_TO_ONE;\n  }\n\n  isManyToOneMode(): boolean {\n    return this.mode === TransitionMode.MANY_TO_ONE;\n  }\n\n  isForEachMode(): boolean {\n    return this.mode === TransitionMode.FOR_EACH;\n  }\n\n  isEnumerationMode(): boolean {\n    return this.mode === TransitionMode.ENUM;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransitionModel.html":{"url":"classes/TransitionModel.html","title":"class - TransitionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransitionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delimiter\n                            \n                            \n                                    Static\n                                delimiterModels\n                            \n                            \n                                enableExpression\n                            \n                            \n                                expression\n                            \n                            \n                                lookupTableName\n                            \n                            \n                                mode\n                            \n                            \n                                transitionFieldAction\n                            \n                            \n                                userDelimiter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getMappingModeName\n                            \n                            \n                                getPrettyName\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                isEnumerationMode\n                            \n                            \n                                isForEachMode\n                            \n                            \n                                isManyToOneMode\n                            \n                            \n                                isOneToManyMode\n                            \n                            \n                                isOneToOneMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:56\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delimiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionDelimiter\n\n                        \n                    \n                    \n                        \n                            Default value : TransitionDelimiter.SPACE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            delimiterModels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionDelimiterModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableExpression\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expression\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExpressionModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lookupTableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionMode\n\n                        \n                    \n                    \n                        \n                            Default value : TransitionMode.ONE_TO_ONE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transitionFieldAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldAction\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userDelimiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:52\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getMappingModeName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMappingModeName(mode: TransitionMode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:90\n                \n            \n\n\n            \n                \n                    Translate a mapping mode number into a string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mode\n                                    \n                                                TransitionMode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPrettyName\n                        \n                        \n                    \n                \n            \n            \n                \ngetPrettyName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnumerationMode\n                        \n                        \n                    \n                \n            \n            \n                \nisEnumerationMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isForEachMode\n                        \n                        \n                    \n                \n            \n            \n                \nisForEachMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isManyToOneMode\n                        \n                        \n                    \n                \n            \n            \n                \nisManyToOneMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isOneToManyMode\n                        \n                        \n                    \n                \n            \n            \n                \nisOneToManyMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isOneToOneMode\n                        \n                        \n                    \n                \n            \n            \n                \nisOneToOneMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExpressionModel } from './expression.model';\nimport { FieldAction } from './field-action.model';\n\nexport enum TransitionMode {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  ENUM = 'ENUM',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  FOR_EACH = 'FOR_EACH'\n}\n\nexport enum TransitionDelimiter {\n  NONE, AMPERSAND, AT_SIGN, BACKSLASH, COLON, COMMA, DASH, EQUAL, HASH,\n  MULTI_SPACE, PERIOD, PIPE, SEMICOLON, SLASH, SPACE, UNDERSCORE, USER_DEFINED\n}\n\nexport class TransitionDelimiterModel {\n  delimiter: TransitionDelimiter = TransitionDelimiter.SPACE;\n  serializedValue: string = null;\n  prettyName: string = null;\n  actualDelimiter = '';\n\n  constructor(\n    delimiter: TransitionDelimiter, serializedValue: string, prettyName: string, actualDelimiter) {\n    this.delimiter = delimiter;\n    this.serializedValue = serializedValue;\n    this.prettyName = prettyName;\n    this.actualDelimiter = actualDelimiter;\n  }\n}\n\nexport class TransitionModel {\n  static delimiterModels: TransitionDelimiterModel[] = [];\n\n  mode: TransitionMode = TransitionMode.ONE_TO_ONE;\n  delimiter: TransitionDelimiter = TransitionDelimiter.SPACE;\n  userDelimiter = '';\n  lookupTableName: string = null;\n  expression: ExpressionModel;\n  enableExpression = false;\n  transitionFieldAction: FieldAction;\n\n  constructor() {\n    TransitionModel.initialize();\n  }\n\n  static initialize() {\n    if (TransitionModel.delimiterModels.length === 0) {\n      const models: TransitionDelimiterModel[] = [];\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.NONE, null, '[None]', ''));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.AMPERSAND, 'Ampersand', 'Ampersand [&]', '\\&'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.AT_SIGN, 'AtSign', 'At Sign [@]', '\\@'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.BACKSLASH, 'Backslash', 'Backslash [\\\\]', '\\\\'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.COLON, 'Colon', 'Colon [:]', '\\:'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.COMMA, 'Comma', 'Comma [,]', '\\,'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.DASH, 'Dash', 'Dash [-]', '\\-'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.EQUAL, 'Equal', 'Equal [=]', '\\='));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.HASH, 'Hash', 'Hash [#]', '\\#'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.MULTI_SPACE, 'MultiSpace', 'Multi Spaces', '  '));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.PERIOD, 'Period', 'Period [.]', '\\.'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.PIPE, 'Pipe', 'Pipe [|]', '\\|'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SEMICOLON, 'Semicolon', 'Semicolon [;]', '\\;'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SLASH, 'Slash', 'Slash [/]', '\\/'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SPACE, 'Space', 'Space [ ]', ' '));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.UNDERSCORE, 'Underscore', 'Underscore [_]', '\\_'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.USER_DEFINED, 'User defined', 'User defined', ''));\n      TransitionModel.delimiterModels = models;\n    }\n  }\n\n  /**\n   * Translate a mapping mode number into a string.\n   * @param mode\n   */\n  static getMappingModeName(mode: TransitionMode): string {\n    let actionName: string;\n\n    switch (mode) {\n      case TransitionMode.ONE_TO_ONE: {\n        actionName = 'One to One';\n        break;\n      }\n      case TransitionMode.MANY_TO_ONE: {\n        actionName = 'Many to One';\n        break;\n      }\n      case TransitionMode.ONE_TO_MANY: {\n        actionName = 'One to Many';\n        break;\n      }\n      case TransitionMode.ENUM: {\n        actionName = 'ENUM';\n        break;\n      }\n      case TransitionMode.FOR_EACH: {\n        actionName = 'For Each';\n        break;\n      }\n      default: {\n         actionName = '';\n         break;\n      }\n    }\n    return actionName;\n  }\n\n  getPrettyName() {\n    if (this.mode === TransitionMode.ONE_TO_MANY) {\n      return TransitionModel.getMappingModeName(this.mode) + ' (' + this.transitionFieldAction.name + ')';\n    } else if (this.mode === TransitionMode.MANY_TO_ONE) {\n      return TransitionModel.getMappingModeName(this.mode) + ' (' + this.transitionFieldAction.name + ')';\n    } else if (this.mode === TransitionMode.ENUM) {\n      return 'Enum (table: ' + this.lookupTableName + ')';\n    }\n    return TransitionModel.getMappingModeName(this.mode);\n  }\n\n  isOneToManyMode(): boolean {\n    return this.mode === TransitionMode.ONE_TO_MANY;\n  }\n\n  isOneToOneMode(): boolean {\n    return this.mode === TransitionMode.ONE_TO_ONE;\n  }\n\n  isManyToOneMode(): boolean {\n    return this.mode === TransitionMode.MANY_TO_ONE;\n  }\n\n  isForEachMode(): boolean {\n    return this.mode === TransitionMode.FOR_EACH;\n  }\n\n  isEnumerationMode(): boolean {\n    return this.mode === TransitionMode.ENUM;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransitionSelectionComponent.html":{"url":"components/TransitionSelectionComponent.html","title":"component - TransitionSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TransitionSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                transition-selection\n            \n\n\n\n\n            \n                templateUrl\n                ./transition-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configSelectionChanged\n                            \n                            \n                                getMappedValueCount\n                            \n                            \n                                getMultiplicityActionConfigs\n                            \n                            \n                                isIndexArg\n                            \n                            \n                                modeIsEnum\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showLookupTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                cfg\n                            \n                            \n                                mapping\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :         FieldAction\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nconfigSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:155\n                \n            \n\n\n            \n                \n                    A mapping field action configuration selection has been made.  Note that action field arguments, if any,\nmay be specified by either a text field or pull-down menu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedValueCount\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedValueCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMultiplicityActionConfigs\n                        \n                        \n                    \n                \n            \n            \n                \ngetMultiplicityActionConfigs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     FieldActionDefinition[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isIndexArg\n                        \n                        \n                    \n                \n            \n            \n                \nisIndexArg(argVal: string, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            modeIsEnum\n                        \n                        \n                    \n                \n            \n            \n                \nmodeIsEnum()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showLookupTable\n                        \n                        \n                    \n                \n            \n            \n                \nshowLookupTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : DataMapperUtil.toDisplayable\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { TransitionDelimiter, TransitionMode } from '../../models/transition.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { MappingModel } from '../../models/mapping.model';\nimport { ModalWindowComponent } from '../modal-window.component';\nimport { LookupTableComponent } from './lookup-table.component';\nimport { FieldAction, FieldActionDefinition, Multiplicity } from '../../models/field-action.model';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\nimport { LookupTable } from '../../models/lookup-table.model';\n\n@Component({\n  selector: 'transition-selection',\n  templateUrl: './transition-selection.component.html'\n})\n\nexport class TransitionSelectionComponent implements OnInit {\n  @Input() cfg: ConfigModel;\n  @Input() modalWindow: ModalWindowComponent;\n  @Input() mapping: MappingModel;\n  @Input() action: FieldAction;\n\n  getLabel = DataMapperUtil.toDisplayable;\n\n  ngOnInit(): void {\n    const that = this;\n\n    // $(document).ready( function() {\n    jQuery(function() {\n      // Invoke the combobox so it supersedes the stock select.\n      // $('select#separator').combobox({clearIfNoMatch: false});\n\n      $('select#separator').on('change', function() {\n\n        // Check the combobox select.\n        const optionSelected = $(this).find('option:selected');\n        const selectedValue: any = optionSelected.val();\n\n        if (selectedValue) {\n          that.mapping.transition.delimiter = parseInt(selectedValue, 10);\n          that.cfg.mappingService.notifyMappingUpdated();\n          return;\n        }\n        const inputValue: any = $(this).val();\n\n        if (inputValue) {\n          that.mapping.transition.delimiter = TransitionDelimiter.USER_DEFINED;\n          that.mapping.transition.userDelimiter = inputValue;\n          that.cfg.mappingService.notifyMappingUpdated();\n          return;\n        }\n      });\n\n      // Replace the user input when focus is lost.\n      $('.combobox').on('blur', function() {\n\n        if (that.mapping.transition.delimiter === TransitionDelimiter.USER_DEFINED) {\n          $(this).find('option:selected').val(that.mapping.transition.userDelimiter);\n          $(this).val(that.mapping.transition.userDelimiter).trigger('input');\n        }\n      });\n\n      // Check the combobox input text field.\n      /* NOTE: re-enable this function for non-standard delimiters with combobox\n      $('.combobox').on('input', function() {\n\n        const inputValue: any = $(this).val();\n\n        if (inputValue) {\n          if (inputValue.length > 1) {\n            that.cfg.errorService.error('The separator delimiter must be one character in length.', null);\n            return;\n          }\n          that.fieldPair.transition.delimiter = TransitionDelimiter.USER_DEFINED;\n          that.fieldPair.transition.userDelimiter = inputValue;\n          that.cfg.mappingService.updateMappedField(that.fieldPair, false, false);\n        }\n      });\n      */\n    });\n\n  }\n\n  modeIsEnum(): boolean {\n    return this.mapping.transition.isEnumerationMode();\n  }\n\ngetMappedValueCount(): number {\n    const tableName: string = this.mapping.transition.lookupTableName;\n    if (tableName == null) {\n      return 0;\n    }\n    const table: LookupTable = this.cfg.mappings.getTableByName(tableName);\n    if (!table || !table.entries) {\n      return 0;\n    }\n    return table.entries.length;\n  }\n\n  showLookupTable(): void {\n    const mapping: MappingModel = this.cfg.mappings.activeMapping;\n    this.cfg.errorService.clearMappingErrors();\n\n    if (!mapping.isFullyMapped()) {\n      this.cfg.errorService.mappingError('Please select source and target fields before mapping values.', null);\n      return;\n    }\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Finish';\n    this.modalWindow.headerText = 'Map Enumeration Values';\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      const c: LookupTableComponent = mw.nestedComponent as LookupTableComponent;\n      c.initialize(this.cfg, this.mapping);\n    };\n    this.modalWindow.nestedComponentType = LookupTableComponent;\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      const c: LookupTableComponent = mw.nestedComponent as LookupTableComponent;\n      c.saveTable();\n      this.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  getMultiplicityActionConfigs(): FieldActionDefinition[] {\n    if (this.mapping.transition.mode === TransitionMode.ONE_TO_MANY) {\n      return this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, true, Multiplicity.ONE_TO_MANY);\n    } else if (this.mapping.transition.mode === TransitionMode.MANY_TO_ONE) {\n      return this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, true, Multiplicity.MANY_TO_ONE);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * A mapping field action configuration selection has been made.  Note that action field arguments, if any,\n   * may be specified by either a text field or pull-down menu.\n   * @param event\n   */\n  configSelectionChanged(event: any) {\n    const attributes: any = event.target.selectedOptions.item(0).attributes;\n    const selectedActionName: any = attributes.getNamedItem('value').value;\n    const action: FieldAction = this.action;\n    if (action.name !== selectedActionName) {\n      action.argumentValues = [];  // Invalidate the previously selected field action arguments.\n      const multiplicity = this.mapping.transition.mode === TransitionMode.ONE_TO_MANY\n       ? Multiplicity.ONE_TO_MANY : Multiplicity.MANY_TO_ONE;\n      const fieldActionDefinition = this.cfg.fieldActionService.getActionDefinitionForName(selectedActionName, multiplicity);\n      fieldActionDefinition.populateFieldAction(action);\n\n      // If the field action configuration predefines argument values then populate the fields with\n      // default values.  Needed to support pull-down menus in action argument definitions.\n      if (action.argumentValues.values && action.argumentValues.length > 0\n        && fieldActionDefinition.arguments[0] && fieldActionDefinition.arguments[0].values\n        && fieldActionDefinition.arguments[0].values.length > 0) {\n        for (let i = 0; i \n    \n\n    \n        \n\n  \n    {{ getMappedValueCount() }} values mapped\n    \n  \n\n  \n    \n      \n        {{ getLabel(actionConfig.name) }}\n        \n    \n\n    \n      \n\n        \n        \n\n      \n    \n\n\n        \n          \n            {{ mapping.transition.userDelimiter }}\n            {{ delimiter.prettyName }}\n          \n        \n      \n-->\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ getMappedValueCount() }} values mapped                          {{ getLabel(actionConfig.name) }}                                                                              {{ mapping.transition.userDelimiter }}            {{ delimiter.prettyName }}                        -->  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'TransitionSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/atlasmap-navbar.component.ts\n            \n            component\n            AtlasmapNavbarComponent\n            \n                41 %\n                (14/34)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts\n            \n            class\n            DataMapperUtil\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/common/focus.directive.ts\n            \n            directive\n            FocusDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/common/to-error-icon-class.pipe.ts\n            \n            pipe\n            ToErrorIconClassPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/class-name.component.ts\n            \n            component\n            ClassNameComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/collapsable-header.component.ts\n            \n            component\n            CollapsableHeaderComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts\n            \n            component\n            ConstantFieldEditComponent\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/data-mapper-app.component.ts\n            \n            component\n            DataMapperAppComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts\n            \n            component\n            DataMapperErrorComponent\n            \n                30 %\n                (6/20)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts\n            \n            component\n            DataMapperAppExampleHostComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/document-definition.component.ts\n            \n            component\n            DocumentDefinitionComponent\n            \n                19 %\n                (10/51)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts\n            \n            component\n            DocumentFieldDetailComponent\n            \n                3 %\n                (1/27)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/expression.component.ts\n            \n            component\n            ExpressionComponent\n            \n                17 %\n                (8/45)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts\n            \n            component\n            FieldEditComponent\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/line-machine.component.ts\n            \n            component\n            LineMachineComponent\n            \n                6 %\n                (2/31)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/line-machine.component.ts\n            \n            class\n            LineModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts\n            \n            component\n            LookupTableComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts\n            \n            class\n            LookupTableData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts\n            \n            component\n            MappingDetailComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts\n            \n            component\n            MappingFieldActionArgumentComponent\n            \n                35 %\n                (7/20)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts\n            \n            component\n            MappingFieldActionComponent\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts\n            \n            component\n            MappingFieldContainerComponent\n            \n                3 %\n                (1/30)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts\n            \n            component\n            MappingFieldDetailComponent\n            \n                11 %\n                (2/18)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list-field.component.ts\n            \n            component\n            MappingListFieldComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts\n            \n            component\n            MappingListComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts\n            \n            component\n            MappingSelectionSectionComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts\n            \n            component\n            MappingSelectionComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts\n            \n            component\n            TransitionSelectionComponent\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts\n            \n            component\n            ModalErrorWindowComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts\n            \n            interface\n            ModalErrorWindowValidator\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts\n            \n            component\n            EmptyModalBodyComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts\n            \n            component\n            ModalWindowComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts\n            \n            interface\n            ModalWindowValidator\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/namespace-edit.component.ts\n            \n            component\n            NamespaceEditComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts\n            \n            component\n            NamespaceListComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts\n            \n            component\n            PropertyFieldEditComponent\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/template-edit.component.ts\n            \n            component\n            TemplateEditComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                34 %\n                (8/23)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            alertModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            bsDropdownModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            httpClientXsrfModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            loggerModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            tooltipModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            typeaheadModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/config.model.ts\n            \n            class\n            AdmRedrawMappingLinesEvent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/config.model.ts\n            \n            class\n            ConfigModel\n            \n                6 %\n                (3/50)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/config.model.ts\n            \n            class\n            DataMapperInitializationModel\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/config.model.ts\n            \n            class\n            DocumentInitializationModel\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts\n            \n            class\n            DocumentDefinition\n            \n                7 %\n                (4/53)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts\n            \n            class\n            NamespaceModel\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts\n            \n            class\n            PaddingField\n            \n                0 %\n                (0/49)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/error.model.ts\n            \n            class\n            ErrorInfo\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/examples.ts\n            \n            class\n            Examples\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            ExpressionModel\n            \n                20 %\n                (5/24)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            ExpressionNode\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            ExpressionUpdatedEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            FieldNode\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            TextNode\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n            \n            class\n            FieldAction\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n            \n            class\n            FieldActionArgument\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n            \n            class\n            FieldActionArgumentValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n            \n            class\n            FieldActionDefinition\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field.model.ts\n            \n            class\n            EnumValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field.model.ts\n            \n            class\n            Field\n            \n                0 %\n                (0/48)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts\n            \n            class\n            LookupTable\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts\n            \n            class\n            LookupTableEntry\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts\n            \n            class\n            MappingDefinition\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n            \n            class\n            MappedField\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n            \n            class\n            MappedFieldParsingData\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n            \n            class\n            MappingModel\n            \n                11 %\n                (5/43)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n            \n            class\n            TransitionDelimiterModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n            \n            class\n            TransitionModel\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts\n            \n            injectable\n            ApiHttpXsrfTokenExtractor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts\n            \n            interceptor\n            ApiXsrfInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/document-management.service.ts\n            \n            injectable\n            DocumentManagementService\n            \n                23 %\n                (7/30)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts\n            \n            injectable\n            ErrorHandlerService\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/field-action.service.ts\n            \n            injectable\n            FieldActionService\n            \n                36 %\n                (7/19)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/file-management.service.ts\n            \n            injectable\n            FileManagementService\n            \n                52 %\n                (9/17)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/initialization.service.ts\n            \n            injectable\n            InitializationService\n            \n                23 %\n                (5/21)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/mapping-management.service.ts\n            \n            injectable\n            MappingManagementService\n            \n                29 %\n                (11/37)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/utils/lookup-table-util.ts\n            \n            class\n            LookupTableUtil\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/utils/mapping-serializer.ts\n            \n            class\n            MappingSerializer\n            \n                14 %\n                (4/27)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts\n            \n            class\n            MappingUtil\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.trace.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            bootstrap : ^4.1.2\n        \n            chart.js : ^2.5.0\n        \n            classlist.js : ^1.1.20150312\n        \n            core-js : ^2.5.5\n        \n            font-awesome : ^4.7.0\n        \n            jquery : ^3.3.0\n        \n            jquery-match-height : ^0.7.2\n        \n            mkdirp : ^0.5.1\n        \n            moment : ^2.20.1\n        \n            ncp : ^2.0.0\n        \n            ngx-bootstrap : ^3.0.1\n        \n            opn-cli : ^3.1.0\n        \n            patternfly-bootstrap-combobox : ^1.1.6\n        \n            patternfly-ng : ^4.0.0\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ^0.8.26\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CollectionType   (src/.../config.types.ts)\n                        \n                        \n                            DocumentType   (src/.../config.types.ts)\n                        \n                        \n                            ErrorLevel   (src/.../error.model.ts)\n                        \n                        \n                            FieldMode   (src/.../config.types.ts)\n                        \n                        \n                            InspectionType   (src/.../config.types.ts)\n                        \n                        \n                            Multiplicity   (src/.../field-action.model.ts)\n                        \n                        \n                            TransitionDelimiter   (src/.../transition.model.ts)\n                        \n                        \n                            TransitionMode   (src/.../transition.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/lib/atlasmap-data-mapper/common/config.types.ts\n    \n        \n            \n                \n                    \n                        \n                        CollectionType\n                    \n                \n                        \n                            \n                                 ARRAY\n                            \n                        \n                        \n                            \n                                Value : ARRAY\n                            \n                        \n                        \n                            \n                                 LIST\n                            \n                        \n                        \n                            \n                                Value : LIST\n                            \n                        \n                        \n                            \n                                 MAP\n                            \n                        \n                        \n                            \n                                Value : MAP\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : NONE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DocumentType\n                    \n                \n                        \n                            \n                                 JAVA\n                            \n                        \n                        \n                            \n                                Value : JAVA\n                            \n                        \n                        \n                            \n                                 JAVA_ARCHIVE\n                            \n                        \n                        \n                            \n                                Value : JAR\n                            \n                        \n                        \n                            \n                                 XML\n                            \n                        \n                        \n                            \n                                Value : XML\n                            \n                        \n                        \n                            \n                                 XSD\n                            \n                        \n                        \n                            \n                                Value : XSD\n                            \n                        \n                        \n                            \n                                 JSON\n                            \n                        \n                        \n                            \n                                Value : JSON\n                            \n                        \n                        \n                            \n                                 CORE\n                            \n                        \n                        \n                            \n                                Value : Core\n                            \n                        \n                        \n                            \n                                 CSV\n                            \n                        \n                        \n                            \n                                Value : CSV\n                            \n                        \n                        \n                            \n                                 CONSTANT\n                            \n                        \n                        \n                            \n                                Value : Constants\n                            \n                        \n                        \n                            \n                                 PROPERTY\n                            \n                        \n                        \n                            \n                                Value : Property\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FieldMode\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                 EDIT\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        InspectionType\n                    \n                \n                        \n                            \n                                 JAVA_CLASS\n                            \n                        \n                        \n                            \n                                Value : JAVA_CLASS\n                            \n                        \n                        \n                            \n                                 SCHEMA\n                            \n                        \n                        \n                            \n                                Value : SCHEMA\n                            \n                        \n                        \n                            \n                                 INSTANCE\n                            \n                        \n                        \n                            \n                                Value : INSTANCE\n                            \n                        \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : UNKNOWN\n                            \n                        \n            \n        \n\n    src/app/lib/atlasmap-data-mapper/models/error.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorLevel\n                    \n                \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 VALIDATION_ERROR\n                            \n                        \n                        \n                            \n                                 MAPPING_ERROR\n                            \n                        \n            \n        \n\n    src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Multiplicity\n                    \n                \n                        \n                            \n                                 ONE_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : ONE_TO_ONE\n                            \n                        \n                        \n                            \n                                 ONE_TO_MANY\n                            \n                        \n                        \n                            \n                                Value : ONE_TO_MANY\n                            \n                        \n                        \n                            \n                                 MANY_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : MANY_TO_ONE\n                            \n                        \n                        \n                            \n                                 ZERO_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : ZERO_TO_ONE\n                            \n                        \n            \n        \n\n    src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TransitionDelimiter\n                    \n                \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                 AMPERSAND\n                            \n                        \n                        \n                            \n                                 AT_SIGN\n                            \n                        \n                        \n                            \n                                 BACKSLASH\n                            \n                        \n                        \n                            \n                                 COLON\n                            \n                        \n                        \n                            \n                                 COMMA\n                            \n                        \n                        \n                            \n                                 DASH\n                            \n                        \n                        \n                            \n                                 EQUAL\n                            \n                        \n                        \n                            \n                                 HASH\n                            \n                        \n                        \n                            \n                                 MULTI_SPACE\n                            \n                        \n                        \n                            \n                                 PERIOD\n                            \n                        \n                        \n                            \n                                 PIPE\n                            \n                        \n                        \n                            \n                                 SEMICOLON\n                            \n                        \n                        \n                            \n                                 SLASH\n                            \n                        \n                        \n                            \n                                 SPACE\n                            \n                        \n                        \n                            \n                                 UNDERSCORE\n                            \n                        \n                        \n                            \n                                 USER_DEFINED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TransitionMode\n                    \n                \n                        \n                            \n                                 ONE_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : ONE_TO_ONE\n                            \n                        \n                        \n                            \n                                 ONE_TO_MANY\n                            \n                        \n                        \n                            \n                                Value : ONE_TO_MANY\n                            \n                        \n                        \n                            \n                                 ENUM\n                            \n                        \n                        \n                            \n                                Value : ENUM\n                            \n                        \n                        \n                            \n                                 MANY_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : MANY_TO_ONE\n                            \n                        \n                        \n                            \n                                 FOR_EACH\n                            \n                        \n                        \n                            \n                                Value : FOR_EACH\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAtlasMap Data Mapper UI\n\n\n\n\n\nThe AtlasMap is a data mapping solution with interactive web based user interface, that simplifies configuring integrations between Java, XML, and JSON data sources. You can design your data mapping on the AtlasMap Data Mapper UI canvas, and then run that data mapping via runtime engine. AtlasMap Data Mapper UI is primarily designed to work within the Syndesis UI.\nAtlasMap Documentation\nAll developer related documentation can be found at AtlasMap Documentation\nThe shortest path to run standalone AtlasMap\n\nCheckout AtlasMap repo from GitHub\n$ git clone https://github.com/atlasmap/atlasmap ${ATLASMAP}\nBuild AtlasMap runtime\n$ cd ${ATLASMAP}\n$ ./mvnw clean installor you can skip tests to get the build little bit faster\n$ ./mvnw clean install -DskipTests\nRun AtlasMap standalone\n$ cd ${ATLASMAP}/standalone\n$ ../mvnw -Pitests spring-boot:run\n\nThen AtlasMap UI is available at http://127.0.0.1:8585/ by default.\nLive update for UI development\nWhile standalone AtlasMap is running by following above, you can also run an another AtlasMap UI instance at different port by yarn start. This enables live update for UI code so you can see the outcome of your UI code change without build&restart manually.\n\nInstall Yarn\n\nInstall Data Mapper UI's dependencies\n$ cd ${ATLASMAP}/ui\n$ yarn install\nStart Data Mapper UI\n$ yarn start\n\nThe yarn start command will attempt to automatically open your browser window, but if it doesn't, open it directly with this URL: http://localhost:3000.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n            Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        DataMapperModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExampleAppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataMapperModule\n\n\n\ncluster_DataMapperModule_declarations\n\n\n\ncluster_DataMapperModule_exports\n\n\n\ncluster_DataMapperModule_providers\n\n\n\ncluster_ExampleAppModule\n\n\n\ncluster_ExampleAppModule_declarations\n\n\n\ncluster_ExampleAppModule_bootstrap\n\n\n\n\nClassNameComponent\n\nClassNameComponent\n\n\n\nDataMapperModule\n\nDataMapperModule\n\nDataMapperModule -->\n\nClassNameComponent->DataMapperModule\n\n\n\n\n\nCollapsableHeaderComponent\n\nCollapsableHeaderComponent\n\nDataMapperModule -->\n\nCollapsableHeaderComponent->DataMapperModule\n\n\n\n\n\nConstantFieldEditComponent\n\nConstantFieldEditComponent\n\nDataMapperModule -->\n\nConstantFieldEditComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppComponent\n\nDataMapperAppComponent\n\nDataMapperModule -->\n\nDataMapperAppComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppExampleHostComponent\n\nDataMapperAppExampleHostComponent\n\nDataMapperModule -->\n\nDataMapperAppExampleHostComponent->DataMapperModule\n\n\n\n\n\nDataMapperErrorComponent\n\nDataMapperErrorComponent\n\nDataMapperModule -->\n\nDataMapperErrorComponent->DataMapperModule\n\n\n\n\n\nDocumentDefinitionComponent\n\nDocumentDefinitionComponent\n\nDataMapperModule -->\n\nDocumentDefinitionComponent->DataMapperModule\n\n\n\n\n\nDocumentFieldDetailComponent\n\nDocumentFieldDetailComponent\n\nDataMapperModule -->\n\nDocumentFieldDetailComponent->DataMapperModule\n\n\n\n\n\nEmptyModalBodyComponent\n\nEmptyModalBodyComponent\n\nDataMapperModule -->\n\nEmptyModalBodyComponent->DataMapperModule\n\n\n\n\n\nExpressionComponent\n\nExpressionComponent\n\nDataMapperModule -->\n\nExpressionComponent->DataMapperModule\n\n\n\n\n\nFieldEditComponent\n\nFieldEditComponent\n\nDataMapperModule -->\n\nFieldEditComponent->DataMapperModule\n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nDataMapperModule -->\n\nFocusDirective->DataMapperModule\n\n\n\n\n\nLineMachineComponent\n\nLineMachineComponent\n\nDataMapperModule -->\n\nLineMachineComponent->DataMapperModule\n\n\n\n\n\nLookupTableComponent\n\nLookupTableComponent\n\nDataMapperModule -->\n\nLookupTableComponent->DataMapperModule\n\n\n\n\n\nMappingDetailComponent\n\nMappingDetailComponent\n\nDataMapperModule -->\n\nMappingDetailComponent->DataMapperModule\n\n\n\n\n\nMappingFieldActionArgumentComponent\n\nMappingFieldActionArgumentComponent\n\nDataMapperModule -->\n\nMappingFieldActionArgumentComponent->DataMapperModule\n\n\n\n\n\nMappingFieldActionComponent\n\nMappingFieldActionComponent\n\nDataMapperModule -->\n\nMappingFieldActionComponent->DataMapperModule\n\n\n\n\n\nMappingFieldContainerComponent\n\nMappingFieldContainerComponent\n\nDataMapperModule -->\n\nMappingFieldContainerComponent->DataMapperModule\n\n\n\n\n\nMappingFieldDetailComponent\n\nMappingFieldDetailComponent\n\nDataMapperModule -->\n\nMappingFieldDetailComponent->DataMapperModule\n\n\n\n\n\nMappingListComponent\n\nMappingListComponent\n\nDataMapperModule -->\n\nMappingListComponent->DataMapperModule\n\n\n\n\n\nMappingListFieldComponent\n\nMappingListFieldComponent\n\nDataMapperModule -->\n\nMappingListFieldComponent->DataMapperModule\n\n\n\n\n\nMappingSelectionComponent\n\nMappingSelectionComponent\n\nDataMapperModule -->\n\nMappingSelectionComponent->DataMapperModule\n\n\n\n\n\nMappingSelectionSectionComponent\n\nMappingSelectionSectionComponent\n\nDataMapperModule -->\n\nMappingSelectionSectionComponent->DataMapperModule\n\n\n\n\n\nModalErrorWindowComponent\n\nModalErrorWindowComponent\n\nDataMapperModule -->\n\nModalErrorWindowComponent->DataMapperModule\n\n\n\n\n\nModalWindowComponent\n\nModalWindowComponent\n\nDataMapperModule -->\n\nModalWindowComponent->DataMapperModule\n\n\n\n\n\nNamespaceEditComponent\n\nNamespaceEditComponent\n\nDataMapperModule -->\n\nNamespaceEditComponent->DataMapperModule\n\n\n\n\n\nNamespaceListComponent\n\nNamespaceListComponent\n\nDataMapperModule -->\n\nNamespaceListComponent->DataMapperModule\n\n\n\n\n\nPropertyFieldEditComponent\n\nPropertyFieldEditComponent\n\nDataMapperModule -->\n\nPropertyFieldEditComponent->DataMapperModule\n\n\n\n\n\nTemplateEditComponent\n\nTemplateEditComponent\n\nDataMapperModule -->\n\nTemplateEditComponent->DataMapperModule\n\n\n\n\n\nToErrorIconClassPipe\n\nToErrorIconClassPipe\n\nDataMapperModule -->\n\nToErrorIconClassPipe->DataMapperModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nDataMapperModule -->\n\nToolbarComponent->DataMapperModule\n\n\n\n\n\nTransitionSelectionComponent\n\nTransitionSelectionComponent\n\nDataMapperModule -->\n\nTransitionSelectionComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppComponent \n\nDataMapperAppComponent \n\nDataMapperAppComponent  -->\n\nDataMapperModule->DataMapperAppComponent \n\n\n\n\n\nDataMapperAppExampleHostComponent \n\nDataMapperAppExampleHostComponent \n\nDataMapperAppExampleHostComponent  -->\n\nDataMapperModule->DataMapperAppExampleHostComponent \n\n\n\nDataMapperAppExampleHostComponent  -->\n\nDataMapperModule->DataMapperAppExampleHostComponent \n\n\n\n\n\nModalErrorWindowComponent \n\nModalErrorWindowComponent \n\nModalErrorWindowComponent  -->\n\nDataMapperModule->ModalErrorWindowComponent \n\n\n\n\n\nModalWindowComponent \n\nModalWindowComponent \n\nModalWindowComponent  -->\n\nDataMapperModule->ModalWindowComponent \n\n\n\n\n\nExampleAppModule\n\nExampleAppModule\n\nExampleAppModule -->\n\nDataMapperModule->ExampleAppModule\n\n\n\n\n\nDocumentManagementService\n\nDocumentManagementService\n\nDataMapperModule -->\n\nDocumentManagementService->DataMapperModule\n\n\n\n\n\nErrorHandlerService\n\nErrorHandlerService\n\nDataMapperModule -->\n\nErrorHandlerService->DataMapperModule\n\n\n\n\n\nFieldActionService\n\nFieldActionService\n\nDataMapperModule -->\n\nFieldActionService->DataMapperModule\n\n\n\n\n\nFileManagementService\n\nFileManagementService\n\nDataMapperModule -->\n\nFileManagementService->DataMapperModule\n\n\n\n\n\nInitializationService\n\nInitializationService\n\nDataMapperModule -->\n\nInitializationService->DataMapperModule\n\n\n\n\n\nMappingManagementService\n\nMappingManagementService\n\nDataMapperModule -->\n\nMappingManagementService->DataMapperModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nExampleAppModule -->\n\nAppComponent->ExampleAppModule\n\n\n\n\n\nAtlasmapNavbarComponent\n\nAtlasmapNavbarComponent\n\nExampleAppModule -->\n\nAtlasmapNavbarComponent->ExampleAppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nExampleAppModule->AppComponent \n\n\n\n\n\nAtlasmapNavbarComponent \n\nAtlasmapNavbarComponent \n\nAtlasmapNavbarComponent  -->\n\nExampleAppModule->AtlasmapNavbarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    32 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    34 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            alertModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            bsDropdownModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            environment   (src/.../environment.dev.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.trace.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            httpClientXsrfModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            loggerModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            tooltipModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            typeaheadModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            alertModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : AlertModule.forRoot()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bsDropdownModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : BsDropdownModule.forRoot()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpClientXsrfModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : HttpClientXsrfModule.withOptions(environment.xsrf)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggerModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : LoggerModule.forRoot(environment.ngxLoggerConfig)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tooltipModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : TooltipModule.forRoot()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeaheadModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : TypeaheadModule.forRoot()\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.dev.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  ngxLoggerConfig: {\n    level: NgxLoggerLevel.DEBUG,\n    disableConsoleLogging: false\n  },\n  xsrf: {\n    headerName: 'ATLASMAP-XSRF-TOKEN',\n    cookieName: 'ATLASMAP-XSRF-COOKIE',\n    defaultTokenValue: 'awesome',\n  },\n  backendUrls: {\n    atlasServiceUrl: 'http://localhost:8585/v2/atlas/',\n    javaInspectionServiceUrl: 'http://localhost:8585/v2/atlas/java/',\n    xmlInspectionServiceUrl: 'http://localhost:8585/v2/atlas/xml/',\n    jsonInspectionServiceUrl: 'http://localhost:8585/v2/atlas/json/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  ngxLoggerConfig: {\n    level: NgxLoggerLevel.OFF,\n    disableConsoleLogging: true\n  },\n  xsrf: {\n    headerName: 'ATLASMAP-XSRF-TOKEN',\n    cookieName: 'ATLASMAP-XSRF-COOKIE',\n    defaultTokenValue: 'awesome',\n  },\n  backendUrls: {\n    atlasServiceUrl: 'http://localhost:8585/v2/atlas/',\n    javaInspectionServiceUrl: 'http://localhost:8585/v2/atlas/java/',\n    xmlInspectionServiceUrl: 'http://localhost:8585/v2/atlas/xml/',\n    jsonInspectionServiceUrl: 'http://localhost:8585/v2/atlas/json/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.trace.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  ngxLoggerConfig: {\n    level: NgxLoggerLevel.TRACE,\n    disableConsoleLogging: false\n  },\n  xsrf: {\n    headerName: 'ATLASMAP-XSRF-TOKEN',\n    cookieName: 'ATLASMAP-XSRF-COOKIE',\n    defaultTokenValue: 'awesome',\n  },\n  backendUrls: {\n    atlasServiceUrl: 'http://localhost:8585/v2/atlas/',\n    javaInspectionServiceUrl: 'http://localhost:8585/v2/atlas/java/',\n    xmlInspectionServiceUrl: 'http://localhost:8585/v2/atlas/xml/',\n    jsonInspectionServiceUrl: 'http://localhost:8585/v2/atlas/json/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  ngxLoggerConfig: {\n    level: NgxLoggerLevel.INFO,\n    disableConsoleLogging: true\n  },\n  xsrf: {\n    headerName: 'ATLASMAP-XSRF-TOKEN',\n    cookieName: 'ATLASMAP-XSRF-COOKIE',\n    defaultTokenValue: 'awesome',\n  },\n  backendUrls: {\n    atlasServiceUrl: '/v2/atlas/',\n    javaInspectionServiceUrl: '/v2/atlas/java/',\n    xmlInspectionServiceUrl: '/v2/atlas/xml/',\n    jsonInspectionServiceUrl: '/v2/atlas/json/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
