var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/injectables/ApiHttpXsrfTokenExtractor.html",[0,1.993,1,2.648]],["body/injectables/ApiHttpXsrfTokenExtractor.html",[0,3.621,1,4.45,2,3.63,3,0.146,4,0.146,5,0.126,6,0.194,7,0.114,8,5.645,9,4.258,10,2.283,11,6.264,12,5.645,13,6.264,14,5.402,15,5.182,16,6.332,17,5.793,18,4.792,19,6.53,20,3.194,21,1.049,22,0.381,23,0.779,24,0.666,25,5.793,26,0.188,27,0.575,28,1.231,29,1.436,30,0.607,31,6.53,32,0.231,33,5.435,34,0.496,35,0.015,36,0.453,37,3.3,38,5.435,39,0.412,40,0.725,41,4.726,42,5.793,43,5.793,44,6.264,45,5.22,46,3.398,47,3.922,48,1.802,49,0.725,50,0.789,51,0.205,52,0.32,53,1.648,54,6.264,55,4.792,56,3.909,57,3.199,58,4.726,59,5.22,60,5.22,61,0.299,62,3.63,63,4.726,64,4.726,65,3.909,66,3.909,67,4.726,68,4.726,69,2.383,70,3.398,71,3.025,72,4.726,73,4.726,74,4.726,75,4.258,76,2.732,77,3.63,78,4.726,79,5.793,80,0.765,81,4.726,82,4.258,83,4.726,84,4.726,85,3.909,86,4.726,87,4.726,88,0.009,89,0.011,90,0.009]],["title/interceptors/ApiXsrfInterceptor.html",[56,2.852,62,2.648]],["body/interceptors/ApiXsrfInterceptor.html",[0,3.605,1,3.594,3,0.145,4,0.145,5,0.125,6,0.193,7,0.113,8,5.62,9,4.216,10,2.261,11,6.237,12,5.62,13,6.237,14,5.383,15,5.159,16,6.273,17,4.679,18,3.87,19,6.237,20,2.58,21,0.848,22,0.364,23,0.777,24,0.664,25,4.679,26,0.186,27,0.572,28,1.227,29,1.431,30,0.604,31,4.679,32,0.229,34,0.491,35,0.015,36,0.366,37,3.286,39,0.411,40,0.718,41,4.679,42,5.758,43,6.508,44,6.803,45,5.188,46,3.365,47,4.222,48,1.784,49,0.718,50,0.781,51,0.204,52,0.318,53,1.638,54,6.237,55,5.383,56,4.763,57,3.898,58,5.758,59,5.62,60,5.62,61,0.394,62,4.423,63,5.758,64,6.237,65,3.87,66,3.87,67,4.679,68,4.679,69,2.359,70,3.365,71,2.996,72,4.679,73,4.679,74,4.679,75,4.216,76,2.705,77,3.594,78,4.679,79,5.758,80,0.762,81,4.679,82,4.216,83,4.679,84,4.679,85,3.87,86,4.679,87,4.679,88,0.009,89,0.011,90,0.009,91,5.382,92,6.623,93,5.382,94,0.6,95,0.251,96,0.6,97,5.382]],["title/components/AppComponent.html",[98,0.169,99,0.817]],["body/components/AppComponent.html",[3,0.147,4,0.147,5,0.126,7,0.114,21,1.052,35,0.014,39,0.3,40,0.728,51,0.168,52,0.32,61,0.396,88,0.009,89,0.011,90,0.009,98,0.307,99,1.549,100,1.536,101,1.301,102,1.301,103,4.741,104,1.209,105,1.681,106,1.493,107,1.721,108,5.805,109,1.66,110,1.166,111,1.592,112,1.536,113,1.124,114,1.794,115,1.301,116,1.301,117,1.166,118,1.301,119,1.124,120,1.301,121,1.124,122,1.301,123,1.301,124,1.124,125,1.166,126,0.655,127,1.84,128,1.124,129,1.301,130,1.124,131,1.138,132,1.166,133,1.301,134,1.124,135,1.301,136,1.124,137,1.301,138,1.083,139,1.794,140,1.083,141,1.254,142,1.607,143,1.301,144,1.166,145,1.301,146,1.124,147,1.124,148,1.083,149,1.301,150,1.083,151,1.166,152,1.301,153,1.124,154,0.818,155,1.124,156,1.043,157,1.301,158,1.124,159,1.301,160,1.124,161,1.301,162,1.124,163,1.124,164,1.592,165,1.124,166,1.043,167,1.301,168,1.124,169,1.301,170,1.124,171,1.481,172,1.301,173,1.124,174,1.052,175,1.043,176,1.592,177,1.083,178,1.124,179,1.592,180,1.124,181,1.124,182,1.166,183,1.124,184,1.124,185,1.301,186,1.124,187,1.209,188,1.254,189,1.083,190,1.254,191,1.301]],["title/components/ClassNameComponent.html",[98,0.169,119,0.817]],["body/components/ClassNameComponent.html",[3,0.114,4,0.114,5,0.098,6,0.217,7,0.129,15,4.088,21,0.895,22,0.325,23,0.722,24,0.616,26,0.147,27,0.491,28,1.051,29,1.225,30,0.518,32,0.278,34,0.67,35,0.014,36,0.386,37,2.603,39,0.404,40,0.566,49,0.855,50,0.616,51,0.13,52,0.382,53,1.406,61,0.442,88,0.007,89,0.01,90,0.007,94,0.714,95,0.367,96,0.714,98,0.273,99,0.874,100,1.307,101,1.012,102,1.012,104,0.941,105,1.661,106,1.128,107,1.012,109,1.307,110,0.907,111,1.356,112,1.307,113,0.874,114,1.633,115,1.012,116,1.012,117,0.907,118,1.012,119,1.411,120,1.012,121,0.874,122,1.012,123,1.012,124,0.874,125,0.907,126,0.651,127,1.703,128,0.874,129,1.012,130,0.874,131,0.969,132,0.907,133,1.012,134,0.874,135,1.012,136,0.874,137,1.012,138,0.842,139,1.633,140,0.842,141,0.976,142,1.464,143,1.012,144,0.907,145,1.012,146,0.874,147,0.874,148,0.842,149,1.012,150,0.842,151,0.907,152,1.012,153,0.874,154,0.781,155,0.874,156,0.811,157,1.012,158,0.874,159,1.012,160,0.874,161,1.012,162,0.874,163,0.874,164,1.356,165,0.874,166,1.225,167,1.012,168,0.874,169,1.012,170,0.874,171,1.26,172,1.012,173,0.874,174,0.895,175,0.811,176,1.356,177,0.842,178,0.874,179,1.356,180,0.874,181,0.874,182,0.907,183,0.874,184,0.874,185,1.012,186,0.874,187,0.941,188,0.976,189,0.842,190,0.976,191,1.012,192,7.003,193,3.689,194,2.693,195,1.26,196,5.684,197,4.417,198,4.007,199,2.384,200,6.41,201,6.41,202,6.41,203,5.684,204,2.876,205,3.002,206,2.876,207,4.942,208,5.953,209,1.644,210,5.684,211,5.684,212,4.243,213,1.749,214,0.583,215,4.243,216,2.656,217,4.088,218,3.221,219,5.573,220,0.902,221,4.243,222,4.243,223,4.942,224,4.243,225,4.243,226,4.243,227,0.648,228,4.243,229,1.71,230,5.684,231,4.243,232,4.243,233,4.243,234,4.453,235,4.243,236,1.944,237,2.241,238,1.642,239,1.642,240,1.642,241,1.355,242,3.052,243,1.944,244,2.834,245,4.243,246,4.243,247,2.653,248,0.542,249,4.243,250,3.052,251,5.364,252,3.002,253,2.115,254,2.725,255,3.002,256,5.684]],["title/components/CollapsableHeaderComponent.html",[98,0.169,121,0.817]],["body/components/CollapsableHeaderComponent.html",[3,0.135,4,0.135,5,0.116,6,0.203,7,0.125,21,0.999,22,0.255,23,0.508,24,0.434,26,0.174,30,0.578,32,0.253,34,0.578,35,0.014,36,0.472,39,0.276,40,0.67,51,0.154,52,0.304,60,4.97,61,0.401,88,0.009,89,0.011,90,0.009,94,0.56,95,0.296,96,0.56,98,0.296,99,1.035,100,1.459,101,1.198,102,1.198,104,1.114,105,1.675,106,1.259,107,1.198,109,1.459,110,1.074,111,1.513,112,1.459,113,1.035,114,1.742,115,1.198,116,1.198,117,1.074,118,1.198,119,1.035,120,1.198,121,1.505,122,1.797,123,1.198,124,1.035,125,1.074,126,0.645,127,1.797,128,1.035,129,1.198,130,1.035,131,1.081,132,1.074,133,1.198,134,1.035,135,1.198,136,1.035,137,1.198,138,0.997,139,1.742,140,0.997,141,1.155,142,1.561,143,1.198,144,1.074,145,1.198,146,1.035,147,1.035,148,0.997,149,1.198,150,0.997,151,1.074,152,1.198,153,1.035,154,0.806,155,1.035,156,0.96,157,1.198,158,1.035,159,1.198,160,1.035,161,1.198,162,1.035,163,1.035,164,1.513,165,1.035,166,0.96,167,1.198,168,1.035,169,1.198,170,1.035,171,1.407,172,1.198,173,1.035,174,0.999,175,0.96,176,1.513,177,0.997,178,1.035,179,1.513,180,1.035,181,1.035,182,1.074,183,1.035,184,1.035,185,1.198,186,1.035,187,1.114,188,1.155,189,0.997,190,1.155,191,1.198,195,1.407,213,1.546,214,0.518,248,0.81,257,3.036,258,5.417,259,4.367,260,6.344,261,5.722,262,4.97,263,2.36,264,6.045,265,6.548,266,5.023,267,5.023,268,5.023,269,4.97,270,3.495,271,5.023,272,1.658,273,6.953,274,4.367,275,3.531,276,4.367,277,3.935,278,3.14]],["title/components/ConstantFieldEditComponent.html",[98,0.169,124,0.817]],["body/components/ConstantFieldEditComponent.html",[3,0.105,4,0.105,5,0.09,6,0.213,7,0.127,21,0.843,22,0.393,23,0.541,24,0.655,26,0.134,27,0.462,28,1.003,30,0.488,32,0.272,34,0.652,35,0.015,36,0.448,39,0.393,40,0.518,49,0.518,50,0.564,51,0.119,52,0.257,53,1.323,61,0.38,88,0.007,89,0.009,90,0.007,94,0.596,95,0.361,96,0.596,98,0.26,99,0.8,100,1.231,101,0.926,102,0.926,104,0.861,105,1.652,106,1.062,107,0.926,109,1.231,110,0.83,111,1.276,112,1.231,113,0.8,114,1.574,115,0.926,116,0.926,117,0.83,118,0.926,119,0.8,120,0.926,121,0.8,122,0.926,123,0.926,124,1.359,125,1.621,126,0.684,127,1.651,128,0.8,129,0.926,130,0.8,131,0.912,132,0.83,133,0.926,134,0.8,135,0.926,136,0.8,137,0.926,138,0.771,139,1.574,140,0.771,141,0.893,142,1.411,143,0.926,144,0.83,145,0.926,146,0.8,147,0.8,148,0.771,149,0.926,150,0.771,151,0.83,152,0.926,153,0.8,154,0.766,155,0.8,156,0.742,157,0.926,158,0.8,159,0.926,160,0.8,161,0.926,162,0.8,163,0.8,164,1.276,165,0.8,166,0.742,167,0.926,168,0.8,169,0.926,170,0.8,171,1.186,172,0.926,173,0.8,174,0.843,175,0.742,176,1.276,177,1.523,178,0.8,179,1.276,180,0.8,181,0.8,182,0.83,183,0.8,184,0.8,185,0.926,186,0.8,187,0.861,188,0.893,189,0.771,190,0.893,191,0.926,194,2.572,195,1.186,197,4.315,198,3.828,204,2.772,205,2.826,206,2.772,208,5.737,213,1.195,214,0.539,216,2.575,217,3.848,218,3.136,220,0.872,227,0.529,229,1.564,236,1.778,237,2.05,238,1.502,239,1.502,240,1.502,241,1.24,243,1.778,244,4.089,247,2.427,248,0.937,250,2.792,255,3.485,279,6.884,280,2.427,281,2.689,282,3.573,283,5.605,284,5.323,285,4.796,286,5.169,287,4.192,288,3.375,289,3.882,290,5.737,291,3.041,292,3.882,293,3.882,294,1.005,295,4.192,296,4.125,297,5.169,298,4.407,299,4.652,300,3.345,301,1.99,302,4.192,303,3.375,304,3.041,305,1.171,306,3.041,307,2.792,308,4.652,309,3.041,310,3.041,311,3.041,312,2.792,313,1.951,314,4.796,315,3.041,316,5.323,317,3.375,318,4.652,319,2.689,320,2.792,321,4.652,322,4.652,323,2.792,324,6.122,325,2.792,326,3.041,327,3.041,328,3.041,329,3.041,330,3.882,331,3.882,332,3.375,333,2.593,334,4.652,335,4.652,336,3.982,337,3.163,338,4.192,339,4.192,340,3.573,341,2.978,342,2.978,343,2.826,344,3.673,345,3.673,346,4.192,347,3.573,348,4.192,349,4.192,350,4.192,351,4.192,352,5.852]],["title/components/DataMapperAppComponent.html",[98,0.169,128,0.817]],["body/components/DataMapperAppComponent.html",[3,0.082,4,0.082,5,0.105,6,0.213,7,0.129,21,0.712,22,0.155,23,0.543,24,0.464,26,0.106,27,0.39,28,1.084,30,0.412,32,0.272,34,0.54,35,0.015,36,0.208,37,1.403,39,0.425,40,0.409,48,1.015,49,0.716,50,0.445,51,0.094,52,0.217,53,1.117,61,0.325,69,1.342,88,0.005,89,0.008,90,0.005,94,0.341,95,0.352,96,0.341,98,0.228,99,0.631,100,1.039,101,1.078,102,0.73,104,0.679,105,1.627,106,0.897,107,0.73,109,1.039,110,0.655,111,1.078,112,1.039,113,0.631,114,1.413,115,0.73,116,0.73,117,0.655,118,0.73,119,0.631,120,0.73,121,0.631,122,0.73,123,0.73,124,0.631,125,0.966,126,0.61,127,1.507,128,1.221,129,0.73,130,0.631,131,1.4,132,0.655,133,0.73,134,1.362,135,0.73,136,1.362,137,0.73,138,0.608,139,1.413,140,0.608,141,0.704,142,1.267,143,0.73,144,0.655,145,0.73,146,0.631,147,1.409,148,1.176,149,0.73,150,0.608,151,0.655,152,0.73,153,1.409,154,0.776,155,0.631,156,0.586,157,0.73,158,0.631,159,0.73,160,0.631,161,0.73,162,0.631,163,0.631,164,1.078,165,0.631,166,0.586,167,0.73,168,0.631,169,0.73,170,0.631,171,1.002,172,0.73,173,0.631,174,1.041,175,1.133,176,1.078,177,1.176,178,0.631,179,1.28,180,0.631,181,0.631,182,0.966,183,0.631,184,1.409,185,0.73,186,0.631,187,0.679,188,0.704,189,0.608,190,0.704,191,0.73,195,1.002,209,0.785,214,0.516,227,0.39,229,2.829,236,1.403,240,1.749,241,1.443,248,0.757,252,2.386,272,1.28,277,2.399,281,2.978,343,1.618,353,4.518,354,6.183,355,2.663,356,2.458,357,2.835,358,4.518,359,4.518,360,4.518,361,4.518,362,4.518,363,5.368,364,4.518,365,2.069,366,3.487,367,4.667,368,4.667,369,5.368,370,5.368,371,5.368,372,5.368,373,4.642,374,4.95,375,3.585,376,2.988,377,5.368,378,4.642,379,3.298,380,2.714,381,5.151,382,2.663,383,3.719,384,4.518,385,3.063,386,3.063,387,3.063,388,3.063,389,3.063,390,4.518,391,3.063,392,4.518,393,3.063,394,4.518,395,3.063,396,3.063,397,3.063,398,3.337,399,4.518,400,3.063,401,4.205,402,3.063,403,4.518,404,3.063,405,4.518,406,3.063,407,4.518,408,3.063,409,3.063,410,4.518,411,3.063,412,3.063,413,3.063,414,2.663,415,2.399,416,2.663,417,2.399,418,1.539,419,2.399,420,1.803,421,3.063,422,3.063,423,3.063,424,3.063,425,3.063,426,3.063,427,3.063,428,2.514,429,2.045,430,1.539,431,3.063,432,3.063,433,3.063,434,0.74,435,3.063,436,3.063,437,3.063,438,3.063,439,3.063,440,2.203,441,3.063,442,1.139,443,3.063,444,3.063,445,3.017,446,3.063,447,3.063,448,3.063,449,3.063,450,3.063,451,3.928,452,3.063,453,0.757,454,2.203,455,1.539,456,3.063,457,2.399,458,2.399,459,2.399,460,2.203,461,3.86,462,2.203,463,4.567,464,2.203,465,3.249,466,2.045,467,2.203,468,2.203,469,1.915,470,2.203,471,2.203,472,1.618,473,1.915,474,2.203,475,2.203,476,2.203,477,2.203,478,3.249,479,2.203,480,2.203,481,2.203,482,2.203,483,2.203,484,2.203,485,1.915,486,2.045,487,2.203,488,2.203,489,2.203,490,2.203,491,3.063,492,3.063,493,3.063,494,3.063,495,3.063,496,3.063,497,3.063,498,3.063,499,3.063,500,3.063,501,3.063,502,3.063,503,3.063,504,3.063,505,5.368,506,4.518,507,3.063,508,3.063,509,7.165,510,4.642,511,1.803,512,6.23,513,4.667,514,3.063,515,6.319,516,3.063,517,3.063,518,3.063,519,3.86,520,3.063,521,4.518,522,2.714,523,3.063,524,3.063,525,3.063,526,5.151,527,4.518,528,5.368,529,3.928,530,5.368,531,3.063,532,3.063,533,3.063,534,3.063,535,3.063,536,8.046,537,6.838,538,4.95,539,3.585,540,2.663,541,5.494,542,3.063,543,6.319,544,2.573,545,5.368,546,3.063,547,3.063,548,3.063,549,3.063,550,3.063,551,4.518,552,4.518,553,4.518,554,3.063,555,4.518,556,3.063,557,3.063,558,3.063,559,3.063,560,3.063,561,3.063,562,3.063,563,3.063,564,6.612,565,3.063,566,3.063,567,3.063,568,6.319,569,6.319,570,1.803,571,3.063,572,3.063,573,3.487,574,3.063,575,2.663,576,3.063,577,5.368,578,4.518,579,3.063,580,4.518,581,3.063,582,5.925,583,2.659,584,3.928,585,1.705,586,4.518,587,3.063,588,3.063,589,3.063,590,2.663,591,3.063,592,5.925,593,4.518,594,5.925,595,4.518,596,5.925,597,3.928,598,4.518,599,3.928,600,5.925,601,5.925,602,3.539,603,4.518,604,2.663,605,3.063,606,3.063,607,2.663,608,5.368,609,3.063,610,1.803,611,3.063,612,3.063]],["title/components/DataMapperAppExampleHostComponent.html",[98,0.169,130,0.817]],["body/components/DataMapperAppExampleHostComponent.html",[3,0.123,4,0.123,5,0.106,6,0.19,7,0.125,21,0.942,26,0.159,27,0.516,30,0.545,32,0.23,34,0.418,35,0.015,39,0.431,40,0.611,49,0.798,50,0.665,51,0.141,52,0.319,53,1.479,61,0.388,71,2.55,80,0.487,88,0.008,89,0.01,90,0.008,94,0.51,95,0.279,96,0.51,98,0.283,99,0.944,100,1.375,101,1.093,102,1.093,104,1.016,105,1.668,106,1.187,107,1.093,109,1.531,110,0.979,111,1.426,112,1.375,113,0.944,114,1.683,115,1.093,116,1.093,117,0.979,118,1.093,119,0.944,120,1.093,121,0.944,122,1.093,123,1.093,124,0.944,125,0.979,126,0.633,127,1.746,128,1.454,129,1.093,130,1.454,131,1.337,132,1.635,133,1.093,134,0.944,135,1.093,136,0.944,137,1.093,138,0.909,139,1.683,140,0.909,141,1.054,142,1.508,143,1.093,144,0.979,145,1.093,146,0.944,147,0.944,148,0.909,149,1.093,150,0.909,151,0.979,152,1.093,153,0.944,154,0.8,155,0.944,156,0.876,157,1.093,158,0.944,159,1.093,160,0.944,161,1.093,162,0.944,163,0.944,164,1.426,165,0.944,166,0.876,167,1.093,168,0.944,169,1.093,170,0.944,171,1.326,172,1.093,173,0.944,174,0.942,175,0.876,176,1.426,177,0.909,178,0.944,179,1.426,180,0.944,181,0.944,182,0.979,183,0.944,184,0.944,185,1.093,186,0.944,187,1.016,188,1.054,189,0.909,190,1.054,191,1.093,205,3.727,209,1.175,214,0.374,227,0.396,229,1.846,236,2.098,248,0.764,300,3.738,356,3.049,357,2.42,380,3.232,455,2.302,613,6.135,614,3.983,615,4.3,616,4.162,617,2.683,618,3.918,619,5.98,620,6.657,621,4.581,622,4.693,623,5.98,624,4.581,625,5.98,626,2.302,627,2.196,628,3.295,629,3.994,630,3.295,631,3.295,632,4.581,633,3.589,634,3.295,635,3.295,636,4.581,637,2.008,638,4.3,639,3.983,640,2.696,641,4.581,642,5.98,643,4.581,644,3.589,645,2.864,646,2.696,647,4.581,648,4.581,649,3.52,650,4.581,651,4.581,652,4.581,653,4.581,654,4.581,655,4.581,656,4.581,657,4.581,658,4.581,659,3.589,660,4.581,661,3.589,662,4.581,663,3.589,664,4.581,665,3.589,666,2.098,667,4.684,668,3.589,669,4.581,670,4.581,671,4.581,672,4.581,673,4.581,674,4.581,675,4.581,676,3.589,677,3.295,678,1.578,679,3.589,680,3.589,681,3.295,682,3.589,683,4.581,684,2.864,685,3.589,686,3.983,687,4.581,688,3.589,689,3.589,690,3.295,691,4.581,692,3.983,693,4.581,694,4.581,695,4.581]],["title/components/DataMapperErrorComponent.html",[98,0.169,134,0.817]],["body/components/DataMapperErrorComponent.html",[3,0.094,4,0.094,5,0.081,6,0.217,7,0.129,20,3.814,21,0.781,22,0.369,23,0.672,24,0.574,26,0.121,27,0.428,28,1.285,29,1.104,30,0.452,32,0.278,34,0.699,35,0.015,37,1.596,39,0.38,40,0.465,48,1.155,49,0.771,50,0.506,51,0.107,52,0.238,53,1.227,61,0.38,88,0.006,89,0.008,90,0.006,94,0.644,95,0.35,96,0.644,98,0.246,99,0.718,100,1.141,101,0.831,102,0.831,104,0.773,105,1.641,106,0.985,107,0.831,109,1.141,110,0.745,111,1.183,112,1.141,113,0.718,114,1.501,115,0.831,116,0.831,117,0.745,118,0.831,119,0.718,120,0.831,121,0.718,122,0.831,123,0.831,124,0.718,125,0.745,126,0.593,127,1.586,128,0.718,129,0.831,130,0.718,131,1.391,132,0.745,133,0.831,134,1.296,135,0.831,136,0.718,137,0.831,138,0.692,139,1.501,140,0.692,141,0.801,142,1.639,143,0.831,144,0.745,145,0.831,146,0.718,147,0.718,148,0.692,149,0.831,150,0.692,151,0.745,152,0.831,153,0.718,154,0.748,155,0.718,156,0.666,157,0.831,158,0.718,159,0.831,160,0.718,161,0.831,162,0.718,163,0.718,164,1.183,165,0.718,166,0.666,167,0.831,168,0.718,169,0.831,170,0.718,171,1.1,172,0.831,173,0.718,174,1.267,175,1.203,176,1.183,177,0.692,178,0.718,179,1.183,180,0.718,181,0.718,182,0.745,183,0.718,184,0.718,185,0.831,186,0.718,187,0.773,188,0.801,189,0.692,190,0.801,191,0.831,195,1.1,213,2.127,214,0.612,220,0.579,227,0.648,240,1.348,241,1.113,248,0.634,251,4.93,263,1.845,270,3.474,272,1.378,294,0.966,301,1.845,354,6.301,356,2.645,357,3.051,375,3.857,379,3.503,380,2.882,398,3.051,428,1.939,434,0.571,599,5.471,617,2.328,626,1.751,627,1.67,696,3.029,697,4.96,698,5.022,699,4.049,700,5.022,701,5.776,702,5.776,703,6.293,704,4.203,705,6.293,706,6.293,707,5.471,708,4.526,709,4.96,710,4.96,711,4.96,712,6.293,713,3.857,714,3.484,715,3.484,716,3.484,717,4.96,718,3.484,719,1.959,720,3.484,721,5.471,722,3.654,723,2.536,724,5.471,725,4.203,726,3.484,727,4.312,728,5.415,729,3.484,730,3.484,731,4.96,732,3.484,733,2.729,734,4.96,735,3.484,736,6.293,737,2.536,738,6.293,739,4.96,740,4.96,741,3.886,742,4.96,743,4.96,744,2.919,745,5.471,746,4.96,747,3.484,748,2.919,749,4.96,750,4.96,751,3.567,752,3.484,753,3.484,754,3.484,755,3.886,756,3.484,757,3.484,758,3.484,759,3.484,760,3.484,761,3.484,762,1.2,763,1.113,764,1.84,765,4.312,766,3.484,767,2.051,768,3.029,769,3.484,770,6.293,771,2.327,772,3.915,773,3.484,774,1.404,775,2.178,776,2.327,777,3.484,778,3.484,779,2.729,780,1.471,781,5.776,782,3.029,783,3.029,784,3.029,785,3.484,786,3.484,787,3.484,788,3.484,789,3.484,790,3.484,791,3.484,792,3.484,793,4.312,794,4.96,795,4.96]],["title/classes/DataMapperInitializationModel.html",[52,0.19,796,2.852]],["body/classes/DataMapperInitializationModel.html",[3,0.087,4,0.087,5,0.075,6,0.218,7,0.128,10,1.357,21,0.872,22,0.406,23,0.783,24,0.669,26,0.112,27,0.478,28,0.529,29,1.058,32,0.279,35,0.015,36,0.559,39,0.419,40,0.431,49,0.899,51,0.17,52,0.291,61,0.177,70,3.46,71,1.798,80,0.803,88,0.006,89,0.008,90,0.006,95,0.363,125,0.69,154,0.327,182,0.69,197,2.765,199,2.402,209,1.559,214,0.383,218,3.483,220,0.891,227,0.558,234,2.53,238,1.818,242,4.371,243,1.479,248,1.036,254,1.548,294,1.085,300,2.019,305,1.235,313,2.361,333,2.157,374,4.336,378,2.53,401,3.68,616,2.937,617,1.893,618,2.765,622,3.46,626,1.623,627,1.548,628,2.323,629,3.697,630,2.323,631,2.323,634,2.323,638,2.323,646,1.901,649,1.901,659,2.53,661,2.53,663,2.53,665,2.53,666,1.479,667,2.53,676,4.761,677,4.371,678,1.112,679,2.53,680,2.53,681,2.323,682,2.53,688,2.53,689,2.53,690,2.323,713,2.157,719,0.799,722,2.782,763,1.032,780,1.393,796,4.371,797,0.828,798,2.53,799,4.812,800,4.812,801,4.812,802,4.812,803,4.812,804,4.812,805,4.812,806,4.812,807,4.812,808,4.812,809,4.812,810,4.812,811,4.812,812,4.812,813,4.812,814,4.812,815,4.812,816,4.812,817,4.812,818,4.812,819,4.812,820,4.697,821,1.343,822,3.23,823,3.23,824,3.23,825,3.23,826,3.23,827,3.23,828,3.23,829,3.23,830,4.084,831,3.23,832,3.23,833,3.23,834,3.23,835,3.23,836,3.23,837,3.23,838,3.23,839,3.23,840,3.23,841,3.23,842,3.23,843,3.23,844,3.23,845,3.23,846,2.808,847,3.137,848,2.808,849,2.019,850,3.137,851,2.614,852,3.258,853,3.258,854,2.53,855,2.53,856,2.765,857,2.53,858,2.808,859,2.808,860,2.808,861,2.019,862,2.808,863,2.808,864,2.808,865,2.808,866,2.808,867,2.808,868,3.46,869,1.706,870,2.53,871,2.53,872,2.53,873,2.53,874,4.084,875,2.063,876,2.808,877,2.808,878,2.808,879,2.808,880,2.808,881,2.808,882,2.808,883,2.808,884,2.808,885,1.548,886,2.157,887,2.53,888,2.808,889,2.53,890,2.53,891,2.808,892,2.157,893,2.53,894,2.53,895,2.808,896,2.808,897,2.808,898,2.808,899,2.808,900,2.808,901,2.808,902,2.808,903,2.808,904,2.808,905,1.479,906,2.808,907,2.808,908,2.808,909,2.157,910,2.808,911,2.808,912,2.808,913,2.808,914,2.808,915,2.53,916,2.808,917,2.808,918,4.084,919,2.808,920,1.416,921,2.808,922,5.284,923,2.808,924,2.808,925,2.53,926,2.808,927,2.53,928,2.808,929,2.808,930,2.808,931,2.53,932,2.808,933,2.808,934,2.808,935,5.284,936,2.808,937,5.614,938,2.808,939,2.808,940,2.808,941,2.808,942,2.808,943,2.808,944,4.084,945,2.808,946,2.808,947,2.808,948,2.808,949,4.084,950,2.808,951,2.808,952,2.808,953,2.808,954,2.808,955,2.808,956,5.858,957,4.812,958,2.323,959,4.084,960,2.019,961,2.808,962,4.336,963,2.808,964,4.812,965,4.084,966,2.808,967,2.808,968,2.808,969,4.084,970,2.808,971,2.808,972,2.808,973,2.808,974,2.808,975,4.084,976,4.084,977,2.808,978,4.371,979,4.084,980,4.084,981,2.808,982,2.808,983,1.901,984,2.019,985,2.323,986,2.53,987,2.808,988,2.614,989,3.68,990,4.644,991,2.808,992,2.808,993,1.623,994,2.808,995,2.323,996,1.479,997,1.798,998,2.808,999,2.808,1000,2.808,1001,2.808,1002,2.808,1003,4.812,1004,4.812,1005,2.808,1006,2.808,1007,2.808,1008,2.808,1009,3.378,1010,2.808,1011,2.808,1012,2.53,1013,2.808,1014,2.157,1015,2.808,1016,2.808,1017,2.808,1018,2.808]],["title/modules/DataMapperModule.html",[1019,2.648,1020,2.648]],["body/modules/DataMapperModule.html",[1,3.747,3,0.089,4,0.089,5,0.111,6,0.129,7,0.076,22,0.168,30,0.302,32,0.115,34,0.302,35,0.015,39,0.457,40,0.441,45,3.744,46,2.068,49,0.441,50,0.48,51,0.245,52,0.159,62,3.747,69,1.45,71,1.841,80,0.722,88,0.006,89,0.008,90,0.006,110,0.707,119,1.477,121,1.4,124,1.477,126,0.572,128,1.579,130,1.612,131,1.048,132,0.707,134,1.4,136,1.4,138,1.348,140,1.423,144,1.452,146,1.477,147,1.4,150,1.423,153,1.4,155,1.4,156,0.633,158,1.4,160,1.4,162,1.4,163,1.4,165,1.4,166,0.633,168,1.477,170,1.4,171,0.734,173,1.4,174,0.884,175,1.452,177,1.507,178,1.477,180,1.4,181,1.477,183,1.477,184,1.4,186,1.4,189,1.348,218,1.45,237,1.747,238,1.85,241,1.526,243,1.515,248,0.423,253,1.778,258,2.379,294,0.48,313,1.663,414,2.876,415,2.592,417,2.592,418,3.52,419,4.815,445,2.209,454,2.379,455,1.663,457,2.592,458,2.592,459,2.592,460,2.379,461,4.035,462,2.379,463,4.678,464,2.379,465,3.437,466,2.209,467,2.379,468,2.379,469,2.068,470,2.379,471,2.379,472,1.747,473,2.068,474,2.379,475,2.379,476,2.379,477,2.379,478,3.437,479,2.379,480,2.379,481,2.379,482,2.379,483,2.379,484,2.379,485,2.068,486,2.209,487,2.379,488,2.379,489,2.379,490,2.379,615,4.688,616,4.568,617,2.945,618,4.3,622,4.568,626,2.402,627,2.291,628,3.437,629,4.354,630,3.437,631,3.437,633,3.744,634,2.379,748,1.947,847,3.192,849,2.988,850,2.209,851,1.841,852,1.947,853,4.221,854,2.592,855,2.592,856,4.221,857,2.592,868,2.068,875,1.418,996,1.515,1019,3.192,1020,5.646,1021,2.209,1022,2.068,1023,4.396,1024,4.42,1025,4.396,1026,2.876,1027,2.876,1028,2.876,1029,2.876,1030,4.537,1031,3.744,1032,3.437,1033,2.592,1034,4.779,1035,4.779,1036,5.611,1037,5.611,1038,3.308,1039,2.876,1040,5.343,1041,6.089,1042,4.779,1043,3.308,1044,4.779,1045,2.379,1046,3.308,1047,4.155,1048,3.308,1049,4.779,1050,4.155,1051,4.779,1052,2.876,1053,4.779,1054,3.308,1055,3.308,1056,3.308,1057,3.308,1058,3.308,1059,3.308,1060,5.611,1061,5.611,1062,3.308,1063,3.308,1064,4.688,1065,3.308,1066,3.308,1067,3.308,1068,7.662,1069,2.876,1070,4.779,1071,3.308,1072,3.308,1073,3.308,1074,3.308,1075,3.437,1076,4.779,1077,3.308,1078,2.592,1079,3.308,1080,3.308,1081,3.308,1082,4.155,1083,2.876,1084,2.379,1085,2.876,1086,2.592,1087,3.308,1088,3.308,1089,3.308,1090,3.308,1091,4.779,1092,4.779,1093,2.592,1094,0.912,1095,1.184,1096,2.876,1097,3.308,1098,3.308,1099,3.308,1100,2.209,1101,3.308,1102,3.744,1103,2.876,1104,3.744,1105,2.876,1106,3.744,1107,2.876,1108,3.744,1109,2.876,1110,3.744,1111,2.876,1112,3.744,1113,2.876,1114,3.308,1115,2.592,1116,4.155,1117,4.779,1118,3.744]],["title/classes/DataMapperUtil.html",[52,0.19,1119,1.738]],["body/classes/DataMapperUtil.html",[3,0.116,4,0.154,5,0.183,6,0.212,7,0.125,10,1.804,22,0.393,23,0.579,24,0.495,26,0.223,27,0.495,30,0.522,32,0.271,34,0.697,35,0.015,36,0.56,39,0.236,51,0.132,52,0.206,61,0.436,76,3.602,77,3.826,80,0.685,88,0.007,89,0.01,90,0.007,94,0.852,95,0.364,96,0.852,131,1.344,213,1.763,220,0.669,227,0.495,248,0.732,253,2.131,305,1.315,337,2.058,434,1.057,453,1.062,510,3.364,544,2.746,583,3.372,666,2.624,678,2.693,751,4.12,780,2.126,797,1.101,821,1.967,875,2.458,1119,2.511,1120,6.856,1121,3.088,1122,6.447,1123,6.447,1124,5.729,1125,5.499,1126,5.729,1127,4.981,1128,5.729,1129,5.729,1130,5.729,1131,5.729,1132,5.729,1133,5.729,1134,4.293,1135,5.729,1136,4.293,1137,4.293,1138,5.729,1139,4.293,1140,4.293,1141,3.364,1142,4.293,1143,5.729,1144,5.729,1145,4.293,1146,3.088,1147,4.293,1148,2.39,1149,5.729,1150,6.127,1151,4.293,1152,3.826,1153,4.981,1154,4.981,1155,2.662,1156,5.606,1157,5.154,1158,4.293,1159,4.293,1160,5.606,1161,5.729,1162,5.389,1163,4.293,1164,4.488,1165,4.293,1166,5.729,1167,4.293,1168,3.733,1169,2.867,1170,4.293,1171,4.293,1172,4.293,1173,3.733,1174,2.867,1175,3.733,1176,5.729,1177,4.293,1178,5.729,1179,5.729,1180,4.981,1181,4.981,1182,7.167,1183,5.729,1184,5.614,1185,7.167,1186,4.293,1187,4.981,1188,4.981,1189,5.729,1190,4.981,1191,5.729,1192,5.729,1193,4.488,1194,4.293,1195,4.293,1196,4.293,1197,4.293,1198,4.637,1199,4.637,1200,5.729,1201,5.729,1202,4.293,1203,5.729,1204,4.293,1205,4.293,1206,4.293,1207,4.293,1208,3.364,1209,4.293,1210,1.73,1211,4.293,1212,4.293,1213,4.293,1214,6.447,1215,4.293,1216,5.729,1217,4.293,1218,3.364]],["title/components/DocumentFieldDetailComponent.html",[98,0.169,138,0.787]],["body/components/DocumentFieldDetailComponent.html",[3,0.111,4,0.073,5,0.116,6,0.215,7,0.128,21,1.036,22,0.402,23,0.276,24,0.235,26,0.094,27,0.357,28,0.82,29,0.957,30,0.456,32,0.276,34,0.701,35,0.015,36,0.501,39,0.389,40,0.364,49,0.668,50,0.396,51,0.084,52,0.199,61,0.41,75,2.135,80,0.805,88,0.005,89,0.009,90,0.009,94,0.789,95,0.353,96,0.789,98,0.213,99,0.561,100,0.952,101,0.65,102,0.65,104,0.604,105,1.612,106,0.822,107,0.65,108,2.37,109,0.952,110,0.583,111,0.987,112,0.952,113,0.561,114,1.333,115,0.65,116,0.65,117,0.583,118,0.65,119,0.561,120,0.65,121,0.561,122,0.65,123,0.65,124,1.355,125,1.07,126,0.679,127,1.434,128,0.561,129,0.65,130,0.561,131,0.706,132,0.583,133,0.65,134,0.561,135,0.65,136,0.561,137,0.65,138,1.378,139,1.333,140,0.541,141,0.627,142,1.195,143,0.65,144,0.583,145,0.65,146,1.355,147,1.152,148,0.541,149,0.65,150,0.541,151,0.583,152,0.65,153,0.561,154,0.702,155,0.561,156,0.521,157,0.65,158,0.561,159,0.65,160,0.561,161,0.65,162,0.561,163,0.561,164,0.987,165,0.561,166,0.792,167,0.65,168,0.561,169,0.65,170,0.561,171,0.918,172,0.65,173,0.561,174,0.652,175,0.521,176,0.987,177,1.306,178,0.561,179,0.987,180,0.561,181,1.355,182,1.07,183,0.561,184,0.561,185,0.65,186,0.561,187,0.604,188,0.627,189,0.541,190,0.627,191,0.65,195,0.918,209,0.699,213,2.295,214,0.619,216,1.862,220,0.811,227,0.568,229,1.668,236,1.248,239,1.055,240,1.055,241,0.87,243,1.248,248,0.932,255,1.439,261,4.38,262,3.243,263,1.54,269,3.243,270,3.489,272,1.434,274,2.37,275,4.278,276,2.37,277,2.135,278,1.704,281,2.516,294,0.396,296,1.704,313,1.37,319,2.516,323,1.96,325,2.977,326,3.243,329,4.38,373,3.922,376,2.786,415,2.135,434,0.82,451,2.37,455,1.37,510,3.243,512,2.37,513,2.37,522,1.248,585,2.304,602,4.38,637,1.195,644,3.243,684,2.588,725,1.82,771,1.82,772,1.604,780,0.808,920,1.195,990,1.82,1014,1.82,1045,1.96,1064,3.6,1219,6.947,1220,1.82,1221,2.977,1222,2.977,1223,5.006,1224,5.006,1225,4.352,1226,3.599,1227,3.599,1228,4.14,1229,3.599,1230,5.591,1231,5.591,1232,4.14,1233,5.591,1234,5.591,1235,5.591,1236,5.591,1237,5.591,1238,5.591,1239,3.599,1240,4.14,1241,3.599,1242,3.243,1243,2.423,1244,2.725,1245,4.861,1246,4.14,1247,3.599,1248,2.37,1249,2.725,1250,2.135,1251,2.37,1252,3.599,1253,2.725,1254,3.599,1255,4.861,1256,2.725,1257,4.14,1258,2.725,1259,3.599,1260,2.37,1261,2.725,1262,2.725,1263,2.725,1264,4.14,1265,2.725,1266,2.725,1267,2.725,1268,2.725,1269,2.725,1270,2.725,1271,4.352,1272,2.725,1273,2.725,1274,4.14,1275,2.588,1276,4.14,1277,4.14,1278,5.591,1279,4.14,1280,4.14,1281,4.14,1282,2.725,1283,4.14,1284,2.725,1285,3.599,1286,2.37,1287,2.644,1288,4.14,1289,2.135,1290,4.14,1291,2.725,1292,2.725,1293,2.725,1294,1.439,1295,1.82,1296,2.725,1297,2.725,1298,2.725,1299,2.725,1300,6.579,1301,2.725,1302,3.599,1303,2.37,1304,2.725,1305,2.725,1306,2.725,1307,4.352,1308,2.725,1309,2.37,1310,2.37,1311,2.725,1312,2.725,1313,2.37,1314,2.725,1315,2.37,1316,2.725,1317,2.725,1318,2.725,1319,2.135,1320,2.37,1321,2.37,1322,2.37,1323,2.37,1324,4.71,1325,5.006,1326,5.503,1327,3.243,1328,4.021,1329,4.14,1330,2.725,1331,2.725,1332,4.14,1333,4.14,1334,4.14,1335,2.725,1336,2.588,1337,2.725,1338,2.725,1339,2.725,1340,2.37,1341,1.82,1342,3.599,1343,5.006,1344,2.135,1345,2.37,1346,2.725,1347,5.591,1348,4.14,1349,2.725,1350,5.006,1351,2.37,1352,2.725,1353,2.725,1354,4.552,1355,2.725,1356,2.37,1357,2.37,1358,1.82,1359,2.135,1360,2.725,1361,4.861,1362,4.352,1363,2.725,1364,2.725,1365,2.725,1366,2.725,1367,2.725,1368,2.725,1369,2.725,1370,1.439,1371,1.82,1372,1.704,1373,1.82,1374,2.725,1375,5.006,1376,2.725,1377,2.977,1378,3.599,1379,2.765,1380,2.765,1381,5.227,1382,4.14,1383,5.227,1384,2.725,1385,3.343,1386,1.82,1387,3.343,1388,4.14,1389,4.228,1390,2.725,1391,3.599,1392,4.14,1393,2.725,1394,4.14,1395,2.725,1396,2.725,1397,2.725,1398,1.82,1399,2.765,1400,5.591,1401,2.725,1402,2.725,1403,2.725,1404,2.725,1405,2.725,1406,3.599,1407,2.765,1408,2.525,1409,2.725,1410,1.96,1411,1.82,1412,1.82,1413,2.725,1414,2.725,1415,2.725,1416,2.725,1417,2.725,1418,2.37,1419,2.725,1420,2.725,1421,2.588,1422,5.591]],["title/classes/DocumentInitializationModel.html",[52,0.19,868,2.479]],["body/classes/DocumentInitializationModel.html",[3,0.094,4,0.094,5,0.081,6,0.208,7,0.122,10,2.425,21,0.909,22,0.409,23,0.352,24,0.301,26,0.12,27,0.498,28,0.57,29,1.104,32,0.265,35,0.015,36,0.557,39,0.425,40,0.464,49,0.922,51,0.177,52,0.302,61,0.317,70,2.176,71,1.937,80,0.814,88,0.006,89,0.008,90,0.006,95,0.363,125,0.744,154,0.352,182,0.744,197,2.917,199,2.645,209,1.271,214,0.405,218,3.514,220,0.909,227,0.574,234,2.726,238,1.918,242,5.113,243,1.594,248,1.02,254,1.668,294,1.102,300,2.176,305,1.271,313,2.901,333,2.324,374,2.726,378,2.726,401,2.726,616,3.098,617,1.997,618,2.917,622,3.609,626,1.749,627,1.668,628,2.503,629,3.855,630,2.503,631,2.503,634,2.503,638,2.503,646,2.048,649,2.048,659,2.726,661,2.726,663,2.726,665,2.726,666,1.594,667,2.726,676,3.883,677,3.564,678,1.198,679,2.726,680,2.726,681,2.503,682,2.726,688,2.726,689,2.726,690,2.503,713,2.324,719,0.861,722,2.901,763,1.112,780,1.47,796,4.151,797,0.893,798,2.726,799,3.026,800,3.026,801,3.026,802,3.026,803,3.026,804,3.026,805,3.026,806,3.026,807,3.026,808,3.026,809,3.026,810,3.026,811,3.026,812,3.026,813,3.026,814,3.026,815,3.026,816,3.026,817,3.026,818,3.026,819,3.026,830,3.026,846,3.026,847,3.31,848,3.026,849,2.176,850,3.31,851,2.759,852,4.067,853,3.398,854,2.726,855,2.726,856,2.917,857,2.726,858,3.026,859,3.026,860,3.026,861,2.176,862,3.026,863,3.026,864,3.026,865,3.026,866,3.026,867,3.026,868,3.932,869,3.049,870,4.522,871,4.522,872,4.522,873,4.522,874,5.469,875,2.109,876,3.026,877,3.026,878,3.026,879,3.026,880,3.026,881,3.026,882,3.026,883,3.026,884,3.026,885,1.668,886,2.324,887,2.726,888,3.026,889,2.726,890,2.726,891,3.026,892,2.324,893,2.726,894,2.726,895,3.026,896,3.026,897,3.026,898,3.026,899,3.026,900,3.026,901,3.026,902,3.026,903,3.026,904,3.026,905,1.594,906,3.026,907,3.026,908,3.026,909,2.324,910,3.026,911,3.026,912,3.026,913,3.026,914,3.026,915,2.726,916,3.026,917,3.026,918,4.309,919,3.026,920,1.526,921,3.026,922,5.469,923,3.026,924,3.026,925,2.726,926,3.026,927,2.726,928,3.026,929,3.026,930,3.026,931,2.726,932,3.026,933,3.026,934,3.026,935,5.469,936,3.026,937,5.78,938,3.026,939,3.026,940,3.026,941,3.026,942,3.026,943,3.026,944,4.309,945,3.026,946,3.026,947,3.026,948,3.026,949,4.309,950,3.026,951,3.026,952,3.026,953,3.026,954,3.026,955,3.026,956,6.008,957,5.019,958,2.503,959,4.309,960,2.176,961,3.026,962,4.522,963,3.026,964,5.019,965,4.309,966,3.026,967,3.026,968,3.026,969,4.309,970,3.026,971,3.026,972,3.026,973,3.026,974,3.026,975,4.309,976,4.309,977,3.026,978,4.524,979,4.309,980,4.309,981,3.026,982,3.026,983,2.048,984,2.176,985,2.503,986,2.726,987,3.026,988,2.759,989,3.883,990,4.749,991,3.026,992,3.026,993,1.749,994,3.026,995,2.503,996,1.594,997,1.937,998,3.026,999,3.026,1000,3.026,1001,3.026,1002,3.026,1003,5.019,1004,5.019,1005,3.026,1006,3.026,1007,3.026,1008,3.026,1009,3.564,1010,3.026,1011,3.026,1012,2.726,1013,3.026,1014,2.324,1015,3.026,1016,3.026,1017,3.026,1018,3.026,1423,3.48,1424,3.48,1425,3.48,1426,3.48,1427,3.48,1428,3.48,1429,3.48,1430,3.48,1431,3.48,1432,3.48,1433,3.48,1434,3.48]],["title/components/EmptyModalBodyComponent.html",[98,0.169,140,0.787]],["body/components/EmptyModalBodyComponent.html",[3,0.111,4,0.15,5,0.096,6,0.17,7,0.115,20,1.979,21,0.879,22,0.321,26,0.143,28,1.159,29,0.789,30,0.509,32,0.193,34,0.509,35,0.015,36,0.28,39,0.388,40,0.551,48,1.369,49,0.745,50,0.599,51,0.194,52,0.303,53,1.563,61,0.347,76,2.075,80,0.671,88,0.007,89,0.01,90,0.007,95,0.26,98,0.301,99,0.851,100,1.283,101,0.985,102,0.985,104,0.916,105,1.66,106,1.108,107,0.985,109,1.283,110,0.883,111,1.331,112,1.283,113,0.851,114,1.615,115,0.985,116,0.985,117,0.883,118,0.985,119,0.851,120,0.985,121,0.851,122,0.985,123,0.985,124,0.851,125,0.883,126,0.619,127,1.687,128,0.851,129,0.985,130,0.851,131,0.951,132,0.883,133,0.985,134,0.851,135,0.985,136,0.851,137,0.985,138,0.82,139,1.615,140,1.404,141,1.454,142,1.642,143,0.985,144,0.883,145,0.985,146,0.851,147,0.851,148,0.82,149,0.985,150,0.82,151,0.883,152,0.985,153,0.851,154,0.777,155,0.851,156,0.789,157,0.985,158,0.851,159,0.985,160,0.851,161,0.985,162,0.851,163,0.851,164,1.331,165,0.851,166,0.789,167,0.985,168,0.851,169,0.985,170,0.851,171,1.237,172,0.985,173,0.851,174,0.996,175,1.209,176,1.331,177,1.108,178,0.851,179,1.331,180,0.851,181,0.851,182,0.883,183,0.851,184,0.851,185,0.985,186,0.851,187,0.916,188,0.95,189,0.82,190,0.95,191,0.985,194,2.971,195,0.916,204,2.971,206,2.971,214,0.595,216,2.519,220,0.791,227,0.629,241,1.319,248,0.968,270,2.075,272,1.808,294,0.918,357,2.947,365,1.891,366,2.43,375,2.757,379,2.298,383,3.284,398,3.339,428,3.768,429,2.757,430,2.805,511,2.43,637,1.81,699,2.947,719,1.563,722,2.075,763,1.319,767,3.284,996,1.891,1210,1.664,1287,2.947,1294,2.181,1435,3.721,1436,2.581,1437,4.013,1438,4.129,1439,3.589,1440,4.522,1441,4.952,1442,4.372,1443,2.947,1444,3.234,1445,2.181,1446,2.757,1447,2.757,1448,3.234,1449,3.234,1450,3.721,1451,3.234,1452,3.234,1453,2.075,1454,2.757,1455,2.757,1456,3.234,1457,3.727,1458,2.757,1459,2.757,1460,2.757,1461,2.757,1462,3.234,1463,3.234,1464,3.234,1465,3.234,1466,3.234,1467,4.952,1468,4.372,1469,3.234,1470,3.234,1471,3.234,1472,3.234,1473,3.234,1474,4.372,1475,4.222,1476,3.234,1477,3.234,1478,3.234,1479,4.372,1480,3.234,1481,4.952,1482,4.952,1483,3.234,1484,3.234,1485,3.234,1486,3.234,1487,3.234,1488,4.372,1489,3.234,1490,4.372,1491,3.234,1492,4.372,1493,3.234,1494,3.234,1495,3.234,1496,3.234,1497,3.234,1498,3.234,1499,3.234,1500,2.757,1501,3.727,1502,2.757,1503,3.234,1504,3.234,1505,2.757,1506,3.234,1507,3.234,1508,4.372,1509,4.372,1510,3.234,1511,3.234,1512,3.234,1513,3.234,1514,3.234,1515,2.757,1516,2.969,1517,3.234,1518,2.757]],["title/classes/EnumValue.html",[52,0.19,1519,3.106]],["body/classes/EnumValue.html",[3,0.107,4,0.107,5,0.092,6,0.167,7,0.098,21,0.625,22,0.418,24,0.342,26,0.137,27,0.469,28,0.65,32,0.188,35,0.015,36,0.554,39,0.298,51,0.167,52,0.26,61,0.383,80,0.844,88,0.007,89,0.009,90,0.007,95,0.289,126,0.677,166,0.758,197,2.335,199,1.475,209,1.017,214,0.443,218,2.38,220,0.908,227,0.706,238,1.535,243,1.817,244,4.81,248,1.029,253,1.475,264,3.448,294,1.046,305,1.038,313,1.993,333,2.649,340,3.627,434,1.091,442,2.743,469,4.163,666,1.817,797,1.017,821,1.771,875,2.136,885,1.901,892,3.627,909,2.649,988,2.208,1155,2.397,1342,3.448,1358,2.649,1372,2.48,1381,3.448,1383,3.448,1519,4.851,1520,3.448,1521,6.192,1522,3.966,1523,3.966,1524,3.966,1525,3.966,1526,3.448,1527,2.649,1528,3.448,1529,3.448,1530,3.448,1531,3.966,1532,3.448,1533,3.966,1534,2.335,1535,3.966,1536,3.966,1537,3.966,1538,3.966,1539,3.966,1540,3.107,1541,3.107,1542,3.966,1543,3.448,1544,3.448,1545,5.383,1546,4.721,1547,3.966,1548,3.966,1549,3.966,1550,5.217,1551,3.107,1552,3.966,1553,3.966,1554,3.448,1555,6.528,1556,3.966,1557,3.966,1558,5.43,1559,3.966,1560,3.966,1561,5.43,1562,1.475,1563,3.966,1564,3.966,1565,2.852,1566,3.966,1567,3.448,1568,3.966,1569,2.335,1570,3.966,1571,3.966,1572,3.966,1573,3.107,1574,3.966,1575,5.303,1576,3.966,1577,3.966,1578,3.966,1579,3.966,1580,5.43,1581,3.966,1582,4.721,1583,3.27,1584,3.966,1585,6.192,1586,5.43,1587,6.411,1588,3.966,1589,3.966,1590,3.966,1591,3.448,1592,4.254,1593,5.43,1594,4.254,1595,4.721,1596,3.966,1597,5.43,1598,3.966,1599,5.383,1600,3.966,1601,3.966,1602,5.43,1603,3.966,1604,3.966,1605,3.966,1606,1.535,1607,3.448,1608,3.107,1609,3.966,1610,3.966,1611,3.966,1612,3.966,1613,3.966,1614,3.966,1615,3.966,1616,3.966,1617,3.966,1618,3.966,1619,6.192,1620,3.448,1621,3.448,1622,3.966,1623,3.966,1624,3.966,1625,3.966,1626,5.43,1627,3.448,1628,3.966,1629,3.448,1630,3.966,1631,5.43,1632,3.448,1633,3.966,1634,4.721]],["title/injectables/ErrorHandlerService.html",[0,1.993,617,1.598]],["body/injectables/ErrorHandlerService.html",[0,2.263,2,2.036,3,0.082,4,0.082,5,0.071,6,0.212,7,0.125,10,2.773,20,3.164,22,0.379,23,0.541,24,0.618,26,0.106,27,0.389,28,1.281,30,0.41,32,0.274,34,0.7,35,0.015,36,0.513,39,0.346,40,0.407,48,1.011,49,0.407,50,0.443,51,0.094,52,0.146,61,0.385,70,2.815,80,0.478,88,0.005,89,0.008,90,0.005,94,0.781,95,0.344,96,0.781,126,0.594,142,1.498,154,0.786,166,0.861,174,1.209,213,1.386,214,0.631,220,0.526,227,0.263,248,0.389,253,2.607,294,0.443,298,3.007,305,1.023,398,2.827,434,0.5,466,3.007,472,1.61,583,4.642,617,2.66,644,4.941,678,2.036,684,4.127,699,4.392,704,3.948,719,2.01,721,3.914,722,2.69,723,2.934,744,2.65,762,2.172,763,0.974,767,4.019,774,1.229,779,2.388,780,2.079,869,3.122,875,1.588,993,2.263,1094,1.933,1095,1.091,1168,3.914,1303,3.914,1313,5.14,1408,3.058,1412,3.007,1443,4.022,1450,1.794,1594,3.527,1635,6.857,1636,2.65,1637,3.914,1638,6.226,1639,2.591,1640,2.975,1641,5.14,1642,6.601,1643,4.502,1644,3.914,1645,3.914,1646,4.502,1647,1.991,1648,2.69,1649,5.483,1650,5.912,1651,4.502,1652,4.502,1653,4.502,1654,5.147,1655,4.502,1656,4.502,1657,5.912,1658,4.502,1659,6.601,1660,4.502,1661,4.502,1662,5.353,1663,5.353,1664,5.353,1665,4.502,1666,5.912,1667,5.912,1668,5.912,1669,5.912,1670,4.502,1671,4.502,1672,4.502,1673,4.502,1674,4.502,1675,4.502,1676,5.14,1677,5.912,1678,3.048,1679,3.048,1680,1.891,1681,5.353,1682,3.048,1683,4.502,1684,3.048,1685,4.502,1686,3.048,1687,3.048,1688,4.502,1689,3.048,1690,4.536,1691,3.048,1692,3.527,1693,4.502,1694,4.502,1695,3.527,1696,4.631,1697,4.502,1698,4.502,1699,4.502,1700,2.54,1701,3.048,1702,2.752,1703,4.502,1704,5.491,1705,3.048,1706,4.502,1707,3.048,1708,4.212,1709,4.502,1710,3.048,1711,4.502,1712,6.307,1713,3.048,1714,5.14,1715,4.502,1716,4.502,1717,4.502,1718,3.048,1719,4.502,1720,3.048,1721,4.502,1722,4.502,1723,4.502,1724,3.048,1725,3.527,1726,6.601,1727,4.502,1728,3.007,1729,3.007,1730,3.048,1731,3.048,1732,3.048,1733,3.048,1734,5.125,1735,3.048,1736,4.502,1737,5.14,1738,3.007,1739,3.048,1740,3.048,1741,4.502,1742,4.502,1743,3.048,1744,3.048,1745,2.65,1746,3.048,1747,3.048,1748,3.048,1749,3.527,1750,1.794,1751,5.912,1752,2.65,1753,6.601,1754,3.048,1755,2.65,1756,3.048,1757,6.601,1758,3.048,1759,5.912,1760,3.048,1761,3.048,1762,3.048,1763,6.307,1764,4.502,1765,3.85,1766,3.914,1767,3.048,1768,2.65,1769,4.502,1770,3.048,1771,3.048,1772,3.048,1773,4.502,1774,3.048,1775,1.336,1776,3.048,1777,3.048,1778,3.048]],["title/classes/ErrorInfo.html",[52,0.19,719,0.981]],["body/classes/ErrorInfo.html",[3,0.193,4,0.145,5,0.124,6,0.221,7,0.13,22,0.272,23,0.543,24,0.464,26,0.186,27,0.571,28,1.282,32,0.282,35,0.015,36,0.508,39,0.295,51,0.23,52,0.257,61,0.295,88,0.009,89,0.011,90,0.009,94,0.598,95,0.383,96,0.598,126,0.627,154,0.776,174,1.042,209,1.377,434,1.084,583,4.402,684,4.134,719,1.636,737,2.665,762,2.468,797,1.377,821,1.535,875,2.126,1094,1.976,1155,2.774,1242,5.18,1453,3.601,1608,4.206,1638,5.18,1640,2.888,1647,2.666,1700,2.666,1702,2.888,1704,5.614,1779,4.206,1780,7.166,1781,7.166,1782,6.613,1783,7.166,1784,6.613,1785,6.613,1786,5.369,1787,5.369,1788,2.774,1789,5.369,1790,5.369,1791,5.369,1792,5.369,1793,5.369,1794,5.369,1795,5.369,1796,5.369,1797,3.356,1798,3.601,1799,5.749,1800,5.749,1801,5.749,1802,5.18,1803,6.613,1804,5.369,1805,5.369]],["title/modules/ExampleAppModule.html",[1019,2.648,1806,2.852]],["body/modules/ExampleAppModule.html",[3,0.149,4,0.149,5,0.156,7,0.088,35,0.014,39,0.442,40,0.74,46,3.467,51,0.171,52,0.266,69,2.431,88,0.009,89,0.012,90,0.009,99,1.695,106,1.101,110,1.185,117,1.759,445,3.704,454,3.988,455,2.787,457,4.345,458,4.345,459,4.345,460,3.988,461,5.228,462,3.988,463,5.328,464,3.988,465,4.851,466,3.704,467,3.988,468,3.988,469,3.467,470,3.988,471,3.988,472,2.929,473,3.467,474,3.988,475,3.988,476,3.988,477,3.988,478,4.851,479,3.988,480,3.988,481,3.988,482,3.988,483,3.988,484,3.988,485,3.467,486,3.704,487,3.988,488,3.988,489,3.988,490,3.988,615,4.851,633,4.345,748,3.264,996,2.54,1019,3.704,1020,5.177,1021,3.704,1022,3.467,1023,5.695,1024,5.228,1025,4.345,1031,5.284,1032,3.988,1039,4.822,1040,5.864,1045,3.988,1047,5.864,1050,5.864,1052,4.822,1115,5.284,1295,3.704,1806,5.917,1807,4.822,1808,4.822,1809,5.546,1810,4.822,1811,5.546,1812,5.546,1813,6.745,1814,5.546,1815,5.546,1816,5.546,1817,5.546,1818,5.546,1819,5.546,1820,5.546]],["title/classes/Examples.html",[52,0.19,635,2.852]],["body/classes/Examples.html",[3,0.165,4,0.165,5,0.142,6,0.193,7,0.113,23,0.619,24,0.529,26,0.212,27,0.618,32,0.212,35,0.014,51,0.188,52,0.294,88,0.01,89,0.012,90,0.01,635,5.147,646,4.213,681,5.453,797,1.571,875,2.249,1821,5.326,1822,6.223,1823,7.157,1824,7.157,1825,7.157,1826,5.147,1827,7.157,1828,8.062,1829,8.062,1830,6.223,1831,8.062,1832,7.157,1833,5.607,1834,6.126]],["title/classes/ExpressionNode.html",[52,0.19,1835,2.479]],["body/classes/ExpressionNode.html",[3,0.068,4,0.144,5,0.058,6,0.172,7,0.101,22,0.396,23,0.254,24,0.217,26,0.244,27,0.336,28,1.082,29,0.743,30,0.355,32,0.212,34,0.434,35,0.015,36,0.536,39,0.318,48,0.833,49,0.635,50,0.365,51,0.178,52,0.278,61,0.138,80,0.846,88,0.004,89,0.007,90,0.004,94,0.28,95,0.25,96,0.28,126,0.553,148,0.499,154,0.586,209,0.644,214,0.317,227,0.552,253,1.446,254,1.204,272,0.927,294,0.365,301,1.446,305,1.348,319,1.954,365,1.781,420,2.289,430,1.262,434,1.294,442,1.77,453,2.012,472,1.326,522,2.927,539,4.899,544,1.204,570,1.478,573,1.478,617,1.012,626,1.262,627,1.204,637,1.704,640,1.478,645,2.431,678,2.428,719,0.621,723,1.567,762,0.865,764,1.326,774,1.567,780,2.092,797,0.644,821,1.981,869,1.326,875,1.719,920,1.101,993,1.954,1094,1.598,1148,3.557,1155,0.972,1169,1.677,1174,2.597,1210,2.159,1243,1.012,1408,1.055,1421,1.57,1443,2.054,1534,3.153,1562,0.934,1569,2.289,1606,2.073,1639,1.101,1640,1.567,1647,0.934,1648,1.954,1680,1.633,1700,0.934,1702,1.567,1728,1.677,1729,3.178,1750,3.153,1775,1.704,1788,2.372,1797,1.57,1835,4.238,1836,1.677,1837,4.407,1838,3.178,1839,3.852,1840,4.596,1841,4.596,1842,4.596,1843,2.796,1844,3.888,1845,3.852,1846,2.511,1847,2.511,1848,2.511,1849,2.511,1850,1.806,1851,3.995,1852,5.328,1853,5.621,1854,1.806,1855,5.032,1856,2.597,1857,2.796,1858,4.36,1859,1.806,1860,1.806,1861,1.806,1862,1.806,1863,4.846,1864,1.806,1865,1.806,1866,1.398,1867,1.806,1868,1.806,1869,1.806,1870,1.806,1871,1.478,1872,1.806,1873,1.806,1874,1.806,1875,1.806,1876,1.806,1877,1.806,1878,1.806,1879,1.806,1880,1.806,1881,2.796,1882,1.806,1883,2.796,1884,1.806,1885,3.422,1886,1.806,1887,1.806,1888,1.806,1889,4.875,1890,4.167,1891,4.167,1892,3.852,1893,1.806,1894,1.806,1895,3.887,1896,1.806,1897,2.796,1898,3.852,1899,1.806,1900,5.374,1901,4.981,1902,4.407,1903,5.032,1904,3.422,1905,1.806,1906,1.806,1907,4.167,1908,1.806,1909,3.422,1910,2.796,1911,1.806,1912,4.749,1913,4.167,1914,5.216,1915,1.806,1916,3.422,1917,1.806,1918,2.796,1919,2.796,1920,3.852,1921,2.796,1922,2.431,1923,2.796,1924,4.167,1925,2.597,1926,2.597,1927,1.806,1928,1.806,1929,1.806,1930,4.749,1931,2.796,1932,4.596,1933,1.806,1934,3.422,1935,4.586,1936,2.796,1937,4.407,1938,1.806,1939,5.148,1940,3.852,1941,2.796,1942,2.796,1943,2.431,1944,3.422,1945,2.796,1946,2.796,1947,1.806,1948,2.796,1949,2.796,1950,3.852,1951,2.796,1952,2.796,1953,3.178,1954,1.806,1955,1.806,1956,1.806,1957,1.806,1958,1.806,1959,3.422,1960,1.806,1961,4.167,1962,1.806,1963,4.407,1964,3.153,1965,4.407,1966,3.422,1967,2.179,1968,3.178,1969,3.422,1970,1.806,1971,5.148,1972,5.148,1973,4.407,1974,3.422,1975,1.806,1976,4.596,1977,1.806,1978,4.407,1979,1.806,1980,1.806,1981,3.422,1982,1.806,1983,3.422,1984,3.422,1985,3.422,1986,1.806,1987,1.806,1988,2.796,1989,2.796,1990,2.796,1991,1.806,1992,1.806,1993,5.216,1994,2.796,1995,1.806,1996,1.806,1997,1.806,1998,1.806,1999,1.954,2000,1.478,2001,2.164,2002,1.677,2003,1.806,2004,1.806,2005,1.806,2006,1.806,2007,1.806,2008,1.57,2009,1.806,2010,2.054,2011,1.806,2012,1.806,2013,1.806,2014,2.796,2015,1.677,2016,1.806,2017,1.806,2018,2.796,2019,3.852,2020,3.852,2021,1.806,2022,1.806,2023,3.422,2024,1.806,2025,2.796,2026,2.796,2027,1.806,2028,4.749,2029,2.796,2030,1.806,2031,1.806,2032,1.806,2033,2.796,2034,1.806,2035,2.796,2036,1.806,2037,1.806,2038,1.326,2039,1.806,2040,1.806,2041,1.677,2042,1.262,2043,1.806,2044,1.806,2045,1.806,2046,1.806,2047,1.806,2048,2.796,2049,1.806,2050,2.796]],["title/classes/ExpressionUpdatedEvent.html",[52,0.19,1851,2.479]],["body/classes/ExpressionUpdatedEvent.html",[3,0.068,4,0.145,5,0.059,6,0.145,7,0.085,22,0.397,26,0.245,27,0.339,28,1.086,29,0.75,32,0.166,35,0.015,36,0.53,39,0.32,48,0.842,49,0.639,50,0.369,51,0.179,52,0.279,61,0.139,80,0.847,88,0.004,89,0.007,90,0.004,94,0.283,95,0.271,96,0.649,126,0.555,148,0.504,154,0.589,209,0.651,214,0.32,227,0.554,253,1.459,254,1.217,272,0.935,294,0.369,301,1.459,305,1.352,319,1.971,365,2.819,420,2.308,430,1.276,434,1.292,442,1.782,453,2.014,472,1.341,522,2.939,539,4.91,544,1.217,570,1.494,573,1.494,617,1.023,626,1.276,627,1.217,637,1.719,640,1.494,645,2.451,678,2.435,719,0.628,723,1.58,762,0.874,764,1.341,774,1.58,780,2.097,797,0.651,821,2.053,869,1.341,875,1.421,920,1.113,993,1.971,1094,1.606,1148,3.571,1155,0.983,1169,1.696,1174,2.619,1210,2.171,1243,1.023,1408,1.066,1421,1.587,1443,2.071,1534,2.308,1562,0.944,1569,2.308,1606,2.085,1639,1.113,1640,1.58,1647,0.944,1648,1.971,1680,1.647,1690,2.82,1700,0.944,1702,1.58,1728,1.696,1729,3.199,1750,3.171,1775,1.719,1788,2.382,1797,1.587,1835,4.42,1836,1.696,1837,2.82,1838,1.696,1839,1.826,1840,3.445,1841,3.874,1842,3.874,1843,1.826,1845,3.445,1850,1.826,1851,4.143,1852,5.464,1853,5.703,1854,1.826,1855,5.037,1856,2.619,1857,2.82,1858,4.369,1859,1.826,1860,1.826,1861,1.826,1862,1.826,1863,4.853,1864,1.826,1865,1.826,1866,1.413,1867,1.826,1868,1.826,1869,1.826,1870,1.826,1871,1.494,1872,1.826,1873,1.826,1874,1.826,1875,1.826,1876,1.826,1877,1.826,1878,1.826,1879,1.826,1880,1.826,1881,2.82,1882,1.826,1883,2.82,1884,1.826,1885,3.445,1886,1.826,1887,1.826,1888,1.826,1889,4.891,1890,4.188,1891,4.188,1892,3.874,1893,1.826,1894,1.826,1895,3.9,1896,1.826,1897,2.82,1898,3.874,1899,1.826,1900,5.385,1901,4.996,1902,4.426,1903,5.037,1904,3.445,1905,1.826,1906,1.826,1907,4.188,1908,1.826,1909,3.445,1910,2.82,1911,1.826,1912,4.766,1913,4.188,1914,5.228,1915,1.826,1916,3.445,1917,1.826,1918,2.82,1919,2.82,1920,3.874,1921,2.82,1922,2.451,1923,2.82,1924,4.188,1925,2.619,1926,2.619,1927,1.826,1928,1.826,1929,1.826,1930,4.766,1931,2.82,1932,4.614,1933,1.826,1934,3.445,1935,4.596,1936,2.82,1937,4.426,1938,1.826,1939,5.161,1940,3.874,1941,2.82,1942,2.82,1943,2.451,1944,3.445,1945,2.82,1946,2.82,1947,1.826,1948,2.82,1949,2.82,1950,3.874,1951,2.82,1952,2.82,1953,3.199,1954,1.826,1955,1.826,1956,1.826,1957,1.826,1958,1.826,1959,3.445,1960,1.826,1961,4.188,1962,1.826,1963,4.426,1964,3.171,1965,4.426,1966,3.445,1967,2.194,1968,3.199,1969,3.445,1970,1.826,1971,5.161,1972,5.161,1973,4.426,1974,3.445,1975,1.826,1976,4.614,1977,1.826,1978,4.426,1979,1.826,1980,1.826,1981,3.445,1982,1.826,1983,3.445,1984,3.445,1985,3.445,1986,1.826,1987,1.826,1988,2.82,1989,2.82,1990,2.82,1991,1.826,1992,1.826,1993,5.228,1994,2.82,1995,1.826,1996,1.826,1997,1.826,1998,1.826,1999,1.971,2000,1.494,2001,2.182,2002,1.696,2003,1.826,2004,1.826,2005,1.826,2006,1.826,2007,1.826,2008,1.587,2009,1.826,2010,2.071,2011,1.826,2012,1.826,2013,1.826,2014,2.82,2015,1.696,2016,1.826,2017,1.826,2018,2.82,2019,3.874,2020,3.874,2021,1.826,2022,1.826,2023,3.445,2024,1.826,2025,2.82,2026,2.82,2027,1.826,2028,4.766,2029,2.82,2030,1.826,2031,1.826,2032,1.826,2033,2.82,2034,1.826,2035,2.82,2036,1.826,2037,1.826,2038,1.341,2039,1.826,2040,1.826,2041,1.696,2042,1.276,2043,1.826,2044,1.826,2045,1.826,2046,1.826,2047,1.826,2048,2.82,2049,1.826,2050,2.82,2051,2.539,2052,2.539,2053,3.921]],["title/classes/FieldAction.html",[52,0.19,2054,1.666]],["body/classes/FieldAction.html",[3,0.132,4,0.132,5,0.113,6,0.209,7,0.123,22,0.379,23,0.694,24,0.67,26,0.169,27,0.538,30,0.568,32,0.264,34,0.626,35,0.015,36,0.561,51,0.23,52,0.347,57,2.875,61,0.439,69,2.141,80,0.793,88,0.008,89,0.011,90,0.008,94,0.765,95,0.362,96,0.765,126,0.399,214,0.56,220,0.57,227,0.679,272,1.165,301,1.817,305,1.382,336,2.719,337,2.341,341,2.719,342,2.719,343,2.58,344,2.719,345,2.719,434,1.224,453,1.208,610,2.875,797,1.253,875,2.036,920,2.141,1155,2.412,1210,2.512,1370,3.945,1527,4.162,1583,2.58,1692,4.883,1798,2.455,2054,3.208,2055,4.852,2056,3.054,2057,4.936,2058,6.232,2059,6.232,2060,4.568,2061,4.885,2062,4.033,2063,4.885,2064,4.885,2065,4.482,2066,4.885,2067,4.482,2068,4.885,2069,5.199,2070,4.482,2071,4.885,2072,3.82,2073,3.668,2074,3.292,2075,3.668,2076,3.668,2077,3.668,2078,4.162,2079,3.513,2080,3.054,2081,3.054,2082,2.875,2083,3.513,2084,2.719,2085,3.513,2086,3.513,2087,3.513,2088,3.896,2089,2.875,2090,3.513,2091,4.482,2092,3.513,2093,3.513,2094,4.482,2095,3.513,2096,3.668,2097,3.513,2098,3.292,2099,3.513,2100,3.513,2101,3.513,2102,4.482,2103,3.513,2104,3.513,2105,4.482,2106,3.513,2107,3.513,2108,3.513,2109,3.513]],["title/classes/FieldActionArgument.html",[52,0.19,2072,2.207]],["body/classes/FieldActionArgument.html",[3,0.136,4,0.136,5,0.117,6,0.203,7,0.119,22,0.383,23,0.763,24,0.676,26,0.175,27,0.55,32,0.254,35,0.015,36,0.557,51,0.232,52,0.351,57,2.98,61,0.43,69,2.219,80,0.802,88,0.009,89,0.011,90,0.009,95,0.365,126,0.413,214,0.52,220,0.591,227,0.695,272,1.207,301,1.883,305,1.443,336,2.818,337,2.426,341,2.818,342,2.818,343,2.674,344,2.818,345,2.818,434,1.237,453,1.252,610,2.98,797,1.298,875,1.502,920,2.219,1155,2.701,1210,2.569,1370,3.367,1527,4.892,1583,2.674,1798,2.544,2054,3.077,2055,4.72,2056,3.165,2057,3.641,2060,4.443,2062,3.685,2065,3.641,2067,3.641,2069,4.585,2070,3.641,2072,4.077,2073,4.311,2074,3.367,2075,3.752,2076,3.752,2077,3.752,2078,4.258,2079,3.641,2080,3.165,2081,3.165,2082,2.98,2083,3.641,2084,2.818,2085,3.641,2086,3.641,2087,3.641,2088,3.985,2089,2.98,2090,3.641,2091,4.585,2092,3.641,2093,3.641,2094,4.585,2095,3.641,2096,3.752,2097,3.641,2098,3.367,2099,3.641,2100,3.641,2101,3.641,2102,4.585,2103,3.641,2104,3.641,2105,4.585,2106,3.641,2107,3.641,2108,3.641,2109,3.641,2110,5.062,2111,5.062,2112,5.062,2113,5.062]],["title/classes/FieldActionArgumentValue.html",[52,0.19,2060,2.334]],["body/classes/FieldActionArgumentValue.html",[3,0.139,4,0.139,5,0.12,6,0.19,7,0.111,22,0.385,23,0.713,24,0.679,26,0.179,27,0.558,32,0.224,35,0.015,36,0.556,51,0.234,52,0.354,57,3.045,61,0.432,69,2.268,80,0.807,88,0.009,89,0.011,90,0.009,95,0.328,126,0.422,214,0.527,220,0.604,227,0.692,272,1.234,301,1.925,305,1.411,336,2.88,337,2.48,341,2.88,342,2.88,343,2.733,344,2.88,345,2.88,434,1.245,453,1.28,610,3.045,797,1.327,875,1.535,920,2.268,1155,2.501,1210,2.605,1370,3.413,1527,4.316,1583,2.733,1798,2.6,2054,3.101,2055,4.406,2056,3.235,2057,3.721,2060,4.561,2062,3.722,2065,3.721,2067,3.721,2069,4.648,2070,3.721,2072,3.923,2073,3.804,2074,3.413,2075,3.804,2076,3.804,2077,3.804,2078,4.316,2079,3.721,2080,3.235,2081,3.235,2082,3.045,2083,3.721,2084,2.88,2085,3.721,2086,3.721,2087,3.721,2088,4.04,2089,3.045,2090,3.721,2091,4.648,2092,3.721,2093,3.721,2094,4.648,2095,3.721,2096,3.804,2097,3.721,2098,3.413,2099,3.721,2100,3.721,2101,3.721,2102,4.648,2103,3.721,2104,3.721,2105,4.648,2106,3.721,2107,3.721,2108,3.721,2109,3.721,2114,5.174,2115,5.174]],["title/classes/FieldActionDefinition.html",[52,0.19,2062,2.094]],["body/classes/FieldActionDefinition.html",[3,0.128,4,0.128,5,0.11,6,0.216,7,0.127,22,0.376,23,0.767,24,0.675,26,0.165,27,0.53,30,0.559,32,0.276,34,0.559,35,0.015,36,0.558,51,0.228,52,0.343,57,3.992,61,0.437,69,2.088,80,0.787,88,0.008,89,0.01,90,0.008,94,0.683,95,0.371,96,0.683,126,0.389,156,0.911,214,0.554,220,0.716,227,0.666,272,1.136,301,1.772,305,1.417,336,2.652,337,2.284,341,2.652,342,2.652,343,2.516,344,2.652,345,2.652,434,1.215,453,1.178,610,3.992,797,1.222,875,1.413,920,2.088,1155,2.625,1210,2.887,1370,3.239,1527,4.784,1583,2.516,1798,2.394,2054,3.187,2055,5.013,2056,2.978,2057,3.426,2060,4.362,2062,3.783,2065,3.426,2067,3.426,2069,4.411,2070,3.426,2072,4.125,2073,3.61,2074,3.783,2075,3.61,2076,3.61,2077,3.61,2078,4.096,2079,4.878,2080,4.241,2081,4.241,2082,3.61,2083,4.411,2084,2.652,2085,3.426,2086,3.426,2087,3.426,2088,3.834,2089,2.804,2090,3.426,2091,4.411,2092,3.426,2093,3.426,2094,4.411,2095,4.411,2096,3.61,2097,3.426,2098,3.239,2099,3.426,2100,3.426,2101,3.426,2102,4.411,2103,3.426,2104,3.426,2105,4.411,2106,3.426,2107,3.426,2108,3.426,2109,3.426,2116,6.133,2117,6.133,2118,4.764,2119,4.764,2120,4.764,2121,4.764,2122,4.764,2123,4.764,2124,4.764,2125,4.764,2126,4.764,2127,4.764]],["title/injectables/FieldActionService.html",[0,1.993,853,2.334]],["body/injectables/FieldActionService.html",[0,2.036,2,1.769,3,0.071,4,0.189,5,0.061,6,0.207,7,0.122,10,1.701,14,3.537,18,1.905,22,0.413,23,0.6,24,0.513,26,0.092,27,0.541,28,1.321,29,0.94,30,0.369,32,0.265,34,0.669,35,0.015,36,0.523,37,1.855,39,0.386,40,0.353,46,1.656,47,2.895,48,0.878,49,0.656,50,0.385,51,0.081,52,0.127,55,1.905,61,0.398,80,0.829,85,3.961,88,0.005,89,0.011,90,0.005,94,0.783,95,0.369,96,0.783,106,0.526,126,0.663,154,0.798,156,1.403,174,0.775,199,2.758,209,1.039,214,0.331,220,0.898,227,0.607,239,1.025,248,0.937,251,3.173,294,1.111,301,2.049,305,1.197,336,1.474,337,1.269,341,1.474,342,1.474,343,1.399,344,1.474,345,1.474,347,3.964,434,0.664,453,1.216,473,2.532,519,2.913,544,1.941,617,2.22,627,1.269,638,2.913,649,3.242,678,1.395,713,2.705,719,0.655,762,0.912,763,0.846,775,2.532,780,2.15,821,0.757,847,3.679,849,1.656,850,3.679,853,2.384,905,1.855,988,3.304,997,3.304,1094,2.081,1095,0.948,1125,3.537,1141,3.173,1157,2.913,1198,1.905,1199,1.905,1208,4.315,1243,2.775,1319,4.315,1370,1.399,1371,3.679,1437,1.905,1562,1.83,1606,2.805,1640,1.632,1647,0.985,1690,1.905,1696,3.173,1700,0.985,1702,1.632,1749,2.075,1775,1.775,1858,3.242,1967,1.213,1999,2.036,2042,2.036,2062,4.218,2072,2.254,2074,4.014,2082,3.494,2084,2.254,2128,6.69,2129,2.303,2130,4.135,2131,4.918,2132,4.05,2133,4.05,2134,4.05,2135,5.508,2136,5.508,2137,4.05,2138,5.508,2139,4.05,2140,4.05,2141,4.05,2142,4.05,2143,4.05,2144,5.508,2145,2.648,2146,4.789,2147,2.648,2148,4.05,2149,2.648,2150,4.05,2151,5.678,2152,5.508,2153,4.05,2154,4.05,2155,2.705,2156,4.05,2157,6.513,2158,2.648,2159,4.599,2160,5.508,2161,5.508,2162,4.05,2163,6.717,2164,2.648,2165,3.173,2166,2.648,2167,2.648,2168,4.05,2169,2.648,2170,5.508,2171,2.648,2172,4.05,2173,2.648,2174,3.853,2175,4.05,2176,2.648,2177,3.173,2178,4.05,2179,2.648,2180,3.853,2181,2.705,2182,4.05,2183,6.717,2184,2.648,2185,5.161,2186,5.508,2187,6.717,2188,4.05,2189,2.648,2190,5.508,2191,2.648,2192,3.521,2193,3.521,2194,4.05,2195,2.648,2196,2.648,2197,4.276,2198,4.789,2199,4.789,2200,4.789,2201,3.521,2202,2.648,2203,2.648,2204,1.656,2205,1.331,2206,4.05,2207,4.05,2208,2.648,2209,2.648,2210,4.05,2211,4.05,2212,4.05,2213,5.508,2214,4.05,2215,2.648,2216,4.05,2217,3.521,2218,4.05,2219,2.648,2220,4.05,2221,5.508,2222,2.648,2223,2.913,2224,3.521,2225,3.173,2226,2.913,2227,2.648,2228,2.648,2229,2.648,2230,2.648,2231,2.648,2232,2.303,2233,2.303,2234,2.648,2235,4.05,2236,2.648,2237,2.648,2238,3.173,2239,2.075,2240,2.648,2241,2.075,2242,2.075,2243,1.905,2244,2.648,2245,2.648,2246,2.648,2247,3.173,2248,4.918,2249,2.648,2250,2.648,2251,4.05,2252,2.648,2253,2.648,2254,2.648,2255,2.303,2256,2.648,2257,2.648,2258,2.648,2259,2.303,2260,2.303,2261,2.303,2262,2.303,2263,2.648,2264,2.303,2265,2.303,2266,2.648,2267,4.05,2268,2.648,2269,4.05,2270,2.648,2271,4.05,2272,3.521,2273,2.303,2274,2.648,2275,2.648,2276,2.648,2277,2.648,2278,2.648,2279,2.648,2280,2.648,2281,2.648,2282,2.648,2283,2.648,2284,2.648,2285,2.648,2286,2.648,2287,2.648,2288,2.648,2289,2.648,2290,4.05,2291,2.648,2292,2.648,2293,2.648,2294,2.648,2295,2.648,2296,2.648,2297,2.648,2298,2.648,2299,2.648,2300,2.648,2301,2.648,2302,4.05,2303,2.648,2304,2.648,2305,4.05,2306,2.648,2307,6.259,2308,4.918,2309,2.648,2310,2.648,2311,2.648,2312,2.648,2313,4.05,2314,2.648,2315,2.648,2316,3.285,2317,2.648,2318,2.303,2319,4.05,2320,4.918,2321,4.05,2322,5.508,2323,6.259,2324,2.648,2325,2.648,2326,4.05,2327,2.648,2328,2.648,2329,2.648,2330,2.648,2331,2.648,2332,2.648,2333,2.648]],["title/components/FieldEditComponent.html",[98,0.169,146,0.817]],["body/components/FieldEditComponent.html",[3,0.084,4,0.084,5,0.073,6,0.217,7,0.128,21,0.724,22,0.304,23,0.751,24,0.655,26,0.108,27,0.397,28,0.891,29,1.04,30,0.419,32,0.278,34,0.668,35,0.015,36,0.504,37,2.104,39,0.378,40,0.418,47,3.201,48,1.039,49,0.726,50,0.455,51,0.096,52,0.22,53,1.136,61,0.417,66,2.253,80,0.778,88,0.005,89,0.008,90,0.005,94,0.767,95,0.372,96,0.767,98,0.231,99,0.645,100,1.057,101,0.747,102,0.747,104,0.695,105,1.629,106,0.912,107,0.747,109,1.057,110,0.67,111,1.096,112,1.584,113,0.645,114,1.429,115,0.747,116,0.747,117,0.67,118,0.747,119,0.645,120,0.747,121,0.645,122,0.747,123,0.747,124,0.645,125,0.67,126,0.672,127,1.521,128,0.645,129,0.747,130,0.645,131,0.783,132,0.67,133,0.747,134,0.645,135,0.747,136,0.645,137,0.747,138,0.622,139,1.429,140,0.622,141,0.721,142,1.28,143,0.747,144,0.67,145,0.747,146,1.234,147,0.645,148,0.622,149,0.747,150,0.622,151,0.67,152,0.747,153,0.645,154,0.729,155,0.645,156,0.599,157,0.747,158,0.645,159,0.747,160,0.645,161,0.747,162,0.645,163,0.645,164,1.096,165,0.645,166,0.599,167,0.747,168,0.645,169,0.747,170,0.645,171,1.019,172,0.747,173,0.645,174,0.724,175,0.599,176,1.096,177,0.622,178,0.645,179,1.747,180,0.645,181,0.645,182,0.67,183,0.645,184,0.645,185,0.747,186,0.645,187,0.695,188,0.721,189,0.622,190,0.721,191,0.747,194,2.285,195,1.019,197,4.054,198,3.4,199,2.023,204,2.516,205,2.426,206,2.516,207,3.994,209,1.395,213,1.963,214,0.613,216,2.373,217,3.304,218,2.922,219,5.545,220,0.804,223,3.994,227,0.655,229,1.263,236,1.435,237,1.655,238,1.213,239,1.213,240,1.213,241,1.001,243,1.435,244,2.092,247,1.959,248,0.88,250,3.911,280,1.959,281,2.309,282,3.068,285,4.261,286,4.693,287,3.599,291,2.454,294,0.87,302,3.599,304,2.454,305,1.145,306,2.454,307,2.253,308,3.994,309,2.454,310,2.454,311,2.454,312,2.253,313,1.574,314,4.261,319,2.309,320,2.253,323,2.253,325,2.253,327,4.261,328,2.454,336,3.334,337,2.871,338,3.599,339,3.599,340,3.068,341,2.557,342,2.557,343,2.426,344,3.334,345,3.334,346,3.599,347,3.068,348,3.599,349,3.599,350,3.599,351,3.599,352,5.534,442,1.165,453,0.775,538,2.454,573,1.844,585,1.744,645,1.959,737,1.263,1014,3.068,1340,3.994,1358,3.632,1371,2.092,1526,4.729,1541,4.261,1562,1.165,1575,4.308,1582,6.266,1599,6.141,1634,3.994,1680,1.93,1708,3.632,1967,2.104,2165,2.454,2334,7.011,2335,4.729,2336,5.439,2337,5.439,2338,5.439,2339,3.911,2340,5.439,2341,4.594,2342,4.594,2343,4.594,2344,4.594,2345,3.994,2346,4.594,2347,3.133,2348,4.594,2349,3.133,2350,3.133,2351,3.133,2352,4.594,2353,3.133,2354,3.133,2355,3.133,2356,4.594,2357,3.133,2358,3.133,2359,3.133,2360,3.133,2361,3.133,2362,3.133,2363,3.133,2364,4.416,2365,3.133,2366,2.724,2367,2.724,2368,3.133,2369,3.133,2370,5.99,2371,3.133,2372,5.439,2373,5.99,2374,3.133,2375,5.439,2376,4.729,2377,5.99,2378,5.99,2379,3.133,2380,5.99,2381,3.994,2382,3.133,2383,2.724,2384,3.133,2385,4.594,2386,3.133,2387,3.133,2388,3.133,2389,2.253,2390,2.724,2391,5.439,2392,2.253,2393,2.454,2394,3.133,2395,3.133,2396,3.133,2397,5.439,2398,5.439,2399,4.594,2400,2.724,2401,3.133,2402,2.724,2403,4.594,2404,3.133,2405,3.133,2406,3.133,2407,3.133,2408,3.133,2409,3.133,2410,3.133,2411,4.594,2412,3.133,2413,2.724,2414,2.724,2415,2.724,2416,2.724,2417,4.594,2418,2.724,2419,2.724]],["title/classes/FieldNode.html",[52,0.19,1863,2.479]],["body/classes/FieldNode.html",[3,0.066,4,0.142,5,0.057,6,0.163,7,0.096,22,0.395,23,0.386,24,0.33,26,0.25,27,0.33,28,1.074,29,0.73,30,0.348,32,0.238,34,0.522,35,0.015,36,0.536,39,0.315,48,0.813,49,0.625,50,0.356,51,0.176,52,0.275,61,0.135,80,0.844,88,0.004,89,0.007,90,0.004,94,0.273,95,0.283,96,0.522,126,0.596,148,0.487,154,0.613,209,0.629,214,0.311,227,0.547,253,1.42,254,1.175,272,0.91,294,0.356,301,1.42,305,1.34,319,1.918,365,2.422,420,2.246,430,1.232,434,1.291,442,1.743,453,2.009,472,1.295,522,2.901,539,4.874,544,1.175,570,1.443,573,1.443,617,0.988,626,1.232,627,1.175,637,1.673,640,1.443,645,2.386,678,2.413,719,0.606,723,1.538,762,0.844,764,1.295,774,1.538,780,2.079,797,0.629,821,2.035,869,1.295,875,1.879,920,1.075,993,1.918,1094,1.747,1148,3.526,1155,0.949,1169,1.637,1174,2.549,1210,2.131,1243,0.988,1408,1.03,1421,1.533,1443,2.015,1534,3.112,1562,0.912,1569,2.246,1606,2.046,1639,1.075,1640,1.538,1647,0.912,1648,1.918,1680,1.603,1690,2.744,1700,0.912,1702,1.538,1728,1.637,1729,3.129,1750,3.112,1775,1.673,1788,2.604,1797,1.533,1835,4.562,1836,1.637,1837,4.364,1838,3.129,1839,3.803,1840,4.556,1841,4.947,1842,4.947,1843,1.763,1845,4.12,1850,1.763,1851,3.96,1852,5.302,1853,5.603,1854,1.763,1855,5.02,1856,3.129,1857,3.803,1858,4.379,1859,1.763,1860,1.763,1861,1.763,1862,1.763,1863,4.851,1864,1.763,1865,1.763,1866,1.364,1867,1.763,1868,1.763,1869,1.763,1870,1.763,1871,1.443,1872,1.763,1873,1.763,1874,1.763,1875,1.763,1876,1.763,1877,1.763,1878,1.763,1879,1.763,1880,1.763,1881,2.744,1882,1.763,1883,2.744,1884,1.763,1885,3.369,1886,1.763,1887,1.763,1888,1.763,1889,4.839,1890,4.12,1891,4.12,1892,3.803,1893,1.763,1894,1.763,1895,3.856,1896,1.763,1897,2.744,1898,3.803,1899,1.763,1900,5.35,1901,4.947,1902,4.364,1903,5.02,1904,3.369,1905,1.763,1906,1.763,1907,4.12,1908,1.763,1909,3.369,1910,2.744,1911,1.763,1912,4.711,1913,4.12,1914,5.188,1915,1.763,1916,3.369,1917,1.763,1918,2.744,1919,2.744,1920,3.803,1921,2.744,1922,2.386,1923,2.744,1924,4.12,1925,2.549,1926,2.549,1927,1.763,1928,1.763,1929,1.763,1930,4.711,1931,2.744,1932,4.556,1933,1.763,1934,3.369,1935,4.562,1936,2.744,1937,4.364,1938,1.763,1939,5.119,1940,3.803,1941,2.744,1942,2.744,1943,2.386,1944,3.369,1945,2.744,1946,2.744,1947,1.763,1948,2.744,1949,2.744,1950,3.803,1951,2.744,1952,2.744,1953,3.129,1954,1.763,1955,1.763,1956,1.763,1957,1.763,1958,1.763,1959,3.369,1960,1.763,1961,4.12,1962,1.763,1963,4.364,1964,3.112,1965,4.364,1966,3.369,1967,2.146,1968,3.129,1969,3.369,1970,1.763,1971,5.119,1972,5.119,1973,4.364,1974,3.369,1975,1.763,1976,4.556,1977,1.763,1978,4.364,1979,1.763,1980,1.763,1981,3.369,1982,1.763,1983,3.369,1984,3.369,1985,3.369,1986,1.763,1987,1.763,1988,2.744,1989,2.744,1990,2.744,1991,1.763,1992,1.763,1993,5.188,1994,2.744,1995,1.763,1996,1.763,1997,1.763,1998,1.763,1999,1.918,2000,1.443,2001,2.124,2002,1.637,2003,1.763,2004,1.763,2005,1.763,2006,1.763,2007,1.763,2008,1.533,2009,1.763,2010,2.015,2011,1.763,2012,1.763,2013,1.763,2014,2.744,2015,1.637,2016,1.763,2017,1.763,2018,2.744,2019,3.803,2020,3.803,2021,1.763,2022,1.763,2023,3.369,2024,1.763,2025,2.744,2026,2.744,2027,1.763,2028,4.711,2029,2.744,2030,1.763,2031,1.763,2032,1.763,2033,2.744,2034,1.763,2035,2.744,2036,1.763,2037,1.763,2038,1.295,2039,1.763,2040,1.763,2041,1.637,2042,1.232,2043,1.763,2044,1.763,2045,1.763,2046,1.763,2047,1.763,2048,2.744,2049,1.763,2050,2.744,2420,2.451,2421,3.816,2422,2.451,2423,4.981,2424,2.131,2425,2.131,2426,2.451,2427,2.451,2428,2.131,2429,2.131,2430,2.131]],["title/injectables/FileManagementService.html",[0,1.993,856,2.334]],["body/injectables/FileManagementService.html",[0,1.756,2,1.464,3,0.059,4,0.094,5,0.179,6,0.202,7,0.124,10,1.468,14,3.133,18,3.133,21,0.345,22,0.381,23,0.222,24,0.376,26,0.076,27,0.302,28,1.222,29,1.038,30,0.319,32,0.267,34,0.649,35,0.015,36,0.539,39,0.386,40,0.292,46,1.37,47,4.471,48,0.727,49,0.663,50,0.318,51,0.187,52,0.168,55,4.532,61,0.357,65,5.28,76,1.756,77,1.464,80,0.825,85,4.889,88,0.006,89,0.006,90,0.004,94,0.702,95,0.367,96,0.702,106,1.322,131,0.374,154,0.687,166,0.668,174,1.218,209,0.562,213,0.675,214,0.356,220,0.408,227,0.544,243,1.004,248,0.28,253,1.3,254,1.051,294,0.633,296,2.184,305,1.452,337,1.675,434,1.033,440,3.904,522,1.004,544,3.02,618,1.29,629,1.464,637,0.961,646,1.29,649,4.419,678,1.869,690,2.513,719,1.501,724,3.788,725,1.464,737,2.869,748,1.29,755,2.737,762,0.755,763,0.7,771,2.333,774,2.789,780,1.474,847,3.319,849,1.37,850,2.91,852,1.29,856,2.056,885,3.487,886,2.333,905,3.621,920,1.91,960,1.37,990,1.464,995,2.513,996,2.276,997,1.22,1119,0.961,1125,4.671,1150,2.737,1152,2.333,1154,4.72,1155,2.631,1157,4.16,1160,3.038,1173,1.906,1175,1.906,1184,2.737,1187,1.906,1190,1.906,1193,3.413,1198,1.576,1199,3.133,1208,3.894,1242,2.737,1450,2.925,1453,3.167,1637,3.038,1640,2.789,1641,3.038,1644,3.038,1647,0.815,1695,3.894,1700,0.815,1702,2.789,1708,3.319,1725,2.737,1745,3.038,1749,1.717,1750,3.709,1775,2.536,1826,3.133,1999,3.477,2041,4.54,2042,3.477,2098,2.301,2146,4.321,2197,5.029,2198,5.277,2199,6.108,2200,6.261,2201,4.72,2223,4.976,2224,5.646,2225,5.216,2226,5.622,2232,3.038,2233,3.038,2238,5.325,2239,5.088,2241,3.413,2242,3.413,2243,3.574,2255,5.478,2259,4.321,2260,4.72,2261,3.788,2262,5.478,2264,5.91,2265,3.788,2272,6.261,2273,5.029,2383,3.038,2431,6.527,2432,1.906,2433,3.494,2434,3.038,2435,3.038,2436,4.356,2437,5.429,2438,3.494,2439,3.494,2440,4.97,2441,4.97,2442,4.97,2443,4.97,2444,4.97,2445,3.494,2446,3.494,2447,4.97,2448,4.97,2449,3.494,2450,3.494,2451,2.192,2452,3.494,2453,3.494,2454,2.192,2455,5.91,2456,6.775,2457,5.277,2458,5.119,2459,4.321,2460,4.72,2461,5.429,2462,6.069,2463,5.277,2464,5.478,2465,3.494,2466,2.192,2467,2.192,2468,2.192,2469,6.494,2470,5.788,2471,5.277,2472,6.494,2473,2.192,2474,2.192,2475,2.192,2476,3.494,2477,2.192,2478,3.494,2479,2.192,2480,3.788,2481,3.494,2482,3.494,2483,3.494,2484,3.494,2485,3.494,2486,3.494,2487,3.038,2488,3.494,2489,2.192,2490,3.894,2491,3.494,2492,2.192,2493,3.494,2494,2.192,2495,3.038,2496,4.321,2497,3.038,2498,4.356,2499,4.356,2500,3.494,2501,2.192,2502,3.494,2503,3.494,2504,3.494,2505,3.494,2506,3.494,2507,2.192,2508,2.192,2509,2.192,2510,2.192,2511,2.192,2512,2.192,2513,2.192,2514,2.192,2515,2.192,2516,1.102,2517,1.102,2518,2.192,2519,2.192,2520,3.494,2521,2.192,2522,3.494,2523,2.192,2524,6.069,2525,6.069,2526,2.737,2527,2.192,2528,4.356,2529,1.717,2530,2.192,2531,2.192,2532,4.356,2533,6.069,2534,6.069,2535,4.356,2536,5.429,2537,3.494,2538,2.192,2539,5.785,2540,3.494,2541,4.97,2542,4.356,2543,3.038,2544,3.494,2545,3.494,2546,2.192,2547,3.494,2548,2.192,2549,3.494,2550,4.97,2551,4.97,2552,4.97,2553,4.356,2554,3.494,2555,2.192,2556,3.494,2557,2.192,2558,3.494,2559,2.192,2560,3.494,2561,2.192,2562,2.192,2563,2.192,2564,3.494,2565,5.429,2566,4.356,2567,4.97,2568,2.192,2569,1.906,2570,4.321,2571,2.192,2572,2.192,2573,6.069,2574,6.069,2575,4.356,2576,2.192,2577,2.192,2578,2.192,2579,1.906,2580,2.192,2581,2.192,2582,2.192,2583,2.192,2584,4.356,2585,2.192,2586,2.192,2587,1.906,2588,2.192,2589,2.192,2590,2.192,2591,2.192,2592,2.192,2593,2.192,2594,3.494,2595,2.192,2596,2.192,2597,1.906,2598,2.192,2599,2.192,2600,2.192,2601,2.192,2602,3.788,2603,4.356,2604,4.97,2605,3.494,2606,3.494,2607,1.906,2608,2.192,2609,2.192,2610,2.192,2611,2.192,2612,2.192,2613,1.906,2614,1.906,2615,2.192,2616,3.494,2617,2.192,2618,2.192,2619,2.192,2620,2.192,2621,2.192,2622,2.192,2623,3.494,2624,3.494,2625,2.192,2626,2.192,2627,2.192,2628,2.192,2629,2.192,2630,2.192,2631,2.192,2632,2.192,2633,1.906]],["title/directives/FocusDirective.html",[113,0.817,189,0.787]],["body/directives/FocusDirective.html",[3,0.16,4,0.16,5,0.138,6,0.213,7,0.125,23,0.6,24,0.513,26,0.206,27,0.607,28,1.227,30,0.641,32,0.268,34,0.541,35,0.014,39,0.326,40,0.792,51,0.183,52,0.285,53,1.738,61,0.326,88,0.01,89,0.012,90,0.01,94,0.662,95,0.327,96,0.662,104,1.317,105,1.395,113,1.448,188,1.366,189,1.395,190,1.816,209,1.523,214,0.485,216,2.978,220,0.82,248,0.898,263,2.614,272,1.676,294,0.862,637,2.603,2634,5.162,2635,7.485,2636,7.485,2637,7.737,2638,5.937,2639,7.027,2640,5.937,2641,5.937,2642,5.937,2643,7.027,2644,5.937]],["title/classes/LineModel.html",[52,0.19,2645,3.106]],["body/classes/LineModel.html",[3,0.099,4,0.099,5,0.085,6,0.198,7,0.116,10,1.537,22,0.4,23,0.37,24,0.443,26,0.127,27,0.443,28,1.182,29,0.7,32,0.25,35,0.015,36,0.544,39,0.404,40,0.488,48,1.213,49,0.685,50,0.531,51,0.158,52,0.246,53,0.905,69,1.604,80,0.856,88,0.006,89,0.01,90,0.006,95,0.336,98,0.218,105,0.726,112,1.181,126,0.648,136,1.325,138,1.019,147,0.754,148,1.485,174,0.576,195,0.811,199,1.91,213,1.58,214,0.631,216,1.91,220,0.693,227,0.673,236,1.676,239,1.416,248,0.921,253,1.91,270,1.839,272,1.616,294,0.531,305,0.7,356,2.352,357,2.712,365,1.676,366,2.154,367,3.181,368,3.181,379,2.036,380,1.676,383,3.022,398,2.712,416,4.464,417,2.866,419,2.866,428,2.858,429,2.444,430,1.839,442,1.361,453,0.905,511,2.154,570,2.154,585,2.036,602,2.866,604,3.181,637,1.604,646,2.154,737,1.475,744,2.154,771,2.444,772,3.492,780,1.523,797,0.938,821,1.697,905,2.352,983,2.154,984,2.287,993,1.839,1045,2.631,1094,1.868,1095,1.309,1243,2.069,1245,4.464,1247,4.464,1271,5.592,1295,2.444,1344,2.866,1358,3.962,1359,4.023,1361,4.464,1362,3.181,1371,2.444,1373,2.444,1457,2.444,1562,2.393,1606,1.416,1922,2.287,1964,2.154,2316,4.817,2633,3.181,2645,5.862,2646,6.401,2647,3.181,2648,6.432,2649,7.581,2650,7.362,2651,6.432,2652,6.774,2653,7.735,2654,3.659,2655,3.659,2656,5.932,2657,5.932,2658,5.932,2659,3.659,2660,3.659,2661,3.659,2662,3.659,2663,3.659,2664,3.659,2665,3.181,2666,3.659,2667,3.659,2668,3.659,2669,3.659,2670,3.659,2671,3.659,2672,3.659,2673,5.135,2674,3.659,2675,3.659,2676,3.659,2677,3.659,2678,3.659,2679,3.659,2680,3.659,2681,5.135,2682,3.659,2683,3.659,2684,3.659,2685,3.659,2686,3.659,2687,3.659,2688,3.659,2689,3.659,2690,3.659,2691,5.135,2692,3.659,2693,3.181,2694,3.659,2695,5.135,2696,3.659,2697,3.659,2698,3.659,2699,3.659,2700,5.135,2701,3.659,2702,5.932,2703,3.659,2704,3.659,2705,3.659,2706,3.659,2707,5.135,2708,3.659,2709,3.659,2710,3.659,2711,5.135,2712,3.659,2713,3.659,2714,5.932,2715,3.659,2716,6.432,2717,3.659,2718,3.659,2719,3.659,2720,3.659,2721,3.659,2722,3.659,2723,3.659,2724,3.659,2725,3.659,2726,5.932,2727,3.659,2728,5.135,2729,3.659,2730,5.135,2731,3.659,2732,3.659,2733,5.932,2734,3.659,2735,3.659,2736,2.866,2737,4.648,2738,6.432,2739,4.691,2740,3.659,2741,3.659,2742,3.659,2743,5.135,2744,3.181,2745,3.181,2746,3.659,2747,3.659,2748,3.659,2749,3.659,2750,3.659,2751,3.659,2752,3.659,2753,6.774,2754,3.659,2755,5.932,2756,3.659,2757,2.866,2758,3.659,2759,3.659,2760,3.181,2761,3.659,2762,3.659,2763,5.135,2764,3.659,2765,3.659,2766,3.659,2767,6.432,2768,2.866,2769,2.866,2770,3.659,2771,3.659,2772,3.659,2773,5.135,2774,3.659,2775,3.659,2776,3.181,2777,3.659,2778,3.659,2779,3.659,2780,3.659,2781,5.932,2782,3.659,2783,5.135,2784,3.181,2785,5.932,2786,3.659,2787,3.181,2788,3.659,2789,3.659]],["title/classes/LookupTable.html",[52,0.19,2790,2.094]],["body/classes/LookupTable.html",[3,0.137,4,0.137,5,0.118,6,0.215,7,0.126,22,0.392,23,0.515,24,0.44,26,0.176,27,0.553,30,0.584,32,0.274,34,0.638,35,0.015,36,0.562,51,0.197,52,0.307,61,0.415,80,0.744,88,0.013,89,0.011,90,0.009,94,0.568,95,0.353,96,0.568,151,1.09,209,1.795,214,0.416,220,0.817,227,0.44,305,1.224,434,0.835,453,1.261,610,3.769,797,1.307,1583,3.382,2081,4.003,2526,5.752,2529,5.926,2790,3.382,2791,6.263,2792,3.993,2793,5.484,2794,5.484,2795,6.403,2796,6.384,2797,6.384,2798,6.403,2799,4.899,2800,5.097,2801,5.097,2802,5.097,2803,5.567,2804,6.384,2805,5.097,2806,6.577,2807,5.097,2808,5.097,2809,4.605,2810,4.432,2811,5.567,2812,5.567,2813,5.567,2814,5.567,2815,4.432,2816,4.432,2817,4.432,2818,4.432,2819,4.432,2820,4.432,2821,4.432,2822,4.432,2823,5.567,2824,5.567,2825,5.567,2826,6.086,2827,4.432,2828,2.443,2829,4.432,2830,4.432,2831,4.432,2832,6.086,2833,4.432,2834,4.432]],["title/components/LookupTableComponent.html",[98,0.169,150,0.787]],["body/components/LookupTableComponent.html",[3,0.114,4,0.114,5,0.098,6,0.208,7,0.127,21,0.893,22,0.288,26,0.146,27,0.49,29,0.808,30,0.517,32,0.264,34,0.623,35,0.015,36,0.484,39,0.412,40,0.564,49,0.912,50,0.614,51,0.174,52,0.307,53,1.402,61,0.375,80,0.841,88,0.007,89,0.01,90,0.007,94,0.471,95,0.342,96,0.471,98,0.272,99,0.871,100,1.304,101,1.008,102,1.008,104,0.937,105,1.661,106,1.125,107,1.008,109,1.304,110,0.904,111,1.352,112,1.304,113,0.871,114,1.63,115,1.008,116,1.008,117,0.904,118,1.008,119,0.871,120,1.008,121,0.871,122,1.008,123,1.008,124,0.871,125,0.904,126,0.642,127,1.7,128,0.871,129,1.008,130,0.871,131,0.966,132,0.904,133,1.008,134,0.871,135,1.008,136,0.871,137,1.008,138,0.839,139,1.63,140,0.839,141,0.972,142,1.461,143,1.008,144,0.904,145,1.008,146,0.871,147,0.871,148,0.839,149,1.008,150,1.357,151,1.569,152,1.008,153,0.871,154,0.825,155,0.871,156,0.808,157,1.008,158,0.871,159,1.008,160,0.871,161,1.008,162,0.871,163,0.871,164,1.352,165,0.871,166,0.808,167,1.008,168,0.871,169,1.008,170,0.871,171,1.257,172,1.008,173,0.871,174,0.893,175,0.808,176,1.352,177,0.839,178,0.871,179,1.352,180,0.871,181,0.871,182,0.904,183,0.871,184,0.871,185,1.008,186,0.871,187,0.937,188,0.972,189,0.839,190,0.972,191,1.008,194,2.687,195,1.257,204,2.872,205,2.994,206,2.872,214,0.558,216,2.38,220,0.494,227,0.49,229,1.704,239,1.636,240,1.636,241,1.35,248,0.54,252,3.379,257,3.111,294,0.614,305,1.084,455,2.124,719,1.045,733,5.012,763,1.35,1009,4.077,1084,5.551,1094,2.024,1095,1.512,1210,1.704,1243,2.285,1287,3.379,1294,2.233,1562,1.572,1647,1.572,1648,2.124,1700,1.572,1702,1.704,1775,1.853,1798,2.124,2001,2.353,2042,2.124,2316,2.823,2790,3.379,2799,4.274,2809,4.601,2828,3.518,2835,3.311,2836,4.929,2837,5.562,2838,5.943,2839,4.227,2840,4.929,2841,4.227,2842,4.227,2843,4.227,2844,5.278,2845,4.227,2846,4.227,2847,4.929,2848,4.227,2849,4.227,2850,2.823,2851,2.823,2852,3.675,2853,3.675,2854,3.675,2855,3.675,2856,3.675,2857,3.675,2858,3.675,2859,3.675,2860,4.929,2861,3.675,2862,3.311,2863,3.04,2864,3.675,2865,3.675,2866,3.675,2867,3.675,2868,3.675,2869,3.675,2870,3.675,2871,3.675,2872,3.675,2873,3.675,2874,3.675,2875,3.675,2876,3.675,2877,3.675,2878,3.675,2879,4.929,2880,3.675,2881,3.675,2882,3.675,2883,3.675,2884,3.675,2885,3.675,2886,3.675,2887,5.669,2888,5.669]],["title/classes/LookupTableData.html",[52,0.19,2844,2.852]],["body/classes/LookupTableData.html",[3,0.138,4,0.138,5,0.119,6,0.198,7,0.12,22,0.326,26,0.178,27,0.556,32,0.243,35,0.015,36,0.539,39,0.431,40,0.686,49,0.859,50,0.746,51,0.198,52,0.309,53,1.271,80,0.865,88,0.009,89,0.011,90,0.009,95,0.343,98,0.274,105,1.02,126,0.573,150,1.02,151,1.502,154,0.782,194,2.703,195,1.139,204,2.158,206,2.158,214,0.525,216,2.394,227,0.556,239,1.988,240,1.988,241,1.641,248,0.656,252,3.71,257,2.968,294,0.746,305,1.23,455,2.582,719,1.271,733,5.504,763,1.641,797,1.318,1009,4.627,1084,5.296,1094,1.937,1095,1.838,1210,2.071,1243,2.593,1287,3.398,1294,2.713,1562,1.911,1647,1.911,1648,2.582,1700,1.911,1702,2.071,1775,2.252,1798,2.582,2001,2.859,2042,2.582,2316,3.431,2790,3.398,2799,4.603,2809,5.052,2828,3.367,2835,4.025,2836,4.467,2837,4.467,2838,4.467,2840,4.467,2844,5.563,2847,4.467,2850,3.431,2851,3.431,2852,6.108,2853,6.108,2854,6.108,2855,4.467,2856,4.467,2857,4.467,2858,4.467,2859,4.467,2860,5.594,2861,4.467,2862,4.025,2863,3.695,2864,4.467,2865,4.467,2866,4.467,2867,4.467,2868,4.467,2869,4.467,2870,4.467,2871,4.467,2872,4.467,2873,4.467,2874,4.467,2875,4.467,2876,4.467,2877,4.467,2878,4.467,2879,5.594,2880,4.467,2881,4.467,2882,4.467,2883,4.467,2884,4.467,2885,4.467,2886,4.467,2889,5.137,2890,5.137,2891,5.137]],["title/classes/LookupTableEntry.html",[52,0.19,2799,2.479]],["body/classes/LookupTableEntry.html",[3,0.14,4,0.14,5,0.12,6,0.212,7,0.124,22,0.393,23,0.654,24,0.559,26,0.179,27,0.559,30,0.59,32,0.268,34,0.59,35,0.015,36,0.561,51,0.199,52,0.31,61,0.387,80,0.749,88,0.013,89,0.011,90,0.009,94,0.577,95,0.354,96,0.577,151,1.108,209,1.329,214,0.528,220,0.605,227,0.447,305,1.237,434,0.849,453,1.282,610,4.347,797,1.329,1583,3.417,2081,4.618,2458,3.727,2526,5.068,2529,5.955,2790,2.737,2791,6.161,2792,4.06,2793,4.06,2794,4.06,2796,4.505,2797,4.505,2799,4.847,2803,4.505,2804,5.624,2806,6.74,2809,5.312,2810,6.422,2811,5.624,2812,5.624,2813,5.624,2814,5.624,2815,5.624,2816,4.505,2817,4.505,2818,4.505,2819,4.505,2820,4.505,2821,4.505,2822,4.505,2823,5.624,2824,5.624,2825,5.624,2826,6.132,2827,4.505,2828,2.484,2829,4.505,2830,4.505,2831,4.505,2832,6.132,2833,4.505,2834,4.505,2892,6.469,2893,5.182,2894,5.182,2895,5.182,2896,5.182,2897,5.182,2898,5.182]],["title/classes/LookupTableUtil.html",[52,0.19,2899,3.106]],["body/classes/LookupTableUtil.html",[3,0.135,4,0.135,5,0.116,6,0.197,7,0.115,10,2.105,22,0.352,26,0.174,28,1.138,30,0.578,32,0.24,34,0.633,35,0.015,36,0.511,39,0.413,51,0.154,52,0.24,61,0.381,80,0.839,88,0.009,89,0.011,90,0.009,94,0.774,95,0.324,96,0.774,126,0.614,214,0.567,227,0.674,238,1.94,239,1.94,305,0.958,453,1.567,797,1.285,851,4.54,875,2.397,1093,3.926,1094,2.153,1095,1.793,1121,3.604,1359,5.717,1562,1.864,1943,3.96,2739,5.324,2760,6.345,2790,3.975,2828,3.742,2850,3.347,2851,3.347,2899,4.963,2900,6.345,2901,5.508,2902,6.335,2903,6.335,2904,6.335,2905,6.335,2906,5.717,2907,5.012,2908,6.335,2909,5.012,2910,6.335,2911,5.012,2912,2.95,2913,3.347,2914,5.012,2915,3.926,2916,7.527,2917,5.012,2918,5.012,2919,7.298,2920,7.527,2921,6.946,2922,6.335,2923,6.335,2924,5.012,2925,5.012,2926,5.012,2927,5.012,2928,6.335,2929,5.012,2930,5.012,2931,6.946,2932,6.946,2933,5.012,2934,5.012,2935,5.012,2936,6.335,2937,5.012]],["title/classes/MappedField.html",[52,0.19,1788,1.535]],["body/classes/MappedField.html",[3,0.093,4,0.155,5,0.08,6,0.196,7,0.117,21,0.546,22,0.421,23,0.499,24,0.427,26,0.199,27,0.427,29,0.662,30,0.45,32,0.251,34,0.572,35,0.015,36,0.538,37,1.586,39,0.379,49,0.659,50,0.503,51,0.177,52,0.276,61,0.345,80,0.874,88,0.01,89,0.008,90,0.006,94,0.55,95,0.309,96,0.55,126,0.676,131,0.842,154,0.698,156,0.662,187,0.768,199,2.821,209,0.888,214,0.512,220,0.935,227,0.694,238,1.341,248,0.907,253,1.837,255,1.829,294,0.963,301,1.837,305,1.269,319,1.741,365,1.586,434,1.255,442,2.821,453,1.641,519,3.552,666,1.586,678,2.161,723,1.396,737,1.991,764,1.829,780,2.047,797,0.888,821,1.646,875,1.708,905,2.637,985,4.14,988,1.928,1094,1.362,1119,1.518,1146,2.491,1324,2.713,1372,2.165,1373,2.313,1408,1.455,1534,2.039,1540,2.713,1550,3.87,1551,2.713,1562,1.837,1565,2.491,1569,2.039,1606,2.228,1639,1.518,1680,2.418,1788,3.212,1866,1.928,1903,2.165,1935,2.165,2008,2.165,2010,3.958,2054,2.983,2098,1.829,2130,3.389,2177,2.713,2180,4.51,2181,2.313,2205,1.741,2247,2.713,2516,1.741,2517,1.741,2736,2.713,2739,2.313,2757,2.713,2768,2.713,2769,2.713,2938,2.713,2939,5.005,2940,5.457,2941,4.294,2942,4.939,2943,3.464,2944,3.464,2945,4.772,2946,3.464,2947,3.464,2948,3.464,2949,3.87,2950,3.464,2951,4.294,2952,3.464,2953,2.713,2954,3.389,2955,3.011,2956,3.299,2957,3.011,2958,3.011,2959,3.011,2960,3.011,2961,3.011,2962,3.011,2963,3.011,2964,3.011,2965,3.011,2966,3.011,2967,3.552,2968,2.713,2969,3.87,2970,4.772,2971,2.713,2972,3.011,2973,3.011,2974,3.011,2975,3.011,2976,3.011,2977,3.011,2978,3.011,2979,2.491,2980,2.491,2981,3.011,2982,4.294,2983,5.005,2984,5.005,2985,3.011,2986,3.011,2987,3.011,2988,3.011,2989,3.011,2990,2.713,2991,3.011,2992,3.011,2993,2.713,2994,5.005,2995,3.011,2996,3.011,2997,3.011,2998,5.005,2999,4.294,3000,3.011,3001,5.005,3002,5.005,3003,3.011,3004,3.011,3005,3.011,3006,3.011,3007,2.491,3008,3.011,3009,3.011,3010,3.011,3011,3.011,3012,5.005,3013,3.011,3014,3.011,3015,3.011,3016,2.713,3017,2.713,3018,3.011,3019,4.294,3020,4.294,3021,3.011,3022,3.011,3023,3.011,3024,3.011,3025,3.011,3026,3.011,3027,3.011,3028,3.011,3029,4.294,3030,4.294,3031,3.87,3032,3.011,3033,3.011,3034,3.011,3035,4.294,3036,4.294,3037,2.713,3038,3.011,3039,3.011,3040,3.011,3041,3.011,3042,3.011,3043,3.011,3044,3.011,3045,2.713,3046,3.011,3047,3.011,3048,3.011,3049,3.011,3050,2.713,3051,3.011]],["title/classes/MappedFieldParsingData.html",[52,0.19,2945,2.852]],["body/classes/MappedFieldParsingData.html",[3,0.091,4,0.153,5,0.079,6,0.206,7,0.122,21,0.535,22,0.42,23,0.764,24,0.652,26,0.197,27,0.421,29,0.649,32,0.264,35,0.015,36,0.549,37,1.555,39,0.376,49,0.65,50,0.493,51,0.175,52,0.273,61,0.267,80,0.872,88,0.01,89,0.008,90,0.006,95,0.337,126,0.673,131,0.83,154,0.693,187,0.753,199,2.686,209,0.871,214,0.465,220,0.926,227,0.705,238,1.314,248,0.953,253,1.812,255,1.793,294,0.956,301,1.812,305,1.189,319,1.707,365,1.555,434,1.251,442,2.81,453,1.629,519,3.502,666,1.555,678,2.142,723,1.368,737,1.963,764,1.793,780,2.033,797,0.871,821,1.628,875,1.007,905,2.608,985,4.095,988,1.89,1094,1.343,1119,1.488,1146,2.442,1324,2.66,1372,2.123,1373,2.268,1408,1.426,1534,1.999,1540,4.461,1550,3.815,1551,2.66,1562,1.812,1565,2.442,1569,1.999,1606,2.204,1639,1.488,1680,2.392,1788,3.195,1866,1.89,1903,2.123,1935,2.123,2008,2.123,2010,3.883,2054,2.766,2098,1.793,2130,1.999,2177,2.66,2180,4.461,2181,2.268,2205,1.707,2247,2.66,2516,1.707,2517,1.707,2736,2.66,2739,2.268,2757,2.66,2768,2.66,2769,2.66,2938,2.66,2939,2.952,2940,2.952,2945,4.473,2949,2.66,2951,2.952,2953,2.66,2954,3.351,2955,2.952,2956,3.252,2957,4.95,2958,4.95,2959,4.95,2960,4.95,2961,4.95,2962,4.95,2963,4.95,2964,4.95,2965,4.95,2966,4.95,2967,3.502,2968,2.66,2969,3.815,2970,4.736,2971,2.66,2972,2.952,2973,2.952,2974,2.952,2975,2.952,2976,2.952,2977,2.952,2978,2.952,2979,2.442,2980,2.442,2981,2.952,2982,4.234,2983,4.95,2984,4.95,2985,2.952,2986,2.952,2987,2.952,2988,2.952,2989,2.952,2990,2.66,2991,2.952,2992,2.952,2993,2.66,2994,4.95,2995,2.952,2996,2.952,2997,2.952,2998,4.95,2999,4.234,3000,2.952,3001,4.95,3002,4.95,3003,2.952,3004,2.952,3005,2.952,3006,2.952,3007,2.442,3008,2.952,3009,2.952,3010,2.952,3011,2.952,3012,4.95,3013,2.952,3014,2.952,3015,2.952,3016,2.66,3017,2.66,3018,2.952,3019,4.234,3020,4.234,3021,2.952,3022,2.952,3023,2.952,3024,2.952,3025,2.952,3026,2.952,3027,2.952,3028,2.952,3029,4.234,3030,4.234,3031,3.815,3032,2.952,3033,2.952,3034,2.952,3035,4.234,3036,4.234,3037,2.66,3038,2.952,3039,2.952,3040,2.952,3041,2.952,3042,2.952,3043,2.952,3044,2.952,3045,2.66,3046,2.952,3047,2.952,3048,2.952,3049,2.952,3050,2.66,3051,2.952,3052,3.396,3053,3.396,3054,3.396,3055,3.396,3056,3.396,3057,3.396,3058,3.396,3059,3.396,3060,3.396,3061,3.396,3062,3.396]],["title/classes/MappingDefinition.html",[52,0.19,851,2.207]],["body/classes/MappingDefinition.html",[3,0.114,4,0.114,5,0.098,6,0.22,7,0.129,22,0.392,23,0.771,24,0.658,26,0.147,27,0.49,28,1.265,30,0.518,32,0.282,34,0.704,35,0.015,36,0.554,39,0.392,51,0.13,52,0.203,61,0.438,80,0.829,88,0.007,89,0.01,90,0.007,94,0.836,95,0.378,96,0.836,126,0.582,131,0.722,154,0.574,209,1.642,214,0.523,218,2.807,220,0.876,227,0.658,237,2.237,238,1.639,239,1.639,797,1.086,851,3.16,886,2.829,905,3.491,988,3.808,1094,2.21,1119,1.856,1562,1.576,1583,2.237,1797,2.648,1866,2.357,2490,5.017,2516,2.129,2517,2.129,2737,5.017,2739,3.791,2790,4.27,2793,4.447,2794,5.359,2828,3.419,2850,2.829,2851,2.829,2979,3.046,2980,3.046,3050,3.318,3063,7.097,3064,3.318,3065,6.403,3066,7.134,3067,6.403,3068,6.403,3069,5.567,3070,5.677,3071,5.677,3072,5.677,3073,5.677,3074,5.677,3075,6.841,3076,4.936,3077,5.677,3078,6.841,3079,5.677,3080,3.682,3081,3.682,3082,4.235,3083,3.682,3084,4.235,3085,5.677,3086,3.682,3087,3.682,3088,5.677,3089,4.235,3090,5.677,3091,4.235,3092,5.677,3093,4.235,3094,5.677,3095,5.677,3096,3.682,3097,5.677,3098,4.235,3099,4.235,3100,5.677,3101,4.235,3102,5.677,3103,4.235,3104,4.235,3105,5.677,3106,4.235,3107,4.235,3108,4.235,3109,6.841,3110,4.235,3111,4.235,3112,4.235,3113,4.235,3114,4.235,3115,4.235,3116,4.235,3117,4.235,3118,4.235,3119,4.235,3120,5.677,3121,4.235,3122,4.936,3123,5.677,3124,4.235,3125,4.235]],["title/components/MappingDetailComponent.html",[98,0.169,153,0.817]],["body/components/MappingDetailComponent.html",[3,0.113,4,0.113,5,0.097,6,0.21,7,0.126,21,0.89,22,0.213,26,0.145,27,0.488,28,1.201,29,1.22,30,0.515,32,0.267,34,0.649,35,0.015,36,0.384,39,0.418,40,0.561,48,1.393,49,0.851,50,0.61,51,0.129,52,0.271,53,1.397,61,0.391,80,0.778,88,0.007,89,0.01,90,0.007,94,0.629,95,0.341,96,0.629,98,0.271,99,0.866,100,1.299,101,1.002,102,1.002,104,0.932,105,1.66,106,1.121,107,1.002,109,1.299,110,0.898,111,1.347,112,1.299,113,0.866,114,1.627,115,1.002,116,1.002,117,0.898,118,1.002,119,0.866,120,1.002,121,1.405,122,1.002,123,1.002,124,0.866,125,0.898,126,0.657,127,1.697,128,0.866,129,1.002,130,0.866,131,0.963,132,0.898,133,1.002,134,0.866,135,1.002,136,0.866,137,1.002,138,0.834,139,1.627,140,0.834,141,0.967,142,1.458,143,1.002,144,0.898,145,1.002,146,0.866,147,0.866,148,0.834,149,1.002,150,0.834,151,1.207,152,1.002,153,1.466,154,0.829,155,0.866,156,0.804,157,1.002,158,0.866,159,1.002,160,0.866,161,1.002,162,0.866,163,0.866,164,1.347,165,0.866,166,0.804,167,1.002,168,1.542,169,1.002,170,0.866,171,1.252,172,1.002,173,0.866,174,0.89,175,0.804,176,1.347,177,1.511,178,0.866,179,1.347,180,0.866,181,0.866,182,0.898,183,0.866,184,0.866,185,1.002,186,0.866,187,0.932,188,0.967,189,0.834,190,0.967,191,1.002,195,1.252,213,1.293,214,0.621,229,1.694,236,1.925,239,1.627,240,1.627,241,1.342,248,0.537,257,3.14,258,3.022,263,2.101,270,3.206,272,1.521,356,2.921,357,3.369,376,3.55,379,3.796,380,3.124,398,3.369,418,3.949,455,2.838,585,3.143,772,2.474,885,2.014,1069,3.654,1082,3.654,1094,1.759,1095,1.504,1220,2.807,1221,4.062,1222,4.062,1250,3.292,1286,3.654,1289,3.292,1377,3.022,1379,3.772,1380,3.772,1385,3.772,1386,2.807,1387,4.555,1389,3.772,1391,3.654,1398,2.807,1399,3.772,1407,3.772,1408,2.679,1410,3.022,1411,2.807,1412,2.807,2737,3.292,3076,4.91,3122,4.91,3126,6.378,3127,6.378,3128,7.327,3129,4.91,3130,4.203,3131,3.292,3132,4.203,3133,5.648,3134,4.203,3135,5.648,3136,4.203,3137,4.203,3138,5.648,3139,4.203,3140,4.203,3141,4.203,3142,4.203,3143,4.203,3144,3.654,3145,4.203,3146,4.203,3147,4.203,3148,3.654,3149,4.203,3150,4.203,3151,4.203,3152,4.203,3153,4.203,3154,4.203,3155,4.203,3156,4.203,3157,4.203,3158,4.203,3159,4.203]],["title/components/MappingFieldActionArgumentComponent.html",[98,0.169,155,0.817]],["body/components/MappingFieldActionArgumentComponent.html",[3,0.083,4,0.083,5,0.072,6,0.213,7,0.126,10,1.298,21,0.716,22,0.384,23,0.546,24,0.608,26,0.22,27,0.393,28,0.884,29,1.032,30,0.415,32,0.272,34,0.666,35,0.015,36,0.518,39,0.377,40,0.412,49,0.72,50,0.449,51,0.095,52,0.218,61,0.407,69,2.608,80,0.747,88,0.005,89,0.008,90,0.005,94,0.784,95,0.367,96,0.784,98,0.27,99,0.637,100,1.046,101,0.737,102,0.737,104,0.685,105,1.628,106,0.903,107,0.737,109,1.046,110,0.661,111,1.085,112,1.046,113,0.637,114,1.419,115,0.737,116,0.737,117,0.661,118,0.737,119,0.637,120,0.737,121,0.637,122,0.737,123,0.737,124,0.637,125,0.661,126,0.676,127,1.513,128,0.637,129,0.737,130,0.637,131,0.92,132,0.661,133,0.737,134,0.637,135,0.737,136,0.637,137,0.737,138,0.613,139,1.419,140,0.613,141,0.711,142,1.272,143,0.737,144,0.661,145,0.737,146,0.637,147,0.637,148,0.613,149,0.737,150,0.613,151,0.661,152,0.737,153,0.637,154,0.778,155,1.226,156,1.573,157,0.737,158,0.637,159,0.737,160,0.637,161,0.737,162,0.637,163,0.637,164,1.085,165,0.637,166,0.591,167,0.737,168,0.637,169,0.737,170,0.637,171,1.32,172,0.737,173,0.637,174,0.716,175,0.591,176,1.085,177,0.613,178,0.637,179,1.085,180,0.637,181,0.637,182,0.661,183,0.637,184,0.637,185,0.737,186,0.637,187,0.685,188,0.711,189,0.613,190,0.711,191,0.737,195,1.008,209,1.384,213,1.831,214,0.574,220,0.63,227,0.466,248,0.76,253,1.692,255,2.402,257,3.184,263,1.692,272,1.805,278,4.287,294,0.783,298,3.974,301,1.692,418,3.971,434,0.975,486,3.037,522,3.038,529,3.954,538,3.562,544,2.18,583,2.677,585,1.72,678,2.184,719,1.335,723,1.833,737,2.673,762,1.064,763,0.987,774,1.245,776,2.064,780,2.087,821,2.089,861,3.72,1095,1.106,1100,3.037,1119,1.354,1180,3.954,1243,1.833,1310,3.954,1411,2.064,1453,2.285,1592,2.421,1639,2.608,1640,1.833,1647,1.149,1649,3.954,1696,4.662,1700,1.149,1702,1.833,1714,3.954,1788,2.567,1802,3.562,1895,2.677,1922,2.843,1925,3.974,1999,2.285,2000,2.677,2038,1.632,2054,2.881,2060,3.502,2072,3.997,2073,3.502,2089,1.819,2096,4.493,2130,2.677,2155,3.037,2159,3.037,2204,1.932,2205,1.553,2516,1.553,2517,1.553,2913,2.064,2954,1.819,3160,2.687,3161,4.547,3162,5.396,3163,4.691,3164,4.547,3165,4.547,3166,5.951,3167,4.547,3168,4.547,3169,3.562,3170,5.174,3171,4.547,3172,4.547,3173,4.547,3174,7.036,3175,6.858,3176,7.036,3177,4.547,3178,3.09,3179,3.09,3180,3.09,3181,3.09,3182,3.09,3183,3.09,3184,4.547,3185,3.09,3186,4.547,3187,3.09,3188,5.951,3189,3.27,3190,5.372,3191,3.562,3192,3.09,3193,3.954,3194,4.547,3195,3.09,3196,4.547,3197,3.09,3198,4.547,3199,4.547,3200,4.547,3201,4.547,3202,3.562,3203,4.547,3204,4.547,3205,3.09,3206,3.562,3207,4.547,3208,4.547,3209,3.09,3210,4.547,3211,4.797,3212,3.09,3213,4.547,3214,4.547,3215,3.09,3216,4.547,3217,3.09,3218,4.547,3219,4.547,3220,5.396,3221,3.954,3222,5.396,3223,3.09,3224,2.064,3225,2.421,3226,3.09,3227,2.421,3228,4.662,3229,2.687,3230,3.954,3231,4.547,3232,2.677,3233,3.09,3234,4.547,3235,3.09,3236,3.09,3237,4.547,3238,3.09,3239,3.09,3240,3.09,3241,2.421,3242,3.09,3243,3.09,3244,3.09,3245,3.09,3246,2.687,3247,3.09,3248,3.09,3249,3.09,3250,2.687,3251,3.09,3252,2.421,3253,2.421,3254,4.547,3255,2.421,3256,3.09,3257,2.687,3258,3.09,3259,4.547,3260,3.09,3261,3.09,3262,3.09,3263,3.09,3264,3.09,3265,3.09,3266,3.09,3267,3.09,3268,2.687,3269,4.547,3270,6.633,3271,4.547,3272,3.954]],["title/components/MappingFieldActionComponent.html",[98,0.169,158,0.817]],["body/components/MappingFieldActionComponent.html",[3,0.109,4,0.109,5,0.094,6,0.212,7,0.127,21,0.868,22,0.341,23,0.557,24,0.35,26,0.251,27,0.476,29,1.197,30,0.502,32,0.27,34,0.661,35,0.015,36,0.425,39,0.386,40,0.541,49,0.835,50,0.588,51,0.125,52,0.264,61,0.398,80,0.746,88,0.007,89,0.009,90,0.007,94,0.698,95,0.346,96,0.698,98,0.266,99,0.835,100,1.267,101,0.966,102,0.966,104,0.899,105,1.657,106,1.094,107,0.966,109,1.267,110,0.866,111,1.314,112,1.267,113,0.835,114,1.603,115,0.966,116,0.966,117,0.866,118,0.966,119,0.835,120,0.966,121,0.835,122,0.966,123,0.966,124,0.835,125,0.866,126,0.68,127,1.676,128,0.835,129,0.966,130,0.835,131,1.067,132,0.866,133,0.966,134,0.835,135,0.966,136,0.835,137,0.966,138,0.804,139,1.603,140,0.804,141,0.932,142,1.436,143,0.966,144,0.866,145,0.966,146,0.835,147,0.835,148,0.804,149,0.966,150,0.804,151,0.866,152,0.966,153,0.835,154,0.819,155,0.835,156,1.531,157,0.966,158,1.384,159,0.966,160,0.835,161,0.966,162,0.835,163,0.835,164,1.314,165,0.835,166,0.775,167,0.966,168,0.835,169,0.966,170,0.835,171,1.49,172,0.966,173,0.835,174,0.868,175,0.775,176,1.314,177,0.804,178,0.835,179,1.314,180,0.835,181,0.835,182,0.866,183,0.835,184,0.835,185,0.966,186,0.835,187,0.899,188,0.932,189,0.804,190,0.932,191,0.966,195,1.222,199,2.329,213,1.696,214,0.511,220,0.846,257,3.172,263,2.05,272,1.676,278,3.914,418,3.955,434,1.152,442,1.507,522,2.524,668,4.317,678,2.313,780,1.635,821,1.791,861,3.914,885,2.641,997,2.255,1094,1.727,1095,1.45,1119,1.776,1243,1.633,1275,2.533,1408,2.315,1639,2.415,1788,2.806,2054,3.115,2062,3.549,2073,3.243,2074,2.14,2080,3.914,2082,3.243,2084,2.255,2088,2.533,2089,2.385,2096,3.243,2130,3.243,2155,3.68,2204,2.533,2205,2.036,2516,2.036,2517,2.036,2941,4.79,2949,4.317,3169,4.905,3170,5.841,3189,3.963,3190,4.905,3191,4.317,3229,3.523,3232,2.385,3252,3.174,3253,3.174,3255,3.174,3257,3.523,3273,3.523,3274,5.51,3275,6.719,3276,4.79,3277,6.719,3278,4.79,3279,4.052,3280,4.052,3281,4.052,3282,4.052,3283,4.052,3284,4.79,3285,4.052,3286,4.052,3287,4.052,3288,4.79,3289,4.052,3290,4.79,3291,4.052,3292,4.79,3293,4.79,3294,4.052,3295,4.317,3296,3.963,3297,4.052,3298,4.052,3299,4.79,3300,4.052,3301,4.052,3302,3.523,3303,3.523,3304,3.523,3305,3.523,3306,3.523,3307,3.174,3308,3.523,3309,3.523,3310,3.523,3311,3.523,3312,3.523,3313,3.523,3314,4.79]],["title/components/MappingFieldContainerComponent.html",[98,0.169,160,0.817]],["body/components/MappingFieldContainerComponent.html",[3,0.08,4,0.157,5,0.069,6,0.219,7,0.129,21,0.696,22,0.395,23,0.661,24,0.601,26,0.103,27,0.382,28,1.252,29,1.008,30,0.403,32,0.281,34,0.714,35,0.015,36,0.523,39,0.382,40,0.397,47,3.104,48,0.986,49,0.704,50,0.432,51,0.091,52,0.212,53,1.093,61,0.416,80,0.469,88,0.005,89,0.008,90,0.005,94,0.818,95,0.366,96,0.818,98,0.224,99,0.612,100,1.016,101,0.709,102,0.709,104,0.659,105,1.623,106,0.877,107,0.709,109,1.016,110,0.635,111,1.054,112,1.016,113,0.612,114,1.393,115,0.709,116,0.709,117,0.635,118,0.709,119,0.612,120,0.709,121,0.612,122,0.709,123,0.709,124,0.612,125,0.635,126,0.674,127,1.489,128,0.612,129,0.709,130,0.612,131,0.899,132,0.635,133,0.709,134,0.612,135,0.709,136,0.612,137,0.709,138,0.59,139,1.393,140,0.59,141,0.684,142,1.248,143,0.709,144,0.635,145,0.709,146,0.612,147,0.612,148,0.59,149,0.709,150,0.59,151,0.635,152,0.709,153,0.612,154,0.787,155,0.612,156,0.568,157,0.709,158,0.612,159,0.709,160,1.203,161,0.709,162,0.612,163,0.612,164,1.054,165,0.612,166,0.568,167,0.709,168,0.612,169,0.709,170,0.612,171,0.98,172,0.709,173,0.612,174,0.696,175,0.568,176,1.054,177,1.159,178,0.612,179,1.054,180,0.612,181,0.612,182,0.635,183,0.612,184,0.612,185,0.709,186,0.612,187,0.659,188,0.684,189,0.59,190,0.684,191,0.709,195,0.98,199,1.962,209,1.353,213,2.188,214,0.628,220,0.877,227,0.585,239,1.15,240,1.15,241,0.949,248,0.889,257,3.275,263,1.644,270,2.651,272,1.56,275,3.25,294,0.983,356,2.416,376,2.936,380,2.675,418,4.084,434,1.072,440,2.138,485,1.858,526,2.584,540,2.584,646,3.104,698,4.585,745,2.584,782,3.842,783,2.584,784,2.584,821,1.264,983,1.75,984,1.858,1094,1.454,1095,1.064,1119,1.303,1225,4.585,1226,3.842,1227,3.842,1229,4.585,1239,3.842,1241,3.842,1252,3.842,1254,3.842,1255,5.077,1259,3.842,1285,3.842,1302,2.584,1307,4.585,1320,3.842,1321,2.584,1322,2.584,1323,2.584,1326,4.585,1327,4.132,1328,3.793,1336,1.858,1341,1.985,1418,2.584,1606,2.26,1654,2.138,1680,1.856,1788,2.877,1895,3.437,2010,1.57,2335,4.585,2366,2.584,2367,2.584,2400,2.584,2516,1.494,2517,1.494,2597,2.584,2912,1.75,2913,1.985,2967,2.138,3007,3.178,3144,2.584,3232,1.75,3250,2.584,3296,5.203,3315,2.584,3316,4.419,3317,4.419,3318,5.274,3319,5.274,3320,4.132,3321,4.585,3322,5.839,3323,5.839,3324,5.839,3325,4.419,3326,4.419,3327,5.839,3328,5.839,3329,5.839,3330,5.839,3331,4.419,3332,3.842,3333,3.842,3334,4.419,3335,4.419,3336,2.972,3337,2.972,3338,2.972,3339,2.972,3340,2.972,3341,2.972,3342,2.972,3343,2.972,3344,5.839,3345,2.972,3346,2.972,3347,6.54,3348,2.972,3349,4.419,3350,2.972,3351,2.972,3352,2.972,3353,4.419,3354,2.972,3355,2.972,3356,2.972,3357,4.419,3358,2.972,3359,2.972,3360,2.972,3361,4.419,3362,2.972,3363,5.839,3364,2.972,3365,4.419,3366,2.972,3367,2.972,3368,2.972,3369,2.972,3370,2.972,3371,2.972,3372,2.972,3373,2.972,3374,4.132,3375,2.972,3376,4.419,3377,2.972,3378,2.329,3379,2.329,3380,4.419,3381,4.419,3382,4.419,3383,5.274,3384,2.972,3385,4.419,3386,2.972,3387,2.972,3388,2.329,3389,2.972,3390,2.972,3391,2.972,3392,4.419,3393,4.419,3394,2.972,3395,2.972,3396,2.972,3397,2.972,3398,2.972,3399,5.274,3400,2.584,3401,2.972,3402,2.972,3403,2.972,3404,2.972,3405,2.972,3406,3.842,3407,2.972,3408,4.419,3409,4.419,3410,2.584,3411,2.972,3412,5.274,3413,4.585,3414,2.329,3415,2.138,3416,2.138,3417,2.972,3418,2.972,3419,2.329,3420,2.972,3421,2.584,3422,2.584]],["title/components/MappingFieldDetailComponent.html",[98,0.169,162,0.817]],["body/components/MappingFieldDetailComponent.html",[3,0.093,4,0.093,5,0.08,6,0.214,7,0.127,21,0.776,22,0.388,24,0.637,26,0.259,27,0.425,28,1.21,29,1.098,30,0.449,32,0.276,34,0.691,35,0.015,36,0.493,39,0.364,40,0.46,49,0.767,50,0.501,51,0.106,52,0.236,53,1.218,61,0.364,80,0.704,88,0.006,89,0.008,90,0.006,94,0.549,95,0.344,96,0.549,98,0.244,99,0.711,100,1.133,101,0.823,102,0.823,104,0.765,105,1.64,106,0.978,107,0.823,109,1.133,110,0.738,111,1.175,112,1.133,113,0.711,114,1.495,115,0.823,116,0.823,117,0.738,118,0.823,119,0.711,120,0.823,121,0.711,122,0.823,123,0.823,124,0.711,125,0.738,126,0.677,127,1.581,128,0.711,129,0.823,130,0.711,131,0.84,132,0.738,133,0.823,134,0.711,135,0.823,136,0.711,137,0.823,138,0.685,139,1.495,140,0.685,141,0.794,142,1.339,143,0.823,144,0.738,145,0.823,146,0.711,147,0.711,148,0.685,149,0.823,150,0.685,151,0.738,152,0.823,153,0.711,154,0.796,155,0.711,156,1.317,157,0.823,158,0.711,159,0.823,160,0.711,161,0.823,162,1.291,163,0.711,164,1.175,165,0.711,166,0.66,167,0.823,168,0.711,169,0.823,170,0.711,171,1.092,172,0.823,173,0.711,174,0.776,175,0.66,176,1.175,177,0.685,178,0.711,179,1.175,180,0.711,181,0.711,182,0.738,183,0.711,184,0.711,185,0.823,186,0.711,187,0.765,188,0.794,189,0.685,190,0.794,191,0.823,195,1.092,199,2.137,213,1.516,214,0.602,220,0.828,227,0.672,248,0.441,252,1.823,253,1.833,257,3.203,263,1.833,272,1.581,275,3.488,294,0.715,305,0.66,356,2.631,380,2.87,418,3.994,434,1.086,442,1.833,453,0.854,473,2.157,719,0.854,737,1.985,762,1.188,763,1.102,776,2.305,780,1.461,885,2.361,1094,1.584,1095,1.235,1100,3.29,1152,3.29,1220,2.305,1221,3.543,1222,3.543,1243,2.316,1248,3,1250,2.703,1260,3,1289,2.703,1336,2.157,1639,3.02,1640,1.391,1647,1.284,1648,1.734,1680,3.101,1700,1.284,1702,1.391,1725,3.859,1775,1.513,1788,3.076,1838,3.29,1964,3.382,1999,1.734,2000,2.031,2001,1.921,2010,1.823,2054,2.413,2130,2.031,2155,4.426,2204,2.157,2205,1.734,2390,4.995,2415,3,2416,3,2418,3,2419,3,2967,3.543,3007,3.543,3045,4.501,3131,2.703,3228,4.909,3232,2.9,3295,2.703,3296,2.482,3332,4.283,3378,2.703,3379,2.703,3400,3,3406,3,3421,3,3422,3,3423,6.626,3424,5.745,3425,6.266,3426,6.266,3427,5.448,3428,5.991,3429,5.448,3430,5.448,3431,4.926,3432,6.266,3433,6.266,3434,3.451,3435,3.451,3436,3.451,3437,3,3438,3.451,3439,3.451,3440,3.451,3441,3.451,3442,3.451,3443,4.926,3444,3.451,3445,4.926,3446,4.926,3447,3.859,3448,5.745,3449,4.132,3450,4.283,3451,4.926,3452,4.926,3453,4.926,3454,4.926,3455,4.926,3456,3.451,3457,3.451,3458,4.926,3459,4.926,3460,4.926,3461,4.283,3462,3.451,3463,3,3464,3.451,3465,4.995,3466,3.451,3467,5.745,3468,3.451,3469,4.283,3470,3.451,3471,3.451,3472,6.266,3473,3.451,3474,3.451,3475,5.745,3476,3.451,3477,3.451,3478,3.451,3479,3.451,3480,3.451,3481,3.451,3482,3.451,3483,3,3484,3.451,3485,4.283,3486,4.283,3487,4.926,3488,3.451]],["title/components/MappingListComponent.html",[98,0.169,163,0.817]],["body/components/MappingListComponent.html",[3,0.091,4,0.091,5,0.078,6,0.217,7,0.128,21,0.762,22,0.398,23,0.626,24,0.535,26,0.227,27,0.418,28,1.249,29,1.083,30,0.441,32,0.278,34,0.715,35,0.015,36,0.533,39,0.375,40,0.449,48,1.116,49,0.756,50,0.489,51,0.103,52,0.232,53,1.197,61,0.409,80,0.726,88,0.006,89,0.008,90,0.01,94,0.785,95,0.358,96,0.785,98,0.241,99,0.693,100,1.113,101,0.803,102,0.803,104,0.746,105,1.638,106,0.961,107,0.803,109,1.113,110,0.72,111,1.154,112,1.113,113,0.693,114,1.478,115,0.803,116,0.803,117,0.72,118,0.803,119,0.693,120,0.803,121,0.693,122,0.803,123,0.803,124,0.693,125,0.72,126,0.622,127,1.565,128,0.693,129,0.803,130,0.693,131,0.825,132,0.72,133,0.803,134,0.693,135,0.803,136,0.693,137,0.803,138,0.668,139,1.478,140,0.668,141,0.774,142,1.324,143,0.803,144,0.72,145,0.803,146,0.693,147,0.693,148,0.668,149,0.803,150,0.668,151,0.72,152,0.803,153,0.693,154,0.81,155,0.693,156,0.644,157,0.803,158,0.693,159,0.803,160,0.693,161,0.803,162,0.693,163,1.276,164,1.154,165,0.693,166,1.083,167,0.803,168,0.693,169,0.803,170,0.693,171,1.073,172,0.803,173,0.693,174,0.762,175,0.644,176,1.154,177,0.668,178,0.693,179,1.154,180,0.693,181,0.693,182,0.72,183,0.693,184,0.693,185,0.803,186,0.693,187,0.746,188,0.774,189,0.668,190,0.774,191,0.803,195,1.073,199,2.108,214,0.599,220,0.857,227,0.59,239,1.303,248,0.791,254,2.716,257,3.249,263,1.8,272,1.154,275,2.694,294,0.823,305,1.083,356,2.595,357,2.993,379,3.448,380,2.837,398,2.993,434,0.552,453,0.833,699,1.778,700,4.926,719,1.532,744,1.981,763,1.075,765,4.207,768,2.926,772,2.848,779,2.637,821,1.62,905,3.006,983,2.848,984,3.025,1075,5.797,1094,2.202,1095,1.204,1162,2.637,1164,2.637,1354,5.063,1372,2.104,1421,3.025,1562,1.252,1647,1.252,1648,1.692,1700,1.252,1708,2.248,1734,2.248,1737,2.926,1766,2.926,1768,2.926,1788,2.398,1967,1.542,2038,1.778,2970,2.421,3129,4.207,3232,1.981,3320,5.141,3374,5.516,3419,5.141,3489,2.637,3490,4.207,3491,4.926,3492,4.926,3493,5.666,3494,4.839,3495,5.386,3496,4.839,3497,4.839,3498,6.195,3499,6.195,3500,5.386,3501,5.386,3502,4.839,3503,5.386,3504,4.839,3505,5.386,3506,2.926,3507,4.839,3508,3.366,3509,3.366,3510,4.839,3511,3.366,3512,4.839,3513,3.366,3514,3.366,3515,3.366,3516,3.366,3517,3.366,3518,4.839,3519,3.366,3520,3.366,3521,2.926,3522,4.207,3523,3.366,3524,3.366,3525,4.839,3526,3.366,3527,4.839,3528,3.366,3529,3.366,3530,2.926,3531,2.926,3532,3.366,3533,2.926,3534,2.926,3535,3.366,3536,3.366,3537,3.366,3538,6.475,3539,4.926,3540,2.926,3541,2.637,3542,3.366,3543,4.207,3544,4.207,3545,4.926,3546,4.839,3547,3.366,3548,2.926,3549,2.926,3550,2.926,3551,2.926,3552,4.839,3553,5.666,3554,3.366,3555,3.366,3556,3.366,3557,3.366,3558,3.366,3559,3.366,3560,3.366,3561,3.366,3562,3.366,3563,3.366,3564,3.366,3565,4.839]],["title/components/MappingListFieldComponent.html",[98,0.169,165,0.817]],["body/components/MappingListFieldComponent.html",[3,0.123,4,0.123,5,0.106,6,0.211,7,0.127,21,0.94,22,0.388,26,0.158,29,1.271,30,0.544,32,0.268,34,0.643,35,0.015,36,0.479,39,0.365,40,0.61,49,0.887,50,0.663,51,0.14,52,0.286,61,0.365,88,0.008,89,0.01,90,0.008,95,0.329,98,0.283,99,0.941,100,1.373,101,1.09,102,1.09,104,1.013,105,1.667,106,1.185,107,1.09,109,1.373,110,0.977,111,1.424,112,1.373,113,0.941,114,1.681,115,1.09,116,1.09,117,0.977,118,1.09,119,0.941,120,1.09,121,0.941,122,1.09,123,1.09,124,0.941,125,0.977,126,0.645,127,1.744,128,0.941,129,1.09,130,0.941,131,1.017,132,0.977,133,1.09,134,0.941,135,1.09,136,0.941,137,1.09,138,0.907,139,1.681,140,0.907,141,1.051,142,1.507,143,1.09,144,0.977,145,1.09,146,0.941,147,0.941,148,0.907,149,1.09,150,0.907,151,0.977,152,1.09,153,0.941,154,0.815,155,0.941,156,0.873,157,1.09,158,0.941,159,1.09,160,0.941,161,1.09,162,0.941,163,0.941,164,1.424,165,1.452,166,1.548,167,1.09,168,0.941,169,1.09,170,0.941,171,1.324,172,1.09,173,0.941,174,0.94,175,0.873,176,1.424,177,0.907,178,0.941,179,1.424,180,0.941,181,0.941,182,0.977,183,0.941,184,0.941,185,1.09,186,0.941,187,1.013,188,1.051,189,0.907,190,1.051,191,1.09,195,1.324,199,2.473,220,0.876,227,0.669,248,0.584,252,2.413,257,3.158,263,2.22,272,1.744,275,3.923,294,0.867,434,0.978,1075,5.636,1095,1.635,1336,2.856,1788,2.903,3228,5.208,3296,3.286,3378,3.579,3379,3.579,3427,6.128,3428,6.738,3429,6.522,3430,6.128,3465,5.78,3469,5.189,3483,3.972,3566,3.972,3567,5.969,3568,6.648,3569,4.569,3570,4.569,3571,4.569,3572,4.569,3573,4.569,3574,4.569,3575,4.569,3576,4.569,3577,4.569]],["title/components/MappingSelectionComponent.html",[98,0.169,168,0.817]],["body/components/MappingSelectionComponent.html",[3,0.11,4,0.169,5,0.095,6,0.215,7,0.128,21,0.872,22,0.357,23,0.56,24,0.478,26,0.233,27,0.478,28,1.19,29,1.201,30,0.505,32,0.275,34,0.677,35,0.015,36,0.478,39,0.399,40,0.544,49,0.838,50,0.592,51,0.125,52,0.265,53,1.369,61,0.387,80,0.748,88,0.007,89,0.009,90,0.007,94,0.617,95,0.352,96,0.617,98,0.267,99,0.841,100,1.273,101,0.973,102,0.973,104,0.905,105,1.657,106,1.099,107,0.973,109,1.273,110,0.872,111,1.32,112,1.273,113,0.841,114,1.607,115,0.973,116,0.973,117,0.872,118,0.973,119,0.841,120,0.973,121,0.841,122,0.973,123,0.973,124,0.841,125,0.872,126,0.638,127,1.68,128,0.841,129,0.973,130,0.841,131,0.944,132,0.872,133,0.973,134,0.841,135,0.973,136,0.841,137,0.973,138,0.81,139,1.607,140,0.81,141,0.938,142,1.44,143,0.973,144,0.872,145,0.973,146,0.841,147,0.841,148,0.81,149,0.973,150,0.81,151,0.872,152,0.973,153,0.841,154,0.814,155,0.841,156,0.78,157,0.973,158,0.841,159,0.973,160,0.841,161,0.973,162,0.841,163,0.841,164,1.32,165,0.841,166,0.78,167,0.973,168,1.496,169,0.973,170,1.596,171,1.562,172,0.973,173,0.841,174,0.872,175,0.78,176,1.32,177,1.337,178,0.841,179,1.32,180,0.841,181,0.841,182,0.872,183,0.841,184,0.841,185,0.973,186,0.841,187,0.905,188,0.938,189,0.81,190,0.938,191,0.973,194,2.639,195,1.228,204,2.83,206,2.83,214,0.452,216,2.337,220,0.822,227,0.608,229,1.644,239,1.579,240,1.579,241,1.303,248,0.861,257,3.214,294,0.978,305,1.058,376,3.497,418,4.008,453,1.666,455,3.386,666,3.226,821,1.167,905,2.878,1083,3.547,1094,1.942,1095,1.46,1210,1.644,1218,3.196,1287,3.318,1294,2.155,1357,5.462,1377,2.934,1606,2.142,1680,2.325,1967,1.869,3333,4.813,3578,3.196,3579,4.813,3580,6.283,3581,6.283,3582,5.858,3583,4.813,3584,6.738,3585,6.738,3586,4.08,3587,4.813,3588,5.858,3589,4.08,3590,4.08,3591,4.08,3592,4.08,3593,4.08,3594,5.536,3595,4.08,3596,3.547,3597,4.08,3598,4.08,3599,5.536,3600,3.547,3601,4.08,3602,4.08,3603,4.08,3604,4.08,3605,4.08,3606,4.08,3607,5.536,3608,4.08,3609,3.547,3610,4.337,3611,4.337,3612,3.547,3613,4.08,3614,4.08,3615,4.08,3616,6.283,3617,4.08,3618,5.536,3619,6.738]],["title/components/MappingSelectionSectionComponent.html",[98,0.169,170,0.817]],["body/components/MappingSelectionSectionComponent.html",[3,0.111,4,0.15,5,0.096,6,0.213,7,0.127,21,0.88,22,0.359,23,0.64,24,0.546,26,0.235,30,0.509,32,0.271,34,0.618,35,0.015,36,0.522,39,0.307,40,0.552,51,0.127,52,0.268,61,0.401,80,0.593,88,0.007,89,0.01,90,0.007,94,0.705,95,0.347,96,0.705,98,0.301,99,0.852,100,1.285,101,0.987,102,0.987,104,0.917,105,1.659,106,1.109,107,0.987,109,1.285,110,0.884,111,1.333,112,1.285,113,0.852,114,1.616,115,0.987,116,0.987,117,0.884,118,0.987,119,0.852,120,0.987,121,0.852,122,0.987,123,0.987,124,0.852,125,0.884,126,0.619,127,1.688,128,0.852,129,0.987,130,0.852,131,0.952,132,0.884,133,0.987,134,0.852,135,0.987,136,0.852,137,0.987,138,0.821,139,1.616,140,0.821,141,0.951,142,1.448,143,0.987,144,0.884,145,0.987,146,0.852,147,0.852,148,0.821,149,0.987,150,0.821,151,0.884,152,0.987,153,0.852,154,0.831,155,0.852,156,0.791,157,0.987,158,0.852,159,0.987,160,0.852,161,0.987,162,0.852,163,0.852,164,1.333,165,0.852,166,0.791,167,0.987,168,0.852,169,0.987,170,1.396,171,1.8,172,0.987,173,0.852,174,0.88,175,0.791,176,1.333,177,0.821,178,0.852,179,1.333,180,0.852,181,0.852,182,0.884,183,0.852,184,0.852,185,0.987,186,0.852,187,0.917,188,0.951,189,0.821,190,0.951,191,0.987,195,1.239,199,2.079,213,1.273,214,0.338,220,0.852,227,0.357,248,0.992,257,3.182,262,4.377,263,2.079,269,4.377,270,3.18,272,1.809,294,0.984,418,3.968,434,0.916,453,1.804,666,3.34,821,1.81,983,2.435,984,2.586,1094,2.011,1095,1.48,1218,3.24,1243,2.55,1354,4.873,1356,3.596,1450,3.289,1606,1.601,3388,4.377,3583,4.858,3587,4.858,3588,5.891,3609,3.596,3610,4.377,3611,4.377,3612,3.596,3620,3.596,3621,5.587,3622,6.776,3623,5.587,3624,6.327,3625,7.077,3626,6.327,3627,6.327,3628,6.327,3629,4.136,3630,4.136,3631,4.136,3632,4.136,3633,4.136,3634,4.136,3635,4.136,3636,4.136,3637,4.136,3638,5.587,3639,4.136,3640,4.136,3641,4.136,3642,4.136,3643,4.136,3644,4.136,3645,4.136,3646,4.136,3647,4.136,3648,5.587,3649,6.776,3650,5.587,3651,6.776]],["title/classes/MappingUtil.html",[52,0.19,3652,3.106]],["body/classes/MappingUtil.html",[3,0.11,4,0.11,5,0.094,6,0.2,7,0.117,10,2.32,21,0.87,22,0.206,26,0.141,28,1.103,29,1.444,30,0.504,32,0.251,34,0.662,35,0.015,36,0.526,39,0.399,49,1.051,50,0.591,51,0.125,52,0.195,61,0.399,80,0.83,88,0.007,89,0.009,90,0.007,94,0.809,95,0.361,96,0.809,126,0.632,154,0.634,156,1.199,199,2.503,214,0.592,218,3.181,220,0.786,227,0.684,237,2.148,238,1.574,239,1.574,248,0.706,294,0.977,305,1.056,434,0.905,442,1.513,453,1.795,666,2.873,719,1.551,762,1.4,763,1.299,774,2.712,797,1.043,821,1.163,869,2.148,875,2.387,885,1.949,905,2.873,978,3.973,989,5.512,990,5.171,1012,3.186,1094,2.001,1095,1.455,1121,2.925,1155,1.574,1370,2.148,1408,1.708,1453,2.776,1541,4.914,1562,2.333,1639,2.75,1640,2.712,1647,1.513,1700,1.513,1702,2.712,1775,2.421,1788,2.723,1866,2.264,1943,3.453,2010,3.313,2042,3.382,2074,2.148,2082,3.251,2084,3.075,2130,2.394,2159,2.716,2204,2.543,2205,2.044,2223,4.839,2413,3.536,2862,5.272,2863,4.839,2901,4.803,2956,2.716,2970,5.06,2971,3.186,2979,2.925,2980,2.925,3461,5.85,3463,3.536,3485,3.536,3486,3.536,3610,3.186,3611,5.272,3652,4.327,3653,6.454,3654,5.524,3655,5.524,3656,5.524,3657,5.524,3658,5.524,3659,5.524,3660,4.067,3661,4.067,3662,4.067,3663,5.524,3664,5.524,3665,4.067,3666,4.067,3667,4.067,3668,4.067,3669,4.067,3670,4.067,3671,4.067,3672,4.067,3673,4.067,3674,5.524,3675,4.067,3676,5.524,3677,4.067,3678,5.524,3679,6.273,3680,5.524,3681,4.067,3682,5.524,3683,4.067,3684,6.273,3685,4.067,3686,5.524,3687,5.524,3688,5.524,3689,4.067,3690,5.524,3691,4.067,3692,4.067,3693,6.729,3694,2.925,3695,4.067,3696,5.524,3697,5.524,3698,4.067,3699,5.524,3700,6.729,3701,4.067,3702,4.067,3703,5.524,3704,4.067,3705,4.067,3706,4.067,3707,4.067,3708,4.067,3709,5.524,3710,4.067,3711,4.067,3712,6.729,3713,4.803,3714,4.067,3715,4.067,3716,5.524,3717,4.067,3718,4.067,3719,4.067,3720,4.067,3721,4.067,3722,4.067,3723,4.067,3724,4.067,3725,3.536,3726,4.067,3727,4.067,3728,4.067,3729,4.067,3730,4.067,3731,4.067,3732,4.067,3733,5.524,3734,4.067]],["title/components/ModalErrorDetailComponent.html",[98,0.169,173,0.817]],["body/components/ModalErrorDetailComponent.html",[3,0.129,4,0.129,5,0.111,6,0.208,7,0.126,21,0.967,22,0.344,26,0.165,30,0.56,32,0.263,34,0.653,35,0.014,39,0.373,40,0.637,51,0.147,52,0.294,61,0.394,88,0.008,89,0.01,90,0.008,94,0.532,95,0.316,96,0.532,98,0.289,99,0.983,100,1.412,101,1.138,102,1.138,104,1.058,105,1.671,106,1.219,107,1.138,109,1.412,110,1.02,111,1.464,112,1.412,113,0.983,114,1.709,115,1.138,116,1.138,117,1.02,118,1.138,119,0.983,120,1.138,121,0.983,122,1.138,123,1.138,124,0.983,125,1.02,126,0.638,127,1.769,128,0.983,129,1.138,130,0.983,131,1.046,132,1.02,133,1.138,134,0.983,135,1.138,136,0.983,137,1.138,138,0.947,139,1.709,140,0.947,141,1.097,142,1.672,143,1.138,144,1.02,145,1.138,146,0.983,147,0.983,148,0.947,149,1.138,150,0.947,151,1.02,152,1.138,153,0.983,154,0.799,155,0.983,156,0.912,157,1.138,158,0.983,159,1.138,160,0.983,161,1.138,162,0.983,163,0.983,164,1.464,165,0.983,166,0.912,167,1.138,168,0.983,169,1.138,170,0.983,171,1.361,172,1.138,173,1.476,174,1.287,175,0.912,176,1.464,177,0.947,178,0.983,179,1.464,180,0.983,181,0.983,182,1.02,183,0.983,184,0.983,185,1.138,186,0.983,187,1.058,188,1.097,189,0.947,190,1.097,191,1.138,195,1.361,214,0.389,263,2.284,272,1.619,617,2.736,626,2.398,627,2.287,699,3.585,704,4.786,707,6.231,708,5.154,713,4.533,719,1.995,762,1.643,763,1.524,774,1.923,775,2.983,776,3.187,793,5.337,1220,3.187,1221,4.415,1222,4.415,1251,4.148,1435,4.544,1738,4.533,1752,4.148,1755,5.337,1765,4.882,3131,3.738,3437,4.148,3735,6.139,3736,4.771,3737,4.771,3738,4.771,3739,6.139,3740,4.771,3741,4.771,3742,6.139]],["title/components/ModalErrorWindowComponent.html",[98,0.169,175,0.758]],["body/components/ModalErrorWindowComponent.html",[3,0.104,4,0.104,5,0.089,6,0.219,7,0.13,20,2.549,21,0.838,22,0.309,23,0.739,24,0.632,26,0.133,27,0.459,29,1.165,30,0.485,32,0.281,34,0.69,35,0.015,36,0.446,37,1.762,39,0.335,40,0.513,49,0.813,50,0.559,51,0.164,52,0.255,53,1.315,61,0.379,76,2.673,88,0.007,89,0.009,90,0.007,94,0.593,95,0.357,96,0.593,98,0.259,99,0.793,100,1.223,101,0.918,102,0.918,104,0.853,105,1.652,106,1.056,107,0.918,109,1.223,110,0.822,111,1.268,112,1.223,113,0.793,114,1.568,115,0.918,116,0.918,117,0.822,118,0.918,119,0.793,120,0.918,121,0.793,122,0.918,123,0.918,124,0.793,125,0.822,126,0.608,127,1.646,128,0.793,129,0.918,130,0.793,131,0.906,132,0.822,133,0.918,134,0.793,135,0.918,136,0.793,137,0.918,138,0.764,139,1.568,140,0.764,141,0.885,142,1.593,143,0.918,144,0.822,145,0.918,146,0.793,147,0.793,148,0.764,149,0.918,150,0.764,151,0.822,152,0.918,153,0.793,154,0.782,155,0.793,156,0.736,157,0.918,158,0.793,159,0.918,160,0.793,161,0.918,162,0.793,163,0.793,164,1.268,165,0.793,166,0.736,167,0.918,168,0.793,169,0.918,170,0.793,171,1.179,172,0.918,173,0.793,174,1.298,175,1.257,176,1.268,177,0.764,178,0.793,179,1.268,180,0.793,181,0.793,182,0.822,183,0.793,184,0.793,185,0.918,186,0.793,187,0.853,188,0.885,189,0.764,190,0.885,191,0.918,195,1.179,204,1.616,206,1.616,209,0.987,214,0.631,216,1.978,220,0.712,227,0.568,229,1.551,248,0.952,294,0.772,356,2.791,365,2.436,366,3.869,380,3.011,382,3.345,383,4.061,420,2.265,428,2.96,434,0.872,511,2.265,699,3.863,704,4.39,708,4.728,719,1.894,722,3.304,728,4.166,744,3.13,762,1.325,763,1.229,764,2.032,767,3.587,774,1.551,775,2.405,885,2.549,996,3.011,1287,3.219,1294,2.032,1435,4.796,1436,2.405,1439,3.345,1440,4.07,1445,2.032,1446,3.552,1447,4.608,1453,3.063,1454,4.07,1455,4.07,1458,4.07,1459,4.07,1460,3.552,1461,4.07,1475,3.552,1500,4.39,1501,3.552,1502,2.57,1505,3.552,1515,3.552,1518,3.552,1738,3.552,1765,3.824,3743,5.999,3744,5.715,3745,5.318,3746,5.715,3747,5.318,3748,3.345,3749,3.848,3750,3.848,3751,3.848,3752,3.848,3753,3.345,3754,4.623,3755,3.848,3756,3.848,3757,3.345,3758,4.623,3759,3.848,3760,3.848,3761,3.848,3762,3.848,3763,3.848,3764,3.848,3765,3.848,3766,4.383,3767,3.848,3768,3.848,3769,4.623,3770,3.345,3771,3.345,3772,5.318,3773,5.318]],["title/interfaces/ModalErrorWindowValidator.html",[1445,2.094,3766,2.852]],["body/interfaces/ModalErrorWindowValidator.html",[3,0.144,4,0.144,5,0.124,6,0.193,7,0.113,20,2.571,22,0.363,26,0.186,29,1.026,30,0.603,32,0.229,34,0.603,35,0.015,36,0.364,37,2.457,39,0.393,40,0.716,49,0.882,50,0.779,51,0.203,52,0.257,53,1.327,76,2.696,88,0.009,89,0.011,90,0.009,98,0.281,105,1.065,142,1.413,154,0.542,174,1.209,175,1.026,195,1.19,204,3.141,206,3.141,214,0.627,216,2.665,220,0.836,227,0.571,248,0.981,294,0.96,356,3.027,366,3.157,380,2.457,383,3.89,420,3.157,428,3.679,434,1.083,511,3.157,699,3.783,704,3.583,708,3.858,719,1.899,722,2.696,728,4.202,744,3.157,762,1.847,763,1.713,764,2.833,767,4.216,774,2.162,775,3.354,885,2.571,996,2.457,1287,3.491,1294,2.833,1435,4.216,1436,3.354,1440,4.414,1445,2.833,1446,3.583,1447,3.583,1453,2.696,1454,3.583,1455,3.583,1458,3.583,1459,3.583,1460,3.583,1461,3.583,1475,4.414,1500,3.583,1501,4.414,1502,3.583,1505,4.414,1518,4.414,1738,4.414,1765,4.753,3743,4.664,3744,4.664,3746,4.664,3754,4.664,3758,4.664,3766,5.152,3769,5.746,3770,4.664,3771,4.664,3774,3.858,3775,5.364,3776,5.364]],["title/components/ModalWindowComponent.html",[98,0.169,177,0.787]],["body/components/ModalWindowComponent.html",[3,0.09,4,0.13,5,0.078,6,0.22,7,0.13,20,2.316,21,0.761,22,0.287,23,0.728,24,0.622,26,0.116,27,0.417,28,1.278,29,1.082,30,0.441,32,0.283,34,0.656,35,0.015,36,0.384,39,0.36,40,0.448,48,1.114,49,0.755,50,0.488,51,0.174,52,0.271,53,1.4,61,0.375,76,2.429,80,0.601,88,0.006,89,0.008,90,0.006,94,0.631,95,0.373,96,0.631,98,0.279,99,0.692,100,1.111,101,0.801,102,0.801,104,0.745,105,1.639,106,0.959,107,0.801,109,1.302,110,0.718,111,1.153,112,1.111,113,0.692,114,1.476,115,0.801,116,0.801,117,0.718,118,0.801,119,0.692,120,0.801,121,0.692,122,0.801,123,0.801,124,0.692,125,0.718,126,0.588,127,1.564,128,0.692,129,0.801,130,0.692,131,0.824,132,0.718,133,0.801,134,0.692,135,0.801,136,0.692,137,0.801,138,0.667,139,1.476,140,1.123,141,1.111,142,1.591,143,0.801,144,0.718,145,0.801,146,0.692,147,0.692,148,0.667,149,0.801,150,0.667,151,0.718,152,0.801,153,0.692,154,0.741,155,0.692,156,0.642,157,0.801,158,0.692,159,0.801,160,0.692,161,0.801,162,0.692,163,0.692,164,1.153,165,0.692,166,0.642,167,0.801,168,0.692,169,0.801,170,0.692,171,1.072,172,0.801,173,0.692,174,0.891,175,1.183,176,1.153,177,1.229,178,0.692,179,1.153,180,0.692,181,0.692,182,0.718,183,0.692,184,0.692,185,0.801,186,0.692,187,0.745,188,0.773,189,0.667,190,0.773,191,0.801,194,2.755,195,1.072,204,2.03,206,2.03,209,0.861,213,1.034,214,0.632,216,2.105,220,0.766,227,0.608,229,1.354,241,1.073,248,0.973,263,1.798,270,2.844,272,1.717,294,0.822,357,2.989,365,2.592,366,3.86,375,3.78,379,3.445,383,3.86,398,3.463,428,3.445,429,2.243,430,2.429,511,1.977,637,1.472,699,3.269,719,1.531,722,3.111,763,1.073,767,2.844,996,2.835,1210,1.354,1287,2.989,1294,1.774,1435,4.815,1436,2.1,1437,2.416,1440,4.38,1441,5.35,1442,4.434,1443,2.989,1444,2.631,1445,1.774,1446,3.227,1447,4.38,1448,4.434,1449,4.434,1450,4.019,1451,4.434,1452,4.434,1453,3.296,1454,3.78,1455,3.78,1456,5.137,1457,3.78,1458,3.78,1459,3.78,1460,3.227,1461,3.78,1462,4.434,1463,4.434,1464,4.434,1465,4.434,1466,4.849,1467,4.434,1468,3.786,1469,2.631,1470,2.631,1471,2.631,1472,2.631,1473,2.631,1474,3.786,1475,3.78,1476,2.631,1477,2.631,1478,2.631,1479,3.786,1480,2.631,1481,4.434,1482,4.434,1483,4.849,1484,2.631,1485,2.631,1486,2.631,1487,2.631,1488,3.786,1489,2.631,1490,3.786,1491,2.631,1492,3.786,1493,2.631,1494,2.631,1495,2.631,1496,2.631,1497,2.631,1498,3.786,1499,2.631,1500,4.134,1501,3.227,1502,2.243,1503,2.631,1504,2.631,1505,2.243,1506,2.631,1507,2.631,1508,3.786,1509,3.786,1510,3.786,1511,3.786,1512,2.631,1513,2.631,1514,2.631,1515,3.78,1516,2.416,1517,2.631,1518,2.243,3748,2.92,3753,2.92,3757,2.92,3777,4.832,3778,4.832,3779,3.359,3780,4.832,3781,3.359,3782,3.359,3783,3.359,3784,3.359,3785,3.359,3786,3.359,3787,3.359,3788,3.359,3789,3.359,3790,3.359,3791,3.359,3792,3.359,3793,3.359,3794,3.359,3795,3.359,3796,3.359,3797,3.359,3798,3.359,3799,3.359,3800,3.359,3801,3.359,3802,3.359,3803,3.359,3804,3.359]],["title/interfaces/ModalWindowValidator.html",[194,1.666,1445,2.094]],["body/interfaces/ModalWindowValidator.html",[3,0.126,4,0.163,5,0.108,6,0.181,7,0.106,20,2.237,22,0.341,26,0.162,28,1.207,29,0.892,30,0.552,32,0.21,34,0.552,35,0.015,36,0.317,39,0.404,40,0.623,48,1.547,49,0.807,50,0.677,51,0.206,52,0.29,53,1.497,76,2.345,80,0.713,88,0.008,89,0.01,90,0.008,95,0.282,98,0.302,105,1.201,109,1.073,140,1.201,141,1.073,142,1.519,174,0.735,175,1.157,177,0.926,194,3.093,195,1.035,204,3.093,206,3.093,214,0.616,216,2.644,220,0.83,227,0.651,241,1.49,248,0.995,270,2.345,272,1.857,294,0.975,357,3.196,365,2.137,366,2.746,375,3.116,379,2.597,383,3.562,398,3.547,428,3.955,429,3.116,430,3.041,511,2.746,637,2.045,699,3.196,719,1.661,722,2.345,763,1.49,767,3.562,996,2.137,1210,1.881,1287,3.196,1294,2.464,1435,3.953,1436,2.917,1437,3.356,1440,4.746,1441,5.261,1442,4.741,1443,3.196,1444,3.655,1445,2.464,1446,3.116,1447,3.116,1448,3.655,1449,3.655,1450,3.953,1451,3.655,1452,3.655,1453,2.345,1454,3.116,1455,3.116,1456,3.655,1457,4.041,1458,3.116,1459,3.116,1460,3.116,1461,3.116,1462,3.655,1463,3.655,1464,3.655,1465,3.655,1466,3.655,1467,5.261,1468,4.741,1469,3.655,1470,3.655,1471,3.655,1472,3.655,1473,3.655,1474,4.741,1475,4.485,1476,3.655,1477,3.655,1478,3.655,1479,4.741,1480,3.655,1481,5.261,1482,5.261,1483,3.655,1484,3.655,1485,3.655,1486,3.655,1487,3.655,1488,4.741,1489,3.655,1490,4.741,1491,3.655,1492,4.741,1493,3.655,1494,3.655,1495,3.655,1496,3.655,1497,3.655,1498,3.655,1499,3.655,1500,3.116,1501,4.041,1502,3.116,1503,3.655,1504,3.655,1505,3.116,1506,3.655,1507,3.655,1508,4.741,1509,4.741,1510,3.655,1511,3.655,1512,3.655,1513,3.655,1514,3.655,1515,3.116,1516,3.356,1517,3.655,1518,3.116,3774,3.356,3805,4.666,3806,4.666]],["title/components/NamespaceEditComponent.html",[98,0.169,178,0.817]],["body/components/NamespaceEditComponent.html",[3,0.123,4,0.123,5,0.106,6,0.209,7,0.126,21,0.941,22,0.303,23,0.604,24,0.516,26,0.158,27,0.516,28,1.09,30,0.545,32,0.265,34,0.643,35,0.014,37,2.095,39,0.387,40,0.61,49,0.888,50,0.664,51,0.141,52,0.286,53,1.478,61,0.387,80,0.635,88,0.008,89,0.01,90,0.008,94,0.51,95,0.341,96,0.51,98,0.283,99,0.943,100,1.374,101,1.091,102,1.091,104,1.014,105,1.668,106,1.186,107,1.091,109,1.374,110,0.978,111,1.425,112,1.374,113,0.943,114,1.682,115,1.091,116,1.091,117,0.978,118,1.091,119,0.943,120,1.091,121,0.943,122,1.091,123,1.091,124,0.943,125,0.978,126,0.633,127,1.745,128,0.943,129,1.091,130,0.943,131,1.018,132,0.978,133,1.091,134,0.943,135,1.091,136,0.943,137,1.091,138,0.908,139,1.682,140,0.908,141,1.052,142,1.508,143,1.091,144,0.978,145,1.091,146,0.943,147,0.943,148,0.908,149,1.091,150,0.908,151,0.978,152,1.091,153,0.943,154,0.793,155,0.943,156,0.875,157,1.091,158,0.943,159,1.091,160,0.943,161,1.091,162,0.943,163,0.943,164,1.425,165,0.943,166,0.875,167,1.091,168,0.943,169,1.091,170,0.943,171,1.325,172,1.091,173,0.943,174,0.941,175,0.875,176,1.425,177,0.908,178,1.453,179,1.922,180,0.943,181,0.943,182,0.978,183,0.943,184,0.943,185,1.091,186,0.943,187,1.014,188,1.052,189,0.908,190,1.052,191,1.091,194,2.794,195,1.325,198,4.159,204,2.963,205,3.155,206,2.963,214,0.576,216,2.722,220,0.777,227,0.395,229,1.844,236,2.095,237,2.416,238,1.771,240,1.771,241,1.461,247,2.86,248,0.584,280,2.86,281,3.002,282,3.99,294,0.867,305,1.272,307,3.29,1606,2.312,1967,2.095,2339,5.072,2345,3.977,2364,5.012,2389,4.784,2392,3.29,3694,5.262,3807,6.74,3808,6.652,3809,7.053,3810,4.575,3811,5.974,3812,4.575,3813,5.974,3814,4.575,3815,4.575,3816,3.977,3817,4.575,3818,4.575,3819,3.977,3820,3.977,3821,4.575,3822,6.652,3823,4.575,3824,3.977,3825,7.053,3826,4.575,3827,4.575,3828,5.194]],["title/components/NamespaceListComponent.html",[98,0.169,180,0.817]],["body/components/NamespaceListComponent.html",[3,0.088,4,0.088,5,0.076,6,0.214,7,0.127,21,0.748,22,0.394,23,0.619,24,0.529,26,0.225,27,0.41,28,1.242,29,1.068,30,0.433,32,0.275,34,0.698,35,0.015,36,0.527,39,0.372,40,0.438,49,0.745,50,0.476,51,0.101,52,0.228,61,0.4,80,0.742,88,0.006,89,0.008,90,0.01,94,0.755,95,0.35,96,0.755,98,0.238,99,0.676,100,1.092,101,0.782,102,0.782,104,0.727,105,1.635,106,0.943,107,0.782,109,1.092,110,0.701,111,1.133,112,1.092,113,0.676,114,1.46,115,0.782,116,0.782,117,0.701,118,0.782,119,0.676,120,0.782,121,0.676,122,0.782,123,0.782,124,0.676,125,0.701,126,0.584,127,1.55,128,0.676,129,0.782,130,0.676,131,0.952,132,0.701,133,0.782,134,0.676,135,0.782,136,0.676,137,0.782,138,0.651,139,1.46,140,0.651,141,0.754,142,1.309,143,0.782,144,0.701,145,0.782,146,0.676,147,0.676,148,0.651,149,0.782,150,0.651,151,0.701,152,0.782,153,0.676,154,0.737,155,0.676,156,0.627,157,0.782,158,0.676,159,0.782,160,0.676,161,0.782,162,0.676,163,0.676,164,1.133,165,0.676,166,1.068,167,0.782,168,0.676,169,0.782,170,0.676,171,1.053,172,0.782,173,0.676,174,0.748,175,0.627,176,1.133,177,1.387,178,1.439,179,1.789,180,1.261,181,0.676,182,0.701,183,0.676,184,0.676,185,0.782,186,0.676,187,0.727,188,0.754,189,0.651,190,0.754,191,0.782,195,1.053,213,2.085,214,0.604,220,0.715,227,0.666,237,1.732,238,1.27,240,1.27,241,1.048,248,0.782,257,3.208,263,1.767,272,1.332,275,2.644,281,1.649,294,0.983,296,2.051,305,0.627,376,3.108,434,0.538,453,0.811,744,1.931,821,1.597,1064,2.359,1078,6.236,1119,1.438,1162,2.57,1164,2.57,1328,3.416,1354,5.024,1379,3.172,1380,3.172,1385,3.172,1386,2.191,1387,3.729,1389,3.172,1398,2.191,1399,3.172,1407,3.172,1408,2.346,1410,2.359,1411,2.191,1412,2.191,1606,1.838,1680,1.378,1708,2.191,1734,2.191,2038,1.732,2339,4.672,2364,5.04,2389,3.416,2392,5.325,2393,3.721,2516,1.649,2517,1.649,3232,1.931,3320,5.089,3374,5.473,3419,5.089,3489,2.57,3490,4.13,3491,4.855,3492,4.855,3495,5.322,3500,5.322,3501,5.322,3503,5.322,3505,5.322,3506,2.852,3521,2.852,3522,4.13,3530,2.852,3531,2.852,3533,2.852,3534,2.852,3538,6.437,3539,4.855,3540,2.852,3541,2.57,3543,4.13,3544,4.13,3545,4.855,3548,4.855,3549,2.852,3550,2.852,3551,2.852,3694,4.402,3819,4.13,3820,2.852,3824,4.13,3828,4.13,3829,5.584,3830,4.75,3831,4.75,3832,6.121,3833,6.121,3834,4.75,3835,4.75,3836,4.75,3837,3.28,3838,4.75,3839,3.28,3840,3.28,3841,4.75,3842,3.28,3843,3.28,3844,3.28,3845,3.28,3846,4.75,3847,3.28,3848,4.75,3849,3.28,3850,3.28,3851,3.28,3852,4.75,3853,3.28,3854,3.28,3855,3.28,3856,3.28,3857,6.497,3858,6.121,3859,5.584,3860,3.28,3861,4.75,3862,3.28,3863,3.28,3864,3.28,3865,3.28,3866,3.28,3867,3.28,3868,3.28,3869,3.28,3870,3.28,3871,3.28,3872,3.28,3873,3.28,3874,3.28,3875,3.28,3876,3.28,3877,3.28,3878,3.28,3879,4.75,3880,4.75,3881,4.75,3882,4.75,3883,4.75]],["title/classes/NamespaceModel.html",[52,0.19,2364,2.479]],["body/classes/NamespaceModel.html",[3,0.077,4,0.077,5,0.066,6,0.196,7,0.115,10,1.195,21,0.809,22,0.407,23,0.651,24,0.556,26,0.098,27,0.369,28,1.126,30,0.39,32,0.248,34,0.521,35,0.015,36,0.554,39,0.336,50,0.413,51,0.158,52,0.246,61,0.353,70,1.778,80,0.856,88,0.005,89,0.007,90,0.005,94,0.317,95,0.343,96,0.317,126,0.679,131,0.485,154,0.432,199,1.591,214,0.601,218,1.247,220,0.82,227,0.699,238,1.101,243,1.303,248,0.969,255,1.503,294,1.039,298,1.9,301,1.591,305,0.982,313,3.078,315,2.229,320,2.046,333,1.9,340,3.816,434,1.126,442,2.662,453,1.77,469,4.173,637,1.247,666,2.353,677,2.046,678,1.769,723,1.147,780,1.695,797,0.73,821,0.814,851,2.86,852,3.024,868,2.673,869,1.503,870,2.229,871,2.229,872,2.229,873,2.229,875,1.98,892,1.9,909,1.9,920,1.247,962,2.229,978,2.046,988,3.18,993,1.43,1093,2.229,1119,1.247,1146,2.046,1319,2.229,1358,4.091,1370,2.259,1372,4.023,1373,1.9,1378,3.718,1408,1.796,1528,3.718,1529,2.473,1532,4.967,1543,3.718,1544,2.473,1545,5.325,1546,4.467,1554,2.473,1555,4.967,1562,1.911,1565,3.075,1567,3.718,1575,3.075,1583,2.259,1587,4.467,1591,2.473,1606,1.655,1607,3.718,1608,2.229,1620,2.473,1621,4.467,1627,2.473,1629,4.967,1632,2.473,1640,1.147,1654,2.046,1695,2.229,1750,2.517,1856,1.9,1967,1.303,2316,1.9,2318,2.473,2339,2.046,2364,4.808,2376,2.473,2381,3.718,2389,4.109,2392,4.109,2393,3.35,2490,3.35,2497,2.473,2516,1.43,2517,1.43,2744,2.473,2787,2.473,2863,3.075,2953,2.229,2956,1.9,2968,2.229,2969,3.35,2990,2.229,2993,2.229,3037,2.229,3064,2.229,3080,2.473,3081,2.473,3083,2.473,3086,2.473,3087,2.473,3096,2.473,3292,2.473,3307,4.025,3694,4.405,3713,5.325,3884,6.319,3885,5.138,3886,5.138,3887,5.138,3888,5.138,3889,4.276,3890,5.713,3891,5.713,3892,2.845,3893,2.845,3894,2.845,3895,2.845,3896,5.138,3897,2.845,3898,4.276,3899,2.845,3900,4.276,3901,2.845,3902,2.845,3903,2.845,3904,2.845,3905,2.845,3906,2.845,3907,2.845,3908,2.845,3909,2.845,3910,2.845,3911,2.845,3912,2.845,3913,2.845,3914,7.268,3915,2.845,3916,2.845,3917,2.845,3918,2.845,3919,2.845,3920,2.845,3921,2.845,3922,4.276,3923,2.845,3924,2.845,3925,2.845,3926,2.845,3927,2.845,3928,5.138,3929,2.845,3930,2.845,3931,4.276,3932,2.845,3933,2.845,3934,4.276,3935,2.845,3936,2.845,3937,2.845,3938,2.845,3939,2.845,3940,2.845,3941,2.845,3942,4.276,3943,2.845,3944,2.845,3945,6.434,3946,6.125,3947,2.845,3948,2.473,3949,6.434,3950,2.845,3951,5.138,3952,4.276,3953,2.845,3954,2.845,3955,4.276,3956,2.845,3957,2.845,3958,2.845,3959,2.845,3960,2.845,3961,2.845,3962,2.845,3963,5.138,3964,5.713,3965,6.125,3966,5.138,3967,5.713,3968,4.276,3969,2.845,3970,4.276,3971,4.276,3972,4.276,3973,4.276,3974,5.138,3975,2.845,3976,2.845,3977,2.845,3978,2.845,3979,2.845,3980,2.845,3981,2.845,3982,2.845,3983,5.713,3984,2.845,3985,4.276,3986,2.845,3987,4.276,3988,2.845,3989,4.276,3990,4.276,3991,4.276,3992,4.276,3993,2.845,3994,2.845,3995,5.713,3996,4.276,3997,2.845,3998,4.276,3999,2.845,4000,5.713,4001,4.276,4002,2.845,4003,2.845,4004,4.276,4005,2.845,4006,2.845,4007,2.229,4008,2.845,4009,2.845,4010,2.845,4011,2.845,4012,2.845,4013,2.845,4014,2.845,4015,2.845,4016,2.845,4017,4.276,4018,2.845,4019,2.845,4020,5.138,4021,2.845,4022,2.845,4023,2.845,4024,2.845,4025,2.845,4026,2.845,4027,2.845,4028,2.845,4029,2.845,4030,2.845,4031,2.845,4032,2.845,4033,2.845,4034,2.845,4035,2.473,4036,2.845,4037,2.845,4038,2.845,4039,2.845,4040,2.845,4041,2.845,4042,2.845,4043,2.845,4044,2.845,4045,2.845,4046,2.845,4047,2.845,4048,2.845,4049,2.845]],["title/components/PropertyFieldEditComponent.html",[98,0.169,181,0.817]],["body/components/PropertyFieldEditComponent.html",[3,0.164,4,0.104,5,0.089,6,0.213,7,0.127,21,0.839,22,0.389,23,0.538,24,0.644,26,0.133,27,0.46,28,1,30,0.485,32,0.272,34,0.651,35,0.015,36,0.447,39,0.392,40,0.514,49,0.514,50,0.56,51,0.119,52,0.255,53,1.317,61,0.434,88,0.007,89,0.009,90,0.007,94,0.593,95,0.361,96,0.593,98,0.26,99,0.794,100,1.225,101,0.919,102,0.919,104,0.855,105,1.652,106,1.057,107,0.919,109,1.225,110,0.824,111,1.27,112,1.225,113,0.794,114,1.569,115,0.919,116,0.919,117,0.824,118,0.919,119,0.794,120,0.919,121,0.794,122,0.919,123,0.919,124,0.794,125,0.824,126,0.683,127,1.647,128,0.794,129,0.919,130,0.794,131,0.908,132,0.824,133,0.919,134,0.794,135,0.919,136,0.794,137,0.919,138,0.765,139,1.569,140,0.765,141,0.887,142,1.406,143,0.919,144,0.824,145,0.919,146,0.794,147,0.794,148,0.765,149,0.919,150,0.765,151,0.824,152,0.919,153,0.794,154,0.765,155,0.794,156,0.737,157,0.919,158,0.794,159,0.919,160,0.794,161,0.919,162,0.794,163,0.794,164,1.27,165,0.794,166,0.737,167,0.919,168,0.794,169,0.919,170,0.794,171,1.181,172,0.919,173,0.794,174,0.839,175,0.737,176,1.27,177,1.521,178,0.794,179,1.27,180,0.794,181,1.355,182,1.618,183,0.794,184,0.794,185,0.919,186,0.794,187,0.855,188,0.887,189,0.765,190,0.887,191,0.919,194,2.562,195,1.181,197,4.307,198,3.813,204,2.764,205,2.812,206,2.764,213,1.186,214,0.537,216,2.568,217,3.829,218,3.13,220,0.871,227,0.527,229,1.553,236,1.765,237,2.036,238,1.492,239,1.492,240,1.492,241,1.231,243,1.765,244,4.074,247,2.41,248,0.912,250,2.772,255,3.475,280,2.41,281,2.676,282,3.556,283,5.593,284,5.303,285,4.779,286,5.154,287,4.171,288,3.351,290,5.72,291,3.02,294,1.002,295,4.171,296,4.113,297,5.154,298,4.394,299,4.629,300,3.329,301,1.981,302,4.171,303,3.351,304,3.02,305,1.166,306,3.02,307,2.772,309,3.02,310,3.02,311,3.02,312,2.772,313,1.937,314,4.779,315,3.02,316,5.303,317,3.351,318,4.629,319,2.676,320,2.772,321,3.351,322,4.629,323,2.772,325,3.829,326,3.02,327,3.02,328,3.02,329,3.02,332,3.351,334,4.629,335,4.629,336,3.974,337,3.153,338,4.171,339,4.171,340,3.556,341,2.964,342,2.964,343,2.812,344,3.662,345,3.662,346,4.171,347,3.556,348,4.171,349,4.171,350,4.171,351,4.171,352,5.842,434,0.873,585,2.964,678,1.833,909,2.574,2185,4.629,2414,3.351,3241,4.171,4050,6.877,4051,6.579,4052,3.854,4053,3.854,4054,3.854,4055,5.324,4056,5.324,4057,5.324]],["title/components/TemplateEditComponent.html",[98,0.169,183,0.817]],["body/components/TemplateEditComponent.html",[3,0.136,4,0.136,5,0.117,6,0.203,7,0.125,21,1.004,22,0.323,23,0.511,24,0.437,26,0.175,27,0.55,28,1.143,30,0.581,32,0.254,34,0.581,35,0.014,36,0.433,39,0.35,40,0.675,51,0.156,52,0.306,53,1.576,61,0.383,88,0.009,89,0.011,90,0.009,95,0.297,98,0.297,99,1.042,100,1.465,101,1.206,102,1.206,104,1.122,105,1.676,106,1.265,107,1.206,109,1.772,110,1.081,111,1.52,112,1.465,113,1.042,114,1.747,115,1.206,116,1.206,117,1.081,118,1.206,119,1.042,120,1.206,121,1.042,122,1.206,123,1.206,124,1.042,125,1.081,126,0.646,127,1.8,128,1.042,129,1.206,130,1.042,131,1.086,132,1.081,133,1.206,134,1.042,135,1.206,136,1.042,137,1.206,138,1.004,139,1.747,140,1.004,141,1.163,142,1.565,143,1.206,144,1.081,145,1.206,146,1.042,147,1.042,148,1.004,149,1.206,150,1.004,151,1.081,152,1.206,153,1.042,154,0.807,155,1.042,156,0.967,157,1.206,158,1.042,159,1.206,160,1.042,161,1.206,162,1.042,163,1.042,164,1.52,165,1.042,166,0.967,167,1.206,168,1.042,169,1.206,170,1.042,171,1.413,172,1.206,173,1.042,174,1.004,175,0.967,176,1.52,177,1.004,178,1.042,179,1.52,180,1.042,181,1.042,182,1.081,183,1.509,184,1.042,185,1.206,186,1.042,187,1.122,188,1.163,189,1.004,190,1.163,191,1.206,194,2.93,195,1.413,198,4.361,204,3.076,206,3.076,216,2.808,220,0.744,227,0.55,229,2.039,236,2.317,240,1.958,241,1.616,247,3.162,280,3.162,281,3.202,282,4.255,294,0.734,312,3.638,3069,6.065,3816,4.398,4058,6.562,4059,6.372,4060,5.058,4061,5.058]],["title/classes/TextNode.html",[52,0.19,1855,2.479]],["body/classes/TextNode.html",[3,0.066,4,0.143,5,0.057,6,0.164,7,0.096,22,0.395,23,0.387,24,0.331,26,0.243,27,0.331,28,1.075,29,0.732,30,0.349,32,0.238,34,0.523,35,0.015,36,0.541,39,0.315,48,0.816,49,0.627,50,0.358,51,0.177,52,0.275,61,0.135,80,0.844,88,0.004,89,0.007,90,0.004,94,0.274,95,0.283,96,0.274,126,0.55,148,0.489,154,0.58,209,0.632,214,0.313,227,0.548,253,1.425,254,1.18,272,0.913,294,0.358,301,1.425,305,1.341,319,1.925,365,2.428,420,2.254,430,1.238,434,1.291,442,1.748,453,2.009,472,1.301,522,3.005,539,4.879,544,1.18,570,1.449,573,1.449,617,0.992,626,1.238,627,1.18,637,1.679,640,1.449,645,2.394,678,2.416,719,0.609,723,1.543,762,0.848,764,1.301,774,1.543,780,2.081,797,0.632,821,1.97,869,1.301,875,1.882,920,1.079,993,1.925,1094,1.583,1148,3.532,1155,0.953,1169,1.645,1174,3.835,1210,2.136,1243,0.992,1408,1.034,1421,1.539,1443,2.022,1534,3.12,1562,0.916,1569,2.254,1606,2.051,1639,1.079,1640,1.543,1647,0.916,1648,1.925,1680,1.609,1700,0.916,1702,1.543,1728,1.645,1729,3.138,1750,3.12,1775,1.679,1788,2.353,1797,1.539,1835,4.567,1836,1.645,1837,4.372,1838,3.138,1839,3.812,1840,4.563,1841,4.954,1842,4.954,1843,1.771,1845,4.129,1850,1.771,1851,3.967,1852,5.307,1853,5.607,1854,1.771,1855,5.032,1856,3.138,1857,3.812,1858,4.382,1859,1.771,1860,1.771,1861,1.771,1862,1.771,1863,4.832,1864,1.771,1865,1.771,1866,1.371,1867,1.771,1868,1.771,1869,1.771,1870,1.771,1871,1.449,1872,1.771,1873,1.771,1874,1.771,1875,1.771,1876,1.771,1877,1.771,1878,1.771,1879,1.771,1880,1.771,1881,2.754,1882,1.771,1883,2.754,1884,1.771,1885,3.379,1886,1.771,1887,1.771,1888,1.771,1889,4.846,1890,4.129,1891,4.129,1892,3.812,1893,1.771,1894,1.771,1895,3.861,1896,1.771,1897,2.754,1898,3.812,1899,1.771,1900,5.355,1901,4.954,1902,4.372,1903,5.022,1904,3.379,1905,1.771,1906,1.771,1907,4.129,1908,1.771,1909,3.379,1910,2.754,1911,1.771,1912,4.718,1913,4.129,1914,5.193,1915,1.771,1916,3.379,1917,1.771,1918,2.754,1919,2.754,1920,3.812,1921,2.754,1922,2.394,1923,2.754,1924,4.129,1925,2.557,1926,2.557,1927,1.771,1928,1.771,1929,1.771,1930,4.718,1931,2.754,1932,4.563,1933,1.771,1934,3.379,1935,4.567,1936,2.754,1937,4.372,1938,1.771,1939,5.124,1940,3.812,1941,2.754,1942,2.754,1943,2.394,1944,3.379,1945,2.754,1946,2.754,1947,1.771,1948,2.754,1949,2.754,1950,3.812,1951,2.754,1952,2.754,1953,3.138,1954,1.771,1955,1.771,1956,1.771,1957,1.771,1958,1.771,1959,3.379,1960,1.771,1961,4.129,1962,1.771,1963,4.372,1964,3.12,1965,4.372,1966,3.379,1967,2.152,1968,3.138,1969,3.379,1970,1.771,1971,5.124,1972,5.124,1973,4.372,1974,3.379,1975,1.771,1976,4.563,1977,1.771,1978,4.372,1979,1.771,1980,1.771,1981,3.379,1982,1.771,1983,3.379,1984,3.379,1985,3.379,1986,1.771,1987,1.771,1988,2.754,1989,2.754,1990,2.754,1991,1.771,1992,1.771,1993,5.193,1994,2.754,1995,1.771,1996,1.771,1997,1.771,1998,1.771,1999,1.925,2000,1.449,2001,2.131,2002,1.645,2003,1.771,2004,1.771,2005,1.771,2006,1.771,2007,1.771,2008,1.539,2009,1.771,2010,2.022,2011,1.771,2012,1.771,2013,1.771,2014,2.754,2015,1.645,2016,1.771,2017,1.771,2018,2.754,2019,3.812,2020,3.812,2021,1.771,2022,1.771,2023,3.379,2024,1.771,2025,2.754,2026,2.754,2027,1.771,2028,4.718,2029,2.754,2030,1.771,2031,1.771,2032,1.771,2033,2.754,2034,1.771,2035,2.754,2036,1.771,2037,1.771,2038,1.301,2039,1.771,2040,1.771,2041,1.645,2042,1.238,2043,1.771,2044,1.771,2045,1.771,2046,1.771,2047,1.771,2048,2.754,2049,1.771,2050,2.754,2423,4.992,2424,2.141,2425,2.141,2428,2.141,2429,2.141,2430,2.141,4062,2.462,4063,3.829,4064,2.462,4065,2.462,4066,2.462]],["title/pipes/ToErrorIconClassPipe.html",[1030,2.648,4067,2.334]],["body/pipes/ToErrorIconClassPipe.html",[3,0.19,4,0.16,5,0.138,6,0.19,7,0.111,22,0.393,24,0.515,30,0.543,32,0.206,34,0.543,35,0.014,36,0.478,39,0.387,40,0.795,51,0.183,52,0.286,53,1.474,61,0.412,88,0.01,89,0.012,90,0.01,94,0.664,95,0.278,96,0.664,104,1.321,174,1.181,719,1.916,727,5.181,762,2.052,763,1.903,774,2.402,775,3.725,776,3.98,1030,4.703,1100,4.703,1336,4.402,1351,5.181,1738,5.007,4067,4.145,4068,5.959,4069,6.122,4070,5.181,4071,7.042,4072,5.959,4073,7.042,4074,5.959,4075,7.042,4076,7.496,4077,6.967,4078,5.959]],["title/components/ToolbarComponent.html",[98,0.169,184,0.817]],["body/components/ToolbarComponent.html",[3,0.068,4,0.068,5,0.173,6,0.211,7,0.125,20,2.578,21,0.753,22,0.364,23,0.256,24,0.218,26,0.088,27,0.338,28,1.245,29,0.914,30,0.357,32,0.27,34,0.682,35,0.015,36,0.487,39,0.381,40,0.338,47,1.489,49,0.638,50,0.367,51,0.204,52,0.229,53,0.967,57,1.489,61,0.403,65,3.867,69,2.095,76,1.965,77,2.612,80,0.722,88,0.004,89,0.007,90,0.004,94,0.757,95,0.346,96,0.757,98,0.203,99,0.521,100,0.899,101,0.603,102,0.603,104,0.561,105,1.602,106,1.314,107,0.603,109,1.337,110,0.541,111,0.933,112,0.899,113,0.521,114,1.283,115,0.603,116,0.603,117,0.541,118,0.603,119,0.521,120,0.603,121,0.521,122,0.603,123,0.603,124,0.521,125,0.541,126,0.54,127,1.387,128,0.521,129,0.603,130,0.521,131,0.815,132,0.541,133,0.603,134,0.521,135,0.603,136,0.521,137,0.603,138,0.502,139,1.283,140,0.502,141,0.582,142,1.415,143,0.603,144,1.37,145,0.603,146,0.521,147,0.521,148,0.502,149,0.603,150,0.502,151,0.541,152,0.603,153,0.521,154,0.768,155,0.521,156,1.49,157,0.603,158,0.521,159,0.603,160,0.521,161,0.603,162,0.521,163,0.521,164,0.933,165,0.521,166,0.484,167,0.603,168,0.521,169,0.603,170,0.521,171,0.867,172,0.603,173,0.521,174,1.043,175,0.484,176,0.933,177,1.314,178,0.521,179,0.933,180,0.521,181,0.521,182,0.541,183,1.32,184,1.198,185,0.603,186,0.521,187,0.561,188,0.582,189,0.502,190,0.582,191,0.603,195,0.867,213,2.207,214,0.605,218,1.109,220,0.679,227,0.502,229,1.02,236,1.159,241,0.808,243,1.159,248,0.819,253,1.455,255,1.336,261,3.063,263,1.455,272,1.14,275,3.991,278,2.445,281,1.271,294,0.367,295,1.982,296,1.582,297,3.063,305,0.914,337,1.874,356,2.189,373,1.982,376,2.66,380,2.463,381,2.2,434,0.881,442,2,522,2.189,544,2.578,640,2.302,649,3.618,678,1.646,684,2.445,719,1.33,722,3.488,723,1.02,737,2.847,748,1.489,762,0.871,763,0.808,771,3.591,772,2.813,774,2.167,780,1.823,852,1.489,885,3.071,889,3.063,890,3.063,892,1.69,893,1.982,894,1.982,905,3.499,925,1.982,960,2.445,993,3.414,995,4.42,996,2.935,997,2.176,1014,1.69,1064,1.819,1115,1.982,1125,4.991,1127,3.4,1150,3.744,1152,2.612,1153,3.4,1155,2.25,1156,5.344,1157,2.812,1184,3.744,1193,3.063,1198,1.819,1199,1.819,1243,2.738,1275,2.445,1327,3.744,1328,2.812,1336,1.582,1341,1.69,1344,3.063,1345,3.4,1377,1.819,1379,3.192,1380,3.192,1385,3.192,1386,1.69,1387,3.591,1389,2.612,1398,1.69,1399,3.192,1406,2.2,1407,3.192,1408,1.643,1410,2.812,1411,2.612,1412,2.612,1453,2.402,1457,2.612,1515,3.591,1516,2.812,1575,1.819,1639,1.714,1640,2.167,1647,0.941,1676,5.055,1680,1.063,1700,0.941,1702,2.167,1734,4.421,1775,1.109,1826,1.819,1953,1.69,1999,2.703,2015,2.612,2042,2.703,2151,3.063,2159,1.69,2223,3.867,2226,3.867,2238,3.063,2239,3.063,2241,3.063,2242,3.063,2243,2.812,2456,5.571,2457,5.344,2463,3.4,2464,4.156,2470,4.675,2471,3.4,2480,3.4,2487,3.4,2495,4.675,2496,5.755,2543,2.2,2569,2.2,2570,4.675,2587,2.2,2602,3.4,2607,4.156,2613,2.2,2614,3.4,2665,3.4,2776,4.156,2828,1.213,2912,1.489,2913,1.69,3148,4.156,3246,2.2,3582,2.2,3725,3.4,4077,4.675,4079,2.2,4080,3.91,4081,3.91,4082,4.78,4083,4.78,4084,5.814,4085,5.377,4086,6.146,4087,3.91,4088,5.377,4089,3.91,4090,3.91,4091,5.377,4092,3.91,4093,3.91,4094,3.91,4095,3.91,4096,2.53,4097,2.53,4098,2.53,4099,5.377,4100,5.377,4101,2.53,4102,2.53,4103,3.91,4104,2.53,4105,3.91,4106,2.53,4107,3.4,4108,2.53,4109,3.91,4110,2.53,4111,3.91,4112,3.91,4113,2.53,4114,3.91,4115,3.4,4116,2.53,4117,3.91,4118,2.53,4119,3.4,4120,2.53,4121,3.91,4122,2.53,4123,3.91,4124,3.91,4125,3.91,4126,2.53,4127,3.4,4128,3.91,4129,3.91,4130,2.53,4131,3.91,4132,2.53,4133,3.91,4134,3.91,4135,3.91,4136,2.53,4137,3.91,4138,2.53,4139,2.53,4140,2.53,4141,2.53,4142,2.53,4143,2.53,4144,2.53,4145,2.53,4146,2.53,4147,2.53,4148,2.53,4149,2.53,4150,2.53,4151,2.53,4152,2.53,4153,2.53,4154,2.53,4155,2.53,4156,4.78,4157,2.53,4158,2.53,4159,4.78,4160,2.53,4161,3.91,4162,3.91,4163,2.53,4164,2.53,4165,2.53,4166,2.53,4167,2.53,4168,2.53,4169,3.91,4170,2.53,4171,3.91,4172,3.91,4173,2.53,4174,2.53,4175,5.814,4176,5.814,4177,2.53,4178,2.53,4179,3.063,4180,3.91,4181,3.91,4182,2.53,4183,2.53,4184,3.91,4185,2.53,4186,3.91,4187,2.53,4188,2.53,4189,2.53,4190,2.53,4191,2.53,4192,2.53,4193,2.53,4194,2.53,4195,2.53,4196,5.377,4197,2.53,4198,2.53,4199,2.53,4200,2.53,4201,2.53,4202,3.91,4203,2.53,4204,2.53,4205,3.91,4206,2.53,4207,2.53,4208,3.91,4209,3.91,4210,3.91,4211,2.53,4212,2.53,4213,2.53,4214,2.53,4215,2.53,4216,2.53,4217,2.53,4218,2.53,4219,3.91]],["title/classes/TransitionDelimiterModel.html",[52,0.19,3211,2.648]],["body/classes/TransitionDelimiterModel.html",[3,0.117,4,0.117,5,0.101,6,0.199,7,0.117,22,0.398,23,0.728,24,0.598,26,0.151,27,0.5,32,0.262,35,0.015,36,0.549,39,0.318,51,0.213,52,0.278,61,0.24,80,0.463,88,0.007,89,0.01,90,0.007,94,0.486,95,0.336,96,0.486,126,0.356,154,0.441,205,2.304,209,1.667,220,0.841,227,0.639,248,0.557,252,3.058,434,0.715,685,5.423,723,2.79,737,2.333,751,5.181,780,1.294,797,1.119,821,1.247,875,1.928,1118,3.417,1148,3.617,1798,3.722,1858,2.567,1871,3.408,1967,3.392,2054,2.432,2075,3.408,2076,3.408,2077,3.408,2174,6.011,2205,2.192,2828,2.091,2906,3.417,2912,3.825,2915,5.091,2954,2.567,3206,3.417,3211,4.623,3224,5.047,3225,3.417,3227,3.417,3414,5.091,3415,4.674,3416,4.674,3449,3.137,4067,3.825,4179,3.417,4220,3.137,4221,6.569,4222,5.92,4223,6.569,4224,6.569,4225,4.362,4226,5.79,4227,5.65,4228,4.362,4229,4.362,4230,4.362,4231,3.792,4232,4.536,4233,5.091,4234,3.417,4235,5.091,4236,5.091,4237,5.091,4238,5.091,4239,5.091,4240,5.091,4241,3.417,4242,5.091,4243,5.091,4244,5.091,4245,5.091,4246,3.417,4247,3.792,4248,3.792,4249,3.792,4250,3.792,4251,3.792,4252,3.792,4253,3.792,4254,3.792,4255,5.034,4256,7.078,4257,3.792,4258,3.792,4259,3.792,4260,3.792,4261,3.792,4262,3.792,4263,3.792,4264,3.792,4265,3.792,4266,3.792,4267,3.792,4268,3.792,4269,3.792,4270,3.792,4271,3.792,4272,3.792,4273,3.792,4274,3.792,4275,3.792,4276,3.792,4277,5.034,4278,3.792,4279,3.792,4280,3.792,4281,5.034,4282,5.034,4283,3.792,4284,6.019,4285,3.792,4286,3.792,4287,6.671,4288,5.65,4289,3.792,4290,3.792,4291,3.792,4292,3.792,4293,3.792,4294,3.792]],["title/classes/TransitionModel.html",[52,0.19,2954,2.334]],["body/classes/TransitionModel.html",[3,0.109,4,0.109,5,0.093,6,0.218,7,0.128,22,0.392,23,0.749,24,0.625,26,0.14,27,0.474,30,0.5,32,0.281,34,0.687,35,0.015,36,0.538,39,0.301,51,0.206,52,0.263,61,0.221,80,0.428,88,0.007,89,0.009,90,0.007,94,0.449,95,0.351,96,0.449,126,0.329,154,0.555,205,3.54,209,1.719,214,0.329,220,0.902,227,0.606,248,0.701,252,2.899,434,0.66,685,5.904,723,2.702,737,2.212,751,5.044,780,1.195,797,1.033,821,1.57,875,2.267,1118,3.157,1148,3.475,1798,3.637,1858,3.675,1871,3.675,1967,3.314,2054,2.622,2075,3.231,2076,3.231,2077,3.231,2174,5.904,2205,2.025,2828,1.932,2906,4.891,2912,4.259,2915,4.891,2954,3.231,3206,4.3,3211,4.477,3224,4.684,3225,3.157,3227,3.157,3414,5.251,3415,4.49,3416,4.49,3449,2.898,4067,3.675,4179,4.891,4220,2.898,4221,5.428,4222,5.669,4223,5.428,4224,5.428,4227,5.428,4231,3.503,4232,4.3,4233,4.891,4234,3.157,4235,4.891,4236,4.891,4237,4.891,4238,4.891,4239,4.891,4240,4.891,4241,3.157,4242,4.891,4243,4.891,4244,4.891,4245,4.891,4246,3.157,4247,3.503,4248,3.503,4249,3.503,4250,3.503,4251,5.428,4252,5.428,4253,5.428,4254,3.503,4255,4.772,4256,7.014,4257,3.503,4258,3.503,4259,3.503,4260,3.503,4261,3.503,4262,3.503,4263,3.503,4264,3.503,4265,3.503,4266,3.503,4267,3.503,4268,3.503,4269,3.503,4270,3.503,4271,3.503,4272,3.503,4273,3.503,4274,3.503,4275,3.503,4276,3.503,4277,4.772,4278,3.503,4279,4.772,4280,3.503,4281,4.772,4282,4.772,4283,5.828,4284,5.828,4285,3.503,4286,3.503,4287,6.552,4288,5.428,4289,3.503,4290,5.828,4291,5.828,4292,5.828,4293,5.828,4294,5.828,4295,5.489,4296,5.489,4297,4.03,4298,4.03,4299,4.03,4300,4.03,4301,4.03,4302,4.03,4303,4.03,4304,4.03,4305,4.03,4306,4.03,4307,4.03,4308,4.03,4309,4.03,4310,4.03,4311,4.03]],["title/components/TransitionSelectionComponent.html",[98,0.169,186,0.817]],["body/components/TransitionSelectionComponent.html",[3,0.095,4,0.134,5,0.081,6,0.209,7,0.125,12,2.754,21,0.786,22,0.386,23,0.505,24,0.304,26,0.201,27,0.431,29,1.11,30,0.455,32,0.266,34,0.65,35,0.015,36,0.394,39,0.413,40,0.469,49,0.775,50,0.51,51,0.108,52,0.239,53,1.235,61,0.367,80,0.834,88,0.006,89,0.009,90,0.006,94,0.556,95,0.332,96,0.556,98,0.247,99,0.724,100,1.148,101,0.839,102,0.839,104,0.78,105,1.642,106,0.991,107,0.839,109,1.148,110,0.752,111,1.191,112,1.148,113,0.724,114,1.507,115,0.839,116,0.839,117,0.752,118,0.839,119,0.724,120,0.839,121,0.724,122,0.839,123,0.839,124,0.724,125,0.752,126,0.647,127,1.592,128,0.724,129,0.839,130,0.724,131,0.989,132,0.752,133,0.839,134,0.724,135,0.839,136,0.724,137,0.839,138,0.698,139,1.507,140,0.698,141,0.809,142,1.351,143,0.839,144,0.752,145,0.839,146,0.724,147,0.724,148,0.698,149,0.839,150,1.416,151,1.067,152,0.839,153,0.724,154,0.805,155,0.724,156,1.468,157,0.839,158,0.724,159,0.839,160,0.724,161,0.839,162,0.724,163,0.724,164,1.191,165,0.724,166,0.672,167,0.839,168,0.724,169,0.839,170,0.724,171,1.537,172,0.839,173,0.724,174,0.786,175,0.672,176,1.191,177,1.376,178,0.724,179,1.191,180,0.724,181,0.724,182,0.752,183,0.724,184,0.724,185,0.839,186,1.302,187,1.48,188,0.809,189,0.698,190,1.148,191,0.839,195,1.107,213,1.536,214,0.545,220,0.678,227,0.431,240,1.361,241,1.123,248,0.742,254,1.685,257,3.121,263,1.857,272,1.701,278,3.629,294,0.725,300,2.198,356,2.659,376,3.231,380,2.894,430,1.767,434,1.094,442,1.857,453,0.87,455,2.509,522,2.659,585,3.231,640,2.069,668,4.547,678,1.719,719,0.87,723,1.417,737,1.417,762,1.211,763,1.123,772,2.069,774,1.417,780,1.043,821,1.807,861,3.629,997,1.957,1085,3.057,1086,6.067,1094,1.743,1095,1.258,1119,1.541,1243,1.417,1275,2.198,1379,2.348,1380,2.348,1385,2.348,1386,2.348,1387,3.334,1389,3.334,1398,2.348,1399,2.348,1407,2.348,1450,3.928,1530,3.057,1606,1.361,1639,2.188,1640,1.417,1647,1.308,1648,1.767,1700,1.308,1702,1.417,1775,1.541,1999,1.767,2000,2.069,2001,1.957,2002,2.348,2054,2.654,2062,3.337,2073,4.081,2074,3.066,2080,3.629,2084,1.957,2088,2.198,2089,2.069,2096,2.938,2159,3.334,2181,2.348,2192,4.34,2193,4.34,2204,2.198,2205,1.767,2516,1.767,2517,1.767,2790,2.637,2828,2.393,2850,2.348,2851,2.348,2912,2.069,2913,2.348,3163,3.057,3169,4.547,3189,3.59,3190,4.547,3191,3.911,3224,2.348,3230,3.057,3232,2.069,3241,2.754,3252,2.754,3253,2.754,3255,2.754,3268,5.047,3272,4.34,3276,4.34,3278,4.34,3284,4.34,3288,3.057,3290,3.057,3293,4.34,3295,3.911,3299,4.34,3302,3.057,3303,3.057,3304,3.057,3305,3.057,3306,3.057,3307,2.754,3308,3.057,3309,3.057,3310,3.057,3311,3.057,3312,3.057,3313,3.057,3314,4.34,3410,3.057,3413,5.047,3415,2.528,3416,3.59,3450,3.057,3578,2.754,3579,4.34,3596,3.057,3600,3.057,3948,3.057,4222,2.754,4312,6.933,4313,6.319,4314,6.319,4315,6.319,4316,3.516,4317,3.516,4318,3.516,4319,3.516,4320,3.516,4321,3.516,4322,3.516,4323,3.516,4324,3.516,4325,3.516,4326,3.516,4327,3.516,4328,3.516,4329,5.494,4330,3.516,4331,3.516,4332,3.516,4333,3.516,4334,3.516,4335,4.992,4336,3.516,4337,5.805,4338,3.516,4339,4.992,4340,6.933,4341,4.992,4342,3.516,4343,3.516,4344,3.516,4345,3.516,4346,3.516,4347,3.516,4348,3.516,4349,3.516,4350,3.516,4351,3.057,4352,3.516,4353,3.516,4354,3.516,4355,3.516,4356,4.992,4357,3.516,4358,3.516,4359,3.516,4360,3.516,4361,3.516,4362,3.516,4363,3.516,4364,3.516,4365,4.992]],["title/coverage.html",[4366,4.72]],["body/coverage.html",[0,3.624,1,2.441,5,0.085,6,0.228,7,0.134,8,4.019,9,4.019,35,0.014,49,0.488,52,0.396,56,2.628,62,2.441,71,3.578,88,0.006,89,0.009,90,0.006,95,0.17,98,0.352,99,0.753,103,3.177,113,0.753,117,0.781,119,0.753,121,0.753,124,0.753,126,0.601,128,0.753,130,0.753,131,1.096,132,0.781,134,0.753,136,0.753,138,0.725,140,0.725,144,0.781,146,0.753,147,0.753,150,0.725,153,0.753,155,0.753,156,0.699,158,0.753,160,0.753,162,0.753,163,0.753,165,0.753,166,0.699,168,0.753,170,0.753,171,0.81,173,0.753,174,1.013,175,0.699,177,0.725,178,0.753,180,0.753,181,0.753,183,0.753,184,0.753,186,0.753,189,0.725,192,3.177,193,3.177,194,1.535,218,1.602,257,3.163,258,2.628,259,3.177,279,3.177,280,4.233,305,0.699,354,4.019,355,3.177,418,3.624,434,1.377,570,2.151,575,3.177,613,3.177,614,3.177,616,2.285,617,1.473,618,2.151,622,2.285,635,2.628,696,3.177,719,0.904,796,2.628,798,4.645,851,2.034,853,2.151,856,2.151,868,2.285,1030,2.441,1032,5.049,1033,5.5,1075,3.69,1078,2.863,1084,3.69,1086,2.863,1094,1.008,1096,3.177,1100,2.441,1102,2.863,1104,2.863,1106,2.863,1108,2.863,1110,2.863,1112,2.863,1119,1.602,1120,3.177,1121,4.264,1219,4.461,1220,4.294,1435,4.133,1436,4.233,1445,2.71,1519,2.863,1520,4.461,1635,3.177,1636,3.177,1704,2.863,1779,2.863,1788,1.415,1821,3.177,1835,2.285,1836,4.523,1851,2.285,1855,2.285,1863,2.285,1871,2.151,2038,2.71,2054,1.535,2055,4.019,2056,4.019,2060,2.151,2062,1.93,2072,2.034,2128,3.177,2129,3.177,2334,3.177,2364,2.285,2431,3.177,2432,5.155,2634,3.177,2645,2.863,2646,4.461,2647,4.461,2784,3.177,2790,1.93,2791,4.019,2792,4.019,2799,2.285,2828,2.459,2835,4.019,2844,2.628,2899,2.863,2900,3.177,2938,4.645,2945,2.628,2954,2.151,2956,2.441,3063,3.177,3064,5.036,3160,3.177,3211,2.441,3273,3.177,3315,3.177,3489,4.019,3566,3.177,3578,4.019,3620,3.177,3652,2.863,3653,4.461,3766,2.628,3807,3.177,3884,5.155,4050,3.177,4058,3.177,4067,2.151,4069,3.177,4070,3.177,4079,3.177,4220,3.69,4366,3.177,4367,2.863,4368,3.655,4369,7.733,4370,3.655,4371,3.655,4372,3.655,4373,3.655,4374,3.655,4375,3.655,4376,6.429,4377,5.589,4378,5.131,4379,5.131,4380,5.131,4381,3.655,4382,5.131,4383,3.655,4384,3.655,4385,5.929,4386,5.929,4387,3.655,4388,3.655,4389,5.929,4390,3.655,4391,3.655,4392,5.929,4393,3.655,4394,3.655,4395,3.655,4396,3.655,4397,3.655,4398,3.655,4399,3.655,4400,3.655,4401,5.131,4402,3.655,4403,3.655,4404,3.655,4405,6.429,4406,3.655,4407,6.772,4408,3.655,4409,3.655,4410,5.131,4411,3.655,4412,3.655,4413,3.655,4414,7.58,4415,3.655,4416,3.655,4417,3.655,4418,3.655,4419,6.772,4420,3.655,4421,3.655,4422,3.655,4423,3.655,4424,3.655,4425,3.655,4426,3.655,4427,3.655,4428,3.655,4429,3.655,4430,4.461,4431,5.131,4432,3.655,4433,3.655,4434,3.655,4435,3.655,4436,3.655,4437,3.655,4438,3.655,4439,3.655,4440,3.655,4441,3.655,4442,3.655,4443,3.655,4444,3.655,4445,3.655,4446,3.655,4447,3.655,4448,3.655,4449,3.177,4450,3.177,4451,3.177,4452,3.177,4453,3.655]],["title/dependencies.html",[15,2.375,1022,2.984]],["body/dependencies.html",[35,0.014,48,2.054,88,0.011,89,0.012,90,0.011,590,5.386,597,5.386,849,3.873,1022,3.873,1024,5.479,1371,4.138,1645,5.386,1822,5.386,1833,4.853,4329,5.386,4454,6.195,4455,6.195,4456,6.195,4457,6.195,4458,6.195,4459,6.195,4460,6.195,4461,6.195,4462,6.195,4463,6.195,4464,5.386,4465,6.195,4466,7.204,4467,6.195,4468,6.195,4469,6.195,4470,6.195,4471,6.195,4472,6.195,4473,6.195,4474,6.195,4475,6.195,4476,6.195,4477,6.195,4478,7.204,4479,6.195,4480,6.195,4481,6.195,4482,6.195,4483,6.195]],["title/miscellaneous/enumerations.html",[4484,2.375,4485,4.15]],["body/miscellaneous/enumerations.html",[3,0.178,6,0.202,7,0.118,24,0.732,26,0.186,35,0.015,88,0.009,89,0.011,90,0.009,125,1.15,126,0.541,154,0.67,166,1.266,174,1.043,182,1.416,242,4.763,252,3.789,253,2.464,254,3.174,281,2.705,283,5.188,313,3.328,583,4.406,684,4.14,737,2.669,762,2.28,852,3.898,915,4.216,958,4.763,960,4.14,1148,2.996,1638,5.188,1647,2.464,1692,4.216,1700,2.464,1779,4.216,1798,3.328,1799,5.758,1800,5.758,1801,5.758,1802,5.188,1826,3.87,1833,5.188,2055,3.365,2056,4.14,2074,3.498,2075,4.406,2076,4.406,2077,4.406,2078,4.423,2098,3.498,2458,4.763,2460,5.758,2912,3.898,3224,4.423,4067,3.168,4220,3.87,4232,5.188,4233,4.216,4234,4.216,4235,4.216,4236,4.216,4237,4.216,4238,4.216,4239,4.216,4240,4.216,4241,4.216,4242,4.216,4243,4.216,4244,4.216,4245,4.216,4246,4.216,4484,3.87,4485,4.679,4486,7.485,4487,7.174,4488,5.382,4489,6.623,4490,5.382,4491,5.382,4492,6.623,4493,6.623,4494,6.623,4495,6.623]],["title/index.html",[26,0.114,4496,2.871,4497,2.871]],["body/index.html",[7,0.129,20,2.692,23,0.568,35,0.014,66,4.04,88,0.01,89,0.012,90,0.01,106,1.65,131,1.326,154,0.739,440,4.889,445,3.751,485,3.512,584,4.883,666,2.573,686,6.355,725,3.751,737,2.264,741,4.4,886,5.458,958,4.04,960,3.512,983,3.306,1022,3.512,1295,3.751,1341,4.54,1445,2.967,1573,4.4,1964,3.306,2098,2.967,2165,4.4,2225,4.4,2226,4.889,2243,4.04,2402,4.883,2435,4.883,2458,4.04,3202,4.4,3321,6.604,3447,4.4,4007,4.4,4035,5.91,4107,5.91,4119,5.91,4127,4.883,4367,5.726,4498,5.617,4499,5.617,4500,5.617,4501,5.617,4502,5.617,4503,5.617,4504,5.617,4505,7.596,4506,5.617,4507,5.617,4508,5.617,4509,5.617,4510,5.617,4511,5.617,4512,5.617,4513,5.617,4514,5.617,4515,5.617,4516,5.617,4517,5.617,4518,5.617,4519,5.617,4520,7.31,4521,7.31,4522,6.798,4523,5.617,4524,5.617,4525,5.617,4526,5.617,4527,5.617,4528,5.617,4529,7.596,4530,5.617,4531,5.617,4532,5.617,4533,5.617,4534,5.617,4535,5.617,4536,5.617,4537,5.617,4538,5.617,4539,4.883,4540,5.617,4541,7.778,4542,5.617,4543,5.617,4544,5.617,4545,5.617,4546,5.617,4547,5.617,4548,5.617,4549,5.617,4550,5.617,4551,5.617]],["title/license.html",[463,2.206,4496,2.871,4497,2.871]],["body/license.html",[4,0.206,5,0.168,10,1.455,21,0.546,32,0.12,35,0.01,39,0.19,52,0.166,61,0.316,69,3.285,88,0.008,89,0.008,90,0.006,132,0.74,213,1.066,265,3.011,301,2.567,347,2.313,442,1.288,445,4.432,453,0.857,454,5.555,460,2.491,461,5.313,462,4.514,463,5.501,464,4.14,465,4.14,466,3.845,467,2.491,468,2.491,469,3.599,470,2.491,471,4.514,472,3.315,473,3.599,474,4.14,475,4.14,476,4.514,477,3.552,478,4.14,479,3.552,480,4.14,481,5.555,482,3.552,483,3.552,484,3.552,485,2.165,486,2.313,487,2.491,488,2.491,489,4.14,490,2.491,522,2.875,541,4.294,544,1.66,573,2.039,583,4.546,639,3.011,649,2.039,692,3.011,723,1.396,725,2.313,741,5.687,748,2.039,755,2.713,861,2.165,887,2.713,986,2.713,997,1.928,1116,3.011,1141,5.199,1152,2.313,1155,2.67,1181,3.011,1188,3.011,1275,2.165,1309,3.011,1315,5.005,1341,3.845,1370,2.609,1443,2.609,1573,2.713,1592,2.713,1594,2.713,1595,3.011,1654,2.491,1680,2.075,1734,2.313,1830,3.011,1895,2.039,1926,3.299,1968,2.313,2151,2.713,2155,2.313,2181,3.845,2217,3.011,2434,6.423,2455,5.005,2459,3.011,2579,3.011,2693,3.011,2745,3.011,3016,3.87,3017,3.87,3031,3.87,3189,3.552,3193,3.011,3202,2.713,3221,4.294,3388,2.713,3447,4.51,3449,4.514,3541,2.713,3774,2.491,4007,6.46,4115,3.011,4351,3.011,4367,4.51,4539,3.011,4552,3.464,4553,3.464,4554,3.464,4555,7.388,4556,6.277,4557,6.636,4558,7.831,4559,7.494,4560,3.464,4561,3.464,4562,7.494,4563,6.899,4564,7.494,4565,4.939,4566,3.464,4567,6.636,4568,3.464,4569,3.464,4570,3.464,4571,6.277,4572,3.464,4573,3.464,4574,6.277,4575,3.464,4576,5.757,4577,4.939,4578,4.939,4579,3.464,4580,7.951,4581,6.277,4582,4.939,4583,3.464,4584,4.939,4585,3.464,4586,3.464,4587,3.464,4588,3.464,4589,3.464,4590,3.464,4591,3.464,4592,5.757,4593,3.464,4594,4.939,4595,3.464,4596,3.464,4597,6.899,4598,6.277,4599,3.464,4600,3.464,4601,3.464,4602,3.464,4603,3.464,4604,3.464,4605,5.757,4606,3.464,4607,7.388,4608,3.464,4609,4.939,4610,3.464,4611,7.951,4612,7.983,4613,3.464,4614,3.464,4615,3.464,4616,3.464,4617,3.464,4618,4.939,4619,5.757,4620,3.464,4621,3.464,4622,3.464,4623,3.464,4624,6.277,4625,6.636,4626,3.464,4627,4.939,4628,6.277,4629,4.939,4630,3.464,4631,6.636,4632,4.939,4633,3.464,4634,3.464,4635,5.757,4636,3.464,4637,3.464,4638,3.464,4639,3.464,4640,4.939,4641,3.464,4642,3.464,4643,3.464,4644,5.757,4645,3.464,4646,3.464,4647,5.757,4648,3.464,4649,3.464,4650,3.464,4651,7.494,4652,3.464,4653,3.464,4654,4.939,4655,5.757,4656,4.939,4657,4.939,4658,4.939,4659,4.939,4660,4.939,4661,5.757,4662,4.939,4663,4.939,4664,4.939,4665,4.939,4666,3.464,4667,4.939,4668,3.464,4669,6.636,4670,7.1,4671,4.939,4672,4.939,4673,4.939,4674,3.464,4675,4.939,4676,3.464,4677,3.464,4678,3.464,4679,5.757,4680,3.464,4681,3.464,4682,4.939,4683,4.939,4684,3.464,4685,3.464,4686,3.464,4687,3.464,4688,3.464,4689,3.464,4690,3.464,4691,4.939,4692,3.464,4693,3.464,4694,3.464,4695,3.464,4696,3.464,4697,3.464,4698,3.464,4699,3.464,4700,3.464,4701,3.464,4702,3.464,4703,3.464,4704,7.259,4705,3.464,4706,3.464,4707,3.464,4708,3.464,4709,6.277,4710,4.939,4711,6.277,4712,3.464,4713,3.464,4714,3.464,4715,3.464,4716,3.464,4717,3.464,4718,4.939,4719,4.939,4720,3.464,4721,3.464,4722,4.939,4723,3.464,4724,3.464,4725,6.636,4726,3.464,4727,3.464,4728,3.464,4729,3.464,4730,3.464,4731,3.464,4732,5.757,4733,3.464,4734,3.464,4735,3.464,4736,3.464,4737,3.464,4738,3.464,4739,3.464,4740,3.464,4741,4.939,4742,3.464,4743,3.464,4744,3.464,4745,3.464,4746,3.464,4747,3.464,4748,3.464,4749,3.464,4750,3.464,4751,6.277,4752,4.939,4753,4.939,4754,3.464,4755,3.464,4756,3.464,4757,3.464,4758,3.464,4759,3.464,4760,3.464,4761,3.464,4762,4.939,4763,3.464,4764,3.464,4765,3.464,4766,6.636,4767,3.464,4768,3.464,4769,3.464,4770,3.464,4771,3.464,4772,3.464,4773,3.464,4774,3.464,4775,6.636,4776,3.464,4777,3.464,4778,3.464,4779,3.464,4780,3.464,4781,3.464,4782,3.464,4783,3.464,4784,3.464,4785,3.464,4786,3.464,4787,3.464,4788,3.464,4789,3.464,4790,5.757,4791,3.464,4792,3.464,4793,3.464,4794,3.464,4795,4.939,4796,3.464,4797,3.464,4798,3.464,4799,3.464,4800,3.464,4801,3.464,4802,3.464,4803,3.464,4804,3.464,4805,3.464,4806,3.464,4807,3.464,4808,3.464,4809,3.464,4810,4.939,4811,3.464,4812,3.464,4813,4.939,4814,4.939,4815,3.464,4816,3.464,4817,3.464,4818,3.464,4819,3.464,4820,3.464,4821,3.464,4822,3.464,4823,3.464,4824,3.464,4825,3.464]],["title/modules.html",[1021,3.626]],["body/modules.html",[35,0.013,88,0.011,89,0.013,90,0.011,607,6.444,1020,4.347,1021,4.347,1275,4.634,1295,4.95,1806,4.681,4826,7.412]],["title/overview.html",[4827,4.72]],["body/overview.html",[2,3.309,35,0.015,88,0.008,89,0.011,90,0.008,99,1.604,100,1.14,110,1.059,113,1.021,117,1.665,119,1.423,121,1.423,124,1.423,128,1.604,130,1.639,134,1.423,136,1.423,138,1.371,140,1.371,144,1.477,146,1.423,147,1.423,150,1.371,153,1.423,155,1.423,158,1.423,160,1.423,162,1.423,163,1.423,165,1.423,168,1.423,170,1.423,173,1.423,175,1.489,177,1.546,178,1.423,180,1.423,181,1.423,183,1.423,184,1.423,186,1.423,189,1.371,453,1.556,615,3.564,616,4.319,617,2.785,618,4.067,622,4.319,748,2.916,797,1.271,853,4.067,856,4.067,996,2.269,1019,3.309,1020,5.699,1021,3.309,1022,3.098,1023,3.882,1024,3.564,1025,3.882,1026,4.308,1027,4.308,1028,4.308,1029,4.308,1030,4.615,1031,4.927,1806,5.765,1807,4.308,1808,4.308,1810,4.308,2038,3.322,3774,3.564,4067,2.916,4377,4.308,4430,5.468,4827,4.308]],["title/miscellaneous/variables.html",[4484,2.375,4828,4.15]],["body/miscellaneous/variables.html",[6,0.141,7,0.083,16,5.813,23,0.818,24,0.698,26,0.182,35,0.015,59,6.401,71,4.436,82,5.813,88,0.009,89,0.011,90,0.009,95,0.377,106,1.582,248,0.975,294,1.03,927,4.112,931,4.112,1032,3.774,1033,6.178,1041,6.762,1102,5.108,1103,4.563,1104,5.108,1105,4.563,1106,5.108,1107,4.563,1108,5.108,1109,4.563,1110,5.108,1111,4.563,1112,5.108,1113,4.563,1155,2.872,1640,2.99,4449,4.563,4450,4.563,4451,4.563,4452,4.563,4464,6.451,4484,3.774,4828,4.563,4829,7.777,4830,5.248,4831,5.248,4832,5.248,4833,5.248,4834,7.42,4835,7.42,4836,7.42,4837,7.42,4838,7.42,4839,7.42,4840,7.42,4841,7.42,4842,7.094,4843,7.42,4844,7.094,4845,7.42,4846,7.094,4847,7.42,4848,7.094,4849,5.248,4850,5.248,4851,5.248,4852,5.248,4853,5.248,4854,5.248]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":434,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["0.5.1",{"_index":4470,"title":{},"body":{"dependencies.html":{}}}],["0.7.2",{"_index":4468,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":4483,"title":{},"body":{"dependencies.html":{}}}],["0.9.2017.07.28",{"_index":830,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["0/1",{"_index":4369,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":4393,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":4419,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":4401,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":4417,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":4402,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":4387,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":4425,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":4421,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":4379,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":4406,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":4404,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":4382,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4407,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":4408,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":4398,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4386,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":4376,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":4428,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":4405,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":4385,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":4392,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":514,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["1",{"_index":453,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{},"overview.html":{}}}],["1).tostring",{"_index":1866,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{}}}],["1.1.20150312",{"_index":4461,"title":{},"body":{"dependencies.html":{}}}],["1.1.6",{"_index":4479,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":1825,"title":{},"body":{"classes/Examples.html":{}}}],["1/13",{"_index":4403,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":4378,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":4429,"title":{},"body":{"coverage.html":{}}}],["1/27",{"_index":4391,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":4431,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":4445,"title":{},"body":{"coverage.html":{}}}],["1/49",{"_index":4424,"title":{},"body":{"coverage.html":{}}}],["1/50",{"_index":4420,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":430,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["10/18",{"_index":4438,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":511,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["1000000",{"_index":2980,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{}}}],["1000000).tostring",{"_index":2822,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["10px",{"_index":566,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["11",{"_index":4399,"title":{},"body":{"coverage.html":{}}}],["11/47",{"_index":4390,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":547,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["14",{"_index":4410,"title":{},"body":{"coverage.html":{}}}],["14/20",{"_index":4434,"title":{},"body":{"coverage.html":{}}}],["14/34",{"_index":4373,"title":{},"body":{"coverage.html":{}}}],["14/43",{"_index":4443,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":4426,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":4396,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":548,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["1].touppercase",{"_index":4158,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["1px",{"_index":595,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["2",{"_index":2038,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"classes/TextNode.html":{},"coverage.html":{},"overview.html":{}}}],["2.0",{"_index":465,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["2.0.0",{"_index":4473,"title":{},"body":{"dependencies.html":{}}}],["2.20.1",{"_index":4471,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":4459,"title":{},"body":{"dependencies.html":{}}}],["2.5.5",{"_index":4463,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1831,"title":{},"body":{"classes/Examples.html":{}}}],["2/12",{"_index":4397,"title":{},"body":{"coverage.html":{}}}],["2/18",{"_index":4400,"title":{},"body":{"coverage.html":{}}}],["2/30",{"_index":4384,"title":{},"body":{"coverage.html":{}}}],["2/48",{"_index":4416,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":4448,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":4422,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1135,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["2004",{"_index":4553,"title":{},"body":{"license.html":{}}}],["2017",{"_index":1039,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["2019",{"_index":456,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["204",{"_index":1133,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["23",{"_index":4389,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":4444,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":2767,"title":{},"body":{"classes/LineModel.html":{}}}],["28",{"_index":4380,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":570,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["3.1.0",{"_index":4477,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":4467,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":858,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["30).tostring",{"_index":1416,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["300",{"_index":1502,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["30000",{"_index":676,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["32",{"_index":4442,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":4430,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["35",{"_index":4394,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":4435,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":4412,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":4415,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":1822,"title":{},"body":{"classes/Examples.html":{},"dependencies.html":{}}}],["4.1.2",{"_index":4457,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":4465,"title":{},"body":{"dependencies.html":{}}}],["4/27",{"_index":4447,"title":{},"body":{"coverage.html":{}}}],["4/53",{"_index":4418,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":603,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["41",{"_index":4372,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":2784,"title":{},"body":{"classes/LineModel.html":{},"coverage.html":{}}}],["5.2.0",{"_index":4474,"title":{},"body":{"dependencies.html":{}}}],["5/21",{"_index":4440,"title":{},"body":{"coverage.html":{}}}],["5/24",{"_index":4423,"title":{},"body":{"coverage.html":{}}}],["5/32",{"_index":4427,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":4587,"title":{},"body":{"license.html":{}}}],["500",{"_index":786,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["54px",{"_index":598,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["55",{"_index":4437,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":580,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["6",{"_index":4383,"title":{},"body":{"coverage.html":{}}}],["6.2.2",{"_index":4481,"title":{},"body":{"dependencies.html":{}}}],["6/21",{"_index":4381,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":4374,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":4377,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["7.2.15",{"_index":4456,"title":{},"body":{"dependencies.html":{}}}],["7/11",{"_index":4375,"title":{},"body":{"coverage.html":{}}}],["7/19",{"_index":4436,"title":{},"body":{"coverage.html":{}}}],["7/20",{"_index":4395,"title":{},"body":{"coverage.html":{}}}],["7/30",{"_index":4433,"title":{},"body":{"coverage.html":{}}}],["7/47",{"_index":4411,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":575,"title":{},"body":{"components/DataMapperAppComponent.html":{},"coverage.html":{}}}],["8px",{"_index":596,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["9",{"_index":573,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"license.html":{}}}],["9/24",{"_index":4413,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":4277,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["_cfg",{"_index":2436,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["_identifier",{"_index":1780,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["_issource",{"_index":3901,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["_nodes",{"_index":1875,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["_showmappingpreview",{"_index":895,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["_type",{"_index":3912,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["a:hover",{"_index":551,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["above",{"_index":1573,"title":{},"body":{"classes/EnumValue.html":{},"index.html":{},"license.html":{}}}],["abstract",{"_index":1840,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["accept",{"_index":2201,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["acceptance",{"_index":4793,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":4790,"title":{},"body":{"license.html":{}}}],["acceptinput",{"_index":3164,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acceptinput(event",{"_index":3184,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["access",{"_index":2620,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["accessing",{"_index":2535,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["accessors",{"_index":1242,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/ErrorInfo.html":{},"injectables/FileManagementService.html":{}}}],["accordingly",{"_index":4124,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["acp",{"_index":3222,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acp.length",{"_index":3238,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acp[0].value",{"_index":3239,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acp[1].value",{"_index":3240,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acpv",{"_index":3234,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acpv.push(argument",{"_index":3236,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["act",{"_index":4799,"title":{},"body":{"license.html":{}}}],["acting",{"_index":4569,"title":{},"body":{"license.html":{}}}],["action",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["action's",{"_index":2150,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action'},{'name",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.argumentvalues",{"_index":2088,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.argumentvalues.length",{"_index":2089,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.argumentvalues.values",{"_index":3310,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.argumentvalues[argvalindex].value",{"_index":3259,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["action.component",{"_index":1080,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["action.component.html",{"_index":3274,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts",{"_index":3273,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"coverage.html":{}}}],["action.component.ts:29",{"_index":3279,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:30",{"_index":3281,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:31",{"_index":3280,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:32",{"_index":3282,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:33",{"_index":3294,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:35",{"_index":3287,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:39",{"_index":3289,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:43",{"_index":3283,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:47",{"_index":3286,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:56",{"_index":3291,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:66",{"_index":3285,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.definition",{"_index":2085,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["action.model",{"_index":2205,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.model.ts",{"_index":2056,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["action.model.ts:101",{"_index":2071,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:18",{"_index":2110,"title":{},"body":{"classes/FieldActionArgument.html":{}}}],["action.model.ts:19",{"_index":2112,"title":{},"body":{"classes/FieldActionArgument.html":{}}}],["action.model.ts:20",{"_index":2113,"title":{},"body":{"classes/FieldActionArgument.html":{}}}],["action.model.ts:21",{"_index":2111,"title":{},"body":{"classes/FieldActionArgument.html":{}}}],["action.model.ts:25",{"_index":2114,"title":{},"body":{"classes/FieldActionArgumentValue.html":{}}}],["action.model.ts:26",{"_index":2115,"title":{},"body":{"classes/FieldActionArgumentValue.html":{}}}],["action.model.ts:37",{"_index":2122,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:38",{"_index":2119,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:39",{"_index":2118,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:40",{"_index":2120,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:41",{"_index":2124,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:42",{"_index":2125,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:43",{"_index":2121,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:44",{"_index":2123,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:46",{"_index":2127,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:65",{"_index":2126,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:77",{"_index":2064,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:78",{"_index":2063,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:79",{"_index":2061,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:81",{"_index":2066,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:88",{"_index":2068,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.multiplicity",{"_index":2235,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.name",{"_index":2084,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionComponent.html":{},"classes/MappingUtil.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.service",{"_index":855,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["action.service.ts",{"_index":2129,"title":{},"body":{"injectables/FieldActionService.html":{},"coverage.html":{}}}],["action.service.ts:115",{"_index":2173,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:137",{"_index":2176,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:145",{"_index":2167,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:172",{"_index":2169,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:205",{"_index":2191,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:245",{"_index":2149,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:267",{"_index":2179,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:282",{"_index":2158,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:29",{"_index":2196,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:30",{"_index":2195,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:307",{"_index":2164,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:342",{"_index":2184,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:354",{"_index":2189,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:360",{"_index":2166,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:37",{"_index":2203,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:38",{"_index":2202,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:40",{"_index":2147,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:47",{"_index":2171,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.setargumentvalue(arg.name",{"_index":2094,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["action.sourcetype",{"_index":2322,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.targettype",{"_index":2326,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actionconfigparamselectionchanged",{"_index":3165,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["actionconfigparamselectionchanged(event",{"_index":3186,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["actionconfigparamval",{"_index":3271,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["actionconfigs",{"_index":2256,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actionconfigs.push(fieldactionconfig",{"_index":2270,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondef",{"_index":2251,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondef.name",{"_index":2252,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondefinition",{"_index":3461,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{}}}],["actiondefinition.populatefieldaction(action",{"_index":3463,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{}}}],["actiondetail",{"_index":2170,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.actionschema",{"_index":2288,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.actionschema.properties[key",{"_index":2291,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.custom",{"_index":2279,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.method",{"_index":2285,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.multiplicity",{"_index":2286,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.name",{"_index":2277,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.sourcetype",{"_index":2281,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.targettype",{"_index":2283,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actionindex",{"_index":3174,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["actionname",{"_index":2174,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["actions",{"_index":2130,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{}}}],["actions.concat(arr",{"_index":2250,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actionsexistforfield",{"_index":3275,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["active",{"_index":744,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/LineModel.html":{},"components/MappingListComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/NamespaceListComponent.html":{}}}],["activemapping",{"_index":2737,"title":{},"body":{"classes/LineModel.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{}}}],["activemapping.islookupmode",{"_index":3145,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["acts",{"_index":4773,"title":{},"body":{"license.html":{}}}],["actual",{"_index":2580,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["actual_component",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["actualdelimiter",{"_index":4221,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["add",{"_index":1680,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/NamespaceListComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["adddocument(docinitmodel",{"_index":932,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["adddocuments(docmodels",{"_index":968,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["added",{"_index":1728,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["addeditnamespace",{"_index":3830,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["addeditnamespace(ns",{"_index":3838,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["addendum",{"_index":4724,"title":{},"body":{"license.html":{}}}],["adderror",{"_index":1665,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["adderror(...errors",{"_index":1739,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["adderror(errors",{"_index":1678,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["addfield(field",{"_index":2990,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["adding",{"_index":72,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["additional",{"_index":4725,"title":{},"body":{"license.html":{}}}],["additions",{"_index":4626,"title":{},"body":{"license.html":{}}}],["addline(l",{"_index":2710,"title":{},"body":{"classes/LineModel.html":{}}}],["addlinefromparams(sourcex",{"_index":2701,"title":{},"body":{"classes/LineModel.html":{}}}],["addmappedfield(mappedfield",{"_index":3005,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["addmapping",{"_index":3582,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/ToolbarComponent.html":{}}}],["addtable",{"_index":3070,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["addtable(table",{"_index":3088,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["addtransformation",{"_index":3425,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["adjust",{"_index":1353,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["adm",{"_index":65,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["adm,.jar",{"_index":4168,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["admhttptimeout",{"_index":799,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["advised",{"_index":4788,"title":{},"body":{"license.html":{}}}],["aftercontentchecked",{"_index":2635,"title":{},"body":{"directives/FocusDirective.html":{}}}],["afterviewinit",{"_index":1442,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["against",{"_index":4683,"title":{},"body":{"license.html":{}}}],["aggregatebuffer",{"_index":2565,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["agree",{"_index":4802,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":475,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["agreement",{"_index":4738,"title":{},"body":{"license.html":{}}}],["alertmodule",{"_index":1053,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["alertmodule.forroot",{"_index":1111,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["alertmoduleforroot",{"_index":1110,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alias",{"_index":2389,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["align",{"_index":550,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["align:center",{"_index":523,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["align:left",{"_index":612,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["align:middle",{"_index":535,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["align:text",{"_index":527,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["alleging",{"_index":4688,"title":{},"body":{"license.html":{}}}],["allfields",{"_index":3915,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["allowdrop",{"_index":1226,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["allowdrop(event",{"_index":1252,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["alone",{"_index":692,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"license.html":{}}}],["along",{"_index":4716,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":4723,"title":{},"body":{"license.html":{}}}],["alphabetizefields(fields",{"_index":1556,"title":{},"body":{"classes/EnumValue.html":{}}}],["alphebatize",{"_index":4042,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["already",{"_index":255,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["alt",{"_index":4174,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["ampersand",{"_index":4233,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["and(b",{"_index":4700,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":4706,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":4712,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":4796,"title":{},"body":{"license.html":{}}}],["angle",{"_index":276,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["angular",{"_index":13,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["angular/animations",{"_index":4455,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1043,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["angular/common/http",{"_index":46,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["angular/core",{"_index":40,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"modules/ExampleAppModule.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["angular/forms",{"_index":1052,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["angular/platform",{"_index":1045,"title":{},"body":{"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"modules/ExampleAppModule.html":{},"classes/LineModel.html":{}}}],["angular/router",{"_index":1815,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["angular2",{"_index":2743,"title":{},"body":{"classes/LineModel.html":{}}}],["annotations",{"_index":1830,"title":{},"body":{"classes/Examples.html":{},"license.html":{}}}],["another",{"_index":4538,"title":{},"body":{"index.html":{}}}],["answer",{"_index":2028,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["answer.push(fn",{"_index":2043,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["answer.push(new",{"_index":2035,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["any_date",{"_index":2327,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["apache",{"_index":462,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["apihttpxsrftokenextractor",{"_index":1,"title":{"injectables/ApiHttpXsrfTokenExtractor.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{},"coverage.html":{}}}],["apixsrfinterceptor",{"_index":62,"title":{"interceptors/ApiXsrfInterceptor.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{},"coverage.html":{}}}],["app",{"_index":4192,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["app.component",{"_index":633,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["app.component.css",{"_index":363,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.html",{"_index":364,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts",{"_index":355,"title":{},"body":{"components/DataMapperAppComponent.html":{},"coverage.html":{}}}],["app.component.ts:41",{"_index":400,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:42",{"_index":395,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:43",{"_index":406,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:44",{"_index":408,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:45",{"_index":391,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:46",{"_index":393,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:47",{"_index":404,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:48",{"_index":411,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:50",{"_index":402,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:51",{"_index":396,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:52",{"_index":397,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:54",{"_index":409,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:55",{"_index":384,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:57",{"_index":389,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:59",{"_index":385,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:63",{"_index":387,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:80",{"_index":386,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:85",{"_index":388,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.module.ts",{"_index":1812,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["app/constant",{"_index":1298,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["app/data",{"_index":632,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["app/field",{"_index":1299,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["app/line",{"_index":1296,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["app/namespace",{"_index":3855,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["app/property",{"_index":1297,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["app/template",{"_index":4144,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["appcomponent",{"_index":99,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1188,"title":{},"body":{"classes/DataMapperUtil.html":{},"license.html":{}}}],["append",{"_index":1934,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["appended",{"_index":1931,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["appendfieldnode(mfield",{"_index":2047,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["appendix",{"_index":4609,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":473,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldDetailComponent.html":{},"license.html":{}}}],["application",{"_index":1801,"title":{},"body":{"classes/ErrorInfo.html":{},"miscellaneous/enumerations.html":{}}}],["application/json",{"_index":2198,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["application/octet",{"_index":2199,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["applied",{"_index":2160,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["applies",{"_index":4674,"title":{},"body":{"license.html":{}}}],["appliestofield",{"_index":2132,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["appliestofield(action",{"_index":2148,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["appliestosourcefield",{"_index":2133,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["appliestosourcefield(action",{"_index":2156,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["appliestotargetfield",{"_index":2134,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["appliestotargetfield(action",{"_index":2162,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["apply",{"_index":4810,"title":{},"body":{"license.html":{}}}],["appropriate",{"_index":4817,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":4760,"title":{},"body":{"license.html":{}}}],["archive",{"_index":4123,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["archives",{"_index":4824,"title":{},"body":{"license.html":{}}}],["area",{"_index":2597,"title":{},"body":{"injectables/FileManagementService.html":{},"components/MappingFieldContainerComponent.html":{}}}],["arg",{"_index":2090,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["argconfig",{"_index":3175,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argconfig.values",{"_index":3235,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argconfig.values[argvalindex",{"_index":3263,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argconfigname",{"_index":3208,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument",{"_index":2096,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["argument'},{'name",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["argument.component",{"_index":1081,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["argument.component.html",{"_index":3161,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts",{"_index":3160,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"coverage.html":{}}}],["argument.component.ts:102",{"_index":3187,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:137",{"_index":3197,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:151",{"_index":3205,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:155",{"_index":3215,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:162",{"_index":3212,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:31",{"_index":3178,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:32",{"_index":3179,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:33",{"_index":3181,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:34",{"_index":3180,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:35",{"_index":3182,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:36",{"_index":3183,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:38",{"_index":3223,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:39",{"_index":3177,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:46",{"_index":3209,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:53",{"_index":3192,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:63",{"_index":3185,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:72",{"_index":3195,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:85",{"_index":3217,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.name",{"_index":2097,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["argumentdefinition",{"_index":2293,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentdefinition.name",{"_index":2294,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentdefinition.serviceobject",{"_index":2299,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentdefinition.type",{"_index":2295,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentdefinition.values",{"_index":2297,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentname",{"_index":2069,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["arguments",{"_index":2080,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["argumentvalues",{"_index":2057,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["argval",{"_index":3290,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["argvalindex",{"_index":3176,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argvalue",{"_index":2102,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["argvalue.name",{"_index":2104,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["arising",{"_index":4778,"title":{},"body":{"license.html":{}}}],["array",{"_index":253,"title":{},"body":{"components/ClassNameComponent.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["arraybuffer",{"_index":2543,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["arrays",{"_index":2577,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["arrow",{"_index":274,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["asserted",{"_index":4808,"title":{},"body":{"license.html":{}}}],["associated",{"_index":2693,"title":{},"body":{"classes/LineModel.html":{},"license.html":{}}}],["assume",{"_index":4763,"title":{},"body":{"license.html":{}}}],["assumes",{"_index":1693,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["async",{"_index":1125,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["async(result",{"_index":2612,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["async(value",{"_index":2599,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["asynchronous",{"_index":1153,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/ToolbarComponent.html":{}}}],["asynchronously",{"_index":1160,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["at_sign",{"_index":4234,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["atlas",{"_index":957,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["atlasmap",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["atlasmapcatalogname",{"_index":2545,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["atlasmapnavbar",{"_index":537,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["atlasmapnavbarcomponent",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["atlasmapping",{"_index":2503,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["atlasmap}/standalone",{"_index":4531,"title":{},"body":{"index.html":{}}}],["atlasmap}/ui",{"_index":4547,"title":{},"body":{"index.html":{}}}],["atlasserviceurl",{"_index":4841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["atsign",{"_index":4260,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["attach",{"_index":4811,"title":{},"body":{"license.html":{}}}],["attached",{"_index":4608,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":4549,"title":{},"body":{"index.html":{}}}],["attempting",{"_index":3219,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["attribute",{"_index":2373,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["attributes",{"_index":3252,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["attributes.getnameditem('actionindex').value",{"_index":3257,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["attributes.getnameditem('argvalindex').value",{"_index":3256,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["attributes.getnameditem('value').value",{"_index":3255,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["attribution",{"_index":4709,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":4565,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":4605,"title":{},"body":{"license.html":{}}}],["autocreate",{"_index":2804,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["automatically",{"_index":2402,"title":{},"body":{"components/FieldEditComponent.html":{},"index.html":{}}}],["available",{"_index":725,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/FileManagementService.html":{},"index.html":{},"license.html":{}}}],["avoid",{"_index":74,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["avoids",{"_index":4193,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["await",{"_index":2570,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["awesome",{"_index":4464,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["back",{"_index":3453,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["backend",{"_index":2232,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["backendurls",{"_index":4840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["background",{"_index":552,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["backslash",{"_index":4235,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["bad",{"_index":2388,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["bar",{"_index":689,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["base",{"_index":647,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["base.component.css",{"_index":491,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["based",{"_index":3202,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"index.html":{},"license.html":{}}}],["basejavainspectionserviceurl",{"_index":800,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["basejsoninspectionserviceurl",{"_index":801,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["basemappingserviceurl",{"_index":802,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["baseurl",{"_index":2539,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["basexmlinspectionserviceurl",{"_index":803,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["basis",{"_index":479,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["before",{"_index":640,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["begin",{"_index":3417,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["beginning",{"_index":1146,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["behalf",{"_index":4631,"title":{},"body":{"license.html":{}}}],["below",{"_index":4610,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":4591,"title":{},"body":{"license.html":{}}}],["better",{"_index":1747,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["between",{"_index":1964,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{},"index.html":{}}}],["big",{"_index":335,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["binary",{"_index":1154,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["binbuffer",{"_index":2590,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["bind",{"_index":4623,"title":{},"body":{"license.html":{}}}],["bit",{"_index":4527,"title":{},"body":{"index.html":{}}}],["black",{"_index":546,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["blob",{"_index":1184,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["blob([compress",{"_index":2593,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["blob([filebin",{"_index":2610,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["blob([value",{"_index":2600,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["block",{"_index":543,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["body",{"_index":1437,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"injectables/FieldActionService.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["body'},{'name",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["body.actiondetails",{"_index":2266,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["body.actiondetails.actiondetail",{"_index":2267,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["body.actiondetails.actiondetail.length",{"_index":2268,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["body.stringmap.stringmapentry",{"_index":2527,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["boilerplate",{"_index":4812,"title":{},"body":{"license.html":{}}}],["bolt",{"_index":1349,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["boolean",{"_index":220,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["boot:run",{"_index":4534,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":1024,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":594,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["bottom",{"_index":528,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["box",{"_index":592,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["brackets",{"_index":4814,"title":{},"body":{"license.html":{}}}],["break",{"_index":1967,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/NamespaceEditComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["browse",{"_index":4826,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1295,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"modules/ExampleAppModule.html":{},"classes/LineModel.html":{},"index.html":{},"modules.html":{}}}],["browser/animations",{"_index":1046,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["browseranimationsmodule",{"_index":1044,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["browsermodule",{"_index":1813,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["bsdropdownmodule",{"_index":1054,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":1107,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["bsdropdownmoduleforroot",{"_index":1106,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["buffer",{"_index":2472,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["bug",{"_index":1323,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["build",{"_index":4035,"title":{},"body":{"classes/NamespaceModel.html":{},"index.html":{}}}],["build&restart",{"_index":4544,"title":{},"body":{"index.html":{}}}],["button",{"_index":297,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["buttonclicked",{"_index":3777,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["buttonclicked(okclicked",{"_index":1510,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["buttontext",{"_index":3743,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["byte",{"_index":337,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/DataMapperUtil.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["bytearray",{"_index":338,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["bytes",{"_index":4148,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["c",{"_index":455,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"modules/ExampleAppModule.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["c.cfg",{"_index":3151,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["c.getfielddetailcomponent(field",{"_index":1376,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["c.getselectedmapping",{"_index":3156,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["c.initcfg.basejavainspectionserviceurl",{"_index":651,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.basejsoninspectionserviceurl",{"_index":655,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.basemappingserviceurl",{"_index":657,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.basexmlinspectionserviceurl",{"_index":653,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.classpath",{"_index":683,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.classpathfetchtimeoutinmilliseconds",{"_index":675,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.disablemappingpreviewmode",{"_index":687,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.disablenavbar",{"_index":693,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.pompayload",{"_index":673,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.xsrfcookiename",{"_index":662,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.xsrfdefaulttokenvalue",{"_index":664,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.xsrfheadername",{"_index":660,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initialize(this.cfg",{"_index":4363,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["c.mappings",{"_index":3153,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["c.modalwindow",{"_index":3154,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["c.nativeelement.attributes['sourcevalue'].value",{"_index":2884,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["c.nativeelement.selectedoptions",{"_index":2880,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["c.parentcomponent",{"_index":3603,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["c.savetable",{"_index":4364,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["c.selected",{"_index":3607,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["c.selectedfield",{"_index":3150,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["cache",{"_index":4036,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cached",{"_index":3985,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cachedfield",{"_index":3983,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cachedfield.children",{"_index":3987,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cachedfield.copy",{"_index":3986,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["call",{"_index":667,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["calls",{"_index":650,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["camel",{"_index":1179,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["camelcasestring",{"_index":1182,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["camelcasestring.charat(0).touppercase",{"_index":1213,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["camelcasestring.indexof",{"_index":1211,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["can't",{"_index":3943,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cancel",{"_index":1515,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["cancelbuttonhandler",{"_index":1452,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["candidate",{"_index":2185,"title":{},"body":{"injectables/FieldActionService.html":{},"components/PropertyFieldEditComponent.html":{}}}],["candidatetype",{"_index":2187,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["canvas",{"_index":4127,"title":{},"body":{"components/ToolbarComponent.html":{},"index.html":{}}}],["capture",{"_index":1142,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["caret",{"_index":1924,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["carry",{"_index":4702,"title":{},"body":{"license.html":{}}}],["case",{"_index":751,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["catalog",{"_index":2456,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["catalog.adm",{"_index":2546,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["catalogname",{"_index":2537,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["catch",{"_index":2604,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["catch((error",{"_index":2238,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["catheaders",{"_index":2541,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["cause",{"_index":4578,"title":{},"body":{"license.html":{}}}],["cd",{"_index":4520,"title":{},"body":{"index.html":{}}}],["cfg",{"_index":29,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceListComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["cfg(cfg",{"_index":2521,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["cfg.constantdoc",{"_index":3691,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.errorservice.adderror(new",{"_index":2862,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappingUtil.html":{}}}],["cfg.fieldactionservice.getactiondefinitionforname(action.argumentvalues[0].value",{"_index":3730,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.fieldactionservice.getactiondefinitionforname(action.name",{"_index":3731,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.getalldocs",{"_index":3683,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.getdocs(issource",{"_index":991,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["cfg.getdocurimap(cfg",{"_index":3679,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.getfirstxmldoc(false).name",{"_index":3879,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["cfg.mappings.gettablebyname(mapping.transition.lookuptablename",{"_index":2861,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["cfg.mappings.mappings",{"_index":3681,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.mappings.mappings.length",{"_index":3565,"title":{},"body":{"components/MappingListComponent.html":{}}}],["cfg.propertydoc",{"_index":3689,"title":{},"body":{"classes/MappingUtil.html":{}}}],["change",{"_index":2165,"title":{},"body":{"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"index.html":{}}}],["changed",{"_index":3193,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"license.html":{}}}],["changedetectorref",{"_index":383,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["channel",{"_index":1657,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["char",{"_index":339,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["character",{"_index":4351,"title":{},"body":{"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["characterencoding",{"_index":3919,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["charge",{"_index":4661,"title":{},"body":{"license.html":{}}}],["chart.js",{"_index":4458,"title":{},"body":{"dependencies.html":{}}}],["check",{"_index":2159,"title":{},"body":{"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/MappingUtil.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["checkfieldeligibiltyforlinedrawing(field",{"_index":2788,"title":{},"body":{"classes/LineModel.html":{}}}],["checkiconenabled",{"_index":3162,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["checkout",{"_index":4514,"title":{},"body":{"index.html":{}}}],["child",{"_index":1305,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["childfield",{"_index":1545,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["childfield.children",{"_index":4041,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["childfield.copy",{"_index":3988,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["childfield.hasunmappedchildren",{"_index":1547,"title":{},"body":{"classes/EnumValue.html":{}}}],["childfield.parentfield",{"_index":3989,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["childrein",{"_index":4043,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["children",{"_index":1532,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["choose",{"_index":4791,"title":{},"body":{"license.html":{}}}],["circle",{"_index":1351,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["claim",{"_index":4685,"title":{},"body":{"license.html":{}}}],["claims",{"_index":4675,"title":{},"body":{"license.html":{}}}],["class",{"_index":52,"title":{"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"license.html":{}}}],["class.pipe",{"_index":1101,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["class.pipe.ts",{"_index":4070,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{}}}],["class.pipe.ts:7",{"_index":4074,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["class=\"text",{"_index":4057,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["classes",{"_index":797,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"overview.html":{}}}],["classidentifier",{"_index":1525,"title":{},"body":{"classes/EnumValue.html":{}}}],["classlist.js",{"_index":4460,"title":{},"body":{"dependencies.html":{}}}],["classname",{"_index":963,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["classnameblacklist",{"_index":804,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["classnamecomponent",{"_index":119,"title":{"components/ClassNameComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classpath",{"_index":677,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["classpathfetchtimeoutinmilliseconds",{"_index":805,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["clean",{"_index":4522,"title":{},"body":{"index.html":{}}}],["cleanstr",{"_index":1910,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["clear",{"_index":993,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["clearactiondefinitions",{"_index":2135,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["clearallerrors",{"_index":1666,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["cleardocs",{"_index":998,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["cleared",{"_index":1650,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["clearfielderrors",{"_index":1667,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["clearfields",{"_index":3994,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["clearformerrors",{"_index":1668,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["clearlines",{"_index":2715,"title":{},"body":{"classes/LineModel.html":{}}}],["clearmappings",{"_index":4084,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["clearpreviewerrors",{"_index":1669,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["cleartext(nodeid",{"_index":1899,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["cleartimeout(this.mouseeventtimer",{"_index":787,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["cleartoend(index",{"_index":2004,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["clearvalidationerrors",{"_index":1670,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["clearvalidationerrors(mapping",{"_index":1688,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["cli",{"_index":4476,"title":{},"body":{"dependencies.html":{}}}],["click",{"_index":1277,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["clicked",{"_index":1516,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["clone",{"_index":4518,"title":{},"body":{"index.html":{}}}],["close",{"_index":1500,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["closeclicked",{"_index":3778,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["closeclicked(event",{"_index":1498,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["closed",{"_index":1661,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["cluster_datamappermodule",{"_index":1026,"title":{},"body":{"modules/DataMapperModule.html":{},"overview.html":{}}}],["cluster_datamappermodule_declarations",{"_index":1027,"title":{},"body":{"modules/DataMapperModule.html":{},"overview.html":{}}}],["cluster_datamappermodule_exports",{"_index":1028,"title":{},"body":{"modules/DataMapperModule.html":{},"overview.html":{}}}],["cluster_datamappermodule_providers",{"_index":1029,"title":{},"body":{"modules/DataMapperModule.html":{},"overview.html":{}}}],["cluster_exampleappmodule",{"_index":1807,"title":{},"body":{"modules/ExampleAppModule.html":{},"overview.html":{}}}],["cluster_exampleappmodule_bootstrap",{"_index":1810,"title":{},"body":{"modules/ExampleAppModule.html":{},"overview.html":{}}}],["cluster_exampleappmodule_declarations",{"_index":1808,"title":{},"body":{"modules/ExampleAppModule.html":{},"overview.html":{}}}],["cluster_exampleappmodule_imports",{"_index":1809,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["clz",{"_index":1350,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["code",{"_index":1341,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{},"license.html":{}}}],["cog",{"_index":4182,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["col",{"_index":568,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["collapsable",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["collapsableheadercomponent",{"_index":121,"title":{"components/CollapsableHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["collapsed",{"_index":264,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"classes/EnumValue.html":{}}}],["collection",{"_index":251,"title":{},"body":{"components/ClassNameComponent.html":{},"components/DataMapperErrorComponent.html":{},"injectables/FieldActionService.html":{}}}],["collectionclassname",{"_index":874,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["collectiontype",{"_index":242,"title":{},"body":{"components/ClassNameComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/enumerations.html":{}}}],["collectiontype.none",{"_index":234,"title":{},"body":{"components/ClassNameComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["collectiontypeselectionchanged",{"_index":203,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["collectiontypeselectionchanged(event",{"_index":211,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["colon",{"_index":4236,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":545,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["color:#0088ce",{"_index":554,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["color:crimson",{"_index":524,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["color:rgb(54,54,54",{"_index":558,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["com.fasterxml.jackson.core",{"_index":1828,"title":{},"body":{"classes/Examples.html":{}}}],["combination",{"_index":4680,"title":{},"body":{"license.html":{}}}],["combobox",{"_index":4329,"title":{},"body":{"components/TransitionSelectionComponent.html":{},"dependencies.html":{}}}],["combobox').on('blur",{"_index":4344,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["combobox').on('input",{"_index":4348,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["coming",{"_index":1304,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["comma",{"_index":4237,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["command",{"_index":4548,"title":{},"body":{"index.html":{}}}],["comment",{"_index":4818,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":4786,"title":{},"body":{"license.html":{}}}],["commit",{"_index":2502,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["common",{"_index":4573,"title":{},"body":{"license.html":{}}}],["common/config.types",{"_index":243,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["common/data",{"_index":2516,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["common/focus.directive",{"_index":1087,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["common/to",{"_index":1099,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["commonmodule",{"_index":1042,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["communication",{"_index":4635,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":4602,"title":{},"body":{"license.html":{}}}],["complete",{"_index":1772,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["completed",{"_index":1660,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complex",{"_index":340,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["complexfieldsbyclassidentifier",{"_index":3917,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["compliance",{"_index":467,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["complies",{"_index":4730,"title":{},"body":{"license.html":{}}}],["component",{"_index":98,"title":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["componentfactory",{"_index":1486,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["componentfactoryresolver",{"_index":1441,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["componentloaded",{"_index":1462,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["components",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"overview.html":{}}}],["components/app/constant",{"_index":1072,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/app/data",{"_index":1060,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/app/field",{"_index":1073,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/app/line",{"_index":1065,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/app/namespace",{"_index":1074,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/app/property",{"_index":1071,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/app/template",{"_index":1063,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/data",{"_index":1058,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/document/class",{"_index":1066,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/document/document",{"_index":1070,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/mapping",{"_index":1068,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/modal/modal",{"_index":1061,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/toolbar/expression.component",{"_index":1088,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/toolbar/toolbar.component",{"_index":1062,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["compound",{"_index":1280,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["compress",{"_index":2461,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["compressed",{"_index":2471,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["compressedbuffer",{"_index":2499,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["computer",{"_index":4783,"title":{},"body":{"license.html":{}}}],["concat(issource",{"_index":974,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["concat(targetvalues",{"_index":2871,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["concat(this.allfields",{"_index":3927,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["concat(this.cfg.getfirstxmldoc(false).namespaces",{"_index":3875,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["concat(this.cfg.mappings.getallmappings(true",{"_index":3546,"title":{},"body":{"components/MappingListComponent.html":{}}}],["concat(this.mappings",{"_index":3119,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["concat(this.terminalfields",{"_index":3960,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["condition",{"_index":1709,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["conditional",{"_index":3403,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["conditionalmappingexpressionenabled",{"_index":4085,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["conditions",{"_index":481,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["config",{"_index":638,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{}}}],["configmodel",{"_index":49,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["configmodel.cfg",{"_index":918,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["configmodel.errorservice.isrequiredfieldvalid(this.namespace.alias",{"_index":3826,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["configmodel.errorservice.isrequiredfieldvalid(this.namespace.uri",{"_index":3827,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["configmodel.getconfig",{"_index":37,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/NamespaceEditComponent.html":{}}}],["configmodel.getconfig().errorservice.isrequiredfieldvalid(this.field.name",{"_index":2414,"title":{},"body":{"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["configmodel.getconfig().errorservice.isrequiredfieldvalid(this.field.value",{"_index":330,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["configs",{"_index":2246,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["configselectionchanged",{"_index":3276,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["configselectionchanged(event",{"_index":3284,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["configuration",{"_index":861,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["configuring",{"_index":4503,"title":{},"body":{"index.html":{}}}],["confirmbuttondisabled",{"_index":1455,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["confirmbuttontext",{"_index":1456,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["confirmed",{"_index":4100,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["connect",{"_index":2242,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["consequential",{"_index":4777,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":4798,"title":{},"body":{"license.html":{}}}],["console",{"_index":1748,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log(\"copied",{"_index":1604,"title":{},"body":{"classes/EnumValue.html":{}}}],["conspicuously",{"_index":4648,"title":{},"body":{"license.html":{}}}],["const",{"_index":80,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["constant",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["constantcomponent",{"_index":1392,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["constantcomponent.getfield",{"_index":1402,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["constantcomponent.initialize(self.field",{"_index":1393,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["constantdoc",{"_index":903,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["constantfield",{"_index":3699,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.displayname",{"_index":3704,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.name",{"_index":3705,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.path",{"_index":3706,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.type",{"_index":3702,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.usercreated",{"_index":3707,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.value",{"_index":3700,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfieldeditcomponent",{"_index":124,"title":{"components/ConstantFieldEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["constants",{"_index":915,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/enumerations.html":{}}}],["constitutes",{"_index":4689,"title":{},"body":{"license.html":{}}}],["constrain",{"_index":3386,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["constructor",{"_index":209,"title":{},"body":{"components/ClassNameComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["constructor(componentfactoryresolver",{"_index":3779,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["constructor(delimiter",{"_index":4225,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["constructor(detector",{"_index":382,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/ModalErrorWindowComponent.html":{}}}],["constructor(elementref",{"_index":2638,"title":{},"body":{"directives/FocusDirective.html":{}}}],["constructor(errorservice",{"_index":2145,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["constructor(init",{"_index":1782,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["constructor(initializationservice",{"_index":621,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["constructor(logger",{"_index":2451,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["constructor(mapping",{"_index":2420,"title":{},"body":{"classes/FieldNode.html":{}}}],["constructor(node",{"_index":2051,"title":{},"body":{"classes/ExpressionUpdatedEvent.html":{}}}],["constructor(prefix",{"_index":1843,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["constructor(private",{"_index":637,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["constructor(public",{"_index":420,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"classes/TextNode.html":{}}}],["constructor(sanitizer",{"_index":1244,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["constructor(str",{"_index":4062,"title":{},"body":{"classes/TextNode.html":{}}}],["construed",{"_index":4726,"title":{},"body":{"license.html":{}}}],["consumers",{"_index":1090,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["contained",{"_index":4714,"title":{},"body":{"license.html":{}}}],["container",{"_index":3316,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container'},{'name",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["container.component",{"_index":1079,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["container.component.html",{"_index":3317,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts",{"_index":3315,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:114",{"_index":3343,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:118",{"_index":3340,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:128",{"_index":3345,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:149",{"_index":3342,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:155",{"_index":3341,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:179",{"_index":3366,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:183",{"_index":3351,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:187",{"_index":3362,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:194",{"_index":3355,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:203",{"_index":3352,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:207",{"_index":3346,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:211",{"_index":3360,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:33",{"_index":3336,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:34",{"_index":3337,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:35",{"_index":3338,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:36",{"_index":3339,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:38",{"_index":3369,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:40",{"_index":3370,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:41",{"_index":3368,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:42",{"_index":3372,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:43",{"_index":3367,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:44",{"_index":3371,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:45",{"_index":3335,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:53",{"_index":3359,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:57",{"_index":3358,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:60",{"_index":3348,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:64",{"_index":3356,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:68",{"_index":3350,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:72",{"_index":3354,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:88",{"_index":3364,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["contains",{"_index":1916,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["content",{"_index":544,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["contentchanged",{"_index":3166,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["contents",{"_index":986,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"license.html":{}}}],["context",{"_index":3668,"title":{},"body":{"classes/MappingUtil.html":{}}}],["continue",{"_index":1562,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["contract",{"_index":4582,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":4625,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":4679,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":4732,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":4651,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":4690,"title":{},"body":{"license.html":{}}}],["control",{"_index":4571,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":4572,"title":{},"body":{"license.html":{}}}],["conversion",{"_index":3220,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["conversions",{"_index":4603,"title":{},"body":{"license.html":{}}}],["convert",{"_index":1178,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["cookie",{"_index":4838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cookiename",{"_index":4837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cookies",{"_index":19,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["copies",{"_index":1595,"title":{},"body":{"classes/EnumValue.html":{},"license.html":{}}}],["copy",{"_index":469,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"classes/EnumValue.html":{},"modules/ExampleAppModule.html":{},"classes/NamespaceModel.html":{},"license.html":{}}}],["copy.children",{"_index":1601,"title":{},"body":{"classes/EnumValue.html":{}}}],["copy.children.push(childfield.copy",{"_index":1603,"title":{},"body":{"classes/EnumValue.html":{}}}],["copy.docdef",{"_index":1600,"title":{},"body":{"classes/EnumValue.html":{}}}],["copy.parentfield",{"_index":1598,"title":{},"body":{"classes/EnumValue.html":{}}}],["copy.serviceobject",{"_index":1596,"title":{},"body":{"classes/EnumValue.html":{}}}],["copyfrom",{"_index":3889,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["copyfrom(that",{"_index":1607,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["copyright",{"_index":454,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["core",{"_index":1833,"title":{},"body":{"classes/Examples.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["correctly",{"_index":3385,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["corresponding",{"_index":2008,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["couldn't",{"_index":3389,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["count",{"_index":1619,"title":{},"body":{"classes/EnumValue.html":{}}}],["counter",{"_index":2832,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["counterclaim",{"_index":4686,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":4366,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1692,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/FieldAction.html":{},"miscellaneous/enumerations.html":{}}}],["create(definition",{"_index":2065,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["created",{"_index":1658,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["createdbyuser",{"_index":3885,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["createformerrorchannel",{"_index":1659,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["createlinestyle(l",{"_index":2742,"title":{},"body":{"classes/LineModel.html":{}}}],["createnodesfromtext(text",{"_index":2032,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["creation",{"_index":299,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["cross",{"_index":4684,"title":{},"body":{"license.html":{}}}],["css",{"_index":2747,"title":{},"body":{"classes/LineModel.html":{}}}],["cssclass",{"_index":1354,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/NamespaceListComponent.html":{}}}],["csv",{"_index":4493,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ctrl/cmd",{"_index":1279,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["current",{"_index":885,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/FileManagementService.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["currentdraggedfield",{"_index":896,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["currentparentpath",{"_index":3951,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["currentpathsection",{"_index":3952,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cursor:pointer",{"_index":555,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["custom_elements_schema",{"_index":1036,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["customaction",{"_index":3729,"title":{},"body":{"classes/MappingUtil.html":{}}}],["customary",{"_index":4747,"title":{},"body":{"license.html":{}}}],["d",{"_index":1009,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["d.id",{"_index":1011,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["d.push(tabledata",{"_index":2875,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["d.sourceenumvalue",{"_index":2887,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["damages",{"_index":4775,"title":{},"body":{"license.html":{}}}],["dash",{"_index":4238,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["data",{"_index":7,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["databind",{"_index":1832,"title":{},"body":{"classes/Examples.html":{}}}],["dataisvalid",{"_index":3825,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["datamapperappcomponent",{"_index":128,"title":{"components/DataMapperAppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datamapperappexamplehostcomponent",{"_index":130,"title":{"components/DataMapperAppExampleHostComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datamapperbody",{"_index":507,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["datamapperbodyhidden",{"_index":503,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["datamappercomponent",{"_index":620,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["datamappereditcomponent",{"_index":582,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["datamappererrorcomponent",{"_index":134,"title":{"components/DataMapperErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datamapperinitializationmodel",{"_index":796,"title":{"classes/DataMapperInitializationModel.html":{}},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{}}}],["datamapperloadingmessage",{"_index":515,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["datamappermodule",{"_index":1020,"title":{"modules/DataMapperModule.html":{}},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"modules.html":{},"overview.html":{}}}],["datamappermodule.withinterceptor",{"_index":1820,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["datamapperui",{"_index":536,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["datamapperutil",{"_index":1119,"title":{"classes/DataMapperUtil.html":{}},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["datamapperutil.http_status_no_content",{"_index":2532,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["datamapperutil.readbinaryfile(mappingsfilename",{"_index":2609,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["datamapperutil.removeitemfromarray(action",{"_index":2976,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["datamapperutil.removeitemfromarray(field",{"_index":4000,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["datamapperutil.removeitemfromarray(field.path",{"_index":3973,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["datamapperutil.removeitemfromarray(m",{"_index":3125,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["datamapperutil.removeitemfromarray(mappedfield",{"_index":3008,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["datamapperutil.removeitemfromarray(mappedfields.find(mf",{"_index":2995,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["datamapperutil.removeitemfromarray(ns",{"_index":3874,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["datamapperutil.str2bytes(aggregatebuffer",{"_index":2591,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["datamapperutil.todisplayable",{"_index":3293,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["datamapperutil.todisplayable(argconfigname",{"_index":3264,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["datamapperutil.writefile(filecontent",{"_index":2601,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["datamapperversion",{"_index":806,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["datasource",{"_index":2335,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["date",{"_index":347,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"license.html":{}}}],["date().gettime",{"_index":2820,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["date_time",{"_index":2328,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["date_time_tz",{"_index":2329,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["datetime",{"_index":348,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["datetimetz",{"_index":351,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["datetz",{"_index":349,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["ddd",{"_index":553,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["debug",{"_index":1799,"title":{},"body":{"classes/ErrorInfo.html":{},"miscellaneous/enumerations.html":{}}}],["decimal",{"_index":341,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["declarations",{"_index":1023,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}],["decoration",{"_index":549,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["decoration:none",{"_index":556,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["decorators",{"_index":229,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["deep",{"_index":4040,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["default",{"_index":23,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaulttokenvalue",{"_index":4839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defend",{"_index":4804,"title":{},"body":{"license.html":{}}}],["defined",{"_index":32,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["definition",{"_index":1370,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"license.html":{}}}],["definition'},{'name",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["definition.component",{"_index":417,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"classes/LineModel.html":{}}}],["definition.component.ts",{"_index":4388,"title":{},"body":{"coverage.html":{}}}],["definition.model",{"_index":238,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["definition.model.ts",{"_index":3064,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["definition.model.ts:108",{"_index":3101,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:24",{"_index":3893,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:25",{"_index":3082,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:26",{"_index":3081,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:27",{"_index":3080,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:28",{"_index":3083,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:29",{"_index":3087,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:30",{"_index":3892,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:31",{"_index":3084,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:32",{"_index":3086,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:33",{"_index":3079,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:39",{"_index":3104,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:41",{"_index":3895,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:43",{"_index":3089,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:49",{"_index":3096,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:53",{"_index":3098,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:55",{"_index":3894,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:58",{"_index":3099,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:70",{"_index":3103,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:82",{"_index":3093,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:98",{"_index":3091,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.name",{"_index":2101,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["definitions",{"_index":997,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["definitions.length",{"_index":2303,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["deflate",{"_index":2513,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["deflate(binbuffer",{"_index":2592,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["defnames",{"_index":2305,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["defnames.push(name",{"_index":2309,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["defnames.sort",{"_index":2311,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["defsbyname",{"_index":2304,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["defsbyname[name",{"_index":2308,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["delete",{"_index":2490,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["deliberate",{"_index":4770,"title":{},"body":{"license.html":{}}}],["delimiter",{"_index":4222,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["delimiter.prettyname",{"_index":3272,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["delimitermodel",{"_index":3213,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["delimitermodel.delimiter",{"_index":3267,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["delimitermodels",{"_index":4251,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["delimiters",{"_index":3163,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["delta",{"_index":1216,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["deltas",{"_index":2732,"title":{},"body":{"classes/LineModel.html":{}}}],["depend",{"_index":1316,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["dependencies",{"_index":1022,"title":{"dependencies.html":{}},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depth",{"_index":4020,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["derivative",{"_index":4611,"title":{},"body":{"license.html":{}}}],["derived",{"_index":4613,"title":{},"body":{"license.html":{}}}],["describing",{"_index":2579,"title":{},"body":{"injectables/FileManagementService.html":{},"license.html":{}}}],["description",{"_index":10,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTableUtil.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"license.html":{}}}],["design",{"_index":2243,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["designated",{"_index":4650,"title":{},"body":{"license.html":{}}}],["designed",{"_index":4508,"title":{},"body":{"index.html":{}}}],["desire",{"_index":2386,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["detail",{"_index":1221,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ModalErrorDetailComponent.html":{}}}],["detail'},{'name",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["detail.component",{"_index":419,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"classes/LineModel.html":{}}}],["detail.component.css",{"_index":495,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["detail.component.html",{"_index":1222,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ModalErrorDetailComponent.html":{}}}],["detail.component.ts",{"_index":1220,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ModalErrorDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:100",{"_index":3444,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:105",{"_index":1267,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:117",{"_index":3456,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:118",{"_index":1261,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:122",{"_index":3457,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:123",{"_index":1272,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:127",{"_index":3442,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:130",{"_index":1268,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:131",{"_index":3441,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:141",{"_index":1262,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:158",{"_index":1263,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:171",{"_index":1282,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:177",{"_index":1269,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:188",{"_index":1273,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:193",{"_index":1265,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:212",{"_index":1258,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:25",{"_index":3736,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["detail.component.ts:257",{"_index":1284,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:26",{"_index":3737,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["detail.component.ts:276",{"_index":1270,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:28",{"_index":3738,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["detail.component.ts:281",{"_index":1266,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:285",{"_index":1293,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:31",{"_index":3434,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:32",{"_index":3437,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/ModalErrorDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":3435,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:34",{"_index":3436,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:35",{"_index":3130,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:36",{"_index":3131,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ModalErrorDetailComponent.html":{}}}],["detail.component.ts:37",{"_index":1248,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:38",{"_index":1249,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:39",{"_index":1250,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:40",{"_index":1251,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/ModalErrorDetailComponent.html":{}}}],["detail.component.ts:41",{"_index":3137,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:42",{"_index":1291,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:43",{"_index":1289,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:45",{"_index":1246,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:49",{"_index":1286,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{}}}],["detail.component.ts:51",{"_index":3438,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:53",{"_index":3132,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:57",{"_index":3134,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:64",{"_index":3440,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:66",{"_index":1256,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:71",{"_index":3439,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:73",{"_index":3136,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:74",{"_index":1253,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:88",{"_index":1260,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail/collapsable",{"_index":258,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"modules/DataMapperModule.html":{},"components/MappingDetailComponent.html":{},"coverage.html":{}}}],["detail/data",{"_index":494,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["detail/lookup",{"_index":1084,"title":{},"body":{"modules/DataMapperModule.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"coverage.html":{}}}],["detail/mapping",{"_index":418,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"coverage.html":{}}}],["detail/transition",{"_index":1086,"title":{},"body":{"modules/DataMapperModule.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["details",{"_index":3144,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["detected",{"_index":3981,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["detector",{"_index":366,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["determine",{"_index":1922,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/TextNode.html":{}}}],["determining",{"_index":4759,"title":{},"body":{"license.html":{}}}],["dev",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["developer",{"_index":4510,"title":{},"body":{"index.html":{}}}],["development",{"_index":4536,"title":{},"body":{"index.html":{}}}],["diagnostic",{"_index":1716,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["diff",{"_index":3318,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["different",{"_index":4539,"title":{},"body":{"index.html":{},"license.html":{}}}],["differing",{"_index":3242,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["direct",{"_index":4576,"title":{},"body":{"license.html":{}}}],["direction",{"_index":4579,"title":{},"body":{"license.html":{}}}],["directive",{"_index":113,"title":{"directives/FocusDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["directly",{"_index":4550,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1191,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["disable",{"_index":295,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["disableconsolelogging",{"_index":4836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disablemappingpreviewmode",{"_index":807,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disablenavbar",{"_index":808,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disableprivateonlyfields",{"_index":809,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disableprotectedonlyfields",{"_index":810,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disablepublicgettersetterfields",{"_index":811,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disablepubliconlyfields",{"_index":812,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disarm",{"_index":749,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["discard",{"_index":1560,"title":{},"body":{"classes/EnumValue.html":{}}}],["disclaimer",{"_index":4750,"title":{},"body":{"license.html":{}}}],["discovercomplexfields(fields",{"_index":4045,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["discussing",{"_index":4645,"title":{},"body":{"license.html":{}}}],["dismiss",{"_index":3758,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["dismissall",{"_index":3744,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["display",{"_index":541,"title":{},"body":{"components/DataMapperAppComponent.html":{},"license.html":{}}}],["displayablestring",{"_index":1212,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["displayed",{"_index":3199,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["displayfieldsearchbox",{"_index":3322,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["displayindex",{"_index":3426,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["displayname",{"_index":1526,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{}}}],["displayparentobject",{"_index":3427,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["displaytransitionselection",{"_index":3323,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["distribute",{"_index":4669,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":478,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["distribution",{"_index":4557,"title":{},"body":{"license.html":{}}}],["dm",{"_index":2487,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["doc",{"_index":990,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"classes/MappingUtil.html":{}}}],["doc.addfield(constantfield",{"_index":3708,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.addfield(mappedfield.field",{"_index":3724,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.getfield(mappedfield.parseddata.parsedpath",{"_index":3698,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.getfield(parentpath",{"_index":3723,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.id",{"_index":3684,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.initialized",{"_index":1018,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["doc.inspectionresult",{"_index":1007,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["doc.inspectionsource",{"_index":2583,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["doc.inspectiontype",{"_index":2584,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["doc.name",{"_index":3685,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.type",{"_index":1004,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["doccount",{"_index":2575,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["docdef",{"_index":197,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["docdef.description",{"_index":941,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.fields[0",{"_index":2374,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["docdef.id",{"_index":935,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.initmodel",{"_index":933,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.inspectionresult",{"_index":951,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.inspectionsource",{"_index":949,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.inspectiontype",{"_index":947,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.issource",{"_index":943,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.name",{"_index":939,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.selectedroot",{"_index":953,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.showfields",{"_index":945,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.type",{"_index":937,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.type.tolowercase",{"_index":961,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.uri",{"_index":956,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdefcomponent",{"_index":2779,"title":{},"body":{"classes/LineModel.html":{}}}],["docdefcomponent.getdocdefelementposition(field.docdef",{"_index":2782,"title":{},"body":{"classes/LineModel.html":{}}}],["docdefcomponent.getfielddetailcomponentposition(parentfield",{"_index":2786,"title":{},"body":{"classes/LineModel.html":{}}}],["docdefin",{"_index":576,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["docdefinput",{"_index":367,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/LineModel.html":{}}}],["docdefout",{"_index":581,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["docdefoutput",{"_index":368,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/LineModel.html":{}}}],["docdefs",{"_index":969,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdefs.push(this.adddocument(docmodel",{"_index":972,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel",{"_index":934,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.collectionclassname",{"_index":965,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.collectiontype",{"_index":964,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.description",{"_index":942,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.id",{"_index":936,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.inspectionresult",{"_index":952,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.inspectionsource",{"_index":950,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.inspectiontype",{"_index":948,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.issource",{"_index":944,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.name",{"_index":940,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.selectedroot",{"_index":954,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.showfields",{"_index":946,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.type",{"_index":938,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docmap",{"_index":989,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/MappingUtil.html":{}}}],["docmap[doc.uri",{"_index":992,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docmap[mappedfield.parseddata.parseddocuri",{"_index":3692,"title":{},"body":{"classes/MappingUtil.html":{}}}],["docmodel",{"_index":970,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docmodels",{"_index":971,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docs",{"_index":978,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{}}}],["document",{"_index":21,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["document).ready",{"_index":4326,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["document.component.css",{"_index":493,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["document/data",{"_index":492,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["document/document",{"_index":416,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/LineModel.html":{}}}],["documentation",{"_index":4367,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentdefinition",{"_index":218,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["documentdefinitioncomponent",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documentfielddetailcomponent",{"_index":138,"title":{"components/DocumentFieldDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documentid",{"_index":1012,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/MappingUtil.html":{}}}],["documentinitializationmodel",{"_index":868,"title":{"classes/DocumentInitializationModel.html":{}},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["documentmanagementservice",{"_index":618,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["documentmanagementservice.generateexportblockdata(doc.inspectionsource",{"_index":2589,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["documentmanagementservice.generateexportmappings(this.jsonbuffer[0",{"_index":2572,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["documentmanagementservice.generateexportmetastr(doc",{"_index":2588,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["documents",{"_index":995,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["documentsareloaded",{"_index":1017,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["documentservice",{"_index":897,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["documenttype",{"_index":313,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"miscellaneous/enumerations.html":{}}}],["documenttype.constant",{"_index":333,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["documenttype.java",{"_index":962,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["documenttype.java_archive",{"_index":959,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["documenttype.json",{"_index":4206,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["documenttype.property",{"_index":909,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["documenttype.xml",{"_index":1014,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/FieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["documenttype.xsd",{"_index":955,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["doesn't",{"_index":66,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/FieldEditComponent.html":{},"index.html":{}}}],["dofetchfieldactions",{"_index":2136,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["dom",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["domsanitizer",{"_index":1245,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["don't",{"_index":2745,"title":{},"body":{"classes/LineModel.html":{},"license.html":{}}}],["dormant",{"_index":2658,"title":{},"body":{"classes/LineModel.html":{}}}],["double",{"_index":342,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["down",{"_index":278,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["download",{"_index":3379,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["downloads",{"_index":1190,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["drag",{"_index":1302,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["dragenter/dragleave/dragover",{"_index":1312,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["dragenterleave",{"_index":1227,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["dragenterleave(event",{"_index":1254,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["dragged",{"_index":1318,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["draggedmappedfield",{"_index":3363,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["draghover",{"_index":1360,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["drawcurrentline(x",{"_index":2720,"title":{},"body":{"classes/LineModel.html":{}}}],["drawing",{"_index":441,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["drawingline",{"_index":2667,"title":{},"body":{"classes/LineModel.html":{}}}],["drawline(event",{"_index":2717,"title":{},"body":{"classes/LineModel.html":{}}}],["drawlinesformapping(m",{"_index":2751,"title":{},"body":{"classes/LineModel.html":{}}}],["drop",{"_index":3390,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["dropdown",{"_index":538,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/FieldEditComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["dropdown:hover",{"_index":559,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["droppedfield",{"_index":1329,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["droppedmappedfield",{"_index":3399,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["dskiptests",{"_index":4530,"title":{},"body":{"index.html":{}}}],["dupe",{"_index":1559,"title":{},"body":{"classes/EnumValue.html":{}}}],["during",{"_index":1311,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["dynamic",{"_index":1114,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["dynamically",{"_index":1470,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["e",{"_index":733,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["e.identifier",{"_index":1778,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["e.level",{"_index":1738,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["e.mapping",{"_index":1737,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingListComponent.html":{}}}],["e.message",{"_index":1755,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ModalErrorDetailComponent.html":{}}}],["e.name",{"_index":2869,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["e.scope",{"_index":779,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MappingListComponent.html":{}}}],["e.sourcevalue",{"_index":2883,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["e.targetvalue",{"_index":2885,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["e.type",{"_index":1766,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingListComponent.html":{}}}],["each",{"_index":3449,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"license.html":{}}}],["easier",{"_index":4822,"title":{},"body":{"license.html":{}}}],["edit",{"_index":281,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["edit'},{'name",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["edit.component",{"_index":1064,"title":{},"body":{"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["edit.component.html",{"_index":282,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["edit.component.ts",{"_index":280,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:108",{"_index":2349,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:112",{"_index":2359,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:116",{"_index":2357,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:120",{"_index":2347,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:140",{"_index":2350,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:158",{"_index":2355,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:162",{"_index":2351,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:27",{"_index":4061,"title":{},"body":{"components/TemplateEditComponent.html":{}}}],["edit.component.ts:28",{"_index":4060,"title":{},"body":{"components/TemplateEditComponent.html":{}}}],["edit.component.ts:29",{"_index":3815,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:30",{"_index":3816,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["edit.component.ts:31",{"_index":3814,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:32",{"_index":306,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:33",{"_index":307,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:34",{"_index":312,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["edit.component.ts:35",{"_index":304,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:36",{"_index":311,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:37",{"_index":310,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:38",{"_index":309,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:39",{"_index":2363,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:40",{"_index":291,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:41",{"_index":2365,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:42",{"_index":2361,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:43",{"_index":2360,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:44",{"_index":2362,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:45",{"_index":2345,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:50",{"_index":3812,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:52",{"_index":303,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:53",{"_index":2354,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:56",{"_index":288,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:57",{"_index":3810,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:65",{"_index":4053,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:66",{"_index":292,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["edit.component.ts:69",{"_index":4052,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:70",{"_index":289,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["edit.component.ts:77",{"_index":4054,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:78",{"_index":293,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["edit.component.ts:93",{"_index":2353,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:97",{"_index":2358,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edited",{"_index":3446,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["editfield",{"_index":1228,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["editfield(event",{"_index":1257,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["editmode",{"_index":2336,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["editorial",{"_index":4614,"title":{},"body":{"license.html":{}}}],["edittemplate",{"_index":4086,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["el",{"_index":1362,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["el.offsetheight",{"_index":2754,"title":{},"body":{"classes/LineModel.html":{}}}],["el.offsetleft",{"_index":1364,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["el.offsetparent",{"_index":1366,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["el.offsettop",{"_index":1365,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["elaborations",{"_index":4616,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":4632,"title":{},"body":{"license.html":{}}}],["elem",{"_index":698,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["element",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["elementref",{"_index":216,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["elements",{"_index":447,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["emits",{"_index":1918,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["emitupdatedevent",{"_index":1671,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["emitupdatedevent(scope",{"_index":1699,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["empty",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["emptymodalbodycomponent",{"_index":140,"title":{"components/EmptyModalBodyComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["enable",{"_index":300,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["enableexpression",{"_index":4179,"title":{},"body":{"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["enables",{"_index":4542,"title":{},"body":{"index.html":{}}}],["encapsulation",{"_index":358,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["enclosed",{"_index":4813,"title":{},"body":{"license.html":{}}}],["end",{"_index":1895,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"classes/TextNode.html":{},"license.html":{}}}],["enddrag",{"_index":1229,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["enddrag(event",{"_index":1259,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["endoffset",{"_index":1898,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["engine",{"_index":4506,"title":{},"body":{"index.html":{}}}],["entering",{"_index":1255,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["entities",{"_index":4570,"title":{},"body":{"license.html":{}}}],["entity",{"_index":4564,"title":{},"body":{"license.html":{}}}],["entries",{"_index":2526,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["entry",{"_index":2529,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["entry.sourcevalue",{"_index":2826,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["entry.targetvalue",{"_index":2834,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["entrycomponents",{"_index":1034,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["enum",{"_index":1798,"title":{},"body":{"classes/ErrorInfo.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["enumeration",{"_index":1530,"title":{},"body":{"classes/EnumValue.html":{},"components/TransitionSelectionComponent.html":{}}}],["enumerations",{"_index":4485,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumfieldsbyclassidentifier",{"_index":3918,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["enumvalue",{"_index":1519,"title":{"classes/EnumValue.html":{}},"body":{"classes/EnumValue.html":{},"coverage.html":{}}}],["enumvalues",{"_index":1531,"title":{},"body":{"classes/EnumValue.html":{}}}],["environment",{"_index":71,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.backendurls.atlasserviceurl",{"_index":658,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["environment.backendurls.javainspectionserviceurl",{"_index":652,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["environment.backendurls.jsoninspectionserviceurl",{"_index":656,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["environment.backendurls.xmlinspectionserviceurl",{"_index":654,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["environment.xsrf",{"_index":659,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["environment.xsrf.cookiename",{"_index":663,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["environment.xsrf.defaulttokenvalue",{"_index":665,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["environment.xsrf.headername",{"_index":661,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["environments/environment",{"_index":634,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["equal",{"_index":4239,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["equivalent",{"_index":1192,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["error",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["error'},{'name",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["error('could",{"_index":3957,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["error.component",{"_index":414,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{}}}],["error.component.html",{"_index":697,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts",{"_index":696,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:102",{"_index":747,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:112",{"_index":754,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:122",{"_index":720,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:130",{"_index":726,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:32",{"_index":714,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:33",{"_index":715,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:35",{"_index":760,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:36",{"_index":756,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:38",{"_index":757,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:39",{"_index":761,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:40",{"_index":758,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:41",{"_index":759,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:43",{"_index":753,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:50",{"_index":752,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:59",{"_index":716,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:64",{"_index":718,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:68",{"_index":730,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:72",{"_index":729,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:76",{"_index":732,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:87",{"_index":735,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.identifier",{"_index":3740,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["error.message",{"_index":1749,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["error.model",{"_index":1850,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["error.object",{"_index":1741,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["error.object.message",{"_index":1742,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["error.scope",{"_index":1752,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ModalErrorDetailComponent.html":{}}}],["error.status",{"_index":2239,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["error.statustext",{"_index":2603,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["error1",{"_index":2605,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["errorhandlerservice",{"_index":617,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"components/ModalErrorDetailComponent.html":{},"classes/TextNode.html":{},"coverage.html":{},"overview.html":{}}}],["errorhandlerservice.filterwith(this.errors",{"_index":770,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["erroridentifiercounter",{"_index":1781,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["errorinfo",{"_index":719,"title":{"classes/ErrorInfo.html":{}},"body":{"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["errorinfo({message",{"_index":1775,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["errorinfo.erroridentifiercounter",{"_index":1805,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["errorinfo.erroridentifiercounter.tostring",{"_index":1804,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["errorlevel",{"_index":762,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["errorlevel.error",{"_index":774,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["errorlevel.info",{"_index":776,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ModalErrorDetailComponent.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["errorlevel.warn",{"_index":775,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/FieldActionService.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["errormessage",{"_index":1773,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["erroroccurred",{"_index":3913,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["errorpanel",{"_index":369,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["errors",{"_index":699,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MappingListComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["errors.filter(e",{"_index":1736,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errors.foreach(e",{"_index":3561,"title":{},"body":{"components/MappingListComponent.html":{}}}],["errors.foreach(error",{"_index":1740,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errors.length",{"_index":1735,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errorscope",{"_index":1700,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["errorscope.application",{"_index":2223,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"classes/MappingUtil.html":{},"components/ToolbarComponent.html":{}}}],["errorscope.field",{"_index":1649,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["errorscope.form",{"_index":1751,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errorscope.mapping",{"_index":1648,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["errorservice",{"_index":713,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"components/ModalErrorDetailComponent.html":{}}}],["errorservicerequired",{"_index":703,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["errorsubscription",{"_index":700,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingListComponent.html":{}}}],["errortype",{"_index":1647,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["errortype.internal",{"_index":2042,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["errortype.preview",{"_index":1767,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errortype.user",{"_index":2000,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["errortype.validation",{"_index":1768,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingListComponent.html":{}}}],["errorupdatedsource",{"_index":1662,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["erros",{"_index":1722,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["escaped",{"_index":672,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["establish",{"_index":2457,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["established",{"_index":256,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["establishing",{"_index":2561,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["even",{"_index":3541,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"license.html":{}}}],["event",{"_index":213,"title":{},"body":{"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["event's",{"_index":1308,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["event.ctrlkey",{"_index":1332,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["event.currenttarget",{"_index":3391,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["event.datatransfer.setdata('text",{"_index":1321,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["event.item['field",{"_index":2400,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["event.metakey",{"_index":1333,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["event.offsety.tostring",{"_index":2719,"title":{},"body":{"classes/LineModel.html":{}}}],["event.preventdefault",{"_index":1327,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{}}}],["event.srcelement.value",{"_index":4165,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["event.stoppropagation",{"_index":1328,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["event.target",{"_index":2696,"title":{},"body":{"classes/LineModel.html":{}}}],["event.target.files[0",{"_index":4153,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["event.target.selectedoptions",{"_index":3251,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["event.target.selectedoptions.item(0).attributes",{"_index":3253,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["event.target.selectedoptions.item(0).attributes.getnameditem('value').value",{"_index":250,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["event.target.value",{"_index":3246,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/ToolbarComponent.html":{}}}],["event.target.value.length",{"_index":3247,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["event['clienty",{"_index":3393,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["event['pagey",{"_index":3392,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["eventemitter",{"_index":846,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["everytime",{"_index":1651,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["evt",{"_index":3396,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["evt.preventdefault",{"_index":3398,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["evt.stoppropagation",{"_index":3397,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["evt1",{"_index":745,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["evt1.preventdefault",{"_index":784,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["evt1.stoppropagation",{"_index":783,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["evt1['clienty",{"_index":3381,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["evt1['pagey",{"_index":3380,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["example",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"license.html":{}}}],["exampleappmodule",{"_index":1806,"title":{"modules/ExampleAppModule.html":{}},"body":{"modules/ExampleAppModule.html":{},"modules.html":{},"overview.html":{}}}],["examples",{"_index":635,"title":{"classes/Examples.html":{}},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/Examples.html":{},"coverage.html":{}}}],["examples.pom",{"_index":674,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["except",{"_index":466,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["exchange",{"_index":4170,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["excludebyidentifier",{"_index":1672,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["excludebyidentifier(errors",{"_index":1703,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["excluding",{"_index":4647,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":4660,"title":{},"body":{"license.html":{}}}],["executed",{"_index":4739,"title":{},"body":{"license.html":{}}}],["executesearch",{"_index":2341,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["executesearch(filter",{"_index":2346,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["exercise",{"_index":4765,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":4593,"title":{},"body":{"license.html":{}}}],["exist",{"_index":2383,"title":{},"body":{"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{}}}],["existing",{"_index":3671,"title":{},"body":{"classes/MappingUtil.html":{}}}],["exists",{"_index":298,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["expand",{"_index":1572,"title":{},"body":{"classes/EnumValue.html":{}}}],["expandtoroot",{"_index":1574,"title":{},"body":{"classes/EnumValue.html":{}}}],["explicitly",{"_index":4733,"title":{},"body":{"license.html":{}}}],["export",{"_index":51,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["exportblockdata",{"_index":2574,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["exported",{"_index":2495,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["exportmappings",{"_index":4178,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["exportmappingscatalog",{"_index":2438,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["exportmappingscatalog(mappingsfilename",{"_index":2453,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["exportmeta",{"_index":2573,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["exports",{"_index":1025,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}],["express",{"_index":483,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["expression",{"_index":1858,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["expression'},{'name",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["expression.component",{"_index":4145,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["expression.model",{"_index":4231,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["expressioncomponent",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["expressionmodel",{"_index":1871,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{}}}],["expressionnode",{"_index":1835,"title":{"classes/ExpressionNode.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["expressionnode.sequence",{"_index":1854,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:27",{"_index":2424,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:28",{"_index":2425,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:34",{"_index":2428,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:38",{"_index":2430,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:39",{"_index":2429,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnodes",{"_index":1929,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressions",{"_index":3404,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["expressionupdated",{"_index":1873,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionupdatedevent",{"_index":1851,"title":{"classes/ExpressionUpdatedEvent.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["expressionupdatedsource",{"_index":1872,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["extends",{"_index":1856,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["extractdisplaypath",{"_index":1124,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["extractdisplaypath(path",{"_index":1137,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["extracted",{"_index":2482,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["extractfieldactiondefinition",{"_index":2137,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["extractfieldactiondefinition(actiondetail",{"_index":2168,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["extractor",{"_index":17,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["f",{"_index":2982,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["f(x",{"_index":4219,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["f.field",{"_index":2986,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["f.field.enumeration",{"_index":2989,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["f.field.isincollection",{"_index":2985,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fa",{"_index":275,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["fade",{"_index":1459,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["failure",{"_index":4784,"title":{},"body":{"license.html":{}}}],["fake",{"_index":2384,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fakenamespace",{"_index":2394,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fakenamespace.alias",{"_index":2395,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["false",{"_index":248,"title":{},"body":{"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/variables.html":{}}}],["faster",{"_index":4528,"title":{},"body":{"index.html":{}}}],["fatal",{"_index":2602,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["fee",{"_index":4792,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":18,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["fetchedactionconfigs.foreach(action",{"_index":2234,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fetchedactionconfigs.length",{"_index":2229,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fetchfieldactions",{"_index":2138,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fetching",{"_index":860,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["field",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["field's",{"_index":3292,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"classes/NamespaceModel.html":{}}}],["field'},{'name",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["field.alphabetizefields(cachedfield.children",{"_index":4044,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.alphabetizefields(field.parentfield.children",{"_index":3978,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.alphabetizefields(fields",{"_index":3030,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["field.alphabetizefields(this.fields",{"_index":3963,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.children",{"_index":1546,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.children.length",{"_index":1567,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.children.push(childfield",{"_index":3993,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.component",{"_index":1077,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["field.component.html",{"_index":3567,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts",{"_index":3566,"title":{},"body":{"components/MappingListFieldComponent.html":{},"coverage.html":{}}}],["field.component.ts:28",{"_index":3572,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:29",{"_index":3571,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:30",{"_index":3570,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:31",{"_index":3569,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:33",{"_index":3576,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:37",{"_index":3574,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:44",{"_index":3573,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:52",{"_index":3575,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.copy",{"_index":320,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["field.docdef",{"_index":1373,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["field.docdef.showfields",{"_index":2780,"title":{},"body":{"classes/LineModel.html":{}}}],["field.docdef.type",{"_index":3932,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.enumeration",{"_index":4031,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.fielddepth",{"_index":3991,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.fieldhasunmappedchild(childfield",{"_index":1548,"title":{},"body":{"classes/EnumValue.html":{}}}],["field.fieldhasunmappedchild(field",{"_index":4018,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.getfieldlabel(cfg.showtypes",{"_index":1422,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["field.getfieldlabel(configmodel.getconfig().showtypes",{"_index":2406,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["field.getnamewithnamespace",{"_index":4021,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.hasunmappedchildren",{"_index":4004,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.isarray",{"_index":4022,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.isattribute",{"_index":4025,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.iscollection",{"_index":1620,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.isparentfield",{"_index":2405,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["field.issource",{"_index":3047,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["field.isterminal",{"_index":1543,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.model",{"_index":2953,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["field.name",{"_index":3931,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield",{"_index":1621,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.parentfield.children",{"_index":4002,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield.children.push(field",{"_index":3977,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield.fielddepth",{"_index":3971,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield.path",{"_index":3970,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.partofmapping",{"_index":1544,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.partoftransformation",{"_index":4005,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.path",{"_index":1372,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingListComponent.html":{},"classes/NamespaceModel.html":{}}}],["field.path.tolowercase().includes(filter",{"_index":3556,"title":{},"body":{"components/MappingListComponent.html":{}}}],["field.serviceobject",{"_index":4026,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.serviceobject.path",{"_index":4027,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.serviceobject.status",{"_index":4046,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.type",{"_index":315,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["field.uuidcounter",{"_index":1571,"title":{},"body":{"classes/EnumValue.html":{}}}],["field.uuidcounter.tostring",{"_index":1570,"title":{},"body":{"classes/EnumValue.html":{}}}],["field.visibleincurrentdocumentsearch",{"_index":2789,"title":{},"body":{"classes/LineModel.html":{}}}],["fieldaction",{"_index":2054,"title":{"classes/FieldAction.html":{}},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["fieldactionargument",{"_index":2072,"title":{"classes/FieldActionArgument.html":{}},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"coverage.html":{}}}],["fieldactionargumentvalue",{"_index":2060,"title":{"classes/FieldActionArgumentValue.html":{}},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"coverage.html":{}}}],["fieldactionconfig",{"_index":2269,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactionconfig.name",{"_index":2306,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition",{"_index":2062,"title":{"classes/FieldActionDefinition.html":{}},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["fieldactiondefinition.arguments.push(argumentdefinition",{"_index":2300,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.arguments[0",{"_index":3311,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["fieldactiondefinition.arguments[0].values",{"_index":3312,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["fieldactiondefinition.arguments[0].values.length",{"_index":3313,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["fieldactiondefinition.iscustom",{"_index":2278,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.method",{"_index":2284,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.multiplicity",{"_index":2211,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.name",{"_index":2213,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.populatefieldaction(action",{"_index":3305,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["fieldactiondefinition.serviceobject",{"_index":2287,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.sourcetype",{"_index":2280,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.targettype",{"_index":2282,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactions",{"_index":2257,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactionservice",{"_index":853,"title":{"injectables/FieldActionService.html":{}},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"coverage.html":{},"overview.html":{}}}],["fieldcomponent",{"_index":1394,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldcomponent.getfield",{"_index":1403,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldcomponent.initialize(self.field",{"_index":1397,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldcomponent.issource",{"_index":1395,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldcomponents",{"_index":1223,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fielddepth",{"_index":1533,"title":{},"body":{"classes/EnumValue.html":{}}}],["fielddescription",{"_index":1712,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["fielddetail",{"_index":1355,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fielddetailelement",{"_index":1224,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fielddocdefname",{"_index":589,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["fieldeditcomponent",{"_index":146,"title":{"components/FieldEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fieldexists(targetfield",{"_index":3929,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["fieldhasunmappedchild(field",{"_index":1542,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldisconstant",{"_index":2964,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldisproperty",{"_index":2963,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldmappingpair",{"_index":2161,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldmode",{"_index":283,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"miscellaneous/enumerations.html":{}}}],["fieldmode.create",{"_index":318,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["fieldmode.edit",{"_index":317,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["fieldname",{"_index":3611,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{}}}],["fieldname.indexof",{"_index":3716,"title":{},"body":{"classes/MappingUtil.html":{}}}],["fieldname.split(':')[0",{"_index":3717,"title":{},"body":{"classes/MappingUtil.html":{}}}],["fieldname.split(':')[1",{"_index":3718,"title":{},"body":{"classes/MappingUtil.html":{}}}],["fieldnameblacklist",{"_index":813,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["fieldnames",{"_index":1558,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldnames.push(field.name",{"_index":1563,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldnames.sort",{"_index":1564,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldnode",{"_index":1863,"title":{"classes/FieldNode.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["fieldnode(this.mapping",{"_index":2023,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fieldnodes",{"_index":1965,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fieldnodes.find(n",{"_index":2021,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fieldpairmatchessearch",{"_index":3494,"title":{},"body":{"components/MappingListComponent.html":{}}}],["fieldpairmatchessearch(mapping",{"_index":3507,"title":{},"body":{"components/MappingListComponent.html":{}}}],["fieldpath",{"_index":1555,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["fieldpaths",{"_index":2969,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["fieldpaths.push(path",{"_index":2973,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldpaths.sort",{"_index":2974,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldpos",{"_index":2785,"title":{},"body":{"classes/LineModel.html":{}}}],["fields",{"_index":442,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["fields.length",{"_index":1565,"title":{},"body":{"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["fields.push(field",{"_index":3939,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["fields.push(fieldsbyname[name",{"_index":1566,"title":{},"body":{"classes/EnumValue.html":{}}}],["fields.push(mappedfield.field",{"_index":3027,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fields[fields.length",{"_index":3025,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldsbyname",{"_index":1557,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldsbyname[field.name",{"_index":1561,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldsbypath",{"_index":2968,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["fieldsbypath[path",{"_index":2972,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldshouldbevisible",{"_index":1230,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldtype",{"_index":2337,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fieldtypeselectionchanged",{"_index":2342,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fieldtypeselectionchanged(event",{"_index":2348,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fieldwidth",{"_index":1138,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["fifty",{"_index":4585,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"license.html":{}}}],["filebin",{"_index":2606,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["filebody",{"_index":1201,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["filecontent",{"_index":1193,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["filed",{"_index":4694,"title":{},"body":{"license.html":{}}}],["filedata",{"_index":4082,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filemanagementservice",{"_index":856,"title":{"injectables/FileManagementService.html":{}},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["filename",{"_index":1156,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/ToolbarComponent.html":{}}}],["filename.concat('.adm",{"_index":4216,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filename.length",{"_index":4211,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filename.split('.').pop",{"_index":4215,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filereader",{"_index":2607,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["files",{"_index":2455,"title":{},"body":{"injectables/FileManagementService.html":{},"license.html":{}}}],["files.gz",{"_index":2538,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["fileservice",{"_index":899,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["filter",{"_index":1708,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["filtering",{"_index":863,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["filterwith",{"_index":1673,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["filterwith(errors",{"_index":1706,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["find",{"_index":2863,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{}}}],["findmappingfiles",{"_index":2439,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["findmappingfiles(filter",{"_index":2465,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["findmappingsforfield",{"_index":3071,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["findmappingsforfield(field",{"_index":3090,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["finish",{"_index":4362,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["firefox",{"_index":1322,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["first",{"_index":2180,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fitness",{"_index":4755,"title":{},"body":{"license.html":{}}}],["fits",{"_index":1140,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["fixed",{"_index":599,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{}}}],["fixme",{"_index":4006,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["flags",{"_index":864,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["float",{"_index":343,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["float:left",{"_index":577,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["fn",{"_index":2033,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fn.field",{"_index":2040,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fname",{"_index":1185,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["focus",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["focusdirective",{"_index":189,"title":{"directives/FocusDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["focusel",{"_index":198,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["following",{"_index":3447,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"index.html":{},"license.html":{}}}],["font",{"_index":590,"title":{},"body":{"components/DataMapperAppComponent.html":{},"dependencies.html":{}}}],["foo.bar",{"_index":1823,"title":{},"body":{"classes/Examples.html":{}}}],["for_each",{"_index":4232,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["forkjoin",{"_index":2515,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["forkjoin(operations).topromise().then((data",{"_index":2628,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["form",{"_index":583,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/DataMapperUtil.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"components/MappingFieldActionArgumentComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["format",{"_index":2459,"title":{},"body":{"injectables/FileManagementService.html":{},"license.html":{}}}],["formattedfield",{"_index":2407,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["formattedfield['displayname'].tolowercase().indexof(filter.tolowercase",{"_index":2408,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["formattedfields",{"_index":2403,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["formattedfields.length",{"_index":2410,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["formattedfields.push(formattedfield",{"_index":2409,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["formerrors",{"_index":1663,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["formerrorupdatedsource",{"_index":1664,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["formsmodule",{"_index":1050,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["found",{"_index":4512,"title":{},"body":{"index.html":{}}}],["foundfields",{"_index":3934,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["foundfields.length",{"_index":3936,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["foundselectedmapping",{"_index":2738,"title":{},"body":{"classes/LineModel.html":{}}}],["free",{"_index":4663,"title":{},"body":{"license.html":{}}}],["frequently",{"_index":1655,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["fromjson",{"_index":2892,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["fromjson(json",{"_index":2815,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["full",{"_index":724,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/FileManagementService.html":{}}}],["function",{"_index":1450,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/TransitionSelectionComponent.html":{}}}],["g",{"_index":1862,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["generated",{"_index":3016,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"license.html":{}}}],["generateinitialexpression",{"_index":1878,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["generating",{"_index":1715,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["generically",{"_index":2186,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["geometry",{"_index":2677,"title":{},"body":{"classes/LineModel.html":{}}}],["getactionconfigparamvalues",{"_index":3167,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getactionconfigparamvalues(argconfig",{"_index":3194,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getactionconfigparamvdefault",{"_index":3168,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getactionconfigparamvdefault(argconfig",{"_index":3196,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getactionconfigs",{"_index":3277,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["getactiondefinitionforname",{"_index":2139,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactiondefinitionforname(actionname",{"_index":2172,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactionsappliestofield",{"_index":2140,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactionsappliestofield(mapping",{"_index":2175,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactualfield",{"_index":2141,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactualfield(mapping",{"_index":2178,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getaddbuttonlabel",{"_index":3324,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getalldocs",{"_index":1015,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getallfields",{"_index":3037,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["getallmappedfields",{"_index":3039,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getallmappings",{"_index":3072,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["getallmappings(includeactivemapping",{"_index":3092,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["getargumentforname",{"_index":2116,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["getargumentforname(name",{"_index":2095,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["getargumentvalue",{"_index":2058,"title":{},"body":{"classes/FieldAction.html":{}}}],["getargumentvalue(argumentname",{"_index":2067,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["getcfg",{"_index":2509,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getclass",{"_index":3622,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getcollectioncount",{"_index":1618,"title":{},"body":{"classes/EnumValue.html":{}}}],["getcollectionparentfield",{"_index":1614,"title":{},"body":{"classes/EnumValue.html":{}}}],["getcollectiontype",{"_index":1623,"title":{},"body":{"classes/EnumValue.html":{}}}],["getcomplexfield(classidentifier",{"_index":3923,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getconfig",{"_index":378,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getcssclass",{"_index":261,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["getcssclass(action",{"_index":4103,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["getcurrentadmcatalog",{"_index":2440,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getcurrentmappingcatalog",{"_index":2441,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getcurrentmappingjson",{"_index":2442,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getdisplayname",{"_index":3325,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getdisplayname(model",{"_index":3347,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getdocbyid",{"_index":3654,"title":{},"body":{"classes/MappingUtil.html":{}}}],["getdocbyid(documentid",{"_index":3660,"title":{},"body":{"classes/MappingUtil.html":{}}}],["getdocforidentifier(documentid",{"_index":1008,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getdocs(issource",{"_index":977,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getdocswithoutpropertydoc(issource",{"_index":973,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getdocurimap(cfg",{"_index":987,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["geteditorsettingscssclass",{"_index":4087,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["geteditorsettingscssclass(open",{"_index":4105,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["getelementposition",{"_index":1231,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getentryforsource",{"_index":2795,"title":{},"body":{"classes/LookupTable.html":{}}}],["getentryforsource(sourcevalue",{"_index":2803,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["getenumfield(classidentifier",{"_index":3925,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["geterrors",{"_index":704,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["geterrors().length",{"_index":3773,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["getfield",{"_index":286,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["getfield(fieldpath",{"_index":1554,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["getfielddetailcomponent",{"_index":1232,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getfielddetailcomponent(field",{"_index":1264,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getfieldid",{"_index":1233,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getfieldlabel(showtypes",{"_index":1625,"title":{},"body":{"classes/EnumValue.html":{}}}],["getfieldnames(fields",{"_index":1552,"title":{},"body":{"classes/EnumValue.html":{}}}],["getfieldnames(issource",{"_index":3028,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getfieldpath",{"_index":3428,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["getfieldpaths(fields",{"_index":1549,"title":{},"body":{"classes/EnumValue.html":{}}}],["getfieldpaths(issource",{"_index":3033,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getfields(fieldpaths",{"_index":3937,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getfields(issource",{"_index":3026,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getfieldtypeicon",{"_index":1234,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getfilesuffix",{"_index":4088,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["getfirstcollectionfield(issource",{"_index":2981,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getfirsterror",{"_index":705,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getfirsterror().message",{"_index":794,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getfirstmappingforlookuptable",{"_index":2902,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["getfirstmappingforlookuptable(mappingdefinition",{"_index":2905,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["getfirstwarning",{"_index":706,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getfirstwarning().message",{"_index":795,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getfirstxmldoc(issource",{"_index":1013,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getformattedoutputpath",{"_index":3583,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["getformattedoutputpath(path",{"_index":3587,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["getformattedoutputpath(selectedfield.path",{"_index":3619,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["getformattedoutputpath(sourcefield.field.path",{"_index":3649,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getformattedoutputpath(targetfield.field.path",{"_index":3651,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getidentifier",{"_index":1795,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["getindexformappedfield(mappedfield",{"_index":3014,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getinfos",{"_index":707,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorDetailComponent.html":{}}}],["getinitialfocuselement",{"_index":204,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["getinputoutputkey",{"_index":2796,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["getitemscssclass",{"_index":3495,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["getjsonbuf",{"_index":2443,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getlabel",{"_index":3169,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["getlabel(actionconfig.name",{"_index":3314,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["getlabel(argconfig.name",{"_index":3270,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getlabel(argconfigname",{"_index":3204,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getlastmappedfield(issource",{"_index":3024,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getlastnode",{"_index":1886,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["getlastnodeindex",{"_index":1884,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["getmappedfieldactions",{"_index":3170,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["getmappedfieldforfield(field",{"_index":3010,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getmappedfieldforindex(index",{"_index":3011,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getmappedfields",{"_index":3496,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappedfields(issource",{"_index":3023,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getmappedfields(mapping",{"_index":3510,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappedtarget(field",{"_index":3046,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getmappedvaluecount",{"_index":4312,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["getmappingclass",{"_index":1235,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getmappingcssclass",{"_index":3497,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappingcssclass(mapping",{"_index":3512,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappingid",{"_index":2444,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getmappingmodename",{"_index":4295,"title":{},"body":{"classes/TransitionModel.html":{}}}],["getmappingmodename(mode",{"_index":4279,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["getmappingrowscssclass",{"_index":3498,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappings",{"_index":3499,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmultiplicityactionconfigs",{"_index":4313,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["getname(showtypes",{"_index":3940,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getnamespacecssclass",{"_index":3831,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getnamespacecssclass(namespace",{"_index":3841,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getnamespaceforalias(alias",{"_index":3941,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getnamespaces",{"_index":3832,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getnamespaces().length",{"_index":3883,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getnamewithnamespace",{"_index":1581,"title":{},"body":{"classes/EnumValue.html":{}}}],["getnode(nodeid",{"_index":1888,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["getpaneliconcssclass",{"_index":3326,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getpaneliconcssclass(model",{"_index":3349,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getparentobjectname",{"_index":3429,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["getparenttoggleclass",{"_index":1236,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getprettylabel",{"_index":3890,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getprettyname",{"_index":4283,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["getrowscssclass",{"_index":3833,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getrowtitlecssclass",{"_index":3500,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["getscreenposforfield(field",{"_index":2778,"title":{},"body":{"classes/LineModel.html":{}}}],["getsearchiconcssclass",{"_index":3501,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["getsearchplaceholder",{"_index":3327,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getselected",{"_index":1292,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getselectedmapping",{"_index":3584,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["getselectedmappingcomponent",{"_index":3585,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["getsourceiconcssclass",{"_index":3430,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["getsourcetargetlabeltext",{"_index":3623,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getsourcetargetlabeltext(false",{"_index":3650,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getsourcetargetlabeltext(issource",{"_index":3638,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getsourcetargetlabeltext(true",{"_index":3648,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getspacerwidth",{"_index":1237,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["gettablebyname",{"_index":3073,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettablebyname(name",{"_index":3095,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettablebysourcetarget",{"_index":3074,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettablebysourcetarget(sourceidentifier",{"_index":3097,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettables",{"_index":3075,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettargetfieldfromline(selectedlineattrs",{"_index":2679,"title":{},"body":{"classes/LineModel.html":{}}}],["getterminalfields",{"_index":3959,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getting",{"_index":4496,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettitle",{"_index":3128,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["gettoken",{"_index":31,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["gettopfieldtypelabel",{"_index":3328,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["gettransformationclass",{"_index":1238,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getunqualifiednamespace",{"_index":3891,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getuserfieldcount(field",{"_index":2997,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getusermappedfields(issource",{"_index":3018,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getuuid",{"_index":1839,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["getwarnings",{"_index":708,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["getwarnings().length",{"_index":3772,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["git",{"_index":4517,"title":{},"body":{"index.html":{}}}],["github",{"_index":4516,"title":{},"body":{"index.html":{}}}],["give",{"_index":4698,"title":{},"body":{"license.html":{}}}],["global",{"_index":1313,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["global/mapping",{"_index":1721,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["glue",{"_index":1963,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["go",{"_index":1969,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["goodwill",{"_index":4781,"title":{},"body":{"license.html":{}}}],["google",{"_index":4498,"title":{},"body":{"index.html":{}}}],["governing",{"_index":488,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["gradient",{"_index":2657,"title":{},"body":{"classes/LineModel.html":{}}}],["grant",{"_index":4655,"title":{},"body":{"license.html":{}}}],["granted",{"_index":4594,"title":{},"body":{"license.html":{}}}],["granting",{"_index":4566,"title":{},"body":{"license.html":{}}}],["grants",{"_index":4657,"title":{},"body":{"license.html":{}}}],["grossly",{"_index":4771,"title":{},"body":{"license.html":{}}}],["group",{"_index":584,"title":{},"body":{"components/DataMapperAppComponent.html":{},"index.html":{}}}],["grouped",{"_index":1646,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gzip",{"_index":2462,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["half",{"_index":742,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["hand",{"_index":3445,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["handle",{"_index":736,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlealertclick",{"_index":3735,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["handlealertclick(error",{"_index":3739,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["handlealertclose",{"_index":709,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlealertclose(e",{"_index":731,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handled",{"_index":2216,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["handledocumentfieldmouseover(component",{"_index":2723,"title":{},"body":{"classes/LineModel.html":{}}}],["handleerror",{"_index":2445,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["handleerror(message",{"_index":2476,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["handleexportclick",{"_index":4089,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handleexportclick(event",{"_index":4109,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handleexportmapping",{"_index":4090,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handleexportmapping(event",{"_index":4112,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handleexportmappingcancel",{"_index":4091,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handlelineclick(event",{"_index":2694,"title":{},"body":{"classes/LineModel.html":{}}}],["handlemappingsinstancename",{"_index":4092,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handlemappingsinstancename(event",{"_index":4117,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handlemouseclick",{"_index":262,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["handlemouseclick(event",{"_index":269,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["handlemouseenter",{"_index":710,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlemouseenter(evt1",{"_index":734,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlemouseleave",{"_index":711,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlemouseleave(evt1",{"_index":746,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlemouseover",{"_index":1239,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["handlemouseover(event",{"_index":1281,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["handlemouseover(evt1",{"_index":3353,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["handleonblur",{"_index":2343,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["handleonblur(event",{"_index":2352,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["handler.service",{"_index":627,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"components/ModalErrorDetailComponent.html":{},"classes/TextNode.html":{}}}],["handler.service.ts",{"_index":1636,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:104",{"_index":1720,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:115",{"_index":1682,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:123",{"_index":1687,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:131",{"_index":1689,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:140",{"_index":1684,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:148",{"_index":1686,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:158",{"_index":1724,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:167",{"_index":1691,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:182",{"_index":1713,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:192",{"_index":1701,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:202",{"_index":1705,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:39",{"_index":1730,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:40",{"_index":1732,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:41",{"_index":1731,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:42",{"_index":1733,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:50",{"_index":1707,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:64",{"_index":1679,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:83",{"_index":1710,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:91",{"_index":1718,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handles",{"_index":1637,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{}}}],["handling",{"_index":1943,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LookupTableUtil.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{}}}],["happen",{"_index":4010,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["happening",{"_index":4008,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["happens",{"_index":1694,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["harmless",{"_index":4806,"title":{},"body":{"license.html":{}}}],["hasfieldactions",{"_index":3034,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["hasfocus",{"_index":2636,"title":{},"body":{"directives/FocusDirective.html":{}}}],["hash",{"_index":4240,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["hasjavadocuments",{"_index":1002,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["hasmappedfield(issource",{"_index":3000,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["hassourcedoc",{"_index":370,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["hastargetdoc",{"_index":371,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["hastransformation",{"_index":3043,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["hasunmappedchildren",{"_index":1535,"title":{},"body":{"classes/EnumValue.html":{}}}],["hat",{"_index":458,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["hdd",{"_index":3378,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["header",{"_index":60,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/CollapsableHeaderComponent.html":{}}}],["header'},{'name",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["header.component",{"_index":1069,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingDetailComponent.html":{}}}],["header.component.html",{"_index":260,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["header.component.ts",{"_index":259,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:25",{"_index":267,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["header.component.ts:26",{"_index":266,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["header.component.ts:28",{"_index":271,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["header.component.ts:32",{"_index":268,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["headername",{"_index":82,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":85,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["headertext",{"_index":1447,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["height",{"_index":597,"title":{},"body":{"components/DataMapperAppComponent.html":{},"dependencies.html":{}}}],["height:0px",{"_index":506,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["height:100",{"_index":509,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["height:12px",{"_index":533,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["height:calc(100",{"_index":565,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["hello",{"_index":3770,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["hereby",{"_index":4656,"title":{},"body":{"license.html":{}}}],["herein",{"_index":4736,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":601,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["hold",{"_index":4805,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3448,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["host",{"_index":619,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["host'},{'name",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["host.component",{"_index":1059,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["host.component.ts",{"_index":614,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"coverage.html":{}}}],["host.component.ts:38",{"_index":623,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["host.component.ts:42",{"_index":624,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["html",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["htmlcache",{"_index":1877,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["http",{"_index":14,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["http://127.0.0.1:8585",{"_index":4535,"title":{},"body":{"index.html":{}}}],["http://localhost:3000",{"_index":4551,"title":{},"body":{"index.html":{}}}],["http://localhost:8585/v2/atlas",{"_index":4842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8585/v2/atlas/java",{"_index":4844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8585/v2/atlas/json",{"_index":4848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8585/v2/atlas/xml",{"_index":4846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://stackoverflow.com/questions/40811809/add",{"_index":1469,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["http://www.apache.org/licenses",{"_index":4554,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":470,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["http://www.w3schools.com/howto/howto_css_modals.asp",{"_index":1444,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["http_interceptors",{"_index":1049,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["http_status_no_content",{"_index":1122,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["http_status_ok",{"_index":1123,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["httpclient",{"_index":2146,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["httpclientmodule",{"_index":1047,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["httpclientxsrfmodule",{"_index":1048,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["httpclientxsrfmodule.withoptions(environment.xsrf",{"_index":1109,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["httpclientxsrfmoduleforroot",{"_index":1108,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpevent",{"_index":41,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httphandler",{"_index":43,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httpheaders",{"_index":2197,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["httpinterceptor",{"_index":42,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httprequest",{"_index":44,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httprequest.clone",{"_index":84,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httprequest.headers.has(headername",{"_index":83,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httprequest.headers.set(headername",{"_index":86,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["https://github.com/atlasmap/atlasmap",{"_index":4519,"title":{},"body":{"index.html":{}}}],["https://github.com/atlasmap/atlasmap/issues/1128",{"_index":3956,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["https://github.com/atlasmap/atlasmap/issues/329",{"_index":4201,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["httpxsrftokenextractor",{"_index":45,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{}}}],["human",{"_index":1180,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["i.link:hover",{"_index":557,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["i.message",{"_index":793,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorDetailComponent.html":{}}}],["icon",{"_index":1100,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{}}}],["id",{"_index":869,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["identification",{"_index":4823,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":1704,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"coverage.html":{}}}],["identify",{"_index":3250,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["identifying",{"_index":4816,"title":{},"body":{"license.html":{}}}],["ignore",{"_index":1301,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["ignoring",{"_index":2236,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["ii",{"_index":4583,"title":{},"body":{"license.html":{}}}],["iii",{"_index":4590,"title":{},"body":{"license.html":{}}}],["img",{"_index":532,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["implements",{"_index":53,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["implied",{"_index":484,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["import",{"_index":39,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["import/export",{"_index":690,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{}}}],["importadmcatalog",{"_index":2446,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["importadmcatalog(mappingsfilename",{"_index":2478,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["imported",{"_index":2496,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["importmappings",{"_index":4177,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["imports",{"_index":1115,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"components/ToolbarComponent.html":{}}}],["improving",{"_index":4646,"title":{},"body":{"license.html":{}}}],["inability",{"_index":4779,"title":{},"body":{"license.html":{}}}],["inc",{"_index":459,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["incidental",{"_index":4776,"title":{},"body":{"license.html":{}}}],["include",{"_index":4619,"title":{},"body":{"license.html":{}}}],["includeactivemapping",{"_index":3094,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["included",{"_index":3017,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"license.html":{}}}],["includepath",{"_index":1626,"title":{},"body":{"classes/EnumValue.html":{}}}],["includes",{"_index":4713,"title":{},"body":{"license.html":{}}}],["including",{"_index":2434,"title":{},"body":{"injectables/FileManagementService.html":{},"license.html":{}}}],["inclusion",{"_index":4629,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":4654,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":4807,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":4803,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":4794,"title":{},"body":{"license.html":{}}}],["index",{"_index":26,"title":{"index.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexing",{"_index":3402,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["indexselectionchanged",{"_index":3431,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["indexselectionchanged(event",{"_index":3443,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["indicated",{"_index":4606,"title":{},"body":{"license.html":{}}}],["indicator",{"_index":1896,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["indices",{"_index":3451,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["indirect",{"_index":4577,"title":{},"body":{"license.html":{}}}],["individual",{"_index":4592,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["information",{"_index":639,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"license.html":{}}}],["informational",{"_index":4721,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":4678,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4691,"title":{},"body":{"license.html":{}}}],["ingoring",{"_index":2215,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["inherit",{"_index":2379,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["inherited",{"_index":2423,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["init",{"_index":1785,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["initcfg",{"_index":884,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["initialfocuselement",{"_index":1492,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["initialfocuselement.nativeelement.focus",{"_index":1494,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["initialization",{"_index":4190,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["initializationerroroccurred",{"_index":814,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["initializationservice",{"_index":622,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{},"overview.html":{}}}],["initializationstatuschangedsubscription",{"_index":372,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["initialize",{"_index":205,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["initialize(cfg",{"_index":2840,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["initialize(field",{"_index":217,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["initialize(namespace",{"_index":3811,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["initialized",{"_index":70,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/NamespaceModel.html":{}}}],["initializefromfields",{"_index":3961,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["initializing",{"_index":641,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["initmodel",{"_index":3911,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"overview.html":{}}}],["inline",{"_index":542,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["input",{"_index":272,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceListComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["inputclassidentifier",{"_index":2919,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["inputfield",{"_index":2760,"title":{},"body":{"classes/LineModel.html":{},"classes/LookupTableUtil.html":{}}}],["inputfield.classidentifier",{"_index":2922,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["inputfieldpos",{"_index":2763,"title":{},"body":{"classes/LineModel.html":{}}}],["inputfieldpos.y",{"_index":2766,"title":{},"body":{"classes/LineModel.html":{}}}],["inputid",{"_index":3319,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["inputs",{"_index":263,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"directives/FocusDirective.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["inputvalue",{"_index":4340,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["inputvalue.length",{"_index":4349,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["insert",{"_index":1914,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["insertbeforemappedfield",{"_index":3344,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["inserted",{"_index":2006,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["insertion",{"_index":3477,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["insertionindex",{"_index":3472,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["insertnodes(newnodes",{"_index":1933,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["insertposition",{"_index":1930,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["inserttext(str",{"_index":1927,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["inside",{"_index":1471,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["inspection",{"_index":862,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["inspectionresult",{"_index":872,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["inspectionsource",{"_index":871,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["inspectiontype",{"_index":852,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["inspectiontype.instance",{"_index":2585,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["inspectiontype.java_class",{"_index":2587,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["inspectiontype.schema",{"_index":2586,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["install",{"_index":4529,"title":{},"body":{"index.html":{}}}],["installor",{"_index":4523,"title":{},"body":{"index.html":{}}}],["instance",{"_index":2098,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["instance.definition",{"_index":2099,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["instance.name",{"_index":2100,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["instance/schema/mappings",{"_index":2581,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["instanceof",{"_index":1903,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["instant",{"_index":1642,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["instead",{"_index":25,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["institute",{"_index":4681,"title":{},"body":{"license.html":{}}}],["instr",{"_index":1170,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["int8array(reader.result",{"_index":1205,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["integer",{"_index":336,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["integrations",{"_index":4504,"title":{},"body":{"index.html":{}}}],["intentionally",{"_index":4627,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":4500,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":92,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{}}}],["intercept(httprequest",{"_index":63,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["interceptor",{"_index":56,"title":{"interceptors/ApiXsrfInterceptor.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":91,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{}}}],["interface",{"_index":1445,"title":{"interfaces/ModalErrorWindowValidator.html":{},"interfaces/ModalWindowValidator.html":{}},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":3774,"title":{},"body":{"interfaces/ModalErrorWindowValidator.html":{},"interfaces/ModalWindowValidator.html":{},"license.html":{},"overview.html":{}}}],["internal",{"_index":1802,"title":{},"body":{"classes/ErrorInfo.html":{},"components/MappingFieldActionArgumentComponent.html":{},"miscellaneous/enumerations.html":{}}}],["invalidate",{"_index":3302,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["invoke",{"_index":4328,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["io.atlasmap.java.v2",{"_index":879,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["io.atlasmap.json.v2",{"_index":881,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["io.atlasmap.json.v2.jsonfield",{"_index":2412,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["io.atlasmap.v2",{"_index":877,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["io.atlasmap.xml.v2",{"_index":883,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["io.atlasmap.xml.v2.xmlfield",{"_index":2413,"title":{},"body":{"components/FieldEditComponent.html":{},"classes/MappingUtil.html":{}}}],["iokey",{"_index":3115,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["irrevocable",{"_index":4664,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":3568,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["isactivemapping",{"_index":3502,"title":{},"body":{"components/MappingListComponent.html":{}}}],["isactivemapping(mapping",{"_index":3518,"title":{},"body":{"components/MappingListComponent.html":{}}}],["isadd",{"_index":219,"title":{},"body":{"components/ClassNameComponent.html":{},"components/FieldEditComponent.html":{}}}],["isaddbuttonvisible",{"_index":3329,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["isarray",{"_index":1537,"title":{},"body":{"classes/EnumValue.html":{}}}],["isattribute",{"_index":1538,"title":{},"body":{"classes/EnumValue.html":{}}}],["isclasspathresolutionneeded",{"_index":1005,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["isclosing",{"_index":284,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["iscollection",{"_index":1536,"title":{},"body":{"classes/EnumValue.html":{}}}],["isconstant",{"_index":1383,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{}}}],["iscustom",{"_index":2079,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["isdatavalid",{"_index":206,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["isdebugenabled",{"_index":926,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["isdragdroptarget",{"_index":1225,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["iseditmode",{"_index":3859,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["isempty",{"_index":3003,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["isenumerationmode",{"_index":4294,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["isfieldmapped(field",{"_index":3041,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["isfieldsexist(fields",{"_index":3933,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["isforeachmode",{"_index":4293,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["isfullymapped",{"_index":3004,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["isincollection",{"_index":1616,"title":{},"body":{"classes/EnumValue.html":{}}}],["isindexarg",{"_index":3278,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["isindexarg(argval",{"_index":3288,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["isinitialized",{"_index":2131,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["islookupmode",{"_index":2987,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["ismanytoonemode",{"_index":4292,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["ismappingstale",{"_index":3655,"title":{},"body":{"classes/MappingUtil.html":{}}}],["ismappingstale(mapping",{"_index":3662,"title":{},"body":{"classes/MappingUtil.html":{}}}],["isn't",{"_index":1310,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["isoddrow",{"_index":3624,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["isonetomanymode",{"_index":4290,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["isonetoonemode",{"_index":4291,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["isopen",{"_index":701,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["ispadfield",{"_index":2940,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["isparentfield",{"_index":1584,"title":{},"body":{"classes/EnumValue.html":{}}}],["ispartialcomponent",{"_index":3330,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["isprimitive",{"_index":1539,"title":{},"body":{"classes/EnumValue.html":{}}}],["isproperty",{"_index":1381,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{}}}],["ispropertyorconstant",{"_index":1632,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["isrequiredfieldvalid",{"_index":1674,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["isrequiredfieldvalid(value",{"_index":1711,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["isselectedmapping",{"_index":2755,"title":{},"body":{"classes/LineModel.html":{}}}],["issource",{"_index":199,"title":{},"body":{"components/ClassNameComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{}}}],["isstringfield",{"_index":1588,"title":{},"body":{"classes/EnumValue.html":{}}}],["issue",{"_index":4641,"title":{},"body":{"license.html":{}}}],["istarget",{"_index":3886,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["isterminal",{"_index":1589,"title":{},"body":{"classes/EnumValue.html":{}}}],["istraceenabled",{"_index":929,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["istransformcapable",{"_index":3432,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["isuserdelimiter",{"_index":3171,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["isuserdelimiter(delimitermodel",{"_index":3210,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["isxml",{"_index":2338,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["it's",{"_index":1303,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["item",{"_index":1164,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["itemisdocument",{"_index":3331,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["itemisdocument(model",{"_index":3357,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["itemrow",{"_index":3856,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["items",{"_index":1162,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["items.length",{"_index":1196,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["itemwasremoved",{"_index":1197,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["jackson",{"_index":1829,"title":{},"body":{"classes/Examples.html":{}}}],["january",{"_index":4552,"title":{},"body":{"license.html":{}}}],["jar",{"_index":1826,"title":{},"body":{"classes/Examples.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["jars",{"_index":4133,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["java",{"_index":960,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["java_archive",{"_index":4491,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["java_class",{"_index":4494,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["javainspectionserviceurl",{"_index":4843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["javaservicespackageprefix",{"_index":878,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["jquery",{"_index":4466,"title":{},"body":{"dependencies.html":{}}}],["jquery(function",{"_index":4327,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["js",{"_index":4462,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":2458,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/LookupTableEntry.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["json.sourcetype",{"_index":2817,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["json.sourcevalue",{"_index":2816,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["json.stringify(actiondetail",{"_index":2276,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["json.stringify(body",{"_index":2265,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["json.stringify(data",{"_index":2630,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["json.stringify(res",{"_index":2551,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["json.targettype",{"_index":2819,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["json.targetvalue",{"_index":2818,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["jsonbuffer",{"_index":2437,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["jsonheaders",{"_index":2624,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["jsoninspectionserviceurl",{"_index":4847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jsonservicespackageprefix",{"_index":880,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["kept",{"_index":2504,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["key",{"_index":988,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["keypos",{"_index":1904,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["kind",{"_index":482,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["knowing",{"_index":1317,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["l",{"_index":2702,"title":{},"body":{"classes/LineModel.html":{}}}],["l.sourcex",{"_index":2703,"title":{},"body":{"classes/LineModel.html":{}}}],["l.sourcey",{"_index":2704,"title":{},"body":{"classes/LineModel.html":{}}}],["l.stroke",{"_index":2707,"title":{},"body":{"classes/LineModel.html":{}}}],["l.style",{"_index":2748,"title":{},"body":{"classes/LineModel.html":{}}}],["l.targetfield",{"_index":2708,"title":{},"body":{"classes/LineModel.html":{}}}],["l.targetx",{"_index":2705,"title":{},"body":{"classes/LineModel.html":{}}}],["l.targety",{"_index":2706,"title":{},"body":{"classes/LineModel.html":{}}}],["label",{"_index":529,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["language",{"_index":487,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["last",{"_index":1935,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["last.str",{"_index":1989,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["last.str.length",{"_index":1988,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["last.str.substring(0",{"_index":1990,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastaddedindex",{"_index":1960,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastfieldrefremoved(removed.field",{"_index":1987,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastfieldrefremoved(targetfieldnode.field",{"_index":1992,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastnewnodeindex",{"_index":1947,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastnode",{"_index":1902,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastnode.str.indexof",{"_index":1905,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastnode.str.length",{"_index":2049,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastseparator",{"_index":3712,"title":{},"body":{"classes/MappingUtil.html":{}}}],["lasttextnode",{"_index":1938,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["latest",{"_index":1919,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["law",{"_index":474,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["lawsuit",{"_index":4687,"title":{},"body":{"license.html":{}}}],["leaf",{"_index":1144,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["leaf.length",{"_index":1217,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["leaf.substr(0",{"_index":1215,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["leave",{"_index":2387,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["left",{"_index":513,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["left:0",{"_index":518,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["left_bracket",{"_index":3907,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["legal",{"_index":4567,"title":{},"body":{"license.html":{}}}],["legend",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"overview.html":{}}}],["legible",{"_index":3207,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["length",{"_index":4352,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["level",{"_index":1640,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/variables.html":{}}}],["liability",{"_index":4766,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4774,"title":{},"body":{"license.html":{}}}],["lib/atlasmap",{"_index":1817,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["libraries",{"_index":2556,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["library",{"_index":2491,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["libs",{"_index":2557,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["licensable",{"_index":4676,"title":{},"body":{"license.html":{}}}],["license",{"_index":463,"title":{"license.html":{}},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["license.you",{"_index":4728,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":460,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["licenses",{"_index":4692,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":4562,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":4753,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":490,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["limited",{"_index":4598,"title":{},"body":{"license.html":{}}}],["line",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["line.sourcex",{"_index":2683,"title":{},"body":{"classes/LineModel.html":{}}}],["line.sourcey",{"_index":2685,"title":{},"body":{"classes/LineModel.html":{}}}],["line.targetfield",{"_index":2690,"title":{},"body":{"classes/LineModel.html":{}}}],["line.targetx",{"_index":2687,"title":{},"body":{"classes/LineModel.html":{}}}],["line.targety",{"_index":2689,"title":{},"body":{"classes/LineModel.html":{}}}],["line:hover",{"_index":606,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["linebeingformed",{"_index":2666,"title":{},"body":{"classes/LineModel.html":{}}}],["linemachine",{"_index":373,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["linemachinecomponent",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["linemachineelement",{"_index":2670,"title":{},"body":{"classes/LineModel.html":{}}}],["linemachineheight",{"_index":2753,"title":{},"body":{"classes/LineModel.html":{}}}],["linemodel",{"_index":2645,"title":{"classes/LineModel.html":{}},"body":{"classes/LineModel.html":{},"coverage.html":{}}}],["linerefreshsubscription",{"_index":2672,"title":{},"body":{"classes/LineModel.html":{}}}],["lines",{"_index":2665,"title":{},"body":{"classes/LineModel.html":{},"components/ToolbarComponent.html":{}}}],["link",{"_index":1734,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["list",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["list'},{'name",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["list.component",{"_index":1076,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["list.component.css",{"_index":497,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["list.component.html",{"_index":3490,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts",{"_index":3489,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"coverage.html":{}}}],["list.component.ts:103",{"_index":3508,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:104",{"_index":3854,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:109",{"_index":3845,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:114",{"_index":3847,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:124",{"_index":3519,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:128",{"_index":3523,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:134",{"_index":3849,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:145",{"_index":3528,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:148",{"_index":3850,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:31",{"_index":3506,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:32",{"_index":3837,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:33",{"_index":3532,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:34",{"_index":3531,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:35",{"_index":3534,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:36",{"_index":3533,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:37",{"_index":3530,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:39",{"_index":3521,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:47",{"_index":3520,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:48",{"_index":3851,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:53",{"_index":3509,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:55",{"_index":3853,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:57",{"_index":3524,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:59",{"_index":3840,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:63",{"_index":3844,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:64",{"_index":3513,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:67",{"_index":3843,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:71",{"_index":3842,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:73",{"_index":3526,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:75",{"_index":3839,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:77",{"_index":3516,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:81",{"_index":3514,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:85",{"_index":3515,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:89",{"_index":3511,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:93",{"_index":3529,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:98",{"_index":3517,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list/data",{"_index":496,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["list/mapping",{"_index":1075,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"coverage.html":{}}}],["list/namespace",{"_index":1078,"title":{},"body":{"modules/DataMapperModule.html":{},"components/NamespaceListComponent.html":{},"coverage.html":{}}}],["lists",{"_index":4639,"title":{},"body":{"license.html":{}}}],["literal",{"_index":3085,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["litigation",{"_index":4682,"title":{},"body":{"license.html":{}}}],["little",{"_index":4526,"title":{},"body":{"index.html":{}}}],["live",{"_index":4119,"title":{},"body":{"components/ToolbarComponent.html":{},"index.html":{}}}],["load",{"_index":2245,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["loadcomponent",{"_index":1483,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["loading",{"_index":401,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["loadingstatus",{"_index":374,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["local",{"_index":77,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["locale",{"_index":3920,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["location",{"_index":3828,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{}}}],["locationuri",{"_index":3887,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["logger",{"_index":850,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["loggermodule",{"_index":1057,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["loggermodule.forroot(environment.ngxloggerconfig",{"_index":1113,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["loggermoduleforroot",{"_index":1112,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["long",{"_index":344,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["looking",{"_index":3944,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["lookup",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["lookuptable",{"_index":2790,"title":{"classes/LookupTable.html":{}},"body":{"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["lookuptablecomponent",{"_index":150,"title":{"components/LookupTableComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lookuptabledata",{"_index":2844,"title":{"classes/LookupTableData.html":{}},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"coverage.html":{}}}],["lookuptableentry",{"_index":2799,"title":{"classes/LookupTableEntry.html":{}},"body":{"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"coverage.html":{}}}],["lookuptablename",{"_index":2906,"title":{},"body":{"classes/LookupTableUtil.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["lookuptableutil",{"_index":2899,"title":{"classes/LookupTableUtil.html":{}},"body":{"classes/LookupTableUtil.html":{},"coverage.html":{}}}],["lookuptableutil.getfirstmappingforlookuptable(mappingdefinition",{"_index":2933,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["lookuptableutil.populatemappinglookuptable(mappingdefinition",{"_index":2937,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["loss",{"_index":4780,"title":{},"body":{"license.html":{}}}],["losses",{"_index":4787,"title":{},"body":{"license.html":{}}}],["lost",{"_index":4343,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["m",{"_index":2739,"title":{},"body":{"classes/LineModel.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{}}}],["m.getfields(false).length",{"_index":2918,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m.getfields(false)[0",{"_index":2935,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m.getfields(true).length",{"_index":2917,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m.getfields(true)[0",{"_index":2921,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m.isfieldmapped(field",{"_index":3050,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{}}}],["m.sourcefields",{"_index":2759,"title":{},"body":{"classes/LineModel.html":{}}}],["m.sourcefields.length",{"_index":2756,"title":{},"body":{"classes/LineModel.html":{}}}],["m.sourcefields[0].field.name",{"_index":3051,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["m.targetfields",{"_index":2769,"title":{},"body":{"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["m.targetfields.length",{"_index":2757,"title":{},"body":{"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["m.transition.lookuptablename",{"_index":2916,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m.transition.mode",{"_index":2914,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m1",{"_index":1278,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["machine",{"_index":604,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/LineModel.html":{}}}],["machine'},{'name",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["machine.component",{"_index":415,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["machine.component.html",{"_index":2664,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts",{"_index":2647,"title":{},"body":{"classes/LineModel.html":{},"coverage.html":{}}}],["machine.component.ts:29",{"_index":2654,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:30",{"_index":2655,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:31",{"_index":2662,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:32",{"_index":2663,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:33",{"_index":2659,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:34",{"_index":2660,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:35",{"_index":2661,"title":{},"body":{"classes/LineModel.html":{}}}],["made",{"_index":3189,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["mailing",{"_index":4638,"title":{},"body":{"license.html":{}}}],["make",{"_index":1592,"title":{},"body":{"classes/EnumValue.html":{},"components/MappingFieldActionArgumentComponent.html":{},"license.html":{}}}],["making",{"_index":4596,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":4785,"title":{},"body":{"license.html":{}}}],["manage",{"_index":1698,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["managed",{"_index":4643,"title":{},"body":{"license.html":{}}}],["management",{"_index":4115,"title":{},"body":{"components/ToolbarComponent.html":{},"license.html":{}}}],["management.service",{"_index":629,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{}}}],["management.service.ts",{"_index":2432,"title":{},"body":{"injectables/FileManagementService.html":{},"coverage.html":{}}}],["management.service.ts:109",{"_index":2467,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:139",{"_index":2492,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:160",{"_index":2489,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:184",{"_index":2501,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:208",{"_index":2494,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:235",{"_index":2454,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:34",{"_index":2507,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:340",{"_index":2479,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:36",{"_index":2508,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:386",{"_index":2474,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:39",{"_index":2452,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:413",{"_index":2473,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:43",{"_index":2510,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:448",{"_index":2475,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:452",{"_index":2477,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:47",{"_index":2512,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:54",{"_index":2466,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:82",{"_index":2468,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["manipulation",{"_index":2433,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["manner",{"_index":2218,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["manually",{"_index":4545,"title":{},"body":{"index.html":{}}}],["many",{"_index":4281,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["many_to_one",{"_index":2077,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["map",{"_index":254,"title":{},"body":{"components/ClassNameComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingListComponent.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["mapped",{"_index":1639,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["mappedfield",{"_index":1788,"title":{"classes/MappedField.html":{}},"body":{"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["mappedfield.actions",{"_index":3726,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.actions.length",{"_index":3036,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedfield.actions.push(action",{"_index":3732,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field",{"_index":2970,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{}}}],["mappedfield.field.displayname",{"_index":3719,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field.isattribute",{"_index":3720,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field.issource",{"_index":3479,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["mappedfield.field.name",{"_index":3486,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{}}}],["mappedfield.field.namespacealias",{"_index":3721,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field.parentfield",{"_index":3722,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field.path",{"_index":2971,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingUtil.html":{}}}],["mappedfield.field.serviceobject.jsontype",{"_index":3710,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field.type",{"_index":3485,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{}}}],["mappedfield.field.usercreated",{"_index":3711,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.ispadfield",{"_index":2999,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedfield.parseddata.fieldisconstant",{"_index":3690,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.fieldisproperty",{"_index":3688,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedactions",{"_index":3728,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedactions.length",{"_index":3727,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parseddocid",{"_index":3696,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parseddocuri",{"_index":3695,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedindex",{"_index":3734,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedname",{"_index":3693,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedpath",{"_index":3709,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedvalue",{"_index":3701,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedvaluetype",{"_index":3703,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.usercreated",{"_index":3697,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfieldindex",{"_index":3687,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfieldparsingdata",{"_index":2945,"title":{"classes/MappedFieldParsingData.html":{}},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"coverage.html":{}}}],["mappedfields",{"_index":2010,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{}}}],["mappedfields.includes(node.field",{"_index":2016,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["mappedfields.length",{"_index":2967,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["mappedfields[+index",{"_index":3013,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedfields[0].field.isincollection",{"_index":3412,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["mappedinputfield",{"_index":2758,"title":{},"body":{"classes/LineModel.html":{}}}],["mappedinputfield.field",{"_index":2761,"title":{},"body":{"classes/LineModel.html":{}}}],["mappedoutputfield",{"_index":2768,"title":{},"body":{"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedoutputfield.field",{"_index":2770,"title":{},"body":{"classes/LineModel.html":{}}}],["mappedoutputfield.field.docdef",{"_index":3048,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedoutputfield.field.path",{"_index":3049,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mapper",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"index.html":{}}}],["mapper'},{'name",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["mapper.module",{"_index":1818,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["mapper.module.ts",{"_index":1033,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapper.module.ts:171",{"_index":1038,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["mapper/common/config.types.ts",{"_index":4490,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mapper/common/data",{"_index":1120,"title":{},"body":{"classes/DataMapperUtil.html":{},"coverage.html":{}}}],["mapper/common/focus.directive.ts",{"_index":2634,"title":{},"body":{"directives/FocusDirective.html":{},"coverage.html":{}}}],["mapper/common/focus.directive.ts:14",{"_index":2641,"title":{},"body":{"directives/FocusDirective.html":{}}}],["mapper/common/focus.directive.ts:8",{"_index":2640,"title":{},"body":{"directives/FocusDirective.html":{}}}],["mapper/common/focus.directive.ts:9",{"_index":2639,"title":{},"body":{"directives/FocusDirective.html":{}}}],["mapper/common/to",{"_index":4069,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{}}}],["mapper/components/app/constant",{"_index":279,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"coverage.html":{}}}],["mapper/components/app/data",{"_index":354,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"coverage.html":{}}}],["mapper/components/app/field",{"_index":2334,"title":{},"body":{"components/FieldEditComponent.html":{},"coverage.html":{}}}],["mapper/components/app/line",{"_index":2646,"title":{},"body":{"classes/LineModel.html":{},"coverage.html":{}}}],["mapper/components/app/namespace",{"_index":3807,"title":{},"body":{"components/NamespaceEditComponent.html":{},"coverage.html":{}}}],["mapper/components/app/property",{"_index":4050,"title":{},"body":{"components/PropertyFieldEditComponent.html":{},"coverage.html":{}}}],["mapper/components/app/template",{"_index":4058,"title":{},"body":{"components/TemplateEditComponent.html":{},"coverage.html":{}}}],["mapper/components/data",{"_index":613,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"coverage.html":{}}}],["mapper/components/document/class",{"_index":192,"title":{},"body":{"components/ClassNameComponent.html":{},"coverage.html":{}}}],["mapper/components/document/document",{"_index":1219,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"coverage.html":{}}}],["mapper/components/mapping",{"_index":257,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/NamespaceListComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["mapper/components/modal/modal",{"_index":1435,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"coverage.html":{}}}],["mapper/components/toolbar/expression.component.ts",{"_index":4409,"title":{},"body":{"coverage.html":{}}}],["mapper/components/toolbar/toolbar.component.ts",{"_index":4079,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:100",{"_index":4126,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:105",{"_index":4108,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:109",{"_index":4104,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:134",{"_index":4106,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:138",{"_index":4136,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:183",{"_index":4120,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:195",{"_index":4098,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:211",{"_index":4132,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:239",{"_index":4102,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:262",{"_index":4110,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:277",{"_index":4118,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:295",{"_index":4113,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:306",{"_index":4116,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:310",{"_index":4101,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:32",{"_index":4096,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:33",{"_index":4097,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:35",{"_index":4138,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:37",{"_index":4142,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:39",{"_index":4139,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:40",{"_index":4140,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:41",{"_index":4141,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:48",{"_index":4130,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:64",{"_index":4122,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/data",{"_index":1032,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapper/models/config.model.ts",{"_index":798,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{}}}],["mapper/models/config.model.ts:34",{"_index":831,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:35",{"_index":840,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:36",{"_index":841,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:37",{"_index":822,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:38",{"_index":839,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:40",{"_index":823,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:41",{"_index":826,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:42",{"_index":824,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:43",{"_index":825,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:45",{"_index":845,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:46",{"_index":843,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:47",{"_index":844,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:50",{"_index":829,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:52",{"_index":842,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:54",{"_index":828,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:57",{"_index":838,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:58",{"_index":827,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:59",{"_index":834,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:60",{"_index":835,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:61",{"_index":837,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:62",{"_index":836,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:64",{"_index":832,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:67",{"_index":833,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:69",{"_index":820,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:82",{"_index":1426,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:83",{"_index":1434,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:84",{"_index":1431,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:85",{"_index":1425,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:86",{"_index":1430,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:87",{"_index":1433,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:88",{"_index":1429,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:89",{"_index":1428,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:90",{"_index":1427,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:91",{"_index":1432,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:92",{"_index":1424,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:93",{"_index":1423,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/document",{"_index":3884,"title":{},"body":{"classes/NamespaceModel.html":{},"coverage.html":{}}}],["mapper/models/error.model.ts",{"_index":1779,"title":{},"body":{"classes/ErrorInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mapper/models/error.model.ts:42",{"_index":1787,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:43",{"_index":1786,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:45",{"_index":1792,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:46",{"_index":1790,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:47",{"_index":1793,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:48",{"_index":1794,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:49",{"_index":1791,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:50",{"_index":1789,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:51",{"_index":1784,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:59",{"_index":1796,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/examples.ts",{"_index":1821,"title":{},"body":{"classes/Examples.html":{},"coverage.html":{}}}],["mapper/models/examples.ts:18",{"_index":1834,"title":{},"body":{"classes/Examples.html":{}}}],["mapper/models/expression.model.ts",{"_index":1836,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["mapper/models/expression.model.ts:22",{"_index":2052,"title":{},"body":{"classes/ExpressionUpdatedEvent.html":{}}}],["mapper/models/expression.model.ts:23",{"_index":2053,"title":{},"body":{"classes/ExpressionUpdatedEvent.html":{}}}],["mapper/models/expression.model.ts:27",{"_index":1846,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:28",{"_index":1844,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:34",{"_index":1847,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:38",{"_index":1849,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:39",{"_index":1848,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:44",{"_index":4063,"title":{},"body":{"classes/TextNode.html":{}}}],["mapper/models/expression.model.ts:46",{"_index":4064,"title":{},"body":{"classes/TextNode.html":{}}}],["mapper/models/expression.model.ts:50",{"_index":4066,"title":{},"body":{"classes/TextNode.html":{}}}],["mapper/models/expression.model.ts:54",{"_index":4065,"title":{},"body":{"classes/TextNode.html":{}}}],["mapper/models/expression.model.ts:62",{"_index":2421,"title":{},"body":{"classes/FieldNode.html":{}}}],["mapper/models/expression.model.ts:64",{"_index":2422,"title":{},"body":{"classes/FieldNode.html":{}}}],["mapper/models/expression.model.ts:71",{"_index":2427,"title":{},"body":{"classes/FieldNode.html":{}}}],["mapper/models/expression.model.ts:75",{"_index":2426,"title":{},"body":{"classes/FieldNode.html":{}}}],["mapper/models/field",{"_index":2055,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mapper/models/field.model.ts",{"_index":1520,"title":{},"body":{"classes/EnumValue.html":{},"coverage.html":{}}}],["mapper/models/field.model.ts:21",{"_index":1522,"title":{},"body":{"classes/EnumValue.html":{}}}],["mapper/models/field.model.ts:22",{"_index":1523,"title":{},"body":{"classes/EnumValue.html":{}}}],["mapper/models/lookup",{"_index":2791,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"coverage.html":{}}}],["mapper/models/mapping",{"_index":3063,"title":{},"body":{"classes/MappingDefinition.html":{},"coverage.html":{}}}],["mapper/models/mapping.model.ts",{"_index":2938,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"coverage.html":{}}}],["mapper/models/mapping.model.ts:25",{"_index":3058,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:26",{"_index":3059,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:27",{"_index":3060,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:28",{"_index":3055,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:29",{"_index":3056,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:30",{"_index":3057,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:31",{"_index":3053,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:32",{"_index":3052,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:33",{"_index":3061,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:34",{"_index":3054,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:35",{"_index":3062,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:39",{"_index":2946,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:40",{"_index":2944,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:41",{"_index":2943,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:43",{"_index":2952,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:65",{"_index":2947,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:69",{"_index":2948,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:73",{"_index":2950,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/transition.model.ts",{"_index":4220,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mapper/models/transition.model.ts:122",{"_index":4305,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:137",{"_index":4310,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:141",{"_index":4311,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:145",{"_index":4309,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:149",{"_index":4308,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:153",{"_index":4307,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:33",{"_index":4228,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["mapper/models/transition.model.ts:34",{"_index":4230,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["mapper/models/transition.model.ts:35",{"_index":4229,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["mapper/models/transition.model.ts:36",{"_index":4226,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["mapper/models/transition.model.ts:48",{"_index":4298,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:50",{"_index":4302,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:51",{"_index":4297,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:52",{"_index":4303,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:53",{"_index":4301,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:54",{"_index":4300,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:55",{"_index":4299,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:56",{"_index":4296,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:62",{"_index":4306,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:90",{"_index":4304,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/services/api",{"_index":8,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"coverage.html":{}}}],["mapper/services/document",{"_index":4432,"title":{},"body":{"coverage.html":{}}}],["mapper/services/error",{"_index":1635,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["mapper/services/field",{"_index":2128,"title":{},"body":{"injectables/FieldActionService.html":{},"coverage.html":{}}}],["mapper/services/file",{"_index":2431,"title":{},"body":{"injectables/FileManagementService.html":{},"coverage.html":{}}}],["mapper/services/initialization.service.ts",{"_index":4439,"title":{},"body":{"coverage.html":{}}}],["mapper/services/mapping",{"_index":4441,"title":{},"body":{"coverage.html":{}}}],["mapper/utils/lookup",{"_index":2900,"title":{},"body":{"classes/LookupTableUtil.html":{},"coverage.html":{}}}],["mapper/utils/mapping",{"_index":3653,"title":{},"body":{"classes/MappingUtil.html":{},"coverage.html":{}}}],["mapping",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["mapping.adm",{"_index":2569,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["mapping.getallfields",{"_index":4014,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mapping.getallmappedfields",{"_index":3555,"title":{},"body":{"components/MappingListComponent.html":{}}}],["mapping.getfields(false)[0",{"_index":2855,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["mapping.getfields(issource",{"_index":2317,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["mapping.getfields(true)[0",{"_index":2865,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["mapping.getindexformappedfield(mappedfield",{"_index":3487,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["mapping.getmappedfieldforfield(field).actions.length",{"_index":4015,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mapping.getmappedfieldforindex((index",{"_index":1865,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["mapping.getmappedfields(issource",{"_index":3686,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mapping.getusermappedfields(issource",{"_index":3547,"title":{},"body":{"components/MappingListComponent.html":{}}}],["mapping.getusermappedfields(true",{"_index":2011,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["mapping.isfullymapped",{"_index":4361,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["mapping.model",{"_index":1797,"title":{},"body":{"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappingDefinition.html":{},"classes/TextNode.html":{}}}],["mapping.sourcefields.length",{"_index":3645,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["mapping.targetfields.length",{"_index":3646,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["mapping.transition.getprettyname",{"_index":3553,"title":{},"body":{"components/MappingListComponent.html":{}}}],["mapping.transition.userdelimiter",{"_index":4365,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["mapping/gz",{"_index":2540,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping/json",{"_index":2558,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping/reset",{"_index":2548,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping/resetlibs",{"_index":2555,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping/zip",{"_index":2547,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappingchanged",{"_index":2727,"title":{},"body":{"classes/LineModel.html":{}}}],["mappingdefinition",{"_index":851,"title":{"classes/MappingDefinition.html":{}},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["mappingdefinition.activemapping",{"_index":4013,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mappingdefinition.addtable(table",{"_index":2927,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["mappingdefinition.getallmappings(true",{"_index":4011,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mappingdefinition.gettablebysourcetarget(inputclassidentifier",{"_index":2924,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["mappingdefinition.gettables",{"_index":2930,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["mappingdefinition.mappings",{"_index":2936,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["mappingdetailcomponent",{"_index":153,"title":{"components/MappingDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfieldactionargumentcomponent",{"_index":155,"title":{"components/MappingFieldActionArgumentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfieldactioncomponent",{"_index":158,"title":{"components/MappingFieldActionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfieldcontainercomponent",{"_index":160,"title":{"components/MappingFieldContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfielddetailcomponent",{"_index":162,"title":{"components/MappingFieldDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfilenames",{"_index":2528,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappingfilenames.push(entry.name",{"_index":2530,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappingfiles",{"_index":904,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["mappinginitialized",{"_index":815,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["mappingisactive",{"_index":4012,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mappinglistcomponent",{"_index":163,"title":{"components/MappingListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappinglistfieldcomponent",{"_index":165,"title":{"components/MappingListFieldComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingmanagementservice",{"_index":616,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{},"overview.html":{}}}],["mappingmodel",{"_index":1094,"title":{},"body":{"modules/DataMapperModule.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["mappingname",{"_index":2623,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappings",{"_index":905,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/ToolbarComponent.html":{}}}],["mappings.push(this.activemapping",{"_index":3121,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["mappingselectioncomponent",{"_index":168,"title":{"components/MappingSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingselectionrequiredsubscription",{"_index":3126,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["mappingselectionsection",{"_index":3641,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["mappingselectionsectioncomponent",{"_index":170,"title":{"components/MappingSelectionSectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingserializer",{"_index":1096,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{}}}],["mappingservice",{"_index":898,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["mappingservicespackageprefix",{"_index":876,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["mappingsfilename",{"_index":2464,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["mappingsfilename.length",{"_index":2568,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappingsforfield",{"_index":3122,"title":{},"body":{"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{}}}],["mappingsforfield.push(m",{"_index":3124,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["mappingutil",{"_index":3652,"title":{"classes/MappingUtil.html":{}},"body":{"classes/MappingUtil.html":{},"coverage.html":{}}}],["mappingutil.updatemappedfieldsfromdocuments(mapping",{"_index":3682,"title":{},"body":{"classes/MappingUtil.html":{}}}],["margin",{"_index":512,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["margin:0px",{"_index":561,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["margin:auto",{"_index":588,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["marked",{"_index":4649,"title":{},"body":{"license.html":{}}}],["marks",{"_index":4744,"title":{},"body":{"license.html":{}}}],["master",{"_index":2488,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["match",{"_index":1371,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"dependencies.html":{}}}],["matches",{"_index":2154,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["matchesdate",{"_index":2142,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["matchesdate(candidatetype",{"_index":2182,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["matchesnumeric",{"_index":2143,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["matchesnumeric(candidatetype",{"_index":2188,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["matching",{"_index":89,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materializing",{"_index":4194,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["math.floor((math.random",{"_index":2979,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{}}}],["math.floor(math.random",{"_index":2821,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["maven",{"_index":679,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["max",{"_index":3476,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["max_path_width",{"_index":1214,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["maybe",{"_index":1746,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["md",{"_index":569,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["mean",{"_index":4559,"title":{},"body":{"license.html":{}}}],["means",{"_index":1926,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"license.html":{}}}],["mechanical",{"_index":4600,"title":{},"body":{"license.html":{}}}],["media",{"_index":4604,"title":{},"body":{"license.html":{}}}],["medium",{"_index":4696,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4697,"title":{},"body":{"license.html":{}}}],["menu",{"_index":3191,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["menus",{"_index":3309,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["merchantability",{"_index":4754,"title":{},"body":{"license.html":{}}}],["merely",{"_index":4622,"title":{},"body":{"license.html":{}}}],["mergedtextnode",{"_index":1950,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["mergedtextnode.str",{"_index":1952,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["message",{"_index":1453,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/ErrorInfo.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["messed",{"_index":448,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["meta",{"_index":2578,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["metadata",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["method",{"_index":57,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/ToolbarComponent.html":{}}}],["methods",{"_index":30,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/FieldAction.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["mf.field",{"_index":2996,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mfield",{"_index":2020,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["min",{"_index":563,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["minimal",{"_index":2505,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["misaligned",{"_index":450,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["miscellaneous",{"_index":4484,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":2214,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["mkdirp",{"_index":4469,"title":{},"body":{"dependencies.html":{}}}],["modal",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["modal.component.css",{"_index":499,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["modal//modal",{"_index":4143,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["modal/data",{"_index":498,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["modal/modal",{"_index":240,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["modalerrordetailcomponent",{"_index":173,"title":{"components/ModalErrorDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalerrorsubject",{"_index":1464,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["modalerrorsubscription",{"_index":1465,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["modalerrorwindow",{"_index":375,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["modalerrorwindowcomponent",{"_index":175,"title":{"components/ModalErrorWindowComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalerrorwindowvalidator",{"_index":3766,"title":{"interfaces/ModalErrorWindowValidator.html":{}},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"coverage.html":{}}}],["modalwindow",{"_index":376,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["modalwindowcomponent",{"_index":177,"title":{"components/ModalWindowComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalwindowvalidator",{"_index":194,"title":{"interfaces/ModalWindowValidator.html":{}},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"coverage.html":{}}}],["mode",{"_index":685,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["modeisenum",{"_index":4314,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["modeissupported",{"_index":3172,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["modeissupported(delimitermodel",{"_index":3214,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["model",{"_index":646,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/Examples.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/MappingFieldContainerComponent.html":{}}}],["model.displayname",{"_index":3377,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["model.field",{"_index":3376,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["model['field'].docdef",{"_index":3484,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["model['field'].docdef.name",{"_index":2415,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["model['field'].path",{"_index":2416,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["model[\\'field\\'].docdef",{"_index":3488,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["model[\\'field\\'].docdef.name",{"_index":2418,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["model[\\'field\\'].path",{"_index":2419,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["models",{"_index":4255,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["models.push(new",{"_index":4256,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["models/config.model",{"_index":50,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["models/document",{"_index":237,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"modules/DataMapperModule.html":{},"components/FieldEditComponent.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["models/error.model",{"_index":763,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["models/examples",{"_index":636,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["models/field",{"_index":2204,"title":{},"body":{"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"components/TransitionSelectionComponent.html":{}}}],["models/field.model",{"_index":239,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/PropertyFieldEditComponent.html":{}}}],["models/lookup",{"_index":2850,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/TransitionSelectionComponent.html":{}}}],["models/mapping",{"_index":1093,"title":{},"body":{"modules/DataMapperModule.html":{},"classes/LookupTableUtil.html":{},"classes/NamespaceModel.html":{}}}],["models/mapping.model",{"_index":1095,"title":{},"body":{"modules/DataMapperModule.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/TransitionSelectionComponent.html":{}}}],["models/transition.model",{"_index":2913,"title":{},"body":{"classes/LookupTableUtil.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["modifications",{"_index":4597,"title":{},"body":{"license.html":{}}}],["modified",{"_index":4701,"title":{},"body":{"license.html":{}}}],["modify",{"_index":4722,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":4727,"title":{},"body":{"license.html":{}}}],["module",{"_index":1019,"title":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}],["module.id",{"_index":361,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["moduleid",{"_index":360,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["modules",{"_index":1021,"title":{"modules.html":{}},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":1041,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["moment",{"_index":1645,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"dependencies.html":{}}}],["more",{"_index":1654,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingFieldContainerComponent.html":{},"classes/NamespaceModel.html":{},"license.html":{}}}],["mostly",{"_index":1653,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["mouse",{"_index":1276,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["mouseevent",{"_index":270,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["mouseeventtimer",{"_index":702,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["mousing",{"_index":738,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["movement",{"_index":3387,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["much",{"_index":1143,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["multi",{"_index":1118,"title":{},"body":{"modules/DataMapperModule.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["multi_space",{"_index":4241,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["multiple",{"_index":3203,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["multiplicity",{"_index":2074,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionComponent.html":{},"classes/MappingUtil.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["multiplicity.many_to_one",{"_index":2193,"title":{},"body":{"injectables/FieldActionService.html":{},"components/TransitionSelectionComponent.html":{}}}],["multiplicity.one_to_many",{"_index":2192,"title":{},"body":{"injectables/FieldActionService.html":{},"components/TransitionSelectionComponent.html":{}}}],["multiplicity.one_to_one",{"_index":2082,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionComponent.html":{},"classes/MappingUtil.html":{}}}],["multiplicity.one_to_one).length",{"_index":3297,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["multiplicity.zero_to_one",{"_index":2194,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["multispace",{"_index":4269,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["mvnw",{"_index":4521,"title":{},"body":{"index.html":{}}}],["mw",{"_index":1387,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["mw.nestedcomponent",{"_index":1389,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["mwc",{"_index":290,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["mytarget",{"_index":1461,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["mytargetchangessubscription",{"_index":1463,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["n",{"_index":1750,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["n.field",{"_index":1985,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["n.getuuid",{"_index":1892,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["n/a",{"_index":1870,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["n\\sourceidentifier",{"_index":2830,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["n\\targetidentifier",{"_index":2831,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["n\\tentry",{"_index":2833,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["name",{"_index":61,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["name'},{'name",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["name.component",{"_index":1067,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["name.component.html",{"_index":196,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts",{"_index":193,"title":{},"body":{"components/ClassNameComponent.html":{},"coverage.html":{}}}],["name.component.ts:31",{"_index":226,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:32",{"_index":231,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:33",{"_index":232,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:34",{"_index":235,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:35",{"_index":233,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:36",{"_index":228,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:37",{"_index":210,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:42",{"_index":221,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:47",{"_index":224,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:50",{"_index":222,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:54",{"_index":215,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:58",{"_index":225,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:62",{"_index":212,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["namednodemap",{"_index":2680,"title":{},"body":{"classes/LineModel.html":{}}}],["nameexistsoncreation",{"_index":4051,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["nameonly",{"_index":3588,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["names",{"_index":3031,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"license.html":{}}}],["names.push(field.name",{"_index":3032,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["namespace",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["namespace.alias",{"_index":3880,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespace.copy",{"_index":3818,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["namespace.istarget",{"_index":3819,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{}}}],["namespace.locationuri",{"_index":3882,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespace.uri",{"_index":3881,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacealias",{"_index":1541,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/MappingUtil.html":{}}}],["namespacecomponent",{"_index":3861,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacecomponent.initialize(ns",{"_index":3862,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacecomponent.namespace",{"_index":3864,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespaceeditcomponent",{"_index":178,"title":{"components/NamespaceEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["namespacefound",{"_index":2391,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["namespacelistcomponent",{"_index":180,"title":{"components/NamespaceListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["namespacematchessearch",{"_index":3834,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacematchessearch(ns",{"_index":3846,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacemodel",{"_index":2364,"title":{"classes/NamespaceModel.html":{}},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["namespacemodel.getunqualifiednamespace",{"_index":2376,"title":{},"body":{"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{}}}],["namespacemodel.unqualifiednamespace",{"_index":3896,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["namespaces",{"_index":2339,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["namespaceselectionchanged",{"_index":2344,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["namespaceselectionchanged(event",{"_index":2356,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["navbar'},{'name",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["navbar.component",{"_index":1816,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["navbar.component.ts",{"_index":4371,"title":{},"body":{"coverage.html":{}}}],["navigation",{"_index":688,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["nbsp",{"_index":1421,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingListComponent.html":{},"classes/TextNode.html":{}}}],["ncp",{"_index":4472,"title":{},"body":{"dependencies.html":{}}}],["necessarily",{"_index":4677,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":717,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["need",{"_index":75,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["need/use",{"_index":67,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["needed",{"_index":3308,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["needs",{"_index":721,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["negligence",{"_index":4769,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":4772,"title":{},"body":{"license.html":{}}}],["nestedcomponent",{"_index":1454,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["nestedcomponentinitializedcallback",{"_index":1449,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["nestedcomponenttype",{"_index":1448,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["network",{"_index":2241,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["new",{"_index":305,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["newargvalue",{"_index":2105,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["newargvalue.name",{"_index":2106,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["newargvalue.value",{"_index":2107,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["newfield",{"_index":1400,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["newlines",{"_index":670,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["newnamespace",{"_index":3863,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["newnodes",{"_index":1932,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.length",{"_index":1948,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.pop",{"_index":1980,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.push(new",{"_index":1956,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.push(targetnode",{"_index":1958,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.splice(0",{"_index":1940,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.splice(lastnewnodeindex",{"_index":1955,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes[0",{"_index":1937,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes[lastnewnodeindex",{"_index":1949,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes[lastnewnodeindex]as",{"_index":1954,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes[newnodes.length",{"_index":1978,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newoffset",{"_index":1994,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["next",{"_index":64,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["next.handle(httprequest",{"_index":87,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["nextnode",{"_index":1976,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["nextnode.str",{"_index":1979,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["nextnodeindex",{"_index":1975,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["ng",{"_index":4480,"title":{},"body":{"dependencies.html":{}}}],["ngaftercontentchecked",{"_index":2637,"title":{},"body":{"directives/FocusDirective.html":{}}}],["ngafterviewinit",{"_index":1466,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["ngif",{"_index":1472,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["ngmodule",{"_index":1040,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["ngondestroy",{"_index":379,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingListComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["ngoninit",{"_index":380,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["ngx",{"_index":849,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"dependencies.html":{}}}],["ngxlogger",{"_index":847,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["ngxloggerconfig",{"_index":4835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxloggerlevel",{"_index":848,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["ngxloggerlevel.debug",{"_index":927,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/variables.html":{}}}],["ngxloggerlevel.info",{"_index":4850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxloggerlevel.off",{"_index":4849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxloggerlevel.trace",{"_index":931,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/variables.html":{}}}],["ngxloggerlevel.trace].includes(this.logger.getconfigsnapshot().level",{"_index":928,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["node",{"_index":1852,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["node.tohtml",{"_index":2031,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["node.totext",{"_index":2030,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["nodeid",{"_index":1889,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["nodes",{"_index":1881,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["non",{"_index":2181,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["none",{"_index":252,"title":{},"body":{"components/ClassNameComponent.html":{},"components/DataMapperAppComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["normally",{"_index":4720,"title":{},"body":{"license.html":{}}}],["note",{"_index":668,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["nothing",{"_index":4735,"title":{},"body":{"license.html":{}}}],["notice",{"_index":4607,"title":{},"body":{"license.html":{}}}],["notices",{"_index":4704,"title":{},"body":{"license.html":{}}}],["notified",{"_index":1727,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["notwithstanding",{"_index":4734,"title":{},"body":{"license.html":{}}}],["ns",{"_index":2392,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["ns.alias",{"_index":2393,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["ns.alias.tolowercase().includes(filter",{"_index":3869,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.copyfrom(newnamespace",{"_index":3865,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.createdbyuser",{"_index":3860,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.getprettylabel",{"_index":2417,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["ns.istarget",{"_index":3820,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{}}}],["ns.locationuri",{"_index":3872,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.locationuri.tolowercase().includes(filter",{"_index":3873,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.uri",{"_index":3870,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.uri.tolowercase().includes(filter",{"_index":3871,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["null",{"_index":227,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["null).length",{"_index":773,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["number",{"_index":821,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["number'].indexof(arg.type",{"_index":2093,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["number'].indexof(selectedtype",{"_index":2331,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["number(event.target.value",{"_index":3473,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["numeric",{"_index":2190,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["numerical",{"_index":3454,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["numerics",{"_index":2092,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["o",{"_index":1336,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{}}}],["object",{"_index":1155,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object(s",{"_index":1681,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["object.assign",{"_index":1758,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["object.assign(copy",{"_index":1591,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["object.assign(this",{"_index":1608,"title":{},"body":{"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/NamespaceModel.html":{}}}],["object.keys(actiondetail.actionschema.properties",{"_index":2289,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["object.keys(multiplicity).foreach(m",{"_index":2332,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["object.keys(this.actions).foreach(multiplicity",{"_index":2301,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["object.values(this.actions).foreach(arr",{"_index":2249,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["obligations",{"_index":4795,"title":{},"body":{"license.html":{}}}],["observable",{"_index":47,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{}}}],["observable((observer",{"_index":2255,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["observable.create((observer",{"_index":2367,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["observer",{"_index":1726,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["observer.complete",{"_index":2272,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["observer.error(error",{"_index":2273,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["observer.next('no",{"_index":2629,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["observer.next(actionconfigs",{"_index":2271,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["observer.next(body",{"_index":2544,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["observer.next(data",{"_index":2631,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["observer.next(mappingfilenames",{"_index":2531,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["observer.next(this.cfg.mappingservice.executefieldsearch(this.cfg",{"_index":3373,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["observer.next(this.executesearch(observer.outervalue",{"_index":2368,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["observer.next(true",{"_index":2552,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["obtain",{"_index":468,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["occurred",{"_index":2534,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["octet",{"_index":2608,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["odd",{"_index":3644,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["offer",{"_index":4672,"title":{},"body":{"license.html":{}}}],["offset",{"_index":1853,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["ok",{"_index":1457,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["okbuttonhandler",{"_index":1451,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["okclicked",{"_index":1511,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["oldparentfield",{"_index":2399,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["oldpath",{"_index":1378,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/NamespaceModel.html":{}}}],["oldselecteditem",{"_index":3604,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["oldselecteditem.selected",{"_index":3606,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["once",{"_index":1695,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{}}}],["ondestroy",{"_index":357,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingListComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["one",{"_index":723,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["one_to_many",{"_index":2076,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["one_to_one",{"_index":2075,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["oninit",{"_index":356,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["open",{"_index":4107,"title":{},"body":{"components/ToolbarComponent.html":{},"index.html":{}}}],["operation",{"_index":2625,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["operations",{"_index":2622,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["operations.push(operation",{"_index":2627,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["opn",{"_index":4475,"title":{},"body":{"dependencies.html":{}}}],["option",{"_index":2385,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["optional",{"_index":96,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["optionselected",{"_index":4333,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["optionselected.val",{"_index":4336,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["order",{"_index":3455,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["ordinal",{"_index":1521,"title":{},"body":{"classes/EnumValue.html":{}}}],["origin",{"_index":4748,"title":{},"body":{"license.html":{}}}],["original",{"_index":3221,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"license.html":{}}}],["originalpath",{"_index":3946,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["originalpath.indexof(pathseparator",{"_index":3949,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["originalpath.substr(0",{"_index":3953,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["originalpath.substr(originalpath.indexof(pathseparator",{"_index":3955,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["originalpath.substring(1",{"_index":3950,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["otherwise",{"_index":301,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"license.html":{}}}],["out",{"_index":748,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"license.html":{},"overview.html":{}}}],["outcome",{"_index":4543,"title":{},"body":{"index.html":{}}}],["output",{"_index":2772,"title":{},"body":{"classes/LineModel.html":{}}}],["outputclassidentifier",{"_index":2920,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["outputfield",{"_index":1359,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{},"classes/LookupTableUtil.html":{}}}],["outputfield.classidentifier",{"_index":2923,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["outputfieldpos",{"_index":2773,"title":{},"body":{"classes/LineModel.html":{}}}],["outputfieldpos.y",{"_index":2775,"title":{},"body":{"classes/LineModel.html":{}}}],["outputnumber",{"_index":3625,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["outputselects",{"_index":2837,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["outstanding",{"_index":4588,"title":{},"body":{"license.html":{}}}],["over",{"_index":739,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["overflow",{"_index":600,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["overhead",{"_index":2506,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["override",{"_index":11,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["overview",{"_index":4827,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":4563,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":4584,"title":{},"body":{"license.html":{}}}],["package",{"_index":15,"title":{"dependencies.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{}}}],["padding",{"_index":519,"title":{},"body":{"components/DataMapperAppComponent.html":{},"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["padding:0",{"_index":574,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["padding:0px",{"_index":571,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["paddingfield",{"_index":2956,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["padfield",{"_index":3906,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["page",{"_index":4821,"title":{},"body":{"license.html":{}}}],["pair",{"_index":2177,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["pako",{"_index":2514,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["panel",{"_index":985,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["panels",{"_index":2691,"title":{},"body":{"classes/LineModel.html":{}}}],["param",{"_index":780,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["parameter",{"_index":3188,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["parameters",{"_index":94,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["parent",{"_index":1575,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/ToolbarComponent.html":{}}}],["parent.collapsed",{"_index":1576,"title":{},"body":{"classes/EnumValue.html":{}}}],["parent.docdef",{"_index":1578,"title":{},"body":{"classes/EnumValue.html":{}}}],["parent.docdef.showfields",{"_index":1579,"title":{},"body":{"classes/EnumValue.html":{}}}],["parent.iscollection",{"_index":1615,"title":{},"body":{"classes/EnumValue.html":{}}}],["parent.ispropertyorconstant",{"_index":1577,"title":{},"body":{"classes/EnumValue.html":{}}}],["parent.parentfield",{"_index":1580,"title":{},"body":{"classes/EnumValue.html":{}}}],["parentcomponent",{"_index":3626,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["parentfield",{"_index":1358,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"classes/NamespaceModel.html":{}}}],["parentfield.parentfield",{"_index":2787,"title":{},"body":{"classes/LineModel.html":{},"classes/NamespaceModel.html":{}}}],["parentfield.partofmapping",{"_index":4016,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["parentfield.partoftransformation",{"_index":4017,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["parentfieldname",{"_index":2340,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["parentobjectname",{"_index":3423,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["parentpath",{"_index":3713,"title":{},"body":{"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{}}}],["parentselectionchanged",{"_index":207,"title":{},"body":{"components/ClassNameComponent.html":{},"components/FieldEditComponent.html":{}}}],["parentselectionchanged(event",{"_index":223,"title":{},"body":{"components/ClassNameComponent.html":{},"components/FieldEditComponent.html":{}}}],["parsed",{"_index":2086,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["parsedactions",{"_index":2966,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parseddata",{"_index":2939,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parseddocid",{"_index":2960,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parseddocs",{"_index":3065,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["parseddocuri",{"_index":2961,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedindex",{"_index":2962,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedname",{"_index":2957,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedpath",{"_index":2958,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedvalue",{"_index":2959,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedvaluetype",{"_index":2965,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parseint(selectedvalue",{"_index":4338,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["parseint(text.substring(position",{"_index":2037,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["parses",{"_index":1915,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["part",{"_index":4711,"title":{},"body":{"license.html":{}}}],["partial",{"_index":1783,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["particular",{"_index":4756,"title":{},"body":{"license.html":{}}}],["partofmapping",{"_index":1342,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{}}}],["partofmappingicon",{"_index":1347,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["partofmappingiconhidden",{"_index":1348,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["partoftransformation",{"_index":1528,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["party",{"_index":4719,"title":{},"body":{"license.html":{}}}],["passed",{"_index":3979,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["patent",{"_index":4670,"title":{},"body":{"license.html":{}}}],["path",{"_index":666,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"index.html":{}}}],["path.lastindexof",{"_index":3610,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{}}}],["path.replace",{"_index":3609,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["path.substr(0",{"_index":1218,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["path.substr(path.lastindexof",{"_index":3612,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["path.substring(0",{"_index":3714,"title":{},"body":{"classes/MappingUtil.html":{}}}],["path.substring(lastseparator",{"_index":3715,"title":{},"body":{"classes/MappingUtil.html":{}}}],["paths",{"_index":1550,"title":{},"body":{"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["paths.push(field.name",{"_index":1553,"title":{},"body":{"classes/EnumValue.html":{}}}],["paths.push(field.path",{"_index":1551,"title":{},"body":{"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["pathseparator",{"_index":3914,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["patternfly",{"_index":4478,"title":{},"body":{"dependencies.html":{}}}],["peer",{"_index":4454,"title":{},"body":{"dependencies.html":{}}}],["percent",{"_index":4586,"title":{},"body":{"license.html":{}}}],["perform",{"_index":1152,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldDetailComponent.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["performance",{"_index":2484,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["period",{"_index":4242,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["permission",{"_index":4742,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":489,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["perpetual",{"_index":4658,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":4710,"title":{},"body":{"license.html":{}}}],["pficon",{"_index":4077,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{}}}],["pipe",{"_index":4067,"title":{"pipes/ToErrorIconClassPipe.html":{}},"body":{"pipes/ToErrorIconClassPipe.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["pipe(map((res",{"_index":2626,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["pipe(timeout(this.cfg.initcfg.admhttptimeout",{"_index":2536,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["pipes",{"_index":4068,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["pipetransform",{"_index":4075,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["pitests",{"_index":4532,"title":{},"body":{"index.html":{}}}],["place",{"_index":2390,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["places",{"_index":4715,"title":{},"body":{"license.html":{}}}],["please",{"_index":3241,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["pointers",{"_index":1593,"title":{},"body":{"classes/EnumValue.html":{}}}],["polished",{"_index":1744,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["pom",{"_index":681,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/Examples.html":{}}}],["pompayload",{"_index":816,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["populate",{"_index":3307,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"classes/NamespaceModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["populatechildren(field",{"_index":3982,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["populatefieldaction",{"_index":2117,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["populatefieldaction(action",{"_index":2083,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["populatefielddata(field",{"_index":4028,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["populatefieldparentpaths(field",{"_index":4019,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["populatemappinglookuptable",{"_index":2903,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["populatemappinglookuptable(mappingdefinition",{"_index":2908,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["popup",{"_index":4099,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["port",{"_index":4540,"title":{},"body":{"index.html":{}}}],["pos",{"_index":2781,"title":{},"body":{"classes/LineModel.html":{}}}],["pos['y",{"_index":2783,"title":{},"body":{"classes/LineModel.html":{}}}],["position",{"_index":539,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["position:absolute",{"_index":516,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["position:relative",{"_index":505,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["possibility",{"_index":4789,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1145,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["post",{"_index":1953,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["post.length",{"_index":1946,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["power",{"_index":4575,"title":{},"body":{"license.html":{}}}],["pre",{"_index":1945,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["pre.length",{"_index":1951,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["predefines",{"_index":3306,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["preferred",{"_index":4595,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":1845,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["preloadedfieldactionmetadata",{"_index":907,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["preloadedmappingjson",{"_index":906,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["prepare",{"_index":4666,"title":{},"body":{"license.html":{}}}],["preparecomplexfields",{"_index":4034,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["present",{"_index":2087,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["prettyname",{"_index":4223,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["preview",{"_index":684,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["previous",{"_index":3045,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldDetailComponent.html":{}}}],["previously",{"_index":3303,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["primarily",{"_index":4507,"title":{},"body":{"index.html":{}}}],["printed",{"_index":4820,"title":{},"body":{"license.html":{}}}],["private",{"_index":28,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["process",{"_index":3725,"title":{},"body":{"classes/MappingUtil.html":{},"components/ToolbarComponent.html":{}}}],["processimportedfile",{"_index":4093,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["processimportedfile(event",{"_index":4121,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["processing",{"_index":4160,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["processmappingscatalog",{"_index":4094,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["processmappingscatalog(selectedfile",{"_index":4125,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["product",{"_index":4745,"title":{},"body":{"license.html":{}}}],["production",{"_index":4834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prominent",{"_index":4703,"title":{},"body":{"license.html":{}}}],["promise",{"_index":1157,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["promise((resolve",{"_index":1198,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["promise(async(resolve",{"_index":2564,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["properties",{"_index":27,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["property",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["propertycomponent",{"_index":1388,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["propertycomponent.getfield",{"_index":1401,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["propertycomponent.initialize(self.field",{"_index":1390,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["propertydoc",{"_index":902,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["propertyeditfieldcomponent",{"_index":608,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["propertyfieldeditcomponent",{"_index":181,"title":{"components/PropertyFieldEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["propertyobject",{"_index":2290,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["propertyobject.const",{"_index":2292,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["propertyobject.enum",{"_index":2298,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["propertyobject.type",{"_index":2296,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["protected",{"_index":1837,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["provide",{"_index":1116,"title":{},"body":{"modules/DataMapperModule.html":{},"license.html":{}}}],["provided",{"_index":1141,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"license.html":{}}}],["providers",{"_index":615,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}],["provides",{"_index":4752,"title":{},"body":{"license.html":{}}}],["public",{"_index":365,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{}}}],["publicly",{"_index":4667,"title":{},"body":{"license.html":{}}}],["pull",{"_index":3190,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["purpose",{"_index":4644,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":4574,"title":{},"body":{"license.html":{}}}],["push",{"_index":2480,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["pushed",{"_index":2481,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["put",{"_index":1923,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["px",{"_index":1418,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["querylist",{"_index":1287,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["quotes",{"_index":669,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["range",{"_index":1894,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["re",{"_index":3450,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["reactiveformsmodule",{"_index":1051,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["read",{"_index":76,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/DataMapperUtil.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/FileManagementService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["readable",{"_index":1181,"title":{},"body":{"classes/DataMapperUtil.html":{},"license.html":{}}}],["readbinaryfile",{"_index":1126,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["readbinaryfile(filename",{"_index":1149,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["reader",{"_index":1150,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["reader.onload",{"_index":1200,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["reader.readasarraybuffer(filename",{"_index":1206,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["reader.readastext(filename",{"_index":1204,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["reader.result",{"_index":1202,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["readfile",{"_index":1127,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/ToolbarComponent.html":{}}}],["readfile(filecontent",{"_index":4129,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["readfile(filename",{"_index":1158,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["readonly",{"_index":1857,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["readonlyarray",{"_index":1882,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["reason",{"_index":4809,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":4746,"title":{},"body":{"license.html":{}}}],["reasons",{"_index":2485,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["received",{"_index":4652,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":4699,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":4819,"title":{},"body":{"license.html":{}}}],["red",{"_index":457,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["redistributing",{"_index":4762,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":4695,"title":{},"body":{"license.html":{}}}],["redrawlinesformappings",{"_index":2729,"title":{},"body":{"classes/LineModel.html":{}}}],["redrawn",{"_index":443,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["reference",{"_index":1917,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["references",{"_index":645,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["refers",{"_index":3669,"title":{},"body":{"classes/MappingUtil.html":{}}}],["reflect",{"_index":2005,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["regarding",{"_index":4740,"title":{},"body":{"license.html":{}}}],["reinitialize",{"_index":4134,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["reject",{"_index":1199,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["reject(`could",{"_index":2244,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["reject(`fatal",{"_index":2240,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["related",{"_index":4511,"title":{},"body":{"index.html":{}}}],["relative",{"_index":540,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["remain",{"_index":4620,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":1147,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["remova",{"_index":1683,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["remove",{"_index":1408,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionComponent.html":{},"classes/MappingUtil.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["removeaction",{"_index":2941,"title":{},"body":{"classes/MappedField.html":{},"components/MappingFieldActionComponent.html":{}}}],["removeaction(action",{"_index":2949,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionComponent.html":{}}}],["removed",{"_index":1729,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["removed.field",{"_index":1986,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["removeerror",{"_index":1675,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["removeerror(identifier",{"_index":1717,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["removefield",{"_index":1240,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["removefield(event",{"_index":1283,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["removefield(field",{"_index":2993,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["removeitemfromarray",{"_index":1128,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["removeitemfromarray(item",{"_index":1161,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["removemappedfield",{"_index":3332,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["removemappedfield(mappedfield",{"_index":3007,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["removemapping",{"_index":3076,"title":{},"body":{"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{}}}],["removemapping(event",{"_index":3133,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["removemapping(m",{"_index":3100,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["removenamespace",{"_index":3835,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["removenamespace(ns",{"_index":3848,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["removestalemappings",{"_index":3656,"title":{},"body":{"classes/MappingUtil.html":{}}}],["removestalemappings(cfg",{"_index":3666,"title":{},"body":{"classes/MappingUtil.html":{}}}],["removetablebyname",{"_index":3077,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["removetablebyname(name",{"_index":3102,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["removetoken(lastfieldrefremoved",{"_index":1982,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["replace",{"_index":2002,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["replaced",{"_index":4815,"title":{},"body":{"license.html":{}}}],["repo",{"_index":4515,"title":{},"body":{"index.html":{}}}],["represent",{"_index":4617,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":4637,"title":{},"body":{"license.html":{}}}],["representing",{"_index":3198,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["reproduce",{"_index":4665,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":4749,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":4556,"title":{},"body":{"license.html":{}}}],["request",{"_index":55,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["requested",{"_index":4114,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["requests",{"_index":73,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["required",{"_index":472,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/ExampleAppModule.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"license.html":{}}}],["requires",{"_index":1942,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["res",{"_index":2553,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["reset",{"_index":996,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"injectables/FileManagementService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["resetall",{"_index":1676,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ToolbarComponent.html":{}}}],["resetlibs",{"_index":2447,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["resetmappings",{"_index":2448,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["resetting",{"_index":2554,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["resolve",{"_index":680,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["resolve(bytes",{"_index":4150,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["resolve(false",{"_index":2233,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["resolve(filebody",{"_index":1203,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["resolve(true",{"_index":1208,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["respective",{"_index":2152,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["response",{"_index":2264,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["responsetype",{"_index":2542,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["responsibility",{"_index":4801,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":4758,"title":{},"body":{"license.html":{}}}],["restart",{"_index":2486,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["result",{"_index":88,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.push(fieldsbypath[name",{"_index":2975,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["resultfields",{"_index":3020,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["resultfields.push(mappedfield",{"_index":3021,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["resultfields.shift",{"_index":3022,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["resulting",{"_index":4599,"title":{},"body":{"license.html":{}}}],["results",{"_index":90,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":4707,"title":{},"body":{"license.html":{}}}],["retrieve",{"_index":2469,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["return",{"_index":22,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["returned",{"_index":2231,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["returnedcomponent",{"_index":1375,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["returning",{"_index":4131,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["returns",{"_index":34,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/FieldAction.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["revisions",{"_index":4615,"title":{},"body":{"license.html":{}}}],["revisit",{"_index":1697,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["right",{"_index":277,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["right:3px",{"_index":531,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["right_bracket",{"_index":3909,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["rights",{"_index":4797,"title":{},"body":{"license.html":{}}}],["risks",{"_index":4764,"title":{},"body":{"license.html":{}}}],["root",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["root'},{'name",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["routermodule",{"_index":1814,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["routermodule.forroot",{"_index":1819,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["routines",{"_index":2901,"title":{},"body":{"classes/LookupTableUtil.html":{},"classes/MappingUtil.html":{}}}],["row",{"_index":560,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["row.maindisplay",{"_index":564,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["row.modalwindow",{"_index":562,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["rows",{"_index":3544,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["rowtitles",{"_index":3543,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["royalty",{"_index":4662,"title":{},"body":{"license.html":{}}}],["run",{"_index":4505,"title":{},"body":{"index.html":{}}}],["running",{"_index":4537,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":2226,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["rxjs",{"_index":48,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":2519,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["safestyle",{"_index":1271,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["same",{"_index":1594,"title":{},"body":{"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"license.html":{}}}],["samenameddefs",{"_index":2307,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["samenameddefs.push(fieldactionconfig",{"_index":2310,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["sanitizer",{"_index":1247,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["save",{"_index":296,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/FileManagementService.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["saveas",{"_index":1194,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["saveas(filecontent",{"_index":1207,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["saver",{"_index":1195,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["savetable",{"_index":2838,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["saving",{"_index":2498,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["schema",{"_index":2460,"title":{},"body":{"injectables/FileManagementService.html":{},"miscellaneous/enumerations.html":{}}}],["schemas",{"_index":1035,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["scope",{"_index":1702,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["scoped",{"_index":1685,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["screen",{"_index":502,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["scroll",{"_index":2731,"title":{},"body":{"classes/LineModel.html":{}}}],["search",{"_index":3419,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["search(searchfilter",{"_index":3522,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchboxicon",{"_index":3549,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchfilter",{"_index":3320,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchmode",{"_index":3491,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchresults",{"_index":3492,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchresultsvisible",{"_index":3503,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchshown",{"_index":3539,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["second",{"_index":743,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["seconds",{"_index":859,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["section",{"_index":3388,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"license.html":{}}}],["section'},{'name",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["section.component",{"_index":1083,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingSelectionComponent.html":{}}}],["section.component.html",{"_index":3621,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts",{"_index":3620,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{},"coverage.html":{}}}],["section.component.ts:27",{"_index":3631,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:28",{"_index":3630,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:29",{"_index":3634,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:30",{"_index":3633,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:31",{"_index":3635,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:32",{"_index":3632,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:33",{"_index":3629,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:35",{"_index":3636,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:46",{"_index":3639,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:53",{"_index":3637,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:64",{"_index":3640,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["sectioncomponents",{"_index":3580,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["sections",{"_index":4560,"title":{},"body":{"license.html":{}}}],["see",{"_index":485,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"components/MappingFieldContainerComponent.html":{},"index.html":{},"license.html":{}}}],["select",{"_index":585,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["select#separator').combobox({clearifnomatch",{"_index":4331,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["select#separator').on('change",{"_index":4332,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selecte",{"_index":2401,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["selected",{"_index":1243,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selected.targetvalue",{"_index":2874,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedactionindex",{"_index":3300,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["selectedactionname",{"_index":3299,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selectedargvalname",{"_index":3254,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["selectedcallback",{"_index":3627,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["selectedelement",{"_index":2695,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedelement.nodename",{"_index":2697,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedfield",{"_index":1357,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingSelectionComponent.html":{}}}],["selectedfield.issource",{"_index":3618,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selectedfieldissource",{"_index":3628,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["selectedfile",{"_index":4128,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["selectedicon",{"_index":3550,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["selectedlineattrs",{"_index":2678,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedlineattrs[1].nodevalue",{"_index":2682,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedlineattrs[2].nodevalue",{"_index":2684,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedlineattrs[3].nodevalue",{"_index":2686,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedlineattrs[4].nodevalue",{"_index":2688,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedmappingcomponent",{"_index":3581,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selectedmappingselectionsection",{"_index":3642,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["selectednamespace",{"_index":3829,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["selectedoptions",{"_index":2879,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedoptions.length",{"_index":2881,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedoptions[0].label",{"_index":2882,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedroot",{"_index":873,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["selectedsourcefield",{"_index":2157,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["selectedsourcefield.type",{"_index":2320,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["selectedtargetenumvalue",{"_index":2854,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedtargetfield",{"_index":2163,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["selectedtargetfield.type",{"_index":2323,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["selectedtype",{"_index":2183,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["selectedvalue",{"_index":4335,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["selection'},{'name",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component",{"_index":1082,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingDetailComponent.html":{}}}],["selection.component.html",{"_index":3579,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts",{"_index":3578,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:101",{"_index":4322,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:105",{"_index":4319,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:117",{"_index":4324,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:141",{"_index":4320,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:156",{"_index":4318,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:180",{"_index":4321,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:32",{"_index":3598,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:33",{"_index":3597,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:34",{"_index":3601,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:35",{"_index":3596,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:36",{"_index":4317,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:37",{"_index":3600,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:38",{"_index":4316,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:39",{"_index":3602,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:40",{"_index":4325,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:41",{"_index":3593,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:42",{"_index":4323,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:45",{"_index":3590,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:49",{"_index":3595,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:57",{"_index":3589,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:65",{"_index":3586,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:70",{"_index":3591,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:74",{"_index":3592,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selectionchanged",{"_index":3333,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{}}}],["selectionchanged(c",{"_index":3594,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selectionchanged(event",{"_index":3361,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["selectmapping",{"_index":3129,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/MappingListComponent.html":{}}}],["selectmapping(field",{"_index":3135,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["selectmapping(mapping",{"_index":3525,"title":{},"body":{"components/MappingListComponent.html":{}}}],["selectnamespace",{"_index":3836,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["selectnamespace(ns",{"_index":3852,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["selector",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["self",{"_index":1377,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ToolbarComponent.html":{}}}],["self.cfg",{"_index":3152,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["self.cfg.mappingservice.notifymappingupdated",{"_index":1406,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["self.cfg.mappingservice.removefieldfromallmappings(self.field",{"_index":1413,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.cfg.mappingservice.selectmapping(mapping",{"_index":3157,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["self.cfg.mappingservice.selectmapping(null",{"_index":3159,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["self.field.copyfrom(newfield",{"_index":1404,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.field.docdef.removefield(self.field",{"_index":1414,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.field.docdef.updatefield(self.field",{"_index":1405,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.field.issource",{"_index":1396,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.getselectedmappingcomponent",{"_index":3605,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["self.selectedmappingcomponent",{"_index":3608,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["sell",{"_index":4673,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1274,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["semicolon",{"_index":4243,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["send",{"_index":2615,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["sent",{"_index":4636,"title":{},"body":{"license.html":{}}}],["separable",{"_index":4621,"title":{},"body":{"license.html":{}}}],["separate",{"_index":755,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/FileManagementService.html":{},"license.html":{}}}],["separately",{"_index":2483,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["separator",{"_index":3948,"title":{},"body":{"classes/NamespaceModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["sequence",{"_index":1838,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{}}}],["sequential",{"_index":3201,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["serializedvalue",{"_index":4224,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["serializer",{"_index":1098,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["serializer.ts",{"_index":4446,"title":{},"body":{"coverage.html":{}}}],["server",{"_index":2470,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["service",{"_index":649,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["serviceobject",{"_index":1527,"title":{},"body":{"classes/EnumValue.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["services",{"_index":642,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["services/api",{"_index":1091,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["services/document",{"_index":628,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/error",{"_index":626,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/ModalErrorDetailComponent.html":{},"classes/TextNode.html":{}}}],["services/field",{"_index":854,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/file",{"_index":857,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/initialization.service",{"_index":631,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/mapping",{"_index":630,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/types",{"_index":1089,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["set",{"_index":920,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["setargumentvalue",{"_index":2059,"title":{},"body":{"classes/FieldAction.html":{}}}],["setargumentvalue(argumentname",{"_index":2070,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["setbinaryfiletoservice",{"_index":2449,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["setbinaryfiletoservice(compressedbuffer",{"_index":2493,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["setcfg(cfg",{"_index":2511,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["setconfig(cfg",{"_index":919,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["setconfigmodel(cfg",{"_index":1893,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["seterrors",{"_index":3745,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["seterrors(errors",{"_index":3754,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["setlinebeingformed(l",{"_index":2713,"title":{},"body":{"classes/LineModel.html":{}}}],["setmappingtoservice",{"_index":2450,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["setmappingtoservice(jsonbuffer",{"_index":2500,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["settimeout",{"_index":428,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["shall",{"_index":4558,"title":{},"body":{"license.html":{}}}],["share",{"_index":4173,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["shares",{"_index":4589,"title":{},"body":{"license.html":{}}}],["short",{"_index":345,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["shortest",{"_index":4513,"title":{},"body":{"index.html":{}}}],["show",{"_index":722,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["showactiveerrors",{"_index":712,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["showdetails",{"_index":4169,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["showfields",{"_index":870,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["showlines",{"_index":4172,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["showlinesalways",{"_index":891,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["showlookuptable",{"_index":4315,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["showmappedfields",{"_index":893,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["showmappingdetailtray",{"_index":888,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["showmappingpreview",{"_index":925,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["showmappingpreview(show",{"_index":921,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["showmappingtable",{"_index":889,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["shownamespacetable",{"_index":890,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["showtypes",{"_index":892,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/NamespaceModel.html":{},"components/ToolbarComponent.html":{}}}],["showunmappedfields",{"_index":894,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["sign",{"_index":4261,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["signal",{"_index":2746,"title":{},"body":{"classes/LineModel.html":{}}}],["simplifies",{"_index":4502,"title":{},"body":{"index.html":{}}}],["simply",{"_index":3218,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["sizing",{"_index":593,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["skip",{"_index":4524,"title":{},"body":{"index.html":{}}}],["skipped",{"_index":682,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["slash",{"_index":4244,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["software",{"_index":477,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["sole",{"_index":4800,"title":{},"body":{"license.html":{}}}],["solely",{"_index":4757,"title":{},"body":{"license.html":{}}}],["solution",{"_index":4499,"title":{},"body":{"index.html":{}}}],["something",{"_index":3245,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["somethingtoshow",{"_index":3746,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["somewhere",{"_index":1314,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["sort",{"_index":3452,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["sortedactiondefinitions",{"_index":2302,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["sortedactiondefinitions.push(fieldactiondefinition",{"_index":2312,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["sortfieldactiondefinitions",{"_index":2144,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["sortmappedfieldsbypath",{"_index":2942,"title":{},"body":{"classes/MappedField.html":{}}}],["sortmappedfieldsbypath(mappedfields",{"_index":2951,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["source/target",{"_index":1319,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/FieldActionService.html":{},"classes/NamespaceModel.html":{}}}],["source/target/mapping",{"_index":994,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["sourcedocmap",{"_index":3678,"title":{},"body":{"classes/MappingUtil.html":{}}}],["sourcedocs",{"_index":900,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["sourceenumvalue",{"_index":2852,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["sourcefield",{"_index":2864,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["sourcefield.enumvalues",{"_index":2866,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["sourcefieldpaths",{"_index":3663,"title":{},"body":{"classes/MappingUtil.html":{}}}],["sourcefields",{"_index":2977,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["sourceiconcssclass",{"_index":3424,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["sourceidentifier",{"_index":2793,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappingDefinition.html":{}}}],["sources",{"_index":983,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/LineModel.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"index.html":{}}}],["sourcesheader",{"_index":3127,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["sourcetype",{"_index":2081,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["sourcevalue",{"_index":2806,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["sourcex",{"_index":2648,"title":{},"body":{"classes/LineModel.html":{}}}],["sourcey",{"_index":2649,"title":{},"body":{"classes/LineModel.html":{}}}],["space",{"_index":1148,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["spaces",{"_index":4270,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["special",{"_index":2217,"title":{},"body":{"injectables/FieldActionService.html":{},"license.html":{}}}],["specific",{"_index":486,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"components/MappingFieldActionArgumentComponent.html":{},"license.html":{}}}],["specified",{"_index":678,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["specify",{"_index":3248,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["specifying",{"_index":1719,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["spinner",{"_index":525,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["split",{"_index":1168,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/ErrorHandlerService.html":{}}}],["splitbystring",{"_index":1129,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["splitbystring(instr",{"_index":1165,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["splitmarker",{"_index":1166,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["spring",{"_index":4533,"title":{},"body":{"index.html":{}}}],["src",{"_index":1605,"title":{},"body":{"classes/EnumValue.html":{}}}],["src/.../config.types.ts",{"_index":4486,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../data",{"_index":4829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.dev.ts",{"_index":4830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":4831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.trace.ts",{"_index":4833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":4832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error.model.ts",{"_index":4487,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../field",{"_index":4488,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transition.model.ts",{"_index":4489,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.ts",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/atlasmap",{"_index":4370,"title":{},"body":{"coverage.html":{}}}],["src/app/example",{"_index":1811,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["src/app/lib/atlasmap",{"_index":6,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.dev.ts",{"_index":4449,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":4450,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.trace.ts",{"_index":4451,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":4452,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stand",{"_index":691,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["standalone",{"_index":686,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"index.html":{}}}],["standard",{"_index":4347,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["start",{"_index":3321,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"index.html":{}}}],["startdrag",{"_index":1241,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["startdrag(event",{"_index":1285,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["started",{"_index":4497,"title":{"index.html":{},"license.html":{}},"body":{}}],["startoffset",{"_index":1897,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["state",{"_index":887,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"license.html":{}}}],["stated",{"_index":4671,"title":{},"body":{"license.html":{}}}],["statement",{"_index":4729,"title":{},"body":{"license.html":{}}}],["statements",{"_index":4368,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":875,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["stating",{"_index":4705,"title":{},"body":{"license.html":{}}}],["stay",{"_index":740,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["stock",{"_index":12,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/TransitionSelectionComponent.html":{}}}],["stoppage",{"_index":4782,"title":{},"body":{"license.html":{}}}],["storage",{"_index":78,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["store",{"_index":644,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["store.find(e",{"_index":1754,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["store.unshift(error",{"_index":1756,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["stored",{"_index":1644,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{}}}],["storeerrors",{"_index":3504,"title":{},"body":{"components/MappingListComponent.html":{}}}],["storeerrors(errors",{"_index":3527,"title":{},"body":{"components/MappingListComponent.html":{}}}],["str",{"_index":1174,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["str2bytes",{"_index":1130,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["str2bytes(str",{"_index":1171,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["stream",{"_index":2200,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["string",{"_index":36,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["strip",{"_index":3947,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["stroke",{"_index":2650,"title":{},"body":{"classes/LineModel.html":{}}}],["style",{"_index":2651,"title":{},"body":{"classes/LineModel.html":{}}}],["style:italic",{"_index":591,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["styles",{"_index":353,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["styleurls",{"_index":362,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["subject",{"_index":1443,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{},"license.html":{}}}],["sublicense",{"_index":4668,"title":{},"body":{"license.html":{}}}],["submission",{"_index":4731,"title":{},"body":{"license.html":{}}}],["submit",{"_index":4630,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":4628,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1677,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["subscribe(observer",{"_index":1723,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["subscriber",{"_index":1921,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["subscription",{"_index":398,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingListComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["subsequently",{"_index":4653,"title":{},"body":{"license.html":{}}}],["substring",{"_index":1169,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["such",{"_index":4580,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":4213,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["super",{"_index":3902,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["super(fieldnode.prefix",{"_index":1864,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["super(textnode.prefix",{"_index":1859,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["supersede",{"_index":4737,"title":{},"body":{"license.html":{}}}],["supersedes",{"_index":4330,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["support",{"_index":1275,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{},"modules.html":{}}}],["supported",{"_index":4047,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["supports",{"_index":4200,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["supposed",{"_index":1656,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["sure",{"_index":1411,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["svg",{"_index":607,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules.html":{}}}],["svgstyle",{"_index":2668,"title":{},"body":{"classes/LineModel.html":{}}}],["switch",{"_index":4280,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["switched",{"_index":1652,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["syndesis",{"_index":4509,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":1968,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"license.html":{}}}],["system",{"_index":694,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["systeminitializedsubscription",{"_index":377,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["systems",{"_index":4640,"title":{},"body":{"license.html":{}}}],["t",{"_index":2929,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["t.name",{"_index":2934,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["t.sourceidentifier",{"_index":2931,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["t.targetidentifier",{"_index":2932,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["table",{"_index":2828,"title":{},"body":{"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["table.component",{"_index":1085,"title":{},"body":{"modules/DataMapperModule.html":{},"components/TransitionSelectionComponent.html":{}}}],["table.component.html",{"_index":2836,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["table.component.ts",{"_index":2835,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"coverage.html":{}}}],["table.component.ts:28",{"_index":2890,"title":{},"body":{"classes/LookupTableData.html":{}}}],["table.component.ts:29",{"_index":2891,"title":{},"body":{"classes/LookupTableData.html":{}}}],["table.component.ts:30",{"_index":2889,"title":{},"body":{"classes/LookupTableData.html":{}}}],["table.component.ts:39",{"_index":2846,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:41",{"_index":2849,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:42",{"_index":2845,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:44",{"_index":2848,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:46",{"_index":2841,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:75",{"_index":2842,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:79",{"_index":2839,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:83",{"_index":2843,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.entries",{"_index":4359,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["table.entries.length",{"_index":4360,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["table.getinputoutputkey",{"_index":3116,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["table.model",{"_index":2851,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/TransitionSelectionComponent.html":{}}}],["table.model.ts",{"_index":2792,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"coverage.html":{}}}],["table.model.ts:18",{"_index":2894,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:19",{"_index":2893,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:20",{"_index":2896,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:21",{"_index":2895,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:23",{"_index":2898,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:32",{"_index":2897,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:41",{"_index":2801,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:42",{"_index":2800,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:43",{"_index":2802,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:44",{"_index":2798,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:50",{"_index":2807,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:54",{"_index":2805,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:69",{"_index":2808,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.name",{"_index":2928,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["table.sourceidentifier",{"_index":2925,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["table.targetidentifier",{"_index":2926,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["tabledata",{"_index":2867,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["tabledata.selectedtargetenumvalue",{"_index":2873,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["tabledata.sourceenumvalue",{"_index":2868,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["tabledata.targetenumvalues",{"_index":2870,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["tablename",{"_index":4356,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["tables",{"_index":3066,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["tables.push(table",{"_index":3114,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["tablesbyname",{"_index":3067,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["tablesbysourcetargetkey",{"_index":3068,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":4453,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":671,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["tack",{"_index":4212,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["target",{"_index":1606,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["target'.includes(filter",{"_index":3868,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["targetdoc",{"_index":4202,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["targetdoc.type",{"_index":4205,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["targetdocmap",{"_index":3680,"title":{},"body":{"classes/MappingUtil.html":{}}}],["targetdocs",{"_index":901,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["targetenabled",{"_index":3808,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["targetenumvalue",{"_index":2888,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["targetenumvalues",{"_index":2853,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetfield",{"_index":2316,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/NamespaceModel.html":{}}}],["targetfield.enumvalues",{"_index":2858,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetfield.name",{"_index":2318,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/NamespaceModel.html":{}}}],["targetfielddocdeftype",{"_index":3928,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["targetfieldnode.field",{"_index":1991,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetfields",{"_index":2978,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["targetidentifier",{"_index":2794,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappingDefinition.html":{}}}],["targetindex",{"_index":3475,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["targetnode",{"_index":1900,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetnode.str",{"_index":1907,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetnode.str.replace(targetnode.str.substring(startoffset",{"_index":1911,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetnode.str.substring(0",{"_index":1908,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetnodeindex",{"_index":1901,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targets",{"_index":984,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/LineModel.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["targetsourcepaths",{"_index":3664,"title":{},"body":{"classes/MappingUtil.html":{}}}],["targetstring",{"_index":1995,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetstring.substr(1",{"_index":1996,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetstring.substring(0",{"_index":1997,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetstring.substring(offset",{"_index":1998,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetsupportstemplate",{"_index":4083,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["targettoggled",{"_index":3809,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["targettype",{"_index":610,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["targetvalue",{"_index":2809,"title":{},"body":{"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{}}}],["targetvalues",{"_index":2856,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetvalues.push",{"_index":2857,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetvalues.push(e.name",{"_index":2859,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetx",{"_index":2652,"title":{},"body":{"classes/LineModel.html":{}}}],["targety",{"_index":2653,"title":{},"body":{"classes/LineModel.html":{}}}],["template",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["templatecomponent",{"_index":4208,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["templatecomponent.templatetext",{"_index":4209,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["templateeditcomponent",{"_index":183,"title":{"components/TemplateEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["templateexists",{"_index":3078,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["templatetext",{"_index":3069,"title":{},"body":{"classes/MappingDefinition.html":{},"components/TemplateEditComponent.html":{}}}],["templateurl",{"_index":195,"title":{},"body":{"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["terminal",{"_index":3980,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["terminalfields",{"_index":3916,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["terminate",{"_index":4693,"title":{},"body":{"license.html":{}}}],["terminating",{"_index":2003,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["terms",{"_index":4555,"title":{},"body":{"license.html":{}}}],["test",{"_index":1827,"title":{},"body":{"classes/Examples.html":{}}}],["test.model",{"_index":1824,"title":{},"body":{"classes/Examples.html":{}}}],["tests",{"_index":4525,"title":{},"body":{"index.html":{}}}],["text",{"_index":522,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["text.indexof",{"_index":2039,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["text.length",{"_index":2045,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["text.search(/\\$\\{[0",{"_index":2034,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["text.substring(text.indexof",{"_index":2044,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textarea",{"_index":587,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["textcache",{"_index":1876,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textinput",{"_index":3269,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["textnode",{"_index":1855,"title":{"classes/TextNode.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["textnode(post",{"_index":1957,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textnode(text",{"_index":2046,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textnode(text.substring(0",{"_index":2036,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textnode).str",{"_index":1939,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textnode).str.length",{"_index":1973,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["that.cfg.errorservice.error('the",{"_index":4350,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.cfg.mappingservice.notifymappingupdated",{"_index":4339,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.cfg.mappingservice.updatemappedfield(that.fieldpair",{"_index":4355,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.children",{"_index":1612,"title":{},"body":{"classes/EnumValue.html":{}}}],["that.docdef",{"_index":1611,"title":{},"body":{"classes/EnumValue.html":{}}}],["that.fieldpair.transition.delimiter",{"_index":4353,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.fieldpair.transition.userdelimiter",{"_index":4354,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.mapping.transition.delimiter",{"_index":4337,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.mapping.transition.userdelimiter",{"_index":4342,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.parentfield",{"_index":1610,"title":{},"body":{"classes/EnumValue.html":{}}}],["that.serviceobject",{"_index":1609,"title":{},"body":{"classes/EnumValue.html":{}}}],["themselves",{"_index":444,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["then((fetchedactionconfigs",{"_index":2228,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["then(async(result",{"_index":2596,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["theory",{"_index":4767,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":4624,"title":{},"body":{"license.html":{}}}],["they've",{"_index":3244,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["third",{"_index":4718,"title":{},"body":{"license.html":{}}}],["this).find('option:selected",{"_index":4334,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this).find('option:selected').val(that.mapping.transition.userdelimiter",{"_index":4345,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this).val",{"_index":4341,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this).val(that.mapping.transition.userdelimiter).trigger('input",{"_index":4346,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this._cfg",{"_index":2520,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this._cfg.logger",{"_index":2522,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this._identifier",{"_index":1803,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["this._issource",{"_index":3905,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this._nodes",{"_index":1883,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.filter(n",{"_index":2014,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.find(n",{"_index":1891,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.foreach(node",{"_index":2029,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.indexof(lastnode",{"_index":1906,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.indexof(node",{"_index":2017,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.indexof(targetnode",{"_index":1909,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.length",{"_index":1885,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.pop",{"_index":1984,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.push(...newnodes",{"_index":1936,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.push(lastnode",{"_index":2048,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.push(new",{"_index":2050,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(index",{"_index":2018,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(lastaddedindex",{"_index":1970,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(nextnodeindex",{"_index":1981,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(targetnodeindex",{"_index":1959,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(this.getlastnodeindex",{"_index":1941,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[index",{"_index":2019,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[lastaddedindex",{"_index":1961,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[nextnodeindex",{"_index":1977,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[targetnodeindex",{"_index":1993,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[this.getlastnodeindex",{"_index":1887,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._showmappingpreview",{"_index":922,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this._type",{"_index":3922,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.action",{"_index":3230,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.actionconfigparamselectionchanged(event",{"_index":3233,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.actions",{"_index":2247,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.actions[action.multiplicity].push(action",{"_index":2237,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.actions[fieldactiondefinition.multiplicity].push(fieldactiondefinition",{"_index":2219,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.actions[m",{"_index":2333,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.actions[multiplicity",{"_index":2248,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.actions[multiplicity].filter(d",{"_index":2253,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.activemapping",{"_index":3120,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.actualdelimiter",{"_index":4250,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.adderror(new",{"_index":1774,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.addline(l",{"_index":2709,"title":{},"body":{"classes/LineModel.html":{}}}],["this.addlinefromparams('0",{"_index":2777,"title":{},"body":{"classes/LineModel.html":{}}}],["this.alias",{"_index":3898,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.allfields",{"_index":3995,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.allfields.push(field",{"_index":4030,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.alphabetizefields(field.children",{"_index":1568,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.appendfieldnode(f",{"_index":1880,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.appendfieldnode(mfield",{"_index":2024,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.appliestofield(d",{"_index":2254,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.appliestosourcefield(action",{"_index":2314,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.appliestotargetfield(action",{"_index":2315,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.arguments",{"_index":2091,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.argumentvalues",{"_index":2103,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.argumentvalues.push(newargvalue",{"_index":2108,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.buttonclicked(false",{"_index":1499,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cancelbuttonhandler",{"_index":1509,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cancelbuttonhandler(this",{"_index":1517,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cfg",{"_index":764,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"classes/TextNode.html":{}}}],["this.cfg.cleardocs",{"_index":2613,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.currentdraggedfield",{"_index":1307,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["this.cfg.currentdraggedfield.issource",{"_index":1325,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.currentdraggedfield.selected",{"_index":1330,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.documentservice.processdocument(event.target.files[0",{"_index":4164,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.errorservice.adderror(new",{"_index":1999,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.errorservice.clearallerrors",{"_index":3771,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.cfg.errorservice.clearfielderrors",{"_index":3237,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.cfg.errorservice.clearformerrors",{"_index":1512,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cfg.errorservice.clearvalidationerrors",{"_index":3155,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.errorservice.createformerrorchannel",{"_index":1496,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cfg.errorservice.isrequiredfieldvalid(this.userclassname",{"_index":246,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["this.cfg.errorservice.resetall",{"_index":4159,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.errorservice.subscribe(errors",{"_index":3536,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.cfg.fieldactionservice.getactiondefinitionforname(selectedactionname",{"_index":3304,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.fieldactionservice.getactionsappliestofield(this.mapping",{"_index":3295,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.fileservice.exportmappingscatalog(filename",{"_index":4218,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.fileservice.importadmcatalog(selectedfile",{"_index":4167,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.fileservice.resetlibs().topromise().then",{"_index":4162,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.fileservice.resetmappings().topromise().then",{"_index":4161,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.getalldocs",{"_index":2582,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.getfirstxmldoc(false).namespaces",{"_index":3858,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.cfg.getfirstxmldoc(false).namespaces.push(newnamespace",{"_index":3866,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.cfg.initcfg.basemappingserviceurl",{"_index":2224,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["this.cfg.initcfg.initialized",{"_index":2633,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/LineModel.html":{}}}],["this.cfg.initcfg.xsrfdefaulttokenvalue",{"_index":54,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["this.cfg.initcfg.xsrfheadername",{"_index":79,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["this.cfg.initializationservice.initialize",{"_index":2614,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.initializationservice.systeminitializedsource.next",{"_index":4195,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.initializationservice.updateloadingstatus('importing",{"_index":4166,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.isdebugenabled",{"_index":2274,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.istraceenabled",{"_index":2262,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["this.cfg.logger.debug(`deserializing",{"_index":2275,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.logger.trace('field",{"_index":2258,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.logger.trace('mapping",{"_index":2524,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.logger.trace('set",{"_index":2562,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.logger.trace(`field",{"_index":2263,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.logger.trace(`mapping",{"_index":2525,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.logger.trace(`set",{"_index":2563,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappingfiles",{"_index":2621,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappingfiles.length",{"_index":2632,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappingfiles[0",{"_index":2616,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappings",{"_index":771,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.activemapping",{"_index":772,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.mappings.activemapping.getfields(this.field.issource()).includes(this.field",{"_index":1420,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.mappings.activemapping.islookupmode",{"_index":3143,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappings.activemapping.transition",{"_index":4180,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.activemapping.transition.enableexpression",{"_index":4181,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.findmappingsforfield(field",{"_index":3149,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappings.getallmappings(true",{"_index":3557,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.cfg.mappings.gettablebyname(tablename",{"_index":4358,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this.cfg.mappings.mappings",{"_index":2736,"title":{},"body":{"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.cfg.mappings.name",{"_index":2617,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappings.removetablebyname(activemapping.transition.lookuptablename",{"_index":3146,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappings.templateexists",{"_index":4171,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.templatetext",{"_index":4210,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappingservice",{"_index":2222,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.mappingservice.addnewmapping(null",{"_index":4185,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappingservice.addnewmapping(this.selectedfield",{"_index":3613,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.cfg.mappingservice.addplaceholders(insertionindex",{"_index":3478,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.fieldselected(event.item['field",{"_index":3420,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.cfg.mappingservice.fieldselected(targetfield",{"_index":2699,"title":{},"body":{"classes/LineModel.html":{}}}],["this.cfg.mappingservice.fieldselected(this.cfg.currentdraggedfield",{"_index":1331,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.fieldselected(this.field",{"_index":1334,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.linerefresh$.subscribe",{"_index":2674,"title":{},"body":{"classes/LineModel.html":{}}}],["this.cfg.mappingservice.mappingselectionrequired$.subscribe((field",{"_index":3140,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappingservice.movemappedfieldto(this.mapping",{"_index":3400,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.notifylinerefresh",{"_index":1369,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.notifymappingupdated",{"_index":3232,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.mappingservice.removeallmappings",{"_index":4207,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappingservice.removemapping(activemapping",{"_index":3147,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappingservice.selectmapping(mapping",{"_index":3542,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.cfg.mappingservice.toggleexpressionmode",{"_index":4189,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappingservice.updatemappedfield(this.mapping",{"_index":3422,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["this.cfg.preloadedfieldactionmetadata",{"_index":2206,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.preloadedfieldactionmetadata.actiondetails",{"_index":2208,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.preloadedfieldactionmetadata.actiondetails.actiondetail",{"_index":2209,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.showlinesalways",{"_index":2776,"title":{},"body":{"classes/LineModel.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.showmappedfields",{"_index":1344,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.showmappingdetailtray",{"_index":3148,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.showmappingpreview",{"_index":4186,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.showmappingtable",{"_index":4175,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.shownamespacetable",{"_index":4176,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.showtypes",{"_index":4184,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.showunmappedfields",{"_index":1345,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.targetdocs[0",{"_index":4203,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.checkfieldeligibiltyforlinedrawing(inputfield",{"_index":2762,"title":{},"body":{"classes/LineModel.html":{}}}],["this.checkfieldeligibiltyforlinedrawing(outputfield",{"_index":2771,"title":{},"body":{"classes/LineModel.html":{}}}],["this.checkiconenabled",{"_index":3231,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.children",{"_index":1602,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.children.push(childfield.copy",{"_index":1613,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.classidentifier",{"_index":3903,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.clearactiondefinitions",{"_index":2207,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.clearallerrors",{"_index":1762,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.clearlines",{"_index":2730,"title":{},"body":{"classes/LineModel.html":{}}}],["this.clearmappings",{"_index":4187,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.close",{"_index":1518,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.collapsed",{"_index":273,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["this.complexfieldsbyclassidentifier",{"_index":3998,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.complexfieldsbyclassidentifier.hasownproperty(key",{"_index":4038,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.complexfieldsbyclassidentifier[classidentifier",{"_index":3924,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.complexfieldsbyclassidentifier[field.classidentifier",{"_index":4048,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.complexfieldsbyclassidentifier[key",{"_index":4039,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.nestedcomponenttype",{"_index":1487,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.componentloaded",{"_index":1474,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.confirmbuttondisabled",{"_index":1503,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.confirmbuttontext",{"_index":1504,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.constantdoc.clearfields",{"_index":1000,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc.issource",{"_index":916,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc.name",{"_index":914,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc.showfields",{"_index":917,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc.type",{"_index":913,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc].concat(docs",{"_index":981,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc].concat(this.sourcedocs).concat(this.targetdocs",{"_index":1016,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.createlinestyle(l",{"_index":2711,"title":{},"body":{"classes/LineModel.html":{}}}],["this.data",{"_index":2876,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.datasource",{"_index":2366,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["this.delimiter",{"_index":4247,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.delimiters",{"_index":3226,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.detector.detectchanges",{"_index":429,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.diff",{"_index":3382,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.discovercomplexfields(field.children",{"_index":4049,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.discovercomplexfields(fields",{"_index":4037,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.displayname",{"_index":3904,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.docdef",{"_index":244,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.docdef.fieldexists(this.getfield",{"_index":332,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.docdef.getallfields",{"_index":2404,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.docdef.ispropertyorconstant",{"_index":1633,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.docdef.issource",{"_index":1622,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.docdef.type",{"_index":1634,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{}}}],["this.docdefinput",{"_index":2765,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefinput.handlescroll(null",{"_index":2734,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefoutput",{"_index":2733,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefoutput.getfielddetailcomponentposition(component.field).y",{"_index":2724,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefoutput.handlescroll(null",{"_index":2735,"title":{},"body":{"classes/LineModel.html":{}}}],["this.dofetchfieldactions().topromise",{"_index":2227,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.drawcurrentline('100",{"_index":2725,"title":{},"body":{"classes/LineModel.html":{}}}],["this.drawcurrentline(event.offsetx.tostring",{"_index":2718,"title":{},"body":{"classes/LineModel.html":{}}}],["this.drawingline",{"_index":2716,"title":{},"body":{"classes/LineModel.html":{}}}],["this.drawlinesformapping(activemapping",{"_index":2741,"title":{},"body":{"classes/LineModel.html":{}}}],["this.drawlinesformapping(m",{"_index":2740,"title":{},"body":{"classes/LineModel.html":{}}}],["this.editmode",{"_index":2369,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.edittemplate",{"_index":4183,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.elem",{"_index":782,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["this.elem.onmouseup",{"_index":3395,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.elem.style.position",{"_index":3394,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.elem.style['top",{"_index":3384,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.elementref.nativeelement.focus",{"_index":2644,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.emitupdatedevent",{"_index":1757,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.emitupdatedevent(errorscope.form",{"_index":1769,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.enablecheck",{"_index":3261,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.entries",{"_index":2825,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.entries.length",{"_index":2829,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.entries.push(entry",{"_index":2827,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.enumeration",{"_index":1590,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.enumfieldsbyclassidentifier",{"_index":3999,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.enumfieldsbyclassidentifier[classidentifier",{"_index":3926,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.enumfieldsbyclassidentifier[field.classidentifier",{"_index":4032,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.errors",{"_index":767,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.errors.filter(e",{"_index":1765,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.errors.length",{"_index":3769,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.errorservice",{"_index":769,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.errorservice.removeerror(e.identifier",{"_index":778,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.errorservice.removeerror(error.identifier",{"_index":3741,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["this.errorservice.subscribe((errors",{"_index":766,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.errorsubscription",{"_index":765,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingListComponent.html":{}}}],["this.errorsubscription.unsubscribe",{"_index":768,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingListComponent.html":{}}}],["this.errorupdatedsource.next(this.errors",{"_index":1777,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.errorupdatedsource.subscribe(observer",{"_index":1770,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.excludebyidentifier(this.errors",{"_index":1761,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.excludebyidentifier(this.formerrors",{"_index":1760,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.expressionupdatedsource.asobservable",{"_index":1874,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.expressionupdatedsource.next",{"_index":1913,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.expressionupdatedsource.next(updatedevent",{"_index":1974,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.extractfieldactiondefinition(actiondetail",{"_index":2210,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.fade",{"_index":1501,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.field",{"_index":319,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{}}}],["this.field.collapsed",{"_index":1368,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.displayname",{"_index":323,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.docdef",{"_index":329,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.docdef.type",{"_index":1339,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.enumeration",{"_index":1335,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.field",{"_index":1868,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.field.field.name",{"_index":1869,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.field.fielddepth",{"_index":1415,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.hasunmappedchildren",{"_index":1352,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.isattribute",{"_index":1340,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{}}}],["this.field.iscollection",{"_index":1337,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.isconstant",{"_index":1384,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.isproperty",{"_index":1382,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.ispropertyorconstant",{"_index":1409,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.issource",{"_index":1324,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.field.isterminal",{"_index":1300,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.name",{"_index":325,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.name.length",{"_index":1419,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.namespacealias",{"_index":2378,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.field.parentfield",{"_index":2370,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.field.partofmapping",{"_index":1343,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.partoftransformation",{"_index":1346,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.path",{"_index":326,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.serviceobject.jsontype",{"_index":2411,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.field.type",{"_index":327,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.usercreated",{"_index":328,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.value",{"_index":324,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["this.fieldcomponents.toarray",{"_index":1374,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.fielddetailelement.nativeelement",{"_index":1363,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.fieldmode",{"_index":316,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.fieldpairmatchessearch(mapping",{"_index":3558,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.fieldpaths",{"_index":3974,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldpaths.push(field.path",{"_index":4029,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldpaths.sort",{"_index":3967,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fields",{"_index":3964,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fields.push(field",{"_index":3975,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath",{"_index":3997,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath[currentparentpath",{"_index":3954,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath[field.path",{"_index":4001,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath[fieldpath",{"_index":3942,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath[oldpath",{"_index":3972,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldtype",{"_index":2372,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.filedata",{"_index":4197,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.focus",{"_index":2642,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.focusel",{"_index":247,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["this.formerrors",{"_index":1753,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.formerrorupdatedsource",{"_index":1763,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.formerrorupdatedsource.closed",{"_index":1759,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.formerrorupdatedsource.complete",{"_index":1764,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.formerrorupdatedsource.next(this.formerrors",{"_index":1776,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.formerrorupdatedsource.subscribe",{"_index":1771,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.getactualfield(mapping",{"_index":2313,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.getalldocs",{"_index":1003,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.getallfields",{"_index":3930,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.getallmappedfields",{"_index":3035,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getargumentvalue(argumentname).value",{"_index":2109,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.getcollectionparentfield",{"_index":1617,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.getcomplexfield(field.classidentifier",{"_index":3984,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.getconfig().initcfg.loadingstatus",{"_index":427,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.getconfig().initializationservice.initializationstatuschanged$.subscribe",{"_index":425,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.getconfig().initializationservice.systeminitialized$.subscribe",{"_index":422,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.getconfig().sourcedocs",{"_index":432,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.getconfig().sourcedocs.length",{"_index":433,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.getconfig().targetdocs",{"_index":436,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.getconfig().targetdocs.length",{"_index":437,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.getcurrentadmcatalog().subscribe",{"_index":2598,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getcurrentmappingjson().topromise().then((result",{"_index":2618,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getdocs(issource",{"_index":1010,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.getdocswithoutpropertydoc(issource",{"_index":979,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.geterrors()[0",{"_index":791,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.getfield(fieldpath",{"_index":3938,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.getfields(field.getfieldpaths(fields",{"_index":3935,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.getfields(issource",{"_index":3029,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getfields(true).concat(this.getfields(false",{"_index":3038,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getjsonbuf",{"_index":2571,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getlastnode",{"_index":1890,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.getmappedfieldactions()[actionindex",{"_index":3262,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.getmappedfieldactions()[selectedactionindex",{"_index":3301,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["this.getmappedfieldforfield(field",{"_index":3042,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(field.issource",{"_index":2994,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(field.issource()).push(mappedfield",{"_index":2992,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(field.issource()).unshift(mappedfield",{"_index":2991,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(issource",{"_index":3012,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(issource).push(mappedfield",{"_index":3006,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(mappedfield.field.issource",{"_index":3009,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(mappedfield.field.issource()).indexof(mappedfield",{"_index":3015,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(true).concat(this.getmappedfields(false",{"_index":3040,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappingid",{"_index":2559,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getmappingid()).topromise",{"_index":2595,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getmappingid()).topromise().then",{"_index":2611,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getnamewithnamespace",{"_index":1628,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.getparentobjectname",{"_index":3482,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.getscreenposforfield(inputfield",{"_index":2764,"title":{},"body":{"classes/LineModel.html":{}}}],["this.getscreenposforfield(outputfield",{"_index":2774,"title":{},"body":{"classes/LineModel.html":{}}}],["this.getselectedmappingcomponent().mapping",{"_index":3615,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.getsourceiconcssclass",{"_index":3481,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.gettargetfieldfromline(selectedelement.attributes",{"_index":2698,"title":{},"body":{"classes/LineModel.html":{}}}],["this.getwarnings()[0",{"_index":792,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.handleerror('error",{"_index":2533,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.hasfocus",{"_index":2643,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.hassourcedoc",{"_index":431,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.hastargetdoc",{"_index":435,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.headers",{"_index":2260,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["this.headertext",{"_index":1506,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.htmlcache",{"_index":2026,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.http.delete(url",{"_index":2549,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.http.get(url",{"_index":2259,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["this.http.put(url",{"_index":2560,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.initcfg.classpath",{"_index":1006,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.initializationservice.cfg",{"_index":643,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["this.initializationservice.initialize",{"_index":695,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["this.initializationstatuschangedsubscription",{"_index":424,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.initializationstatuschangedsubscription.unsubscribe",{"_index":439,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.initialized",{"_index":3968,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.inputid",{"_index":3375,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.insertnodes([new",{"_index":2022,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.insertnodes(this.createnodesfromtext(str",{"_index":1928,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.isarray",{"_index":1624,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.isclosing",{"_index":322,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.iscollection",{"_index":1585,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.isdragdroptarget",{"_index":1326,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["this.isinitialized",{"_index":2221,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.isoddrow",{"_index":3643,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["this.isopen",{"_index":777,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.isprimitive",{"_index":1586,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.isproperty",{"_index":1630,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.ispropertyorconstant",{"_index":1629,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["this.issource",{"_index":3296,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.issource)[0",{"_index":3462,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.istarget",{"_index":3899,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.isxml",{"_index":2371,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.jsonbuffer",{"_index":2619,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.left_bracket",{"_index":4023,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.linebeingformed",{"_index":2714,"title":{},"body":{"classes/LineModel.html":{}}}],["this.linebeingformed.targetx",{"_index":2721,"title":{},"body":{"classes/LineModel.html":{}}}],["this.linebeingformed.targety",{"_index":2722,"title":{},"body":{"classes/LineModel.html":{}}}],["this.linemachine",{"_index":451,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["this.linemachine.handledocumentfieldmouseover(this",{"_index":1367,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.linemachine.redrawlinesformappings",{"_index":452,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.linemachineelement.nativeelement",{"_index":2752,"title":{},"body":{"classes/LineModel.html":{}}}],["this.linerefreshsubscription",{"_index":2673,"title":{},"body":{"classes/LineModel.html":{}}}],["this.linerefreshsubscription.unsubscribe",{"_index":2676,"title":{},"body":{"classes/LineModel.html":{}}}],["this.lines",{"_index":2681,"title":{},"body":{"classes/LineModel.html":{}}}],["this.lines.push(l",{"_index":2712,"title":{},"body":{"classes/LineModel.html":{}}}],["this.loadcomponent",{"_index":1478,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.loadingstatus",{"_index":426,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.logger",{"_index":2523,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.logger.debug('no",{"_index":2230,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.logger.debug(`field",{"_index":2212,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.logger.getconfigsnapshot().level",{"_index":930,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.lookuptablename",{"_index":4289,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.mappedfield",{"_index":3228,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.actions",{"_index":3229,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["this.mappedfield.actions.push(action",{"_index":3464,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.actions[actionindex",{"_index":3258,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.mappedfield.field",{"_index":3465,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.field.docdef",{"_index":3469,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.field.docdef.getname(configmodel.getconfig().showtypes",{"_index":3483,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.field.getfieldlabel(configmodel.getconfig().showtypes",{"_index":3577,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.field.name",{"_index":3468,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.field.name.length",{"_index":3460,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.field.path",{"_index":3466,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.ispadfield",{"_index":3459,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.parseddata.usercreated",{"_index":3249,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.mappedfield.removeaction(action",{"_index":3298,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["this.mapping",{"_index":2001,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.mapping.getindexformappedfield(insertbeforemappedfield",{"_index":3401,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.getindexformappedfield(this.field",{"_index":1867,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.mapping.getmappedfields(mappedfield.issource",{"_index":3474,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mapping.getmappedfields(this.issource",{"_index":3411,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.getmappedfields(this.issource).length",{"_index":3471,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mapping.getusermappedfields(true).foreach(f",{"_index":1879,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.mapping.removemappedfield(mappedfield",{"_index":3421,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["this.mapping.transition",{"_index":3405,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.transition.enableexpression",{"_index":3406,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["this.mapping.transition.expression.updatefieldreference(this.mapping",{"_index":3407,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.transition.isenumerationmode",{"_index":3410,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.mapping.transition.ismanytoonemode",{"_index":3409,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.transition.isonetomanymode",{"_index":3408,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.transition.lookuptablename",{"_index":4357,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this.mapping.transition.mode",{"_index":3413,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.mappingchanged",{"_index":2675,"title":{},"body":{"classes/LineModel.html":{}}}],["this.mappingfiles",{"_index":1001,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.mappings",{"_index":3123,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.mappingselectionrequiredsubscription",{"_index":3139,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.mappingselectionrequiredsubscription.unsubscribe",{"_index":3142,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.mappingservice.disablemappingpreview",{"_index":924,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.mappingservice.enablemappingpreview",{"_index":923,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.mappingsfilename",{"_index":4196,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.mappingsfilename.length",{"_index":4217,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.matchesdate(action.sourcetype",{"_index":2319,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.matchesdate(action.targettype",{"_index":2324,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.matchesnumeric(action.sourcetype",{"_index":2321,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.matchesnumeric(action.targettype",{"_index":2325,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.message",{"_index":1505,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorsubject",{"_index":1481,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorsubject.closed",{"_index":1495,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorsubject.complete",{"_index":1482,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorsubject.subscribe((errors",{"_index":1497,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorsubscription",{"_index":1479,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorsubscription.unsubscribe",{"_index":1480,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorwindow.reset",{"_index":788,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.modalerrorwindow.seterrors(errorhandlerservice.filterwith(this.errors",{"_index":789,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.modalerrorwindow.show",{"_index":790,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.modalwindow",{"_index":1391,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{}}}],["this.modalwindow.cancelbuttonhandler",{"_index":3158,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.modalwindow.close",{"_index":3614,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.modalwindow.confirmbuttontext",{"_index":1380,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.headertext",{"_index":1385,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.message",{"_index":1410,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.modalwindow.nestedcomponentinitializedcallback",{"_index":1386,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.nestedcomponenttype",{"_index":1398,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.okbuttonhandler",{"_index":1399,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.reset",{"_index":1379,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.show",{"_index":1407,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindowcomponent",{"_index":321,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.modalwindowcomponent.confirmbuttondisabled",{"_index":334,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.modalwindowcomponent.visible",{"_index":331,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["this.mode",{"_index":4287,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.mouseeventtimer",{"_index":781,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.mytarget",{"_index":1476,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytarget.changes.subscribe(changes",{"_index":1473,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytarget.toarray().length",{"_index":1477,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytarget.toarray()[0",{"_index":1484,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytargetchangessubscription",{"_index":1467,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytargetchangessubscription.unsubscribe",{"_index":1468,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.name",{"_index":1583,"title":{},"body":{"classes/EnumValue.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["this.namespace",{"_index":3817,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["this.namespace.alias",{"_index":3823,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["this.namespace.istarget",{"_index":3822,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["this.namespacealias",{"_index":1582,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{}}}],["this.namespacematchessearch(ns",{"_index":3876,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.namespaces",{"_index":2381,"title":{},"body":{"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{}}}],["this.namespaces.push(fakenamespace",{"_index":2396,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.nestedcomponent",{"_index":1488,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponent.getinitialfocuselement",{"_index":1493,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponent.isdatavalid",{"_index":1513,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponentinitializedcallback",{"_index":1490,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponentinitializedcallback(this",{"_index":1491,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponenttype",{"_index":1507,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nodes[lastaddedindex",{"_index":1962,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.okbuttonhandler",{"_index":1508,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.okbuttonhandler(this",{"_index":1514,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.outputselects.toarray",{"_index":2878,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.parentfield",{"_index":1599,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{}}}],["this.parentfield.name",{"_index":2398,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.parentfield.namespacealias",{"_index":2380,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.parentfieldname",{"_index":2397,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.parentobjectname",{"_index":3467,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.parentobjectname.length",{"_index":3470,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.path",{"_index":1627,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["this.pathseparator",{"_index":3945,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatechildren(field.parentfield",{"_index":3976,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatechildren(parentfield",{"_index":3958,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatefielddata(childfield",{"_index":3992,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatefielddata(field",{"_index":3966,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatefieldparentpaths(childfield",{"_index":3990,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatefieldparentpaths(field",{"_index":3965,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.preparecomplexfields",{"_index":3962,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.prettyname",{"_index":4249,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.processmappingscatalog(userfile",{"_index":4163,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.propertydoc",{"_index":980,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.clearfields",{"_index":999,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.issource",{"_index":911,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.name",{"_index":910,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.showfields",{"_index":912,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.type",{"_index":908,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.reader",{"_index":4198,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.reader.onload",{"_index":4146,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.reader.readasarraybuffer(filecontent",{"_index":4151,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.reader.result",{"_index":4147,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.redrawlinesformappings",{"_index":2700,"title":{},"body":{"classes/LineModel.html":{}}}],["this.resetall",{"_index":4188,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.right_bracket",{"_index":4024,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.sanitizer.bypasssecuritytruststyle('display:inline",{"_index":1417,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytruststyle('stroke",{"_index":2749,"title":{},"body":{"classes/LineModel.html":{}}}],["this.search(this.searchfilter",{"_index":3548,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchfilter",{"_index":3374,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchfilter.tolowercase",{"_index":3551,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchmode",{"_index":3538,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchresults",{"_index":3545,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchresults.length",{"_index":3540,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchresults.push(mapping",{"_index":3559,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.searchresults.push(ns",{"_index":3877,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.sectioncomponents.toarray",{"_index":3617,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.selected",{"_index":1356,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["this.selectedcallback(this",{"_index":3647,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["this.selectedmappingcomponent",{"_index":3616,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.selectednamespace",{"_index":3857,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.selectmapping(field",{"_index":3141,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.selectnamespace",{"_index":3878,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.serializedvalue",{"_index":4248,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.serviceobject",{"_index":1597,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.setbinaryfiletoservice(filecontent",{"_index":2594,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.setlinebeingformed(null",{"_index":2728,"title":{},"body":{"classes/LineModel.html":{}}}],["this.showactiveerrors",{"_index":785,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.sortfieldactiondefinitions",{"_index":2220,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.sourcedocs",{"_index":975,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.sourcedocs.push(docdef",{"_index":966,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.sourcefields",{"_index":2983,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.sourcefields.concat(this.targetfields",{"_index":2988,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.sourcefields.length",{"_index":3001,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.sourceiconcssclass",{"_index":3480,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.sourceidentifier",{"_index":2823,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.sourcetype",{"_index":2812,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.sourcevalue",{"_index":2811,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.start",{"_index":3383,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.storeerrors(errors",{"_index":3537,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.storeerrors(this.cfg.errorservice.geterrors",{"_index":3535,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.str",{"_index":1860,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.str.replace",{"_index":1861,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.systeminitializedsubscription",{"_index":421,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.systeminitializedsubscription.unsubscribe",{"_index":438,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.table",{"_index":2860,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.table.entries",{"_index":2877,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.table.entries.push(e",{"_index":2886,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.table.getentryforsource(tabledata.sourceenumvalue",{"_index":2872,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.tables.push(table",{"_index":3108,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tables[this.tables.indexof(table",{"_index":3117,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname",{"_index":3111,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname.hasownproperty(key",{"_index":3112,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname[key",{"_index":3113,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname[name",{"_index":3109,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname[table.name",{"_index":3107,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbysourcetargetkey[iokey",{"_index":3118,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbysourcetargetkey[key",{"_index":3110,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbysourcetargetkey[table.getinputoutputkey",{"_index":3106,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.targetdocs",{"_index":976,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.targetdocs.push(docdef",{"_index":967,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.targetenabled",{"_index":3821,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["this.targetfields",{"_index":2984,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.targetfields.length",{"_index":3002,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.targetidentifier",{"_index":2824,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.targetsupportstemplate",{"_index":4204,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.targettype",{"_index":2814,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.targetvalue",{"_index":2813,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.templatetext",{"_index":3105,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.terminalfields",{"_index":3996,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.terminalfields.push(field",{"_index":4033,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.textcache",{"_index":2025,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.tokenextractor.gettoken",{"_index":81,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["this.transitionfieldaction",{"_index":4285,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.transitionfieldaction.name",{"_index":4286,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.type",{"_index":1587,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["this.updatecache",{"_index":1912,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.updatefromconfig",{"_index":423,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.updatetemplatevalues",{"_index":3458,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.uri",{"_index":3900,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.userclassname",{"_index":245,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["this.usercollectiontype",{"_index":249,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["this.uuid",{"_index":1569,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["this.validateactionconfigparamselection(action.argumentvalues",{"_index":3260,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.validationerrors",{"_index":3560,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.validationerrors.get(e.mapping).push(e",{"_index":3564,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.validationerrors.has(e.mapping",{"_index":3562,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.validationerrors.set(e.mapping",{"_index":3563,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.value",{"_index":1631,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.valuetype",{"_index":314,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.visible",{"_index":1475,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.xsrfcookiename",{"_index":866,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.xsrfdefaulttokenvalue",{"_index":867,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.xsrfheadername",{"_index":865,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.yoffset).tostring",{"_index":2726,"title":{},"body":{"classes/LineModel.html":{}}}],["those",{"_index":1315,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"license.html":{}}}],["through",{"_index":4561,"title":{},"body":{"license.html":{}}}],["throw",{"_index":2744,"title":{},"body":{"classes/LineModel.html":{},"classes/NamespaceModel.html":{}}}],["time",{"_index":346,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["time'].indexof(selectedtype",{"_index":2330,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["timeout",{"_index":2518,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["timer",{"_index":750,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["times",{"_index":4009,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["timetz",{"_index":350,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["title",{"_index":265,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"license.html":{}}}],["tns",{"_index":3824,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{}}}],["tns'.includes(filter",{"_index":3867,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["toadd",{"_index":2012,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["todisplayable",{"_index":1131,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["todisplayable(camelcasestring",{"_index":1176,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["todo",{"_index":1743,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["toerroriconclass",{"_index":4071,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["toerroriconclasspipe",{"_index":1030,"title":{"pipes/ToErrorIconClassPipe.html":{}},"body":{"modules/DataMapperModule.html":{},"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{},"overview.html":{}}}],["togglesearch",{"_index":3505,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["tohtml",{"_index":1841,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["tojson",{"_index":2810,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["token",{"_index":16,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tokenposition",{"_index":1983,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["toolbar",{"_index":4080,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["toolbar.component.css",{"_index":501,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["toolbar.component.html",{"_index":4081,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar/data",{"_index":500,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["toolbar/toolbar.component",{"_index":413,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["toolbarbuttonclicked",{"_index":4095,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarbuttonclicked(action",{"_index":4135,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcomponent",{"_index":184,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tooltipmodule",{"_index":1055,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["tooltipmodule.forroot",{"_index":1105,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["tooltipmoduleforroot",{"_index":1104,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":530,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["top:0",{"_index":517,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["top:10px",{"_index":567,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["top:20",{"_index":520,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["top:6",{"_index":605,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["topromise().then((body",{"_index":2261,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["topromise().then((res",{"_index":2550,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["toremove",{"_index":2013,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["tort",{"_index":4768,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":2797,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["totext",{"_index":1842,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["tracking",{"_index":4642,"title":{},"body":{"license.html":{}}}],["trade",{"_index":4743,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4708,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":4741,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1309,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"license.html":{}}}],["transform",{"_index":4072,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["transform(value",{"_index":4073,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["transformation",{"_index":2155,"title":{},"body":{"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"license.html":{}}}],["transformations",{"_index":2153,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["transition",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["transition.model",{"_index":2955,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["transitiondelimiter",{"_index":3224,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["transitiondelimiter.none",{"_index":3265,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["transitiondelimiter.space",{"_index":4227,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimiter.user_defined",{"_index":3268,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["transitiondelimiter.user_defined].includes(delimitermodel.delimiter",{"_index":3266,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["transitiondelimitermodel",{"_index":3211,"title":{"classes/TransitionDelimiterModel.html":{}},"body":{"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{}}}],["transitiondelimitermodel(transitiondelimiter.ampersand",{"_index":4258,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.at_sign",{"_index":4259,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.backslash",{"_index":4262,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.colon",{"_index":4263,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.comma",{"_index":4264,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.dash",{"_index":4265,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.equal",{"_index":4266,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.hash",{"_index":4267,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.multi_space",{"_index":4268,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.none",{"_index":4257,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.period",{"_index":4271,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.pipe",{"_index":4272,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.semicolon",{"_index":4273,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.slash",{"_index":4274,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.space",{"_index":4275,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.underscore",{"_index":4276,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.user_defined",{"_index":4278,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionfieldaction",{"_index":4253,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionfieldactionname",{"_index":4284,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmode",{"_index":2912,"title":{},"body":{"classes/LookupTableUtil.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["transitionmode.enum",{"_index":2915,"title":{},"body":{"classes/LookupTableUtil.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmode.for_each",{"_index":4282,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmode.many_to_one",{"_index":3415,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["transitionmode.one_to_many",{"_index":3416,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["transitionmode.one_to_one",{"_index":3414,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmodel",{"_index":2954,"title":{"classes/TransitionModel.html":{}},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{}}}],["transitionmodel.delimitermodels",{"_index":3227,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmodel.delimitermodels.length",{"_index":4254,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmodel.getmappingmodename(this.mode",{"_index":4288,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmodel.initialize",{"_index":3225,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionname",{"_index":3552,"title":{},"body":{"components/MappingListComponent.html":{}}}],["transitionname.tolowercase().includes(filter",{"_index":3554,"title":{},"body":{"components/MappingListComponent.html":{}}}],["transitionselectioncomponent",{"_index":186,"title":{"components/TransitionSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["translate",{"_index":3206,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["translation",{"_index":4601,"title":{},"body":{"license.html":{}}}],["tree",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["triangle",{"_index":4078,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["trigger",{"_index":4191,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["true",{"_index":294,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":2567,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["turn",{"_index":1173,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["two",{"_index":2576,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["type",{"_index":95,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type(type",{"_index":3921,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["typeaheadmodule",{"_index":1056,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["typeaheadmodule.forroot",{"_index":1103,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["typeaheadmoduleforroot",{"_index":1102,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1209,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["types",{"_index":2151,"title":{},"body":{"injectables/FieldActionService.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["typing",{"_index":3418,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["ui",{"_index":886,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"classes/MappingDefinition.html":{},"index.html":{}}}],["ui's",{"_index":4546,"title":{},"body":{"index.html":{}}}],["uint8array",{"_index":1175,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["uint8array(arraybuffer",{"_index":4149,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["ul",{"_index":1338,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["un",{"_index":3670,"title":{},"body":{"classes/MappingUtil.html":{}}}],["unable",{"_index":2041,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/TextNode.html":{}}}],["undefined",{"_index":1210,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{}}}],["under",{"_index":461,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["underscore",{"_index":4245,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["union",{"_index":4568,"title":{},"body":{"license.html":{}}}],["unique",{"_index":4056,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["units",{"_index":3243,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["unknown",{"_index":4495,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unless",{"_index":471,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["unmapped",{"_index":2015,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["unqualified",{"_index":3897,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["unqualifiednamespace",{"_index":3888,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["unqualifiedns",{"_index":2375,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["unqualifiedns.alias",{"_index":2377,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["unqualifiedns].concat(this.docdef.namespaces",{"_index":2382,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["unselected",{"_index":2007,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["unsigned",{"_index":352,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["until",{"_index":4199,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["up",{"_index":449,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["update",{"_index":440,"title":{},"body":{"components/DataMapperAppComponent.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldContainerComponent.html":{},"index.html":{}}}],["updatecache",{"_index":2027,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updated",{"_index":1725,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldDetailComponent.html":{}}}],["updatedevent",{"_index":1944,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updatedevent.node",{"_index":1971,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updatedevent.offset",{"_index":1972,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updatedocumentnamespacesfrommappings",{"_index":3657,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatedocumentnamespacesfrommappings(cfg",{"_index":3672,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatefield(field",{"_index":3969,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["updatefieldreference(mapping",{"_index":2009,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updatefromconfig",{"_index":381,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/ToolbarComponent.html":{}}}],["updatefrommappings(mappingdefinition",{"_index":4003,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["updatelookuptables",{"_index":2904,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["updatelookuptables(mappingdefinition",{"_index":2910,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["updatemappedfieldsfromdocuments",{"_index":3658,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatemappedfieldsfromdocuments(mapping",{"_index":3674,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatemappingsfromdocuments",{"_index":3659,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatemappingsfromdocuments(cfg",{"_index":3676,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatesearchfilter",{"_index":3334,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["updatesearchfilter(value",{"_index":3365,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["updatetemplatevalues",{"_index":3433,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["uri",{"_index":3694,"title":{},"body":{"classes/MappingUtil.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["uri:documentdefinition",{"_index":982,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["url",{"_index":2225,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"index.html":{}}}],["url(#line",{"_index":2656,"title":{},"body":{"classes/LineModel.html":{}}}],["urls",{"_index":648,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["use",{"_index":69,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LineModel.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["useclass",{"_index":1117,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["used",{"_index":1696,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["user",{"_index":737,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/ErrorInfo.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["user's",{"_index":1189,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["user_defined",{"_index":4246,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["userclassname",{"_index":200,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["usercollectionclassname",{"_index":201,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["usercollectiontype",{"_index":202,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["usercreated",{"_index":1540,"title":{},"body":{"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["userdelimiter",{"_index":4252,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["userexport",{"_index":2566,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["userfieldcount",{"_index":2998,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["userfile",{"_index":4152,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["userfile.name.split",{"_index":4155,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["userfilecomps",{"_index":4154,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["userfilecomps[userfilecomps.length",{"_index":4157,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["userfilesuffix",{"_index":4156,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["using",{"_index":4761,"title":{},"body":{"license.html":{}}}],["util",{"_index":2517,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["util.ts",{"_index":1121,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/LookupTableUtil.html":{},"classes/MappingUtil.html":{},"coverage.html":{}}}],["util.ts:101",{"_index":1151,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:118",{"_index":1186,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:130",{"_index":1177,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:152",{"_index":1139,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:167",{"_index":3667,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:188",{"_index":3665,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:20",{"_index":1136,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:204",{"_index":3673,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:21",{"_index":1134,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:23",{"_index":1163,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:231",{"_index":3661,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:28",{"_index":2909,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["util.ts:29",{"_index":3677,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:44",{"_index":3675,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:46",{"_index":1167,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:60",{"_index":2911,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["util.ts:71",{"_index":1172,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:85",{"_index":1159,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:86",{"_index":2907,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["utils/mapping",{"_index":1097,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["uuid",{"_index":1534,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["uuidcounter",{"_index":1524,"title":{},"body":{"classes/EnumValue.html":{}}}],["v2/atlas",{"_index":4851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2/atlas/java",{"_index":4852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2/atlas/json",{"_index":4854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2/atlas/xml",{"_index":4853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":1714,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["validateactionconfigparamselection",{"_index":3173,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["validateactionconfigparamselection(acp",{"_index":3216,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["validation",{"_index":1638,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"miscellaneous/enumerations.html":{}}}],["validationerrors",{"_index":3493,"title":{},"body":{"components/MappingListComponent.html":{}}}],["value",{"_index":24,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.some(e",{"_index":4076,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["valued",{"_index":3200,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["valueexistsoncreation",{"_index":208,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{}}}],["values",{"_index":2073,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["valuetype",{"_index":285,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["valuetypeselectionchanged",{"_index":287,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["valuetypeselectionchanged(event",{"_index":302,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["var",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["variable",{"_index":4414,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":4828,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":4633,"title":{},"body":{"license.html":{}}}],["verify",{"_index":2692,"title":{},"body":{"classes/LineModel.html":{}}}],["version",{"_index":464,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["vertical",{"_index":526,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["via",{"_index":2435,"title":{},"body":{"injectables/FileManagementService.html":{},"index.html":{}}}],["viewchild",{"_index":236,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["viewchild('class",{"_index":230,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["viewchild('datamappercomponent",{"_index":625,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["viewchild('docdefinput",{"_index":390,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('docdefoutput",{"_index":392,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('errorpanel",{"_index":394,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('expressioncomponent",{"_index":4137,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["viewchild('fielddetailelement",{"_index":1290,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["viewchild('linemachine",{"_index":399,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('linemachineelement",{"_index":2669,"title":{},"body":{"classes/LineModel.html":{}}}],["viewchild('mappingdetailcomponent",{"_index":403,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('modalerrorwindow",{"_index":405,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('modalwindow",{"_index":407,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('name",{"_index":4055,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["viewchild('namespace",{"_index":3813,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["viewchild('sourcesheader",{"_index":3138,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["viewchild('template",{"_index":4059,"title":{},"body":{"components/TemplateEditComponent.html":{}}}],["viewchild('toolbarcomponent",{"_index":410,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('value",{"_index":308,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{}}}],["viewchildren",{"_index":1294,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewchildren('dyn_target",{"_index":1460,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewchildren('fielddetail",{"_index":1288,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["viewchildren('mappingsection",{"_index":3599,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["viewchildren('outputselect",{"_index":2847,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["viewcontainerref",{"_index":1440,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewcontainerref.clear",{"_index":1485,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewcontainerref.createcomponent(componentfactory).instance",{"_index":1489,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewencapsulation",{"_index":412,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewencapsulation.none",{"_index":359,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["visibility:hidden",{"_index":504,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["visibility:visible",{"_index":508,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["visible",{"_index":1458,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["visibleincurrentdocumentsearch",{"_index":1529,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["void",{"_index":214,"title":{},"body":{"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["w.message",{"_index":3742,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["walk",{"_index":3044,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["want",{"_index":1412,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["warn",{"_index":1800,"title":{},"body":{"classes/ErrorInfo.html":{},"miscellaneous/enumerations.html":{}}}],["warning",{"_index":727,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["warnings",{"_index":728,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["warranties",{"_index":480,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["warranty",{"_index":4751,"title":{},"body":{"license.html":{}}}],["wasn't",{"_index":4214,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["way",{"_index":1745,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{}}}],["we'll",{"_index":68,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["we're",{"_index":2497,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{}}}],["web",{"_index":4501,"title":{},"body":{"index.html":{}}}],["well",{"_index":1641,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{}}}],["wherever",{"_index":4717,"title":{},"body":{"license.html":{}}}],["whether",{"_index":4581,"title":{},"body":{"license.html":{}}}],["who's",{"_index":1306,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["whole",{"_index":4618,"title":{},"body":{"license.html":{}}}],["widget",{"_index":1925,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/TextNode.html":{}}}],["width",{"_index":510,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["width:10",{"_index":579,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:100",{"_index":521,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:105px",{"_index":609,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:12px",{"_index":534,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:20px",{"_index":611,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:30",{"_index":572,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:300px",{"_index":586,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:45",{"_index":578,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:4px",{"_index":2750,"title":{},"body":{"classes/LineModel.html":{}}}],["window",{"_index":20,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["window'},{'name",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["window.component",{"_index":241,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["window.component.html",{"_index":1446,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["window.component.ts",{"_index":1436,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"coverage.html":{}}}],["window.component.ts:111",{"_index":3790,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:132",{"_index":3789,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:133",{"_index":3788,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:141",{"_index":3794,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:148",{"_index":3793,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:160",{"_index":3787,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:25",{"_index":3776,"title":{},"body":{"interfaces/ModalErrorWindowValidator.html":{}}}],["window.component.ts:26",{"_index":3775,"title":{},"body":{"interfaces/ModalErrorWindowValidator.html":{}}}],["window.component.ts:29",{"_index":3806,"title":{},"body":{"interfaces/ModalWindowValidator.html":{}}}],["window.component.ts:30",{"_index":3805,"title":{},"body":{"interfaces/ModalWindowValidator.html":{}}}],["window.component.ts:35",{"_index":3759,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:36",{"_index":3765,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:37",{"_index":3767,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:38",{"_index":3760,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:39",{"_index":3764,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:40",{"_index":1439,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:41",{"_index":3768,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:42",{"_index":3763,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:43",{"_index":3762,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:44",{"_index":1438,"title":{},"body":{"components/EmptyModalBodyComponent.html":{}}}],["window.component.ts:45",{"_index":3747,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:47",{"_index":3761,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:49",{"_index":3752,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:53",{"_index":3755,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:56",{"_index":3782,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:57",{"_index":3785,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:58",{"_index":3784,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:59",{"_index":3786,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:60",{"_index":3748,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{}}}],["window.component.ts:61",{"_index":3781,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:62",{"_index":3783,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:64",{"_index":3799,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:65",{"_index":3803,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:66",{"_index":3796,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:67",{"_index":3757,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{}}}],["window.component.ts:68",{"_index":3804,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:69",{"_index":3798,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:70",{"_index":3797,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:71",{"_index":3756,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:72",{"_index":3801,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:74",{"_index":3795,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:75",{"_index":3802,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:76",{"_index":3800,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:77",{"_index":3780,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:79",{"_index":3753,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{}}}],["window.component.ts:81",{"_index":3791,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:83",{"_index":3750,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:87",{"_index":3751,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:91",{"_index":3749,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:99",{"_index":3792,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.event",{"_index":1320,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["windows",{"_index":1643,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["within",{"_index":741,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"index.html":{},"license.html":{}}}],["withinterceptor",{"_index":1037,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["without",{"_index":445,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"index.html":{},"license.html":{}}}],["won't",{"_index":1966,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["work",{"_index":4007,"title":{},"body":{"classes/NamespaceModel.html":{},"index.html":{},"license.html":{}}}],["worked",{"_index":1920,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["workingfields",{"_index":3019,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["works",{"_index":4612,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":4659,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":58,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["write",{"_index":1187,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["writefile",{"_index":1132,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["writefile(filecontent",{"_index":1183,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["writing",{"_index":476,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["written",{"_index":4634,"title":{},"body":{"license.html":{}}}],["wudget",{"_index":4111,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["x",{"_index":602,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["x/y",{"_index":446,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["x5b",{"_index":3908,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["x5d",{"_index":3910,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["xml",{"_index":958,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["xmlinspectionserviceurl",{"_index":4845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xmlservicespackageprefix",{"_index":882,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["xsd",{"_index":4492,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["xsrf",{"_index":59,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"miscellaneous/variables.html":{}}}],["xsrf.service",{"_index":1092,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["xsrf.service.ts",{"_index":9,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"coverage.html":{}}}],["xsrf.service.ts:19",{"_index":38,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{}}}],["xsrf.service.ts:20",{"_index":33,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{}}}],["xsrf.service.ts:32",{"_index":97,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{}}}],["xsrf.service.ts:33",{"_index":93,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{}}}],["xsrfcookiename",{"_index":817,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["xsrfdefaulttokenvalue",{"_index":818,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["xsrfheadername",{"_index":819,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["y",{"_index":1361,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["yarn",{"_index":4541,"title":{},"body":{"index.html":{}}}],["yes",{"_index":1690,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{}}}],["yoffset",{"_index":2671,"title":{},"body":{"classes/LineModel.html":{}}}],["yyyy",{"_index":4825,"title":{},"body":{"license.html":{}}}],["zero_to_one",{"_index":2078,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"miscellaneous/enumerations.html":{}}}],["zerobasedindex",{"_index":3733,"title":{},"body":{"classes/MappingUtil.html":{}}}],["zip",{"_index":2463,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["zone.js",{"_index":4482,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1031,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiHttpXsrfTokenExtractor.html":{"url":"injectables/ApiHttpXsrfTokenExtractor.html","title":"injectable - ApiHttpXsrfTokenExtractor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiHttpXsrfTokenExtractor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts\n        \n\n            \n                Description\n            \n            \n                Override the stock @angular HTTP package token extractor to not fetch cookies from\nthe Window document.  Return a default token value instead.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cfg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpXsrfTokenExtractor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ConfigModel } from '../models/config.model';\n\n/**\n * Override the stock @angular HTTP package token extractor to *not* fetch cookies from\n * the Window document.  Return a default token value instead.\n */\n@Injectable()\nexport class ApiHttpXsrfTokenExtractor implements HttpXsrfTokenExtractor {\n  private cfg = ConfigModel.getConfig();\n  getToken(): string {\n    return this.cfg.initCfg.xsrfDefaultTokenValue;\n  }\n}\n\n/**\n * Override the stock @angular HTTP package request interceptor method to wrap the request\n * with default XSRF header name and token value.\n */\n@Injectable()\nexport class ApiXsrfInterceptor implements HttpInterceptor {\n\n  private cfg = ConfigModel.getConfig();\n  intercept(httpRequest: HttpRequest, next: HttpHandler): Observable> {\n    /*\n      ADM doesn't need/use cookies so we'll use the default token value initialized from the environment when\n      adding the XSRF header to HTTP requests.  This will avoid the need to read cookies from local storage.\n    */\n    if (this.cfg.initCfg.xsrfHeaderName) {\n      // const token = this.tokenExtractor.getToken() || this.cfg.initCfg.xsrfDefaultTokenValue;\n      const token = this.cfg.initCfg.xsrfDefaultTokenValue;\n      const headerName = this.cfg.initCfg.xsrfHeaderName;\n\n      if (!httpRequest.headers.has(headerName)) {\n        httpRequest = httpRequest.clone({ headers: httpRequest.headers.set(headerName, token) });\n      }\n    }\n    return next.handle(httpRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ApiXsrfInterceptor.html":{"url":"interceptors/ApiXsrfInterceptor.html","title":"interceptor - ApiXsrfInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ApiXsrfInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts\n        \n\n            \n                Description\n            \n            \n                Override the stock @angular HTTP package request interceptor method to wrap the request\nwith default XSRF header name and token value.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cfg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(httpRequest: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    httpRequest\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts:32\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpXsrfTokenExtractor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ConfigModel } from '../models/config.model';\n\n/**\n * Override the stock @angular HTTP package token extractor to *not* fetch cookies from\n * the Window document.  Return a default token value instead.\n */\n@Injectable()\nexport class ApiHttpXsrfTokenExtractor implements HttpXsrfTokenExtractor {\n  private cfg = ConfigModel.getConfig();\n  getToken(): string {\n    return this.cfg.initCfg.xsrfDefaultTokenValue;\n  }\n}\n\n/**\n * Override the stock @angular HTTP package request interceptor method to wrap the request\n * with default XSRF header name and token value.\n */\n@Injectable()\nexport class ApiXsrfInterceptor implements HttpInterceptor {\n\n  private cfg = ConfigModel.getConfig();\n  intercept(httpRequest: HttpRequest, next: HttpHandler): Observable> {\n    /*\n      ADM doesn't need/use cookies so we'll use the default token value initialized from the environment when\n      adding the XSRF header to HTTP requests.  This will avoid the need to read cookies from local storage.\n    */\n    if (this.cfg.initCfg.xsrfHeaderName) {\n      // const token = this.tokenExtractor.getToken() || this.cfg.initCfg.xsrfDefaultTokenValue;\n      const token = this.cfg.initCfg.xsrfDefaultTokenValue;\n      const headerName = this.cfg.initCfg.xsrfHeaderName;\n\n      if (!httpRequest.headers.has(headerName)) {\n        httpRequest = httpRequest.clone({ headers: httpRequest.headers.set(headerName, token) });\n      }\n    }\n    return next.handle(httpRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atlasmap-dev-root\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'atlasmap-dev-root',\n  template: '',\n})\n\nexport class AppComponent { }\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClassNameComponent.html":{"url":"components/ClassNameComponent.html","title":"component - ClassNameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ClassNameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                class-name\n            \n\n\n\n\n            \n                templateUrl\n                ./class-name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                docDef\n                            \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                isSource\n                            \n                            \n                                userClassName\n                            \n                            \n                                userCollectionClassName\n                            \n                            \n                                userCollectionType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                collectionTypeSelectionChanged\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                parentSelectionChanged\n                            \n                            \n                                valueExistsOnCreation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:37\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            collectionTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncollectionTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(field: Field, docDef: DocumentDefinition, isAdd: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docDef\n                                    \n                                                DocumentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isAdd\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parentSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nparentSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueExistsOnCreation\n                        \n                        \n                    \n                \n            \n            \n                \nvalueExistsOnCreation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('class')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userClassName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userCollectionClassName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userCollectionType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CollectionType.NONE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { DocumentDefinition } from '../../models/document-definition.model';\nimport { Field } from '../../models/field.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { ModalWindowValidator } from '../modal/modal-window.component';\nimport { CollectionType } from '../../common/config.types';\n\n@Component({\n  selector: 'class-name',\n  templateUrl: './class-name.component.html',\n})\n\nexport class ClassNameComponent implements ModalWindowValidator {\n  cfg: ConfigModel = ConfigModel.getConfig();\n  isSource: boolean;\n  userClassName: string = null;\n  userCollectionType = CollectionType.NONE;\n  userCollectionClassName = null;\n  docDef: DocumentDefinition = null;\n  @ViewChild('class') private focusEl: ElementRef;\n\n  constructor() {\n  }\n\n  initialize(field: Field, docDef: DocumentDefinition, isAdd: boolean): void {\n    this.docDef = docDef;\n    this.userClassName = '';\n  }\n\n  parentSelectionChanged(event: any): void {\n  }\n\n  isDataValid(): boolean {\n    return this.cfg.errorService.isRequiredFieldValid(this.userClassName, 'Class name');\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n  valueExistsOnCreation(): boolean {\n    return false;\n  }\n\n  collectionTypeSelectionChanged(event: any) {\n      this.userCollectionType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n}\n\n    \n\n    \n        \n\n  \n    Class package name:\n      \n    \n    Collection Type:\n      \n        NONE\n        ARRAY\n        LIST\n        Map -->\n      \n    \n    Collection class name:\n      \n    \n    \n      Class name has already been established.\n          \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Class package name:              Collection Type:              NONE        ARRAY        LIST        Map -->              Collection class name:                    Class name has already been established.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ClassNameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CollapsableHeaderComponent.html":{"url":"components/CollapsableHeaderComponent.html","title":"component - CollapsableHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CollapsableHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/collapsable-header.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                collapsable-header\n            \n\n\n\n\n            \n                templateUrl\n                ./collapsable-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCSSClass\n                            \n                            \n                                handleMouseClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                collapsed\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        collapsed\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/collapsable-header.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/collapsable-header.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/collapsable-header.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseClick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/collapsable-header.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'collapsable-header',\n  templateUrl: './collapsable-header.component.html',\n})\n\nexport class CollapsableHeaderComponent {\n  @Input() title: string;\n  @Input() collapsed = false;\n\n  handleMouseClick(event: MouseEvent): void {\n    this.collapsed = !this.collapsed;\n  }\n\n  getCSSClass() {\n    return 'arrow fa fa-angle-' + (this.collapsed ? 'right' : 'down');\n  }\n}\n\n    \n\n    \n        \n  \n    {{ title }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ title }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'CollapsableHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConstantFieldEditComponent.html":{"url":"components/ConstantFieldEditComponent.html","title":"component - ConstantFieldEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConstantFieldEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                constant-field-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./constant-field-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                docDef\n                            \n                            \n                                field\n                            \n                            \n                                fieldMode\n                            \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                isClosing\n                            \n                            \n                                modalWindowComponent\n                            \n                            \n                                valueType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getField\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                valueExistsOnCreation\n                            \n                            \n                                valueTypeSelectionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getField\n                        \n                        \n                    \n                \n            \n            \n                \ngetField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Field\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(field: Field, docDef: DocumentDefinition, mwc: ModalWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docDef\n                                    \n                                                DocumentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mwc\n                                    \n                                                ModalWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueExistsOnCreation\n                        \n                        \n                    \n                \n            \n            \n                \nvalueExistsOnCreation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:78\n                \n            \n\n\n            \n                \n                    Return true and disable the save button if the constant field already exists on creation, return false\nand enable the save button otherwise.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nvalueTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                    \n                        \n                            Default value : new Field()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('value')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isClosing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalWindowComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { DocumentType, FieldMode } from '../../common/config.types';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { DocumentDefinition } from '../../models/document-definition.model';\nimport { Field } from '../../models/field.model';\nimport { ModalWindowComponent, ModalWindowValidator } from '../modal/modal-window.component';\n\n@Component({\n  selector: 'constant-field-edit',\n  templateUrl: './constant-field-edit.component.html',\n})\n\nexport class ConstantFieldEditComponent implements ModalWindowValidator {\n  field: Field = new Field();\n  fieldMode: FieldMode;\n  valueType: any = 'STRING';\n  docDef: DocumentDefinition;\n  modalWindowComponent: ModalWindowComponent;\n  isClosing: boolean;\n  @ViewChild('value') private focusEl: ElementRef;\n\n  initialize(field: Field, docDef: DocumentDefinition, mwc: ModalWindowComponent): void {\n    if (field != null) {\n      this.valueType = field.type;\n      this.fieldMode = FieldMode.EDIT;\n    } else { this.fieldMode = FieldMode.CREATE; }\n\n    this.field = field == null ? new Field() : field.copy();\n    this.docDef = docDef;\n    this.modalWindowComponent = mwc;\n    this.isClosing = false;\n  }\n\n  valueTypeSelectionChanged(event: any): void {\n    this.valueType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  getField(): Field {\n    this.field.displayName = this.field.value;\n    this.field.name = this.field.value;\n    this.field.path = this.field.value;\n    this.field.type = this.valueType;\n    this.field.userCreated = true;\n    this.field.docDef = this.docDef;\n    return this.field;\n  }\n\n  isDataValid(): boolean {\n    return ConfigModel.getConfig().errorService.isRequiredFieldValid(this.field.value, 'Value');\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n  /**\n   * Return true and disable the save button if the constant field already exists on creation, return false\n   * and enable the save button otherwise.\n   */\n  valueExistsOnCreation(): boolean {\n    if (!this.modalWindowComponent || !this.modalWindowComponent.visible) {\n      return false;\n    }\n    if (this.isClosing) {\n      return false;\n    }\n    if (this.fieldMode === FieldMode.CREATE && this.docDef != null &&\n        this.docDef.fieldExists(this.getField(), DocumentType.CONSTANT)) {\n      this.modalWindowComponent.confirmButtonDisabled = true;\n      return true;\n    }\n    this.modalWindowComponent.confirmButtonDisabled = false;\n    return false;\n  }\n}\n\n    \n\n    \n        \n  \n    Value:\n    \n    \n      Constant value already exists.\n    \n  \n  \n    Value Type:\n    \n      Boolean\n      Big Integer\n      Byte\n      ByteArray\n      Char\n      Complex\n      Decimal\n      Double\n      Float\n      Integer\n      Long\n      Short\n      String\n      Time\n      Date\n      DateTime\n      DateTZ\n      TimeTZ\n      DateTimeTZ\n      Unsigned Byte\n      Unsigned Integer\n      Unsigned Long\n      Unsigned Short\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Value:              Constant value already exists.            Value Type:          Boolean      Big Integer      Byte      ByteArray      Char      Complex      Decimal      Double      Float      Integer      Long      Short      String      Time      Date      DateTime      DateTZ      TimeTZ      DateTimeTZ      Unsigned Byte      Unsigned Integer      Unsigned Long      Unsigned Short      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConstantFieldEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataMapperAppComponent.html":{"url":"components/DataMapperAppComponent.html","title":"component - DataMapperAppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataMapperAppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n            \n                moduleId\n                module.id\n            \n\n\n\n\n            \n                selector\n                data-mapper\n            \n\n            \n                styleUrls\n                data-mapper-app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./data-mapper-app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                detector\n                            \n                            \n                                docDefInput\n                            \n                            \n                                docDefOutput\n                            \n                            \n                                errorPanel\n                            \n                            \n                                hasSourceDoc\n                            \n                            \n                                hasTargetDoc\n                            \n                            \n                                    Private\n                                initializationStatusChangedSubscription\n                            \n                            \n                                lineMachine\n                            \n                            \n                                loadingStatus\n                            \n                            \n                                mappingDetailComponent\n                            \n                            \n                                modalErrorWindow\n                            \n                            \n                                modalWindow\n                            \n                            \n                                    Private\n                                systemInitializedSubscription\n                            \n                            \n                                toolbarComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfig\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateFromConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(detector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        detector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ConfigModel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateFromConfig\n                        \n                        \n                    \n                \n            \n            \n                \nupdateFromConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            detector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDefInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinitionComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('docDefInput')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDefOutput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinitionComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('docDefOutput')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorPanel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataMapperErrorComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('errorPanel')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasSourceDoc\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasTargetDoc\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initializationStatusChangedSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lineMachine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LineMachineComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('lineMachine')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Loading.'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappingDetailComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingDetailComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('mappingDetailComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalErrorWindow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalErrorWindowComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('modalErrorWindow')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalWindow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('modalWindow')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            systemInitializedSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolbarComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ToolbarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('toolbarComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ViewChild, ViewEncapsulation, ChangeDetectorRef } from '@angular/core';\nimport { ConfigModel } from '../../models/config.model';\n\nimport { ToolbarComponent } from '../toolbar/toolbar.component';\nimport { DataMapperErrorComponent } from './data-mapper-error.component';\nimport { LineMachineComponent } from './line-machine.component';\nimport { ModalErrorWindowComponent } from '../modal/modal-error-window.component';\nimport { ModalWindowComponent } from '../modal/modal-window.component';\n\nimport { DocumentDefinitionComponent } from '../document/document-definition.component';\n\nimport { MappingDetailComponent } from '../mapping-detail/mapping-detail.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'data-mapper',\n  moduleId: module.id,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './data-mapper-app.component.html',\n  styleUrls: ['data-mapper-app.component.css'],\n})\n\nexport class DataMapperAppComponent implements OnInit, OnDestroy {\n\n  @ViewChild('lineMachine') lineMachine: LineMachineComponent;\n  @ViewChild('errorPanel') errorPanel: DataMapperErrorComponent;\n  @ViewChild('modalErrorWindow') modalErrorWindow: ModalErrorWindowComponent;\n  @ViewChild('modalWindow') modalWindow: ModalWindowComponent;\n  @ViewChild('docDefInput') docDefInput: DocumentDefinitionComponent;\n  @ViewChild('docDefOutput') docDefOutput: DocumentDefinitionComponent;\n  @ViewChild('mappingDetailComponent') mappingDetailComponent: MappingDetailComponent;\n  @ViewChild('toolbarComponent') toolbarComponent: ToolbarComponent;\n\n  loadingStatus = 'Loading.';\n  hasSourceDoc = false;\n  hasTargetDoc = false;\n\n  private systemInitializedSubscription: Subscription;\n  private initializationStatusChangedSubscription: Subscription;\n\n  constructor(public detector: ChangeDetectorRef) { }\n\n  getConfig(): ConfigModel {\n    return ConfigModel.getConfig();\n  }\n\n  ngOnInit(): void {\n    this.systemInitializedSubscription\n       = this.getConfig().initializationService.systemInitialized$.subscribe(() => {\n      this.updateFromConfig();\n    });\n\n    this.initializationStatusChangedSubscription\n      = this.getConfig().initializationService.initializationStatusChanged$.subscribe(() => {\n      this.loadingStatus = this.getConfig().initCfg.loadingStatus;\n      setTimeout(() => {\n        this.detector.detectChanges();\n      }, 10);\n    });\n    this.hasSourceDoc = this.getConfig().sourceDocs && this.getConfig().sourceDocs.length > 0;\n    this.hasTargetDoc = this.getConfig().targetDocs && this.getConfig().targetDocs.length > 0;\n  }\n\n  ngOnDestroy() {\n    this.systemInitializedSubscription.unsubscribe();\n    this.initializationStatusChangedSubscription.unsubscribe();\n  }\n\n  updateFromConfig(): void {\n    // update the mapping line drawing after our fields have redrawn themselves\n    // without this, the x/y from the field dom elements is messed up / misaligned.\n    if (this.lineMachine != null) {\n      setTimeout(() => {\n        if (this.lineMachine != null) {\n          this.lineMachine.redrawLinesForMappings();\n        }\n      }, 1);\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n\n    \n      \n    \n\n    \n      \n    \n\n    \n      \n      \n    \n\n    \n      \n    \n\n    \n\n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n    \n  \n\n  \n    {{ loadingStatus }}\n    \n  \n\n\n    \n\n    \n                \n                    data-mapper-app.component.css\n                \n                /*\n    Copyright (C) 2019 Red Hat, Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\n@import '../data-mapper-base.component.css';\n@import '../document/data-mapper-document.component.css';\n@import '../mapping-detail/data-mapper-mapping-detail.component.css';\n@import '../mapping-list/data-mapper-mapping-list.component.css';\n@import '../modal/data-mapper-modal.component.css';\n@import '../toolbar/data-mapper-toolbar.component.css';\n\n/* loading screen styles */\n.dataMapperBodyHidden { visibility:hidden; position:relative; height:0px; }\n.dataMapperBody { visibility:visible; height:100%; width: 100%; position:relative; margin-left: 0px; }\n\n.DataMapperLoadingMessage { position:absolute; height:100%; top:0%; left:0%; padding-top:20%; width:100%; text-align:center; }\n.DataMapperLoadingMessage .error { color:crimson; }\n.DataMapperLoadingMessage .spinner { vertical-align:text-bottom; }\n.DataMapperLoadingMessage LABEL { vertical-align:text-top; margin-right:3px; }\n.DataMapperLoadingMessage IMG { height:12px; width:12px; vertical-align:middle; }\n\n.DataMapperUI .atlasmapNavbar { }\n.DataMapperUI .atlasmapNavbar .dropdown { position: relative; display: inline-block; }\n.DataMapperUI .atlasmapNavbar .dropdown-content a {\n  float: none;\n  color: black;\n  padding: 12px 16px;\n  text-decoration: none;\n  display: block;\n  text-align: left;\n}\n\n.DataMapperUI .atlasmapNavbar .dropdown .dropdown-content a:hover { background-color: #ddd; }\n.DataMapperUI .atlasmapNavbar A:hover { color:#0088ce; cursor:pointer; text-decoration:none; background-color: #ddd;}\n.DataMapperUI .atlasmapNavbar I.link:hover { color:rgb(54,54,54); }\n.DataMapperUI .atlasmapNavbar .dropdown:hover .dropdown-content { display: block; }\n\n.DataMapperUI .row { margin:0px; }\n.DataMapperUI .row.modalWindow { min-height:0px; }\n.DataMapperUI .row.mainDisplay { height:calc(100% - 10px); position:relative; padding-top:10px; }\n.DataMapperUI .row.mainDisplay .col-md-3 { padding:0px; height:100%; width:30%; }\n.DataMapperUI .row.mainDisplay .col-md-9 { height:100%; padding:0; width: 70%; }\n.DataMapperUI .row.mainDisplay .col-md-9 .docDefIn { float:left; width:45%; height:100%; }\n.DataMapperUI .row.mainDisplay .col-md-9 .lineMachine { float:left; width:10%; height:100%; margin-left:-5px; margin-right:-5px; }\n.DataMapperUI .row.mainDisplay .col-md-9 .docDefOut { float:left; width:45%; height:100%; }\n\n/* constant-field-edit, field-edit, property-field-edit */\n.DataMapperUI .DataMapperEditComponent INPUT, .DataMapperEditComponent .form-group SELECT { width:300px; }\n.DataMapperUI .DataMapperEditComponent .form-group TEXTAREA { margin:auto; }\n.DataMapperUI .DataMapperEditComponent .fieldDocDefName { font-style:italic; }\n\n/* data-mapper-error */\n.DataMapperUI .DataMapperErrorComponent {\n  display: block;\n  box-sizing: border-box;\n  border: 1px;\n  margin-top: 8px;\n  height: 54px;\n  position: fixed;\n  margin-bottom: 8px;\n  overflow: hidden;\n  overflow-x: hidden;\n  width: 40%;\n}\n\n/* data-mapper-error */\n.DataMapperUI .DataMapperErrorComponent {\n  display: block;\n  box-sizing: border-box;\n  border: 1px;\n  margin-top: 8px;\n  height: 54px;\n  position: fixed;\n  margin-bottom: 8px;\n  overflow: hidden;\n  overflow-x: hidden;\n  width: 40%;\n}\n\n/* line-machine */\n.DataMapperUI .LineMachineComponent { height:100%; margin-top:6%; }\n.DataMapperUI .LineMachineComponent line:hover { cursor:pointer; }\n.DataMapperUI .LineMachineComponent svg { width:100%; height:100%; }\n\n/* namespace-edit */\n.DataMapperUI .PropertyEditFieldComponent LABEL { width:105px; }\n.DataMapperUI .PropertyEditFieldComponent INPUT {  width:300px; }\n.DataMapperUI .PropertyEditFieldComponent .targetType INPUT { width:20px; vertical-align:left; }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                              {{ loadingStatus }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DataMapperAppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataMapperAppExampleHostComponent.html":{"url":"components/DataMapperAppExampleHostComponent.html","title":"component - DataMapperAppExampleHostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataMapperAppExampleHostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                MappingManagementService\n                                ErrorHandlerService\n                                DocumentManagementService\n                \n            \n\n\n            \n                selector\n                data-mapper-example-host\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataMapperComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(initializationService: InitializationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initializationService\n                                                  \n                                                        \n                                                                        InitializationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataMapperComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataMapperAppComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dataMapperComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, OnInit, OnDestroy } from '@angular/core';\nimport { ConfigModel } from '../models/config.model';\n\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { DocumentManagementService } from '../services/document-management.service';\nimport { MappingManagementService } from '../services/mapping-management.service';\nimport { InitializationService } from '../services/initialization.service';\n\nimport { DataMapperAppComponent } from './app/data-mapper-app.component';\nimport { environment } from '../../../../environments/environment';\nimport { Examples } from '../models/examples';\n\n@Component({\n  selector: 'data-mapper-example-host',\n  template: '',\n  providers: [MappingManagementService, ErrorHandlerService, DocumentManagementService],\n})\n\nexport class DataMapperAppExampleHostComponent implements OnInit {\n\n  @ViewChild('dataMapperComponent')\n  dataMapperComponent: DataMapperAppComponent;\n\n  constructor(private initializationService: InitializationService) { }\n\n  ngOnInit() {\n    // initialize config information before initializing services\n    const c: ConfigModel = this.initializationService.cfg;\n\n    // store references to our services in our config model\n\n    // initialize base urls for our service calls\n    c.initCfg.baseJavaInspectionServiceUrl = environment.backendUrls.javaInspectionServiceUrl;\n    c.initCfg.baseXMLInspectionServiceUrl = environment.backendUrls.xmlInspectionServiceUrl;\n    c.initCfg.baseJSONInspectionServiceUrl = environment.backendUrls.jsonInspectionServiceUrl;\n    c.initCfg.baseMappingServiceUrl = environment.backendUrls.atlasServiceUrl;\n\n    if (environment.xsrf) {\n      c.initCfg.xsrfHeaderName = environment.xsrf.headerName;\n      c.initCfg.xsrfCookieName = environment.xsrf.cookieName;\n      c.initCfg.xsrfDefaultTokenValue = environment.xsrf.defaultTokenValue;\n    }\n\n    // initialize data for our class path service call\n    // note that quotes, newlines, and tabs are escaped\n    c.initCfg.pomPayload = Examples.pom;\n    c.initCfg.classPathFetchTimeoutInMilliseconds = 30000;\n    // if classPath is specified, maven call to resolve pom will be skipped\n    c.initCfg.classPath = null;\n\n    // enable mapping preview mode for standalone\n    c.initCfg.disableMappingPreviewMode = false;\n\n    // enable the navigation bar and import/export for stand-alone\n    c.initCfg.disableNavbar = false;\n\n    // initialize system\n    this.initializationService.initialize();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DataMapperAppExampleHostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataMapperErrorComponent.html":{"url":"components/DataMapperErrorComponent.html","title":"component - DataMapperErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataMapperErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                data-mapper-error\n            \n\n\n\n\n            \n                templateUrl\n                ./data-mapper-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                    Private\n                                elem\n                            \n                            \n                                    Private\n                                errors\n                            \n                            \n                                    Private\n                                errorSubscription\n                            \n                            \n                                isOpen\n                            \n                            \n                                    Private\n                                mouseEventTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                errorServiceRequired\n                            \n                            \n                                getErrors\n                            \n                            \n                                getFirstError\n                            \n                            \n                                getFirstWarning\n                            \n                            \n                                getInfos\n                            \n                            \n                                getWarnings\n                            \n                            \n                                handleAlertClose\n                            \n                            \n                                handleMouseEnter\n                            \n                            \n                                handleMouseLeave\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                showActiveErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorService\n                            \n                            \n                                modalErrorWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorService\n                    \n                \n                \n                    \n                        Type :         ErrorHandlerService\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalErrorWindow\n                    \n                \n                \n                    \n                        Type :         ModalErrorWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            errorServiceRequired\n                        \n                        \n                    \n                \n            \n            \n                \nerrorServiceRequired()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:59\n                \n            \n\n\n            \n                \n                    Return true if an error window is necessary, false otherwise.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFirstError\n                        \n                        \n                    \n                \n            \n            \n                \ngetFirstError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:122\n                \n            \n\n\n            \n                \n                    The fixed error window only needs to show one error.  The full collection of errors is\navailable from the error modal window.\n\n\n                    \n                        Returns :         ErrorInfo\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFirstWarning\n                        \n                        \n                    \n                \n            \n            \n                \ngetFirstWarning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:130\n                \n            \n\n\n            \n                \n                    The fixed error window only needs to show one warning.  The full collection of warnings is\navailable from the error modal window.\n\n\n                    \n                        Returns :         ErrorInfo\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInfos\n                        \n                        \n                    \n                \n            \n            \n                \ngetInfos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWarnings\n                        \n                        \n                    \n                \n            \n            \n                \ngetWarnings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleAlertClose\n                        \n                        \n                    \n                \n            \n            \n                \nhandleAlertClose(e: ErrorInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                ErrorInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseEnter\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseEnter(evt1: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:87\n                \n            \n\n\n            \n                \n                    Handle the event of a user mousing over the error window.  If they stay within the window\nfor a half-second then the active errors modal will show all of the errors/ warnings.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt1\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseLeave\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseLeave(evt1: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:102\n                \n            \n\n\n            \n                \n                    Handle the event of a user mousing out of the error window.  Disarm the event timer if that case.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt1\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            showActiveErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showActiveErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:112\n                \n            \n\n\n            \n                \n                    Show all errors/ warnings in a separate modal window.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            elem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorInfo[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mouseEventTimer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnDestroy } from '@angular/core';\n\nimport { ModalErrorWindowComponent } from '../modal/modal-error-window.component';\n\nimport { ErrorInfo, ErrorLevel } from '../../models/error.model';\nimport { ErrorHandlerService } from '../../services/error-handler.service';\nimport { ConfigModel } from '../../models/config.model';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'data-mapper-error',\n  templateUrl: './data-mapper-error.component.html',\n})\n\nexport class DataMapperErrorComponent implements OnInit, OnDestroy {\n  @Input() errorService: ErrorHandlerService;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  isOpen = true;\n  cfg: ConfigModel = null;\n\n  private elem = null;\n  private mouseEventTimer = null;\n  private errors: ErrorInfo[] = [];\n  private errorSubscription: Subscription;\n\n  ngOnInit() {\n    this.cfg = ConfigModel.getConfig();\n    this.errorSubscription = this.errorService.subscribe((errors: ErrorInfo[]) => {\n      this.errors = errors;\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.errorSubscription) {\n      this.errorSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Return true if an error window is necessary, false otherwise.\n   */\n  errorServiceRequired(): boolean {\n    return (this.errorService\n      && (ErrorHandlerService.filterWith(this.errors, this.cfg.mappings ? this.cfg.mappings.activeMapping : null).length > 0));\n  }\n\n  getErrors(): ErrorInfo[] {\n    return ErrorHandlerService.filterWith(this.errors, this.cfg.mappings.activeMapping, ErrorLevel.ERROR);\n  }\n\n  getWarnings(): ErrorInfo[] {\n    return ErrorHandlerService.filterWith(this.errors, this.cfg.mappings.activeMapping, ErrorLevel.WARN);\n  }\n\n  getInfos(): ErrorInfo[] {\n    return ErrorHandlerService.filterWith(this.errors, this.cfg.mappings.activeMapping, ErrorLevel.INFO);\n  }\n\n  handleAlertClose(e: ErrorInfo): void {\n    this.isOpen = true;\n    this.errorService.removeError(e.identifier, e.scope);\n  }\n\n  /**\n   * Handle the event of a user mousing over the error window.  If they stay within the window\n   * for a half-second then the active errors modal will show all of the errors/ warnings.\n   *\n   * @param evt1\n   */\n  handleMouseEnter(evt1: MouseEvent): void {\n    this.mouseEventTimer =  setTimeout(() => {\n        if (this.elem != null) {\n            evt1.stopPropagation();\n            evt1.preventDefault();\n          }\n      this.showActiveErrors();\n    }, 500);\n  }\n\n  /**\n   * Handle the event of a user mousing out of the error window.  Disarm the event timer if that case.\n   *\n   * @param evt1\n   */\n  handleMouseLeave(evt1: MouseEvent): void {\n    if (this.mouseEventTimer) {\n      clearTimeout(this.mouseEventTimer);\n    }\n    this.mouseEventTimer = null;\n  }\n\n  /**\n   * Show all errors/ warnings in a separate modal window.\n   */\n  private showActiveErrors(): void {\n    this.modalErrorWindow.reset();\n    this.modalErrorWindow.setErrors(ErrorHandlerService.filterWith(this.errors, this.cfg.mappings.activeMapping));\n    this.modalErrorWindow.show();\n  }\n\n  /**\n   * The fixed error window only needs to show one error.  The full collection of errors is\n   * available from the error modal window.\n   */\n  getFirstError(): ErrorInfo {\n    return this.getErrors()[0];\n  }\n\n  /**\n   * The fixed error window only needs to show one warning.  The full collection of warnings is\n   * available from the error modal window.\n   */\n  getFirstWarning(): ErrorInfo {\n    return this.getWarnings()[0];\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    {{ i.message }}\n  \n\n  \n    \n    {{ getFirstError().message }}\n  \n\n  \n    \n    {{ getFirstWarning().message }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ i.message }}            {{ getFirstError().message }}            {{ getFirstWarning().message }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DataMapperErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataMapperInitializationModel.html":{"url":"classes/DataMapperInitializationModel.html","title":"class - DataMapperInitializationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataMapperInitializationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/config.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                admHttpTimeout\n                            \n                            \n                                baseJavaInspectionServiceUrl\n                            \n                            \n                                baseJSONInspectionServiceUrl\n                            \n                            \n                                baseMappingServiceUrl\n                            \n                            \n                                baseXMLInspectionServiceUrl\n                            \n                            \n                                classNameBlacklist\n                            \n                            \n                                classPath\n                            \n                            \n                                classPathFetchTimeoutInMilliseconds\n                            \n                            \n                                dataMapperVersion\n                            \n                            \n                                disableMappingPreviewMode\n                            \n                            \n                                disableNavbar\n                            \n                            \n                                disablePrivateOnlyFields\n                            \n                            \n                                disableProtectedOnlyFields\n                            \n                            \n                                disablePublicGetterSetterFields\n                            \n                            \n                                disablePublicOnlyFields\n                            \n                            \n                                fieldNameBlacklist\n                            \n                            \n                                initializationErrorOccurred\n                            \n                            \n                                initialized\n                            \n                            \n                                loadingStatus\n                            \n                            \n                                mappingInitialized\n                            \n                            \n                                pomPayload\n                            \n                            \n                                xsrfCookieName\n                            \n                            \n                                xsrfDefaultTokenValue\n                            \n                            \n                                xsrfHeaderName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:69\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admHttpTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseJavaInspectionServiceUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseJSONInspectionServiceUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseMappingServiceUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseXMLInspectionServiceUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            classNameBlacklist\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            classPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            classPathFetchTimeoutInMilliseconds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataMapperVersion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0.9.2017.07.28'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableMappingPreviewMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableNavbar\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disablePrivateOnlyFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableProtectedOnlyFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disablePublicGetterSetterFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disablePublicOnlyFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldNameBlacklist\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initializationErrorOccurred\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Loading.'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappingInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pomPayload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xsrfCookieName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xsrfDefaultTokenValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xsrfHeaderName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\nimport { NGXLogger, NgxLoggerLevel } from 'ngx-logger';\nimport { environment } from '../../../../environments/environment';\nimport { MappingDefinition } from './mapping-definition.model';\nimport { DocumentDefinition } from './document-definition.model';\n\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { DocumentManagementService } from '../services/document-management.service';\nimport { MappingManagementService } from '../services/mapping-management.service';\nimport { InitializationService } from '../services/initialization.service';\nimport { ErrorInfo } from '../models/error.model';\n\nimport { DocumentType, InspectionType, CollectionType } from '../common/config.types';\nimport { FieldActionService } from '../services/field-action.service';\nimport { FileManagementService } from '../services/file-management.service';\n\nexport class DataMapperInitializationModel {\n  dataMapperVersion = '0.9.2017.07.28';\n  initialized = false;\n  loadingStatus = 'Loading.';\n  admHttpTimeout = 30000;  // 30 seconds\n  initializationErrorOccurred = false;\n\n  baseJavaInspectionServiceUrl: string;\n  baseXMLInspectionServiceUrl: string;\n  baseJSONInspectionServiceUrl: string;\n  baseMappingServiceUrl: string;\n\n  xsrfHeaderName: string;\n  xsrfCookieName: string;\n  xsrfDefaultTokenValue: string;\n\n  /* class path fetching configuration */\n  classPathFetchTimeoutInMilliseconds = 30000;\n  // if classPath is specified, maven call to resolve pom will be skipped\n  pomPayload: string;\n\n  classPath: string;\n\n  /* inspection service filtering flags */\n  fieldNameBlacklist: string[] = [];\n  classNameBlacklist: string[] = [];\n  disablePrivateOnlyFields = false;\n  disableProtectedOnlyFields = false;\n  disablePublicOnlyFields = false;\n  disablePublicGetterSetterFields = false;\n\n  disableMappingPreviewMode = false;\n\n  /* enable the navigation bar and import/export */\n  disableNavbar = true;\n\n  mappingInitialized = false;\n\n  constructor() {\n    if (environment.xsrf) {\n      this.xsrfHeaderName = environment.xsrf.headerName;\n      this.xsrfCookieName = environment.xsrf.cookieName;\n      this.xsrfDefaultTokenValue = environment.xsrf.defaultTokenValue;\n    }\n  }\n\n}\n\nexport class DocumentInitializationModel {\n  id: string;\n  type: DocumentType;\n  name: string;\n  description: string;\n  isSource: boolean;\n  showFields = true;\n  inspectionType: InspectionType;\n  inspectionSource: string;\n  inspectionResult: string;\n  selectedRoot: string;\n  collectionType: CollectionType;\n  collectionClassName: string;\n}\n\nexport class ConfigModel {\n  static mappingServicesPackagePrefix = 'io.atlasmap.v2';\n  static javaServicesPackagePrefix = 'io.atlasmap.java.v2';\n  static jsonServicesPackagePrefix = 'io.atlasmap.json.v2';\n  static xmlServicesPackagePrefix = 'io.atlasmap.xml.v2';\n  private static cfg: ConfigModel = new ConfigModel();\n\n  initCfg: DataMapperInitializationModel = new DataMapperInitializationModel;\n\n  /* current ui state config */\n  showMappingDetailTray = false;\n  showMappingTable = false;\n  showNamespaceTable = false;\n  showLinesAlways = true;\n  showTypes = false;\n  showMappedFields = true;\n  showUnmappedFields = true;\n  _showMappingPreview = false;\n  currentDraggedField: any = null;\n\n  documentService: DocumentManagementService;\n  mappingService: MappingManagementService;\n  errorService: ErrorHandlerService;\n  initializationService: InitializationService;\n  fieldActionService: FieldActionService;\n  fileService: FileManagementService;\n\n  sourceDocs: DocumentDefinition[] = [];\n  targetDocs: DocumentDefinition[] = [];\n  propertyDoc: DocumentDefinition = new DocumentDefinition();\n  constantDoc: DocumentDefinition = new DocumentDefinition();\n  mappingFiles: string[] = [];\n\n  mappings: MappingDefinition = null;\n\n  preloadedMappingJson: string;\n  preloadedFieldActionMetadata: any;\n  logger: NGXLogger;\n\n  constructor() {\n    this.propertyDoc.type = DocumentType.PROPERTY;\n    this.propertyDoc.name = 'Properties';\n    this.propertyDoc.isSource = true;\n    this.propertyDoc.showFields = false;\n    this.constantDoc.type = DocumentType.CONSTANT;\n    this.constantDoc.name = 'Constants';\n    this.constantDoc.isSource = true;\n    this.constantDoc.showFields = false;\n  }\n\n  static getConfig(): ConfigModel {\n    return ConfigModel.cfg;\n  }\n\n  static setConfig(cfg: ConfigModel): void {\n    ConfigModel.cfg = cfg;\n  }\n\n  set showMappingPreview(show: boolean) {\n    if (show && !this._showMappingPreview) {\n      this.mappingService.enableMappingPreview();\n    } else if (!show && this._showMappingPreview) {\n      this.mappingService.disableMappingPreview();\n    }\n    this._showMappingPreview = show;\n  }\n\n  get showMappingPreview(): boolean {\n    return this._showMappingPreview;\n  }\n\n  isDebugEnabled(): boolean {\n    return [NgxLoggerLevel.DEBUG, NgxLoggerLevel.TRACE].includes(this.logger.getConfigSnapshot().level);\n  }\n\n  isTraceEnabled(): boolean {\n    return this.logger.getConfigSnapshot().level === NgxLoggerLevel.TRACE;\n  }\n\n  addDocument(docInitModel: DocumentInitializationModel): DocumentDefinition {\n    const docDef: DocumentDefinition = new DocumentDefinition();\n    docDef.initModel = docInitModel;\n    docDef.id = docInitModel.id;\n    docDef.type = docInitModel.type;\n    docDef.name = docInitModel.name;\n    docDef.description = docInitModel.description;\n    docDef.isSource = docInitModel.isSource;\n    docDef.showFields = docInitModel.showFields;\n    docDef.inspectionType = docInitModel.inspectionType;\n    docDef.inspectionSource = docInitModel.inspectionSource;\n    docDef.inspectionResult = docInitModel.inspectionResult;\n    docDef.selectedRoot = docInitModel.selectedRoot;\n\n    if (docDef.type === DocumentType.XSD) {\n      docDef.uri = 'atlas:' + 'xml' + ':' + docDef.id;\n    } else if (docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri = 'atlas:' + 'java' + ':' + docDef.id;\n    } else {\n      docDef.uri = 'atlas:' + docDef.type.toLowerCase() + ':' + docDef.id;\n    }\n\n    if (docDef.type === DocumentType.JAVA || docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri += '?className=' + docDef.inspectionSource;\n      if (docInitModel.collectionType && docInitModel.collectionType !== CollectionType.NONE) {\n        docDef.uri += '&collectionType=' + docInitModel.collectionType;\n        if (docInitModel.collectionClassName) {\n          docDef.uri += '&collectionClassName=' + docInitModel.collectionClassName;\n        }\n      }\n    }\n\n    if (docInitModel.isSource) {\n      this.sourceDocs.push(docDef);\n    } else {\n      this.targetDocs.push(docDef);\n    }\n    return docDef;\n  }\n\n  addDocuments(docModels: DocumentInitializationModel[]): DocumentDefinition[] {\n    const docDefs: DocumentDefinition[] = [];\n    for (const docModel of docModels) {\n      docDefs.push(this.addDocument(docModel));\n    }\n    return docDefs;\n  }\n\n  getDocsWithoutPropertyDoc(isSource: boolean): DocumentDefinition[] {\n    return [].concat(isSource ? this.sourceDocs : this.targetDocs);\n  }\n\n  getDocs(isSource: boolean): DocumentDefinition[] {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    return isSource ? [this.propertyDoc, this.constantDoc].concat(docs) : docs;\n  }\n\n  /**\n   * Return a uri:DocumentDefinition document map for either the sources or targets panel contents.\n   *\n   * @param cfg\n   * @param isSource\n   */\n  getDocUriMap(cfg: ConfigModel, isSource: boolean): {[key: string]: DocumentDefinition} {\n    const docMap: {[key: string]: DocumentDefinition} = {};\n    for (const doc of cfg.getDocs(isSource)) {\n      docMap[doc.uri] = doc;\n    }\n    return docMap;\n  }\n\n  /**\n   * Clear source/target/mapping documents from the model.  Reset constant and property document definitions.\n   */\n  clearDocs(): void {\n    this.sourceDocs = [];\n    this.targetDocs = [];\n    this.propertyDoc.clearFields();\n    this.constantDoc.clearFields();\n    this.mappingFiles = [];\n  }\n\n  hasJavaDocuments(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isClassPathResolutionNeeded(): boolean {\n    if (this.initCfg.classPath) {\n      return false;\n    }\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA && doc.inspectionResult == null) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getDocForIdentifier(documentId: string, isSource: boolean): DocumentDefinition {\n    for (const d of this.getDocs(isSource)) {\n      if (d.id === documentId) {\n        return d;\n      }\n    }\n    return null;\n  }\n\n  getFirstXmlDoc(isSource: boolean) {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    for (const doc of docs) {\n      if (doc.type === DocumentType.XML) {\n        return doc;\n      }\n    }\n    return null;\n  }\n\n  getAllDocs(): DocumentDefinition[] {\n    return [this.propertyDoc, this.constantDoc].concat(this.sourceDocs).concat(this.targetDocs);\n  }\n\n  documentsAreLoaded(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (!doc.initialized) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataMapperModule.html":{"url":"modules/DataMapperModule.html","title":"module - DataMapperModule","body":"\n                   \n\n\n\n\n    Modules\n    DataMapperModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataMapperModule\n\n\n\ncluster_DataMapperModule_declarations\n\n\n\ncluster_DataMapperModule_exports\n\n\n\ncluster_DataMapperModule_providers\n\n\n\n\nClassNameComponent\n\nClassNameComponent\n\n\n\nDataMapperModule\n\nDataMapperModule\n\nDataMapperModule -->\n\nClassNameComponent->DataMapperModule\n\n\n\n\n\nCollapsableHeaderComponent\n\nCollapsableHeaderComponent\n\nDataMapperModule -->\n\nCollapsableHeaderComponent->DataMapperModule\n\n\n\n\n\nConstantFieldEditComponent\n\nConstantFieldEditComponent\n\nDataMapperModule -->\n\nConstantFieldEditComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppComponent\n\nDataMapperAppComponent\n\nDataMapperModule -->\n\nDataMapperAppComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppExampleHostComponent\n\nDataMapperAppExampleHostComponent\n\nDataMapperModule -->\n\nDataMapperAppExampleHostComponent->DataMapperModule\n\n\n\n\n\nDataMapperErrorComponent\n\nDataMapperErrorComponent\n\nDataMapperModule -->\n\nDataMapperErrorComponent->DataMapperModule\n\n\n\n\n\nDocumentDefinitionComponent\n\nDocumentDefinitionComponent\n\nDataMapperModule -->\n\nDocumentDefinitionComponent->DataMapperModule\n\n\n\n\n\nDocumentFieldDetailComponent\n\nDocumentFieldDetailComponent\n\nDataMapperModule -->\n\nDocumentFieldDetailComponent->DataMapperModule\n\n\n\n\n\nEmptyModalBodyComponent\n\nEmptyModalBodyComponent\n\nDataMapperModule -->\n\nEmptyModalBodyComponent->DataMapperModule\n\n\n\n\n\nExpressionComponent\n\nExpressionComponent\n\nDataMapperModule -->\n\nExpressionComponent->DataMapperModule\n\n\n\n\n\nFieldEditComponent\n\nFieldEditComponent\n\nDataMapperModule -->\n\nFieldEditComponent->DataMapperModule\n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nDataMapperModule -->\n\nFocusDirective->DataMapperModule\n\n\n\n\n\nLineMachineComponent\n\nLineMachineComponent\n\nDataMapperModule -->\n\nLineMachineComponent->DataMapperModule\n\n\n\n\n\nLookupTableComponent\n\nLookupTableComponent\n\nDataMapperModule -->\n\nLookupTableComponent->DataMapperModule\n\n\n\n\n\nMappingDetailComponent\n\nMappingDetailComponent\n\nDataMapperModule -->\n\nMappingDetailComponent->DataMapperModule\n\n\n\n\n\nMappingFieldActionArgumentComponent\n\nMappingFieldActionArgumentComponent\n\nDataMapperModule -->\n\nMappingFieldActionArgumentComponent->DataMapperModule\n\n\n\n\n\nMappingFieldActionComponent\n\nMappingFieldActionComponent\n\nDataMapperModule -->\n\nMappingFieldActionComponent->DataMapperModule\n\n\n\n\n\nMappingFieldContainerComponent\n\nMappingFieldContainerComponent\n\nDataMapperModule -->\n\nMappingFieldContainerComponent->DataMapperModule\n\n\n\n\n\nMappingFieldDetailComponent\n\nMappingFieldDetailComponent\n\nDataMapperModule -->\n\nMappingFieldDetailComponent->DataMapperModule\n\n\n\n\n\nMappingListComponent\n\nMappingListComponent\n\nDataMapperModule -->\n\nMappingListComponent->DataMapperModule\n\n\n\n\n\nMappingListFieldComponent\n\nMappingListFieldComponent\n\nDataMapperModule -->\n\nMappingListFieldComponent->DataMapperModule\n\n\n\n\n\nMappingSelectionComponent\n\nMappingSelectionComponent\n\nDataMapperModule -->\n\nMappingSelectionComponent->DataMapperModule\n\n\n\n\n\nMappingSelectionSectionComponent\n\nMappingSelectionSectionComponent\n\nDataMapperModule -->\n\nMappingSelectionSectionComponent->DataMapperModule\n\n\n\n\n\nModalErrorDetailComponent\n\nModalErrorDetailComponent\n\nDataMapperModule -->\n\nModalErrorDetailComponent->DataMapperModule\n\n\n\n\n\nModalErrorWindowComponent\n\nModalErrorWindowComponent\n\nDataMapperModule -->\n\nModalErrorWindowComponent->DataMapperModule\n\n\n\n\n\nModalWindowComponent\n\nModalWindowComponent\n\nDataMapperModule -->\n\nModalWindowComponent->DataMapperModule\n\n\n\n\n\nNamespaceEditComponent\n\nNamespaceEditComponent\n\nDataMapperModule -->\n\nNamespaceEditComponent->DataMapperModule\n\n\n\n\n\nNamespaceListComponent\n\nNamespaceListComponent\n\nDataMapperModule -->\n\nNamespaceListComponent->DataMapperModule\n\n\n\n\n\nPropertyFieldEditComponent\n\nPropertyFieldEditComponent\n\nDataMapperModule -->\n\nPropertyFieldEditComponent->DataMapperModule\n\n\n\n\n\nTemplateEditComponent\n\nTemplateEditComponent\n\nDataMapperModule -->\n\nTemplateEditComponent->DataMapperModule\n\n\n\n\n\nToErrorIconClassPipe\n\nToErrorIconClassPipe\n\nDataMapperModule -->\n\nToErrorIconClassPipe->DataMapperModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nDataMapperModule -->\n\nToolbarComponent->DataMapperModule\n\n\n\n\n\nTransitionSelectionComponent\n\nTransitionSelectionComponent\n\nDataMapperModule -->\n\nTransitionSelectionComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppComponent \n\nDataMapperAppComponent \n\nDataMapperAppComponent  -->\n\nDataMapperModule->DataMapperAppComponent \n\n\n\n\n\nDataMapperAppExampleHostComponent \n\nDataMapperAppExampleHostComponent \n\nDataMapperAppExampleHostComponent  -->\n\nDataMapperModule->DataMapperAppExampleHostComponent \n\n\n\nDataMapperAppExampleHostComponent  -->\n\nDataMapperModule->DataMapperAppExampleHostComponent \n\n\n\n\n\nModalErrorWindowComponent \n\nModalErrorWindowComponent \n\nModalErrorWindowComponent  -->\n\nDataMapperModule->ModalErrorWindowComponent \n\n\n\n\n\nModalWindowComponent \n\nModalWindowComponent \n\nModalWindowComponent  -->\n\nDataMapperModule->ModalWindowComponent \n\n\n\n\n\nDocumentManagementService\n\nDocumentManagementService\n\nDataMapperModule -->\n\nDocumentManagementService->DataMapperModule\n\n\n\n\n\nErrorHandlerService\n\nErrorHandlerService\n\nDataMapperModule -->\n\nErrorHandlerService->DataMapperModule\n\n\n\n\n\nFieldActionService\n\nFieldActionService\n\nDataMapperModule -->\n\nFieldActionService->DataMapperModule\n\n\n\n\n\nFileManagementService\n\nFileManagementService\n\nDataMapperModule -->\n\nFileManagementService->DataMapperModule\n\n\n\n\n\nInitializationService\n\nInitializationService\n\nDataMapperModule -->\n\nInitializationService->DataMapperModule\n\n\n\n\n\nMappingManagementService\n\nMappingManagementService\n\nDataMapperModule -->\n\nMappingManagementService->DataMapperModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ClassNameComponent\n                        \n                        \n                            CollapsableHeaderComponent\n                        \n                        \n                            ConstantFieldEditComponent\n                        \n                        \n                            DataMapperAppComponent\n                        \n                        \n                            DataMapperAppExampleHostComponent\n                        \n                        \n                            DataMapperErrorComponent\n                        \n                        \n                            DocumentDefinitionComponent\n                        \n                        \n                            DocumentFieldDetailComponent\n                        \n                        \n                            EmptyModalBodyComponent\n                        \n                        \n                            ExpressionComponent\n                        \n                        \n                            FieldEditComponent\n                        \n                        \n                            FocusDirective\n                        \n                        \n                            LineMachineComponent\n                        \n                        \n                            LookupTableComponent\n                        \n                        \n                            MappingDetailComponent\n                        \n                        \n                            MappingFieldActionArgumentComponent\n                        \n                        \n                            MappingFieldActionComponent\n                        \n                        \n                            MappingFieldContainerComponent\n                        \n                        \n                            MappingFieldDetailComponent\n                        \n                        \n                            MappingListComponent\n                        \n                        \n                            MappingListFieldComponent\n                        \n                        \n                            MappingSelectionComponent\n                        \n                        \n                            MappingSelectionSectionComponent\n                        \n                        \n                            ModalErrorDetailComponent\n                        \n                        \n                            ModalErrorWindowComponent\n                        \n                        \n                            ModalWindowComponent\n                        \n                        \n                            NamespaceEditComponent\n                        \n                        \n                            NamespaceListComponent\n                        \n                        \n                            PropertyFieldEditComponent\n                        \n                        \n                            TemplateEditComponent\n                        \n                        \n                            ToErrorIconClassPipe\n                        \n                        \n                            ToolbarComponent\n                        \n                        \n                            TransitionSelectionComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ClassNameComponent\n                        \n                        \n                            ConstantFieldEditComponent\n                        \n                        \n                            EmptyModalBodyComponent\n                        \n                        \n                            FieldEditComponent\n                        \n                        \n                            LookupTableComponent\n                        \n                        \n                            MappingSelectionComponent\n                        \n                        \n                            NamespaceEditComponent\n                        \n                        \n                            PropertyFieldEditComponent\n                        \n                        \n                            TemplateEditComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DocumentManagementService\n                        \n                        \n                            ErrorHandlerService\n                        \n                        \n                            FieldActionService\n                        \n                        \n                            FileManagementService\n                        \n                        \n                            InitializationService\n                        \n                        \n                            MappingManagementService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DataMapperAppComponent\n                        \n                        \n                            DataMapperAppExampleHostComponent\n                        \n                        \n                            ModalErrorWindowComponent\n                        \n                        \n                            ModalWindowComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            DataMapperAppExampleHostComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            withInterceptor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    withInterceptor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/data-mapper.module.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n    Copyright (C) 2017 Red Hat, Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\nimport { NgModule, ModuleWithProviders, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HttpClientXsrfModule, HttpXsrfTokenExtractor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AlertModule, BsDropdownModule, TooltipModule, TypeaheadModule } from 'ngx-bootstrap';\nimport { LoggerModule, NGXLogger } from 'ngx-logger';\nimport { environment } from '../../../environments/environment';\nimport { DocumentManagementService } from './services/document-management.service';\nimport { MappingManagementService } from './services/mapping-management.service';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { InitializationService } from './services/initialization.service';\n\nimport { DataMapperAppExampleHostComponent } from './components/data-mapper-example-host.component';\nimport { DataMapperAppComponent } from './components/app/data-mapper-app.component';\nimport { DataMapperErrorComponent } from './components/app/data-mapper-error.component';\nimport { ModalWindowComponent, EmptyModalBodyComponent } from './components/modal/modal-window.component';\nimport { ModalErrorWindowComponent } from './components/modal/modal-error-window.component';\nimport { ModalErrorDetailComponent } from './components/modal/modal-error-detail.component';\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\nimport { TemplateEditComponent } from './components/app/template-edit.component';\nimport { LineMachineComponent } from './components/app/line-machine.component';\nimport { ClassNameComponent } from './components/document/class-name.component';\nimport { CollapsableHeaderComponent } from './components/mapping-detail/collapsable-header.component';\nimport { DocumentDefinitionComponent } from './components/document/document-definition.component';\nimport { DocumentFieldDetailComponent } from './components/document/document-field-detail.component';\nimport { PropertyFieldEditComponent } from './components/app/property-field-edit.component';\nimport { ConstantFieldEditComponent } from './components/app/constant-field-edit.component';\nimport { FieldEditComponent } from './components/app/field-edit.component';\nimport { NamespaceEditComponent } from './components/app/namespace-edit.component';\nimport { MappingListComponent } from './components/mapping-list/mapping-list.component';\nimport { MappingListFieldComponent } from './components/mapping-list/mapping-list-field.component';\nimport { NamespaceListComponent } from './components/mapping-list/namespace-list.component';\nimport { MappingDetailComponent } from './components/mapping-detail/mapping-detail.component';\nimport { MappingFieldContainerComponent } from './components/mapping-detail/mapping-field-container.component';\nimport { MappingFieldDetailComponent } from './components/mapping-detail/mapping-field-detail.component';\nimport { MappingFieldActionComponent } from './components/mapping-detail/mapping-field-action.component';\nimport { MappingFieldActionArgumentComponent } from './components/mapping-detail/mapping-field-action-argument.component';\nimport { MappingSelectionComponent } from './components/mapping-detail/mapping-selection.component';\nimport { MappingSelectionSectionComponent } from './components/mapping-detail/mapping-selection-section.component';\nimport { LookupTableComponent } from './components/mapping-detail/lookup-table.component';\nimport { TransitionSelectionComponent } from './components/mapping-detail/transition-selection.component';\nimport { FocusDirective } from './common/focus.directive';\nimport { ExpressionComponent } from './components/toolbar/expression.component';\n\n// export services/types for consumers of this module\nexport { ApiXsrfInterceptor, ApiHttpXsrfTokenExtractor } from './services/api-xsrf.service';\nexport { ErrorHandlerService } from './services/error-handler.service';\nexport { DocumentManagementService } from './services/document-management.service';\nexport { MappingManagementService } from './services/mapping-management.service';\nexport { InitializationService } from './services/initialization.service';\nexport { DocumentDefinition } from './models/document-definition.model';\nexport { MappingDefinition } from './models/mapping-definition.model';\nexport { DocumentType, InspectionType } from './common/config.types';\nexport { ConfigModel, DocumentInitializationModel } from './models/config.model';\nexport { MappingModel } from './models/mapping.model';\nexport { MappingSerializer } from './utils/mapping-serializer';\n\nimport { ToErrorIconClassPipe } from './common/to-error-icon-class.pipe';\nimport { ApiXsrfInterceptor, ApiHttpXsrfTokenExtractor } from './services/api-xsrf.service';\nimport { FieldActionService } from './services/field-action.service';\nimport { FileManagementService } from './services/file-management.service';\n\nexport { DataMapperAppComponent } from './components/app/data-mapper-app.component';\n\nexport const typeaheadModuleForRoot: ModuleWithProviders = TypeaheadModule.forRoot();\nexport const tooltipModuleForRoot: ModuleWithProviders = TooltipModule.forRoot();\nexport const bsDropdownModuleForRoot: ModuleWithProviders = BsDropdownModule.forRoot();\nexport const httpClientXsrfModuleForRoot: ModuleWithProviders = HttpClientXsrfModule.withOptions(environment.xsrf);\nexport const alertModuleForRoot: ModuleWithProviders = AlertModule.forRoot();\nexport const loggerModuleForRoot: ModuleWithProviders = LoggerModule.forRoot(environment.ngxLoggerConfig);\n\n// @dynamic\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    typeaheadModuleForRoot,\n    tooltipModuleForRoot,\n    bsDropdownModuleForRoot,\n    httpClientXsrfModuleForRoot,\n    alertModuleForRoot,\n    loggerModuleForRoot,\n  ],\n  declarations: [\n    DataMapperAppComponent,\n    ClassNameComponent,\n    DocumentDefinitionComponent,\n    MappingDetailComponent,\n    MappingFieldContainerComponent,\n    ModalWindowComponent,\n    ModalErrorWindowComponent,\n    ModalErrorDetailComponent,\n    DataMapperAppExampleHostComponent,\n    MappingFieldActionComponent,\n    MappingFieldActionArgumentComponent,\n    MappingFieldDetailComponent,\n    DocumentFieldDetailComponent,\n    DataMapperErrorComponent,\n    TransitionSelectionComponent,\n    LineMachineComponent,\n    MappingSelectionComponent,\n    MappingSelectionSectionComponent,\n    ToolbarComponent,\n    LookupTableComponent,\n    EmptyModalBodyComponent,\n    FieldEditComponent,\n    NamespaceEditComponent,\n    PropertyFieldEditComponent,\n    ConstantFieldEditComponent,\n    CollapsableHeaderComponent,\n    MappingListComponent,\n    MappingListFieldComponent,\n    NamespaceListComponent,\n    TemplateEditComponent,\n    ExpressionComponent,\n    FocusDirective,\n    ToErrorIconClassPipe\n  ],\n  exports: [\n    DataMapperAppExampleHostComponent,\n    ModalWindowComponent,\n    ModalErrorWindowComponent,\n    DataMapperAppComponent,\n    AlertModule\n  ],\n  providers: [\n    DocumentManagementService,\n    MappingManagementService,\n    ErrorHandlerService,\n    InitializationService,\n    FieldActionService,\n    FileManagementService,\n    NGXLogger,\n  ],\n  entryComponents: [\n    MappingSelectionComponent,\n    LookupTableComponent,\n    EmptyModalBodyComponent,\n    FieldEditComponent,\n    NamespaceEditComponent,\n    PropertyFieldEditComponent,\n    ClassNameComponent,\n    ConstantFieldEditComponent,\n    TemplateEditComponent,\n  ],\n  bootstrap: [DataMapperAppExampleHostComponent],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\n\nexport class DataMapperModule {\n  static withInterceptor(): Array {\n    return [\n      { ngModule: DataMapperModule,\n        providers: [\n          DocumentManagementService,\n          MappingManagementService,\n          ErrorHandlerService,\n          FieldActionService,\n          FileManagementService,\n          InitializationService,\n          {\n            provide: HTTP_INTERCEPTORS,\n            useClass: ApiXsrfInterceptor,\n            multi: true\n          },\n        ],\n      },\n      { ngModule: DataMapperModule,\n        providers: [\n          DocumentManagementService,\n          MappingManagementService,\n          ErrorHandlerService,\n          FieldActionService,\n          FileManagementService,\n          InitializationService,\n          {\n            provide: HttpXsrfTokenExtractor,\n            useClass: ApiHttpXsrfTokenExtractor,\n            multi: false\n          },\n        ],\n      }\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataMapperUtil.html":{"url":"classes/DataMapperUtil.html","title":"class - DataMapperUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataMapperUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                HTTP_STATUS_NO_CONTENT\n                            \n                            \n                                    Static\n                                HTTP_STATUS_OK\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                extractDisplayPath\n                            \n                            \n                                    Static\n                                    Async\n                                readBinaryFile\n                            \n                            \n                                    Static\n                                    Async\n                                readFile\n                            \n                            \n                                    Static\n                                removeItemFromArray\n                            \n                            \n                                    Static\n                                splitByString\n                            \n                            \n                                    Static\n                                str2bytes\n                            \n                            \n                                    Static\n                                toDisplayable\n                            \n                            \n                                    Static\n                                    Async\n                                writeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            HTTP_STATUS_NO_CONTENT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 204\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            HTTP_STATUS_OK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            extractDisplayPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractDisplayPath(path: string, fieldWidth: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:152\n                \n            \n\n\n            \n                \n                    Return a string path that fits into the width provided.  Capture as much of the leaf\nas possible, then as much of the beginning with the remaining space.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fieldWidth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            readBinaryFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readBinaryFile(fileName: any, reader: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:101\n                \n            \n\n\n            \n                \n                    Perform an asynchronous binary read of the specified file name with the specified reader object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fileName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nfile to read\n\n\n                                    \n                                \n                                \n                                    reader\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nreader object\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            readFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(fileName: any, reader: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:85\n                \n            \n\n\n            \n                \n                    Asynchronously read from the specified file and return as a string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reader\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            removeItemFromArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItemFromArray(item: any, items: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    items\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            splitByString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    splitByString(inStr: string, splitMarker: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:46\n                \n            \n\n\n            \n                \n                    Split a source string by the specified substring into a string array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inStr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    splitMarker\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            str2bytes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    str2bytes(str: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:71\n                \n            \n\n\n            \n                \n                    Turn a string into a byte array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Uint8Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            toDisplayable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toDisplayable(camelCaseString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:130\n                \n            \n\n\n            \n                \n                    Convert a camel-case string into human-readable form.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camelCaseString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            writeFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeFile(fileContent: Blob, fName: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:118\n                \n            \n\n\n            \n                \n                    Asynchronously write the specified file content (Blob) to the specified file name.  It will appear\nin the user's local Downloads directory (or equivalent).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileContent\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { saveAs } from 'file-saver';\n\nexport class DataMapperUtil {\n\n  static HTTP_STATUS_OK = 200;\n  static HTTP_STATUS_NO_CONTENT = 204;\n\n  static removeItemFromArray(item: any, items: any[]): boolean {\n    if (item == null || items == null || items.length === 0) {\n      return false;\n    }\n    let i = 0;\n    let itemWasRemoved = false;\n    while (i  {\n    return new Promise((resolve, reject) => {\n      reader.onload = (event: any) => {\n        const fileBody = reader.result;\n        resolve(fileBody);\n      };\n      reader.readAsText(fileName);\n    });\n  }\n\n  /**\n   *  Perform an asynchronous binary read of the specified file name with the specified reader object.\n   *\n   * @param fileName - file to read\n   * @param reader - reader object\n   */\n  static async readBinaryFile(fileName: any, reader: any): Promise {\n    return new Promise((resolve, reject) => {\n      reader.onload = (event: any) => {\n        const fileBody = new Int8Array(reader.result);\n        resolve(fileBody);\n      };\n      reader.readAsArrayBuffer(fileName);\n    });\n  }\n\n  /**\n   * Asynchronously write the specified file content (Blob) to the specified file name.  It will appear\n   * in the user's local Downloads directory (or equivalent).\n   *\n   * @param fileContent\n   * @param fName\n   */\n  static async writeFile(fileContent: Blob, fName: any): Promise {\n    return new Promise((resolve, reject) => {\n      saveAs(fileContent, fName);\n      resolve(true);\n    });\n  }\n\n  /**\n   * Convert a camel-case string into human-readable form.\n   *\n   * @param camelCaseString\n   */\n  static toDisplayable(camelCaseString: string): string {\n    if (typeof camelCaseString === 'undefined' || !camelCaseString || camelCaseString.indexOf(' ') >= 0) {\n      return camelCaseString;\n    }\n    let displayableString: string = camelCaseString.charAt(0).toUpperCase();\n    for (let index = 1; index = MAX_PATH_WIDTH) {\n      return leaf.substr(0, MAX_PATH_WIDTH);\n    }\n    const delta = MAX_PATH_WIDTH - leaf.length;\n    return path.substr(0, delta) + '...' + leaf;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentFieldDetailComponent.html":{"url":"components/DocumentFieldDetailComponent.html","title":"component - DocumentFieldDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentFieldDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                document-field-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./document-field-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fieldComponents\n                            \n                            \n                                fieldDetailElement\n                            \n                            \n                                    Private\n                                isDragDropTarget\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allowDrop\n                            \n                            \n                                dragEnterLeave\n                            \n                            \n                                editField\n                            \n                            \n                                endDrag\n                            \n                            \n                                fieldShouldBeVisible\n                            \n                            \n                                getCssClass\n                            \n                            \n                                getElementPosition\n                            \n                            \n                                getFieldDetailComponent\n                            \n                            \n                                getFieldId\n                            \n                            \n                                getFieldTypeIcon\n                            \n                            \n                                getMappingClass\n                            \n                            \n                                getParentToggleClass\n                            \n                            \n                                getSpacerWidth\n                            \n                            \n                                getTransformationClass\n                            \n                            \n                                handleMouseClick\n                            \n                            \n                                handleMouseOver\n                            \n                            \n                                removeField\n                            \n                            \n                                startDrag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                field\n                            \n                            \n                                lineMachine\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selected\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         Field\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMachine\n                    \n                \n                \n                    \n                        Type :         LineMachineComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:40\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allowDrop\n                        \n                        \n                    \n                \n            \n            \n                \nallowDrop(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragEnterLeave\n                        \n                        \n                    \n                \n            \n            \n                \ndragEnterLeave(event: any, entering: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entering\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editField\n                        \n                        \n                    \n                \n            \n            \n                \neditField(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endDrag\n                        \n                        \n                    \n                \n            \n            \n                \nendDrag(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fieldShouldBeVisible\n                        \n                        \n                    \n                \n            \n            \n                \nfieldShouldBeVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCssClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetCssClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getElementPosition\n                        \n                        \n                    \n                \n            \n            \n                \ngetElementPosition()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldDetailComponent\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldDetailComponent(field: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DocumentFieldDetailComponent\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldId\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:281\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldTypeIcon\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldTypeIcon()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappingClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappingClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParentToggleClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetParentToggleClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSpacerWidth\n                        \n                        \n                    \n                \n            \n            \n                \ngetSpacerWidth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:276\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SafeStyle\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTransformationClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetTransformationClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseClick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:188\n                \n            \n\n\n            \n                \n                    Semantic support for a mouse click.\n\nM1 - the field is selected\nCtrl/Cmd-M1 - compound-select\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseOver\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseOver(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeField\n                        \n                        \n                    \n                \n            \n            \n                \nremoveField(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:257\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startDrag\n                        \n                        \n                    \n                \n            \n            \n                \nstartDrag(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldComponents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('fieldDetail')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldDetailElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('fieldDetailElement')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDragDropTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n\n                \n                    \n                        getselected()\n                    \n                \n                            \n                                \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:285\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, ElementRef, ViewChild, ViewChildren, QueryList } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { DocumentType } from '../../common/config.types';\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\n\nimport { LineMachineComponent } from '../app/line-machine.component';\nimport { ModalWindowComponent } from '../modal/modal-window.component';\n\nimport { PropertyFieldEditComponent } from '../app/property-field-edit.component';\nimport { ConstantFieldEditComponent } from '../app/constant-field-edit.component';\nimport { FieldEditComponent } from '../app/field-edit.component';\n\n@Component({\n  selector: 'document-field-detail',\n  templateUrl: './document-field-detail.component.html',\n})\n\nexport class DocumentFieldDetailComponent {\n  @Input() cfg: ConfigModel;\n  @Input() field: Field;\n  @Input() lineMachine: LineMachineComponent;\n  @Input() modalWindow: ModalWindowComponent;\n\n  @ViewChild('fieldDetailElement') fieldDetailElement: ElementRef;\n  @ViewChildren('fieldDetail') fieldComponents: QueryList;\n\n  private isDragDropTarget = false;\n\n  constructor(private sanitizer: DomSanitizer) { }\n\n  startDrag(event: any): void {\n\n    if (!this.field.isTerminal()) {\n      // ignore drag event, it's coming from a child field who's already set on the drag event\n      return;\n    }\n\n    this.cfg.currentDraggedField = null;\n\n    // event's data transfer store isn't available during dragenter/dragleave/dragover, so we need\n    // to store this info in a global somewhere since those methods depend on knowing if the\n    // dragged field is source/target\n    event = event || window.event;\n    event.dataTransfer.setData('text', '');  // firefox bug\n    this.cfg.currentDraggedField = this.field;\n  }\n\n  dragEnterLeave(event: any, entering: boolean): void {\n    if (!this.field.isTerminal() || (this.field.isSource() === this.cfg.currentDraggedField.isSource())) {\n      this.isDragDropTarget = false;\n      return;\n    }\n    this.isDragDropTarget = entering;\n  }\n\n  allowDrop(event: any): void {\n    if (!this.field.isTerminal() || (this.field.isSource() === this.cfg.currentDraggedField.isSource())) {\n      this.isDragDropTarget = false;\n      return;\n    }\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n    this.isDragDropTarget = true;\n  }\n\n  endDrag(event: MouseEvent): void {\n    this.isDragDropTarget = false;\n    if (!this.field.isTerminal() || (this.field.isSource() === this.cfg.currentDraggedField.isSource())) {\n      return;\n    }\n\n    const droppedField: Field = this.cfg.currentDraggedField;\n    if (droppedField == null) {\n      return;\n    }\n\n    if (!this.cfg.currentDraggedField.selected) {\n      this.cfg.mappingService.fieldSelected(this.cfg.currentDraggedField, event.ctrlKey || event.metaKey);\n    }\n    this.cfg.mappingService.fieldSelected(this.field, false);\n  }\n\n  getFieldTypeIcon(): string {\n    if (this.field.enumeration) {\n      return 'fa fa-file-text-o';\n    }\n    if (this.field.isCollection) {\n      return 'fa fa-list-ul';\n    }\n    if (this.field.docDef.type === DocumentType.XML) {\n      return this.field.isAttribute ? 'fa fa-at' : 'fa fa-code';\n    }\n    return 'fa fa-file-o';\n  }\n\n  fieldShouldBeVisible(): boolean {\n    const partOfMapping: boolean = this.field.partOfMapping;\n    return partOfMapping ? this.cfg.showMappedFields : this.cfg.showUnmappedFields;\n  }\n\n  getTransformationClass(): string {\n    if (!this.field.partOfMapping || !this.field.partOfTransformation) {\n      return 'partOfMappingIcon partOfMappingIconHidden';\n    }\n    return 'partOfMappingIcon fa fa-bolt';\n  }\n\n  getMappingClass(): string {\n    if (!this.field.partOfMapping) {\n      return 'partOfMappingIcon partOfMappingIconHidden';\n    }\n    let clz = 'fa fa-circle';\n    if (!this.field.isTerminal() && this.field.hasUnmappedChildren) {\n      clz = 'fa fa-adjust';\n    }\n    return 'partOfMappingIcon ' + clz;\n  }\n\n  getCssClass(): string {\n    let cssClass = 'fieldDetail';\n    if (this.selected) {\n      cssClass += ' selectedField';\n    }\n    if (!this.field.isTerminal()) {\n      cssClass += ' parentField';\n    }\n    if (!this.field.isSource()) {\n      cssClass += ' outputField';\n    }\n    if (this.isDragDropTarget) {\n      cssClass += ' dragHover';\n    }\n    return cssClass;\n  }\n\n  getElementPosition(): any {\n    let x = 0;\n    let y = 0;\n\n    let el: any = this.fieldDetailElement.nativeElement;\n    while (el != null) {\n      x += el.offsetLeft;\n      y += el.offsetTop;\n      el = el.offsetParent;\n    }\n    return { 'x': x, 'y': y };\n  }\n\n  handleMouseOver(event: MouseEvent): void {\n    if (this.field.isTerminal() && this.lineMachine != null) {\n      this.lineMachine.handleDocumentFieldMouseOver(this, event, this.field.isSource());\n    }\n  }\n\n  getParentToggleClass() {\n    return 'arrow fa fa-angle-' + (this.field.collapsed ? 'right' : 'down');\n  }\n\n  /**\n   * Semantic support for a mouse click.\n   * * M1 - the field is selected\n   * * Ctrl/Cmd-M1 - compound-select\n   *\n   * @param event\n   */\n  handleMouseClick(event: MouseEvent): void {\n    this.cfg.mappingService.fieldSelected(this.field, event.ctrlKey || event.metaKey);\n    this.cfg.mappingService.notifyLineRefresh();\n  }\n\n  getFieldDetailComponent(field: Field): DocumentFieldDetailComponent {\n    if (this.field === field) {\n      return this;\n    }\n\n    // Matching name and doc definition is a match\n    if ((this.field.path === field.path) && (this.field.docDef === field.docDef)) {\n      this.field = field;\n      return this;\n    }\n    for (const c of this.fieldComponents.toArray()) {\n      const returnedComponent: DocumentFieldDetailComponent = c.getFieldDetailComponent(field);\n      if (returnedComponent != null) {\n        return returnedComponent;\n      }\n    }\n    return null;\n  }\n\n  editField(event: any): void {\n    event.stopPropagation();\n    const self: DocumentFieldDetailComponent = this;\n    const oldPath: string = this.field.path;\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Save';\n    const isProperty: boolean = this.field.isProperty();\n    const isConstant: boolean = this.field.isConstant();\n    this.modalWindow.headerText = isProperty ? 'Edit Property' : (isConstant ? 'Edit Constant' : 'Edit Field');\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      if (isProperty) {\n        const propertyComponent: PropertyFieldEditComponent = mw.nestedComponent as PropertyFieldEditComponent;\n        propertyComponent.initialize(self.field, this.field.docDef, this.modalWindow);\n      } else if (isConstant) {\n        const constantComponent: ConstantFieldEditComponent = mw.nestedComponent as ConstantFieldEditComponent;\n        constantComponent.initialize(self.field, this.field.docDef, this.modalWindow);\n      } else {\n        const fieldComponent: FieldEditComponent = mw.nestedComponent as FieldEditComponent;\n        fieldComponent.isSource = self.field.isSource();\n        fieldComponent.initialize(self.field, this.field.docDef, false);\n      }\n    };\n    this.modalWindow.nestedComponentType = isProperty ? PropertyFieldEditComponent\n      : (isConstant ? ConstantFieldEditComponent : FieldEditComponent);\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      let newField: Field = null;\n      if (isProperty) {\n        const propertyComponent: PropertyFieldEditComponent = mw.nestedComponent as PropertyFieldEditComponent;\n        newField = propertyComponent.getField();\n      } else if (isConstant) {\n        const constantComponent: ConstantFieldEditComponent = mw.nestedComponent as ConstantFieldEditComponent;\n        newField = constantComponent.getField();\n      } else {\n        const fieldComponent: FieldEditComponent = mw.nestedComponent as FieldEditComponent;\n        newField = fieldComponent.getField();\n      }\n      self.field.copyFrom(newField);\n\n      self.field.docDef.updateField(self.field, oldPath);\n\n      self.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  removeField(event: any): void {\n    event.stopPropagation();\n    const self: DocumentFieldDetailComponent = this;\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Remove';\n    if (this.field.isPropertyOrConstant()) {\n      this.modalWindow.headerText = this.field.isProperty() ? 'Remove Property?' : 'Remove Constant?';\n    } else {\n      this.modalWindow.headerText = 'Remove field?';\n    }\n    this.modalWindow.message = 'Are you sure you want to remove \\'' + this.field.displayName + '\\'?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      self.cfg.mappingService.removeFieldFromAllMappings(self.field);\n      self.field.docDef.removeField(self.field);\n      self.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  getSpacerWidth(): SafeStyle {\n    const width: string = (this.field.fieldDepth * 30).toString();\n    return this.sanitizer.bypassSecurityTrustStyle('display:inline; margin-left:' + width + 'px');\n  }\n\n  getFieldId(): string {\n    return this.field.name && this.field.name.length > 0 ? this.field.name : 'document-root';\n  }\n\n  get selected(): boolean {\n    if (this.cfg.mappings && this.cfg.mappings.activeMapping) {\n      return this.cfg.mappings.activeMapping.getFields(this.field.isSource()).includes(this.field);\n    }\n    return false;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n      \n      &nbsp;\n      \n        \n        \n        \n      \n      \n        \n      \n    \n    &nbsp;\n    \n      {{ field.getFieldLabel(cfg.showTypes, false) }}\n    \n\n    \n      {{ field.getFieldLabel(cfg.showTypes, false) }}\n    \n\n    \n      \n      \n    \n\n    \n      \n      \n    \n\n    \n\n    \n      \n        \n          \n            \n            \n              \n                \n                  \n                    \n                      Preview Results\n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n    \n  \n\n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                    {{ field.getFieldLabel(cfg.showTypes, false) }}              {{ field.getFieldLabel(cfg.showTypes, false) }}                                                                                                                                                                                              Preview Results                                                                                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DocumentFieldDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DocumentInitializationModel.html":{"url":"classes/DocumentInitializationModel.html","title":"class - DocumentInitializationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DocumentInitializationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/config.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collectionClassName\n                            \n                            \n                                collectionType\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                inspectionResult\n                            \n                            \n                                inspectionSource\n                            \n                            \n                                inspectionType\n                            \n                            \n                                isSource\n                            \n                            \n                                name\n                            \n                            \n                                selectedRoot\n                            \n                            \n                                showFields\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collectionClassName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collectionType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CollectionType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inspectionResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inspectionSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inspectionType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InspectionType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:83\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\nimport { NGXLogger, NgxLoggerLevel } from 'ngx-logger';\nimport { environment } from '../../../../environments/environment';\nimport { MappingDefinition } from './mapping-definition.model';\nimport { DocumentDefinition } from './document-definition.model';\n\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { DocumentManagementService } from '../services/document-management.service';\nimport { MappingManagementService } from '../services/mapping-management.service';\nimport { InitializationService } from '../services/initialization.service';\nimport { ErrorInfo } from '../models/error.model';\n\nimport { DocumentType, InspectionType, CollectionType } from '../common/config.types';\nimport { FieldActionService } from '../services/field-action.service';\nimport { FileManagementService } from '../services/file-management.service';\n\nexport class DataMapperInitializationModel {\n  dataMapperVersion = '0.9.2017.07.28';\n  initialized = false;\n  loadingStatus = 'Loading.';\n  admHttpTimeout = 30000;  // 30 seconds\n  initializationErrorOccurred = false;\n\n  baseJavaInspectionServiceUrl: string;\n  baseXMLInspectionServiceUrl: string;\n  baseJSONInspectionServiceUrl: string;\n  baseMappingServiceUrl: string;\n\n  xsrfHeaderName: string;\n  xsrfCookieName: string;\n  xsrfDefaultTokenValue: string;\n\n  /* class path fetching configuration */\n  classPathFetchTimeoutInMilliseconds = 30000;\n  // if classPath is specified, maven call to resolve pom will be skipped\n  pomPayload: string;\n\n  classPath: string;\n\n  /* inspection service filtering flags */\n  fieldNameBlacklist: string[] = [];\n  classNameBlacklist: string[] = [];\n  disablePrivateOnlyFields = false;\n  disableProtectedOnlyFields = false;\n  disablePublicOnlyFields = false;\n  disablePublicGetterSetterFields = false;\n\n  disableMappingPreviewMode = false;\n\n  /* enable the navigation bar and import/export */\n  disableNavbar = true;\n\n  mappingInitialized = false;\n\n  constructor() {\n    if (environment.xsrf) {\n      this.xsrfHeaderName = environment.xsrf.headerName;\n      this.xsrfCookieName = environment.xsrf.cookieName;\n      this.xsrfDefaultTokenValue = environment.xsrf.defaultTokenValue;\n    }\n  }\n\n}\n\nexport class DocumentInitializationModel {\n  id: string;\n  type: DocumentType;\n  name: string;\n  description: string;\n  isSource: boolean;\n  showFields = true;\n  inspectionType: InspectionType;\n  inspectionSource: string;\n  inspectionResult: string;\n  selectedRoot: string;\n  collectionType: CollectionType;\n  collectionClassName: string;\n}\n\nexport class ConfigModel {\n  static mappingServicesPackagePrefix = 'io.atlasmap.v2';\n  static javaServicesPackagePrefix = 'io.atlasmap.java.v2';\n  static jsonServicesPackagePrefix = 'io.atlasmap.json.v2';\n  static xmlServicesPackagePrefix = 'io.atlasmap.xml.v2';\n  private static cfg: ConfigModel = new ConfigModel();\n\n  initCfg: DataMapperInitializationModel = new DataMapperInitializationModel;\n\n  /* current ui state config */\n  showMappingDetailTray = false;\n  showMappingTable = false;\n  showNamespaceTable = false;\n  showLinesAlways = true;\n  showTypes = false;\n  showMappedFields = true;\n  showUnmappedFields = true;\n  _showMappingPreview = false;\n  currentDraggedField: any = null;\n\n  documentService: DocumentManagementService;\n  mappingService: MappingManagementService;\n  errorService: ErrorHandlerService;\n  initializationService: InitializationService;\n  fieldActionService: FieldActionService;\n  fileService: FileManagementService;\n\n  sourceDocs: DocumentDefinition[] = [];\n  targetDocs: DocumentDefinition[] = [];\n  propertyDoc: DocumentDefinition = new DocumentDefinition();\n  constantDoc: DocumentDefinition = new DocumentDefinition();\n  mappingFiles: string[] = [];\n\n  mappings: MappingDefinition = null;\n\n  preloadedMappingJson: string;\n  preloadedFieldActionMetadata: any;\n  logger: NGXLogger;\n\n  constructor() {\n    this.propertyDoc.type = DocumentType.PROPERTY;\n    this.propertyDoc.name = 'Properties';\n    this.propertyDoc.isSource = true;\n    this.propertyDoc.showFields = false;\n    this.constantDoc.type = DocumentType.CONSTANT;\n    this.constantDoc.name = 'Constants';\n    this.constantDoc.isSource = true;\n    this.constantDoc.showFields = false;\n  }\n\n  static getConfig(): ConfigModel {\n    return ConfigModel.cfg;\n  }\n\n  static setConfig(cfg: ConfigModel): void {\n    ConfigModel.cfg = cfg;\n  }\n\n  set showMappingPreview(show: boolean) {\n    if (show && !this._showMappingPreview) {\n      this.mappingService.enableMappingPreview();\n    } else if (!show && this._showMappingPreview) {\n      this.mappingService.disableMappingPreview();\n    }\n    this._showMappingPreview = show;\n  }\n\n  get showMappingPreview(): boolean {\n    return this._showMappingPreview;\n  }\n\n  isDebugEnabled(): boolean {\n    return [NgxLoggerLevel.DEBUG, NgxLoggerLevel.TRACE].includes(this.logger.getConfigSnapshot().level);\n  }\n\n  isTraceEnabled(): boolean {\n    return this.logger.getConfigSnapshot().level === NgxLoggerLevel.TRACE;\n  }\n\n  addDocument(docInitModel: DocumentInitializationModel): DocumentDefinition {\n    const docDef: DocumentDefinition = new DocumentDefinition();\n    docDef.initModel = docInitModel;\n    docDef.id = docInitModel.id;\n    docDef.type = docInitModel.type;\n    docDef.name = docInitModel.name;\n    docDef.description = docInitModel.description;\n    docDef.isSource = docInitModel.isSource;\n    docDef.showFields = docInitModel.showFields;\n    docDef.inspectionType = docInitModel.inspectionType;\n    docDef.inspectionSource = docInitModel.inspectionSource;\n    docDef.inspectionResult = docInitModel.inspectionResult;\n    docDef.selectedRoot = docInitModel.selectedRoot;\n\n    if (docDef.type === DocumentType.XSD) {\n      docDef.uri = 'atlas:' + 'xml' + ':' + docDef.id;\n    } else if (docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri = 'atlas:' + 'java' + ':' + docDef.id;\n    } else {\n      docDef.uri = 'atlas:' + docDef.type.toLowerCase() + ':' + docDef.id;\n    }\n\n    if (docDef.type === DocumentType.JAVA || docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri += '?className=' + docDef.inspectionSource;\n      if (docInitModel.collectionType && docInitModel.collectionType !== CollectionType.NONE) {\n        docDef.uri += '&collectionType=' + docInitModel.collectionType;\n        if (docInitModel.collectionClassName) {\n          docDef.uri += '&collectionClassName=' + docInitModel.collectionClassName;\n        }\n      }\n    }\n\n    if (docInitModel.isSource) {\n      this.sourceDocs.push(docDef);\n    } else {\n      this.targetDocs.push(docDef);\n    }\n    return docDef;\n  }\n\n  addDocuments(docModels: DocumentInitializationModel[]): DocumentDefinition[] {\n    const docDefs: DocumentDefinition[] = [];\n    for (const docModel of docModels) {\n      docDefs.push(this.addDocument(docModel));\n    }\n    return docDefs;\n  }\n\n  getDocsWithoutPropertyDoc(isSource: boolean): DocumentDefinition[] {\n    return [].concat(isSource ? this.sourceDocs : this.targetDocs);\n  }\n\n  getDocs(isSource: boolean): DocumentDefinition[] {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    return isSource ? [this.propertyDoc, this.constantDoc].concat(docs) : docs;\n  }\n\n  /**\n   * Return a uri:DocumentDefinition document map for either the sources or targets panel contents.\n   *\n   * @param cfg\n   * @param isSource\n   */\n  getDocUriMap(cfg: ConfigModel, isSource: boolean): {[key: string]: DocumentDefinition} {\n    const docMap: {[key: string]: DocumentDefinition} = {};\n    for (const doc of cfg.getDocs(isSource)) {\n      docMap[doc.uri] = doc;\n    }\n    return docMap;\n  }\n\n  /**\n   * Clear source/target/mapping documents from the model.  Reset constant and property document definitions.\n   */\n  clearDocs(): void {\n    this.sourceDocs = [];\n    this.targetDocs = [];\n    this.propertyDoc.clearFields();\n    this.constantDoc.clearFields();\n    this.mappingFiles = [];\n  }\n\n  hasJavaDocuments(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isClassPathResolutionNeeded(): boolean {\n    if (this.initCfg.classPath) {\n      return false;\n    }\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA && doc.inspectionResult == null) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getDocForIdentifier(documentId: string, isSource: boolean): DocumentDefinition {\n    for (const d of this.getDocs(isSource)) {\n      if (d.id === documentId) {\n        return d;\n      }\n    }\n    return null;\n  }\n\n  getFirstXmlDoc(isSource: boolean) {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    for (const doc of docs) {\n      if (doc.type === DocumentType.XML) {\n        return doc;\n      }\n    }\n    return null;\n  }\n\n  getAllDocs(): DocumentDefinition[] {\n    return [this.propertyDoc, this.constantDoc].concat(this.sourceDocs).concat(this.targetDocs);\n  }\n\n  documentsAreLoaded(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (!doc.initialized) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmptyModalBodyComponent.html":{"url":"components/EmptyModalBodyComponent.html","title":"component - EmptyModalBodyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmptyModalBodyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                empty-modal-body\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitialFocusElement\n                            \n                            \n                                isDataValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  Component, Input, ViewChildren, QueryList, OnDestroy,\n  ViewContainerRef, Type, ComponentFactoryResolver, AfterViewInit, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../../models/config.model';\nimport { Subscription, Subject } from 'rxjs';\nimport { ModalErrorWindowComponent } from './modal-error-window.component';\nimport { ErrorInfo } from '../../models/error.model';\n\n// source: http://www.w3schools.com/howto/howto_css_modals.asp\n\nexport interface ModalWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'empty-modal-body',\n  template: '',\n})\n\nexport class EmptyModalBodyComponent implements ModalWindowValidator {\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n}\n\n@Component({\n  selector: 'modal-window',\n  templateUrl: './modal-window.component.html',\n})\n\nexport class ModalWindowComponent implements AfterViewInit, OnDestroy {\n  @Input() headerText = '';\n  @Input() nestedComponentType: Type;\n  @Input() nestedComponentInitializedCallback: Function;\n  @Input() okButtonHandler: Function;\n  @Input() cancelButtonHandler: Function;\n  @Input() cfg: ConfigModel;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  message: string = null;\n  nestedComponent: ModalWindowValidator;\n  confirmButtonDisabled = false;\n  confirmButtonText = 'OK';\n  visible = false;\n  fade = false;\n  errors: ErrorInfo[] = [];\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  private componentLoaded = false;\n  private myTargetChangesSubscription: Subscription;\n  private modalErrorSubject: Subject;\n  private modalErrorSubscription: Subscription;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, public detector: ChangeDetectorRef) { }\n\n  ngAfterViewInit() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n\n    // from: http://stackoverflow.com/questions/40811809/add-component-dynamically-inside-an-ngif\n    this.myTargetChangesSubscription = this.myTarget.changes.subscribe(changes => {\n      setTimeout(() => {\n        if (!this.componentLoaded && this.visible && this.myTarget && (this.myTarget.toArray().length)) {\n          this.loadComponent();\n        }\n        setTimeout(() => {\n          this.detector.detectChanges();\n        }, 10);\n      }, 10);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n    if (this.modalErrorSubscription) {\n      this.modalErrorSubscription.unsubscribe();\n    }\n    if (this.modalErrorSubject) {\n      this.modalErrorSubject.complete();\n    }\n  }\n\n  loadComponent(): void {\n    const viewContainerRef: ViewContainerRef = this.myTarget.toArray()[0];\n    viewContainerRef.clear();\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.nestedComponentType);\n    this.nestedComponent = viewContainerRef.createComponent(componentFactory).instance as ModalWindowValidator;\n    if (this.nestedComponentInitializedCallback != null) {\n      this.nestedComponentInitializedCallback(this);\n    }\n    const initialFocusElement = this.nestedComponent.getInitialFocusElement();\n    if (initialFocusElement) {\n      initialFocusElement.nativeElement.focus();\n    }\n    if (this.modalErrorSubject && !this.modalErrorSubject.closed) {\n      this.modalErrorSubject.complete();\n    }\n    this.modalErrorSubject = this.cfg.errorService.createFormErrorChannel();\n    this.modalErrorSubscription = this.modalErrorSubject.subscribe((errors: ErrorInfo[]) => {\n      this.errors = errors;\n    });\n  }\n\n  closeClicked(event: MouseEvent): void { this.buttonClicked(false); }\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.modalErrorSubject.complete();\n      this.errors = [];\n      this.visible = false;\n    }, 300);\n  }\n  show(): void {\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.nestedComponentInitializedCallback = null;\n    this.confirmButtonDisabled = false;\n    this.confirmButtonText = 'OK';\n    this.message = '';\n    this.headerText = '';\n    this.componentLoaded = false;\n    this.nestedComponentType = EmptyModalBodyComponent;\n    this.okButtonHandler = null;\n    this.cancelButtonHandler = null;\n  }\n\n  private buttonClicked(okClicked: boolean): void {\n    if (okClicked) {\n      if (this.nestedComponent != null) {\n        this.cfg.errorService.clearFormErrors();\n        if (!(this.nestedComponent.isDataValid())) {\n          return;\n        }\n      }\n      if (this.okButtonHandler) {\n        this.okButtonHandler(this);\n      }\n    } else { // cancel clicked\n      if (this.cancelButtonHandler) {\n        this.cancelButtonHandler(this);\n      }\n    }\n    this.close();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmptyModalBodyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnumValue.html":{"url":"classes/EnumValue.html","title":"class - EnumValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnumValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                ordinal\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ordinal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field.model.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DocumentType } from '../common/config.types';\nimport { DocumentDefinition } from './document-definition.model';\n\nexport class EnumValue {\n  name: string;\n  ordinal: number;\n}\n\nexport class Field {\n  private static uuidCounter = 0;\n\n  name: string = null;\n  classIdentifier: string = null;\n  displayName: string;\n  path: string = null;\n  type: string = null;\n  value: string = null;\n  serviceObject: any = new Object();\n  parentField: Field;\n  partOfMapping = false;\n  partOfTransformation = false;\n  visibleInCurrentDocumentSearch = true;\n  enumeration = false;\n  enumValues: EnumValue[] = [];\n  children: Field[] = [];\n  fieldDepth = 0;\n  uuid: string = null;\n  collapsed = true;\n  hasUnmappedChildren = false;\n  isCollection = false;\n  isArray = false;\n  isAttribute = false;\n  isPrimitive = false;\n  userCreated = false;\n  docDef: DocumentDefinition = null;\n  namespaceAlias: string = null;\n\n  static fieldHasUnmappedChild(field: Field): boolean {\n    if (field == null) {\n      return false;\n    }\n    if (field.isTerminal()) {\n      return (field.partOfMapping === false);\n    }\n    for (const childField of field.children) {\n      if (childField.hasUnmappedChildren || Field.fieldHasUnmappedChild(childField)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static getFieldPaths(fields: Field[]): string[] {\n    const paths: string[] = [];\n    for (const field of fields) {\n      paths.push(field.path);\n    }\n    return paths;\n  }\n\n  static getFieldNames(fields: Field[]): string[] {\n    const paths: string[] = [];\n    for (const field of fields) {\n      paths.push(field.name);\n    }\n    return paths;\n  }\n\n  static getField(fieldPath: string, fields: Field[]): Field {\n    for (const field of fields) {\n      if (fieldPath === field.path) {\n        return field;\n      }\n    }\n    return null;\n  }\n\n  static alphabetizeFields(fields: Field[]): void {\n    const fieldsByName: { [key: string]: Field; } = {};\n    const fieldNames: string[] = [];\n    for (const field of fields) {\n      // if field is a dupe, discard it\n      if (fieldsByName[field.name] != null) {\n        continue;\n      }\n      fieldsByName[field.name] = field;\n      fieldNames.push(field.name);\n    }\n    fieldNames.sort();\n    fields.length = 0;\n    for (const name of fieldNames) {\n      fields.push(fieldsByName[name]);\n    }\n\n    for (const field of fields) {\n      if (field.children && field.children.length) {\n        this.alphabetizeFields(field.children);\n      }\n    }\n  }\n\n  constructor() {\n    this.uuid = Field.uuidCounter.toString();\n    Field.uuidCounter++;\n  }\n\n  /**\n   * Expand all fields above the current field.\n   */\n  expandToRoot() {\n    let parent: Field = this;\n    while (parent != null) {\n      parent.collapsed = false;\n      if (parent.isPropertyOrConstant) {\n        if (parent.docDef) {\n          parent.docDef.showFields = true;\n        }\n      }\n      parent = parent.parentField;\n    }\n  }\n\n  getNameWithNamespace(): string {\n    if (!this.namespaceAlias) {\n      return this.name;\n    }\n    return this.namespaceAlias + ':' + this.name;\n  }\n\n  isParentField(): boolean {\n    if (this.isCollection && !this.isPrimitive) {\n      return true;\n    }\n    return (this.type === 'COMPLEX');\n  }\n\n  isStringField(): boolean {\n    return (this.type === 'STRING');\n  }\n\n  isTerminal(): boolean {\n    if (this.enumeration) {\n      return true;\n    }\n    if (this.isCollection && !this.isPrimitive) {\n      return false;\n    }\n    return (this.type !== 'COMPLEX');\n  }\n\n  copy(): Field {\n    const copy: Field = new Field();\n    Object.assign(copy, this);\n\n    // make these pointers to the same object, not copies\n    copy.serviceObject = this.serviceObject;\n    copy.parentField = this.parentField;\n    copy.docDef = this.docDef;\n\n    copy.children = [];\n    for (const childField of this.children) {\n      copy.children.push(childField.copy());\n    }\n    // console.log(\"Copied: \" + this.name, { \"src\": this, \"target\": copy });\n    return copy;\n  }\n\n  copyFrom(that: Field): void {\n    Object.assign(this, that);\n\n    // make these pointers to the same object, not copies\n    this.serviceObject = that.serviceObject;\n    this.parentField = that.parentField;\n    this.docDef = that.docDef;\n\n    this.children = [];\n    for (const childField of that.children) {\n      this.children.push(childField.copy());\n    }\n  }\n\n  getCollectionParentField(): Field {\n    let parent: Field = this;\n    while (parent != null) {\n      if (parent.isCollection) {\n        return parent;\n      }\n      parent = parent.parentField;\n    }\n    return null;\n  }\n\n  isInCollection(): boolean {\n    return (this.getCollectionParentField() != null);\n  }\n\n  getCollectionCount(): number {\n    let count = 0;\n    let field: Field = this;\n    while (field != null) {\n      if (field.isCollection) {\n        count++;\n      }\n      field = field.parentField;\n    }\n    return count;\n  }\n\n  isSource(): boolean {\n    return (this.docDef != null) && this.docDef.isSource;\n  }\n\n  getCollectionType(): string {\n    return this.isCollection ? (this.isArray ? 'ARRAY' : 'LIST') : null;\n  }\n\n  getFieldLabel(showTypes: boolean, includePath: boolean): string {\n    let fieldPath = includePath ? this.path : this.getNameWithNamespace();\n    if (showTypes && this.type && !this.isPropertyOrConstant()) {\n      fieldPath += ' (' + this.type + ')';\n    } else if (this.isProperty() && this.value != null) {\n      fieldPath += ' = ' + this.value;\n      if (showTypes && this.type) {\n        fieldPath += ' (' + this.type + ')';\n      }\n    }\n    if (!fieldPath && !this.parentField) {\n      fieldPath = '';\n    }\n    return fieldPath;\n  }\n\n  isPropertyOrConstant(): boolean {\n    return (this.docDef == null) ? false : this.docDef.isPropertyOrConstant;\n  }\n\n  isProperty(): boolean {\n    return (this.docDef == null) ? false : this.docDef.type === DocumentType.PROPERTY;\n  }\n\n  isConstant(): boolean {\n    return (this.docDef == null) ? false : this.docDef.type === DocumentType.CONSTANT;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts\n        \n\n            \n                Description\n            \n            \n                ErrorHandlerService handles global errors, mapping validation errors, preview errors,\nmapped field level errors as well as instant form validation errors in a modal windows.\nGlobal errors, mapping validation errors, preview errors and mapped field level errors\nare stored in a same array at this moment. We might want to split them when we show\nthem grouped by ErrorType.\nErrors with ErrorScope.MAPPING and ErrorScope.FIELD are cleared\neverytime active mapping is switched. ErrorScope.FIELD errors are mostly\ninstant and cleared more frequently.\nForm validation errors are supposed to be instant. Channel should be created by\ncreateFormErrorChannel() when modal window is initialized, and should be\ncompleted when modal window is closed.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errors\n                            \n                            \n                                    Private\n                                errorUpdatedSource\n                            \n                            \n                                    Private\n                                formErrors\n                            \n                            \n                                    Private\n                                formErrorUpdatedSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addError\n                            \n                            \n                                clearAllErrors\n                            \n                            \n                                clearFieldErrors\n                            \n                            \n                                clearFormErrors\n                            \n                            \n                                clearPreviewErrors\n                            \n                            \n                                clearValidationErrors\n                            \n                            \n                                createFormErrorChannel\n                            \n                            \n                                    Private\n                                emitUpdatedEvent\n                            \n                            \n                                    Private\n                                excludeByIdentifier\n                            \n                            \n                                    Static\n                                filterWith\n                            \n                            \n                                getErrors\n                            \n                            \n                                isRequiredFieldValid\n                            \n                            \n                                removeError\n                            \n                            \n                                resetAll\n                            \n                            \n                                subscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addError\n                        \n                        \n                    \n                \n            \n            \n                \naddError(errors: ErrorInfo[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:64\n                \n            \n\n\n            \n                \n                    Add one or more ErrorInfo object(s) into error store.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        one or more {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearAllErrors\n                        \n                        \n                    \n                \n            \n            \n                \nclearAllErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:115\n                \n            \n\n\n            \n                \n                    Remova all errors except form validation errors.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearFieldErrors\n                        \n                        \n                    \n                \n            \n            \n                \nclearFieldErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:140\n                \n            \n\n\n            \n                \n                    Remove all field scoped errors.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearFormErrors\n                        \n                        \n                    \n                \n            \n            \n                \nclearFormErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:148\n                \n            \n\n\n            \n                \n                    Remove all form validation errors.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearPreviewErrors\n                        \n                        \n                    \n                \n            \n            \n                \nclearPreviewErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:123\n                \n            \n\n\n            \n                \n                    Remove all preview errors.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearValidationErrors\n                        \n                        \n                    \n                \n            \n            \n                \nclearValidationErrors(mapping?: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:131\n                \n            \n\n\n            \n                \n                    Remove all mapping validation errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createFormErrorChannel\n                        \n                        \n                    \n                \n            \n            \n                \ncreateFormErrorChannel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:167\n                \n            \n\n\n            \n                \n                    Create a Subject for form validation error. This ErrorHandlerService assumes only\none form validation happens at once, as it's used in modal window. Revisit this if there\nneeds to be more than one channel and manage a list of Subject.\n\n\n                    \n                        Returns :         Subject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            emitUpdatedEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitUpdatedEvent(scope?: ErrorScope)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scope\n                                    \n                                                ErrorScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            excludeByIdentifier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    excludeByIdentifier(errors: ErrorInfo[], identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            filterWith\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filterWith(errors: ErrorInfo[], mapping?: MappingModel, level?: ErrorLevel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:50\n                \n            \n\n\n            \n                \n                    FIlter an array of ErrorInfo with specified condition.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An array of {\n\n                                    \n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    level\n                                    \n                                                ErrorLevel\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:83\n                \n            \n\n\n            \n                \n                    Return all errors in the store.\n\n\n                    \n                    \n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                    \n                        An array of {\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isRequiredFieldValid\n                        \n                        \n                    \n                \n            \n            \n                \nisRequiredFieldValid(value: string, fieldDescription: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:182\n                \n            \n\n\n            \n                \n                    Validate the specified field value in a form, generating a form validation error if not defined.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nA form field to validate\n\n\n                                    \n                                \n                                \n                                    fieldDescription\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nused in error diagnostic\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeError\n                        \n                        \n                    \n                \n            \n            \n                \nremoveError(identifier: string, scope?: ErrorScope)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:91\n                \n            \n\n\n            \n                \n                    Remove one ErrorInfo by specifying ID.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error ID\n\n                                    \n                                \n                                \n                                    scope\n                                    \n                                                ErrorScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetAll\n                        \n                        \n                    \n                \n            \n            \n                \nresetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:104\n                \n            \n\n\n            \n                \n                    Clear all global/mapping errors as well as form validation erros and its Subject\nif it exists.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \nsubscribe(observer: (errors: ErrorInfo[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:158\n                \n            \n\n\n            \n                \n                    Subscribe an error updated event. Observer will be notified\nwhen an error is added or removed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    observer\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Observer\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorInfo[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorUpdatedSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            formErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorInfo[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            formErrorUpdatedSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:42\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ErrorInfo, ErrorLevel, ErrorScope, ErrorType } from '../models/error.model';\nimport { ConfigModel } from '../models/config.model';\nimport { Subject, Subscription } from 'rxjs';\nimport { MappingModel } from '../models/mapping.model';\n\n/**\n * ErrorHandlerService handles global errors, mapping validation errors, preview errors,\n * mapped field level errors as well as instant form validation errors in a modal windows.\n * Global errors, mapping validation errors, preview errors and mapped field level errors\n * are stored in a same array at this moment. We might want to split them when we show\n * them grouped by {@link ErrorType}.\n * Errors with {@link ErrorScope.MAPPING} and {@link ErrorScope.FIELD} are cleared\n * everytime active mapping is switched. {@link ErrorScope.FIELD} errors are mostly\n * instant and cleared more frequently.\n * Form validation errors are supposed to be instant. Channel should be created by\n * {@link createFormErrorChannel()} when modal window is initialized, and should be\n * completed when modal window is closed.\n */\n@Injectable()\nexport class ErrorHandlerService {\n  private errors: ErrorInfo[] = [];\n  private formErrors: ErrorInfo[] = [];\n  private errorUpdatedSource = new Subject();\n  private formErrorUpdatedSource: Subject;\n\n  /**\n   * FIlter an array of {@link ErrorInfo} with specified condition.\n   * @param errors An array of {@link ErrorInfo} to filter\n   * @param mapping {@link MappingModel} to filter {@link ErrorScope.MAPPING} errors\n   * @param level {@link ErrorLevel} to filter with\n   */\n  static filterWith(errors: ErrorInfo[], mapping?: MappingModel, level?: ErrorLevel): ErrorInfo[] {\n    if (!errors || errors.length === 0) {\n      return [];\n    }\n    return errors.filter(e =>\n      (!e.mapping || (mapping && e.mapping === mapping))\n        && (!level || !e.level || e.level === level)\n    );\n  }\n\n  /**\n   * Add one or more {@link ErrorInfo} object(s) into error store.\n   * @param errors one or more {@link ErrorInfo} object(s)\n   */\n  addError(...errors: ErrorInfo[]): void {\n    errors.forEach(error => {\n      if (error.object && error.object.message) {\n        // TODO show error.object in more polished way... maybe with better error console\n        error.message += ('\\n' + error.object.message);\n      }\n      const store = ErrorScope.FORM === error.scope ? this.formErrors : this.errors;\n      if (store.find(e => e.message === error.message)) {\n        return;\n      }\n      store.unshift(error);\n    });\n    this.emitUpdatedEvent();\n  }\n\n  /**\n   * Return all errors in the store.\n   * @return An array of {@link ErrorInfo}\n   */\n  getErrors(): ErrorInfo[] {\n    return Object.assign([], this.errors);\n  }\n\n  /**\n   * Remove one {@link ErrorInfo} by specifying ID.\n   * @param identifier Error ID\n   */\n  removeError(identifier: string, scope?: ErrorScope): void {\n    if (scope === ErrorScope.FORM && !this.formErrorUpdatedSource.closed) {\n      this.formErrors = this.excludeByIdentifier(this.formErrors, identifier);\n    } else {\n      this.errors = this.excludeByIdentifier(this.errors, identifier);\n    }\n    this.emitUpdatedEvent();\n  }\n\n  /**\n   * Clear all global/mapping errors as well as form validation erros and its Subject\n   * if it exists.\n   */\n  resetAll(): void {\n    this.clearAllErrors();\n    this.formErrors = [];\n    if (this.formErrorUpdatedSource && !this.formErrorUpdatedSource.closed) {\n      this.formErrorUpdatedSource.complete();\n    }\n  }\n\n  /**\n   * Remova all errors except form validation errors.\n   */\n  clearAllErrors() {\n    this.errors = [];\n    this.emitUpdatedEvent();\n  }\n\n  /**\n   * Remove all preview errors.\n   */\n  clearPreviewErrors(): void {\n    this.errors = this.errors.filter(e => e.type !== ErrorType.PREVIEW);\n    this.emitUpdatedEvent();\n  }\n\n  /**\n   * Remove all mapping validation errors.\n   */\n  clearValidationErrors(mapping?: MappingModel): void {\n    this.errors = this.errors.filter(e =>\n      e.type !== ErrorType.VALIDATION && (!mapping || !e.mapping || e.mapping !== mapping));\n    this.emitUpdatedEvent();\n  }\n\n  /**\n   * Remove all field scoped errors.\n   */\n  clearFieldErrors() {\n    this.errors = this.errors.filter(e => e.scope !== ErrorScope.FIELD);\n    this.emitUpdatedEvent();\n  }\n\n  /**\n   * Remove all form validation errors.\n   */\n  clearFormErrors() {\n    this.formErrors = [];\n    this.emitUpdatedEvent(ErrorScope.FORM);\n  }\n\n  /**\n   * Subscribe an error updated event. Observer will be notified\n   * when an error is added or removed.\n   * @param observer Observer\n   */\n  subscribe(observer: (errors: ErrorInfo[]) => void): Subscription {\n    return this.errorUpdatedSource.subscribe(observer);\n  }\n\n  /**\n   * Create a Subject for form validation error. This ErrorHandlerService assumes only\n   * one form validation happens at once, as it's used in modal window. Revisit this if there\n   * needs to be more than one channel and manage a list of {@link Subject}.\n   */\n  createFormErrorChannel(): Subject {\n    if (this.formErrorUpdatedSource && !this.formErrorUpdatedSource.closed) {\n      this.formErrorUpdatedSource.complete();\n    }\n    this.formErrors = [];\n    this.formErrorUpdatedSource = new Subject();\n    this.formErrorUpdatedSource.subscribe({ complete: () => this.formErrors = [] });\n    return this.formErrorUpdatedSource;\n  }\n\n  /**\n   * Validate the specified field value in a form, generating a form validation error if not defined.\n   * @param value - A form field to validate\n   * @param fieldDescription - used in error diagnostic\n   */\n  isRequiredFieldValid(value: string, fieldDescription: string): boolean {\n    if (value == null || '' === value) {\n      const errorMessage: string = fieldDescription + ' is required.';\n      this.addError(new ErrorInfo({message: errorMessage, level: ErrorLevel.ERROR, scope: ErrorScope.FORM}));\n      this.emitUpdatedEvent(ErrorScope.FORM);\n      return false;\n    }\n    return true;\n  }\n\n  private emitUpdatedEvent(scope?: ErrorScope) {\n    if (ErrorScope.FORM === scope) {\n      if (this.formErrorUpdatedSource && !this.formErrorUpdatedSource.closed) {\n        this.formErrorUpdatedSource.next(this.formErrors);\n      }\n    } else {\n      this.errorUpdatedSource.next(this.errors);\n    }\n  }\n\n  private excludeByIdentifier(errors: ErrorInfo[], identifier: string): ErrorInfo[] {\n    return errors.filter(e => e.identifier !== identifier);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorInfo.html":{"url":"classes/ErrorInfo.html","title":"class - ErrorInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/error.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _identifier\n                            \n                            \n                                    Private\n                                    Static\n                                errorIdentifierCounter\n                            \n                            \n                                field\n                            \n                            \n                                level\n                            \n                            \n                                mapping\n                            \n                            \n                                message\n                            \n                            \n                                object\n                            \n                            \n                                scope\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    identifier\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            errorIdentifierCounter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappedField\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorLevel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scope\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorScope\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        identifier\n                    \n                \n\n                \n                    \n                        getidentifier()\n                    \n                \n                            \n                                \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:59\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { MappingModel, MappedField } from './mapping.model';\n\nexport enum ErrorLevel {\n  DEBUG = 'DEBUG',\n  INFO = 'INFO',\n  WARN = 'WARN',\n  ERROR = 'ERROR'\n }\n\nexport enum ErrorScope {\n  APPLICATION = 'APPLICATION',\n  MAPPING = 'MAPPING',\n  FIELD = 'FIELD',\n  FORM = 'FORM'\n}\n\nexport enum ErrorType {\n  INTERNAL = 'INTERNAL',\n  USER = 'USER',\n  VALIDATION = 'VALIDATION',\n  PREVIEW = 'PREVIEW',\n  FORM = 'FORM'\n}\n\nexport class ErrorInfo {\n  private static errorIdentifierCounter = 0;\n  private _identifier: string;\n\n  message: string;\n  level: ErrorLevel;\n  scope: ErrorScope;\n  type: ErrorType;\n  mapping: MappingModel;\n  field: MappedField;\n  object: any;\n\n  constructor(init: Partial) {\n    this._identifier = ErrorInfo.errorIdentifierCounter.toString();\n    ErrorInfo.errorIdentifierCounter++;\n    Object.assign(this, init);\n  }\n\n  get identifier() {\n    return this._identifier;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExampleAppModule.html":{"url":"modules/ExampleAppModule.html","title":"module - ExampleAppModule","body":"\n                   \n\n\n\n\n    Modules\n    ExampleAppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExampleAppModule\n\n\n\ncluster_ExampleAppModule_declarations\n\n\n\ncluster_ExampleAppModule_imports\n\n\n\ncluster_ExampleAppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nExampleAppModule\n\nExampleAppModule\n\nExampleAppModule -->\n\nAppComponent->ExampleAppModule\n\n\n\n\n\nAtlasmapNavbarComponent\n\nAtlasmapNavbarComponent\n\nExampleAppModule -->\n\nAtlasmapNavbarComponent->ExampleAppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nExampleAppModule->AppComponent \n\n\n\n\n\nAtlasmapNavbarComponent \n\nAtlasmapNavbarComponent \n\nAtlasmapNavbarComponent  -->\n\nExampleAppModule->AtlasmapNavbarComponent \n\n\n\n\n\nDataMapperModule\n\nDataMapperModule\n\nExampleAppModule -->\n\nDataMapperModule->ExampleAppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/example-app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AtlasmapNavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataMapperModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AtlasmapNavbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n    Copyright (C) 2017 Red Hat, Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { AtlasmapNavbarComponent } from './atlasmap-navbar.component';\n\nimport { DataMapperModule } from './lib/atlasmap-data-mapper/data-mapper.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AtlasmapNavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot([]),\n    DataMapperModule.withInterceptor(),\n  ],\n  providers: [],\n  bootstrap: [\n    AppComponent,\n    AtlasmapNavbarComponent,\n  ],\n})\n\nexport class ExampleAppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Examples.html":{"url":"classes/Examples.html","title":"class - Examples","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Examples\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/examples.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                pom\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            pom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `\n    \n\n        4.0.0\n        foo.bar\n        test.model\n        1.10.0\n        jar\n        Test :: Model\n\n        \n            \n                com.fasterxml.jackson.core\n                jackson-annotations\n                2.8.5\n            \n            \n                com.fasterxml.jackson.core\n                jackson-databind\n                2.8.5\n            \n            \n                com.fasterxml.jackson.core\n                jackson-core\n                2.8.5\n            \n        \n    \n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/examples.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Examples {\n  static pom = `\n    \n\n        4.0.0\n        foo.bar\n        test.model\n        1.10.0\n        jar\n        Test :: Model\n\n        \n            \n                com.fasterxml.jackson.core\n                jackson-annotations\n                2.8.5\n            \n            \n                com.fasterxml.jackson.core\n                jackson-databind\n                2.8.5\n            \n            \n                com.fasterxml.jackson.core\n                jackson-core\n                2.8.5\n            \n        \n    \n  `;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpressionNode.html":{"url":"classes/ExpressionNode.html","title":"class - ExpressionNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpressionNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                sequence\n                            \n                            \n                                    Protected\n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUuid\n                            \n                            \n                                    Abstract\n                                toHTML\n                            \n                            \n                                    Abstract\n                                toText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prefix: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prefix\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            sequence\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            uuid\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetUuid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toHTML()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { MappedField, MappingModel } from './mapping.model';\nimport { Subject } from 'rxjs';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from './error.model';\n\nexport class ExpressionUpdatedEvent {\n  constructor(public node?: ExpressionNode, public offset?: number) {}\n}\n\nexport abstract class ExpressionNode {\n  protected static sequence = 0;\n  protected uuid;\n\n  constructor(prefix: string) {\n    this.uuid = prefix + ExpressionNode.sequence++;\n  }\n\n  getUuid() {\n    return this.uuid;\n  }\n\n  abstract toText(): string;\n  abstract toHTML(): string;\n}\n\nexport class TextNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-text-';\n\n  constructor(public str: string) {\n    super(TextNode.PREFIX);\n  }\n\n  toText(): string {\n    return this.str;\n  }\n\n  toHTML(): string {\n    return `${this.str.replace(/ /g, '&nbsp;')}`;\n  }\n\n}\n\nexport class FieldNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-field-';\n\n  constructor(private mapping: MappingModel, public field?: MappedField, private index?: number) {\n    super(FieldNode.PREFIX);\n    if (!field) {\n      this.field = mapping.getMappedFieldForIndex((index + 1).toString(), true);\n    }\n  }\n\n  toText(): string {\n    return '${' + (this.mapping.getIndexForMappedField(this.field) - 1) + '}';\n  }\n\n  toHTML(): string {\n    if (this.field && this.field.field) {\n      return `${this.field.field.name}`;\n    } else {\n      return `N/A`;\n    }\n  }\n\n}\n\nexport class ExpressionModel {\n  expressionUpdatedSource = new Subject();\n  expressionUpdated$ = this.expressionUpdatedSource.asObservable();\n\n  private _nodes: ExpressionNode[] = [];\n  private textCache = '';\n  private htmlCache = '';\n\n  constructor(private mapping: MappingModel, private cfg: ConfigModel) {}\n\n  generateInitialExpression() {\n    this.mapping.getUserMappedFields(true).forEach(f => this.appendFieldNode(f));\n  }\n\n  get nodes(): ReadonlyArray {\n    return this._nodes;\n  }\n\n  getLastNodeIndex() {\n    return this._nodes.length - 1;\n  }\n\n  getLastNode() {\n    return this._nodes[this.getLastNodeIndex()];\n  }\n\n  getNode(nodeId?: string): any {\n    if (!nodeId) {\n      return this.getLastNode();\n    }\n    return this._nodes.find(n => n.getUuid() === nodeId);\n  }\n\n  setConfigModel(cfg: ConfigModel) {\n    this.cfg = cfg;\n  }\n\n  /**\n   * Clear all text from the specified TextNode offset range or from the '@' to the end\n   * of the text node if no node ID is specified.\n   *\n   * Return the new UUID position indicator string or null.\n   *\n   * @param nodeId\n   * @param startOffset\n   * @param endOffset\n   */\n  clearText(nodeId?: string, startOffset?: number, endOffset?: number): TextNode {\n    let targetNode: TextNode;\n    let targetNodeIndex = 0;\n    if (!nodeId) {\n      const lastNode = this.getLastNode();\n      if (!(lastNode instanceof TextNode)) {\n        return null;\n      }\n      const keyPos = lastNode.str.indexOf('@');\n      if (keyPos !== -1) {\n        targetNodeIndex = this._nodes.indexOf(lastNode);\n        targetNode = lastNode;\n        targetNode.str = targetNode.str.substring(0, keyPos);\n      }\n    } else {\n      const node = this._nodes.find(n => n.getUuid() === nodeId);\n      if (!(node instanceof TextNode) || !endOffset) {\n        return null;\n      }\n      targetNode = node;\n      targetNodeIndex = this._nodes.indexOf(targetNode);\n      const cleanStr = targetNode.str.replace(targetNode.str.substring(startOffset, endOffset), '');\n      targetNode.str = cleanStr;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n    return targetNode;\n  }\n\n  /**\n   * Insert text into expression at specified position. If nodeId is not specified,\n   * it will be added to the end of expression. It parses the string\n   * and insert a set of TextNode & FieldNode if it contains field reference like ${0},\n   * otherwise just one TextNode.\n   * This emits ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   * @param str string to insert\n   * @param nodeId target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertText(str: string, nodeId?: string, offset?: number) {\n    this.insertNodes(this.createNodesFromText(str), nodeId, offset);\n  }\n\n  /**\n   * Insert an array of ExpressionNodes at the specified position. If insertPosition is\n   * not specified the nodes will be appended to the end of the expression.\n   * This emits an ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   *\n   * @param newNodes an array of ExpressionNode to add\n   * @param insertPosition target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertNodes(newNodes: ExpressionNode[], insertPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!insertPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        this._nodes.push(...newNodes);\n      } else if (last instanceof TextNode && newNodes[0] instanceof TextNode) {\n        const lastTextNode = last as TextNode;\n        (last as TextNode).str += (newNodes[0] as TextNode).str;\n        newNodes.splice(0, 1, last);\n        this._nodes.splice(this.getLastNodeIndex(), 1, ...newNodes);\n      } else if (last instanceof FieldNode && newNodes[0] instanceof FieldNode) {\n        this._nodes.splice(this.getLastNodeIndex(), 0, new TextNode(' + '), ...newNodes);\n      } else {\n        this._nodes.push(...newNodes);\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    const updatedEvent = new ExpressionUpdatedEvent();\n    const targetNode = this._nodes.find(n => n.getUuid() === insertPosition);\n    const targetNodeIndex = this._nodes.indexOf(targetNode);\n\n    if (targetNode instanceof TextNode) {\n      if (offset === undefined || offset === null || offset  0) {\n        if (newNodes[0] instanceof TextNode) {\n          targetNode.str = pre + (newNodes[0] as TextNode).str;\n          newNodes.splice(0, 1, targetNode);\n        } else {\n          targetNode.str = pre;\n          newNodes.splice(0, 0, targetNode);\n        }\n      }\n      if (post.length > 0) {\n        const lastNewNodeIndex = newNodes.length - 1;\n        if (newNodes[lastNewNodeIndex] instanceof TextNode) {\n          let mergedTextNode: TextNode;\n          if (pre.length > 0) {\n            mergedTextNode = newNodes[lastNewNodeIndex] as TextNode;\n            mergedTextNode.str += post;\n          } else {\n            mergedTextNode = targetNode;\n            mergedTextNode.str = (newNodes[lastNewNodeIndex]as TextNode).str + post;\n          }\n          newNodes.splice(lastNewNodeIndex, 1, mergedTextNode);\n        } else {\n          if (pre.length > 0) {\n            newNodes.push(new TextNode(post));\n          } else {\n            targetNode.str = post;\n            newNodes.push(targetNode);\n          }\n        }\n      }\n      this._nodes.splice(targetNodeIndex, 1, ...newNodes);\n      const lastAddedIndex = targetNodeIndex + newNodes.length - 1;\n      if (this._nodes[lastAddedIndex] instanceof FieldNode\n          && this.nodes[lastAddedIndex + 1] instanceof FieldNode) {\n        // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n        const space = new TextNode(' + ');\n        this._nodes.splice(lastAddedIndex + 1, 0, space);\n        updatedEvent.node = space;\n        updatedEvent.offset = 1;\n      } else if (this._nodes[lastAddedIndex] instanceof FieldNode) {\n        updatedEvent.node = this._nodes[lastAddedIndex + 1];\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = this._nodes[lastAddedIndex];\n        updatedEvent.offset = (this._nodes[lastAddedIndex] as TextNode).str.length - post.length;\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next(updatedEvent);\n      return;\n    }\n\n    // targetNode is a FieldNode - insert the text before it if offset is 0, otherwise after it\n    if (offset !== 0 && newNodes[0] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      newNodes.splice(0, 0, new TextNode(' + '));\n    }\n    const nextNodeIndex = offset === 0 ? targetNodeIndex : targetNodeIndex + 1;\n    const nextNode = this._nodes[nextNodeIndex];\n    if (nextNode instanceof TextNode && newNodes[newNodes.length - 1] instanceof TextNode) {\n      updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      nextNode.str = (newNodes[newNodes.length - 1] as TextNode).str + (nextNode as TextNode).str;\n      newNodes.pop();\n      this._nodes.splice(nextNodeIndex, 1, ...newNodes);\n      updatedEvent.node = nextNode;\n    } else if (nextNode instanceof FieldNode && newNodes[newNodes.length - 1] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      const space = new TextNode(' + ');\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes, space);\n      updatedEvent.node = space;\n      updatedEvent.offset = 1;\n    } else {\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes);\n      if (nextNode instanceof TextNode) {\n        updatedEvent.node = nextNode;\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = newNodes[newNodes.length - 1];\n        updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  removeToken(lastFieldRefRemoved: (removed: MappedField) => void, tokenPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!tokenPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        return;\n      }\n      if (last instanceof FieldNode) {\n        const removed = this._nodes.pop() as FieldNode;\n        if (!this._nodes.find(n => n instanceof FieldNode && n.field === removed.field)) {\n          lastFieldRefRemoved(removed.field);\n        }\n      } else if (last instanceof TextNode) {\n        if (last.str.length > 0) {\n          last.str = last.str.substring(0, last.str.length - 1);\n        } else {\n          this._nodes.pop();\n        }\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    let updatedEvent = new ExpressionUpdatedEvent();\n    let targetNode = this._nodes.find(n => n.getUuid() === tokenPosition);\n    let targetNodeIndex = this._nodes.indexOf(targetNode);\n    if (!targetNode || offset === -1) {\n      if (targetNodeIndex  n instanceof FieldNode && n.field === targetFieldNode.field)) {\n        lastFieldRefRemoved(targetFieldNode.field);\n      }\n      if (this._nodes.length > targetNodeIndex) {\n        if (this._nodes[targetNodeIndex - 1] instanceof TextNode\n            && this._nodes[targetNodeIndex] instanceof TextNode) {\n          const newOffset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n          (this._nodes[targetNodeIndex - 1] as TextNode).str\n              += (this._nodes[targetNodeIndex] as TextNode).str;\n          this._nodes.splice(targetNodeIndex, 1);\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = newOffset;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof FieldNode\n            && this._nodes[targetNodeIndex] instanceof FieldNode) {\n          const glue = new TextNode(' + ');\n          this._nodes.splice(targetNodeIndex, 0, glue);\n          updatedEvent.node = glue;\n          updatedEvent.offset = 3;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n        } else if (this._nodes[targetNodeIndex] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex];\n          updatedEvent.offset = 0;\n        }\n      } else {\n        // end of line\n        updatedEvent = undefined;\n      }\n    } else {\n      const targetString = (targetNode as TextNode).str;\n      (targetNode as TextNode).str = offset === 0 ? targetString.substr(1)\n        : targetString.substring(0, offset) + targetString.substring(offset + 1);\n      if ((targetNode as TextNode).str.length === 0) {\n        this.cfg.errorService.addError(new ErrorInfo({message: 'At least one space is required between field references.',\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.USER, mapping: this.mapping}));\n        return;\n      }\n      updatedEvent.node = targetNode;\n      updatedEvent.offset = offset;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  /**\n   * Replace the content of the last text node with a substring terminating at the\n   * specified index.\n   *\n   * @param index\n   */\n  clearToEnd(index: number): void {\n    const last = this.getLastNode();\n    if (!(last instanceof TextNode)) {\n      return;\n    }\n    last.str = last.str.substring(0, index);\n  }\n\n  /**\n   * Reflect mapped source fields to the field references in the expression.\n   * Selected source fields are inserted into or appended to the expression,\n   * and unselected source fields are removed from expression.\n   *\n   * @param mapping Corresponding MappingModel object\n   */\n  updateFieldReference(mapping: MappingModel, insertPosition?: string, offset?: number) {\n    const mappedFields = mapping.getUserMappedFields(true);\n    const toAdd: MappedField[] = [];\n    const toRemove: MappedField[] = [];\n    let fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n\n    // Remove the field from the expression if unmapped.\n    for (const node of fieldNodes) {\n      if (mappedFields.includes(node.field)) {\n        continue;\n      }\n      const index = this._nodes.indexOf(node);\n      this._nodes.splice(index, 1);\n      if (this._nodes.length > index && this._nodes[index - 1] instanceof TextNode\n          && this._nodes[index] instanceof TextNode) {\n        (this._nodes[index - 1] as TextNode).str += (this._nodes[index] as TextNode).str;\n        this._nodes.splice(index, 1);\n      }\n    }\n\n    // Add the specified field into the expression - append if no insert position is specified.\n    fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n    for (const mfield of mappedFields) {\n      if (!fieldNodes.find(n => n.field === mfield)) {\n        if (insertPosition) {\n          this.insertNodes([new FieldNode(this.mapping, mfield)], insertPosition, offset);\n        } else {\n          this.appendFieldNode(mfield);\n        }\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  clear() {\n    this._nodes = [];\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  toText() {\n    return this.textCache;\n  }\n\n  toHTML() {\n    return this.htmlCache;\n  }\n\n  private updateCache() {\n    let answer = '';\n    this._nodes.forEach(node => answer += node.toText());\n    this.textCache = answer;\n    answer = '';\n    this._nodes.forEach(node => answer += node.toHTML());\n    this.htmlCache = answer;\n  }\n\n  private createNodesFromText(text: string): ExpressionNode[] {\n    const answer = [];\n    let position = -1;\n    let fn = null;\n\n    while ((position = text.search(/\\$\\{[0-9]+\\}/)) !== -1 ) {\n      if (position !== 0) {\n        answer.push(new TextNode(text.substring(0, position)));\n      }\n      const index = parseInt(text.substring(position + 2, text.indexOf('}')), 10);\n      fn = new FieldNode(this.mapping, null, index);\n      if (fn.field === null) {\n        this.cfg.errorService.addError(new ErrorInfo({message: `Unable to map expression index \"${index}\" to field node.`,\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.INTERNAL, mapping: this.mapping}));\n      } else {\n        answer.push(fn);\n      }\n      text = text.substring(text.indexOf('}') + 1);\n    }\n    if (text.length > 0) {\n      answer.push(new TextNode(text));\n    }\n    return answer;\n  }\n\n  private appendFieldNode(mfield: MappedField) {\n    const lastNode = this._nodes.pop();\n    if (lastNode instanceof FieldNode) {\n        this._nodes.push(lastNode, new TextNode(' + '));\n    } else if (lastNode instanceof TextNode) {\n      if (lastNode.str.length === 0) {\n        this._nodes.push(new TextNode(' + '));\n      } else {\n        this._nodes.push(lastNode);\n      }\n    }\n    this._nodes.push(new FieldNode(this.mapping, mfield));\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpressionUpdatedEvent.html":{"url":"classes/ExpressionUpdatedEvent.html","title":"class - ExpressionUpdatedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpressionUpdatedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                node\n                            \n                            \n                                    Public\n                                    Optional\n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(node?: ExpressionNode, offset?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                  \n                                                        \n                                                                        ExpressionNode\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        offset\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            node\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExpressionNode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            offset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { MappedField, MappingModel } from './mapping.model';\nimport { Subject } from 'rxjs';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from './error.model';\n\nexport class ExpressionUpdatedEvent {\n  constructor(public node?: ExpressionNode, public offset?: number) {}\n}\n\nexport abstract class ExpressionNode {\n  protected static sequence = 0;\n  protected uuid;\n\n  constructor(prefix: string) {\n    this.uuid = prefix + ExpressionNode.sequence++;\n  }\n\n  getUuid() {\n    return this.uuid;\n  }\n\n  abstract toText(): string;\n  abstract toHTML(): string;\n}\n\nexport class TextNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-text-';\n\n  constructor(public str: string) {\n    super(TextNode.PREFIX);\n  }\n\n  toText(): string {\n    return this.str;\n  }\n\n  toHTML(): string {\n    return `${this.str.replace(/ /g, '&nbsp;')}`;\n  }\n\n}\n\nexport class FieldNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-field-';\n\n  constructor(private mapping: MappingModel, public field?: MappedField, private index?: number) {\n    super(FieldNode.PREFIX);\n    if (!field) {\n      this.field = mapping.getMappedFieldForIndex((index + 1).toString(), true);\n    }\n  }\n\n  toText(): string {\n    return '${' + (this.mapping.getIndexForMappedField(this.field) - 1) + '}';\n  }\n\n  toHTML(): string {\n    if (this.field && this.field.field) {\n      return `${this.field.field.name}`;\n    } else {\n      return `N/A`;\n    }\n  }\n\n}\n\nexport class ExpressionModel {\n  expressionUpdatedSource = new Subject();\n  expressionUpdated$ = this.expressionUpdatedSource.asObservable();\n\n  private _nodes: ExpressionNode[] = [];\n  private textCache = '';\n  private htmlCache = '';\n\n  constructor(private mapping: MappingModel, private cfg: ConfigModel) {}\n\n  generateInitialExpression() {\n    this.mapping.getUserMappedFields(true).forEach(f => this.appendFieldNode(f));\n  }\n\n  get nodes(): ReadonlyArray {\n    return this._nodes;\n  }\n\n  getLastNodeIndex() {\n    return this._nodes.length - 1;\n  }\n\n  getLastNode() {\n    return this._nodes[this.getLastNodeIndex()];\n  }\n\n  getNode(nodeId?: string): any {\n    if (!nodeId) {\n      return this.getLastNode();\n    }\n    return this._nodes.find(n => n.getUuid() === nodeId);\n  }\n\n  setConfigModel(cfg: ConfigModel) {\n    this.cfg = cfg;\n  }\n\n  /**\n   * Clear all text from the specified TextNode offset range or from the '@' to the end\n   * of the text node if no node ID is specified.\n   *\n   * Return the new UUID position indicator string or null.\n   *\n   * @param nodeId\n   * @param startOffset\n   * @param endOffset\n   */\n  clearText(nodeId?: string, startOffset?: number, endOffset?: number): TextNode {\n    let targetNode: TextNode;\n    let targetNodeIndex = 0;\n    if (!nodeId) {\n      const lastNode = this.getLastNode();\n      if (!(lastNode instanceof TextNode)) {\n        return null;\n      }\n      const keyPos = lastNode.str.indexOf('@');\n      if (keyPos !== -1) {\n        targetNodeIndex = this._nodes.indexOf(lastNode);\n        targetNode = lastNode;\n        targetNode.str = targetNode.str.substring(0, keyPos);\n      }\n    } else {\n      const node = this._nodes.find(n => n.getUuid() === nodeId);\n      if (!(node instanceof TextNode) || !endOffset) {\n        return null;\n      }\n      targetNode = node;\n      targetNodeIndex = this._nodes.indexOf(targetNode);\n      const cleanStr = targetNode.str.replace(targetNode.str.substring(startOffset, endOffset), '');\n      targetNode.str = cleanStr;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n    return targetNode;\n  }\n\n  /**\n   * Insert text into expression at specified position. If nodeId is not specified,\n   * it will be added to the end of expression. It parses the string\n   * and insert a set of TextNode & FieldNode if it contains field reference like ${0},\n   * otherwise just one TextNode.\n   * This emits ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   * @param str string to insert\n   * @param nodeId target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertText(str: string, nodeId?: string, offset?: number) {\n    this.insertNodes(this.createNodesFromText(str), nodeId, offset);\n  }\n\n  /**\n   * Insert an array of ExpressionNodes at the specified position. If insertPosition is\n   * not specified the nodes will be appended to the end of the expression.\n   * This emits an ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   *\n   * @param newNodes an array of ExpressionNode to add\n   * @param insertPosition target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertNodes(newNodes: ExpressionNode[], insertPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!insertPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        this._nodes.push(...newNodes);\n      } else if (last instanceof TextNode && newNodes[0] instanceof TextNode) {\n        const lastTextNode = last as TextNode;\n        (last as TextNode).str += (newNodes[0] as TextNode).str;\n        newNodes.splice(0, 1, last);\n        this._nodes.splice(this.getLastNodeIndex(), 1, ...newNodes);\n      } else if (last instanceof FieldNode && newNodes[0] instanceof FieldNode) {\n        this._nodes.splice(this.getLastNodeIndex(), 0, new TextNode(' + '), ...newNodes);\n      } else {\n        this._nodes.push(...newNodes);\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    const updatedEvent = new ExpressionUpdatedEvent();\n    const targetNode = this._nodes.find(n => n.getUuid() === insertPosition);\n    const targetNodeIndex = this._nodes.indexOf(targetNode);\n\n    if (targetNode instanceof TextNode) {\n      if (offset === undefined || offset === null || offset  0) {\n        if (newNodes[0] instanceof TextNode) {\n          targetNode.str = pre + (newNodes[0] as TextNode).str;\n          newNodes.splice(0, 1, targetNode);\n        } else {\n          targetNode.str = pre;\n          newNodes.splice(0, 0, targetNode);\n        }\n      }\n      if (post.length > 0) {\n        const lastNewNodeIndex = newNodes.length - 1;\n        if (newNodes[lastNewNodeIndex] instanceof TextNode) {\n          let mergedTextNode: TextNode;\n          if (pre.length > 0) {\n            mergedTextNode = newNodes[lastNewNodeIndex] as TextNode;\n            mergedTextNode.str += post;\n          } else {\n            mergedTextNode = targetNode;\n            mergedTextNode.str = (newNodes[lastNewNodeIndex]as TextNode).str + post;\n          }\n          newNodes.splice(lastNewNodeIndex, 1, mergedTextNode);\n        } else {\n          if (pre.length > 0) {\n            newNodes.push(new TextNode(post));\n          } else {\n            targetNode.str = post;\n            newNodes.push(targetNode);\n          }\n        }\n      }\n      this._nodes.splice(targetNodeIndex, 1, ...newNodes);\n      const lastAddedIndex = targetNodeIndex + newNodes.length - 1;\n      if (this._nodes[lastAddedIndex] instanceof FieldNode\n          && this.nodes[lastAddedIndex + 1] instanceof FieldNode) {\n        // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n        const space = new TextNode(' + ');\n        this._nodes.splice(lastAddedIndex + 1, 0, space);\n        updatedEvent.node = space;\n        updatedEvent.offset = 1;\n      } else if (this._nodes[lastAddedIndex] instanceof FieldNode) {\n        updatedEvent.node = this._nodes[lastAddedIndex + 1];\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = this._nodes[lastAddedIndex];\n        updatedEvent.offset = (this._nodes[lastAddedIndex] as TextNode).str.length - post.length;\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next(updatedEvent);\n      return;\n    }\n\n    // targetNode is a FieldNode - insert the text before it if offset is 0, otherwise after it\n    if (offset !== 0 && newNodes[0] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      newNodes.splice(0, 0, new TextNode(' + '));\n    }\n    const nextNodeIndex = offset === 0 ? targetNodeIndex : targetNodeIndex + 1;\n    const nextNode = this._nodes[nextNodeIndex];\n    if (nextNode instanceof TextNode && newNodes[newNodes.length - 1] instanceof TextNode) {\n      updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      nextNode.str = (newNodes[newNodes.length - 1] as TextNode).str + (nextNode as TextNode).str;\n      newNodes.pop();\n      this._nodes.splice(nextNodeIndex, 1, ...newNodes);\n      updatedEvent.node = nextNode;\n    } else if (nextNode instanceof FieldNode && newNodes[newNodes.length - 1] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      const space = new TextNode(' + ');\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes, space);\n      updatedEvent.node = space;\n      updatedEvent.offset = 1;\n    } else {\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes);\n      if (nextNode instanceof TextNode) {\n        updatedEvent.node = nextNode;\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = newNodes[newNodes.length - 1];\n        updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  removeToken(lastFieldRefRemoved: (removed: MappedField) => void, tokenPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!tokenPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        return;\n      }\n      if (last instanceof FieldNode) {\n        const removed = this._nodes.pop() as FieldNode;\n        if (!this._nodes.find(n => n instanceof FieldNode && n.field === removed.field)) {\n          lastFieldRefRemoved(removed.field);\n        }\n      } else if (last instanceof TextNode) {\n        if (last.str.length > 0) {\n          last.str = last.str.substring(0, last.str.length - 1);\n        } else {\n          this._nodes.pop();\n        }\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    let updatedEvent = new ExpressionUpdatedEvent();\n    let targetNode = this._nodes.find(n => n.getUuid() === tokenPosition);\n    let targetNodeIndex = this._nodes.indexOf(targetNode);\n    if (!targetNode || offset === -1) {\n      if (targetNodeIndex  n instanceof FieldNode && n.field === targetFieldNode.field)) {\n        lastFieldRefRemoved(targetFieldNode.field);\n      }\n      if (this._nodes.length > targetNodeIndex) {\n        if (this._nodes[targetNodeIndex - 1] instanceof TextNode\n            && this._nodes[targetNodeIndex] instanceof TextNode) {\n          const newOffset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n          (this._nodes[targetNodeIndex - 1] as TextNode).str\n              += (this._nodes[targetNodeIndex] as TextNode).str;\n          this._nodes.splice(targetNodeIndex, 1);\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = newOffset;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof FieldNode\n            && this._nodes[targetNodeIndex] instanceof FieldNode) {\n          const glue = new TextNode(' + ');\n          this._nodes.splice(targetNodeIndex, 0, glue);\n          updatedEvent.node = glue;\n          updatedEvent.offset = 3;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n        } else if (this._nodes[targetNodeIndex] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex];\n          updatedEvent.offset = 0;\n        }\n      } else {\n        // end of line\n        updatedEvent = undefined;\n      }\n    } else {\n      const targetString = (targetNode as TextNode).str;\n      (targetNode as TextNode).str = offset === 0 ? targetString.substr(1)\n        : targetString.substring(0, offset) + targetString.substring(offset + 1);\n      if ((targetNode as TextNode).str.length === 0) {\n        this.cfg.errorService.addError(new ErrorInfo({message: 'At least one space is required between field references.',\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.USER, mapping: this.mapping}));\n        return;\n      }\n      updatedEvent.node = targetNode;\n      updatedEvent.offset = offset;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  /**\n   * Replace the content of the last text node with a substring terminating at the\n   * specified index.\n   *\n   * @param index\n   */\n  clearToEnd(index: number): void {\n    const last = this.getLastNode();\n    if (!(last instanceof TextNode)) {\n      return;\n    }\n    last.str = last.str.substring(0, index);\n  }\n\n  /**\n   * Reflect mapped source fields to the field references in the expression.\n   * Selected source fields are inserted into or appended to the expression,\n   * and unselected source fields are removed from expression.\n   *\n   * @param mapping Corresponding MappingModel object\n   */\n  updateFieldReference(mapping: MappingModel, insertPosition?: string, offset?: number) {\n    const mappedFields = mapping.getUserMappedFields(true);\n    const toAdd: MappedField[] = [];\n    const toRemove: MappedField[] = [];\n    let fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n\n    // Remove the field from the expression if unmapped.\n    for (const node of fieldNodes) {\n      if (mappedFields.includes(node.field)) {\n        continue;\n      }\n      const index = this._nodes.indexOf(node);\n      this._nodes.splice(index, 1);\n      if (this._nodes.length > index && this._nodes[index - 1] instanceof TextNode\n          && this._nodes[index] instanceof TextNode) {\n        (this._nodes[index - 1] as TextNode).str += (this._nodes[index] as TextNode).str;\n        this._nodes.splice(index, 1);\n      }\n    }\n\n    // Add the specified field into the expression - append if no insert position is specified.\n    fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n    for (const mfield of mappedFields) {\n      if (!fieldNodes.find(n => n.field === mfield)) {\n        if (insertPosition) {\n          this.insertNodes([new FieldNode(this.mapping, mfield)], insertPosition, offset);\n        } else {\n          this.appendFieldNode(mfield);\n        }\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  clear() {\n    this._nodes = [];\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  toText() {\n    return this.textCache;\n  }\n\n  toHTML() {\n    return this.htmlCache;\n  }\n\n  private updateCache() {\n    let answer = '';\n    this._nodes.forEach(node => answer += node.toText());\n    this.textCache = answer;\n    answer = '';\n    this._nodes.forEach(node => answer += node.toHTML());\n    this.htmlCache = answer;\n  }\n\n  private createNodesFromText(text: string): ExpressionNode[] {\n    const answer = [];\n    let position = -1;\n    let fn = null;\n\n    while ((position = text.search(/\\$\\{[0-9]+\\}/)) !== -1 ) {\n      if (position !== 0) {\n        answer.push(new TextNode(text.substring(0, position)));\n      }\n      const index = parseInt(text.substring(position + 2, text.indexOf('}')), 10);\n      fn = new FieldNode(this.mapping, null, index);\n      if (fn.field === null) {\n        this.cfg.errorService.addError(new ErrorInfo({message: `Unable to map expression index \"${index}\" to field node.`,\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.INTERNAL, mapping: this.mapping}));\n      } else {\n        answer.push(fn);\n      }\n      text = text.substring(text.indexOf('}') + 1);\n    }\n    if (text.length > 0) {\n      answer.push(new TextNode(text));\n    }\n    return answer;\n  }\n\n  private appendFieldNode(mfield: MappedField) {\n    const lastNode = this._nodes.pop();\n    if (lastNode instanceof FieldNode) {\n        this._nodes.push(lastNode, new TextNode(' + '));\n    } else if (lastNode instanceof TextNode) {\n      if (lastNode.str.length === 0) {\n        this._nodes.push(new TextNode(' + '));\n      } else {\n        this._nodes.push(lastNode);\n      }\n    }\n    this._nodes.push(new FieldNode(this.mapping, mfield));\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldAction.html":{"url":"classes/FieldAction.html","title":"class - FieldAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                argumentValues\n                            \n                            \n                                definition\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                getArgumentValue\n                            \n                            \n                                setArgumentValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            argumentValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldActionArgumentValue[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            definition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldActionDefinition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:77\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(definition: FieldActionDefinition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                FieldActionDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldAction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getArgumentValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetArgumentValue(argumentName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argumentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldActionArgumentValue\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setArgumentValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetArgumentValue(argumentName: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argumentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FieldActionArgument {\n  name: string = null;\n  type = 'STRING';\n  values = null;\n  serviceObject: any = new Object();\n}\n\nexport class FieldActionArgumentValue {\n  name: string = null;\n  value: string = null;\n}\n\nexport enum Multiplicity {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  ZERO_TO_ONE = 'ZERO_TO_ONE'\n}\n\nexport class FieldActionDefinition {\n  name: string;\n  isCustom: boolean;\n  arguments: FieldActionArgument[] = [];\n  method: string;\n  sourceType = 'undefined';\n  targetType = 'undefined';\n  multiplicity = Multiplicity.ONE_TO_ONE;\n  serviceObject: any = new Object();\n\n  populateFieldAction(action: FieldAction): void {\n    action.name = this.name;\n    action.definition = this;\n\n    // Use the parsed values if present, otherwise set to '0'.\n    if (action.argumentValues == null || action.argumentValues.length === 0) {\n      action.argumentValues = [];\n      for (const arg of this.arguments) {\n\n        // Default the input field to 0 for numerics\n        if (['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(arg.type) !== -1) {\n          action.setArgumentValue(arg.name, '0');\n        } else {\n          action.setArgumentValue(arg.name, '');\n        }\n      }\n    }\n  }\n\n  getArgumentForName(name: string): FieldActionArgument {\n    for (const argument of this.arguments) {\n      if (argument.name === name) {\n        return argument;\n      }\n    }\n    return null;\n  }\n\n}\n\nexport class FieldAction {\n  name: string;\n  definition: FieldActionDefinition = null;\n  argumentValues: FieldActionArgumentValue[] = [];\n\n  static create(definition: FieldActionDefinition): FieldAction {\n    const instance = new FieldAction();\n    instance.definition = definition;\n    instance.name = definition.name;\n    return instance;\n  }\n\n  getArgumentValue(argumentName: string): FieldActionArgumentValue {\n    for (const argValue of this.argumentValues) {\n      if (argValue.name === argumentName) {\n        return argValue;\n      }\n    }\n    const newArgValue: FieldActionArgumentValue = new FieldActionArgumentValue();\n    newArgValue.name = argumentName;\n    newArgValue.value = '0';\n    this.argumentValues.push(newArgValue);\n    return newArgValue;\n  }\n\n  setArgumentValue(argumentName: string, value: string): void {\n    this.getArgumentValue(argumentName).value = value;\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldActionArgument.html":{"url":"classes/FieldActionArgument.html","title":"class - FieldActionArgument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldActionArgument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                serviceObject\n                            \n                            \n                                type\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : new Object()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            values\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FieldActionArgument {\n  name: string = null;\n  type = 'STRING';\n  values = null;\n  serviceObject: any = new Object();\n}\n\nexport class FieldActionArgumentValue {\n  name: string = null;\n  value: string = null;\n}\n\nexport enum Multiplicity {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  ZERO_TO_ONE = 'ZERO_TO_ONE'\n}\n\nexport class FieldActionDefinition {\n  name: string;\n  isCustom: boolean;\n  arguments: FieldActionArgument[] = [];\n  method: string;\n  sourceType = 'undefined';\n  targetType = 'undefined';\n  multiplicity = Multiplicity.ONE_TO_ONE;\n  serviceObject: any = new Object();\n\n  populateFieldAction(action: FieldAction): void {\n    action.name = this.name;\n    action.definition = this;\n\n    // Use the parsed values if present, otherwise set to '0'.\n    if (action.argumentValues == null || action.argumentValues.length === 0) {\n      action.argumentValues = [];\n      for (const arg of this.arguments) {\n\n        // Default the input field to 0 for numerics\n        if (['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(arg.type) !== -1) {\n          action.setArgumentValue(arg.name, '0');\n        } else {\n          action.setArgumentValue(arg.name, '');\n        }\n      }\n    }\n  }\n\n  getArgumentForName(name: string): FieldActionArgument {\n    for (const argument of this.arguments) {\n      if (argument.name === name) {\n        return argument;\n      }\n    }\n    return null;\n  }\n\n}\n\nexport class FieldAction {\n  name: string;\n  definition: FieldActionDefinition = null;\n  argumentValues: FieldActionArgumentValue[] = [];\n\n  static create(definition: FieldActionDefinition): FieldAction {\n    const instance = new FieldAction();\n    instance.definition = definition;\n    instance.name = definition.name;\n    return instance;\n  }\n\n  getArgumentValue(argumentName: string): FieldActionArgumentValue {\n    for (const argValue of this.argumentValues) {\n      if (argValue.name === argumentName) {\n        return argValue;\n      }\n    }\n    const newArgValue: FieldActionArgumentValue = new FieldActionArgumentValue();\n    newArgValue.name = argumentName;\n    newArgValue.value = '0';\n    this.argumentValues.push(newArgValue);\n    return newArgValue;\n  }\n\n  setArgumentValue(argumentName: string, value: string): void {\n    this.getArgumentValue(argumentName).value = value;\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldActionArgumentValue.html":{"url":"classes/FieldActionArgumentValue.html","title":"class - FieldActionArgumentValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldActionArgumentValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FieldActionArgument {\n  name: string = null;\n  type = 'STRING';\n  values = null;\n  serviceObject: any = new Object();\n}\n\nexport class FieldActionArgumentValue {\n  name: string = null;\n  value: string = null;\n}\n\nexport enum Multiplicity {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  ZERO_TO_ONE = 'ZERO_TO_ONE'\n}\n\nexport class FieldActionDefinition {\n  name: string;\n  isCustom: boolean;\n  arguments: FieldActionArgument[] = [];\n  method: string;\n  sourceType = 'undefined';\n  targetType = 'undefined';\n  multiplicity = Multiplicity.ONE_TO_ONE;\n  serviceObject: any = new Object();\n\n  populateFieldAction(action: FieldAction): void {\n    action.name = this.name;\n    action.definition = this;\n\n    // Use the parsed values if present, otherwise set to '0'.\n    if (action.argumentValues == null || action.argumentValues.length === 0) {\n      action.argumentValues = [];\n      for (const arg of this.arguments) {\n\n        // Default the input field to 0 for numerics\n        if (['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(arg.type) !== -1) {\n          action.setArgumentValue(arg.name, '0');\n        } else {\n          action.setArgumentValue(arg.name, '');\n        }\n      }\n    }\n  }\n\n  getArgumentForName(name: string): FieldActionArgument {\n    for (const argument of this.arguments) {\n      if (argument.name === name) {\n        return argument;\n      }\n    }\n    return null;\n  }\n\n}\n\nexport class FieldAction {\n  name: string;\n  definition: FieldActionDefinition = null;\n  argumentValues: FieldActionArgumentValue[] = [];\n\n  static create(definition: FieldActionDefinition): FieldAction {\n    const instance = new FieldAction();\n    instance.definition = definition;\n    instance.name = definition.name;\n    return instance;\n  }\n\n  getArgumentValue(argumentName: string): FieldActionArgumentValue {\n    for (const argValue of this.argumentValues) {\n      if (argValue.name === argumentName) {\n        return argValue;\n      }\n    }\n    const newArgValue: FieldActionArgumentValue = new FieldActionArgumentValue();\n    newArgValue.name = argumentName;\n    newArgValue.value = '0';\n    this.argumentValues.push(newArgValue);\n    return newArgValue;\n  }\n\n  setArgumentValue(argumentName: string, value: string): void {\n    this.getArgumentValue(argumentName).value = value;\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldActionDefinition.html":{"url":"classes/FieldActionDefinition.html","title":"class - FieldActionDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldActionDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                arguments\n                            \n                            \n                                isCustom\n                            \n                            \n                                method\n                            \n                            \n                                multiplicity\n                            \n                            \n                                name\n                            \n                            \n                                serviceObject\n                            \n                            \n                                sourceType\n                            \n                            \n                                targetType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getArgumentForName\n                            \n                            \n                                populateFieldAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arguments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldActionArgument[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCustom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            method\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            multiplicity\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Multiplicity.ONE_TO_ONE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : new Object()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'undefined'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'undefined'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:42\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getArgumentForName\n                        \n                        \n                    \n                \n            \n            \n                \ngetArgumentForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldActionArgument\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            populateFieldAction\n                        \n                        \n                    \n                \n            \n            \n                \npopulateFieldAction(action: FieldAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FieldActionArgument {\n  name: string = null;\n  type = 'STRING';\n  values = null;\n  serviceObject: any = new Object();\n}\n\nexport class FieldActionArgumentValue {\n  name: string = null;\n  value: string = null;\n}\n\nexport enum Multiplicity {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  ZERO_TO_ONE = 'ZERO_TO_ONE'\n}\n\nexport class FieldActionDefinition {\n  name: string;\n  isCustom: boolean;\n  arguments: FieldActionArgument[] = [];\n  method: string;\n  sourceType = 'undefined';\n  targetType = 'undefined';\n  multiplicity = Multiplicity.ONE_TO_ONE;\n  serviceObject: any = new Object();\n\n  populateFieldAction(action: FieldAction): void {\n    action.name = this.name;\n    action.definition = this;\n\n    // Use the parsed values if present, otherwise set to '0'.\n    if (action.argumentValues == null || action.argumentValues.length === 0) {\n      action.argumentValues = [];\n      for (const arg of this.arguments) {\n\n        // Default the input field to 0 for numerics\n        if (['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(arg.type) !== -1) {\n          action.setArgumentValue(arg.name, '0');\n        } else {\n          action.setArgumentValue(arg.name, '');\n        }\n      }\n    }\n  }\n\n  getArgumentForName(name: string): FieldActionArgument {\n    for (const argument of this.arguments) {\n      if (argument.name === name) {\n        return argument;\n      }\n    }\n    return null;\n  }\n\n}\n\nexport class FieldAction {\n  name: string;\n  definition: FieldActionDefinition = null;\n  argumentValues: FieldActionArgumentValue[] = [];\n\n  static create(definition: FieldActionDefinition): FieldAction {\n    const instance = new FieldAction();\n    instance.definition = definition;\n    instance.name = definition.name;\n    return instance;\n  }\n\n  getArgumentValue(argumentName: string): FieldActionArgumentValue {\n    for (const argValue of this.argumentValues) {\n      if (argValue.name === argumentName) {\n        return argValue;\n      }\n    }\n    const newArgValue: FieldActionArgumentValue = new FieldActionArgumentValue();\n    newArgValue.name = argumentName;\n    newArgValue.value = '0';\n    this.argumentValues.push(newArgValue);\n    return newArgValue;\n  }\n\n  setArgumentValue(argumentName: string, value: string): void {\n    this.getArgumentValue(argumentName).value = value;\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FieldActionService.html":{"url":"injectables/FieldActionService.html","title":"injectable - FieldActionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FieldActionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/field-action.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                cfg\n                            \n                            \n                                    Private\n                                headers\n                            \n                            \n                                isInitialized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                appliesToField\n                            \n                            \n                                    Private\n                                appliesToSourceField\n                            \n                            \n                                    Private\n                                appliesToTargetField\n                            \n                            \n                                    Private\n                                clearActionDefinitions\n                            \n                            \n                                    Private\n                                doFetchFieldActions\n                            \n                            \n                                    Private\n                                extractFieldActionDefinition\n                            \n                            \n                                    Async\n                                fetchFieldActions\n                            \n                            \n                                getActionDefinitionForName\n                            \n                            \n                                getActionsAppliesToField\n                            \n                            \n                                    Private\n                                getActualField\n                            \n                            \n                                    Private\n                                matchesDate\n                            \n                            \n                                    Private\n                                matchesNumeric\n                            \n                            \n                                    Private\n                                sortFieldActionDefinitions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorService: ErrorHandlerService, logger: NGXLogger, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            appliesToField\n                        \n                        \n                    \n                \n            \n            \n                \nappliesToField(action: FieldActionDefinition, mapping: MappingModel, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:245\n                \n            \n\n\n            \n                \n                    Return true if the action's source/target types and collection types match the respective source/target\nfield properties for source transformations, or matches the respective target field properties only for\na target transformation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldActionDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            appliesToSourceField\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    appliesToSourceField(action: FieldActionDefinition, mapping: MappingModel, selectedSourceField: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:282\n                \n            \n\n\n            \n                \n                    Check if it could be applied to source field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldActionDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FieldMappingPair\n\n                                    \n                                \n                                \n                                    selectedSourceField\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected source field\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            appliesToTargetField\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    appliesToTargetField(action: FieldActionDefinition, mapping: MappingModel, selectedTargetField: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:307\n                \n            \n\n\n            \n                \n                    Check if it could be applied for target field. Target type may not change.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldActionDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FieldMappingPair\n\n                                    \n                                \n                                \n                                    selectedTargetField\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected target field\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearActionDefinitions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearActionDefinitions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:360\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            doFetchFieldActions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doFetchFieldActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractFieldActionDefinition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractFieldActionDefinition(actionDetail: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actionDetail\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldActionDefinition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchFieldActions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchFieldActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionDefinitionForName\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionDefinitionForName(actionName: string, multiplicity?: Multiplicity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    multiplicity\n                                    \n                                                Multiplicity\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldActionDefinition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionsAppliesToField\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionsAppliesToField(mapping: MappingModel, isSource: boolean, multiplicity: Multiplicity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:137\n                \n            \n\n\n            \n                \n                    Return the field action Definitions applicable to the specified field mapping pair.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                                \n                                    multiplicity\n                                    \n                                                Multiplicity\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        Multiplicity.ONE_TO_ONE\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     FieldActionDefinition[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getActualField\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getActualField(mapping: MappingModel, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:267\n                \n            \n\n\n            \n                \n                    Return the first non-padding field in either the source or target mappings.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Field\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            matchesDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchesDate(candidateType: string, selectedType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:342\n                \n            \n\n\n            \n                \n                    Return true if the candidate type and selected type are generically a date, false otherwise.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    candidateType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            matchesNumeric\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchesNumeric(candidateType: string, selectedType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:354\n                \n            \n\n\n            \n                \n                    Return true if the candidate type and selected type are generically numeric, false otherwise.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    candidateType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sortFieldActionDefinitions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sortFieldActionDefinitions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n    [Multiplicity.ONE_TO_ONE]: [],\n    [Multiplicity.ONE_TO_MANY]: [],\n    [Multiplicity.MANY_TO_ONE]: [],\n    [Multiplicity.ZERO_TO_ONE]: []\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new HttpHeaders(\n    {'Content-Type': 'application/json; application/octet-stream',\n     'Accept':       'application/json; application/octet-stream'})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ConfigModel } from '../models/config.model';\nimport { NGXLogger } from 'ngx-logger';\nimport { ErrorHandlerService } from './error-handler.service';\nimport { FieldActionDefinition, FieldActionArgument, Multiplicity } from '../models/field-action.model';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { MappingModel } from '../models/mapping.model';\nimport { Field } from '../models/field.model';\nimport { ErrorInfo, ErrorLevel, ErrorScope, ErrorType } from '../models/error.model';\n\n@Injectable()\nexport class FieldActionService {\n  cfg: ConfigModel = ConfigModel.getConfig();\n  actions: { [key in Multiplicity]: FieldActionDefinition[]} = {\n    [Multiplicity.ONE_TO_ONE]: [],\n    [Multiplicity.ONE_TO_MANY]: [],\n    [Multiplicity.MANY_TO_ONE]: [],\n    [Multiplicity.ZERO_TO_ONE]: []\n  };\n\n  isInitialized = false;\n  private headers = new HttpHeaders(\n    {'Content-Type': 'application/json; application/octet-stream',\n     'Accept':       'application/json; application/octet-stream'});\n\n  constructor(\n    private errorService: ErrorHandlerService,\n    private logger: NGXLogger,\n    private http: HttpClient) {}\n\n  async fetchFieldActions(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this.cfg.preloadedFieldActionMetadata) {\n        this.clearActionDefinitions();\n        if (this.cfg.preloadedFieldActionMetadata && this.cfg.preloadedFieldActionMetadata.ActionDetails) {\n          for (const actionDetail of this.cfg.preloadedFieldActionMetadata.ActionDetails.actionDetail) {\n            const fieldActionDefinition = this.extractFieldActionDefinition(actionDetail);\n            if (!fieldActionDefinition.multiplicity) {\n              this.logger.debug(`Field action (${fieldActionDefinition.name}) is missing multiplicity, ingoring`);\n              continue;\n            }\n            if (fieldActionDefinition.name === 'Expression') { // Expression is handled in special manner\n              continue;\n            }\n            this.actions[fieldActionDefinition.multiplicity].push(fieldActionDefinition);\n          }\n        }\n        this.sortFieldActionDefinitions();\n        this.isInitialized = true;\n        resolve(true);\n        return;\n      }\n\n      if (this.cfg.mappingService == null) {\n        this.cfg.errorService.addError(new ErrorInfo({message: 'Mapping service is not provided. Field Actions will not be used.',\n          level: ErrorLevel.WARN, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL}));\n        this.isInitialized = true;\n        resolve(true);\n        return;\n      } else if (this.cfg.initCfg.baseMappingServiceUrl == null) {\n        this.cfg.errorService.addError(new ErrorInfo({message: 'Mapping service URL is not provided. Field Actions will not be used.',\n        level: ErrorLevel.WARN, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL}));\n        this.isInitialized = true;\n        resolve(true);\n        return;\n      }\n\n      // Fetch the field actions from the runtime service.\n      this.doFetchFieldActions().toPromise()\n        .then((fetchedActionConfigs: FieldActionDefinition[]) => {\n          if (fetchedActionConfigs.length === 1) {\n            this.logger.debug('No field action was returned from backend');\n            resolve(false);\n          }\n          this.clearActionDefinitions();\n          fetchedActionConfigs.forEach(action => {\n            if (!action.multiplicity) {\n              this.logger.debug(`Field action  (${action.name}) is missing multiplicity, ignoring`);\n              return;\n            }\n            if (action.name === 'Expression') { // Expression is handled in special manner\n              return;\n            }\n            this.actions[action.multiplicity].push(action);\n          });\n          this.sortFieldActionDefinitions();\n          this.isInitialized = true;\n          resolve(true);\n        }).catch((error: any) => {\n          if (error.status === 0) {\n            reject(`Fatal network error: Could not connect to AtlasMap design runtime service. (${error})`);\n          } else {\n            reject(`Could not load field action configs: (${error.message})`);\n          }\n        });\n    });\n  }\n\n  getActionDefinitionForName(actionName: string, multiplicity?: Multiplicity): FieldActionDefinition {\n    if (!this.actions || !actionName) {\n      return null;\n    }\n    let actions: FieldActionDefinition[] = [];\n    if (multiplicity) {\n      actions = this.actions[multiplicity];\n     } else {\n       Object.values(this.actions).forEach(arr => actions = actions.concat(arr));\n     }\n    for (const actionDef of actions) {\n      if (actionName === actionDef.name) {\n        return actionDef;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Return the field action Definitions applicable to the specified field mapping pair.\n   * @param mapping\n   */\n  getActionsAppliesToField(mapping: MappingModel, isSource: boolean = true,\n  multiplicity: Multiplicity = Multiplicity.ONE_TO_ONE): FieldActionDefinition[] {\n    if (!mapping || !this.actions) {\n      return [];\n    }\n    return this.actions[multiplicity].filter(d => this.appliesToField(d, mapping, isSource));\n  }\n\n  private doFetchFieldActions(): Observable {\n    return new Observable((observer: any) => {\n      const actionConfigs: FieldActionDefinition[] = [];\n      const url: string = this.cfg.initCfg.baseMappingServiceUrl + 'fieldActions';\n      this.cfg.logger.trace('Field Action Config Request');\n      this.http.get(url, { headers: this.headers }).toPromise().then((body: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Field Action Config Response: ${JSON.stringify(body)}`);\n        }\n        if (body && body.ActionDetails\n          && body.ActionDetails.actionDetail\n          && body.ActionDetails.actionDetail.length) {\n          for (const actionDetail of body.ActionDetails.actionDetail) {\n            const fieldActionConfig = this.extractFieldActionDefinition(actionDetail);\n            actionConfigs.push(fieldActionConfig);\n          }\n        }\n        observer.next(actionConfigs);\n        observer.complete();\n      }).catch((error: any) => {\n        observer.error(error);\n        observer.next(actionConfigs);\n        observer.complete();\n      });\n    });\n  }\n\n  private extractFieldActionDefinition(actionDetail: any): FieldActionDefinition {\n    if (this.cfg.isDebugEnabled()) {\n      this.cfg.logger.debug(`Deserializing field action definition: ${JSON.stringify(actionDetail)}`);\n    }\n\n    const fieldActionDefinition = new FieldActionDefinition();\n    fieldActionDefinition.name = actionDetail.name;\n    fieldActionDefinition.isCustom = actionDetail.custom;\n    fieldActionDefinition.sourceType = actionDetail.sourceType;\n    fieldActionDefinition.targetType = actionDetail.targetType;\n    fieldActionDefinition.method = actionDetail.method;\n    fieldActionDefinition.multiplicity = actionDetail.multiplicity;\n    fieldActionDefinition.serviceObject = actionDetail;\n\n    if (actionDetail.actionSchema) {\n\n      for (const key of Object.keys(actionDetail.actionSchema.properties)) {\n        const propertyObject = actionDetail.actionSchema.properties[key];\n        if (key === '@type') {\n          fieldActionDefinition.name = propertyObject.const;\n          continue;\n        }\n        const argumentDefinition = new FieldActionArgument();\n        argumentDefinition.name = key;\n        argumentDefinition.type = propertyObject.type;\n        argumentDefinition.values = propertyObject.enum;\n        argumentDefinition.serviceObject = propertyObject;\n        fieldActionDefinition.arguments.push(argumentDefinition);\n      }\n    }\n    return fieldActionDefinition;\n  }\n\n  private sortFieldActionDefinitions() {\n    Object.keys(this.actions).forEach(multiplicity => {\n      const definitions = this.actions[multiplicity];\n      const sortedActionDefinitions: FieldActionDefinition[] = [];\n      if (definitions == null || definitions.length === 0) {\n        return;\n      }\n\n      const defsByName: { [key: string]: FieldActionDefinition[]; } = {};\n      const defNames: string[] = [];\n      for (const fieldActionConfig of definitions) {\n        const name: string = fieldActionConfig.name;\n        let sameNamedDefs: FieldActionDefinition[] = defsByName[name];\n        if (!sameNamedDefs) {\n          sameNamedDefs = [];\n          defNames.push(name);\n        }\n        sameNamedDefs.push(fieldActionConfig);\n        defsByName[name] = sameNamedDefs;\n      }\n\n      defNames.sort();\n\n      for (const name of defNames) {\n        const sameNamedDefs: FieldActionDefinition[] = defsByName[name];\n        for (const fieldActionDefinition of sameNamedDefs) {\n          sortedActionDefinitions.push(fieldActionDefinition);\n        }\n      }\n      this.actions[multiplicity] = sortedActionDefinitions;\n    });\n  }\n\n  /**\n   * Return true if the action's source/target types and collection types match the respective source/target\n   * field properties for source transformations, or matches the respective target field properties only for\n   * a target transformation.\n   *\n   * @param mapping\n   */\n  appliesToField(action: FieldActionDefinition, mapping: MappingModel, isSource: boolean): boolean {\n\n    if (mapping == null) {\n      return false;\n    }\n    const selectedSourceField: Field = this.getActualField(mapping, true);\n    const selectedTargetField: Field = this.getActualField(mapping, false);\n\n    if ((isSource && selectedSourceField == null) || (!isSource) && selectedTargetField == null) {\n      return false;\n    }\n\n    return isSource ? this.appliesToSourceField(action, mapping, selectedSourceField)\n     : this.appliesToTargetField(action, mapping, selectedTargetField);\n  }\n\n  /**\n   * Return the first non-padding field in either the source or target mappings.\n   *\n   * @param mapping\n   * @param isSource\n   */\n  private getActualField(mapping: MappingModel, isSource: boolean): Field {\n    let targetField: Field = null;\n    for (targetField of mapping.getFields(isSource)) {\n      if ((targetField.name !== '')) {\n        break;\n      }\n    }\n    return targetField;\n  }\n\n  /**\n   * Check if it could be applied to source field.\n   * @param mapping FieldMappingPair\n   * @param selectedSourceField selected source field\n   */\n  private appliesToSourceField(action: FieldActionDefinition, mapping: MappingModel, selectedSourceField: Field): boolean {\n\n    // Check for matching types - date.\n    if (this.matchesDate(action.sourceType, selectedSourceField.type)) {\n      return true;\n    }\n\n    // Check for matching types - numeric.\n    if (this.matchesNumeric(action.sourceType, selectedSourceField.type)) {\n      return true;\n    }\n\n    // First check if the source types match.\n    if ((action.sourceType === 'ANY') || (selectedSourceField.type === action.sourceType)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if it could be applied for target field. Target type may not change.\n   * @param mapping FieldMappingPair\n   * @param selectedTargetField selected target field\n   */\n  private appliesToTargetField(action: FieldActionDefinition, mapping: MappingModel, selectedTargetField: Field): boolean {\n    if (selectedTargetField == null) {\n      return false;\n    }\n\n    if (action.multiplicity !== Multiplicity.ONE_TO_ONE) {\n      return false;\n    }\n\n    // Check for matching types - date.\n    if (this.matchesDate(action.sourceType, selectedTargetField.type)\n     && this.matchesDate(action.targetType, selectedTargetField.type)) {\n      return true;\n    }\n\n    // Check for matching types - numeric.\n    if (this.matchesNumeric(action.sourceType, selectedTargetField.type)\n     && this.matchesNumeric(action.targetType, selectedTargetField.type)) {\n      return true;\n    }\n\n    if (action.sourceType !== 'ANY' && action.sourceType !== selectedTargetField.type) {\n      return false;\n    }\n\n    // All other types must match the selected field types with the candidate field action types.\n    return (action.targetType === 'ANY' || selectedTargetField.type === action.targetType);\n  }\n\n  /**\n   * Return true if the candidate type and selected type are generically a date, false otherwise.\n   *\n   * @param candidateType\n   * @param selectedType\n   */\n  private matchesDate(candidateType: string, selectedType: string): boolean {\n    return ((candidateType === 'ANY') ||\n      (candidateType === 'ANY_DATE' &&\n        ['DATE', 'DATE_TIME', 'DATE_TIME_TZ', 'TIME'].indexOf(selectedType) !== -1));\n  }\n\n  /**\n   * Return true if the candidate type and selected type are generically numeric, false otherwise.\n   *\n   * @param candidateType\n   * @param selectedType\n   */\n  private matchesNumeric(candidateType: string, selectedType: string): boolean {\n    return ((candidateType === 'ANY') ||\n      (candidateType === 'NUMBER' &&\n        ['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(selectedType) !== -1));\n  }\n\n  private clearActionDefinitions() {\n    Object.keys(Multiplicity).forEach(m => this.actions[m] = []);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FieldEditComponent.html":{"url":"components/FieldEditComponent.html","title":"component - FieldEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FieldEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                field-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./field-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                dataSource\n                            \n                            \n                                docDef\n                            \n                            \n                                editMode\n                            \n                            \n                                field\n                            \n                            \n                                fieldType\n                            \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                isSource\n                            \n                            \n                                isXML\n                            \n                            \n                                namespaceAlias\n                            \n                            \n                                namespaces\n                            \n                            \n                                parentField\n                            \n                            \n                                parentFieldName\n                            \n                            \n                                valueType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                executeSearch\n                            \n                            \n                                fieldTypeSelectionChanged\n                            \n                            \n                                getField\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                handleOnBlur\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                namespaceSelectionChanged\n                            \n                            \n                                parentSelectionChanged\n                            \n                            \n                                valueTypeSelectionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:45\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            executeSearch\n                        \n                        \n                    \n                \n            \n            \n                \nexecuteSearch(filter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fieldTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nfieldTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getField\n                        \n                        \n                    \n                \n            \n            \n                \ngetField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Field\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleOnBlur\n                        \n                        \n                    \n                \n            \n            \n                \nhandleOnBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(field: Field, docDef: DocumentDefinition, isAdd: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docDef\n                                    \n                                                DocumentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isAdd\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            namespaceSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nnamespaceSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parentSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nparentSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nvalueTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                    \n                        \n                            Default value : new Field()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 'element'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('value')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isXML\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespaceAlias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespaces\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentFieldName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { DocumentDefinition, NamespaceModel } from '../../models/document-definition.model';\nimport { Field } from '../../models/field.model';\nimport { DocumentType } from '../../common/config.types';\nimport { ConfigModel } from '../../models/config.model';\nimport { Observable } from 'rxjs';\nimport { ModalWindowValidator } from '../modal/modal-window.component';\n\n@Component({\n  selector: 'field-edit',\n  templateUrl: './field-edit.component.html',\n})\n\nexport class FieldEditComponent implements ModalWindowValidator {\n  cfg: ConfigModel = ConfigModel.getConfig();\n  field: Field = new Field();\n  parentField: Field;\n  parentFieldName: String = null;\n  isSource = false;\n  fieldType: any = 'element';\n  valueType: any = 'STRING';\n  namespaceAlias = '';\n  editMode = false;\n  namespaces: NamespaceModel[] = [];\n  docDef: DocumentDefinition = null;\n  dataSource: Observable;\n  isXML = false;\n  @ViewChild('value') private focusEl: ElementRef;\n\n  constructor() {\n    this.dataSource = Observable.create((observer: any) => {\n      observer.next(this.executeSearch(observer.outerValue));\n    });\n  }\n\n  initialize(field: Field, docDef: DocumentDefinition, isAdd: boolean): void {\n    this.docDef = docDef;\n    this.editMode = !isAdd;\n    this.field = field == null ? new Field() : field.copy();\n    this.valueType = (this.field.type == null) ? 'STRING' : this.field.type;\n    this.parentField = this.field.parentField;\n\n    if (this.docDef.type === DocumentType.XML) {\n      this.isXML = true;\n      this.fieldType = this.field.isAttribute ? 'attribute' : 'element';\n      this.parentField = (this.field.parentField == null) ? docDef.fields[0] : this.field.parentField;\n      const unqualifiedNS: NamespaceModel = NamespaceModel.getUnqualifiedNamespace();\n      this.namespaceAlias = unqualifiedNS.alias;\n      if (this.field.namespaceAlias) {\n        this.namespaceAlias = this.field.namespaceAlias;\n      }\n      if (isAdd) { // on add, inherit namespace from parent field\n        this.namespaceAlias = this.parentField.namespaceAlias == null ? unqualifiedNS.alias : this.parentField.namespaceAlias;\n      }\n\n      this.namespaces = [unqualifiedNS].concat(this.docDef.namespaces);\n\n      // if the field references a namespace that doesn't exist, add a fake namespace option for the\n      // user to select if they desire to leave that bad namespace alias in place\n      let namespaceFound = false;\n      for (const ns of this.namespaces) {\n        if (ns.alias === this.namespaceAlias) {\n          namespaceFound = true;\n          break;\n        }\n      }\n      if (!namespaceFound) {\n        const fakeNamespace: NamespaceModel = new NamespaceModel();\n        fakeNamespace.alias = this.namespaceAlias;\n        this.namespaces.push(fakeNamespace);\n      }\n    }\n    this.parentFieldName = this.parentField.name;\n  }\n\n  handleOnBlur(event: any): void {\n    this.parentFieldName = this.parentField.name;\n  }\n\n  parentSelectionChanged(event: any): void {\n    const oldParentField: Field = this.parentField;\n    this.parentField = event.item['field'];\n    this.parentField = (this.parentField == null) ? oldParentField : this.parentField;\n    this.parentFieldName = this.parentField.name;\n\n    // change namespace dropdown selecte option to match parent fields' namespace automatically\n    const unqualifiedNS: NamespaceModel = NamespaceModel.getUnqualifiedNamespace();\n    this.namespaceAlias = this.parentField.namespaceAlias == null ? unqualifiedNS.alias : this.parentField.namespaceAlias;\n  }\n\n  fieldTypeSelectionChanged(event: any): void {\n    this.fieldType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  valueTypeSelectionChanged(event: any): void {\n    this.valueType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  namespaceSelectionChanged(event: any): void {\n    this.namespaceAlias = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  executeSearch(filter: string): any[] {\n    const formattedFields: any[] = [];\n\n    for (const field of this.docDef.getAllFields()) {\n      if (!field.isParentField()) {\n        continue;\n      }\n      const displayName = (field == null) ? '' : field.getFieldLabel(ConfigModel.getConfig().showTypes, true);\n      const formattedField: any = { 'field': field, 'displayName': displayName };\n      if (filter == null || filter === ''\n        || formattedField['displayName'].toLowerCase().indexOf(filter.toLowerCase()) !== -1) {\n        formattedFields.push(formattedField);\n      }\n      if (formattedFields.length > 9) {\n        break;\n      }\n    }\n    return formattedFields;\n  }\n\n  getField(): Field {\n    this.field.displayName = this.field.name;\n    this.field.parentField = this.parentField;\n    this.field.type = this.valueType;\n    this.field.userCreated = true;\n    this.field.serviceObject.jsonType = 'io.atlasmap.json.v2.JsonField';\n    if (this.docDef.type === DocumentType.XML) {\n      this.field.isAttribute = (this.fieldType === 'attribute');\n      this.field.namespaceAlias = this.namespaceAlias;\n      const unqualifiedNS: NamespaceModel = NamespaceModel.getUnqualifiedNamespace();\n      if (this.namespaceAlias === unqualifiedNS.alias) {\n        this.field.namespaceAlias = null;\n      }\n      this.field.serviceObject.jsonType = 'io.atlasmap.xml.v2.XmlField';\n    }\n    return this.field;\n  }\n\n  isDataValid(): boolean {\n    return ConfigModel.getConfig().errorService.isRequiredFieldValid(this.field.name, 'Name');\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n}\n\n    \n\n    \n        \n\n  {{ model['field'].docDef.name }}\n  {{ model['field'].path }}\n\n\n\n  \n    Parent\n    \n  \n  \n    Name\n    \n  \n  \n    Namespace\n    \n      \n        {{ ns.getPrettyLabel() }}\n      \n    \n  \n  \n    Field Type\n    \n      Element\n      Attribute\n    \n  \n  \n    Value Type\n    \n      Boolean\n      Byte\n      ByteArray\n      Char\n      Complex\n      Decimal\n      Double\n      Float\n      Integer\n      Long\n      Short\n      String\n      Time\n      Date\n      DateTime\n      DateTZ\n      TimeTZ\n      DateTimeTZ\n      Unsigned Byte\n      Unsigned Integer\n      Unsigned Long\n      Unsigned Short\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ model[\\'field\\'].docDef.name }}  {{ model[\\'field\\'].path }}      Parent            Name            Namespace                  {{ ns.getPrettyLabel() }}                  Field Type          Element      Attribute            Value Type          Boolean      Byte      ByteArray      Char      Complex      Decimal      Double      Float      Integer      Long      Short      String      Time      Date      DateTime      DateTZ      TimeTZ      DateTimeTZ      Unsigned Byte      Unsigned Integer      Unsigned Long      Unsigned Short      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'FieldEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldNode.html":{"url":"classes/FieldNode.html","title":"class - FieldNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ExpressionNode\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                field\n                            \n                            \n                                    Static\n                                    Readonly\n                                PREFIX\n                            \n                            \n                                    Protected\n                                    Static\n                                sequence\n                            \n                            \n                                    Protected\n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toHTML\n                            \n                            \n                                toText\n                            \n                            \n                                getUuid\n                            \n                            \n                                    Abstract\n                                toHTML\n                            \n                            \n                                    Abstract\n                                toText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapping: MappingModel, field?: MappedField, index?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        MappingModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        MappedField\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        index\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappedField\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PREFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'expression-field-'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            sequence\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                            \n                                \n                                    Inherited from         ExpressionNode\n\n                                \n                            \n                        \n                            \n                                    Defined in         ExpressionNode:27\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            uuid\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         ExpressionNode\n\n                                \n                            \n                        \n                            \n                                    Defined in         ExpressionNode:28\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \ntoHTML()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \ntoText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetUuid()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toHTML()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toText()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { MappedField, MappingModel } from './mapping.model';\nimport { Subject } from 'rxjs';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from './error.model';\n\nexport class ExpressionUpdatedEvent {\n  constructor(public node?: ExpressionNode, public offset?: number) {}\n}\n\nexport abstract class ExpressionNode {\n  protected static sequence = 0;\n  protected uuid;\n\n  constructor(prefix: string) {\n    this.uuid = prefix + ExpressionNode.sequence++;\n  }\n\n  getUuid() {\n    return this.uuid;\n  }\n\n  abstract toText(): string;\n  abstract toHTML(): string;\n}\n\nexport class TextNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-text-';\n\n  constructor(public str: string) {\n    super(TextNode.PREFIX);\n  }\n\n  toText(): string {\n    return this.str;\n  }\n\n  toHTML(): string {\n    return `${this.str.replace(/ /g, '&nbsp;')}`;\n  }\n\n}\n\nexport class FieldNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-field-';\n\n  constructor(private mapping: MappingModel, public field?: MappedField, private index?: number) {\n    super(FieldNode.PREFIX);\n    if (!field) {\n      this.field = mapping.getMappedFieldForIndex((index + 1).toString(), true);\n    }\n  }\n\n  toText(): string {\n    return '${' + (this.mapping.getIndexForMappedField(this.field) - 1) + '}';\n  }\n\n  toHTML(): string {\n    if (this.field && this.field.field) {\n      return `${this.field.field.name}`;\n    } else {\n      return `N/A`;\n    }\n  }\n\n}\n\nexport class ExpressionModel {\n  expressionUpdatedSource = new Subject();\n  expressionUpdated$ = this.expressionUpdatedSource.asObservable();\n\n  private _nodes: ExpressionNode[] = [];\n  private textCache = '';\n  private htmlCache = '';\n\n  constructor(private mapping: MappingModel, private cfg: ConfigModel) {}\n\n  generateInitialExpression() {\n    this.mapping.getUserMappedFields(true).forEach(f => this.appendFieldNode(f));\n  }\n\n  get nodes(): ReadonlyArray {\n    return this._nodes;\n  }\n\n  getLastNodeIndex() {\n    return this._nodes.length - 1;\n  }\n\n  getLastNode() {\n    return this._nodes[this.getLastNodeIndex()];\n  }\n\n  getNode(nodeId?: string): any {\n    if (!nodeId) {\n      return this.getLastNode();\n    }\n    return this._nodes.find(n => n.getUuid() === nodeId);\n  }\n\n  setConfigModel(cfg: ConfigModel) {\n    this.cfg = cfg;\n  }\n\n  /**\n   * Clear all text from the specified TextNode offset range or from the '@' to the end\n   * of the text node if no node ID is specified.\n   *\n   * Return the new UUID position indicator string or null.\n   *\n   * @param nodeId\n   * @param startOffset\n   * @param endOffset\n   */\n  clearText(nodeId?: string, startOffset?: number, endOffset?: number): TextNode {\n    let targetNode: TextNode;\n    let targetNodeIndex = 0;\n    if (!nodeId) {\n      const lastNode = this.getLastNode();\n      if (!(lastNode instanceof TextNode)) {\n        return null;\n      }\n      const keyPos = lastNode.str.indexOf('@');\n      if (keyPos !== -1) {\n        targetNodeIndex = this._nodes.indexOf(lastNode);\n        targetNode = lastNode;\n        targetNode.str = targetNode.str.substring(0, keyPos);\n      }\n    } else {\n      const node = this._nodes.find(n => n.getUuid() === nodeId);\n      if (!(node instanceof TextNode) || !endOffset) {\n        return null;\n      }\n      targetNode = node;\n      targetNodeIndex = this._nodes.indexOf(targetNode);\n      const cleanStr = targetNode.str.replace(targetNode.str.substring(startOffset, endOffset), '');\n      targetNode.str = cleanStr;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n    return targetNode;\n  }\n\n  /**\n   * Insert text into expression at specified position. If nodeId is not specified,\n   * it will be added to the end of expression. It parses the string\n   * and insert a set of TextNode & FieldNode if it contains field reference like ${0},\n   * otherwise just one TextNode.\n   * This emits ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   * @param str string to insert\n   * @param nodeId target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertText(str: string, nodeId?: string, offset?: number) {\n    this.insertNodes(this.createNodesFromText(str), nodeId, offset);\n  }\n\n  /**\n   * Insert an array of ExpressionNodes at the specified position. If insertPosition is\n   * not specified the nodes will be appended to the end of the expression.\n   * This emits an ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   *\n   * @param newNodes an array of ExpressionNode to add\n   * @param insertPosition target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertNodes(newNodes: ExpressionNode[], insertPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!insertPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        this._nodes.push(...newNodes);\n      } else if (last instanceof TextNode && newNodes[0] instanceof TextNode) {\n        const lastTextNode = last as TextNode;\n        (last as TextNode).str += (newNodes[0] as TextNode).str;\n        newNodes.splice(0, 1, last);\n        this._nodes.splice(this.getLastNodeIndex(), 1, ...newNodes);\n      } else if (last instanceof FieldNode && newNodes[0] instanceof FieldNode) {\n        this._nodes.splice(this.getLastNodeIndex(), 0, new TextNode(' + '), ...newNodes);\n      } else {\n        this._nodes.push(...newNodes);\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    const updatedEvent = new ExpressionUpdatedEvent();\n    const targetNode = this._nodes.find(n => n.getUuid() === insertPosition);\n    const targetNodeIndex = this._nodes.indexOf(targetNode);\n\n    if (targetNode instanceof TextNode) {\n      if (offset === undefined || offset === null || offset  0) {\n        if (newNodes[0] instanceof TextNode) {\n          targetNode.str = pre + (newNodes[0] as TextNode).str;\n          newNodes.splice(0, 1, targetNode);\n        } else {\n          targetNode.str = pre;\n          newNodes.splice(0, 0, targetNode);\n        }\n      }\n      if (post.length > 0) {\n        const lastNewNodeIndex = newNodes.length - 1;\n        if (newNodes[lastNewNodeIndex] instanceof TextNode) {\n          let mergedTextNode: TextNode;\n          if (pre.length > 0) {\n            mergedTextNode = newNodes[lastNewNodeIndex] as TextNode;\n            mergedTextNode.str += post;\n          } else {\n            mergedTextNode = targetNode;\n            mergedTextNode.str = (newNodes[lastNewNodeIndex]as TextNode).str + post;\n          }\n          newNodes.splice(lastNewNodeIndex, 1, mergedTextNode);\n        } else {\n          if (pre.length > 0) {\n            newNodes.push(new TextNode(post));\n          } else {\n            targetNode.str = post;\n            newNodes.push(targetNode);\n          }\n        }\n      }\n      this._nodes.splice(targetNodeIndex, 1, ...newNodes);\n      const lastAddedIndex = targetNodeIndex + newNodes.length - 1;\n      if (this._nodes[lastAddedIndex] instanceof FieldNode\n          && this.nodes[lastAddedIndex + 1] instanceof FieldNode) {\n        // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n        const space = new TextNode(' + ');\n        this._nodes.splice(lastAddedIndex + 1, 0, space);\n        updatedEvent.node = space;\n        updatedEvent.offset = 1;\n      } else if (this._nodes[lastAddedIndex] instanceof FieldNode) {\n        updatedEvent.node = this._nodes[lastAddedIndex + 1];\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = this._nodes[lastAddedIndex];\n        updatedEvent.offset = (this._nodes[lastAddedIndex] as TextNode).str.length - post.length;\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next(updatedEvent);\n      return;\n    }\n\n    // targetNode is a FieldNode - insert the text before it if offset is 0, otherwise after it\n    if (offset !== 0 && newNodes[0] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      newNodes.splice(0, 0, new TextNode(' + '));\n    }\n    const nextNodeIndex = offset === 0 ? targetNodeIndex : targetNodeIndex + 1;\n    const nextNode = this._nodes[nextNodeIndex];\n    if (nextNode instanceof TextNode && newNodes[newNodes.length - 1] instanceof TextNode) {\n      updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      nextNode.str = (newNodes[newNodes.length - 1] as TextNode).str + (nextNode as TextNode).str;\n      newNodes.pop();\n      this._nodes.splice(nextNodeIndex, 1, ...newNodes);\n      updatedEvent.node = nextNode;\n    } else if (nextNode instanceof FieldNode && newNodes[newNodes.length - 1] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      const space = new TextNode(' + ');\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes, space);\n      updatedEvent.node = space;\n      updatedEvent.offset = 1;\n    } else {\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes);\n      if (nextNode instanceof TextNode) {\n        updatedEvent.node = nextNode;\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = newNodes[newNodes.length - 1];\n        updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  removeToken(lastFieldRefRemoved: (removed: MappedField) => void, tokenPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!tokenPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        return;\n      }\n      if (last instanceof FieldNode) {\n        const removed = this._nodes.pop() as FieldNode;\n        if (!this._nodes.find(n => n instanceof FieldNode && n.field === removed.field)) {\n          lastFieldRefRemoved(removed.field);\n        }\n      } else if (last instanceof TextNode) {\n        if (last.str.length > 0) {\n          last.str = last.str.substring(0, last.str.length - 1);\n        } else {\n          this._nodes.pop();\n        }\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    let updatedEvent = new ExpressionUpdatedEvent();\n    let targetNode = this._nodes.find(n => n.getUuid() === tokenPosition);\n    let targetNodeIndex = this._nodes.indexOf(targetNode);\n    if (!targetNode || offset === -1) {\n      if (targetNodeIndex  n instanceof FieldNode && n.field === targetFieldNode.field)) {\n        lastFieldRefRemoved(targetFieldNode.field);\n      }\n      if (this._nodes.length > targetNodeIndex) {\n        if (this._nodes[targetNodeIndex - 1] instanceof TextNode\n            && this._nodes[targetNodeIndex] instanceof TextNode) {\n          const newOffset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n          (this._nodes[targetNodeIndex - 1] as TextNode).str\n              += (this._nodes[targetNodeIndex] as TextNode).str;\n          this._nodes.splice(targetNodeIndex, 1);\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = newOffset;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof FieldNode\n            && this._nodes[targetNodeIndex] instanceof FieldNode) {\n          const glue = new TextNode(' + ');\n          this._nodes.splice(targetNodeIndex, 0, glue);\n          updatedEvent.node = glue;\n          updatedEvent.offset = 3;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n        } else if (this._nodes[targetNodeIndex] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex];\n          updatedEvent.offset = 0;\n        }\n      } else {\n        // end of line\n        updatedEvent = undefined;\n      }\n    } else {\n      const targetString = (targetNode as TextNode).str;\n      (targetNode as TextNode).str = offset === 0 ? targetString.substr(1)\n        : targetString.substring(0, offset) + targetString.substring(offset + 1);\n      if ((targetNode as TextNode).str.length === 0) {\n        this.cfg.errorService.addError(new ErrorInfo({message: 'At least one space is required between field references.',\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.USER, mapping: this.mapping}));\n        return;\n      }\n      updatedEvent.node = targetNode;\n      updatedEvent.offset = offset;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  /**\n   * Replace the content of the last text node with a substring terminating at the\n   * specified index.\n   *\n   * @param index\n   */\n  clearToEnd(index: number): void {\n    const last = this.getLastNode();\n    if (!(last instanceof TextNode)) {\n      return;\n    }\n    last.str = last.str.substring(0, index);\n  }\n\n  /**\n   * Reflect mapped source fields to the field references in the expression.\n   * Selected source fields are inserted into or appended to the expression,\n   * and unselected source fields are removed from expression.\n   *\n   * @param mapping Corresponding MappingModel object\n   */\n  updateFieldReference(mapping: MappingModel, insertPosition?: string, offset?: number) {\n    const mappedFields = mapping.getUserMappedFields(true);\n    const toAdd: MappedField[] = [];\n    const toRemove: MappedField[] = [];\n    let fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n\n    // Remove the field from the expression if unmapped.\n    for (const node of fieldNodes) {\n      if (mappedFields.includes(node.field)) {\n        continue;\n      }\n      const index = this._nodes.indexOf(node);\n      this._nodes.splice(index, 1);\n      if (this._nodes.length > index && this._nodes[index - 1] instanceof TextNode\n          && this._nodes[index] instanceof TextNode) {\n        (this._nodes[index - 1] as TextNode).str += (this._nodes[index] as TextNode).str;\n        this._nodes.splice(index, 1);\n      }\n    }\n\n    // Add the specified field into the expression - append if no insert position is specified.\n    fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n    for (const mfield of mappedFields) {\n      if (!fieldNodes.find(n => n.field === mfield)) {\n        if (insertPosition) {\n          this.insertNodes([new FieldNode(this.mapping, mfield)], insertPosition, offset);\n        } else {\n          this.appendFieldNode(mfield);\n        }\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  clear() {\n    this._nodes = [];\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  toText() {\n    return this.textCache;\n  }\n\n  toHTML() {\n    return this.htmlCache;\n  }\n\n  private updateCache() {\n    let answer = '';\n    this._nodes.forEach(node => answer += node.toText());\n    this.textCache = answer;\n    answer = '';\n    this._nodes.forEach(node => answer += node.toHTML());\n    this.htmlCache = answer;\n  }\n\n  private createNodesFromText(text: string): ExpressionNode[] {\n    const answer = [];\n    let position = -1;\n    let fn = null;\n\n    while ((position = text.search(/\\$\\{[0-9]+\\}/)) !== -1 ) {\n      if (position !== 0) {\n        answer.push(new TextNode(text.substring(0, position)));\n      }\n      const index = parseInt(text.substring(position + 2, text.indexOf('}')), 10);\n      fn = new FieldNode(this.mapping, null, index);\n      if (fn.field === null) {\n        this.cfg.errorService.addError(new ErrorInfo({message: `Unable to map expression index \"${index}\" to field node.`,\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.INTERNAL, mapping: this.mapping}));\n      } else {\n        answer.push(fn);\n      }\n      text = text.substring(text.indexOf('}') + 1);\n    }\n    if (text.length > 0) {\n      answer.push(new TextNode(text));\n    }\n    return answer;\n  }\n\n  private appendFieldNode(mfield: MappedField) {\n    const lastNode = this._nodes.pop();\n    if (lastNode instanceof FieldNode) {\n        this._nodes.push(lastNode, new TextNode(' + '));\n    } else if (lastNode instanceof TextNode) {\n      if (lastNode.str.length === 0) {\n        this._nodes.push(new TextNode(' + '));\n      } else {\n        this._nodes.push(lastNode);\n      }\n    }\n    this._nodes.push(new FieldNode(this.mapping, mfield));\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileManagementService.html":{"url":"injectables/FileManagementService.html","title":"injectable - FileManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/file-management.service.ts\n        \n\n            \n                Description\n            \n            \n                Handles file manipulation stored in the backend, including import/export via UI.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _cfg\n                            \n                            \n                                    Private\n                                headers\n                            \n                            \n                                    Private\n                                jsonBuffer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportMappingsCatalog\n                            \n                            \n                                findMappingFiles\n                            \n                            \n                                getCurrentADMCatalog\n                            \n                            \n                                getCurrentMappingCatalog\n                            \n                            \n                                    Private\n                                getCurrentMappingJson\n                            \n                            \n                                    Private\n                                    Async\n                                getJsonBuf\n                            \n                            \n                                    Private\n                                getMappingId\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Async\n                                importADMCatalog\n                            \n                            \n                                resetLibs\n                            \n                            \n                                resetMappings\n                            \n                            \n                                setBinaryFileToService\n                            \n                            \n                                setMappingToService\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    cfg\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: NGXLogger, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            exportMappingsCatalog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exportMappingsCatalog(mappingsFileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:235\n                \n            \n\n\n            \n                \n                    Update the current mapping files and export the current mappings catalog (ADM).\nEstablish the file content in JSON format (mappings + schema + instance-schema), compress\nit (GZIP), update the runtime, then fetch the full ADM catalog ZIP file from the runtime\nand export it.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappingsFileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findMappingFiles\n                        \n                        \n                    \n                \n            \n            \n                \nfindMappingFiles(filter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentADMCatalog\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentADMCatalog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentMappingCatalog\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentMappingCatalog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:82\n                \n            \n\n\n            \n                \n                    Retrieve the current user data mappings catalog from the server as a GZIP compressed byte array buffer.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCurrentMappingJson\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentMappingJson()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:413\n                \n            \n\n\n            \n                \n                    Retrieve the current user AtlasMap data mappings from the server as an JSON buffer.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getJsonBuf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getJsonBuf()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:386\n                \n            \n\n\n            \n                \n                    Asynchronously retrieve the current user-defined AtlasMap mappings from the runtime server as an JSON buffer.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getMappingId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMappingId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:448\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(message: string, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:452\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            importADMCatalog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    importADMCatalog(mappingsFileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:340\n                \n            \n\n\n            \n                \n                    Perform a binary read of the specified catalog (.ADM) file and push it to the runtime.  The ADM file is\nin (ZIP) file format.  Once pushed, we can retrieve from runtime the extracted compressed (GZIP) mappings\nfile catalog as well as the mappings JSON file.  These files exist separately for performance reasons.\nOnce the runtime has its ADM catalog, catalog files and mappings file set then restart the DM.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    mappingsFileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nADM master ZIP catalog\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetLibs\n                        \n                        \n                    \n                \n            \n            \n                \nresetLibs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:160\n                \n            \n\n\n            \n                \n                    Establish an observable function to delete user-defined JAR library files on the runtime.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetMappings\n                        \n                        \n                    \n                \n            \n            \n                \nresetMappings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:139\n                \n            \n\n\n            \n                \n                    Establish an observable function to delete mapping files on the runtime.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBinaryFileToService\n                        \n                        \n                    \n                \n            \n            \n                \nsetBinaryFileToService(compressedBuffer: any, url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:208\n                \n            \n\n\n            \n                \n                    The user has either exported their mappings or imported new mappings.  Either way we're saving them on the server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    compressedBuffer\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMappingToService\n                        \n                        \n                    \n                \n            \n            \n                \nsetMappingToService(jsonBuffer: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:184\n                \n            \n\n\n            \n                \n                    Commit the specified AtlasMapping JSON user mapping string to the runtime service.  The mappings\nare kept separate so they can be updated with minimal overhead.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    jsonBuffer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new HttpHeaders(\n    {'Content-Type': 'application/json; application/octet-stream',\n     'Accept':       'application/json; application/octet-stream'})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            jsonBuffer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:39\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n\n                \n                    \n                        getcfg()\n                    \n                \n                            \n                                \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:43\n                                \n                            \n\n                \n                    \n                        setcfg(cfg)\n                    \n                \n                            \n                                \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:47\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            cfg\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ConfigModel } from '../models/config.model';\nimport { NGXLogger } from 'ngx-logger';\nimport { deflate } from 'pako';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, forkJoin } from 'rxjs';\nimport { DataMapperUtil } from '../common/data-mapper-util';\nimport { map, timeout } from 'rxjs/operators';\nimport { DocumentManagementService } from './document-management.service';\nimport { InspectionType } from '../common/config.types';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from '../models/error.model';\n\n/**\n * Handles file manipulation stored in the backend, including import/export via UI.\n */\n@Injectable()\nexport class FileManagementService {\n  _cfg: ConfigModel;\n\n  private headers = new HttpHeaders(\n    {'Content-Type': 'application/json; application/octet-stream',\n     'Accept':       'application/json; application/octet-stream'});\n  private jsonBuffer: string;\n\n  constructor(private logger: NGXLogger, private http: HttpClient) {}\n\n  get cfg() {\n    return this._cfg;\n  }\n\n  set cfg(cfg: ConfigModel) {\n    this._cfg = cfg;\n    if (!this._cfg.logger) {\n      this._cfg.logger = this.logger;\n    }\n  }\n\n  findMappingFiles(filter: string): Observable {\n    return new Observable((observer: any) => {\n      const url = this.cfg.initCfg.baseMappingServiceUrl + 'mappings' + (filter == null ? '' : '?filter=' + filter);\n      this.cfg.logger.trace('Mapping List Request');\n      this.http.get(url, { headers: this.headers }).toPromise().then((body: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping List Response: ${JSON.stringify(body)}`);\n        }\n        const entries: any[] = body.StringMap.stringMapEntry;\n        const mappingFileNames: string[] = [];\n        for (const entry of entries) {\n          mappingFileNames.push(entry.name);\n        }\n        observer.next(mappingFileNames);\n        observer.complete();\n      }).catch((error: any) => {\n        if (error.status !== DataMapperUtil.HTTP_STATUS_NO_CONTENT) {\n          this.handleError('Error occurred while accessing the current mapping files from the runtime service.', error);\n          observer.error(error);\n        }\n        observer.complete();\n      });\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n  /**\n   * Retrieve the current user data mappings catalog from the server as a GZIP compressed byte array buffer.\n   */\n  getCurrentMappingCatalog(): Observable {\n    const catalogName = 'adm-catalog-files.gz';\n    return new Observable((observer: any) => {\n      const baseURL: string = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/GZ/';\n      const url: string = baseURL + catalogName;\n      this.cfg.logger.trace('Mapping Catalog Request');\n      const catHeaders = new HttpHeaders(\n        { 'Content-Type':  'application/octet-stream',\n          'Accept':        'application/octet-stream',\n          'Response-Type': 'application/octet-stream'\n        });\n      this.http.get(url, { headers: catHeaders, responseType: 'arraybuffer' }).toPromise().then((body: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping Catalog Response: ${JSON.stringify(body)}`);\n        }\n        observer.next(body);\n        observer.complete();\n      }).catch((error: any) => {\n        if (error.status !== DataMapperUtil.HTTP_STATUS_NO_CONTENT) {\n          this.handleError('Error occurred while accessing the current mappings catalog from the runtime service.', error);\n          observer.error(error);\n        }\n        observer.complete();\n      });\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n  getCurrentADMCatalog(): Observable {\n    const atlasmapCatalogName = 'atlasmap-catalog.adm';\n    return new Observable((observer: any) => {\n      const baseURL: string = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/ZIP/';\n      const url: string = baseURL + atlasmapCatalogName;\n      this.cfg.logger.trace('Mapping Catalog Request');\n      const catHeaders = new HttpHeaders(\n        { 'Content-Type':  'application/octet-stream',\n          'Accept':        'application/octet-stream',\n          'Response-Type': 'application/octet-stream'\n        });\n      this.http.get(url, { headers: catHeaders, responseType: 'arraybuffer' }).toPromise().then((body: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping Catalog Response: ${JSON.stringify(body)}`);\n        }\n        observer.next(body);\n        observer.complete();\n      }).catch((error: any) => {\n        if (error.status !== DataMapperUtil.HTTP_STATUS_NO_CONTENT) {\n          this.handleError('Error occurred while accessing the ADM catalog from the runtime service.', error);\n          observer.error(error);\n        }\n        observer.complete();\n      });\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n  /**\n   * Establish an observable function to delete mapping files on the runtime.\n   */\n  resetMappings(): Observable {\n    return new Observable((observer: any) => {\n      const url = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/RESET';\n      this.cfg.logger.trace('Mapping Service Request - Reset');\n      this.http.delete(url, { headers: this.headers }).toPromise().then((res: any) => {\n          if (this.cfg.isTraceEnabled()) {\n            this.cfg.logger.trace(`Mapping Service Response - Reset: ${JSON.stringify(res)}`);\n          }\n          observer.next(true);\n          observer.complete();\n          return res;\n        })\n        .catch((error: any) => {\n          this.handleError('Error occurred while resetting mappings.', error); },\n      );\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n  /**\n   * Establish an observable function to delete user-defined JAR library files on the runtime.\n   */\n  resetLibs(): Observable {\n    return new Observable((observer: any) => {\n      const url = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/resetLibs';\n      this.cfg.logger.trace('Mapping Service Request - Reset User-Defined Libraries');\n      this.http.delete(url, { headers: this.headers }).toPromise().then((res: any) => {\n          if (this.cfg.isTraceEnabled()) {\n            this.cfg.logger.trace(`Mapping Service Response - Reset Libs: ${JSON.stringify(res)}`);\n          }\n          observer.next(true);\n          observer.complete();\n          return res;\n        })\n        .catch((error: any) => {\n          this.handleError('Error occurred while resetting user-defined JAR libraries.', error); },\n      );\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n /**\n  * Commit the specified AtlasMapping JSON user mapping string to the runtime service.  The mappings\n  * are kept separate so they can be updated with minimal overhead.\n  *\n  * @param buffer - JSON content\n  */\n  setMappingToService(jsonBuffer: string): Observable {\n    return new Observable((observer: any) => {\n      const url = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/JSON/' + this.getMappingId();\n      this.cfg.logger.trace('Mapping Service Request');\n      this.http.put(url, jsonBuffer, { headers: this.headers }).toPromise().then((res: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping Service Response: ${JSON.stringify(res)}`);\n        }\n        observer.next(true);\n        observer.complete();\n      })\n      .catch((error: any) => {\n        this.handleError('Error occurred while establishing mappings from an imported JSON.', error);\n        observer.error(error);\n        observer.complete();\n      });\n    });\n  }\n\n  /**\n   * The user has either exported their mappings or imported new mappings.  Either way we're saving them on the server.\n   *\n   * @param compressedBuffer\n   */\n   setBinaryFileToService(compressedBuffer: any, url: string): Observable {\n     return new Observable((observer: any) => {\n       this.cfg.logger.trace('Set Compressed Mapping Service Request');\n       this.http.put(url, compressedBuffer, { headers: this.headers }).toPromise().then((res: any) => {\n          if (this.cfg.isTraceEnabled()) {\n            this.cfg.logger.trace(`Set Compressed Mapping Service Response: ${JSON.stringify(res)}`);\n          }\n          observer.next(true);\n          observer.complete();\n       })\n      .catch((error: any) => {\n        this.handleError('Error occurred while saving mapping.', error);\n        observer.error(error);\n        observer.complete();\n      });\n    });\n   }\n\n  /**\n   * Update the current mapping files and export the current mappings catalog (ADM).\n   *\n   * Establish the file content in JSON format (mappings + schema + instance-schema), compress\n   * it (GZIP), update the runtime, then fetch the full ADM catalog ZIP file from the runtime\n   * and export it.\n   *\n   * @param event\n   */\n  async exportMappingsCatalog(mappingsFileName: string): Promise {\n    return new Promise(async(resolve, reject) => {\n      let aggregateBuffer = '   {\\n';\n      let userExport = true;\n\n      try {\n        if (mappingsFileName === null || mappingsFileName.length === 0) {\n          mappingsFileName = 'atlasmap-mapping.adm';\n          userExport = false;\n        }\n\n        // Retrieve the JSON mappings buffer from the server.\n        if (await this.getJsonBuf()) {\n          aggregateBuffer += DocumentManagementService.generateExportMappings(this.jsonBuffer[0]);\n        }\n\n        let exportMeta = '   \"exportMeta\": [\\n';\n        let exportBlockData = '      \"exportBlockData\": [\\n';\n        let docCount = 0;\n\n        // Establish two string arrays:\n        //   exportMeta - meta-data describing the instance or schema documents.\n        //   exportBlockData - the actual source of the instance/schema/mappings documents or the Java class name.\n        for (const doc of this.cfg.getAllDocs()) {\n          if (doc.inspectionSource !== null &&\n               (doc.inspectionType === InspectionType.INSTANCE) || (doc.inspectionType === InspectionType.SCHEMA) ||\n                 (doc.inspectionType === InspectionType.JAVA_CLASS) ) {\n            if (docCount > 0) {\n              exportMeta += ',\\n';\n              exportBlockData += ',\\n';\n            }\n            exportMeta += DocumentManagementService.generateExportMetaStr(doc);\n            exportBlockData += DocumentManagementService.generateExportBlockData(doc.inspectionSource);\n            docCount++;\n          }\n        }\n        exportMeta += '   ],\\n';\n        exportBlockData += '   ]\\n';\n        aggregateBuffer += exportMeta;\n        aggregateBuffer += exportBlockData;\n        aggregateBuffer += '   }\\n';\n\n        // Compress the JSON buffer - write out as binary.\n        const binBuffer = DataMapperUtil.str2bytes(aggregateBuffer);\n        try {\n          const compress = deflate(binBuffer, {gzip: true});\n          let fileContent: Blob = new Blob([compress], {type: 'application/octet-stream'});\n\n          // Save the model mappings to the runtime.\n          this.setBinaryFileToService(fileContent,\n            this.cfg.initCfg.baseMappingServiceUrl + 'mapping/GZ/' + this.getMappingId()).toPromise()\n            .then(async(result: boolean) => {\n\n            // Fetch the full ADM catalog file from the runtime (ZIP) and export it to to the local\n            // downloads area.\n            if (userExport) {\n\n              this.getCurrentADMCatalog().subscribe( async(value: Uint8Array) => {\n\n                // If value is null then no compressed mappings catalog is available on the server.\n                if (value !== null) {\n                  fileContent = new Blob([value], {type: 'application/octet-stream'});\n                  if (!await DataMapperUtil.writeFile(fileContent, mappingsFileName)) {\n                    this.cfg.errorService.addError(new ErrorInfo({message: 'Unable to save the current data mappings.',\n                      level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL}));\n                  }\n                }\n                resolve(true);\n              });\n            }\n            resolve(true);\n          }).catch((error: any) => {\n            if (error.status === 0) {\n              this.cfg.errorService.addError(new ErrorInfo({\n                message: 'Fatal network error: Unable to connect to the AtlasMap design runtime service.',\n                level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n            } else {\n              this.cfg.errorService.addError(new ErrorInfo({\n                message: `Unable to update the catalog mappings file to the AtlasMap design runtime service.\n                  ${error.status} ${error.statusText}`,\n                level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n            }\n          });\n        } catch (error1) {\n          this.cfg.errorService.addError(new ErrorInfo({message: 'Unable to compress the current data mappings.',\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error1}));\n          return;\n        }\n      } catch (error) {\n        this.cfg.errorService.addError(new ErrorInfo({message: 'Unable to export the current data mappings.',\n          level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        return;\n      }\n    });\n  }\n\n  /**\n   * Perform a binary read of the specified catalog (.ADM) file and push it to the runtime.  The ADM file is\n   * in (ZIP) file format.  Once pushed, we can retrieve from runtime the extracted compressed (GZIP) mappings\n   * file catalog as well as the mappings JSON file.  These files exist separately for performance reasons.\n   *\n   * Once the runtime has its ADM catalog, catalog files and mappings file set then restart the DM.\n   *\n   * @param mappingsFileName - ADM master ZIP catalog\n   */\n  async importADMCatalog(mappingsFileName: string): Promise {\n    return new Promise(async(resolve, reject) => {\n      let fileBin = null;\n      const reader = new FileReader();\n\n      // Turn the imported ADM file into a binary octet stream.\n      try {\n        fileBin = await DataMapperUtil.readBinaryFile(mappingsFileName, reader);\n      } catch (error) {\n        this.cfg.errorService.addError(new ErrorInfo({message: `Unable to import the specified catalog file \\'${mappingsFileName}\\'`,\n          level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        return;\n      }\n      const fileContent: Blob = new Blob([fileBin], {type: 'application/octet-stream'});\n\n      // Push the binary stream to the runtime.\n      this.setBinaryFileToService(fileContent, this.cfg.initCfg.baseMappingServiceUrl +\n        'mapping/ZIP/' + this.getMappingId()).toPromise().then( async(result: boolean) => {\n\n        try {\n          this.cfg.mappings = null;\n          this.cfg.clearDocs();\n          await this.cfg.initializationService.initialize();\n        } catch (error) {\n          this.cfg.errorService.addError(new ErrorInfo({message: `Unable to import the catalog file: ${mappingsFileName} ${error.message}`,\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n          return;\n        }\n      }).catch((error: any) => {\n        if (error.status === 0) {\n          this.cfg.errorService.addError(new ErrorInfo({\n            message: 'Fatal network error: Unable to connect to the AtlasMap design runtime service.',\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        } else {\n          this.cfg.errorService.addError(new ErrorInfo({\n            message: `Unable to send the ADM file to the runtime service.  ${error.status} ${error.statusText}`,\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        }\n      });\n      resolve(true);\n    });\n  }\n\n  /**\n   * Asynchronously retrieve the current user-defined AtlasMap mappings from the runtime server as an JSON buffer.\n   */\n  private async getJsonBuf(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this.cfg.mappings === null) {\n        resolve(false);\n      }\n      this.cfg.mappingFiles[0] = this.cfg.mappings.name;\n      this.getCurrentMappingJson().toPromise().then((result: string) => {\n        this.jsonBuffer = result;\n        resolve(true);\n      }).catch((error: any) => {\n        if (error.status === 0) {\n          this.cfg.errorService.addError(new ErrorInfo({\n            message: 'Fatal network error: Unable to connect to the AtlasMap design runtime service.',\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        } else {\n          this.cfg.errorService.addError(new ErrorInfo({\n            message: `Unable to access current mapping definitions: ${error.status} ${error.statusText}`,\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        }\n        resolve(false);\n      });\n    });\n  }\n\n  /**\n   * Retrieve the current user AtlasMap data mappings from the server as an JSON buffer.\n   */\n  private getCurrentMappingJson(): Observable {\n    const mappingFileNames: string[] = this.cfg.mappingFiles;\n    return new Observable((observer: any) => {\n      const baseURL: string = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/JSON/';\n      const operations: Observable[] = [];\n      for (const mappingName of mappingFileNames) {\n        const url: string = baseURL + mappingName;\n        this.cfg.logger.trace('Mapping Service Request');\n        const jsonHeaders = new HttpHeaders(\n          { 'Content-Type':  'application/json',\n            'Accept':        'application/json',\n            'Response-Type': 'application/json'\n          });\n        const operation = this.http.get(url, { headers: jsonHeaders, responseType: 'text' }).pipe(map((res: any) => res ));\n        operations.push(operation);\n      }\n\n      forkJoin(operations).toPromise().then((data: string[]) => {\n        if (!data) {\n          observer.next('no data');\n          observer.complete();\n          return;\n        }\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping Service Response: ${JSON.stringify(data)}`);\n        }\n        observer.next(data);\n        observer.complete();\n      }).catch((error: any) => {\n        observer.error(error);\n        observer.complete();\n      });\n    });\n  }\n\n  private getMappingId(): string {\n    return (this.cfg.mappingFiles.length > 0) ? this.cfg.mappingFiles[0] : '0';\n  }\n\n  private handleError(message: string, error: any): void {\n    this.cfg.errorService.addError(new ErrorInfo({message: message, level: ErrorLevel.ERROR,\n      scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n    this.cfg.initCfg.initialized = true;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusDirective.html":{"url":"directives/FocusDirective.html","title":"directive - FocusDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FocusDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/common/focus.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterContentChecked\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [focus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hasFocus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentChecked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/common/focus.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        focus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/common/focus.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentChecked\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentChecked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/focus.directive.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hasFocus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/common/focus.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input, AfterContentChecked } from '@angular/core';\n\n@Directive({\n  selector: '[focus]'\n})\nexport class FocusDirective implements AfterContentChecked {\n\n  @Input() focus: boolean;\n  private hasFocus = false;\n\n  constructor(private elementRef: ElementRef) {\n  }\n\n  ngAfterContentChecked() {\n    if (this.focus && !this.hasFocus) {\n      this.elementRef.nativeElement.focus();\n      this.hasFocus = true;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LineModel.html":{"url":"classes/LineModel.html","title":"class - LineModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LineModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sourceX\n                            \n                            \n                                sourceY\n                            \n                            \n                                stroke\n                            \n                            \n                                style\n                            \n                            \n                                targetField\n                            \n                            \n                                targetX\n                            \n                            \n                                targetY\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stroke\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'url(#line-gradient-dormant)'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeStyle\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, Input, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { MappingModel } from '../../models/mapping.model';\nimport { Field } from '../../models/field.model';\n\nimport { DocumentDefinitionComponent } from '../document/document-definition.component';\nimport { DocumentFieldDetailComponent } from '../document/document-field-detail.component';\nimport { Subscription } from 'rxjs';\n\nexport class LineModel {\n  sourceX: string;\n  sourceY: string;\n  targetX: string;\n  targetY: string;\n  stroke = 'url(#line-gradient-dormant)';\n  style: SafeStyle;\n  targetField: Field;\n}\n\n@Component({\n  selector: 'line-machine',\n  templateUrl: './line-machine.component.html',\n})\n\nexport class LineMachineComponent implements OnInit, OnDestroy {\n  @Input() cfg: ConfigModel;\n  @Input() docDefInput: DocumentDefinitionComponent;\n  @Input() docDefOutput: DocumentDefinitionComponent;\n\n  lines: LineModel[] = [];\n  lineBeingFormed: LineModel;\n  drawingLine = false;\n  svgStyle: SafeStyle;\n\n  @ViewChild('lineMachineElement') lineMachineElement: ElementRef;\n\n  private yOffset = 3;\n  private lineRefreshSubscription: Subscription;\n\n  constructor(private sanitizer: DomSanitizer, public detector: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.lineRefreshSubscription = this.cfg.mappingService.lineRefresh$.subscribe(() => {\n      this.mappingChanged();\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.lineRefreshSubscription) {\n      this.lineRefreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Match the line geometry of a selected line to determine the matching line model array element.  Return\n   * the target field from that array element.\n   *\n   * @param selectedLineAttrs\n   */\n  private getTargetFieldFromLine(selectedLineAttrs: NamedNodeMap): Field {\n    for (const line of this.lines) {\n      if ((selectedLineAttrs[1].nodeValue === line.sourceX) &&\n          (selectedLineAttrs[2].nodeValue === line.sourceY) &&\n          (selectedLineAttrs[3].nodeValue === line.targetX) &&\n          (selectedLineAttrs[4].nodeValue === line.targetY)) {\n        return line.targetField;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * The user has selected between the panels.  This is likely a line - verify it and select the fields\n   * associated with the line.\n   *\n   * @param event\n   */\n  handleLineClick(event) {\n    const selectedElement = event.target;\n    if (selectedElement !== null && selectedElement.nodeName === 'line') {\n      const targetField: Field = this.getTargetFieldFromLine(selectedElement.attributes);\n      if (targetField != null) {\n        this.cfg.mappingService.fieldSelected(targetField, false);\n        setTimeout(() => {\n          this.redrawLinesForMappings();\n        }, 1);\n      }\n    }\n  }\n\n  addLineFromParams(sourceX: string, sourceY: string, targetX: string, targetY: string, stroke: string, targetField: Field): void {\n    const l: LineModel = new LineModel();\n    l.sourceX = sourceX;\n    l.sourceY = sourceY;\n    l.targetX = targetX;\n    l.targetY = targetY;\n    l.stroke = stroke;\n    l.targetField = targetField;\n    this.addLine(l);\n  }\n\n  addLine(l: LineModel): void {\n    this.createLineStyle(l);\n    this.lines.push(l);\n  }\n\n  setLineBeingFormed(l: LineModel): void {\n    if (l != null) {\n      this.createLineStyle(l);\n    }\n    this.lineBeingFormed = l;\n  }\n\n  clearLines(): void {\n    this.lines = [];\n    this.lineBeingFormed = null;\n    this.drawingLine = false;\n  }\n\n  drawLine(event: MouseEvent): void {\n    this.drawCurrentLine(event.offsetX.toString(), event.offsetY.toString());\n  }\n\n  drawCurrentLine(x: string, y: string): void {\n    if (this.drawingLine && this.lineBeingFormed) {\n      this.lineBeingFormed.targetX = x;\n      this.lineBeingFormed.targetY = y;\n    }\n  }\n\n  handleDocumentFieldMouseOver(component: DocumentFieldDetailComponent, event: any, isSource: boolean): void {\n    if (!this.drawingLine) {\n      return;\n    }\n    if (isSource) {\n      return;\n    }\n    const targetY = this.docDefOutput.getFieldDetailComponentPosition(component.field).y;\n    this.drawCurrentLine('100%', (targetY + this.yOffset).toString());\n  }\n\n  mappingChanged(): void {\n    this.drawingLine = false;\n    this.setLineBeingFormed(null);\n    this.redrawLinesForMappings();\n  }\n\n  redrawLinesForMappings(): void {\n    if (!this.cfg.initCfg.initialized || !this.cfg.mappings) {\n      this.clearLines();\n\n      // Clear any scroll deltas from the sources and targets panels.\n      if (this.docDefOutput) {\n        this.docDefInput.handleScroll(null);\n      }\n      if (this.docDefOutput) {\n        this.docDefOutput.handleScroll(null);\n      }\n      return;\n    }\n    if (!this.cfg.mappings.activeMapping) {\n      this.setLineBeingFormed(null);\n    }\n    this.clearLines();\n    if (!this.cfg.showMappedFields) {\n      return;\n    }\n    const mappings: MappingModel[] = this.cfg.mappings.mappings;\n    const activeMapping: MappingModel = this.cfg.mappings.activeMapping;\n    let foundSelectedMapping = false;\n    for (const m of mappings) {\n      foundSelectedMapping = foundSelectedMapping || (m === activeMapping);\n      this.drawLinesForMapping(m);\n    }\n    if (!foundSelectedMapping && activeMapping) {\n      this.drawLinesForMapping(activeMapping);\n    }\n    setTimeout(() => {\n      this.detector.detectChanges();\n    }, 10);\n  }\n\n  private createLineStyle(l: LineModel): void {\n    // angular2 will throw an error if we don't use this sanitizer to signal to angular2 that the css style value is ok.\n    l.style = this.sanitizer.bypassSecurityTrustStyle('stroke:' + l.stroke + '; stroke-width:4px;');\n  }\n\n  private drawLinesForMapping(m: MappingModel): void {\n    const el: any = this.lineMachineElement.nativeElement;\n    const lineMachineHeight: number = el.offsetHeight;\n\n    const isSelectedMapping: boolean = (this.cfg.mappings.activeMapping === m);\n    const stroke: string = 'url(#line-gradient-' + (isSelectedMapping ? 'active' : 'dormant') + ')';\n    if (!m.sourceFields.length || !m.targetFields.length) {\n      return;\n    }\n\n    for (const mappedInputField of m.sourceFields) {\n      const inputField: Field = mappedInputField.field;\n      if (!this.checkFieldEligibiltyForLineDrawing(inputField, 'input', m)) {\n        continue;\n      }\n\n      const inputFieldPos: any = this.getScreenPosForField(inputField, this.docDefInput);\n      if (inputFieldPos == null) {\n        continue;\n      }\n\n      let sourceY: number = inputFieldPos.y;\n      sourceY = (sourceY  (lineMachineHeight - 27)) ? (lineMachineHeight - 27) : sourceY;\n\n      for (const mappedOutputField of m.targetFields) {\n        const outputField: Field = mappedOutputField.field;\n        if (!this.checkFieldEligibiltyForLineDrawing(outputField, 'output', m)) {\n          continue;\n        }\n\n        const outputFieldPos: any = this.getScreenPosForField(outputField, this.docDefOutput);\n        if (outputFieldPos == null) {\n          continue;\n        }\n\n        let targetY: number = outputFieldPos.y;\n        targetY = (targetY  (lineMachineHeight - 27)) ? (lineMachineHeight - 27) : targetY;\n\n        if (isSelectedMapping || (this.cfg.showLinesAlways)) {\n          this.addLineFromParams('0', (sourceY + this.yOffset).toString(),\n            '100%', (targetY + this.yOffset).toString(), stroke, outputField);\n        }\n      }\n    }\n  }\n\n  private getScreenPosForField(field: Field, docDefComponent: DocumentDefinitionComponent): any {\n    if (field == null || field.docDef == null) {\n      return null;\n    }\n    if (!field.docDef.showFields) {\n      const pos: any = docDefComponent.getDocDefElementPosition(field.docDef);\n      if (pos) {\n        pos['y'] = pos['y'] + 5;\n      }\n      return pos;\n    }\n    let parentField: Field = field;\n    while (parentField != null) {\n      const fieldPos: any = docDefComponent.getFieldDetailComponentPosition(parentField);\n      if (fieldPos != null) {\n        return fieldPos;\n      }\n      parentField = parentField.parentField;\n    }\n    return null;\n  }\n\n  private checkFieldEligibiltyForLineDrawing(field: Field, description: string, m: MappingModel): boolean {\n    if (!field) {\n      return false;\n    }\n    if (!field.visibleInCurrentDocumentSearch) {\n      return false;\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LookupTable.html":{"url":"classes/LookupTable.html","title":"class - LookupTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LookupTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                name\n                            \n                            \n                                sourceIdentifier\n                            \n                            \n                                targetIdentifier\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEntryForSource\n                            \n                            \n                                getInputOutputKey\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:44\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LookupTableEntry[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceIdentifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetIdentifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:44\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEntryForSource\n                        \n                        \n                    \n                \n            \n            \n                \ngetEntryForSource(sourceValue: string, autocreate: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    autocreate\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LookupTableEntry\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInputOutputKey\n                        \n                        \n                    \n                \n            \n            \n                \ngetInputOutputKey()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class LookupTableEntry {\n  sourceValue: string;\n  sourceType = 'STRING';\n  targetValue: string;\n  targetType = 'STRING';\n\n  toJSON(): any {\n    return {\n      'sourceValue': this.sourceValue,\n      'sourceType': this.sourceType,\n      'targetValue': this.targetValue,\n      'targetType': this.targetType,\n    };\n  }\n\n  fromJSON(json: any): void {\n    this.sourceValue = json.sourceValue;\n    this.sourceType = json.sourceType;\n    this.targetValue = json.targetValue;\n    this.targetType = json.targetType;\n  }\n}\n\nexport class LookupTable {\n  name: string;\n  entries: LookupTableEntry[] = [];\n  sourceIdentifier: string;\n  targetIdentifier: string;\n\n  constructor() {\n    this.name = (new Date().getTime() + '-' + Math.floor(Math.random() * 1000000).toString());\n  }\n\n  getInputOutputKey(): string {\n    return this.sourceIdentifier + ':' + this.targetIdentifier;\n  }\n\n  getEntryForSource(sourceValue: string, autocreate: boolean): LookupTableEntry {\n    for (const entry of this.entries) {\n      if (entry.sourceValue === sourceValue) {\n        return entry;\n      }\n    }\n    if (autocreate) {\n      const entry: LookupTableEntry = new LookupTableEntry();\n      entry.sourceValue = sourceValue;\n      this.entries.push(entry);\n      return entry;\n    }\n    return null;\n  }\n\n  toString() {\n    let result: string = 'Lookup Table, name: ' + this.name + ', entries: ' + this.entries.length;\n    result += '\\n\\sourceIdentifier: ' + this.sourceIdentifier;\n    result += '\\n\\targetIdentifier: ' + this.targetIdentifier;\n    let counter = 0;\n    for (const entry of this.entries) {\n      result += '\\n\\tEntry #' + counter + ': ' + entry.sourceValue + ' => ' + entry.targetValue;\n      counter += 1;\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LookupTableComponent.html":{"url":"components/LookupTableComponent.html","title":"component - LookupTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LookupTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lookup-table\n            \n\n\n\n\n            \n                templateUrl\n                ./lookup-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                mapping\n                            \n                            \n                                outputSelects\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                saveTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(cfg: ConfigModel, mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveTable\n                        \n                        \n                    \n                \n            \n            \n                \nsaveTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LookupTableData[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            outputSelects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('outputSelect')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            table\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LookupTable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChildren, ElementRef, QueryList } from '@angular/core';\n\nimport { LookupTable, LookupTableEntry } from '../../models/lookup-table.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\nimport { MappingModel } from '../../models/mapping.model';\nimport { ModalWindowValidator } from '../modal/modal-window.component';\nimport { ErrorScope, ErrorType, ErrorInfo } from '../../models/error.model';\n\nexport class LookupTableData {\n  sourceEnumValue: string;\n  targetEnumValues: string[];\n  selectedTargetEnumValue: string;\n}\n\n@Component({\n  selector: 'lookup-table',\n  templateUrl: './lookup-table.component.html',\n})\n\nexport class LookupTableComponent implements ModalWindowValidator {\n  mapping: MappingModel;\n\n  table: LookupTable;\n  data: LookupTableData[];\n\n  @ViewChildren('outputSelect') outputSelects: QueryList;\n\n  initialize(cfg: ConfigModel, mapping: MappingModel): void {\n    this.mapping = mapping;\n\n    const targetField: Field = mapping.getFields(false)[0];\n    const targetValues: string[] = [];\n    targetValues.push('[ None ]');\n    for (const e of targetField.enumValues) {\n      targetValues.push(e.name);\n    }\n\n    this.table = cfg.mappings.getTableByName(mapping.transition.lookupTableName);\n    if (this.table == null) {\n      cfg.errorService.addError(new ErrorInfo({message: 'Could not find enum lookup table for mapping.',\n        scope: ErrorScope.MAPPING, type: ErrorType.INTERNAL, mapping: mapping}));\n    }\n\n    const d: LookupTableData[] = [];\n    const sourceField: Field = mapping.getFields(true)[0];\n    for (const e of sourceField.enumValues) {\n      const tableData: LookupTableData = new LookupTableData();\n      tableData.sourceEnumValue = e.name;\n      tableData.targetEnumValues = [].concat(targetValues);\n      const selected: LookupTableEntry = this.table.getEntryForSource(tableData.sourceEnumValue, false);\n      tableData.selectedTargetEnumValue = (selected == null) ? '[ None ]' : selected.targetValue;\n      d.push(tableData);\n    }\n    this.data = d;\n  }\n\n  isDataValid() {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n  saveTable(): void {\n    this.table.entries = [];\n    for (const c of this.outputSelects.toArray()) {\n      const selectedOptions: any[] = c.nativeElement.selectedOptions;\n      if (selectedOptions && selectedOptions.length) {\n        const targetValue: string = selectedOptions[0].label;\n        if (targetValue === '[ None ]') {\n          continue;\n        }\n        const e: LookupTableEntry = new LookupTableEntry();\n        e.sourceValue = c.nativeElement.attributes['sourceValue'].value;\n        e.targetValue = targetValue;\n        this.table.entries.push(e);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{ d.sourceEnumValue }}\n    \n      {{ targetEnumValue }}\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ d.sourceEnumValue }}          {{ targetEnumValue }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'LookupTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LookupTableData.html":{"url":"classes/LookupTableData.html","title":"class - LookupTableData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LookupTableData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedTargetEnumValue\n                            \n                            \n                                sourceEnumValue\n                            \n                            \n                                targetEnumValues\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTargetEnumValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceEnumValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetEnumValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, ViewChildren, ElementRef, QueryList } from '@angular/core';\n\nimport { LookupTable, LookupTableEntry } from '../../models/lookup-table.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\nimport { MappingModel } from '../../models/mapping.model';\nimport { ModalWindowValidator } from '../modal/modal-window.component';\nimport { ErrorScope, ErrorType, ErrorInfo } from '../../models/error.model';\n\nexport class LookupTableData {\n  sourceEnumValue: string;\n  targetEnumValues: string[];\n  selectedTargetEnumValue: string;\n}\n\n@Component({\n  selector: 'lookup-table',\n  templateUrl: './lookup-table.component.html',\n})\n\nexport class LookupTableComponent implements ModalWindowValidator {\n  mapping: MappingModel;\n\n  table: LookupTable;\n  data: LookupTableData[];\n\n  @ViewChildren('outputSelect') outputSelects: QueryList;\n\n  initialize(cfg: ConfigModel, mapping: MappingModel): void {\n    this.mapping = mapping;\n\n    const targetField: Field = mapping.getFields(false)[0];\n    const targetValues: string[] = [];\n    targetValues.push('[ None ]');\n    for (const e of targetField.enumValues) {\n      targetValues.push(e.name);\n    }\n\n    this.table = cfg.mappings.getTableByName(mapping.transition.lookupTableName);\n    if (this.table == null) {\n      cfg.errorService.addError(new ErrorInfo({message: 'Could not find enum lookup table for mapping.',\n        scope: ErrorScope.MAPPING, type: ErrorType.INTERNAL, mapping: mapping}));\n    }\n\n    const d: LookupTableData[] = [];\n    const sourceField: Field = mapping.getFields(true)[0];\n    for (const e of sourceField.enumValues) {\n      const tableData: LookupTableData = new LookupTableData();\n      tableData.sourceEnumValue = e.name;\n      tableData.targetEnumValues = [].concat(targetValues);\n      const selected: LookupTableEntry = this.table.getEntryForSource(tableData.sourceEnumValue, false);\n      tableData.selectedTargetEnumValue = (selected == null) ? '[ None ]' : selected.targetValue;\n      d.push(tableData);\n    }\n    this.data = d;\n  }\n\n  isDataValid() {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n  saveTable(): void {\n    this.table.entries = [];\n    for (const c of this.outputSelects.toArray()) {\n      const selectedOptions: any[] = c.nativeElement.selectedOptions;\n      if (selectedOptions && selectedOptions.length) {\n        const targetValue: string = selectedOptions[0].label;\n        if (targetValue === '[ None ]') {\n          continue;\n        }\n        const e: LookupTableEntry = new LookupTableEntry();\n        e.sourceValue = c.nativeElement.attributes['sourceValue'].value;\n        e.targetValue = targetValue;\n        this.table.entries.push(e);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LookupTableEntry.html":{"url":"classes/LookupTableEntry.html","title":"class - LookupTableEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LookupTableEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sourceType\n                            \n                            \n                                sourceValue\n                            \n                            \n                                targetType\n                            \n                            \n                                targetValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fromJSON\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fromJSON\n                        \n                        \n                    \n                \n            \n            \n                \nfromJSON(json: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    json\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class LookupTableEntry {\n  sourceValue: string;\n  sourceType = 'STRING';\n  targetValue: string;\n  targetType = 'STRING';\n\n  toJSON(): any {\n    return {\n      'sourceValue': this.sourceValue,\n      'sourceType': this.sourceType,\n      'targetValue': this.targetValue,\n      'targetType': this.targetType,\n    };\n  }\n\n  fromJSON(json: any): void {\n    this.sourceValue = json.sourceValue;\n    this.sourceType = json.sourceType;\n    this.targetValue = json.targetValue;\n    this.targetType = json.targetType;\n  }\n}\n\nexport class LookupTable {\n  name: string;\n  entries: LookupTableEntry[] = [];\n  sourceIdentifier: string;\n  targetIdentifier: string;\n\n  constructor() {\n    this.name = (new Date().getTime() + '-' + Math.floor(Math.random() * 1000000).toString());\n  }\n\n  getInputOutputKey(): string {\n    return this.sourceIdentifier + ':' + this.targetIdentifier;\n  }\n\n  getEntryForSource(sourceValue: string, autocreate: boolean): LookupTableEntry {\n    for (const entry of this.entries) {\n      if (entry.sourceValue === sourceValue) {\n        return entry;\n      }\n    }\n    if (autocreate) {\n      const entry: LookupTableEntry = new LookupTableEntry();\n      entry.sourceValue = sourceValue;\n      this.entries.push(entry);\n      return entry;\n    }\n    return null;\n  }\n\n  toString() {\n    let result: string = 'Lookup Table, name: ' + this.name + ', entries: ' + this.entries.length;\n    result += '\\n\\sourceIdentifier: ' + this.sourceIdentifier;\n    result += '\\n\\targetIdentifier: ' + this.targetIdentifier;\n    let counter = 0;\n    for (const entry of this.entries) {\n      result += '\\n\\tEntry #' + counter + ': ' + entry.sourceValue + ' => ' + entry.targetValue;\n      counter += 1;\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LookupTableUtil.html":{"url":"classes/LookupTableUtil.html","title":"class - LookupTableUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LookupTableUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/utils/lookup-table-util.ts\n        \n\n            \n                Description\n            \n            \n                Static routines for handling LookupTable.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getFirstMappingForLookupTable\n                            \n                            \n                                    Static\n                                populateMappingLookupTable\n                            \n                            \n                                    Static\n                                updateLookupTables\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getFirstMappingForLookupTable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirstMappingForLookupTable(mappingDefinition: MappingDefinition, lookupTableName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/lookup-table-util.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappingDefinition\n                                    \n                                                MappingDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lookupTableName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MappingModel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            populateMappingLookupTable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    populateMappingLookupTable(mappingDefinition: MappingDefinition, m: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/lookup-table-util.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappingDefinition\n                                    \n                                                MappingDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    m\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateLookupTables\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLookupTables(mappingDefinition: MappingDefinition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/lookup-table-util.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappingDefinition\n                                    \n                                                MappingDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MappingModel } from '../models/mapping.model';\nimport { TransitionMode } from '../models/transition.model';\nimport { Field } from '../models/field.model';\nimport { LookupTable } from '../models/lookup-table.model';\nimport { MappingDefinition } from '../models/mapping-definition.model';\n\n/**\n * Static routines for handling LookupTable.\n */\nexport class LookupTableUtil {\n\n  static populateMappingLookupTable(mappingDefinition: MappingDefinition, m: MappingModel): void {\n    if (!(m.transition.mode === TransitionMode.ENUM\n      && m.transition.lookupTableName == null\n      && m.getFields(true).length === 1\n      && m.getFields(false).length === 1)) {\n      return;\n    }\n    let inputClassIdentifier: string = null;\n    let outputClassIdentifier: string = null;\n\n    const inputField: Field = m.getFields(true)[0];\n    if (inputField) {\n      inputClassIdentifier = inputField.classIdentifier;\n    }\n    const outputField: Field = m.getFields(true)[0];\n    if (outputField) {\n      outputClassIdentifier = outputField.classIdentifier;\n    }\n    if (inputClassIdentifier && outputClassIdentifier) {\n      let table: LookupTable = mappingDefinition.getTableBySourceTarget(inputClassIdentifier, outputClassIdentifier);\n      if (table == null) {\n        table = new LookupTable();\n        table.sourceIdentifier = inputClassIdentifier;\n        table.targetIdentifier = outputClassIdentifier;\n        mappingDefinition.addTable(table);\n        m.transition.lookupTableName = table.name;\n      } else {\n        m.transition.lookupTableName = table.name;\n      }\n    }\n  }\n\n  static updateLookupTables(mappingDefinition: MappingDefinition) {\n    for (const t of mappingDefinition.getTables()) {\n      if (t.sourceIdentifier && t.targetIdentifier) {\n        continue;\n      }\n      const m: MappingModel = LookupTableUtil.getFirstMappingForLookupTable(mappingDefinition, t.name);\n      if (m != null && m.transition.lookupTableName != null) {\n        if (!t.sourceIdentifier) {\n          const inputField: Field = m.getFields(true)[0];\n          if (inputField) {\n            t.sourceIdentifier = inputField.classIdentifier;\n          }\n        }\n        if (!t.targetIdentifier) {\n          const outputField: Field = m.getFields(false)[0];\n          if (outputField) {\n            t.targetIdentifier = outputField.classIdentifier;\n          }\n        }\n      }\n    }\n    for (const m of mappingDefinition.mappings) {\n      LookupTableUtil.populateMappingLookupTable(mappingDefinition, m);\n    }\n  }\n\n  private static getFirstMappingForLookupTable(mappingDefinition: MappingDefinition, lookupTableName: string): MappingModel {\n    for (const m of mappingDefinition.mappings) {\n      if (m.transition.lookupTableName === lookupTableName) {\n        return m;\n      }\n    }\n    return null;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MappedField.html":{"url":"classes/MappedField.html","title":"class - MappedField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MappedField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                field\n                            \n                            \n                                parsedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isPadField\n                            \n                            \n                                isSource\n                            \n                            \n                                removeAction\n                            \n                            \n                                    Static\n                                sortMappedFieldsByPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldAction[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappedFieldParsingData\n\n                        \n                    \n                    \n                        \n                            Default value : new MappedFieldParsingData()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:39\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPadField\n                        \n                        \n                    \n                \n            \n            \n                \nisPadField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSource\n                        \n                        \n                    \n                \n            \n            \n                \nisSource()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeAction\n                        \n                        \n                    \n                \n            \n            \n                \nremoveAction(action: FieldAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            sortMappedFieldsByPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sortMappedFieldsByPath(mappedFields: MappedField[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappedFields\n                                    \n                                            MappedField[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MappedField[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { Field } from './field.model';\nimport { TransitionModel } from './transition.model';\n\nimport { DataMapperUtil } from '../common/data-mapper-util';\nimport { FieldAction } from './field-action.model';\nimport { PaddingField } from './document-definition.model';\n\nexport class MappedFieldParsingData {\n  parsedName: string = null;\n  parsedPath: string = null;\n  parsedValue: string = null;\n  parsedDocID: string = null;\n  parsedDocURI: string = null;\n  parsedIndex: string = null;\n  fieldIsProperty = false;\n  fieldIsConstant = false;\n  parsedValueType: string = null;\n  parsedActions: FieldAction[] = [];\n  userCreated = false;\n}\n\nexport class MappedField {\n  parsedData: MappedFieldParsingData = new MappedFieldParsingData();\n  field: Field;\n  actions: FieldAction[] = [];\n\n  static sortMappedFieldsByPath(mappedFields: MappedField[]): MappedField[] {\n    if (mappedFields == null || mappedFields.length === 0) {\n      return [];\n    }\n    const fieldsByPath: { [key: string]: MappedField; } = {};\n    const fieldPaths: string[] = [];\n    for (const mappedField of mappedFields) {\n      if (mappedField == null || mappedField.field == null) {\n        continue;\n      }\n      const path: string = mappedField.field.path;\n      fieldsByPath[path] = mappedField;\n      fieldPaths.push(path);\n    }\n    fieldPaths.sort();\n    const result: MappedField[] = [];\n    for (const name of fieldPaths) {\n      result.push(fieldsByPath[name]);\n    }\n    return result;\n  }\n\n  isPadField(): boolean {\n    return this.field instanceof PaddingField;\n  }\n\n  isSource(): boolean {\n    return this.field.isSource();\n  }\n\n  removeAction(action: FieldAction): void {\n    DataMapperUtil.removeItemFromArray(action, this.actions);\n  }\n\n}\n\nexport class MappingModel {\n  cfg: ConfigModel;\n  uuid: string;\n\n  sourceFields: MappedField[] = [];\n  targetFields: MappedField[] = [];\n  transition: TransitionModel = new TransitionModel();\n\n  constructor() {\n    this.uuid = 'mapping.' + Math.floor((Math.random() * 1000000) + 1).toString();\n    this.cfg = ConfigModel.getConfig();\n  }\n\n  getFirstCollectionField(isSource: boolean): Field {\n    for (const f of isSource ? this.sourceFields : this.targetFields) {\n      if (f.field.isInCollection()) {\n        return f.field;\n      }\n    }\n    return null;\n  }\n\n  isLookupMode(): boolean {\n    for (const f of this.sourceFields.concat(this.targetFields)) {\n      if (f.field.enumeration) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Add the specified field to this field mapping.\n   *\n   * @param field - field to add to the mapping\n   * @param first - if true add the field to the beginning of the array, last otherwise.\n   */\n  addField(field: Field, first: boolean): MappedField {\n    const mappedField: MappedField = new MappedField();\n    mappedField.field = field;\n    if (first) {\n      this.getMappedFields(field.isSource()).unshift(mappedField);\n    } else {\n      this.getMappedFields(field.isSource()).push(mappedField);\n    }\n    return mappedField;\n  }\n\n  /**\n   * Remove the specified field from this field mapping.\n   *\n   * @param field\n   */\n  removeField(field: Field) {\n    const mappedFields = this.getMappedFields(field.isSource());\n    DataMapperUtil.removeItemFromArray(mappedFields.find(mf => mf.field === field), mappedFields);\n  }\n\n  /**\n   * Return the number of user-defined (non-padding) fields in this mapping.\n   *\n   * @param field\n   */\n  getUserFieldCount(field: Field): number {\n    const mappedFields = this.getMappedFields(field.isSource());\n    let userFieldCount = 0;\n\n    for (const mappedField of mappedFields) {\n      if (!mappedField.isPadField()) {\n        userFieldCount++;\n      }\n    }\n    return userFieldCount;\n  }\n\n  hasMappedField(isSource: boolean) {\n    return isSource ? this.sourceFields.length > 0 : this.targetFields.length > 0;\n  }\n\n  isEmpty() {\n    return this.sourceFields.length === 0 && this.targetFields.length === 0;\n  }\n\n  isFullyMapped(): boolean {\n    return this.sourceFields.length > 0 && this.targetFields.length > 0;\n  }\n\n  addMappedField(mappedField: MappedField, isSource: boolean): void {\n    this.getMappedFields(isSource).push(mappedField);\n  }\n\n  removeMappedField(mappedField: MappedField): void {\n    DataMapperUtil.removeItemFromArray(mappedField, this.getMappedFields(mappedField.field.isSource()));\n  }\n\n  getMappedFieldForField(field: Field): MappedField {\n    for (const mappedField of this.getMappedFields(field.isSource())) {\n      if (mappedField.field === field) {\n        return mappedField;\n      }\n    }\n    return null;\n  }\n\n  getMappedFieldForIndex(index: string, isSource: boolean): MappedField {\n    if (!index) {\n      return null;\n    }\n    const mappedFields = this.getMappedFields(isSource);\n    if (+index - 1 > mappedFields.length - 1) {\n      return null;\n    }\n    return mappedFields[+index - 1];\n  }\n\n  getIndexForMappedField(mappedField: MappedField): number {\n    if (!mappedField || !mappedField.field) {\n      return null;\n    }\n    return this.getMappedFields(mappedField.field.isSource()).indexOf(mappedField) + 1;\n  }\n\n  /**\n   * Return an array of user mapped fields for the specified panel in this field pair instance.  No\n   * data-mapper generated padding fields will be included.\n   *\n   * @param isSource - true source panel, false target panel\n   */\n  getUserMappedFields(isSource: boolean): MappedField[] {\n    const workingFields = isSource ? this.sourceFields : this.targetFields;\n    const resultFields: MappedField[] = [new MappedField()];\n\n    for (const mappedField of workingFields) {\n      if (!mappedField.isPadField()) {\n        resultFields.push(mappedField);\n      }\n    }\n    resultFields.shift();\n    return resultFields;\n  }\n\n  getMappedFields(isSource: boolean): MappedField[] {\n    return isSource ? this.sourceFields : this.targetFields;\n  }\n\n  getLastMappedField(isSource: boolean): MappedField {\n    const fields: MappedField[] = this.getMappedFields(isSource);\n    if ((fields != null) && (fields.length > 0)) {\n      return fields[fields.length - 1];\n    }\n    return null;\n  }\n\n  getFields(isSource: boolean): Field[] {\n    const fields: Field[] = [];\n    for (const mappedField of this.getMappedFields(isSource)) {\n      if (mappedField.field != null) {\n        fields.push(mappedField.field);\n      }\n    }\n    return fields;\n  }\n\n  getFieldNames(isSource: boolean): string[] {\n    const fields: Field[] = this.getFields(isSource);\n    Field.alphabetizeFields(fields);\n    const names: string[] = [];\n    for (const field of fields) {\n      names.push(field.name);\n    }\n    return names;\n  }\n\n  getFieldPaths(isSource: boolean): string[] {\n    const fields: Field[] = this.getFields(isSource);\n    Field.alphabetizeFields(fields);\n    const paths: string[] = [];\n    for (const field of fields) {\n      paths.push(field.path);\n    }\n    return paths;\n  }\n\n  hasFieldActions(): boolean {\n    for (const mappedField of this.getAllMappedFields()) {\n      if (mappedField.actions.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getAllFields(): Field[] {\n    return this.getFields(true).concat(this.getFields(false));\n  }\n\n  getAllMappedFields(): MappedField[] {\n    return this.getMappedFields(true).concat(this.getMappedFields(false));\n  }\n\n  isFieldMapped(field: Field): boolean {\n    return this.getMappedFieldForField(field) != null;\n  }\n\n  hasTransformation(): boolean {\n    const mappedFields: MappedField[] = this.getAllMappedFields();\n    for (const mappedField of mappedFields) {\n      if (mappedField.actions.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Walk all target field mappings and return one of corresponding source field name\n   * if the specified field is already the target of a previous mapping, null otherwise.\n   *\n   * @param field\n   */\n  public getMappedTarget(field: Field): string {\n    const mappings: MappingModel[] = this.cfg.mappings.mappings;\n\n    if (field.isSource()) {\n      return null;\n    }\n    for (const m of mappings) {\n      if (m.targetFields.length === 0) {\n        continue;\n      }\n\n      for (const mappedOutputField of m.targetFields) {\n        if (mappedOutputField.field.docDef === field.docDef\n          && mappedOutputField.field.path === field.path) {\n          if (m.isFieldMapped(field)) {\n            return m.sourceFields[0].field.name;\n          }\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MappedFieldParsingData.html":{"url":"classes/MappedFieldParsingData.html","title":"class - MappedFieldParsingData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MappedFieldParsingData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fieldIsConstant\n                            \n                            \n                                fieldIsProperty\n                            \n                            \n                                parsedActions\n                            \n                            \n                                parsedDocID\n                            \n                            \n                                parsedDocURI\n                            \n                            \n                                parsedIndex\n                            \n                            \n                                parsedName\n                            \n                            \n                                parsedPath\n                            \n                            \n                                parsedValue\n                            \n                            \n                                parsedValueType\n                            \n                            \n                                userCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldIsConstant\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldIsProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldAction[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedDocID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedDocURI\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedValueType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userCreated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { Field } from './field.model';\nimport { TransitionModel } from './transition.model';\n\nimport { DataMapperUtil } from '../common/data-mapper-util';\nimport { FieldAction } from './field-action.model';\nimport { PaddingField } from './document-definition.model';\n\nexport class MappedFieldParsingData {\n  parsedName: string = null;\n  parsedPath: string = null;\n  parsedValue: string = null;\n  parsedDocID: string = null;\n  parsedDocURI: string = null;\n  parsedIndex: string = null;\n  fieldIsProperty = false;\n  fieldIsConstant = false;\n  parsedValueType: string = null;\n  parsedActions: FieldAction[] = [];\n  userCreated = false;\n}\n\nexport class MappedField {\n  parsedData: MappedFieldParsingData = new MappedFieldParsingData();\n  field: Field;\n  actions: FieldAction[] = [];\n\n  static sortMappedFieldsByPath(mappedFields: MappedField[]): MappedField[] {\n    if (mappedFields == null || mappedFields.length === 0) {\n      return [];\n    }\n    const fieldsByPath: { [key: string]: MappedField; } = {};\n    const fieldPaths: string[] = [];\n    for (const mappedField of mappedFields) {\n      if (mappedField == null || mappedField.field == null) {\n        continue;\n      }\n      const path: string = mappedField.field.path;\n      fieldsByPath[path] = mappedField;\n      fieldPaths.push(path);\n    }\n    fieldPaths.sort();\n    const result: MappedField[] = [];\n    for (const name of fieldPaths) {\n      result.push(fieldsByPath[name]);\n    }\n    return result;\n  }\n\n  isPadField(): boolean {\n    return this.field instanceof PaddingField;\n  }\n\n  isSource(): boolean {\n    return this.field.isSource();\n  }\n\n  removeAction(action: FieldAction): void {\n    DataMapperUtil.removeItemFromArray(action, this.actions);\n  }\n\n}\n\nexport class MappingModel {\n  cfg: ConfigModel;\n  uuid: string;\n\n  sourceFields: MappedField[] = [];\n  targetFields: MappedField[] = [];\n  transition: TransitionModel = new TransitionModel();\n\n  constructor() {\n    this.uuid = 'mapping.' + Math.floor((Math.random() * 1000000) + 1).toString();\n    this.cfg = ConfigModel.getConfig();\n  }\n\n  getFirstCollectionField(isSource: boolean): Field {\n    for (const f of isSource ? this.sourceFields : this.targetFields) {\n      if (f.field.isInCollection()) {\n        return f.field;\n      }\n    }\n    return null;\n  }\n\n  isLookupMode(): boolean {\n    for (const f of this.sourceFields.concat(this.targetFields)) {\n      if (f.field.enumeration) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Add the specified field to this field mapping.\n   *\n   * @param field - field to add to the mapping\n   * @param first - if true add the field to the beginning of the array, last otherwise.\n   */\n  addField(field: Field, first: boolean): MappedField {\n    const mappedField: MappedField = new MappedField();\n    mappedField.field = field;\n    if (first) {\n      this.getMappedFields(field.isSource()).unshift(mappedField);\n    } else {\n      this.getMappedFields(field.isSource()).push(mappedField);\n    }\n    return mappedField;\n  }\n\n  /**\n   * Remove the specified field from this field mapping.\n   *\n   * @param field\n   */\n  removeField(field: Field) {\n    const mappedFields = this.getMappedFields(field.isSource());\n    DataMapperUtil.removeItemFromArray(mappedFields.find(mf => mf.field === field), mappedFields);\n  }\n\n  /**\n   * Return the number of user-defined (non-padding) fields in this mapping.\n   *\n   * @param field\n   */\n  getUserFieldCount(field: Field): number {\n    const mappedFields = this.getMappedFields(field.isSource());\n    let userFieldCount = 0;\n\n    for (const mappedField of mappedFields) {\n      if (!mappedField.isPadField()) {\n        userFieldCount++;\n      }\n    }\n    return userFieldCount;\n  }\n\n  hasMappedField(isSource: boolean) {\n    return isSource ? this.sourceFields.length > 0 : this.targetFields.length > 0;\n  }\n\n  isEmpty() {\n    return this.sourceFields.length === 0 && this.targetFields.length === 0;\n  }\n\n  isFullyMapped(): boolean {\n    return this.sourceFields.length > 0 && this.targetFields.length > 0;\n  }\n\n  addMappedField(mappedField: MappedField, isSource: boolean): void {\n    this.getMappedFields(isSource).push(mappedField);\n  }\n\n  removeMappedField(mappedField: MappedField): void {\n    DataMapperUtil.removeItemFromArray(mappedField, this.getMappedFields(mappedField.field.isSource()));\n  }\n\n  getMappedFieldForField(field: Field): MappedField {\n    for (const mappedField of this.getMappedFields(field.isSource())) {\n      if (mappedField.field === field) {\n        return mappedField;\n      }\n    }\n    return null;\n  }\n\n  getMappedFieldForIndex(index: string, isSource: boolean): MappedField {\n    if (!index) {\n      return null;\n    }\n    const mappedFields = this.getMappedFields(isSource);\n    if (+index - 1 > mappedFields.length - 1) {\n      return null;\n    }\n    return mappedFields[+index - 1];\n  }\n\n  getIndexForMappedField(mappedField: MappedField): number {\n    if (!mappedField || !mappedField.field) {\n      return null;\n    }\n    return this.getMappedFields(mappedField.field.isSource()).indexOf(mappedField) + 1;\n  }\n\n  /**\n   * Return an array of user mapped fields for the specified panel in this field pair instance.  No\n   * data-mapper generated padding fields will be included.\n   *\n   * @param isSource - true source panel, false target panel\n   */\n  getUserMappedFields(isSource: boolean): MappedField[] {\n    const workingFields = isSource ? this.sourceFields : this.targetFields;\n    const resultFields: MappedField[] = [new MappedField()];\n\n    for (const mappedField of workingFields) {\n      if (!mappedField.isPadField()) {\n        resultFields.push(mappedField);\n      }\n    }\n    resultFields.shift();\n    return resultFields;\n  }\n\n  getMappedFields(isSource: boolean): MappedField[] {\n    return isSource ? this.sourceFields : this.targetFields;\n  }\n\n  getLastMappedField(isSource: boolean): MappedField {\n    const fields: MappedField[] = this.getMappedFields(isSource);\n    if ((fields != null) && (fields.length > 0)) {\n      return fields[fields.length - 1];\n    }\n    return null;\n  }\n\n  getFields(isSource: boolean): Field[] {\n    const fields: Field[] = [];\n    for (const mappedField of this.getMappedFields(isSource)) {\n      if (mappedField.field != null) {\n        fields.push(mappedField.field);\n      }\n    }\n    return fields;\n  }\n\n  getFieldNames(isSource: boolean): string[] {\n    const fields: Field[] = this.getFields(isSource);\n    Field.alphabetizeFields(fields);\n    const names: string[] = [];\n    for (const field of fields) {\n      names.push(field.name);\n    }\n    return names;\n  }\n\n  getFieldPaths(isSource: boolean): string[] {\n    const fields: Field[] = this.getFields(isSource);\n    Field.alphabetizeFields(fields);\n    const paths: string[] = [];\n    for (const field of fields) {\n      paths.push(field.path);\n    }\n    return paths;\n  }\n\n  hasFieldActions(): boolean {\n    for (const mappedField of this.getAllMappedFields()) {\n      if (mappedField.actions.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getAllFields(): Field[] {\n    return this.getFields(true).concat(this.getFields(false));\n  }\n\n  getAllMappedFields(): MappedField[] {\n    return this.getMappedFields(true).concat(this.getMappedFields(false));\n  }\n\n  isFieldMapped(field: Field): boolean {\n    return this.getMappedFieldForField(field) != null;\n  }\n\n  hasTransformation(): boolean {\n    const mappedFields: MappedField[] = this.getAllMappedFields();\n    for (const mappedField of mappedFields) {\n      if (mappedField.actions.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Walk all target field mappings and return one of corresponding source field name\n   * if the specified field is already the target of a previous mapping, null otherwise.\n   *\n   * @param field\n   */\n  public getMappedTarget(field: Field): string {\n    const mappings: MappingModel[] = this.cfg.mappings.mappings;\n\n    if (field.isSource()) {\n      return null;\n    }\n    for (const m of mappings) {\n      if (m.targetFields.length === 0) {\n        continue;\n      }\n\n      for (const mappedOutputField of m.targetFields) {\n        if (mappedOutputField.field.docDef === field.docDef\n          && mappedOutputField.field.path === field.path) {\n          if (m.isFieldMapped(field)) {\n            return m.sourceFields[0].field.name;\n          }\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MappingDefinition.html":{"url":"classes/MappingDefinition.html","title":"class - MappingDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MappingDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeMapping\n                            \n                            \n                                mappings\n                            \n                            \n                                name\n                            \n                            \n                                parsedDocs\n                            \n                            \n                                    Private\n                                tables\n                            \n                            \n                                    Private\n                                tablesByName\n                            \n                            \n                                    Private\n                                tablesBySourceTargetKey\n                            \n                            \n                                templateText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTable\n                            \n                            \n                                findMappingsForField\n                            \n                            \n                                getAllMappings\n                            \n                            \n                                getTableByName\n                            \n                            \n                                getTableBySourceTarget\n                            \n                            \n                                getTables\n                            \n                            \n                                removeMapping\n                            \n                            \n                                removeTableByName\n                            \n                            \n                                templateExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeMapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedDocs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LookupTable[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tablesByName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tablesBySourceTargetKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templateText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:29\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTable\n                        \n                        \n                    \n                \n            \n            \n                \naddTable(table: LookupTable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                LookupTable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findMappingsForField\n                        \n                        \n                    \n                \n            \n            \n                \nfindMappingsForField(field: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MappingModel[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllMappings\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllMappings(includeActiveMapping: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    includeActiveMapping\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MappingModel[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTableByName\n                        \n                        \n                    \n                \n            \n            \n                \ngetTableByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LookupTable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTableBySourceTarget\n                        \n                        \n                    \n                \n            \n            \n                \ngetTableBySourceTarget(sourceIdentifier: string, targetIdentifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceIdentifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetIdentifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LookupTable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTables\n                        \n                        \n                    \n                \n            \n            \n                \ngetTables()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LookupTable[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMapping\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMapping(m: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    m\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeTableByName\n                        \n                        \n                    \n                \n            \n            \n                \nremoveTableByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            templateExists\n                        \n                        \n                    \n                \n            \n            \n                \ntemplateExists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MappingModel } from './mapping.model';\nimport { LookupTable } from '../models/lookup-table.model';\nimport { Field } from '../models/field.model';\nimport { DocumentDefinition } from '../models/document-definition.model';\n\nimport { DataMapperUtil } from '../common/data-mapper-util';\n\nexport class MappingDefinition {\n  name: string = null;\n  mappings: MappingModel[] = [];\n  activeMapping: MappingModel = null;\n  parsedDocs: DocumentDefinition[] = [];\n  templateText: string = null;\n\n  private tables: LookupTable[] = [];\n  private tablesBySourceTargetKey: { [key: string]: LookupTable; } = {};\n  private tablesByName: { [key: string]: LookupTable; } = {};\n\n  constructor() {\n    this.name = 'UI.' + Math.floor((Math.random() * 1000000) + 1).toString();\n  }\n\n  templateExists(): boolean {\n    return ((this.templateText != null) && (this.templateText !== ''));\n  }\n\n  addTable(table: LookupTable): void {\n    this.tablesBySourceTargetKey[table.getInputOutputKey()] = table;\n    this.tablesByName[table.name] = table;\n    this.tables.push(table);\n  }\n\n  getTableByName(name: string): LookupTable {\n    return this.tablesByName[name];\n  }\n\n  getTableBySourceTarget(sourceIdentifier: string, targetIdentifier: string): LookupTable {\n    const key: string = sourceIdentifier + ':' + targetIdentifier;\n    return this.tablesBySourceTargetKey[key];\n  }\n\n  getTables(): LookupTable[] {\n    const tables: LookupTable[] = [];\n    for (const key in this.tablesByName) {\n      if (!this.tablesByName.hasOwnProperty(key)) {\n        continue;\n      }\n      const table: LookupTable = this.tablesByName[key];\n      tables.push(table);\n    }\n    return tables;\n  }\n\n  removeTableByName(name: string) {\n    if (name) {\n      const table = this.tablesByName[name];\n      const iokey = table.getInputOutputKey();\n      if (this.tablesByName[name]) {\n        delete this.tables[this.tables.indexOf(table)];\n        delete this.tablesByName[name];\n        delete this.tablesBySourceTargetKey[iokey];\n      }\n    }\n  }\n\n  getAllMappings(includeActiveMapping: boolean): MappingModel[] {\n    const mappings: MappingModel[] = [].concat(this.mappings);\n    if (includeActiveMapping) {\n      if (this.activeMapping == null) {\n        return mappings;\n      }\n      for (const mapping of mappings) {\n        if (mapping === this.activeMapping) {\n          return mappings;\n        }\n      }\n      mappings.push(this.activeMapping);\n    }\n    return mappings;\n  }\n\n  findMappingsForField(field: Field): MappingModel[] {\n    const mappingsForField: MappingModel[] = [];\n    for (const m of this.mappings) {\n      if (m.isFieldMapped(field)) {\n        mappingsForField.push(m);\n      }\n    }\n    return mappingsForField;\n  }\n\n  removeMapping(m: MappingModel): boolean {\n    return DataMapperUtil.removeItemFromArray(m, this.mappings);\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingDetailComponent.html":{"url":"components/MappingDetailComponent.html","title":"component - MappingDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mappingSelectionRequiredSubscription\n                            \n                            \n                                sourcesHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitle\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeMapping\n                            \n                            \n                                    Private\n                                selectMapping\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMapping\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMapping(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            selectMapping\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectMapping(field: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mappingSelectionRequiredSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourcesHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CollapsableHeaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('sourcesHeader')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnDestroy, ViewChild } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\nimport { MappingModel } from '../../models/mapping.model';\n\nimport { CollapsableHeaderComponent } from '../mapping-detail/collapsable-header.component';\n\nimport { ModalWindowComponent } from '../modal/modal-window.component';\nimport { MappingSelectionComponent } from '../mapping-detail/mapping-selection.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'mapping-detail',\n  templateUrl: './mapping-detail.component.html',\n})\n\nexport class MappingDetailComponent implements OnInit, OnDestroy {\n  @Input() cfg: ConfigModel;\n  @Input() modalWindow: ModalWindowComponent;\n\n  @ViewChild('sourcesHeader')\n  sourcesHeader: CollapsableHeaderComponent;\n\n  private mappingSelectionRequiredSubscription: Subscription;\n\n  ngOnInit(): void {\n    this.mappingSelectionRequiredSubscription = this.cfg.mappingService.mappingSelectionRequired$.subscribe((field: Field) => {\n      this.selectMapping(field);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.mappingSelectionRequiredSubscription.unsubscribe();\n  }\n\n  getTitle(): string {\n    return this.cfg.mappings.activeMapping.isLookupMode() ? 'Lookup Mapping' : 'Mapping Details';\n  }\n\n  removeMapping(event: MouseEvent): void {\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Remove';\n    this.modalWindow.headerText = 'Remove Mapping?';\n    this.modalWindow.message = 'Are you sure you want to remove the current mapping?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      const activeMapping = this.cfg.mappings.activeMapping;\n      if (activeMapping.isLookupMode) {\n        this.cfg.mappings.removeTableByName(activeMapping.transition.lookupTableName);\n      }\n      this.cfg.mappingService.removeMapping(activeMapping);\n      this.cfg.showMappingDetailTray = false;\n    };\n    this.modalWindow.show();\n  }\n\n  private selectMapping(field: Field): void {\n    const mappingsForField: MappingModel[] = this.cfg.mappings.findMappingsForField(field);\n    const self: MappingDetailComponent = this;\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Select';\n    this.modalWindow.headerText = 'Select Mapping';\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      const c: MappingSelectionComponent = mw.nestedComponent as MappingSelectionComponent;\n      c.selectedField = field;\n      c.cfg = self.cfg;\n      c.mappings = mappingsForField;\n      c.modalWindow = this.modalWindow;\n    };\n    this.modalWindow.nestedComponentType = MappingSelectionComponent;\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      this.cfg.errorService.clearValidationErrors();\n      const c: MappingSelectionComponent = mw.nestedComponent as MappingSelectionComponent;\n      const mapping: MappingModel = c.getSelectedMapping();\n      self.cfg.mappingService.selectMapping(mapping);\n    };\n    this.modalWindow.cancelButtonHandler = (mw: ModalWindowComponent) => {\n      self.cfg.mappingService.selectMapping(null);\n    };\n    this.modalWindow.show();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        {{ getTitle() }}\n        \n      \n    \n\n    \n\n      \n        \n\n          \n          \n            \n\n              \n                \n                  \n                  \n                \n              \n            \n\n            \n              \n              \n                \n                  \n                  \n                \n              \n            \n          \n\n          \n          \n            \n\n              \n                \n                  \n                  \n                \n              \n            \n\n            \n              \n              \n                \n                  \n                  \n                \n              \n            \n          \n        \n      \n\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ getTitle() }}n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingFieldActionArgumentComponent.html":{"url":"components/MappingFieldActionArgumentComponent.html","title":"component - MappingFieldActionArgumentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingFieldActionArgumentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-field-action-argument\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-field-action-argument.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkIconEnabled\n                            \n                            \n                                delimiters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acceptInput\n                            \n                            \n                                actionConfigParamSelectionChanged\n                            \n                            \n                                contentChanged\n                            \n                            \n                                getActionConfigParamValues\n                            \n                            \n                                getActionConfigParamVDefault\n                            \n                            \n                                getLabel\n                            \n                            \n                                getMappedFieldActions\n                            \n                            \n                                isUserDelimiter\n                            \n                            \n                                modeIsSupported\n                            \n                            \n                                validateActionConfigParamSelection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                actionIndex\n                            \n                            \n                                argConfig\n                            \n                            \n                                argValIndex\n                            \n                            \n                                cfg\n                            \n                            \n                                mappedField\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:39\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :         FieldAction\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        actionIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        argConfig\n                    \n                \n                \n                    \n                        Type :         FieldActionArgument\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        argValIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mappedField\n                    \n                \n                \n                    \n                        Type :         MappedField\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            acceptInput\n                        \n                        \n                    \n                \n            \n            \n                \nacceptInput(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:63\n                \n            \n\n\n            \n                \n                    The user has selected the check icon at the end of the input text widget.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            actionConfigParamSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nactionConfigParamSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:102\n                \n            \n\n\n            \n                \n                    A mapping field action parameter selection has been made either from a pull-down menu\nor from user input to a text field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contentChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncontentChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:53\n                \n            \n\n\n            \n                \n                    The input text widget content has changed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionConfigParamValues\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionConfigParamValues(argConfig: FieldActionArgument)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:72\n                \n            \n\n\n            \n                \n                    Return in a string array the parameter values for the specified field action argument.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argConfig\n                                    \n                                                FieldActionArgument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     String[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionConfigParamVDefault\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionConfigParamVDefault(argConfig: FieldActionArgument, actionIndex: number, argValIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:137\n                \n            \n\n\n            \n                \n                    Return a string representing the default value for the field action argument pull-down.  If a mapped\nfield already exists for this component then use that to determine the displayed valued in the\npull-down; otherwise use the sequential configuration value based on the argument value index.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    argConfig\n                                    \n                                                FieldActionArgument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nargument configuration used if no mapped field exists\n\n\n                                    \n                                \n                                \n                                    actionIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nused when multiple actions are specified\n\n\n                                    \n                                \n                                \n                                    argValIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nindex into the argument values for any one specific action.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLabel(argConfigName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:151\n                \n            \n\n\n            \n                \n                    Translate an internal label to a human legible form.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argConfigName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedFieldActions\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedFieldActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     FieldAction[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserDelimiter\n                        \n                        \n                    \n                \n            \n            \n                \nisUserDelimiter(delimiterModel: TransitionDelimiterModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    delimiterModel\n                                    \n                                                TransitionDelimiterModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            modeIsSupported\n                        \n                        \n                    \n                \n            \n            \n                \nmodeIsSupported(delimiterModel: TransitionDelimiterModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    delimiterModel\n                                    \n                                                TransitionDelimiterModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateActionConfigParamSelection\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateActionConfigParamSelection(acp: FieldActionArgumentValue[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:85\n                \n            \n\n\n            \n                \n                    Simply validate that the user isn't attempting a conversion to the original type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    acp\n                                    \n                                            FieldActionArgumentValue[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkIconEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delimiters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionDelimiterModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\nimport { MappedField } from '../../models/mapping.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { FieldAction, FieldActionArgument, FieldActionArgumentValue } from '../../models/field-action.model';\nimport { TransitionDelimiterModel, TransitionModel, TransitionDelimiter } from '../../models/transition.model';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from '../../models/error.model';\n\n@Component({\n  selector: 'mapping-field-action-argument',\n  templateUrl: './mapping-field-action-argument.component.html',\n})\n\nexport class MappingFieldActionArgumentComponent {\n  @Input() action: FieldAction;\n  @Input() actionIndex: number;\n  @Input() argValIndex: number;\n  @Input() argConfig: FieldActionArgument;\n  @Input() cfg: ConfigModel;\n  @Input() mappedField: MappedField;\n\n  delimiters: TransitionDelimiterModel[];\n  private checkIconEnabled = false;\n\n  constructor() {\n    TransitionModel.initialize();\n    this.delimiters = TransitionModel.delimiterModels;\n  }\n\n  getMappedFieldActions(): FieldAction[] {\n    return this.mappedField ? this.mappedField.actions : [this.action];\n  }\n\n  /**\n   * The input text widget content has changed.\n   */\n  contentChanged(): void {\n    this.checkIconEnabled = true;\n    this.cfg.mappingService.notifyMappingUpdated();\n  }\n\n  /**\n   * The user has selected the check icon at the end of the input text widget.\n   *\n   * @param event\n   */\n  acceptInput(event: any): void {\n    this.actionConfigParamSelectionChanged(event);\n  }\n\n  /**\n   * Return in a string array the parameter values for the specified field action argument.\n   *\n   * @param argConfig\n   */\n  getActionConfigParamValues(argConfig: FieldActionArgument): String[] {\n    const acpv: String[] = [];\n    for (const argument of argConfig.values) {\n      acpv.push(argument);\n    }\n    return acpv;\n  }\n\n  /**\n   * Simply validate that the user isn't attempting a conversion to the original type.\n   *\n   * @param acp\n   */\n  validateActionConfigParamSelection(acp: FieldActionArgumentValue[]): void {\n    this.cfg.errorService.clearFieldErrors();\n    if (acp != null && acp.length === 2) {\n      if (acp[0].value === acp[1].value) {\n        this.cfg.errorService.addError(new ErrorInfo({\n          message: 'Please select differing \\'from\\' and \\'to\\' units in your conversion transformation.',\n          level: ErrorLevel.ERROR, field: this.mappedField, scope: ErrorScope.FIELD, type: ErrorType.USER}));\n      }\n    }\n  }\n\n  /**\n   * A mapping field action parameter selection has been made either from a pull-down menu\n   * or from user input to a text field.\n   *\n   * @param event\n   */\n  actionConfigParamSelectionChanged(event: any): void {\n    this.cfg.errorService.clearFieldErrors();\n    // Make sure they've specified something.\n    if (!event.target.value || event.target.value.length === 0) {\n      this.cfg.errorService.addError(new ErrorInfo({\n        message: 'You must specify a transformation argument value.',\n        level: ErrorLevel.INFO, field: this.mappedField, scope: ErrorScope.FIELD, type: ErrorType.USER}));\n      return;\n    }\n    this.mappedField.parsedData.userCreated = true;\n\n    // Identify the pull-down\n    if (event.target.selectedOptions != null) {\n      const attributes: any = event.target.selectedOptions.item(0).attributes;\n      const selectedArgValName: any = attributes.getNamedItem('value').value;\n      const argValIndex: any = attributes.getNamedItem('argValIndex').value;\n      const actionIndex: any = attributes.getNamedItem('actionIndex').value;\n      const action: FieldAction = this.mappedField ? this.mappedField.actions[actionIndex] : this.action;\n      action.argumentValues[argValIndex].value = selectedArgValName;\n      this.validateActionConfigParamSelection(action.argumentValues);\n    }\n    this.cfg.mappingService.notifyMappingUpdated();\n    this.checkIconEnabled = false;\n    // this.enableCheck();\n  }\n\n  /**\n   * Return a string representing the default value for the field action argument pull-down.  If a mapped\n   * field already exists for this component then use that to determine the displayed valued in the\n   * pull-down; otherwise use the sequential configuration value based on the argument value index.\n   *\n   * @param argConfig - argument configuration used if no mapped field exists\n   * @param actionIndex - used when multiple actions are specified\n   * @param argValIndex - index into the argument values for any one specific action.\n   */\n  getActionConfigParamVDefault(argConfig: FieldActionArgument, actionIndex: number, argValIndex: number): String {\n    const action: FieldAction = this.getMappedFieldActions()[actionIndex];\n    if (action != null && action.argumentValues.length > 0) {\n      return action.argumentValues[argValIndex].value;\n    } else {\n      return argConfig.values[argValIndex];\n    }\n  }\n\n  /**\n   * Translate an internal label to a human legible form.\n   *\n   * @param argConfigName\n   */\n  getLabel(argConfigName: string): string {\n    return DataMapperUtil.toDisplayable(argConfigName);\n  }\n\n  modeIsSupported(delimiterModel: TransitionDelimiterModel): boolean {\n    if ([TransitionDelimiter.NONE, TransitionDelimiter.USER_DEFINED].includes(delimiterModel.delimiter)) {\n      return false;\n    }\n    return true;\n  }\n\n  isUserDelimiter(delimiterModel: TransitionDelimiterModel) {\n    return (delimiterModel.delimiter === TransitionDelimiter.USER_DEFINED);\n  }\n\n}\n\n    \n\n    \n        \n  \n\n  \n     0; then dropdown; else textInput\"> \n  \n  \n    {{ getLabel(argConfig.name) }}\n    \n      {{ actionConfigParamVal }}\n      \n    \n  \n  \n    {{ getLabel(argConfig.name) }}\n    \n      \n        \n          {{ delimiter.prettyName }}\n        \n      \n    \n  \n\n  \n    {{ getLabel(argConfig.name) }}: \n    \n      \n    \n    \n      \n    \n\n    \n      \n        \n      \n      \n        \n      \n    \n    -->\n  \n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         0; then dropdown; else textInput\">         {{ getLabel(argConfig.name) }}          {{ actionConfigParamVal }}                  {{ getLabel(argConfig.name) }}                            {{ delimiter.prettyName }}                          {{ getLabel(argConfig.name) }}:                                                                                 -->    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingFieldActionArgumentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingFieldActionComponent.html":{"url":"components/MappingFieldActionComponent.html","title":"component - MappingFieldActionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingFieldActionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-field-action\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-field-action.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actionsExistForField\n                            \n                            \n                                configSelectionChanged\n                            \n                            \n                                getActionConfigs\n                            \n                            \n                                getMappedFieldActions\n                            \n                            \n                                isIndexArg\n                            \n                            \n                                removeAction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                isSource\n                            \n                            \n                                mappedField\n                            \n                            \n                                mapping\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSource\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mappedField\n                    \n                \n                \n                    \n                        Type :         MappedField\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            actionsExistForField\n                        \n                        \n                    \n                \n            \n            \n                \nactionsExistForField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nconfigSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:66\n                \n            \n\n\n            \n                \n                    A mapping field action configuration selection has been made.  Note that action field arguments, if any,\nmay be specified by either a text field or pull-down menu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionConfigs\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionConfigs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     FieldActionDefinition[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedFieldActions\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedFieldActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     FieldAction[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isIndexArg\n                        \n                        \n                    \n                \n            \n            \n                \nisIndexArg(argVal: string, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeAction\n                        \n                        \n                    \n                \n            \n            \n                \nremoveAction(action: FieldAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:56\n                \n            \n\n\n            \n                \n                    Remove the specified field action (transformation) from the current mapped field's\nactions.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : DataMapperUtil.toDisplayable\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\nimport { MappingModel, MappedField } from '../../models/mapping.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { FieldAction, FieldActionDefinition, Multiplicity } from '../../models/field-action.model';\n\n@Component({\n  selector: 'mapping-field-action',\n  templateUrl: './mapping-field-action.component.html',\n})\n\nexport class MappingFieldActionComponent {\n  @Input() cfg: ConfigModel;\n  @Input() mappedField: MappedField;\n  @Input() isSource: boolean;\n  @Input() mapping: MappingModel;\n  getLabel = DataMapperUtil.toDisplayable;\n\n  getMappedFieldActions(): FieldAction[] {\n    return this.mappedField.actions;\n  }\n\n  isIndexArg(argVal: string, index: number): boolean {\n    return (argVal === 'Index' && index === 0);\n  }\n\n  actionsExistForField(): boolean {\n    return (this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, this.isSource, Multiplicity.ONE_TO_ONE).length > 0);\n  }\n\n  getActionConfigs(): FieldActionDefinition[] {\n    return this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, this.isSource, Multiplicity.ONE_TO_ONE);\n  }\n\n  /**\n   * Remove the specified field action (transformation) from the current mapped field's\n   * actions.\n   * @param action\n   */\n  removeAction(action: FieldAction): void {\n    this.mappedField.removeAction(action);\n    this.cfg.mappingService.notifyMappingUpdated();\n  }\n\n  /**\n   * A mapping field action configuration selection has been made.  Note that action field arguments, if any,\n   * may be specified by either a text field or pull-down menu.\n   * @param event\n   */\n  configSelectionChanged(event: any) {\n    const attributes: any = event.target.selectedOptions.item(0).attributes;\n    const selectedActionName: any = attributes.getNamedItem('value').value;\n    const selectedActionIndex: any = attributes.getNamedItem('actionIndex').value;\n    const action: FieldAction = this.getMappedFieldActions()[selectedActionIndex];\n    if (action.name !== selectedActionName) {\n      action.argumentValues = [];  // Invalidate the previously selected field action arguments.\n      const fieldActionDefinition = this.cfg.fieldActionService.getActionDefinitionForName(selectedActionName, Multiplicity.ONE_TO_ONE);\n      fieldActionDefinition.populateFieldAction(action);\n\n      // If the field action configuration predefines argument values then populate the fields with\n      // default values.  Needed to support pull-down menus in action argument definitions.\n      if (action.argumentValues.values && action.argumentValues.length > 0\n        && fieldActionDefinition.arguments[0] && fieldActionDefinition.arguments[0].values\n        && fieldActionDefinition.arguments[0].values.length > 0) {\n        for (let i = 0; i \n    \n\n    \n        \n  \n\n    \n      \n        \n        \n          {{ getLabel(actionConfig.name) }}\n        \n        \n          \n        \n        \n      \n\n      \n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      {{ getLabel(actionConfig.name) }}                                                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingFieldActionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingFieldContainerComponent.html":{"url":"components/MappingFieldContainerComponent.html","title":"component - MappingFieldContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingFieldContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-field-container\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-field-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                    Private\n                                diff\n                            \n                            \n                                    Private\n                                elem\n                            \n                            \n                                inputId\n                            \n                            \n                                    Private\n                                isDragDropTarget\n                            \n                            \n                                    Private\n                                searchFilter\n                            \n                            \n                                    Private\n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allowDrop\n                            \n                            \n                                displayFieldSearchBox\n                            \n                            \n                                displayTransitionSelection\n                            \n                            \n                                dragEnterLeave\n                            \n                            \n                                endDrag\n                            \n                            \n                                getAddButtonLabel\n                            \n                            \n                                getDisplayName\n                            \n                            \n                                getPanelIconCSSClass\n                            \n                            \n                                getSearchPlaceholder\n                            \n                            \n                                getTopFieldTypeLabel\n                            \n                            \n                                handleMouseOver\n                            \n                            \n                                isAddButtonVisible\n                            \n                            \n                                isPartialComponent\n                            \n                            \n                                itemIsDocument\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeMappedField\n                            \n                            \n                                selectionChanged\n                            \n                            \n                                startDrag\n                            \n                            \n                                updateSearchFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                isSource\n                            \n                            \n                                mapping\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:45\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSource\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allowDrop\n                        \n                        \n                    \n                \n            \n            \n                \nallowDrop(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayFieldSearchBox\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayFieldSearchBox()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayTransitionSelection\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayTransitionSelection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragEnterLeave\n                        \n                        \n                    \n                \n            \n            \n                \ndragEnterLeave(event: any, entering: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entering\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endDrag\n                        \n                        \n                    \n                \n            \n            \n                \nendDrag(event: any, insertBeforeMappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    insertBeforeMappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAddButtonLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetAddButtonLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDisplayName\n                        \n                        \n                    \n                \n            \n            \n                \ngetDisplayName(model: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPanelIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetPanelIconCSSClass(model: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSearchPlaceholder\n                        \n                        \n                    \n                \n            \n            \n                \ngetSearchPlaceholder()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTopFieldTypeLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetTopFieldTypeLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseOver\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseOver(evt1: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt1\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAddButtonVisible\n                        \n                        \n                    \n                \n            \n            \n                \nisAddButtonVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPartialComponent\n                        \n                        \n                    \n                \n            \n            \n                \nisPartialComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            itemIsDocument\n                        \n                        \n                    \n                \n            \n            \n                \nitemIsDocument(model: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMappedField\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMappedField(mappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startDrag\n                        \n                        \n                    \n                \n            \n            \n                \nstartDrag(event: any, draggedMappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    draggedMappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSearchFilter\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSearchFilter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            diff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            elem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDragDropTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\nimport { MappingModel, MappedField } from '../../models/mapping.model';\nimport { TransitionMode } from '../../models/transition.model';\nimport { Observable } from 'rxjs';\nimport { Field } from '../../models/field.model';\nimport { ModalWindowComponent } from '../modal/modal-window.component';\n\n@Component({\n  selector: 'mapping-field-container',\n  templateUrl: './mapping-field-container.component.html',\n})\n\nexport class MappingFieldContainerComponent implements OnInit {\n  @Input() cfg: ConfigModel;\n  @Input() isSource = false;\n  @Input() mapping: MappingModel;\n  @Input() modalWindow: ModalWindowComponent;\n\n  inputId: String;\n\n  private isDragDropTarget = false;\n  private elem = null;\n  private start = 0;\n  private diff = 0;\n  private searchFilter = '';\n  dataSource: Observable;\n\n  constructor() {\n    this.dataSource = Observable.create((observer: any) => {\n      observer.next(this.cfg.mappingService.executeFieldSearch(this.cfg, this.searchFilter, this.isSource));\n    });\n  }\n\n  ngOnInit() {\n    this.inputId = 'input-' + this.isSource ? 'source' : 'target';\n  }\n\n  itemIsDocument(model: any): boolean {\n    return (!model.field);\n  }\n  getDisplayName(model: any): string {\n    return model.displayName;\n  }\n\n  isPartialComponent(): boolean {\n    return true;\n  }\n\n  getPanelIconCSSClass(model: any): string {\n    return (model.field) ? '' : (this.isSource ? 'fa fa-hdd-o' : 'fa fa-download');\n  }\n\n  handleMouseOver(evt1: MouseEvent): void {\n    if (this.elem != null) {\n      evt1.stopPropagation();\n      evt1.preventDefault();\n      let end = 0;\n\n      if (evt1['pageY']) {\n        end = evt1['pageY'];\n      } else if (evt1['clientY']) {\n        end = evt1['clientY'];\n      }\n      this.diff = end - this.start;\n      this.elem.style['top'] = this.diff + 'px';\n    }\n  }\n\n  startDrag(event: any, draggedMappedField: MappedField): void {\n    event = event || window.event;\n    event.dataTransfer.setData('text', '');  // firefox bug\n    this.cfg.currentDraggedField = draggedMappedField;\n    /* this code does correctly constrain the drag movement to the vertical area of\n     * the mapping details section. It couldn't correctly identify the on-drop target\n    event = event || window.event;\n    event.stopPropagation();\n    event.preventDefault();\n    this.elem = event.currentTarget;\n\n    if (event['pageY']) {\n        this.start = event['pageY'];\n    } else if (event['clientY']) {\n        this.start = event['clientY'];\n    }\n\n    this.elem.style.position = 'relative';\n    this.elem.onmouseup = (evt: any) => {\n      // See endDrag()\n      evt.stopPropagation();\n      evt.preventDefault();\n    };\n    */\n  }\n\n  dragEnterLeave(event: any, entering: boolean): void {\n    this.isDragDropTarget = entering;\n  }\n\n  allowDrop(event: any): void {\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n    this.isDragDropTarget = true;\n  }\n\n  endDrag(event: any, insertBeforeMappedField: MappedField): void {\n    this.isDragDropTarget = false;\n\n    const droppedMappedField: MappedField = this.cfg.currentDraggedField;\n    if (droppedMappedField == null) {\n      return;\n    }\n\n    if (insertBeforeMappedField != null) {\n      this.cfg.mappingService.moveMappedFieldTo(this.mapping, droppedMappedField,\n        this.mapping.getIndexForMappedField(insertBeforeMappedField));\n\n      // Update indexing in any conditional mapping expressions.\n      if (this.mapping.transition && this.mapping.transition.enableExpression) {\n        this.mapping.transition.expression.updateFieldReference(this.mapping);\n        this.cfg.mappingService.notifyMappingUpdated();\n      }\n    }\n    this.cfg.currentDraggedField = null;\n  }\n\n  displayTransitionSelection(): boolean {\n    return (this.isSource && !this.mapping.transition.enableExpression &&\n      (this.mapping.transition.isOneToManyMode() || this.mapping.transition.isManyToOneMode()\n      || this.mapping.transition.isEnumerationMode()));\n  }\n\n  displayFieldSearchBox(): boolean {\n\n    const mappedFields = this.mapping.getMappedFields(this.isSource);\n    if (mappedFields.length === 0) {\n      return true;\n    } else if (mappedFields[0].field.isInCollection()) {\n      return false;\n    }\n\n    if (this.mapping.transition.mode === TransitionMode.ONE_TO_ONE) {\n      return true;\n    }\n    if (this.isSource) {\n      if (this.mapping.transition.mode === TransitionMode.MANY_TO_ONE) {\n        return !mappedFields[0].field.isInCollection();\n      }\n    } else {\n      if (this.mapping.transition.mode === TransitionMode.ONE_TO_MANY) {\n        return !mappedFields[0].field.isInCollection();\n      }\n    }\n    return false;\n  }\n\n  updateSearchFilter(value: string) {\n    this.searchFilter = value;\n  }\n\n  getSearchPlaceholder(): string {\n    return 'Begin typing to search for more ' + (this.isSource ? 'sources' : 'targets');\n  }\n\n  selectionChanged(event: any): void {\n    if (event.item['field']) {\n      this.cfg.mappingService.fieldSelected(event.item['field'], true);\n    }\n    this.searchFilter = '';\n  }\n\n  isAddButtonVisible(): boolean {\n    if (this.isSource && this.mapping.transition.isManyToOneMode()) {\n      return true;\n    } else if (!this.isSource && this.mapping.transition.isOneToManyMode()) {\n      return true;\n    }\n    return false;\n  }\n\n  getTopFieldTypeLabel(): string {\n    return this.isSource ? 'Source' : 'Target';\n  }\n\n  getAddButtonLabel(): string {\n    return this.isSource ? 'Add Source' : 'Add Target';\n  }\n\n  removeMappedField(mappedField: MappedField): void {\n    this.mapping.removeMappedField(mappedField);\n    this.cfg.mappingService.updateMappedField(this.mapping);\n  }\n}\n\n    \n\n    \n        \n\n  \n\n    \n      {{ '  ' + getDisplayName(model) }}\n    \n\n    \n      {{ getDisplayName(model) }}\n    \n\n  \n\n  \n\n    \n      \n\n        \n\n      \n      \n    \n\n    \n      \n    \n  \n\n  \n\n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'  \\' + getDisplayName(model) }}              {{ getDisplayName(model) }}                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingFieldContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingFieldDetailComponent.html":{"url":"components/MappingFieldDetailComponent.html","title":"component - MappingFieldDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingFieldDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-field-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-field-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                parentObjectName\n                            \n                            \n                                sourceIconCSSClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTransformation\n                            \n                            \n                                displayIndex\n                            \n                            \n                                displayParentObject\n                            \n                            \n                                getFieldPath\n                            \n                            \n                                    Private\n                                getParentObjectName\n                            \n                            \n                                    Private\n                                getSourceIconCSSClass\n                            \n                            \n                                indexSelectionChanged\n                            \n                            \n                                isTransformCapable\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeMappedField\n                            \n                            \n                                    Private\n                                updateTemplateValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                isSource\n                            \n                            \n                                mappedField\n                            \n                            \n                                mapping\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSource\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mappedField\n                    \n                \n                \n                    \n                        Type :         MappedField\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTransformation\n                        \n                        \n                    \n                \n            \n            \n                \naddTransformation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:51\n                \n            \n\n\n            \n                \n                    The add transformation icon has been selected.  Add a field action to the current\nmapped field.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayIndex\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayParentObject\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayParentObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldPath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getParentObjectName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getParentObjectName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getSourceIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceIconCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            indexSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nindexSelectionChanged(event: any, mappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:100\n                \n            \n\n\n            \n                \n                    The user has hand-edited the index value of a mapped field.  Perform the following:\n\nAdd place-holders for each index value between the updated value and its previous value.\nRe-sequence the field action indices.\nSort the mapped fields array to get then back into numerical order.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTransformCapable\n                        \n                        \n                    \n                \n            \n            \n                \nisTransformCapable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMappedField\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMappedField(mappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateTemplateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTemplateValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentObjectName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceIconCSSClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { MappingModel, MappedField } from '../../models/mapping.model';\nimport { FieldAction } from '../../models/field-action.model';\nimport { ErrorInfo, ErrorLevel, ErrorScope, ErrorType } from '../../models/error.model';\n\n@Component({\n  selector: 'mapping-field-detail',\n  templateUrl: './mapping-field-detail.component.html',\n})\n\nexport class MappingFieldDetailComponent implements OnInit {\n\n  @Input() cfg: ConfigModel;\n  @Input() mapping: MappingModel;\n  @Input() isSource: boolean;\n  @Input() mappedField: MappedField;\n\n  sourceIconCSSClass: string;\n  parentObjectName: string;\n\n  ngOnInit() {\n    this.updateTemplateValues();\n  }\n\n  isTransformCapable() {\n    return (!this.mappedField.isPadField() && this.mappedField.field.name.length > 0);\n  }\n\n  /**\n   * The add transformation icon has been selected.  Add a field action to the current\n   * mapped field.\n   */\n  addTransformation(): void {\n    const actionDefinition = this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, this.isSource)[0];\n    if (actionDefinition == null) {\n      this.cfg.errorService.addError(new ErrorInfo({message: 'The selected field has no applicable transformation actions.',\n        level: ErrorLevel.INFO, scope: ErrorScope.MAPPING, type: ErrorType.USER}));\n      return;\n    }\n    const action: FieldAction = new FieldAction();\n    actionDefinition.populateFieldAction(action);\n    this.mappedField.actions.push(action);\n    this.cfg.mappingService.notifyMappingUpdated();\n  }\n\n  getFieldPath(): string {\n    if (this.mappedField == null || this.mappedField.field == null) {\n      return '[None]';\n    }\n    return this.mappedField.field.path;\n  }\n\n  displayParentObject(): boolean {\n    if (this.mappedField != null && this.mappedField.isPadField()) {\n      this.parentObjectName = '';\n      return true;\n    }\n    if (this.mappedField == null || this.mappedField.field == null\n      || this.mappedField.field.name === null\n      || this.mappedField.field.name.length === 0\n      || this.mappedField.field.docDef == null) {\n      return false;\n    }\n    if (this.parentObjectName == null || this.parentObjectName.length === 0) {\n      this.updateTemplateValues();\n    }\n    return true;\n  }\n\n  displayIndex(): boolean {\n    return this.mapping.getMappedFields(this.isSource).length > 1 && !this.mapping.transition.enableExpression;\n  }\n\n  /**\n   * The user has hand-edited the index value of a mapped field.  Perform the following:\n   *   - Add place-holders for each index value between the updated value and its previous value.\n   *   - Re-sequence the field action indices.\n   *   - Sort the mapped fields array to get then back into numerical order.\n   * @param event\n   * @param mappedField\n   */\n  indexSelectionChanged(event: any, mappedField: MappedField): void {\n    const insertionIndex = Number(event.target.value) || 0;\n    if (insertionIndex === 0) {\n      return;\n    }\n    const mappedFields = this.mapping.getMappedFields(mappedField.isSource());\n    const targetIndex = mappedFields.length;\n    if (insertionIndex > targetIndex) {\n\n      // Add place-holders for each index value between the previous max index and the insertion index.\n      this.cfg.mappingService.addPlaceholders(insertionIndex - mappedFields.length,\n        this.mapping, targetIndex, mappedField.field.isSource());\n    }\n    this.cfg.mappingService.moveMappedFieldTo(this.mapping, mappedField, insertionIndex);\n    this.cfg.mappingService.notifyMappingUpdated();\n  }\n\n  removeMappedField(mappedField: MappedField): void {\n    this.mapping.removeMappedField(mappedField);\n    this.cfg.mappingService.updateMappedField(this.mapping);\n  }\n\n  private updateTemplateValues(): void {\n    this.sourceIconCSSClass = this.getSourceIconCSSClass();\n    this.parentObjectName = this.getParentObjectName();\n  }\n\n  private getSourceIconCSSClass(): string {\n    return this.isSource ? 'fa fa-hdd-o' : 'fa fa-download';\n  }\n\n  private getParentObjectName() {\n    if (this.mappedField == null || this.mappedField.field == null || this.mappedField.field.docDef == null) {\n      return '';\n    }\n    return this.mappedField.field.docDef.getName(ConfigModel.getConfig().showTypes);\n  }\n}\n\n    \n\n    \n        \n\n{{ model['field'].docDef == null ?\n  'Not yet defined' : model['field'].docDef.name }}\n{{ model['field'].path }}\n\n\n\n\n\n\n  \n     {{ parentObjectName }}\n  \n  {{ getFieldPath() }}\n  ({{ mappedField.field.type }})\n  \n\n\n\n\n\n  \n\n    \n    \n    \n\n    \n    \n      {{ mappedField.field.name }}\n    \n\n    \n    \n      Index:\n\n      \n        \n          {{ mapping.getIndexForMappedField(mappedField) }}\n        \n        \n          \n        \n      \n      \n        \n      \n    \n  \n\n  \n\n  \n  \n    \n      \n        Add Transformation\n      \n    \n    \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ model[\\'field\\'].docDef == null ?  \\'Not yet defined\\' : model[\\'field\\'].docDef.name }}{{ model[\\'field\\'].path }}       {{ parentObjectName }}    {{ getFieldPath() }}  ({{ mappedField.field.type }})                              {{ mappedField.field.name }}                  Index:                        {{ mapping.getIndexForMappedField(mappedField) }}                                                                                          Add Transformation                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingFieldDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingListComponent.html":{"url":"components/MappingListComponent.html","title":"component - MappingListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-list\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorSubscription\n                            \n                            \n                                searchFilter\n                            \n                            \n                                searchMode\n                            \n                            \n                                    Private\n                                searchResults\n                            \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fieldPairMatchesSearch\n                            \n                            \n                                getItemsCSSClass\n                            \n                            \n                                getMappedFields\n                            \n                            \n                                getMappingCSSClass\n                            \n                            \n                                getMappingRowsCSSClass\n                            \n                            \n                                getMappings\n                            \n                            \n                                getRowTitleCSSClass\n                            \n                            \n                                getSearchIconCSSClass\n                            \n                            \n                                isActiveMapping\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                search\n                            \n                            \n                                searchResultsVisible\n                            \n                            \n                                selectMapping\n                            \n                            \n                                    Private\n                                storeErrors\n                            \n                            \n                                toggleSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fieldPairMatchesSearch\n                        \n                        \n                    \n                \n            \n            \n                \nfieldPairMatchesSearch(mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItemsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetItemsCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedFields\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedFields(mapping: MappingModel, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MappedField[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappingCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappingCSSClass(mapping: MappingModel, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappingRowsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappingRowsCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappings\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MappingModel[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRowTitleCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetRowTitleCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSearchIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetSearchIconCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActiveMapping\n                        \n                        \n                    \n                \n            \n            \n                \nisActiveMapping(mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(searchFilter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchFilter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchResultsVisible\n                        \n                        \n                    \n                \n            \n            \n                \nsearchResultsVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectMapping\n                        \n                        \n                    \n                \n            \n            \n                \nselectMapping(mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            storeErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    storeErrors(errors: ErrorInfo[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSearch\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnDestroy } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\nimport { MappingModel, MappedField } from '../../models/mapping.model';\nimport { ErrorInfo, ErrorScope, ErrorType } from '../../models/error.model';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'mapping-list',\n  templateUrl: './mapping-list.component.html',\n})\n\nexport class MappingListComponent implements OnInit, OnDestroy {\n  @Input() cfg: ConfigModel;\n\n  searchMode = false;\n  searchFilter = '';\n  validationErrors = new Map();\n  private searchResults: MappingModel[] = [];\n  private errorSubscription: Subscription;\n\n  ngOnInit() {\n    this.cfg.mappingService.notifyMappingUpdated();\n    this.storeErrors(this.cfg.errorService.getErrors());\n    this.errorSubscription = this.cfg.errorService.subscribe(errors => {\n      this.storeErrors(errors);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.errorSubscription) {\n      this.errorSubscription.unsubscribe();\n    }\n  }\n\n  getItemsCSSClass(): string {\n    return 'items mappings' + (this.searchMode ? ' searchShown' : '');\n  }\n\n  searchResultsVisible(): boolean {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      return false;\n    }\n    return (this.searchResults.length === 0);\n  }\n\n  getMappingCSSClass(mapping: MappingModel, index: number): string {\n    let cssClass = 'item ';\n    cssClass += (index % 2 === 1) ? ' even' : '';\n    if (mapping === this.cfg.mappings.activeMapping) {\n      cssClass += ' active';\n    }\n    return cssClass;\n  }\n\n  selectMapping(mapping: MappingModel): void {\n    this.cfg.mappingService.selectMapping(mapping);\n  }\n\n  getRowTitleCSSClass(): string {\n    return this.searchMode ? 'rowTitles searchShown' : 'rowTitles';\n  }\n\n  getMappingRowsCSSClass(): string {\n    return this.searchMode ? 'rows searchShown' : 'rows';\n  }\n\n  getMappings(): MappingModel[] {\n    return this.searchMode ? this.searchResults : [].concat(this.cfg.mappings.getAllMappings(true));\n  }\n\n  getMappedFields(mapping: MappingModel, isSource: boolean): MappedField[] {\n    return mapping.getUserMappedFields(isSource);\n  }\n\n  toggleSearch(): void {\n    this.searchMode = !this.searchMode;\n    this.search(this.searchFilter);\n  }\n\n  getSearchIconCSSClass(): string {\n    const cssClass = 'fa fa-search searchBoxIcon link';\n    return this.searchMode ? (cssClass + ' selectedIcon') : cssClass;\n  }\n\n  fieldPairMatchesSearch(mapping: MappingModel): boolean {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      return true;\n    }\n    const filter: string = this.searchFilter.toLowerCase();\n    const transitionName: string = mapping.transition.getPrettyName();\n    if (transitionName != null && transitionName.toLowerCase().includes(filter)) {\n      return true;\n    }\n    for (const mappedField of mapping.getAllMappedFields()) {\n      const field: Field = mappedField.field;\n      if (field == null || field.path == null) {\n        continue;\n      }\n      if (field.path.toLowerCase().includes(filter)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isActiveMapping(mapping: MappingModel): boolean {\n    return this.cfg.mappings.activeMapping === mapping;\n  }\n\n  private search(searchFilter: string): void {\n    this.searchFilter = searchFilter;\n\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      this.searchResults = [].concat(this.cfg.mappings.getAllMappings(true));\n      return;\n    }\n\n    this.searchResults = [];\n    for (const mapping of this.cfg.mappings.getAllMappings(true)) {\n      if (this.fieldPairMatchesSearch(mapping)) {\n        this.searchResults.push(mapping);\n        break;\n      }\n    }\n  }\n\n  private storeErrors(errors: ErrorInfo[]) {\n    this.validationErrors = new Map();\n    errors.forEach(e => {\n      if (e.scope !== ErrorScope.MAPPING || e.type !== ErrorType.VALIDATION || !e.mapping) {\n        return;\n      }\n      if (!this.validationErrors.has(e.mapping)) {\n        this.validationErrors.set(e.mapping, []);\n      }\n      this.validationErrors.get(e.mapping).push(e);\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          Mappings\n        \n        \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          \n            Sources\n          \n            Targets\n          \n            Type\n          \n        \n        \n      \n    \n    \n      \n        \n          \n            \n              \n              &nbsp;\n              \n            \n            \n              \n              &nbsp;\n              \n            \n            \n              {{ mapping.transition.getPrettyName() }}\n              \n            \n            \n              \n            \n            \n          \n        \n      \n      \n        No search results.\n        \n      \n    \n    {{ cfg.mappings.mappings.length }} mappings\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Mappings                                                                                                                Sources                      Targets                      Type                                                                                                                                                                                                                                {{ mapping.transition.getPrettyName() }}                                                                                                                  No search results.                      {{ cfg.mappings.mappings.length }} mappings      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingListFieldComponent.html":{"url":"components/MappingListFieldComponent.html","title":"component - MappingListFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingListFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-list-field\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-list-field.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayParentObject\n                            \n                            \n                                getFieldPath\n                            \n                            \n                                getParentObjectName\n                            \n                            \n                                getSourceIconCSSClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                isActive\n                            \n                            \n                                isSource\n                            \n                            \n                                mappedField\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isActive\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSource\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mappedField\n                    \n                \n                \n                    \n                        Type :         MappedField\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayParentObject\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayParentObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldPath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParentObjectName\n                        \n                        \n                    \n                \n            \n            \n                \ngetParentObjectName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSourceIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetSourceIconCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { MappedField } from '../../models/mapping.model';\n\n@Component({\n  selector: 'mapping-list-field',\n  templateUrl: './mapping-list-field.component.html',\n})\n\nexport class MappingListFieldComponent {\n  @Input() mappedField: MappedField;\n  @Input() isSource: boolean;\n  @Input() isActive: boolean;\n  @Input() cfg: ConfigModel;\n\n  getSourceIconCSSClass(): string {\n    return this.isSource ? 'fa fa-hdd-o' : 'fa fa-download';\n  }\n\n  getFieldPath(): string {\n    if (this.mappedField == null || this.mappedField.field == null) {\n      return '[None]';\n    }\n    return this.mappedField.field.getFieldLabel(ConfigModel.getConfig().showTypes, true);\n  }\n\n  displayParentObject(): boolean {\n    if (this.mappedField == null || this.mappedField.field == null\n      || this.mappedField.field.docDef == null) {\n      return false;\n    }\n    return true;\n  }\n\n  getParentObjectName() {\n    if (this.mappedField == null || this.mappedField.field == null || this.mappedField.field.docDef == null) {\n      return '';\n    }\n    return this.mappedField.field.docDef.getName(ConfigModel.getConfig().showTypes);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ getParentObjectName() }}\n    \n    {{ getFieldPath() }}\n    \n  \n\n\n\n  \n    \n      \n        \n          {{ getFieldPath() }}\n           0\">\n        \n      \n    \n  \n\n  \n    \n      \n        \n        \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ getParentObjectName() }}        {{ getFieldPath() }}                                    {{ getFieldPath() }}           0\">                                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingListFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingSelectionComponent.html":{"url":"components/MappingSelectionComponent.html","title":"component - MappingSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-selection\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                mappings\n                            \n                            \n                                modalWindow\n                            \n                            \n                                sectionComponents\n                            \n                            \n                                selectedField\n                            \n                            \n                                    Private\n                                selectedMappingComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMapping\n                            \n                            \n                                getFormattedOutputPath\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                getSelectedMapping\n                            \n                            \n                                    Private\n                                getSelectedMappingComponent\n                            \n                            \n                                isDataValid\n                            \n                            \n                                selectionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addMapping\n                        \n                        \n                    \n                \n            \n            \n                \naddMapping()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFormattedOutputPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetFormattedOutputPath(path: string, nameOnly: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nameOnly\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSelectedMapping\n                        \n                        \n                    \n                \n            \n            \n                \ngetSelectedMapping()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MappingModel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getSelectedMappingComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSelectedMappingComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MappingSelectionSectionComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged(c: MappingSelectionSectionComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                MappingSelectionSectionComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalWindow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sectionComponents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('mappingSection')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedMappingComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingSelectionSectionComponent\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChildren, QueryList, ElementRef } from '@angular/core';\n\nimport { MappingModel } from '../../models/mapping.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\n\nimport { ModalWindowComponent, ModalWindowValidator } from '../modal/modal-window.component';\nimport { MappingSelectionSectionComponent } from './mapping-selection-section.component';\n\n@Component({\n  selector: 'mapping-selection',\n  templateUrl: './mapping-selection.component.html',\n})\n\nexport class MappingSelectionComponent implements ModalWindowValidator {\n  modalWindow: ModalWindowComponent;\n  mappings: MappingModel[];\n  selectedField: Field = null;\n  cfg: ConfigModel;\n\n  @ViewChildren('mappingSection') sectionComponents: QueryList;\n\n  private selectedMappingComponent: MappingSelectionSectionComponent = null;\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n  selectionChanged(c: MappingSelectionSectionComponent) {\n    const self: MappingSelectionComponent = c.parentComponent as MappingSelectionComponent;\n    const oldSelectedItem: MappingSelectionSectionComponent = self.getSelectedMappingComponent();\n    oldSelectedItem.selected = false;\n    c.selected = true;\n    self.selectedMappingComponent = c;\n  }\n\n  getFormattedOutputPath(path: string, nameOnly: boolean) {\n    path = path.replace('.', '/');\n    const index: number = path.lastIndexOf('/');\n    const fieldName: string = (index === -1) ? path : path.substr(path.lastIndexOf('/') + 1);\n    path = (index === -1) ? '' : path.substr(0, path.lastIndexOf('/') + 1);\n    return nameOnly ? fieldName : path;\n  }\n\n  addMapping() {\n    this.cfg.mappingService.addNewMapping(this.selectedField, false);\n    this.modalWindow.close();\n  }\n\n  getSelectedMapping(): MappingModel {\n    return this.getSelectedMappingComponent().mapping;\n  }\n\n  private getSelectedMappingComponent(): MappingSelectionSectionComponent {\n    if (this.selectedMappingComponent == null) {\n      for (const c of this.sectionComponents.toArray()) {\n        if (c.selected) {\n          this.selectedMappingComponent = c;\n          break;\n        }\n      }\n    }\n    return this.selectedMappingComponent;\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ selectedField.isSource() ? 'Source' : 'Target' }}\n    \n      {{ getFormattedOutputPath(selectedField.path, false) }}\n      {{ getFormattedOutputPath(selectedField.path, true) }}\n      \n    \n    \n    \n      Add New Mapping\n    \n  \n  \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ selectedField.isSource() ? \\'Source\\' : \\'Target\\' }}          {{ getFormattedOutputPath(selectedField.path, false) }}      {{ getFormattedOutputPath(selectedField.path, true) }}                        Add New Mapping                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingSelectionSectionComponent.html":{"url":"components/MappingSelectionSectionComponent.html","title":"component - MappingSelectionSectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingSelectionSectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-selection-section\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-selection-section.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClass\n                            \n                            \n                                getFormattedOutputPath\n                            \n                            \n                                getSourceTargetLabelText\n                            \n                            \n                                handleMouseClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOddRow\n                            \n                            \n                                mapping\n                            \n                            \n                                outputNumber\n                            \n                            \n                                parentComponent\n                            \n                            \n                                selected\n                            \n                            \n                                selectedCallback\n                            \n                            \n                                selectedFieldIsSource\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOddRow\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        outputNumber\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentComponent\n                    \n                \n                \n                    \n                        Type :         Component\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedCallback\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedFieldIsSource\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFormattedOutputPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetFormattedOutputPath(path: string, nameOnly: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nameOnly\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSourceTargetLabelText\n                        \n                        \n                    \n                \n            \n            \n                \ngetSourceTargetLabelText(isSource: boolean, mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseClick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { MappingModel } from '../../models/mapping.model';\n\n@Component({\n  selector: 'mapping-selection-section',\n  templateUrl: './mapping-selection-section.component.html',\n})\n\nexport class MappingSelectionSectionComponent {\n  @Input() outputNumber: number;\n  @Input() mapping: MappingModel;\n  @Input() selectedCallback: Function;\n  @Input() selected = false;\n  @Input() selectedFieldIsSource = false;\n  @Input() parentComponent: Component;\n  @Input() isOddRow = false;\n\n  getClass(): string {\n    let cssClass = 'MappingSelectionSection';\n    if (this.selected) {\n      cssClass += ' SelectedMappingSelectionSection';\n    }\n    if (this.isOddRow) {\n      cssClass += ' odd';\n    }\n    return cssClass;\n  }\n\n  getSourceTargetLabelText(isSource: boolean, mapping: MappingModel): string {\n    if (isSource) {\n      return (mapping.sourceFields.length > 0) ? 'Sources' : 'Source';\n    }\n    return (mapping.targetFields.length > 0) ? 'Targets' : 'Target';\n  }\n\n  getFormattedOutputPath(path: string, nameOnly: boolean) {\n    if (path == null) {\n      return '';\n    }\n    path = path.replace('.', '/');\n    const index: number = path.lastIndexOf('/');\n    const fieldName: string = (index === -1) ? path : path.substr(path.lastIndexOf('/') + 1);\n    path = (index === -1) ? '' : path.substr(0, path.lastIndexOf('/') + 1);\n    return nameOnly ? fieldName : path;\n  }\n\n  handleMouseClick(event: MouseEvent) {\n    this.selectedCallback(this);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ outputNumber + 1 }}\n  \n  \n    \n      \n        {{ getSourceTargetLabelText(true, mapping) }}\n        \n          \n            \n              \n              {{ getFormattedOutputPath(sourceField.field.path, false) }}\n            \n            {{ getFormattedOutputPath(sourceField.field.path, true) }}\n            \n          \n        \n      \n      \n        {{ getSourceTargetLabelText(false, mapping) }}\n        \n          \n            \n              \n              {{ getFormattedOutputPath(targetField.field.path, false) }}\n            \n            {{ getFormattedOutputPath(targetField.field.path, true) }}\n            \n          \n        \n      \n    \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ outputNumber + 1 }}                      {{ getSourceTargetLabelText(true, mapping) }}                                                          {{ getFormattedOutputPath(sourceField.field.path, false) }}                        {{ getFormattedOutputPath(sourceField.field.path, true) }}                                                  {{ getSourceTargetLabelText(false, mapping) }}                                                          {{ getFormattedOutputPath(targetField.field.path, false) }}                        {{ getFormattedOutputPath(targetField.field.path, true) }}                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingSelectionSectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MappingUtil.html":{"url":"classes/MappingUtil.html","title":"class - MappingUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MappingUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts\n        \n\n            \n                Description\n            \n            \n                Static routines for handling mappings.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getDocById\n                            \n                            \n                                    Private\n                                    Static\n                                isMappingStale\n                            \n                            \n                                    Static\n                                removeStaleMappings\n                            \n                            \n                                    Static\n                                updateDocumentNamespacesFromMappings\n                            \n                            \n                                    Static\n                                updateMappedFieldsFromDocuments\n                            \n                            \n                                    Static\n                                updateMappingsFromDocuments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getDocById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDocById(documentId: string, docs: DocumentDefinition[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    documentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docs\n                                    \n                                                DocumentDefinition[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DocumentDefinition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            isMappingStale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMappingStale(mapping: MappingModel, sourceFieldPaths: string[], targetSourcePaths: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sourceFieldPaths\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetSourcePaths\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            removeStaleMappings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeStaleMappings(cfg: ConfigModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:167\n                \n            \n\n\n            \n                \n                    Check all mappings in the current context and remove if it refers to un-existing fields.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ConfigModel\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateDocumentNamespacesFromMappings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDocumentNamespacesFromMappings(cfg: ConfigModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateMappedFieldsFromDocuments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMappedFieldsFromDocuments(mapping: MappingModel, cfg: ConfigModel, docMap: any, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docMap\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateMappingsFromDocuments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMappingsFromDocuments(cfg: ConfigModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PaddingField, DocumentDefinition } from '../models/document-definition.model';\nimport { MappingModel, MappedField } from '../models/mapping.model';\nimport { ConfigModel } from '../models/config.model';\nimport { Field } from '../models/field.model';\nimport { Multiplicity } from '../models/field-action.model';\nimport { ErrorType, ErrorScope, ErrorInfo, ErrorLevel } from '../models/error.model';\n\n/**\n * Static routines for handling mappings.\n */\nexport class MappingUtil {\n\n  static updateMappingsFromDocuments(cfg: ConfigModel): void {\n    const sourceDocMap = cfg.getDocUriMap(cfg, true);\n    const targetDocMap = cfg.getDocUriMap(cfg, false);\n\n    for (const mapping of cfg.mappings.mappings) {\n      MappingUtil.updateMappedFieldsFromDocuments(mapping, cfg, sourceDocMap, true);\n      MappingUtil.updateMappedFieldsFromDocuments(mapping, cfg, targetDocMap, false);\n    }\n    for (const doc of cfg.getAllDocs()) {\n      if (doc.id == null) {\n        doc.id = 'DOC.' + doc.name + '.' + Math.floor((Math.random() * 1000000) + 1).toString();\n      }\n    }\n  }\n\n  static updateMappedFieldsFromDocuments(mapping: MappingModel, cfg: ConfigModel, docMap: any, isSource: boolean): void {\n    let mappedFields: MappedField[] = mapping.getMappedFields(isSource);\n    let mappedFieldIndex = -1;\n\n    for (const mappedField of mappedFields) {\n      let doc: DocumentDefinition = null;\n      mappedFieldIndex += 1;\n\n      if (mappedField.parsedData.fieldIsProperty) {\n        doc = cfg.propertyDoc;\n      } else if (mappedField.parsedData.fieldIsConstant) {\n        doc = cfg.constantDoc;\n      } else {\n        if (docMap === null) {\n          docMap = cfg.getDocUriMap(cfg, isSource);\n        }\n        doc = docMap[mappedField.parsedData.parsedDocURI] as DocumentDefinition;\n        if (doc == null) {\n          if (mappedField.parsedData.parsedName != null) {\n            cfg.errorService.addError(new ErrorInfo({\n              message: `Could not find document for mapped field \\'${mappedField.parsedData.parsedName}\\' \\\nat URI ${mappedField.parsedData.parsedDocURI}`,\n              level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL}));\n          }\n          continue;\n        }\n\n        if (mappedField.parsedData.parsedDocID == null) {\n          cfg.errorService.addError(new ErrorInfo({message: `Could not find doc ID for mapped field ${mappedField.parsedData.parsedName}`,\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL}));\n          continue;\n        }\n        doc.id = mappedField.parsedData.parsedDocID;\n      }\n      mappedField.field = null;\n      if (!mappedField.parsedData.userCreated) {\n        mappedField.field = doc.getField(mappedField.parsedData.parsedPath);\n      }\n      if (mappedField.field == null) {\n        if (mappedField.parsedData.fieldIsConstant || mappedField.parsedData.fieldIsProperty) {\n          const constantField: Field = new Field();\n          constantField.value = mappedField.parsedData.parsedValue;\n          constantField.type = mappedField.parsedData.parsedValueType;\n          constantField.displayName = constantField.value;\n          constantField.name = constantField.value;\n          constantField.path = constantField.value;\n          constantField.userCreated = true;\n          mappedField.field = constantField;\n          doc.addField(constantField);\n        } else if (mappedField.parsedData.userCreated || mappedField.parsedData.parsedPath) {\n          const path: string = mappedField.parsedData.parsedPath;\n\n          mappedField.field = new Field();\n          mappedField.field.serviceObject.jsonType = 'io.atlasmap.xml.v2.XmlField';\n          mappedField.field.path = path;\n          mappedField.field.type = mappedField.parsedData.parsedValueType;\n          mappedField.field.userCreated = true;\n\n          const lastSeparator: number = path.lastIndexOf('/');\n\n          const parentPath: string = (lastSeparator > 0) ? path.substring(0, lastSeparator) : null;\n          let fieldName: string = (lastSeparator === -1) ? path : path.substring(lastSeparator + 1);\n          let namespaceAlias: string = null;\n          if (fieldName.indexOf(':') !== -1) {\n            namespaceAlias = fieldName.split(':')[0];\n            fieldName = fieldName.split(':')[1];\n          }\n\n          mappedField.field.name = fieldName;\n          mappedField.field.displayName = fieldName;\n          mappedField.field.isAttribute = (fieldName.indexOf('@') !== -1);\n          mappedField.field.namespaceAlias = namespaceAlias;\n\n          if (parentPath != null) {\n            mappedField.field.parentField = doc.getField(parentPath);\n          }\n\n          doc.addField(mappedField.field);\n        } else {\n          cfg.errorService.addError(new ErrorInfo({\n            message: `Could not find field from document for mapped field \\'${mappedField.parsedData.parsedName}\\'`,\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL,\n            object: { 'mappedField': mappedField, 'doc': doc }}));\n          return;\n        }\n      }\n\n      // Process field actions.\n      mappedField.actions = [];\n      if (mappedField.parsedData.parsedActions.length > 0) {\n\n        for (const action of mappedField.parsedData.parsedActions) {\n          let actionDefinition = null;\n          if (action.name === 'CustomAction') {\n            actionDefinition = cfg.fieldActionService.getActionDefinitionForName(action.argumentValues[0].value, Multiplicity.ONE_TO_ONE);\n          } else {\n            actionDefinition = cfg.fieldActionService.getActionDefinitionForName(action.name, Multiplicity.ONE_TO_ONE);\n          }\n          if (actionDefinition == null) {\n            cfg.errorService.addError(new ErrorInfo({message: `Could not find field action definition for action \\'${action.name}\\'`,\n              level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL}));\n            continue;\n          }\n          actionDefinition.populateFieldAction(action);\n          mappedField.actions.push(action);\n        }\n      }\n\n      const zeroBasedIndex = +mappedField.parsedData.parsedIndex;\n      mappedFields = mapping.getMappedFields(isSource);\n      if (zeroBasedIndex \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalErrorDetailComponent.html":{"url":"components/ModalErrorDetailComponent.html","title":"component - ModalErrorDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalErrorDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-error-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./modal-error-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getErrors\n                            \n                            \n                                getInfos\n                            \n                            \n                                getWarnings\n                            \n                            \n                                handleAlertClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errors\n                            \n                            \n                                errorService\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n                \n                    \n                        Type :         ErrorInfo[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorService\n                    \n                \n                \n                    \n                        Type :         ErrorHandlerService\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInfos\n                        \n                        \n                    \n                \n            \n            \n                \ngetInfos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWarnings\n                        \n                        \n                    \n                \n            \n            \n                \ngetWarnings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleAlertClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleAlertClick(error: ErrorInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                ErrorInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ErrorInfo, ErrorLevel } from '../../models/error.model';\nimport { ErrorHandlerService } from '../../services/error-handler.service';\n\n@Component({\n  selector: 'modal-error-detail',\n  templateUrl: './modal-error-detail.component.html',\n})\nexport class ModalErrorDetailComponent {\n  @Input() errors: ErrorInfo[];\n  @Input() errorService: ErrorHandlerService;\n\n  getErrors(): ErrorInfo[] {\n    return this.errors.filter(e => e.level === ErrorLevel.ERROR);\n  }\n\n  getWarnings(): ErrorInfo[] {\n    return this.errors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  getInfos(): ErrorInfo[] {\n    return this.errors.filter(e => e.level === ErrorLevel.INFO);\n  }\n\n  handleAlertClick(error: ErrorInfo) {\n    if (error && error.identifier) {\n      this.errorService.removeError(error.identifier, error.scope);\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      \n    \n    {{ i.message }}\n  \n\n  \n    \n      \n    \n    \n    {{ e.message }}\n  \n\n  \n    \n      \n    \n    \n    {{ w.message }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ i.message }}                          {{ e.message }}                          {{ w.message }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalErrorDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalErrorWindowComponent.html":{"url":"components/ModalErrorWindowComponent.html","title":"component - ModalErrorWindowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalErrorWindowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-error-window\n            \n\n\n\n\n            \n                templateUrl\n                ./modal-error-window.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                cfg\n                            \n                            \n                                confirmButtonDisabled\n                            \n                            \n                                    Public\n                                detector\n                            \n                            \n                                errors\n                            \n                            \n                                fade\n                            \n                            \n                                headerText\n                            \n                            \n                                message\n                            \n                            \n                                myTarget\n                            \n                            \n                                nestedComponent\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                dismissAll\n                            \n                            \n                                getErrors\n                            \n                            \n                                getWarnings\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                            \n                                setErrors\n                            \n                            \n                                show\n                            \n                            \n                                somethingToShow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(detector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        detector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dismissAll\n                        \n                        \n                    \n                \n            \n            \n                \ndismissAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWarnings\n                        \n                        \n                    \n                \n            \n            \n                \ngetWarnings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setErrors\n                        \n                        \n                    \n                \n            \n            \n                \nsetErrors(errors: ErrorInfo[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            somethingToShow\n                        \n                        \n                    \n                \n            \n            \n                \nsomethingToShow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Dismiss All'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmButtonDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            detector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorInfo[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fade\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headerText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Errors and Warnings - Current Active Mapping'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('dyn_target', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nestedComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalErrorWindowValidator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component, ViewChildren, QueryList, OnInit,\n  ViewContainerRef, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../../models/config.model';\nimport { ErrorInfo, ErrorLevel } from '../../models/error.model';\n\nexport interface ModalErrorWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'modal-error-window',\n  templateUrl: './modal-error-window.component.html',\n})\n\nexport class ModalErrorWindowComponent implements OnInit {\n  cfg: ConfigModel = null;\n  message: string = null;\n  nestedComponent: ModalErrorWindowValidator;\n  confirmButtonDisabled = false;\n  headerText = 'Errors and Warnings - Current Active Mapping';\n  buttonText = 'Dismiss All';\n  visible = false;\n  fade = false;\n  errors: ErrorInfo[];\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  constructor(public detector: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.cfg = ConfigModel.getConfig();\n  }\n\n  setErrors(errors: ErrorInfo[]) {\n    this.errors = errors;\n    if (!this.errors || this.errors.length === 0) {\n      this.close();\n    }\n  }\n\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.visible = false;\n    }, 300);\n  }\n\n  somethingToShow(): boolean {\n    return (this.errors && this.errors.length > 0);\n  }\n\n  show(): void {\n    this.message = '';\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.message = 'Hello!';\n  }\n\n  getErrors(): ErrorInfo[] {\n    return this.errors.filter(e => e.level === ErrorLevel.ERROR);\n  }\n\n  getWarnings(): ErrorInfo[] {\n    return this.errors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  dismissAll(): void {\n    this.cfg.errorService.clearAllErrors();\n    this.close();\n  }\n}\n\n    \n\n    \n        \n   -->\n  \n    \n      \n        \n          \n            \n              \n            \n          \n          {{ headerText }}\n          \n             {{ getWarnings().length }}\n             | \n             {{ getErrors().length }}\n          \n        \n        \n        \n        \n          \n            \n          \n          \n        \n        \n          \n            {{ buttonText }} \n            Cancel -->\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->                                                                                        {{ headerText }}                       {{ getWarnings().length }}             |              {{ getErrors().length }}                                                                                                                          {{ buttonText }}             Cancel -->                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalErrorWindowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalErrorWindowValidator.html":{"url":"interfaces/ModalErrorWindowValidator.html","title":"interface - ModalErrorWindowValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModalErrorWindowValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getInitialFocusElement\n                                \n                                \n                                    isDataValid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Component, ViewChildren, QueryList, OnInit,\n  ViewContainerRef, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../../models/config.model';\nimport { ErrorInfo, ErrorLevel } from '../../models/error.model';\n\nexport interface ModalErrorWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'modal-error-window',\n  templateUrl: './modal-error-window.component.html',\n})\n\nexport class ModalErrorWindowComponent implements OnInit {\n  cfg: ConfigModel = null;\n  message: string = null;\n  nestedComponent: ModalErrorWindowValidator;\n  confirmButtonDisabled = false;\n  headerText = 'Errors and Warnings - Current Active Mapping';\n  buttonText = 'Dismiss All';\n  visible = false;\n  fade = false;\n  errors: ErrorInfo[];\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  constructor(public detector: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.cfg = ConfigModel.getConfig();\n  }\n\n  setErrors(errors: ErrorInfo[]) {\n    this.errors = errors;\n    if (!this.errors || this.errors.length === 0) {\n      this.close();\n    }\n  }\n\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.visible = false;\n    }, 300);\n  }\n\n  somethingToShow(): boolean {\n    return (this.errors && this.errors.length > 0);\n  }\n\n  show(): void {\n    this.message = '';\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.message = 'Hello!';\n  }\n\n  getErrors(): ErrorInfo[] {\n    return this.errors.filter(e => e.level === ErrorLevel.ERROR);\n  }\n\n  getWarnings(): ErrorInfo[] {\n    return this.errors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  dismissAll(): void {\n    this.cfg.errorService.clearAllErrors();\n    this.close();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalWindowComponent.html":{"url":"components/ModalWindowComponent.html","title":"component - ModalWindowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalWindowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-window\n            \n\n\n\n\n            \n                templateUrl\n                ./modal-window.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                componentLoaded\n                            \n                            \n                                confirmButtonDisabled\n                            \n                            \n                                confirmButtonText\n                            \n                            \n                                    Public\n                                detector\n                            \n                            \n                                errors\n                            \n                            \n                                fade\n                            \n                            \n                                message\n                            \n                            \n                                    Private\n                                modalErrorSubject\n                            \n                            \n                                    Private\n                                modalErrorSubscription\n                            \n                            \n                                myTarget\n                            \n                            \n                                    Private\n                                myTargetChangesSubscription\n                            \n                            \n                                nestedComponent\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buttonClicked\n                            \n                            \n                                close\n                            \n                            \n                                closeClicked\n                            \n                            \n                                loadComponent\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                reset\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelButtonHandler\n                            \n                            \n                                cfg\n                            \n                            \n                                headerText\n                            \n                            \n                                modalErrorWindow\n                            \n                            \n                                nestedComponentInitializedCallback\n                            \n                            \n                                nestedComponentType\n                            \n                            \n                                okButtonHandler\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, detector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:77\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cancelButtonHandler\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        headerText\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalErrorWindow\n                    \n                \n                \n                    \n                        Type :         ModalErrorWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nestedComponentInitializedCallback\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nestedComponentType\n                    \n                \n                \n                    \n                        Type :     Type\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        okButtonHandler\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:59\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buttonClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buttonClicked(okClicked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    okClicked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeClicked\n                        \n                        \n                    \n                \n            \n            \n                \ncloseClicked(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadComponent\n                        \n                        \n                    \n                \n            \n            \n                \nloadComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            componentLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmButtonDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmButtonText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'OK'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            detector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorInfo[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fade\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            modalErrorSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            modalErrorSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('dyn_target', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            myTargetChangesSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nestedComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowValidator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:68\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component, Input, ViewChildren, QueryList, OnDestroy,\n  ViewContainerRef, Type, ComponentFactoryResolver, AfterViewInit, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../../models/config.model';\nimport { Subscription, Subject } from 'rxjs';\nimport { ModalErrorWindowComponent } from './modal-error-window.component';\nimport { ErrorInfo } from '../../models/error.model';\n\n// source: http://www.w3schools.com/howto/howto_css_modals.asp\n\nexport interface ModalWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'empty-modal-body',\n  template: '',\n})\n\nexport class EmptyModalBodyComponent implements ModalWindowValidator {\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n}\n\n@Component({\n  selector: 'modal-window',\n  templateUrl: './modal-window.component.html',\n})\n\nexport class ModalWindowComponent implements AfterViewInit, OnDestroy {\n  @Input() headerText = '';\n  @Input() nestedComponentType: Type;\n  @Input() nestedComponentInitializedCallback: Function;\n  @Input() okButtonHandler: Function;\n  @Input() cancelButtonHandler: Function;\n  @Input() cfg: ConfigModel;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  message: string = null;\n  nestedComponent: ModalWindowValidator;\n  confirmButtonDisabled = false;\n  confirmButtonText = 'OK';\n  visible = false;\n  fade = false;\n  errors: ErrorInfo[] = [];\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  private componentLoaded = false;\n  private myTargetChangesSubscription: Subscription;\n  private modalErrorSubject: Subject;\n  private modalErrorSubscription: Subscription;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, public detector: ChangeDetectorRef) { }\n\n  ngAfterViewInit() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n\n    // from: http://stackoverflow.com/questions/40811809/add-component-dynamically-inside-an-ngif\n    this.myTargetChangesSubscription = this.myTarget.changes.subscribe(changes => {\n      setTimeout(() => {\n        if (!this.componentLoaded && this.visible && this.myTarget && (this.myTarget.toArray().length)) {\n          this.loadComponent();\n        }\n        setTimeout(() => {\n          this.detector.detectChanges();\n        }, 10);\n      }, 10);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n    if (this.modalErrorSubscription) {\n      this.modalErrorSubscription.unsubscribe();\n    }\n    if (this.modalErrorSubject) {\n      this.modalErrorSubject.complete();\n    }\n  }\n\n  loadComponent(): void {\n    const viewContainerRef: ViewContainerRef = this.myTarget.toArray()[0];\n    viewContainerRef.clear();\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.nestedComponentType);\n    this.nestedComponent = viewContainerRef.createComponent(componentFactory).instance as ModalWindowValidator;\n    if (this.nestedComponentInitializedCallback != null) {\n      this.nestedComponentInitializedCallback(this);\n    }\n    const initialFocusElement = this.nestedComponent.getInitialFocusElement();\n    if (initialFocusElement) {\n      initialFocusElement.nativeElement.focus();\n    }\n    if (this.modalErrorSubject && !this.modalErrorSubject.closed) {\n      this.modalErrorSubject.complete();\n    }\n    this.modalErrorSubject = this.cfg.errorService.createFormErrorChannel();\n    this.modalErrorSubscription = this.modalErrorSubject.subscribe((errors: ErrorInfo[]) => {\n      this.errors = errors;\n    });\n  }\n\n  closeClicked(event: MouseEvent): void { this.buttonClicked(false); }\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.modalErrorSubject.complete();\n      this.errors = [];\n      this.visible = false;\n    }, 300);\n  }\n  show(): void {\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.nestedComponentInitializedCallback = null;\n    this.confirmButtonDisabled = false;\n    this.confirmButtonText = 'OK';\n    this.message = '';\n    this.headerText = '';\n    this.componentLoaded = false;\n    this.nestedComponentType = EmptyModalBodyComponent;\n    this.okButtonHandler = null;\n    this.cancelButtonHandler = null;\n  }\n\n  private buttonClicked(okClicked: boolean): void {\n    if (okClicked) {\n      if (this.nestedComponent != null) {\n        this.cfg.errorService.clearFormErrors();\n        if (!(this.nestedComponent.isDataValid())) {\n          return;\n        }\n      }\n      if (this.okButtonHandler) {\n        this.okButtonHandler(this);\n      }\n    } else { // cancel clicked\n      if (this.cancelButtonHandler) {\n        this.cancelButtonHandler(this);\n      }\n    }\n    this.close();\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          \n            \n              \n            \n          \n          {{ headerText }}\n        \n        \n          \n        \n        \n          {{ message }}\n          \n        \n        \n          \n            {{ confirmButtonText }} \n            Cancel\n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                          {{ headerText }}                                                    {{ message }}                                                {{ confirmButtonText }}             Cancel                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalWindowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalWindowValidator.html":{"url":"interfaces/ModalWindowValidator.html","title":"interface - ModalWindowValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModalWindowValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getInitialFocusElement\n                                \n                                \n                                    isDataValid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Component, Input, ViewChildren, QueryList, OnDestroy,\n  ViewContainerRef, Type, ComponentFactoryResolver, AfterViewInit, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../../models/config.model';\nimport { Subscription, Subject } from 'rxjs';\nimport { ModalErrorWindowComponent } from './modal-error-window.component';\nimport { ErrorInfo } from '../../models/error.model';\n\n// source: http://www.w3schools.com/howto/howto_css_modals.asp\n\nexport interface ModalWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'empty-modal-body',\n  template: '',\n})\n\nexport class EmptyModalBodyComponent implements ModalWindowValidator {\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n}\n\n@Component({\n  selector: 'modal-window',\n  templateUrl: './modal-window.component.html',\n})\n\nexport class ModalWindowComponent implements AfterViewInit, OnDestroy {\n  @Input() headerText = '';\n  @Input() nestedComponentType: Type;\n  @Input() nestedComponentInitializedCallback: Function;\n  @Input() okButtonHandler: Function;\n  @Input() cancelButtonHandler: Function;\n  @Input() cfg: ConfigModel;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  message: string = null;\n  nestedComponent: ModalWindowValidator;\n  confirmButtonDisabled = false;\n  confirmButtonText = 'OK';\n  visible = false;\n  fade = false;\n  errors: ErrorInfo[] = [];\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  private componentLoaded = false;\n  private myTargetChangesSubscription: Subscription;\n  private modalErrorSubject: Subject;\n  private modalErrorSubscription: Subscription;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, public detector: ChangeDetectorRef) { }\n\n  ngAfterViewInit() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n\n    // from: http://stackoverflow.com/questions/40811809/add-component-dynamically-inside-an-ngif\n    this.myTargetChangesSubscription = this.myTarget.changes.subscribe(changes => {\n      setTimeout(() => {\n        if (!this.componentLoaded && this.visible && this.myTarget && (this.myTarget.toArray().length)) {\n          this.loadComponent();\n        }\n        setTimeout(() => {\n          this.detector.detectChanges();\n        }, 10);\n      }, 10);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n    if (this.modalErrorSubscription) {\n      this.modalErrorSubscription.unsubscribe();\n    }\n    if (this.modalErrorSubject) {\n      this.modalErrorSubject.complete();\n    }\n  }\n\n  loadComponent(): void {\n    const viewContainerRef: ViewContainerRef = this.myTarget.toArray()[0];\n    viewContainerRef.clear();\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.nestedComponentType);\n    this.nestedComponent = viewContainerRef.createComponent(componentFactory).instance as ModalWindowValidator;\n    if (this.nestedComponentInitializedCallback != null) {\n      this.nestedComponentInitializedCallback(this);\n    }\n    const initialFocusElement = this.nestedComponent.getInitialFocusElement();\n    if (initialFocusElement) {\n      initialFocusElement.nativeElement.focus();\n    }\n    if (this.modalErrorSubject && !this.modalErrorSubject.closed) {\n      this.modalErrorSubject.complete();\n    }\n    this.modalErrorSubject = this.cfg.errorService.createFormErrorChannel();\n    this.modalErrorSubscription = this.modalErrorSubject.subscribe((errors: ErrorInfo[]) => {\n      this.errors = errors;\n    });\n  }\n\n  closeClicked(event: MouseEvent): void { this.buttonClicked(false); }\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.modalErrorSubject.complete();\n      this.errors = [];\n      this.visible = false;\n    }, 300);\n  }\n  show(): void {\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.nestedComponentInitializedCallback = null;\n    this.confirmButtonDisabled = false;\n    this.confirmButtonText = 'OK';\n    this.message = '';\n    this.headerText = '';\n    this.componentLoaded = false;\n    this.nestedComponentType = EmptyModalBodyComponent;\n    this.okButtonHandler = null;\n    this.cancelButtonHandler = null;\n  }\n\n  private buttonClicked(okClicked: boolean): void {\n    if (okClicked) {\n      if (this.nestedComponent != null) {\n        this.cfg.errorService.clearFormErrors();\n        if (!(this.nestedComponent.isDataValid())) {\n          return;\n        }\n      }\n      if (this.okButtonHandler) {\n        this.okButtonHandler(this);\n      }\n    } else { // cancel clicked\n      if (this.cancelButtonHandler) {\n        this.cancelButtonHandler(this);\n      }\n    }\n    this.close();\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NamespaceEditComponent.html":{"url":"components/NamespaceEditComponent.html","title":"component - NamespaceEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NamespaceEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                namespace-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./namespace-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                namespace\n                            \n                            \n                                targetEnabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                targetToggled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(namespace: NamespaceModel, namespaces: NamespaceModel[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    namespaces\n                                    \n                                                NamespaceModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            targetToggled\n                        \n                        \n                    \n                \n            \n            \n                \ntargetToggled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('namespace')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel\n\n                        \n                    \n                    \n                        \n                            Default value : new NamespaceModel()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { NamespaceModel } from '../../models/document-definition.model';\nimport { ModalWindowValidator } from '../modal/modal-window.component';\n\n@Component({\n  selector: 'namespace-edit',\n  templateUrl: './namespace-edit.component.html',\n})\n\nexport class NamespaceEditComponent implements ModalWindowValidator {\n  namespace: NamespaceModel = new NamespaceModel();\n  targetEnabled = true;\n  @ViewChild('namespace') private focusEl: ElementRef;\n\n  initialize(namespace: NamespaceModel, namespaces: NamespaceModel[]): void {\n    this.namespace = (namespace == null) ? new NamespaceModel() : namespace.copy();\n    if (!namespace.isTarget) {\n      for (const ns of namespaces) {\n        if (ns.isTarget) {\n          this.targetEnabled = false;\n          break;\n        }\n      }\n    }\n  }\n\n  targetToggled(): void {\n    this.namespace.isTarget = !this.namespace.isTarget;\n    this.namespace.alias = this.namespace.isTarget ? 'tns' : '';\n  }\n\n  isDataValid(): boolean {\n    const configModel: ConfigModel = ConfigModel.getConfig();\n    let dataIsValid: boolean = configModel.errorService.isRequiredFieldValid(this.namespace.alias, 'Alias');\n    dataIsValid = configModel.errorService.isRequiredFieldValid(this.namespace.uri, 'URI') && dataIsValid;\n    return dataIsValid;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n}\n\n    \n\n    \n        \n  \n    Alias\n    \n  \n  \n    URI\n    \n  \n  \n    Location URI\n    \n  \n  \n    Type\n    \n    Target Namespace\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Alias            URI            Location URI            Type        Target Namespace      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'NamespaceEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NamespaceListComponent.html":{"url":"components/NamespaceListComponent.html","title":"component - NamespaceListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NamespaceListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                namespace-list\n            \n\n\n\n\n            \n                templateUrl\n                ./namespace-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                searchFilter\n                            \n                            \n                                searchMode\n                            \n                            \n                                    Private\n                                searchResults\n                            \n                            \n                                    Private\n                                selectedNamespace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEditNamespace\n                            \n                            \n                                getItemsCSSClass\n                            \n                            \n                                getNamespaceCSSClass\n                            \n                            \n                                getNamespaces\n                            \n                            \n                                getRowsCSSClass\n                            \n                            \n                                getRowTitleCSSClass\n                            \n                            \n                                getSearchIconCSSClass\n                            \n                            \n                                namespaceMatchesSearch\n                            \n                            \n                                removeNamespace\n                            \n                            \n                                    Private\n                                search\n                            \n                            \n                                searchResultsVisible\n                            \n                            \n                                selectNamespace\n                            \n                            \n                                toggleSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEditNamespace\n                        \n                        \n                    \n                \n            \n            \n                \naddEditNamespace(ns: NamespaceModel, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ns\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItemsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetItemsCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNamespaceCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetNamespaceCSSClass(namespace: NamespaceModel, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNamespaces\n                        \n                        \n                    \n                \n            \n            \n                \ngetNamespaces()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         NamespaceModel[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRowsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetRowsCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRowTitleCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetRowTitleCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSearchIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetSearchIconCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            namespaceMatchesSearch\n                        \n                        \n                    \n                \n            \n            \n                \nnamespaceMatchesSearch(ns: NamespaceModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ns\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeNamespace\n                        \n                        \n                    \n                \n            \n            \n                \nremoveNamespace(ns: NamespaceModel, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ns\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(searchFilter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchFilter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchResultsVisible\n                        \n                        \n                    \n                \n            \n            \n                \nsearchResultsVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNamespace\n                        \n                        \n                    \n                \n            \n            \n                \nselectNamespace(ns: NamespaceModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ns\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSearch\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { NamespaceModel } from '../../models/document-definition.model';\nimport { NamespaceEditComponent } from '../app/namespace-edit.component';\nimport { ModalWindowComponent } from '../modal/modal-window.component';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\n\n@Component({\n  selector: 'namespace-list',\n  templateUrl: './namespace-list.component.html',\n})\n\nexport class NamespaceListComponent {\n  @Input() cfg: ConfigModel;\n  @Input() modalWindow: ModalWindowComponent;\n\n  searchMode = false;\n  private searchFilter = '';\n  private selectedNamespace: NamespaceModel = null;\n  private searchResults: NamespaceModel[] = [];\n\n  getNamespaceCSSClass(namespace: NamespaceModel, index: number): string {\n    let cssClass = 'item itemRow ';\n    cssClass += (index % 2 === 1) ? ' even' : '';\n    if (namespace === this.selectedNamespace) {\n      cssClass += ' active';\n    }\n    return cssClass;\n  }\n\n  searchResultsVisible(): boolean {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      return false;\n    }\n    return (this.searchResults.length === 0);\n  }\n\n  selectNamespace(ns: NamespaceModel): void {\n    this.selectedNamespace = (this.selectedNamespace === ns) ? null : ns;\n  }\n\n  getItemsCSSClass(): string {\n    return 'items namespaces' + (this.searchMode ? ' searchShown' : '');\n  }\n\n  getRowTitleCSSClass(): string {\n    return this.searchMode ? 'rowTitles searchShown' : 'rowTitles';\n  }\n\n  getRowsCSSClass(): string {\n    return this.searchMode ? 'rows searchShown' : 'rows';\n  }\n\n  getNamespaces(): NamespaceModel[] {\n    return this.searchMode ? this.searchResults : this.cfg.getFirstXmlDoc(false).namespaces;\n  }\n\n  addEditNamespace(ns: NamespaceModel, event: any): void {\n    event.stopPropagation();\n    const isEditMode = (ns != null);\n    if (!isEditMode) {\n      ns = new NamespaceModel();\n      ns.createdByUser = true;\n    }\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Save';\n    this.modalWindow.headerText = (ns == null) ? 'Add Namespace' : 'Edit Namespace';\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      const namespaceComponent: NamespaceEditComponent = mw.nestedComponent as NamespaceEditComponent;\n      namespaceComponent.initialize(ns, this.cfg.getFirstXmlDoc(false).namespaces);\n    };\n    this.modalWindow.nestedComponentType = NamespaceEditComponent;\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      const namespaceComponent: NamespaceEditComponent = mw.nestedComponent as NamespaceEditComponent;\n      const newNamespace: NamespaceModel = namespaceComponent.namespace;\n      if (isEditMode) {\n        ns.copyFrom(newNamespace);\n      } else {\n        this.cfg.getFirstXmlDoc(false).namespaces.push(newNamespace);\n      }\n      this.search(this.searchFilter);\n      this.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  toggleSearch(): void {\n    this.searchMode = !this.searchMode;\n    this.search(this.searchFilter);\n  }\n\n  getSearchIconCSSClass(): string {\n    const cssClass = 'fa fa-search searchBoxIcon link';\n    return this.searchMode ? (cssClass + ' selectedIcon') : cssClass;\n  }\n\n  namespaceMatchesSearch(ns: NamespaceModel): boolean {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      return true;\n    }\n    const filter: string = this.searchFilter.toLowerCase();\n    if (ns.isTarget && ('tns'.includes(filter) || 'target'.includes(filter))) {\n      return true;\n    }\n    if (ns.alias != null && ns.alias.toLowerCase().includes(filter)) {\n      return true;\n    }\n    if (ns.uri != null && ns.uri.toLowerCase().includes(filter)) {\n      return true;\n    }\n    if (ns.locationUri != null && ns.locationUri.toLowerCase().includes(filter)) {\n      return true;\n    }\n    return false;\n  }\n\n  removeNamespace(ns: NamespaceModel, event: any): void {\n    event.stopPropagation();\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Remove';\n    this.modalWindow.headerText = 'Remove Namespace?';\n    this.modalWindow.message = 'Are you sure you want to remove \\'' + ns.alias + '\\' ?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      DataMapperUtil.removeItemFromArray(ns, this.cfg.getFirstXmlDoc(false).namespaces);\n      this.selectedNamespace = null;\n      this.search(this.searchFilter);\n    };\n    this.modalWindow.show();\n  }\n\n  private search(searchFilter: string): void {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      this.searchResults = [].concat(this.cfg.getFirstXmlDoc(false).namespaces);\n      return;\n    }\n\n    this.searchFilter = searchFilter;\n    this.searchResults = [];\n    for (const ns of this.cfg.getFirstXmlDoc(false).namespaces) {\n      if (this.namespaceMatchesSearch(ns)) {\n        this.searchResults.push(ns);\n      } else if (this.selectedNamespace != null) {\n        this.selectNamespace = null;\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          Namespaces for {{ cfg.getFirstXmlDoc(false).name }}\n        \n        \n        \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          Alias\n          Uri\n          Location URI\n          \n        \n        \n      \n    \n    \n      \n        \n          {{ namespace.isTarget ? 'Target (tns)' : namespace.alias }}\n          {{ namespace.uri }}\n          {{ namespace.locationUri }}\n          \n            \n            \n          \n          \n        \n      \n      \n        No search results.\n        \n      \n    \n    {{ getNamespaces().length }} namespaces\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Namespaces for {{ cfg.getFirstXmlDoc(false).name }}                                                                                                            Alias          Uri          Location URI                                                                {{ namespace.isTarget ? \\'Target (tns)\\' : namespace.alias }}          {{ namespace.uri }}          {{ namespace.locationUri }}                                                                                  No search results.                      {{ getNamespaces().length }} namespaces      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'NamespaceListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NamespaceModel.html":{"url":"classes/NamespaceModel.html","title":"class - NamespaceModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NamespaceModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                createdByUser\n                            \n                            \n                                isTarget\n                            \n                            \n                                locationUri\n                            \n                            \n                                    Private\n                                    Static\n                                unqualifiedNamespace\n                            \n                            \n                                uri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                copyFrom\n                            \n                            \n                                getPrettyLabel\n                            \n                            \n                                    Static\n                                getUnqualifiedNamespace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdByUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locationUri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            unqualifiedNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:27\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         NamespaceModel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyFrom\n                        \n                        \n                    \n                \n            \n            \n                \ncopyFrom(that: NamespaceModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    that\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPrettyLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetPrettyLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getUnqualifiedNamespace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnqualifiedNamespace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         NamespaceModel\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Field } from './field.model';\nimport { DocumentType, InspectionType } from '../common/config.types';\nimport { MappingDefinition } from '../models/mapping-definition.model';\nimport { DataMapperUtil } from '../common/data-mapper-util';\nimport { DocumentInitializationModel } from '../models/config.model';\n\nexport class NamespaceModel {\n  private static unqualifiedNamespace: NamespaceModel = null;\n\n  alias: string = null;\n  uri: string = null;\n  locationUri: string = null;\n  createdByUser = false;\n  isTarget = false;\n\n  static getUnqualifiedNamespace(): NamespaceModel {\n    if (NamespaceModel.unqualifiedNamespace == null) {\n      const ns: NamespaceModel = new NamespaceModel();\n      ns.alias = 'Unqualified';\n      NamespaceModel.unqualifiedNamespace = ns;\n    }\n    return NamespaceModel.unqualifiedNamespace;\n  }\n\n  getPrettyLabel(): string {\n    if (this === NamespaceModel.getUnqualifiedNamespace()) {\n      return this.alias;\n    }\n    return (this.isTarget ? 'Target' : this.alias)\n      + ' [' + (this.uri == null ? 'NO URI' : this.uri) + ']';\n  }\n\n  copy(): NamespaceModel {\n    const copy: NamespaceModel = new NamespaceModel();\n    Object.assign(copy, this);\n    return copy;\n  }\n\n  copyFrom(that: NamespaceModel): void {\n    Object.assign(this, that);\n  }\n}\n\nexport class PaddingField extends Field {\n  constructor(private _isSource: boolean) {\n    super();\n    this.name = '';\n    this.classIdentifier = '';\n    this.type = '';\n    this.displayName = '';\n    this.path = '';\n  }\n\n  isSource(): boolean {\n    return this._isSource;\n  }\n\n}\n\nexport class DocumentDefinition {\n  private static padField: Field = null;\n\n  LEFT_BRACKET = '\\x5b';\n  RIGHT_BRACKET = '\\x5d';\n\n  initModel: DocumentInitializationModel;\n  id: string;\n  _type: DocumentType;\n  name: string;\n  description: string;\n  uri: string;\n  inspectionType: InspectionType;\n  inspectionSource: string;\n  inspectionResult: string;\n  isSource: boolean;\n  isPropertyOrConstant: boolean;\n  selectedRoot: string;\n\n  classPath: string;\n  initialized = false;\n  errorOccurred = false;\n  pathSeparator = '/';\n  fields: Field[] = [];\n  allFields: Field[] = [];\n  terminalFields: Field[] = [];\n  complexFieldsByClassIdentifier: { [key: string]: Field; } = {};\n  enumFieldsByClassIdentifier: { [key: string]: Field; } = {};\n  fieldsByPath: { [key: string]: Field; } = {};\n  fieldPaths: string[] = [];\n  showFields = true;\n  visibleInCurrentDocumentSearch = true;\n  namespaces: NamespaceModel[] = [];\n  characterEncoding: string = null;\n  locale: string = null;\n\n  set type(type: DocumentType) {\n    this._type = type;\n    this.isPropertyOrConstant = type === DocumentType.CONSTANT || type === DocumentType.PROPERTY;\n  }\n\n  get type(): DocumentType {\n    return this._type;\n  }\n\n  getComplexField(classIdentifier: string): Field {\n    return this.complexFieldsByClassIdentifier[classIdentifier];\n  }\n\n  getEnumField(classIdentifier: string): Field {\n    return this.enumFieldsByClassIdentifier[classIdentifier];\n  }\n\n  getAllFields(): Field[] {\n    return [].concat(this.allFields);\n  }\n\n  /**\n   * Return true if the specified field name already exists in the specified document definition,\n   * false otherwise.\n   *\n   * @param targetField\n   * @param targetFieldDocDefType\n   */\n  fieldExists(targetField: Field, targetFieldDocDefType: DocumentType): boolean {\n\n    for (const field of this.getAllFields()) {\n      if (field.name === targetField.name && field.docDef.type === targetFieldDocDefType) {\n          return true;\n      }\n    }\n    return false;\n  }\n\n  isFieldsExist(fields: Field[]): boolean {\n    if (fields == null || fields.length === 0) {\n      return true;\n    }\n    const foundFields: Field[] = this.getFields(Field.getFieldPaths(fields));\n    return (foundFields != null) && (fields.length === foundFields.length);\n  }\n\n  getFields(fieldPaths: string[]): Field[] {\n    const fields: Field[] = [];\n    for (const fieldPath of fieldPaths) {\n      const field: Field = this.getField(fieldPath);\n      if (field != null) {\n        fields.push(field);\n      }\n    }\n    return fields;\n  }\n\n  getName(showTypes: boolean): string {\n    let name = this.name;\n    if (showTypes && !this.isPropertyOrConstant) {\n      const type = this.type;\n      if (type) {\n        name += ' (' + type + ')';\n      }\n    }\n    return name;\n  }\n\n  getNamespaceForAlias(alias: string): NamespaceModel {\n    for (const ns of this.namespaces) {\n      if (alias === ns.alias) {\n        return ns;\n      }\n    }\n    return null;\n  }\n\n  getField(fieldPath: string): Field {\n    if (!fieldPath) {\n      return null;\n    }\n    let field: Field = this.fieldsByPath[fieldPath];\n    // if we can't find the field we're looking for, find parent fields and populate their children\n    const pathSeparator: string = this.pathSeparator;\n    let originalPath: string = fieldPath;\n    // strip beginning path separator from path\n    if (originalPath != null && originalPath.indexOf(pathSeparator) === 0) {\n      originalPath = originalPath.substring(1);\n    }\n    if (field == null && (originalPath.indexOf(pathSeparator) !== -1)) {\n      let currentParentPath = '';\n      while (originalPath.indexOf(pathSeparator) !== -1) {\n        const currentPathSection: string = originalPath.substr(0, originalPath.indexOf(pathSeparator));\n        currentParentPath += pathSeparator + currentPathSection;\n        const parentField: Field = this.fieldsByPath[currentParentPath];\n        if (parentField == null) {\n          if (originalPath.indexOf(pathSeparator) !== -1) {\n            originalPath = originalPath.substr(originalPath.indexOf(pathSeparator) + 1);\n            continue;\n          } else {\n            break;\n          }\n          // https://github.com/atlasmap/atlasmap/issues/1128\n          // throw new Error('Could not populate parent field with path \\''\n          //  + currentParentPath + '\\' (for: ' + fieldPath + ')');\n        }\n        this.populateChildren(parentField);\n        if (originalPath.indexOf(pathSeparator) !== -1) {\n          originalPath = originalPath.substr(originalPath.indexOf(pathSeparator) + 1);\n        }\n      }\n      field = this.fieldsByPath[fieldPath];\n    }\n    return field;\n  }\n\n  getTerminalFields(): Field[] {\n    return [].concat(this.terminalFields);\n  }\n\n  initializeFromFields(): void {\n    if (this.type === DocumentType.JAVA) {\n      this.prepareComplexFields();\n    }\n\n    Field.alphabetizeFields(this.fields);\n\n    for (const field of this.fields) {\n      this.populateFieldParentPaths(field, null, 0);\n      this.populateFieldData(field);\n    }\n\n    this.fieldPaths.sort();\n    this.initialized = true;\n  }\n\n  updateField(field: Field, oldPath: string): void {\n    Field.alphabetizeFields(this.fields);\n    if (!field.parentField || this.isPropertyOrConstant) {\n      this.populateFieldParentPaths(field, null, 0);\n    } else {\n      const pathSeparator: string = this.pathSeparator;\n      this.populateFieldParentPaths(field, field.parentField.path + pathSeparator,\n        field.parentField.fieldDepth + 1);\n    }\n    if (oldPath != null && this.fieldsByPath[oldPath] != null) {\n      delete (this.fieldsByPath[oldPath]);\n    }\n    DataMapperUtil.removeItemFromArray(field.path, this.fieldPaths);\n    this.populateFieldData(field);\n    this.fieldPaths.sort();\n  }\n\n  addField(field: Field): void {\n    if (!field.parentField || this.isPropertyOrConstant) {\n      this.fields.push(field);\n      Field.alphabetizeFields(this.fields);\n      this.populateFieldParentPaths(field, null, 0);\n    } else {\n      this.populateChildren(field.parentField);\n      field.parentField.children.push(field);\n      Field.alphabetizeFields(field.parentField.children);\n      const pathSeparator: string = this.pathSeparator;\n      this.populateFieldParentPaths(field, field.parentField.path + pathSeparator,\n        field.parentField.fieldDepth + 1);\n    }\n    this.populateFieldData(field);\n    this.fieldPaths.sort();\n  }\n\n  /**\n   * Return true if the passed field is terminal or children are detected, false otherwise.\n   * @param field - target field\n   */\n  populateChildren(field: Field): boolean {\n\n    // populate complex fields\n    if (field.isTerminal() || (field.children.length > 0)) {\n      return true;\n    }\n\n    let cachedField = this.getComplexField(field.classIdentifier);\n    if (cachedField == null) {\n      return false;\n    }\n\n    // copy cached field children\n    cachedField = cachedField.copy();\n    const pathSeparator: string = this.pathSeparator;\n    for (let childField of cachedField.children) {\n      childField = childField.copy();\n      childField.parentField = field;\n      this.populateFieldParentPaths(childField, field.path + pathSeparator, field.fieldDepth + 1);\n      this.populateFieldData(childField);\n      field.children.push(childField);\n    }\n\n    if (field.children.length > 0) {\n      this.fieldPaths.sort();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Clear all fields in this document.\n   */\n  clearFields(): void {\n    this.initialized = false;\n    this.fields = [];\n    this.allFields = [];\n    this.terminalFields = [];\n    this.fieldPaths = [];\n    this.namespaces = [];\n    this.fieldsByPath = {};\n    this.complexFieldsByClassIdentifier = {};\n    this.enumFieldsByClassIdentifier = {};\n  }\n\n  /**\n   * Remove the specified field from this document definition.\n   *\n   * @param field\n   */\n  removeField(field: Field): void {\n    if (field == null) {\n      return;\n    }\n    DataMapperUtil.removeItemFromArray(field, this.fields);\n    DataMapperUtil.removeItemFromArray(field, this.allFields);\n    DataMapperUtil.removeItemFromArray(field, this.terminalFields);\n    DataMapperUtil.removeItemFromArray(field.path, this.fieldPaths);\n    delete (this.fieldsByPath[field.path]);\n    if (field.parentField != null) {\n      DataMapperUtil.removeItemFromArray(field, field.parentField.children);\n    }\n  }\n\n  updateFromMappings(mappingDefinition: MappingDefinition): void {\n\n    if (mappingDefinition === null) {\n      return;\n    }\n\n    for (const field of this.allFields) {\n      field.partOfMapping = false;\n      field.hasUnmappedChildren = false;\n      field.partOfTransformation = false;\n    }\n\n    // FIXME: some of this work is happening N times for N source/target docs, should only happen once.\n    for (const mapping of mappingDefinition.getAllMappings(true)) {\n      const mappingIsActive: boolean = (mapping === mappingDefinition.activeMapping);\n\n      for (const field of mapping.getAllFields()) {\n        let parentField = field;\n        const partOfTransformation = mapping.getMappedFieldForField(field).actions.length > 0;\n        while (parentField != null) {\n          parentField.partOfMapping = true;\n          parentField.partOfTransformation = parentField.partOfTransformation || partOfTransformation;\n          parentField = parentField.parentField;\n        }\n      }\n    }\n    for (const field of this.allFields) {\n      field.hasUnmappedChildren = Field.fieldHasUnmappedChild(field);\n    }\n  }\n\n  private populateFieldParentPaths(field: Field, parentPath: string, depth: number): void {\n    if (parentPath == null) {\n      parentPath = this.pathSeparator;\n    }\n    field.path = parentPath + field.getNameWithNamespace();\n    if (field.isCollection) {\n      field.path += field.isArray ? (this.LEFT_BRACKET + this.RIGHT_BRACKET) : '<>';\n    }\n    if (field.isAttribute) {\n      field.path = parentPath += '@' + field.name;\n    }\n    if (field.serviceObject) {\n      field.serviceObject.path = field.path;\n    }\n    field.fieldDepth = depth;\n    const pathSeparator: string = this.pathSeparator;\n    for (const childField of field.children) {\n      childField.parentField = field;\n      this.populateFieldParentPaths(childField, field.path + pathSeparator, depth + 1);\n    }\n  }\n\n  private populateFieldData(field: Field): void {\n    field.docDef = this;\n    this.fieldPaths.push(field.path);\n    this.allFields.push(field);\n    this.fieldsByPath[field.path] = field;\n    if (field.enumeration) {\n      this.enumFieldsByClassIdentifier[field.classIdentifier] = field;\n    }\n    if (field.isTerminal()) {\n      this.terminalFields.push(field);\n    } else {\n      for (const childField of field.children) {\n        this.populateFieldData(childField);\n      }\n    }\n  }\n\n  private prepareComplexFields(): void {\n    const fields: Field[] = this.fields;\n\n    // build complex field cache\n    this.discoverComplexFields(fields);\n\n    for (const key in this.complexFieldsByClassIdentifier) {\n      if (!this.complexFieldsByClassIdentifier.hasOwnProperty(key)) {\n        continue;\n      }\n      const cachedField: Field = this.complexFieldsByClassIdentifier[key];\n      // remove children more than one level deep in cached fields\n      for (const childField of cachedField.children) {\n        childField.children = [];\n      }\n      // alphebatize complex field's childrein\n      Field.alphabetizeFields(cachedField.children);\n    }\n  }\n\n  private discoverComplexFields(fields: Field[]): void {\n    for (const field of fields) {\n      if (field.type !== 'COMPLEX') {\n        continue;\n      }\n      if (field.serviceObject.status === 'SUPPORTED') {\n        this.complexFieldsByClassIdentifier[field.classIdentifier] = field.copy();\n      }\n      if (field.children) {\n        this.discoverComplexFields(field.children);\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PropertyFieldEditComponent.html":{"url":"components/PropertyFieldEditComponent.html","title":"component - PropertyFieldEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PropertyFieldEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                property-field-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./property-field-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                docDef\n                            \n                            \n                                field\n                            \n                            \n                                fieldMode\n                            \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                isClosing\n                            \n                            \n                                modalWindowComponent\n                            \n                            \n                                valueType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getField\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                nameExistsOnCreation\n                            \n                            \n                                valueTypeSelectionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getField\n                        \n                        \n                    \n                \n            \n            \n                \ngetField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Field\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(field: Field, docDef: DocumentDefinition, mwc: ModalWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docDef\n                                    \n                                                DocumentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mwc\n                                    \n                                                ModalWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            nameExistsOnCreation\n                        \n                        \n                    \n                \n            \n            \n                \nnameExistsOnCreation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:77\n                \n            \n\n\n            \n                \n                    Return true and disable the save button if the candidate name already exists on creation, return false\nand enable the save button otherwise.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nvalueTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                    \n                        \n                            Default value : new Field()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('name')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isClosing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalWindowComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { DocumentType, FieldMode } from '../../common/config.types';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { DocumentDefinition } from '../../models/document-definition.model';\nimport { Field } from '../../models/field.model';\nimport { ModalWindowComponent, ModalWindowValidator } from '../modal/modal-window.component';\n\n@Component({\n  selector: 'property-field-edit',\n  templateUrl: './property-field-edit.component.html',\n})\n\nexport class PropertyFieldEditComponent implements ModalWindowValidator {\n  field: Field = new Field();\n  fieldMode: FieldMode;\n  valueType: any = 'STRING';\n  docDef: DocumentDefinition;\n  modalWindowComponent: ModalWindowComponent;\n  isClosing: boolean;\n  @ViewChild('name') private focusEl: ElementRef;\n\n  initialize(field: Field, docDef: DocumentDefinition, mwc: ModalWindowComponent): void {\n    if (field != null) {\n      this.valueType = field.type;\n      this.fieldMode = FieldMode.EDIT;\n    } else { this.fieldMode = FieldMode.CREATE; }\n\n    this.field = field == null ? new Field() : field.copy();\n    this.docDef = docDef;\n    this.modalWindowComponent = mwc;\n    this.isClosing = false;\n  }\n\n  valueTypeSelectionChanged(event: any): void {\n    this.valueType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  getField(): Field {\n    this.field.displayName = this.field.name;\n    this.field.path = this.field.name;\n    this.field.type = this.valueType;\n    this.field.userCreated = true;\n    this.field.docDef = this.docDef;\n    return this.field;\n  }\n\n  isDataValid(): boolean {\n    return ConfigModel.getConfig().errorService.isRequiredFieldValid(this.field.name, 'Name');\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n  /**\n   * Return true and disable the save button if the candidate name already exists on creation, return false\n   * and enable the save button otherwise.\n   */\n  nameExistsOnCreation(): boolean {\n    if (this.isClosing) {\n      return false;\n    }\n    if (this.fieldMode === FieldMode.CREATE && this.docDef != null &&\n        this.docDef.fieldExists(this.getField(), DocumentType.PROPERTY)) {\n      this.modalWindowComponent.confirmButtonDisabled = true;\n      return true;\n    }\n    this.modalWindowComponent.confirmButtonDisabled = false;\n    return false;\n  }\n}\n\n    \n\n    \n        \n  \n    Name:\n    \n    \n      Property name already exists, please select a unique name.\n    \n  \n  \n    Value:\n    \n     0)\" class=\"text-info\">\n      A property value must be specified.\n    \n  \n  \n    Value Type:\n    \n      ANY\n      Big Integer\n      Boolean\n      Byte\n      ByteArray\n      Char\n      Complex\n      Decimal\n      Double\n      Float\n      Integer\n      Long\n      Short\n      String\n      Time\n      Date\n      DateTime\n      DateTZ\n      TimeTZ\n      DateTimeTZ\n      Unsigned Byte\n      Unsigned Integer\n      Unsigned Long\n      Unsigned Short\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Name:              Property name already exists, please select a unique name.            Value:         0)\" class=\"text-info\">      A property value must be specified.            Value Type:          ANY      Big Integer      Boolean      Byte      ByteArray      Char      Complex      Decimal      Double      Float      Integer      Long      Short      String      Time      Date      DateTime      DateTZ      TimeTZ      DateTimeTZ      Unsigned Byte      Unsigned Integer      Unsigned Long      Unsigned Short      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'PropertyFieldEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TemplateEditComponent.html":{"url":"components/TemplateEditComponent.html","title":"component - TemplateEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TemplateEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/app/template-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                template-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./template-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                templateText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitialFocusElement\n                            \n                            \n                                isDataValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/template-edit.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/template-edit.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('template')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/template-edit.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templateText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/template-edit.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { ModalWindowValidator } from '../modal/modal-window.component';\n\n@Component({\n  selector: 'template-edit',\n  templateUrl: './template-edit.component.html',\n})\n\nexport class TemplateEditComponent implements ModalWindowValidator {\n  templateText: string = null;\n  @ViewChild('template') private focusEl: ElementRef;\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'TemplateEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TextNode.html":{"url":"classes/TextNode.html","title":"class - TextNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TextNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ExpressionNode\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                PREFIX\n                            \n                            \n                                    Public\n                                str\n                            \n                            \n                                    Protected\n                                    Static\n                                sequence\n                            \n                            \n                                    Protected\n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toHTML\n                            \n                            \n                                toText\n                            \n                            \n                                getUuid\n                            \n                            \n                                    Abstract\n                                toHTML\n                            \n                            \n                                    Abstract\n                                toText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(str: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        str\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PREFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'expression-text-'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            str\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            sequence\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                            \n                                \n                                    Inherited from         ExpressionNode\n\n                                \n                            \n                        \n                            \n                                    Defined in         ExpressionNode:27\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            uuid\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         ExpressionNode\n\n                                \n                            \n                        \n                            \n                                    Defined in         ExpressionNode:28\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \ntoHTML()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \ntoText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetUuid()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toHTML()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toText()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { MappedField, MappingModel } from './mapping.model';\nimport { Subject } from 'rxjs';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from './error.model';\n\nexport class ExpressionUpdatedEvent {\n  constructor(public node?: ExpressionNode, public offset?: number) {}\n}\n\nexport abstract class ExpressionNode {\n  protected static sequence = 0;\n  protected uuid;\n\n  constructor(prefix: string) {\n    this.uuid = prefix + ExpressionNode.sequence++;\n  }\n\n  getUuid() {\n    return this.uuid;\n  }\n\n  abstract toText(): string;\n  abstract toHTML(): string;\n}\n\nexport class TextNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-text-';\n\n  constructor(public str: string) {\n    super(TextNode.PREFIX);\n  }\n\n  toText(): string {\n    return this.str;\n  }\n\n  toHTML(): string {\n    return `${this.str.replace(/ /g, '&nbsp;')}`;\n  }\n\n}\n\nexport class FieldNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-field-';\n\n  constructor(private mapping: MappingModel, public field?: MappedField, private index?: number) {\n    super(FieldNode.PREFIX);\n    if (!field) {\n      this.field = mapping.getMappedFieldForIndex((index + 1).toString(), true);\n    }\n  }\n\n  toText(): string {\n    return '${' + (this.mapping.getIndexForMappedField(this.field) - 1) + '}';\n  }\n\n  toHTML(): string {\n    if (this.field && this.field.field) {\n      return `${this.field.field.name}`;\n    } else {\n      return `N/A`;\n    }\n  }\n\n}\n\nexport class ExpressionModel {\n  expressionUpdatedSource = new Subject();\n  expressionUpdated$ = this.expressionUpdatedSource.asObservable();\n\n  private _nodes: ExpressionNode[] = [];\n  private textCache = '';\n  private htmlCache = '';\n\n  constructor(private mapping: MappingModel, private cfg: ConfigModel) {}\n\n  generateInitialExpression() {\n    this.mapping.getUserMappedFields(true).forEach(f => this.appendFieldNode(f));\n  }\n\n  get nodes(): ReadonlyArray {\n    return this._nodes;\n  }\n\n  getLastNodeIndex() {\n    return this._nodes.length - 1;\n  }\n\n  getLastNode() {\n    return this._nodes[this.getLastNodeIndex()];\n  }\n\n  getNode(nodeId?: string): any {\n    if (!nodeId) {\n      return this.getLastNode();\n    }\n    return this._nodes.find(n => n.getUuid() === nodeId);\n  }\n\n  setConfigModel(cfg: ConfigModel) {\n    this.cfg = cfg;\n  }\n\n  /**\n   * Clear all text from the specified TextNode offset range or from the '@' to the end\n   * of the text node if no node ID is specified.\n   *\n   * Return the new UUID position indicator string or null.\n   *\n   * @param nodeId\n   * @param startOffset\n   * @param endOffset\n   */\n  clearText(nodeId?: string, startOffset?: number, endOffset?: number): TextNode {\n    let targetNode: TextNode;\n    let targetNodeIndex = 0;\n    if (!nodeId) {\n      const lastNode = this.getLastNode();\n      if (!(lastNode instanceof TextNode)) {\n        return null;\n      }\n      const keyPos = lastNode.str.indexOf('@');\n      if (keyPos !== -1) {\n        targetNodeIndex = this._nodes.indexOf(lastNode);\n        targetNode = lastNode;\n        targetNode.str = targetNode.str.substring(0, keyPos);\n      }\n    } else {\n      const node = this._nodes.find(n => n.getUuid() === nodeId);\n      if (!(node instanceof TextNode) || !endOffset) {\n        return null;\n      }\n      targetNode = node;\n      targetNodeIndex = this._nodes.indexOf(targetNode);\n      const cleanStr = targetNode.str.replace(targetNode.str.substring(startOffset, endOffset), '');\n      targetNode.str = cleanStr;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n    return targetNode;\n  }\n\n  /**\n   * Insert text into expression at specified position. If nodeId is not specified,\n   * it will be added to the end of expression. It parses the string\n   * and insert a set of TextNode & FieldNode if it contains field reference like ${0},\n   * otherwise just one TextNode.\n   * This emits ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   * @param str string to insert\n   * @param nodeId target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertText(str: string, nodeId?: string, offset?: number) {\n    this.insertNodes(this.createNodesFromText(str), nodeId, offset);\n  }\n\n  /**\n   * Insert an array of ExpressionNodes at the specified position. If insertPosition is\n   * not specified the nodes will be appended to the end of the expression.\n   * This emits an ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   *\n   * @param newNodes an array of ExpressionNode to add\n   * @param insertPosition target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertNodes(newNodes: ExpressionNode[], insertPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!insertPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        this._nodes.push(...newNodes);\n      } else if (last instanceof TextNode && newNodes[0] instanceof TextNode) {\n        const lastTextNode = last as TextNode;\n        (last as TextNode).str += (newNodes[0] as TextNode).str;\n        newNodes.splice(0, 1, last);\n        this._nodes.splice(this.getLastNodeIndex(), 1, ...newNodes);\n      } else if (last instanceof FieldNode && newNodes[0] instanceof FieldNode) {\n        this._nodes.splice(this.getLastNodeIndex(), 0, new TextNode(' + '), ...newNodes);\n      } else {\n        this._nodes.push(...newNodes);\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    const updatedEvent = new ExpressionUpdatedEvent();\n    const targetNode = this._nodes.find(n => n.getUuid() === insertPosition);\n    const targetNodeIndex = this._nodes.indexOf(targetNode);\n\n    if (targetNode instanceof TextNode) {\n      if (offset === undefined || offset === null || offset  0) {\n        if (newNodes[0] instanceof TextNode) {\n          targetNode.str = pre + (newNodes[0] as TextNode).str;\n          newNodes.splice(0, 1, targetNode);\n        } else {\n          targetNode.str = pre;\n          newNodes.splice(0, 0, targetNode);\n        }\n      }\n      if (post.length > 0) {\n        const lastNewNodeIndex = newNodes.length - 1;\n        if (newNodes[lastNewNodeIndex] instanceof TextNode) {\n          let mergedTextNode: TextNode;\n          if (pre.length > 0) {\n            mergedTextNode = newNodes[lastNewNodeIndex] as TextNode;\n            mergedTextNode.str += post;\n          } else {\n            mergedTextNode = targetNode;\n            mergedTextNode.str = (newNodes[lastNewNodeIndex]as TextNode).str + post;\n          }\n          newNodes.splice(lastNewNodeIndex, 1, mergedTextNode);\n        } else {\n          if (pre.length > 0) {\n            newNodes.push(new TextNode(post));\n          } else {\n            targetNode.str = post;\n            newNodes.push(targetNode);\n          }\n        }\n      }\n      this._nodes.splice(targetNodeIndex, 1, ...newNodes);\n      const lastAddedIndex = targetNodeIndex + newNodes.length - 1;\n      if (this._nodes[lastAddedIndex] instanceof FieldNode\n          && this.nodes[lastAddedIndex + 1] instanceof FieldNode) {\n        // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n        const space = new TextNode(' + ');\n        this._nodes.splice(lastAddedIndex + 1, 0, space);\n        updatedEvent.node = space;\n        updatedEvent.offset = 1;\n      } else if (this._nodes[lastAddedIndex] instanceof FieldNode) {\n        updatedEvent.node = this._nodes[lastAddedIndex + 1];\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = this._nodes[lastAddedIndex];\n        updatedEvent.offset = (this._nodes[lastAddedIndex] as TextNode).str.length - post.length;\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next(updatedEvent);\n      return;\n    }\n\n    // targetNode is a FieldNode - insert the text before it if offset is 0, otherwise after it\n    if (offset !== 0 && newNodes[0] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      newNodes.splice(0, 0, new TextNode(' + '));\n    }\n    const nextNodeIndex = offset === 0 ? targetNodeIndex : targetNodeIndex + 1;\n    const nextNode = this._nodes[nextNodeIndex];\n    if (nextNode instanceof TextNode && newNodes[newNodes.length - 1] instanceof TextNode) {\n      updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      nextNode.str = (newNodes[newNodes.length - 1] as TextNode).str + (nextNode as TextNode).str;\n      newNodes.pop();\n      this._nodes.splice(nextNodeIndex, 1, ...newNodes);\n      updatedEvent.node = nextNode;\n    } else if (nextNode instanceof FieldNode && newNodes[newNodes.length - 1] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      const space = new TextNode(' + ');\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes, space);\n      updatedEvent.node = space;\n      updatedEvent.offset = 1;\n    } else {\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes);\n      if (nextNode instanceof TextNode) {\n        updatedEvent.node = nextNode;\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = newNodes[newNodes.length - 1];\n        updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  removeToken(lastFieldRefRemoved: (removed: MappedField) => void, tokenPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!tokenPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        return;\n      }\n      if (last instanceof FieldNode) {\n        const removed = this._nodes.pop() as FieldNode;\n        if (!this._nodes.find(n => n instanceof FieldNode && n.field === removed.field)) {\n          lastFieldRefRemoved(removed.field);\n        }\n      } else if (last instanceof TextNode) {\n        if (last.str.length > 0) {\n          last.str = last.str.substring(0, last.str.length - 1);\n        } else {\n          this._nodes.pop();\n        }\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    let updatedEvent = new ExpressionUpdatedEvent();\n    let targetNode = this._nodes.find(n => n.getUuid() === tokenPosition);\n    let targetNodeIndex = this._nodes.indexOf(targetNode);\n    if (!targetNode || offset === -1) {\n      if (targetNodeIndex  n instanceof FieldNode && n.field === targetFieldNode.field)) {\n        lastFieldRefRemoved(targetFieldNode.field);\n      }\n      if (this._nodes.length > targetNodeIndex) {\n        if (this._nodes[targetNodeIndex - 1] instanceof TextNode\n            && this._nodes[targetNodeIndex] instanceof TextNode) {\n          const newOffset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n          (this._nodes[targetNodeIndex - 1] as TextNode).str\n              += (this._nodes[targetNodeIndex] as TextNode).str;\n          this._nodes.splice(targetNodeIndex, 1);\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = newOffset;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof FieldNode\n            && this._nodes[targetNodeIndex] instanceof FieldNode) {\n          const glue = new TextNode(' + ');\n          this._nodes.splice(targetNodeIndex, 0, glue);\n          updatedEvent.node = glue;\n          updatedEvent.offset = 3;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n        } else if (this._nodes[targetNodeIndex] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex];\n          updatedEvent.offset = 0;\n        }\n      } else {\n        // end of line\n        updatedEvent = undefined;\n      }\n    } else {\n      const targetString = (targetNode as TextNode).str;\n      (targetNode as TextNode).str = offset === 0 ? targetString.substr(1)\n        : targetString.substring(0, offset) + targetString.substring(offset + 1);\n      if ((targetNode as TextNode).str.length === 0) {\n        this.cfg.errorService.addError(new ErrorInfo({message: 'At least one space is required between field references.',\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.USER, mapping: this.mapping}));\n        return;\n      }\n      updatedEvent.node = targetNode;\n      updatedEvent.offset = offset;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  /**\n   * Replace the content of the last text node with a substring terminating at the\n   * specified index.\n   *\n   * @param index\n   */\n  clearToEnd(index: number): void {\n    const last = this.getLastNode();\n    if (!(last instanceof TextNode)) {\n      return;\n    }\n    last.str = last.str.substring(0, index);\n  }\n\n  /**\n   * Reflect mapped source fields to the field references in the expression.\n   * Selected source fields are inserted into or appended to the expression,\n   * and unselected source fields are removed from expression.\n   *\n   * @param mapping Corresponding MappingModel object\n   */\n  updateFieldReference(mapping: MappingModel, insertPosition?: string, offset?: number) {\n    const mappedFields = mapping.getUserMappedFields(true);\n    const toAdd: MappedField[] = [];\n    const toRemove: MappedField[] = [];\n    let fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n\n    // Remove the field from the expression if unmapped.\n    for (const node of fieldNodes) {\n      if (mappedFields.includes(node.field)) {\n        continue;\n      }\n      const index = this._nodes.indexOf(node);\n      this._nodes.splice(index, 1);\n      if (this._nodes.length > index && this._nodes[index - 1] instanceof TextNode\n          && this._nodes[index] instanceof TextNode) {\n        (this._nodes[index - 1] as TextNode).str += (this._nodes[index] as TextNode).str;\n        this._nodes.splice(index, 1);\n      }\n    }\n\n    // Add the specified field into the expression - append if no insert position is specified.\n    fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n    for (const mfield of mappedFields) {\n      if (!fieldNodes.find(n => n.field === mfield)) {\n        if (insertPosition) {\n          this.insertNodes([new FieldNode(this.mapping, mfield)], insertPosition, offset);\n        } else {\n          this.appendFieldNode(mfield);\n        }\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  clear() {\n    this._nodes = [];\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  toText() {\n    return this.textCache;\n  }\n\n  toHTML() {\n    return this.htmlCache;\n  }\n\n  private updateCache() {\n    let answer = '';\n    this._nodes.forEach(node => answer += node.toText());\n    this.textCache = answer;\n    answer = '';\n    this._nodes.forEach(node => answer += node.toHTML());\n    this.htmlCache = answer;\n  }\n\n  private createNodesFromText(text: string): ExpressionNode[] {\n    const answer = [];\n    let position = -1;\n    let fn = null;\n\n    while ((position = text.search(/\\$\\{[0-9]+\\}/)) !== -1 ) {\n      if (position !== 0) {\n        answer.push(new TextNode(text.substring(0, position)));\n      }\n      const index = parseInt(text.substring(position + 2, text.indexOf('}')), 10);\n      fn = new FieldNode(this.mapping, null, index);\n      if (fn.field === null) {\n        this.cfg.errorService.addError(new ErrorInfo({message: `Unable to map expression index \"${index}\" to field node.`,\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.INTERNAL, mapping: this.mapping}));\n      } else {\n        answer.push(fn);\n      }\n      text = text.substring(text.indexOf('}') + 1);\n    }\n    if (text.length > 0) {\n      answer.push(new TextNode(text));\n    }\n    return answer;\n  }\n\n  private appendFieldNode(mfield: MappedField) {\n    const lastNode = this._nodes.pop();\n    if (lastNode instanceof FieldNode) {\n        this._nodes.push(lastNode, new TextNode(' + '));\n    } else if (lastNode instanceof TextNode) {\n      if (lastNode.str.length === 0) {\n        this._nodes.push(new TextNode(' + '));\n      } else {\n        this._nodes.push(lastNode);\n      }\n    }\n    this._nodes.push(new FieldNode(this.mapping, mfield));\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ToErrorIconClassPipe.html":{"url":"pipes/ToErrorIconClassPipe.html","title":"pipe - ToErrorIconClassPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ToErrorIconClassPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/common/to-error-icon-class.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        toErrorIconClass\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: ErrorInfo[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/to-error-icon-class.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { ErrorInfo, ErrorLevel } from '../models/error.model';\n\n@Pipe({ name: 'toErrorIconClass' })\nexport class ToErrorIconClassPipe implements PipeTransform {\n\n  transform(value: ErrorInfo[]): string {\n    if (value.some(e => e.level === ErrorLevel.ERROR)) {\n      return 'pficon pficon-error-circle-o';\n    } else if (value.some(e => e.level === ErrorLevel.WARN)) {\n      return 'pficon pficon-warning-triangle-o';\n    } else if (value.some(e => e.level === ErrorLevel.INFO)) {\n      return 'pficon pficon-info';\n    } else {\n      return '';\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                toolbar\n            \n\n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expressionComponent\n                            \n                            \n                                    Private\n                                fileData\n                            \n                            \n                                    Private\n                                mappingsFileName\n                            \n                            \n                                    Private\n                                reader\n                            \n                            \n                                targetSupportsTemplate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearMappings\n                            \n                            \n                                conditionalMappingExpressionEnabled\n                            \n                            \n                                    Private\n                                editTemplate\n                            \n                            \n                                getCSSClass\n                            \n                            \n                                getEditorSettingsCSSClass\n                            \n                            \n                                getFileSuffix\n                            \n                            \n                                handleExportClick\n                            \n                            \n                                handleExportMapping\n                            \n                            \n                                handleExportMappingCancel\n                            \n                            \n                                handleMappingsInstanceName\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                processImportedFile\n                            \n                            \n                                    Async\n                                processMappingsCatalog\n                            \n                            \n                                    Async\n                                readFile\n                            \n                            \n                                    Private\n                                resetAll\n                            \n                            \n                                toolbarButtonClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearMappings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearMappings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:195\n                \n            \n\n\n            \n                \n                    Establish a modal window popup and if confirmed clear all mappings.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            conditionalMappingExpressionEnabled\n                        \n                        \n                    \n                \n            \n            \n                \nconditionalMappingExpressionEnabled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:310\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            editTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editTemplate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetCSSClass(action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEditorSettingsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetEditorSettingsCSSClass(open: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    open\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFileSuffix\n                        \n                        \n                    \n                \n            \n            \n                \ngetFileSuffix()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleExportClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleExportClick(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:262\n                \n            \n\n\n            \n                \n                    The user has clicked in the export file text wudget.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleExportMapping\n                        \n                        \n                    \n                \n            \n            \n                \nhandleExportMapping(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:295\n                \n            \n\n\n            \n                \n                    The user has requested their current mappings be exported.  Use the mapping management\nservice to establish the file content and to push it down to the server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleExportMappingCancel\n                        \n                        \n                    \n                \n            \n            \n                \nhandleExportMappingCancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:306\n                \n            \n\n\n            \n                \n                    Cancel button - Export > Current Mapping\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMappingsInstanceName\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMappingsInstanceName(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:277\n                \n            \n\n\n            \n                \n                    The user has specified an AtlasMap mappings catalog file name into which the current live mappings and\nsupport documents will be exported.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processImportedFile\n                        \n                        \n                    \n                \n            \n            \n                \nprocessImportedFile(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:64\n                \n            \n\n\n            \n                \n                    The user has imported a file (mapping catalog or Java archive).  Process accordingly.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            processMappingsCatalog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processMappingsCatalog(selectedFile: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:100\n                \n            \n\n\n            \n                \n                    A user has selected a compressed mappings catalog (ZIP) file to be imported into the canvas.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedFile\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            readFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(fileContent: Blob)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:48\n                \n            \n\n\n            \n                \n                    Perform an asynchronous read of a local file, returning a byte array for the file content.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileContent\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:211\n                \n            \n\n\n            \n                \n                    Establish a modal window popup and if confirmed remove all documents and imported JARs from\nthe server and reinitialize the DM.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toolbarButtonClicked\n                        \n                        \n                    \n                \n            \n            \n                \ntoolbarButtonClicked(action: string, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expressionComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExpressionComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('expressionComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fileData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mappingsFileName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            reader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FileReader\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetSupportsTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, ViewChild } from '@angular/core';\n\nimport { InspectionType } from '../../common/config.types';\nimport { ConfigModel } from '../../models/config.model';\nimport { ModalWindowComponent } from '../modal//modal-window.component';\nimport { TemplateEditComponent } from '../app/template-edit.component';\nimport { ExpressionComponent } from './expression.component';\nimport { TransitionMode } from '../../models/transition.model';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from '../../models/error.model';\n\n@Component({\n  selector: 'toolbar',\n  templateUrl: './toolbar.component.html',\n})\n\nexport class ToolbarComponent implements OnInit {\n  @Input() cfg: ConfigModel;\n  @Input() modalWindow: ModalWindowComponent;\n\n  @ViewChild('expressionComponent') expressionComponent: ExpressionComponent;\n\n  targetSupportsTemplate = false;\n\n  private fileData: any;\n  private mappingsFileName: string;\n  private reader: FileReader;\n\n  /**\n   * Perform an asynchronous read of a local file, returning a byte array for the file content.\n   *\n   * @param fileContent\n   */\n  async readFile(fileContent: Blob): Promise {\n    return new Promise((resolve, reject) => {\n      this.reader.onload = (event: any) => {\n        const arrayBuffer: any = this.reader.result;\n        const bytes = new Uint8Array(arrayBuffer);\n        resolve(bytes);\n      };\n      this.reader.readAsArrayBuffer(fileContent);\n    });\n  }\n\n  /**\n   * The user has imported a file (mapping catalog or Java archive).  Process accordingly.\n   *\n   * @param event\n   */\n  processImportedFile(event) {\n    const userFile = event.target.files[0];\n    const userFileComps = userFile.name.split('.');\n    const userFileSuffix: string = userFileComps[userFileComps.length - 1].toUpperCase();\n\n    if (userFileSuffix === 'ADM') {\n        this.cfg.errorService.resetAll();\n\n        // Clear out current user documents from the runtime service before processing the imported ADM.\n        this.cfg.fileService.resetMappings().toPromise().then( async() => {\n          this.cfg.fileService.resetLibs().toPromise().then( async() => {\n            await this.processMappingsCatalog(userFile);\n          });\n        }).catch((error: any) => {\n          if (error.status === 0) {\n            this.cfg.errorService.addError(new ErrorInfo({\n              message: 'Fatal network error: Could not connect to AtlasMap design runtime service.',\n              level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n          } else {\n            this.cfg.errorService.addError(new ErrorInfo({\n              message: 'Could not reset document definitions before import.',\n              level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n          }\n        });\n    } else if (userFileSuffix === 'JAR') {\n      this.cfg.documentService.processDocument(event.target.files[0], InspectionType.JAVA_CLASS, false);\n    }\n\n    event.srcElement.value = null;\n  }\n\n  /**\n   * A user has selected a compressed mappings catalog (ZIP) file to be imported into the canvas.\n   *\n   * @param selectedFile\n   */\n  async processMappingsCatalog(selectedFile: any) {\n    this.cfg.initializationService.updateLoadingStatus('Importing AtlasMap Catalog');\n    await this.cfg.fileService.importADMCatalog(selectedFile);\n  }\n\n  getFileSuffix() {\n    return '.adm,.jar';\n  }\n\n  getCSSClass(action: string) {\n    if (this.cfg.mappings !== null) {\n      if ('showDetails' === action) {\n        return 'fa fa-exchange link' + (this.cfg.mappings.activeMapping ? ' selected' : '');\n      } else if ('editTemplate' === action) {\n          return 'fa fa-file-text-o link' + (this.cfg.mappings.templateExists() ? ' selected' : '');\n      }\n    }\n    if ('showLines' === action) {\n      return 'fa fa-share-alt link' + (this.cfg.showLinesAlways ? ' selected' : '');\n    } else if ('showMappingTable' === action) {\n      return 'fa fa-table link' + (this.cfg.showMappingTable ? ' selected' : '');\n    } else if ('showNamespaceTable' === action) {\n      return 'fa fa-code link' + (this.cfg.showNamespaceTable ? ' selected' : '');\n    } else if ('importMappings' === action) {\n      return 'pficon pficon-import link';\n    } else if ('exportMappings' === action) {\n      return 'pficon pficon-export link';\n    } else if ('enableExpression' === action) {\n      return (this.cfg.mappings && this.cfg.mappings.activeMapping\n          && this.cfg.mappings.activeMapping.transition\n          && this.cfg.mappings.activeMapping.transition.enableExpression ? ' selected' : '');\n    }\n  }\n\n  getEditorSettingsCSSClass(open: boolean) {\n    return 'fa fa-cog link ' + (open ? ' selected' : '');\n  }\n\n  toolbarButtonClicked(action: string, event: any): void {\n    event.preventDefault();\n    if ('showDetails' === action) {\n      if (this.cfg.showMappingDetailTray) {\n        this.cfg.showMappingDetailTray = false;\n      } else {\n        this.cfg.showMappingDetailTray = true;\n      }\n    } else if ('editTemplate' === action) {\n      this.editTemplate();\n    } else if ('showLines' === action) {\n      this.cfg.showLinesAlways = !this.cfg.showLinesAlways;\n    } else if ('showTypes' === action) {\n      this.cfg.showTypes = !this.cfg.showTypes;\n    } else if ('showMappedFields' === action) {\n      this.cfg.showMappedFields = !this.cfg.showMappedFields;\n    } else if ('showUnmappedFields' === action) {\n      this.cfg.showUnmappedFields = !this.cfg.showUnmappedFields;\n    } else if ('addMapping' === action) {\n      this.cfg.mappingService.addNewMapping(null, false);\n    } else if ('showMappingTable' === action) {\n      this.cfg.showMappingTable = !this.cfg.showMappingTable;\n      if (this.cfg.showMappingTable) {\n        this.cfg.showNamespaceTable = false;\n      }\n    } else if ('showNamespaceTable' === action) {\n      this.cfg.showNamespaceTable = !this.cfg.showNamespaceTable;\n      if (this.cfg.showNamespaceTable) {\n        this.cfg.showMappingTable = false;\n      }\n    } else if ('showMappingPreview' === action) {\n      this.cfg.showMappingPreview = !this.cfg.showMappingPreview;\n    } else if ('clearMappings' === action) {\n        this.clearMappings();\n    } else if ('resetAll' === action) {\n      this.resetAll();\n    } else if ('enableExpression') {\n      this.cfg.mappingService.toggleExpressionMode();\n    }\n    // Use the initialization service to trigger the observable updateFromConfig method\n    // in the parent data-mapper-app class.  This avoids materializing the lineMachine object\n    // post-check.\n    this.cfg.initializationService.systemInitializedSource.next();\n  }\n\n  ngOnInit() {\n    this.mappingsFileName = '';\n    this.fileData = null;\n    this.reader = new FileReader();\n    // Disable template until runtime supports it - https://github.com/atlasmap/atlasmap/issues/329\n    // const targetDoc: DocumentDefinition = this.cfg.targetDocs[0];\n    // this.targetSupportsTemplate = targetDoc && (targetDoc.type == DocumentType.XML || targetDoc.type == DocumentType.JSON);\n  }\n\n  /**\n   * Establish a modal window popup and if confirmed clear all mappings.\n   */\n  private clearMappings(): void {\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Clear All Mappings';\n    this.modalWindow.headerText = 'Clear All Mappings?';\n    this.modalWindow.message = 'Are you sure you want to clear all mappings?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      this.cfg.errorService.resetAll();\n      this.cfg.mappingService.removeAllMappings();\n    };\n    this.modalWindow.show();\n  }\n\n  /**\n   * Establish a modal window popup and if confirmed remove all documents and imported JARs from\n   * the server and reinitialize the DM.\n   */\n  private resetAll(): void {\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Reset';\n    this.modalWindow.headerText = 'Reset All Mappings and Imports?';\n    this.modalWindow.message = 'Are you sure you want to reset all mappings and clear all imported documents?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      this.cfg.errorService.resetAll();\n      this.cfg.fileService.resetMappings().toPromise().then( async() => {\n        this.cfg.mappings = null;\n        this.cfg.fileService.resetLibs().toPromise().then( async() => {\n          await this.cfg.initializationService.initialize();\n        });\n        this.cfg.clearDocs();\n        await this.cfg.initializationService.initialize();\n      }).catch((error: any) => {\n        if (error.status === 0) {\n          this.cfg.errorService.addError(new ErrorInfo({\n            message: 'Fatal network error: Could not connect to AtlasMap design runtime service.',\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        } else {\n          this.cfg.errorService.addError(new ErrorInfo({message: 'Could not reset mapping definitions.',\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        }\n      });\n    };\n    this.modalWindow.show();\n  }\n\n  private editTemplate(): void {\n    const self: ToolbarComponent = this;\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Save';\n    this.modalWindow.headerText = this.cfg.mappings.templateExists() ? 'Edit Template' : 'Add Template';\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      const templateComponent: TemplateEditComponent = mw.nestedComponent as TemplateEditComponent;\n      templateComponent.templateText = this.cfg.mappings.templateText;\n    };\n    this.modalWindow.nestedComponentType = TemplateEditComponent;\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      const templateComponent: TemplateEditComponent = mw.nestedComponent as TemplateEditComponent;\n      this.cfg.mappings.templateText = templateComponent.templateText;\n      self.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  /**\n   * The user has clicked in the export file text wudget.\n   *\n   * @param event\n   */\n  handleExportClick(event) {\n    if (event.preventDefault) {\n        event.preventDefault();\n    }\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * The user has specified an AtlasMap mappings catalog file name into which the current live mappings and\n   * support documents will be exported.\n   *\n   * @param event\n   */\n  handleMappingsInstanceName(event) {\n      let filename = event.target.value;\n      if (filename !== null && filename.length > 0) {\n\n        // Tack on a .adm suffix if one wasn't already specified.\n        if (filename.split('.').pop() !== 'adm') {\n          filename = filename.concat('.adm');\n        }\n        this.mappingsFileName = filename;\n      }\n    }\n\n  /**\n   * The user has requested their current mappings be exported.  Use the mapping management\n   * service to establish the file content and to push it down to the server.\n   *\n   * @param event\n   */\n  handleExportMapping(event) {\n    let fileName = this.mappingsFileName;\n    if (this.mappingsFileName.length === 0) {\n        fileName = 'atlasmap-mapping.adm';\n    }\n    this.cfg.fileService.exportMappingsCatalog(fileName);\n  }\n\n  /**\n   * Cancel button - Export > Current Mapping\n   */\n  handleExportMappingCancel(): void {\n    this.mappingsFileName = '';\n  }\n\n  conditionalMappingExpressionEnabled(): boolean {\n    return (this.cfg.mappings && this.cfg.mappings.activeMapping &&\n      this.cfg.mappings.activeMapping.transition &&\n      this.cfg.mappings.activeMapping.transition.enableExpression);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      f(x)\n      \n    \n\n    \n      \n    \n\n    |\n\n    \n      \n        \n      \n    \n\n    \n      \n      \n        \n          \n            Export mappings\n              \n                OK\n                Cancel\n            \n          \n        \n      \n    \n\n    |\n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n      \n\n      \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Types\n            \n          \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Lines\n            \n          \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Mapped Fields\n            \n          \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Unmapped Fields\n            \n          \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Mapping Preview\n            \n          \n          \n        \n        \n        \n          \n            \n              \n                Reset All\n              \n            \n          \n        \n        \n          \n          \n            \n              \n                Clear All Mappings\n              \n            \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            f(x)                            |                                                                          Export mappings                              OK                Cancel                                            |                                                                                                                                                            Show Types                                                                                                                                                                Show Lines                                                                                                                                                                Show Mapped Fields                                                                                                                                                                Show Unmapped Fields                                                                                                                                                                Show Mapping Preview                                                                                                            Reset All                                                                                                                  Clear All Mappings                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransitionDelimiterModel.html":{"url":"classes/TransitionDelimiterModel.html","title":"class - TransitionDelimiterModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransitionDelimiterModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualDelimiter\n                            \n                            \n                                delimiter\n                            \n                            \n                                prettyName\n                            \n                            \n                                serializedValue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(delimiter: TransitionDelimiter, serializedValue: string, prettyName: string, actualDelimiter)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        delimiter\n                                                  \n                                                        \n                                                                        TransitionDelimiter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serializedValue\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prettyName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actualDelimiter\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actualDelimiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delimiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionDelimiter\n\n                        \n                    \n                    \n                        \n                            Default value : TransitionDelimiter.SPACE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prettyName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serializedValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ExpressionModel } from './expression.model';\nimport { FieldAction } from './field-action.model';\n\nexport enum TransitionMode {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  ENUM = 'ENUM',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  FOR_EACH = 'FOR_EACH'\n}\n\nexport enum TransitionDelimiter {\n  NONE, AMPERSAND, AT_SIGN, BACKSLASH, COLON, COMMA, DASH, EQUAL, HASH,\n  MULTI_SPACE, PERIOD, PIPE, SEMICOLON, SLASH, SPACE, UNDERSCORE, USER_DEFINED\n}\n\nexport class TransitionDelimiterModel {\n  delimiter: TransitionDelimiter = TransitionDelimiter.SPACE;\n  serializedValue: string = null;\n  prettyName: string = null;\n  actualDelimiter = '';\n\n  constructor(\n    delimiter: TransitionDelimiter, serializedValue: string, prettyName: string, actualDelimiter) {\n    this.delimiter = delimiter;\n    this.serializedValue = serializedValue;\n    this.prettyName = prettyName;\n    this.actualDelimiter = actualDelimiter;\n  }\n}\n\nexport class TransitionModel {\n  static delimiterModels: TransitionDelimiterModel[] = [];\n\n  mode: TransitionMode = TransitionMode.ONE_TO_ONE;\n  delimiter: TransitionDelimiter = TransitionDelimiter.SPACE;\n  userDelimiter = '';\n  lookupTableName: string = null;\n  expression: ExpressionModel;\n  enableExpression = false;\n  transitionFieldAction: FieldAction;\n\n  constructor() {\n    TransitionModel.initialize();\n  }\n\n  static initialize() {\n    if (TransitionModel.delimiterModels.length === 0) {\n      const models: TransitionDelimiterModel[] = [];\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.NONE, null, '[None]', ''));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.AMPERSAND, 'Ampersand', 'Ampersand [&]', '\\&'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.AT_SIGN, 'AtSign', 'At Sign [@]', '\\@'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.BACKSLASH, 'Backslash', 'Backslash [\\\\]', '\\\\'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.COLON, 'Colon', 'Colon [:]', '\\:'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.COMMA, 'Comma', 'Comma [,]', '\\,'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.DASH, 'Dash', 'Dash [-]', '\\-'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.EQUAL, 'Equal', 'Equal [=]', '\\='));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.HASH, 'Hash', 'Hash [#]', '\\#'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.MULTI_SPACE, 'MultiSpace', 'Multi Spaces', '  '));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.PERIOD, 'Period', 'Period [.]', '\\.'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.PIPE, 'Pipe', 'Pipe [|]', '\\|'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SEMICOLON, 'Semicolon', 'Semicolon [;]', '\\;'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SLASH, 'Slash', 'Slash [/]', '\\/'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SPACE, 'Space', 'Space [ ]', ' '));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.UNDERSCORE, 'Underscore', 'Underscore [_]', '\\_'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.USER_DEFINED, 'User defined', 'User defined', ''));\n      TransitionModel.delimiterModels = models;\n    }\n  }\n\n  /**\n   * Translate a mapping mode number into a string.\n   * @param mode\n   */\n  static getMappingModeName(mode: TransitionMode): string {\n    let actionName: string;\n\n    switch (mode) {\n      case TransitionMode.ONE_TO_ONE: {\n        actionName = 'One to One';\n        break;\n      }\n      case TransitionMode.MANY_TO_ONE: {\n        actionName = 'Many to One';\n        break;\n      }\n      case TransitionMode.ONE_TO_MANY: {\n        actionName = 'One to Many';\n        break;\n      }\n      case TransitionMode.ENUM: {\n        actionName = 'ENUM';\n        break;\n      }\n      case TransitionMode.FOR_EACH: {\n        actionName = 'For Each';\n        break;\n      }\n      default: {\n         actionName = '';\n         break;\n      }\n    }\n    return actionName;\n  }\n\n  getPrettyName() {\n    let transitionFieldActionName = '';\n    if (this.transitionFieldAction) {\n      transitionFieldActionName = ' (' + this.transitionFieldAction.name + ')';\n    }\n    if (this.mode === TransitionMode.ONE_TO_MANY) {\n      return TransitionModel.getMappingModeName(this.mode) + transitionFieldActionName;\n    } else if (this.mode === TransitionMode.MANY_TO_ONE) {\n      return TransitionModel.getMappingModeName(this.mode) + transitionFieldActionName;\n    } else if (this.mode === TransitionMode.ENUM) {\n      return 'Enum (table: ' + this.lookupTableName + ')';\n    }\n    return TransitionModel.getMappingModeName(this.mode);\n  }\n\n  isOneToManyMode(): boolean {\n    return this.mode === TransitionMode.ONE_TO_MANY;\n  }\n\n  isOneToOneMode(): boolean {\n    return this.mode === TransitionMode.ONE_TO_ONE;\n  }\n\n  isManyToOneMode(): boolean {\n    return this.mode === TransitionMode.MANY_TO_ONE;\n  }\n\n  isForEachMode(): boolean {\n    return this.mode === TransitionMode.FOR_EACH;\n  }\n\n  isEnumerationMode(): boolean {\n    return this.mode === TransitionMode.ENUM;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransitionModel.html":{"url":"classes/TransitionModel.html","title":"class - TransitionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransitionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delimiter\n                            \n                            \n                                    Static\n                                delimiterModels\n                            \n                            \n                                enableExpression\n                            \n                            \n                                expression\n                            \n                            \n                                lookupTableName\n                            \n                            \n                                mode\n                            \n                            \n                                transitionFieldAction\n                            \n                            \n                                userDelimiter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getMappingModeName\n                            \n                            \n                                getPrettyName\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                isEnumerationMode\n                            \n                            \n                                isForEachMode\n                            \n                            \n                                isManyToOneMode\n                            \n                            \n                                isOneToManyMode\n                            \n                            \n                                isOneToOneMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:56\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delimiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionDelimiter\n\n                        \n                    \n                    \n                        \n                            Default value : TransitionDelimiter.SPACE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            delimiterModels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionDelimiterModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableExpression\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expression\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExpressionModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lookupTableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionMode\n\n                        \n                    \n                    \n                        \n                            Default value : TransitionMode.ONE_TO_ONE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transitionFieldAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldAction\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userDelimiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:52\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getMappingModeName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMappingModeName(mode: TransitionMode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:90\n                \n            \n\n\n            \n                \n                    Translate a mapping mode number into a string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mode\n                                    \n                                                TransitionMode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPrettyName\n                        \n                        \n                    \n                \n            \n            \n                \ngetPrettyName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnumerationMode\n                        \n                        \n                    \n                \n            \n            \n                \nisEnumerationMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isForEachMode\n                        \n                        \n                    \n                \n            \n            \n                \nisForEachMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isManyToOneMode\n                        \n                        \n                    \n                \n            \n            \n                \nisManyToOneMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isOneToManyMode\n                        \n                        \n                    \n                \n            \n            \n                \nisOneToManyMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isOneToOneMode\n                        \n                        \n                    \n                \n            \n            \n                \nisOneToOneMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExpressionModel } from './expression.model';\nimport { FieldAction } from './field-action.model';\n\nexport enum TransitionMode {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  ENUM = 'ENUM',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  FOR_EACH = 'FOR_EACH'\n}\n\nexport enum TransitionDelimiter {\n  NONE, AMPERSAND, AT_SIGN, BACKSLASH, COLON, COMMA, DASH, EQUAL, HASH,\n  MULTI_SPACE, PERIOD, PIPE, SEMICOLON, SLASH, SPACE, UNDERSCORE, USER_DEFINED\n}\n\nexport class TransitionDelimiterModel {\n  delimiter: TransitionDelimiter = TransitionDelimiter.SPACE;\n  serializedValue: string = null;\n  prettyName: string = null;\n  actualDelimiter = '';\n\n  constructor(\n    delimiter: TransitionDelimiter, serializedValue: string, prettyName: string, actualDelimiter) {\n    this.delimiter = delimiter;\n    this.serializedValue = serializedValue;\n    this.prettyName = prettyName;\n    this.actualDelimiter = actualDelimiter;\n  }\n}\n\nexport class TransitionModel {\n  static delimiterModels: TransitionDelimiterModel[] = [];\n\n  mode: TransitionMode = TransitionMode.ONE_TO_ONE;\n  delimiter: TransitionDelimiter = TransitionDelimiter.SPACE;\n  userDelimiter = '';\n  lookupTableName: string = null;\n  expression: ExpressionModel;\n  enableExpression = false;\n  transitionFieldAction: FieldAction;\n\n  constructor() {\n    TransitionModel.initialize();\n  }\n\n  static initialize() {\n    if (TransitionModel.delimiterModels.length === 0) {\n      const models: TransitionDelimiterModel[] = [];\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.NONE, null, '[None]', ''));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.AMPERSAND, 'Ampersand', 'Ampersand [&]', '\\&'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.AT_SIGN, 'AtSign', 'At Sign [@]', '\\@'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.BACKSLASH, 'Backslash', 'Backslash [\\\\]', '\\\\'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.COLON, 'Colon', 'Colon [:]', '\\:'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.COMMA, 'Comma', 'Comma [,]', '\\,'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.DASH, 'Dash', 'Dash [-]', '\\-'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.EQUAL, 'Equal', 'Equal [=]', '\\='));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.HASH, 'Hash', 'Hash [#]', '\\#'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.MULTI_SPACE, 'MultiSpace', 'Multi Spaces', '  '));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.PERIOD, 'Period', 'Period [.]', '\\.'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.PIPE, 'Pipe', 'Pipe [|]', '\\|'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SEMICOLON, 'Semicolon', 'Semicolon [;]', '\\;'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SLASH, 'Slash', 'Slash [/]', '\\/'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SPACE, 'Space', 'Space [ ]', ' '));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.UNDERSCORE, 'Underscore', 'Underscore [_]', '\\_'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.USER_DEFINED, 'User defined', 'User defined', ''));\n      TransitionModel.delimiterModels = models;\n    }\n  }\n\n  /**\n   * Translate a mapping mode number into a string.\n   * @param mode\n   */\n  static getMappingModeName(mode: TransitionMode): string {\n    let actionName: string;\n\n    switch (mode) {\n      case TransitionMode.ONE_TO_ONE: {\n        actionName = 'One to One';\n        break;\n      }\n      case TransitionMode.MANY_TO_ONE: {\n        actionName = 'Many to One';\n        break;\n      }\n      case TransitionMode.ONE_TO_MANY: {\n        actionName = 'One to Many';\n        break;\n      }\n      case TransitionMode.ENUM: {\n        actionName = 'ENUM';\n        break;\n      }\n      case TransitionMode.FOR_EACH: {\n        actionName = 'For Each';\n        break;\n      }\n      default: {\n         actionName = '';\n         break;\n      }\n    }\n    return actionName;\n  }\n\n  getPrettyName() {\n    let transitionFieldActionName = '';\n    if (this.transitionFieldAction) {\n      transitionFieldActionName = ' (' + this.transitionFieldAction.name + ')';\n    }\n    if (this.mode === TransitionMode.ONE_TO_MANY) {\n      return TransitionModel.getMappingModeName(this.mode) + transitionFieldActionName;\n    } else if (this.mode === TransitionMode.MANY_TO_ONE) {\n      return TransitionModel.getMappingModeName(this.mode) + transitionFieldActionName;\n    } else if (this.mode === TransitionMode.ENUM) {\n      return 'Enum (table: ' + this.lookupTableName + ')';\n    }\n    return TransitionModel.getMappingModeName(this.mode);\n  }\n\n  isOneToManyMode(): boolean {\n    return this.mode === TransitionMode.ONE_TO_MANY;\n  }\n\n  isOneToOneMode(): boolean {\n    return this.mode === TransitionMode.ONE_TO_ONE;\n  }\n\n  isManyToOneMode(): boolean {\n    return this.mode === TransitionMode.MANY_TO_ONE;\n  }\n\n  isForEachMode(): boolean {\n    return this.mode === TransitionMode.FOR_EACH;\n  }\n\n  isEnumerationMode(): boolean {\n    return this.mode === TransitionMode.ENUM;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransitionSelectionComponent.html":{"url":"components/TransitionSelectionComponent.html","title":"component - TransitionSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TransitionSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                transition-selection\n            \n\n\n\n\n            \n                templateUrl\n                ./transition-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configSelectionChanged\n                            \n                            \n                                getMappedValueCount\n                            \n                            \n                                getMultiplicityActionConfigs\n                            \n                            \n                                isIndexArg\n                            \n                            \n                                modeIsEnum\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showLookupTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                cfg\n                            \n                            \n                                mapping\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :         FieldAction\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nconfigSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:156\n                \n            \n\n\n            \n                \n                    A mapping field action configuration selection has been made.  Note that action field arguments, if any,\nmay be specified by either a text field or pull-down menu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedValueCount\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedValueCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMultiplicityActionConfigs\n                        \n                        \n                    \n                \n            \n            \n                \ngetMultiplicityActionConfigs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     FieldActionDefinition[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isIndexArg\n                        \n                        \n                    \n                \n            \n            \n                \nisIndexArg(argVal: string, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            modeIsEnum\n                        \n                        \n                    \n                \n            \n            \n                \nmodeIsEnum()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showLookupTable\n                        \n                        \n                    \n                \n            \n            \n                \nshowLookupTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : DataMapperUtil.toDisplayable\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { TransitionDelimiter, TransitionMode } from '../../models/transition.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { MappingModel } from '../../models/mapping.model';\nimport { ModalWindowComponent } from '../modal/modal-window.component';\nimport { LookupTableComponent } from './lookup-table.component';\nimport { FieldAction, FieldActionDefinition, Multiplicity } from '../../models/field-action.model';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\nimport { LookupTable } from '../../models/lookup-table.model';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from '../../models/error.model';\n\n@Component({\n  selector: 'transition-selection',\n  templateUrl: './transition-selection.component.html'\n})\n\nexport class TransitionSelectionComponent implements OnInit {\n  @Input() cfg: ConfigModel;\n  @Input() modalWindow: ModalWindowComponent;\n  @Input() mapping: MappingModel;\n  @Input() action: FieldAction;\n\n  getLabel = DataMapperUtil.toDisplayable;\n\n  ngOnInit(): void {\n    const that = this;\n\n    // $(document).ready( function() {\n    jQuery(function() {\n      // Invoke the combobox so it supersedes the stock select.\n      // $('select#separator').combobox({clearIfNoMatch: false});\n\n      $('select#separator').on('change', function() {\n\n        // Check the combobox select.\n        const optionSelected = $(this).find('option:selected');\n        const selectedValue: any = optionSelected.val();\n\n        if (selectedValue) {\n          that.mapping.transition.delimiter = parseInt(selectedValue, 10);\n          that.cfg.mappingService.notifyMappingUpdated();\n          return;\n        }\n        const inputValue: any = $(this).val();\n\n        if (inputValue) {\n          that.mapping.transition.delimiter = TransitionDelimiter.USER_DEFINED;\n          that.mapping.transition.userDelimiter = inputValue;\n          that.cfg.mappingService.notifyMappingUpdated();\n          return;\n        }\n      });\n\n      // Replace the user input when focus is lost.\n      $('.combobox').on('blur', function() {\n\n        if (that.mapping.transition.delimiter === TransitionDelimiter.USER_DEFINED) {\n          $(this).find('option:selected').val(that.mapping.transition.userDelimiter);\n          $(this).val(that.mapping.transition.userDelimiter).trigger('input');\n        }\n      });\n\n      // Check the combobox input text field.\n      /* NOTE: re-enable this function for non-standard delimiters with combobox\n      $('.combobox').on('input', function() {\n\n        const inputValue: any = $(this).val();\n\n        if (inputValue) {\n          if (inputValue.length > 1) {\n            that.cfg.errorService.error('The separator delimiter must be one character in length.', null);\n            return;\n          }\n          that.fieldPair.transition.delimiter = TransitionDelimiter.USER_DEFINED;\n          that.fieldPair.transition.userDelimiter = inputValue;\n          that.cfg.mappingService.updateMappedField(that.fieldPair, false, false);\n        }\n      });\n      */\n    });\n\n  }\n\n  modeIsEnum(): boolean {\n    return this.mapping.transition.isEnumerationMode();\n  }\n\ngetMappedValueCount(): number {\n    const tableName: string = this.mapping.transition.lookupTableName;\n    if (tableName == null) {\n      return 0;\n    }\n    const table: LookupTable = this.cfg.mappings.getTableByName(tableName);\n    if (!table || !table.entries) {\n      return 0;\n    }\n    return table.entries.length;\n  }\n\n  showLookupTable(): void {\n    const mapping: MappingModel = this.cfg.mappings.activeMapping;\n\n    if (!mapping.isFullyMapped()) {\n      this.cfg.errorService.addError(new ErrorInfo({message: 'Please select source and target fields before mapping values.',\n        level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.USER, mapping: mapping}));\n      return;\n    }\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Finish';\n    this.modalWindow.headerText = 'Map Enumeration Values';\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      const c: LookupTableComponent = mw.nestedComponent as LookupTableComponent;\n      c.initialize(this.cfg, this.mapping);\n    };\n    this.modalWindow.nestedComponentType = LookupTableComponent;\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      const c: LookupTableComponent = mw.nestedComponent as LookupTableComponent;\n      c.saveTable();\n      this.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  getMultiplicityActionConfigs(): FieldActionDefinition[] {\n    if (this.mapping.transition.mode === TransitionMode.ONE_TO_MANY) {\n      return this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, true, Multiplicity.ONE_TO_MANY);\n    } else if (this.mapping.transition.mode === TransitionMode.MANY_TO_ONE) {\n      return this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, true, Multiplicity.MANY_TO_ONE);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * A mapping field action configuration selection has been made.  Note that action field arguments, if any,\n   * may be specified by either a text field or pull-down menu.\n   * @param event\n   */\n  configSelectionChanged(event: any) {\n    const attributes: any = event.target.selectedOptions.item(0).attributes;\n    const selectedActionName: any = attributes.getNamedItem('value').value;\n    const action: FieldAction = this.action;\n    if (action.name !== selectedActionName) {\n      action.argumentValues = [];  // Invalidate the previously selected field action arguments.\n      const multiplicity = this.mapping.transition.mode === TransitionMode.ONE_TO_MANY\n       ? Multiplicity.ONE_TO_MANY : Multiplicity.MANY_TO_ONE;\n      const fieldActionDefinition = this.cfg.fieldActionService.getActionDefinitionForName(selectedActionName, multiplicity);\n      fieldActionDefinition.populateFieldAction(action);\n\n      // If the field action configuration predefines argument values then populate the fields with\n      // default values.  Needed to support pull-down menus in action argument definitions.\n      if (action.argumentValues.values && action.argumentValues.length > 0\n        && fieldActionDefinition.arguments[0] && fieldActionDefinition.arguments[0].values\n        && fieldActionDefinition.arguments[0].values.length > 0) {\n        for (let i = 0; i \n    \n\n    \n        \n\n  \n    {{ getMappedValueCount() }} values mapped\n    \n  \n\n  \n    \n      \n        {{ getLabel(actionConfig.name) }}\n        \n        \n    \n\n    \n      \n\n        \n        \n\n      \n    \n\n\n        \n          \n            {{ mapping.transition.userDelimiter }}\n            {{ delimiter.prettyName }}\n          \n        \n      \n-->\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ getMappedValueCount() }} values mapped                          {{ getLabel(actionConfig.name) }}                                                                                      {{ mapping.transition.userDelimiter }}            {{ delimiter.prettyName }}                        -->  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'TransitionSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/atlasmap-navbar.component.ts\n            \n            component\n            AtlasmapNavbarComponent\n            \n                41 %\n                (14/34)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts\n            \n            class\n            DataMapperUtil\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/common/focus.directive.ts\n            \n            directive\n            FocusDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/common/to-error-icon-class.pipe.ts\n            \n            pipe\n            ToErrorIconClassPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts\n            \n            component\n            ConstantFieldEditComponent\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts\n            \n            component\n            DataMapperAppComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts\n            \n            component\n            DataMapperErrorComponent\n            \n                28 %\n                (6/21)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts\n            \n            component\n            FieldEditComponent\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts\n            \n            component\n            LineMachineComponent\n            \n                6 %\n                (2/30)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts\n            \n            class\n            LineModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts\n            \n            component\n            NamespaceEditComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts\n            \n            component\n            PropertyFieldEditComponent\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/template-edit.component.ts\n            \n            component\n            TemplateEditComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts\n            \n            component\n            DataMapperAppExampleHostComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts\n            \n            component\n            ClassNameComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/document/document-definition.component.ts\n            \n            component\n            DocumentDefinitionComponent\n            \n                23 %\n                (11/47)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts\n            \n            component\n            DocumentFieldDetailComponent\n            \n                3 %\n                (1/27)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/collapsable-header.component.ts\n            \n            component\n            CollapsableHeaderComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts\n            \n            component\n            LookupTableComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts\n            \n            class\n            LookupTableData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts\n            \n            component\n            MappingDetailComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts\n            \n            component\n            MappingFieldActionArgumentComponent\n            \n                35 %\n                (7/20)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts\n            \n            component\n            MappingFieldActionComponent\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts\n            \n            component\n            MappingFieldContainerComponent\n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts\n            \n            component\n            MappingFieldDetailComponent\n            \n                11 %\n                (2/18)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts\n            \n            component\n            MappingSelectionSectionComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts\n            \n            component\n            MappingSelectionComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts\n            \n            component\n            TransitionSelectionComponent\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts\n            \n            component\n            MappingListFieldComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts\n            \n            component\n            MappingListComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts\n            \n            component\n            NamespaceListComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts\n            \n            component\n            ModalErrorDetailComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts\n            \n            component\n            ModalErrorWindowComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts\n            \n            interface\n            ModalErrorWindowValidator\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts\n            \n            component\n            EmptyModalBodyComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts\n            \n            component\n            ModalWindowComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts\n            \n            interface\n            ModalWindowValidator\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/toolbar/expression.component.ts\n            \n            component\n            ExpressionComponent\n            \n                14 %\n                (7/47)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                37 %\n                (9/24)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            alertModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            bsDropdownModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            httpClientXsrfModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            loggerModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            tooltipModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            typeaheadModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/config.model.ts\n            \n            class\n            ConfigModel\n            \n                4 %\n                (2/48)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/config.model.ts\n            \n            class\n            DataMapperInitializationModel\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/config.model.ts\n            \n            class\n            DocumentInitializationModel\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts\n            \n            class\n            DocumentDefinition\n            \n                7 %\n                (4/53)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts\n            \n            class\n            NamespaceModel\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts\n            \n            class\n            PaddingField\n            \n                2 %\n                (1/50)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/error.model.ts\n            \n            class\n            ErrorInfo\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/examples.ts\n            \n            class\n            Examples\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            ExpressionModel\n            \n                20 %\n                (5/24)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            ExpressionNode\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            ExpressionUpdatedEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            FieldNode\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            TextNode\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n            \n            class\n            FieldAction\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n            \n            class\n            FieldActionArgument\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n            \n            class\n            FieldActionArgumentValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n            \n            class\n            FieldActionDefinition\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field.model.ts\n            \n            class\n            EnumValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field.model.ts\n            \n            class\n            Field\n            \n                2 %\n                (1/49)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts\n            \n            class\n            LookupTable\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts\n            \n            class\n            LookupTableEntry\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts\n            \n            class\n            MappingDefinition\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n            \n            class\n            MappedField\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n            \n            class\n            MappedFieldParsingData\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n            \n            class\n            MappingModel\n            \n                15 %\n                (5/32)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n            \n            class\n            TransitionDelimiterModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n            \n            class\n            TransitionModel\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts\n            \n            injectable\n            ApiHttpXsrfTokenExtractor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts\n            \n            interceptor\n            ApiXsrfInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/document-management.service.ts\n            \n            injectable\n            DocumentManagementService\n            \n                23 %\n                (7/30)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts\n            \n            injectable\n            ErrorHandlerService\n            \n                70 %\n                (14/20)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/field-action.service.ts\n            \n            injectable\n            FieldActionService\n            \n                36 %\n                (7/19)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/file-management.service.ts\n            \n            injectable\n            FileManagementService\n            \n                55 %\n                (10/18)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/initialization.service.ts\n            \n            injectable\n            InitializationService\n            \n                23 %\n                (5/21)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/mapping-management.service.ts\n            \n            injectable\n            MappingManagementService\n            \n                32 %\n                (14/43)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/utils/lookup-table-util.ts\n            \n            class\n            LookupTableUtil\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/utils/mapping-serializer.ts\n            \n            class\n            MappingSerializer\n            \n                14 %\n                (4/27)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts\n            \n            class\n            MappingUtil\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.trace.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @angular/animations : ^7.2.15\n        \n            bootstrap : ^4.1.2\n        \n            chart.js : ^2.5.0\n        \n            classlist.js : ^1.1.20150312\n        \n            core-js : ^2.5.5\n        \n            font-awesome : ^4.7.0\n        \n            jquery : ^3.3.0\n        \n            jquery-match-height : ^0.7.2\n        \n            mkdirp : ^0.5.1\n        \n            moment : ^2.20.1\n        \n            ncp : ^2.0.0\n        \n            ngx-bootstrap : ^5.2.0\n        \n            opn-cli : ^3.1.0\n        \n            patternfly-bootstrap-combobox : ^1.1.6\n        \n            patternfly-ng : ^4.0.0\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ^0.8.26\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CollectionType   (src/.../config.types.ts)\n                        \n                        \n                            DocumentType   (src/.../config.types.ts)\n                        \n                        \n                            ErrorLevel   (src/.../error.model.ts)\n                        \n                        \n                            ErrorScope   (src/.../error.model.ts)\n                        \n                        \n                            ErrorType   (src/.../error.model.ts)\n                        \n                        \n                            FieldMode   (src/.../config.types.ts)\n                        \n                        \n                            InspectionType   (src/.../config.types.ts)\n                        \n                        \n                            Multiplicity   (src/.../field-action.model.ts)\n                        \n                        \n                            TransitionDelimiter   (src/.../transition.model.ts)\n                        \n                        \n                            TransitionMode   (src/.../transition.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/lib/atlasmap-data-mapper/common/config.types.ts\n    \n        \n            \n                \n                    \n                        \n                        CollectionType\n                    \n                \n                        \n                            \n                                 ARRAY\n                            \n                        \n                        \n                            \n                                Value : ARRAY\n                            \n                        \n                        \n                            \n                                 LIST\n                            \n                        \n                        \n                            \n                                Value : LIST\n                            \n                        \n                        \n                            \n                                 MAP\n                            \n                        \n                        \n                            \n                                Value : MAP\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : NONE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DocumentType\n                    \n                \n                        \n                            \n                                 JAVA\n                            \n                        \n                        \n                            \n                                Value : JAVA\n                            \n                        \n                        \n                            \n                                 JAVA_ARCHIVE\n                            \n                        \n                        \n                            \n                                Value : JAR\n                            \n                        \n                        \n                            \n                                 XML\n                            \n                        \n                        \n                            \n                                Value : XML\n                            \n                        \n                        \n                            \n                                 XSD\n                            \n                        \n                        \n                            \n                                Value : XSD\n                            \n                        \n                        \n                            \n                                 JSON\n                            \n                        \n                        \n                            \n                                Value : JSON\n                            \n                        \n                        \n                            \n                                 CORE\n                            \n                        \n                        \n                            \n                                Value : Core\n                            \n                        \n                        \n                            \n                                 CSV\n                            \n                        \n                        \n                            \n                                Value : CSV\n                            \n                        \n                        \n                            \n                                 CONSTANT\n                            \n                        \n                        \n                            \n                                Value : Constants\n                            \n                        \n                        \n                            \n                                 PROPERTY\n                            \n                        \n                        \n                            \n                                Value : Property\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FieldMode\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                 EDIT\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        InspectionType\n                    \n                \n                        \n                            \n                                 JAVA_CLASS\n                            \n                        \n                        \n                            \n                                Value : JAVA_CLASS\n                            \n                        \n                        \n                            \n                                 SCHEMA\n                            \n                        \n                        \n                            \n                                Value : SCHEMA\n                            \n                        \n                        \n                            \n                                 INSTANCE\n                            \n                        \n                        \n                            \n                                Value : INSTANCE\n                            \n                        \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : UNKNOWN\n                            \n                        \n            \n        \n\n    src/app/lib/atlasmap-data-mapper/models/error.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorLevel\n                    \n                \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                Value : DEBUG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : INFO\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                Value : WARN\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : ERROR\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ErrorScope\n                    \n                \n                        \n                            \n                                 APPLICATION\n                            \n                        \n                        \n                            \n                                Value : APPLICATION\n                            \n                        \n                        \n                            \n                                 MAPPING\n                            \n                        \n                        \n                            \n                                Value : MAPPING\n                            \n                        \n                        \n                            \n                                 FIELD\n                            \n                        \n                        \n                            \n                                Value : FIELD\n                            \n                        \n                        \n                            \n                                 FORM\n                            \n                        \n                        \n                            \n                                Value : FORM\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ErrorType\n                    \n                \n                        \n                            \n                                 INTERNAL\n                            \n                        \n                        \n                            \n                                Value : INTERNAL\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 VALIDATION\n                            \n                        \n                        \n                            \n                                Value : VALIDATION\n                            \n                        \n                        \n                            \n                                 PREVIEW\n                            \n                        \n                        \n                            \n                                Value : PREVIEW\n                            \n                        \n                        \n                            \n                                 FORM\n                            \n                        \n                        \n                            \n                                Value : FORM\n                            \n                        \n            \n        \n\n    src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Multiplicity\n                    \n                \n                        \n                            \n                                 ONE_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : ONE_TO_ONE\n                            \n                        \n                        \n                            \n                                 ONE_TO_MANY\n                            \n                        \n                        \n                            \n                                Value : ONE_TO_MANY\n                            \n                        \n                        \n                            \n                                 MANY_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : MANY_TO_ONE\n                            \n                        \n                        \n                            \n                                 ZERO_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : ZERO_TO_ONE\n                            \n                        \n            \n        \n\n    src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TransitionDelimiter\n                    \n                \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                 AMPERSAND\n                            \n                        \n                        \n                            \n                                 AT_SIGN\n                            \n                        \n                        \n                            \n                                 BACKSLASH\n                            \n                        \n                        \n                            \n                                 COLON\n                            \n                        \n                        \n                            \n                                 COMMA\n                            \n                        \n                        \n                            \n                                 DASH\n                            \n                        \n                        \n                            \n                                 EQUAL\n                            \n                        \n                        \n                            \n                                 HASH\n                            \n                        \n                        \n                            \n                                 MULTI_SPACE\n                            \n                        \n                        \n                            \n                                 PERIOD\n                            \n                        \n                        \n                            \n                                 PIPE\n                            \n                        \n                        \n                            \n                                 SEMICOLON\n                            \n                        \n                        \n                            \n                                 SLASH\n                            \n                        \n                        \n                            \n                                 SPACE\n                            \n                        \n                        \n                            \n                                 UNDERSCORE\n                            \n                        \n                        \n                            \n                                 USER_DEFINED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TransitionMode\n                    \n                \n                        \n                            \n                                 ONE_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : ONE_TO_ONE\n                            \n                        \n                        \n                            \n                                 ONE_TO_MANY\n                            \n                        \n                        \n                            \n                                Value : ONE_TO_MANY\n                            \n                        \n                        \n                            \n                                 ENUM\n                            \n                        \n                        \n                            \n                                Value : ENUM\n                            \n                        \n                        \n                            \n                                 MANY_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : MANY_TO_ONE\n                            \n                        \n                        \n                            \n                                 FOR_EACH\n                            \n                        \n                        \n                            \n                                Value : FOR_EACH\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAtlasMap Data Mapper UI\n\n\n\n\n\n\nGoogle Group\nThe AtlasMap is a data mapping solution with interactive web based user interface, that simplifies configuring integrations between Java, XML, and JSON data sources. You can design your data mapping on the AtlasMap Data Mapper UI canvas, and then run that data mapping via runtime engine. AtlasMap Data Mapper UI is primarily designed to work within the Syndesis UI.\nAtlasMap Documentation\nAll developer related documentation can be found at AtlasMap Documentation\nThe shortest path to run standalone AtlasMap\n\nCheckout AtlasMap repo from GitHub\n$ git clone https://github.com/atlasmap/atlasmap ${ATLASMAP}\nBuild AtlasMap runtime\n$ cd ${ATLASMAP}\n$ ./mvnw clean installor you can skip tests to get the build little bit faster\n$ ./mvnw clean install -DskipTests\nRun AtlasMap standalone\n$ cd ${ATLASMAP}/standalone\n$ ../mvnw -Pitests spring-boot:run\n\nThen AtlasMap UI is available at http://127.0.0.1:8585/ by default.\nLive update for UI development\nWhile standalone AtlasMap is running by following above, you can also run an another AtlasMap UI instance at different port by yarn start. This enables live update for UI code so you can see the outcome of your UI code change without build&restart manually.\n\nInstall Yarn\n\nInstall Data Mapper UI's dependencies\n$ cd ${ATLASMAP}/ui\n$ yarn install\nStart Data Mapper UI\n$ yarn start\n\nThe yarn start command will attempt to automatically open your browser window, but if it doesn't, open it directly with this URL: http://localhost:3000.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n            Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        DataMapperModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExampleAppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataMapperModule\n\n\n\ncluster_DataMapperModule_declarations\n\n\n\ncluster_DataMapperModule_exports\n\n\n\ncluster_DataMapperModule_providers\n\n\n\ncluster_ExampleAppModule\n\n\n\ncluster_ExampleAppModule_declarations\n\n\n\ncluster_ExampleAppModule_bootstrap\n\n\n\n\nClassNameComponent\n\nClassNameComponent\n\n\n\nDataMapperModule\n\nDataMapperModule\n\nDataMapperModule -->\n\nClassNameComponent->DataMapperModule\n\n\n\n\n\nCollapsableHeaderComponent\n\nCollapsableHeaderComponent\n\nDataMapperModule -->\n\nCollapsableHeaderComponent->DataMapperModule\n\n\n\n\n\nConstantFieldEditComponent\n\nConstantFieldEditComponent\n\nDataMapperModule -->\n\nConstantFieldEditComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppComponent\n\nDataMapperAppComponent\n\nDataMapperModule -->\n\nDataMapperAppComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppExampleHostComponent\n\nDataMapperAppExampleHostComponent\n\nDataMapperModule -->\n\nDataMapperAppExampleHostComponent->DataMapperModule\n\n\n\n\n\nDataMapperErrorComponent\n\nDataMapperErrorComponent\n\nDataMapperModule -->\n\nDataMapperErrorComponent->DataMapperModule\n\n\n\n\n\nDocumentDefinitionComponent\n\nDocumentDefinitionComponent\n\nDataMapperModule -->\n\nDocumentDefinitionComponent->DataMapperModule\n\n\n\n\n\nDocumentFieldDetailComponent\n\nDocumentFieldDetailComponent\n\nDataMapperModule -->\n\nDocumentFieldDetailComponent->DataMapperModule\n\n\n\n\n\nEmptyModalBodyComponent\n\nEmptyModalBodyComponent\n\nDataMapperModule -->\n\nEmptyModalBodyComponent->DataMapperModule\n\n\n\n\n\nExpressionComponent\n\nExpressionComponent\n\nDataMapperModule -->\n\nExpressionComponent->DataMapperModule\n\n\n\n\n\nFieldEditComponent\n\nFieldEditComponent\n\nDataMapperModule -->\n\nFieldEditComponent->DataMapperModule\n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nDataMapperModule -->\n\nFocusDirective->DataMapperModule\n\n\n\n\n\nLineMachineComponent\n\nLineMachineComponent\n\nDataMapperModule -->\n\nLineMachineComponent->DataMapperModule\n\n\n\n\n\nLookupTableComponent\n\nLookupTableComponent\n\nDataMapperModule -->\n\nLookupTableComponent->DataMapperModule\n\n\n\n\n\nMappingDetailComponent\n\nMappingDetailComponent\n\nDataMapperModule -->\n\nMappingDetailComponent->DataMapperModule\n\n\n\n\n\nMappingFieldActionArgumentComponent\n\nMappingFieldActionArgumentComponent\n\nDataMapperModule -->\n\nMappingFieldActionArgumentComponent->DataMapperModule\n\n\n\n\n\nMappingFieldActionComponent\n\nMappingFieldActionComponent\n\nDataMapperModule -->\n\nMappingFieldActionComponent->DataMapperModule\n\n\n\n\n\nMappingFieldContainerComponent\n\nMappingFieldContainerComponent\n\nDataMapperModule -->\n\nMappingFieldContainerComponent->DataMapperModule\n\n\n\n\n\nMappingFieldDetailComponent\n\nMappingFieldDetailComponent\n\nDataMapperModule -->\n\nMappingFieldDetailComponent->DataMapperModule\n\n\n\n\n\nMappingListComponent\n\nMappingListComponent\n\nDataMapperModule -->\n\nMappingListComponent->DataMapperModule\n\n\n\n\n\nMappingListFieldComponent\n\nMappingListFieldComponent\n\nDataMapperModule -->\n\nMappingListFieldComponent->DataMapperModule\n\n\n\n\n\nMappingSelectionComponent\n\nMappingSelectionComponent\n\nDataMapperModule -->\n\nMappingSelectionComponent->DataMapperModule\n\n\n\n\n\nMappingSelectionSectionComponent\n\nMappingSelectionSectionComponent\n\nDataMapperModule -->\n\nMappingSelectionSectionComponent->DataMapperModule\n\n\n\n\n\nModalErrorDetailComponent\n\nModalErrorDetailComponent\n\nDataMapperModule -->\n\nModalErrorDetailComponent->DataMapperModule\n\n\n\n\n\nModalErrorWindowComponent\n\nModalErrorWindowComponent\n\nDataMapperModule -->\n\nModalErrorWindowComponent->DataMapperModule\n\n\n\n\n\nModalWindowComponent\n\nModalWindowComponent\n\nDataMapperModule -->\n\nModalWindowComponent->DataMapperModule\n\n\n\n\n\nNamespaceEditComponent\n\nNamespaceEditComponent\n\nDataMapperModule -->\n\nNamespaceEditComponent->DataMapperModule\n\n\n\n\n\nNamespaceListComponent\n\nNamespaceListComponent\n\nDataMapperModule -->\n\nNamespaceListComponent->DataMapperModule\n\n\n\n\n\nPropertyFieldEditComponent\n\nPropertyFieldEditComponent\n\nDataMapperModule -->\n\nPropertyFieldEditComponent->DataMapperModule\n\n\n\n\n\nTemplateEditComponent\n\nTemplateEditComponent\n\nDataMapperModule -->\n\nTemplateEditComponent->DataMapperModule\n\n\n\n\n\nToErrorIconClassPipe\n\nToErrorIconClassPipe\n\nDataMapperModule -->\n\nToErrorIconClassPipe->DataMapperModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nDataMapperModule -->\n\nToolbarComponent->DataMapperModule\n\n\n\n\n\nTransitionSelectionComponent\n\nTransitionSelectionComponent\n\nDataMapperModule -->\n\nTransitionSelectionComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppComponent \n\nDataMapperAppComponent \n\nDataMapperAppComponent  -->\n\nDataMapperModule->DataMapperAppComponent \n\n\n\n\n\nDataMapperAppExampleHostComponent \n\nDataMapperAppExampleHostComponent \n\nDataMapperAppExampleHostComponent  -->\n\nDataMapperModule->DataMapperAppExampleHostComponent \n\n\n\nDataMapperAppExampleHostComponent  -->\n\nDataMapperModule->DataMapperAppExampleHostComponent \n\n\n\n\n\nModalErrorWindowComponent \n\nModalErrorWindowComponent \n\nModalErrorWindowComponent  -->\n\nDataMapperModule->ModalErrorWindowComponent \n\n\n\n\n\nModalWindowComponent \n\nModalWindowComponent \n\nModalWindowComponent  -->\n\nDataMapperModule->ModalWindowComponent \n\n\n\n\n\nExampleAppModule\n\nExampleAppModule\n\nExampleAppModule -->\n\nDataMapperModule->ExampleAppModule\n\n\n\n\n\nDocumentManagementService\n\nDocumentManagementService\n\nDataMapperModule -->\n\nDocumentManagementService->DataMapperModule\n\n\n\n\n\nErrorHandlerService\n\nErrorHandlerService\n\nDataMapperModule -->\n\nErrorHandlerService->DataMapperModule\n\n\n\n\n\nFieldActionService\n\nFieldActionService\n\nDataMapperModule -->\n\nFieldActionService->DataMapperModule\n\n\n\n\n\nFileManagementService\n\nFileManagementService\n\nDataMapperModule -->\n\nFileManagementService->DataMapperModule\n\n\n\n\n\nInitializationService\n\nInitializationService\n\nDataMapperModule -->\n\nInitializationService->DataMapperModule\n\n\n\n\n\nMappingManagementService\n\nMappingManagementService\n\nDataMapperModule -->\n\nMappingManagementService->DataMapperModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nExampleAppModule -->\n\nAppComponent->ExampleAppModule\n\n\n\n\n\nAtlasmapNavbarComponent\n\nAtlasmapNavbarComponent\n\nExampleAppModule -->\n\nAtlasmapNavbarComponent->ExampleAppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nExampleAppModule->AppComponent \n\n\n\n\n\nAtlasmapNavbarComponent \n\nAtlasmapNavbarComponent \n\nAtlasmapNavbarComponent  -->\n\nExampleAppModule->AtlasmapNavbarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    33 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    33 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            alertModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            bsDropdownModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            environment   (src/.../environment.dev.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.trace.ts)\n                        \n                        \n                            httpClientXsrfModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            loggerModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            tooltipModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            typeaheadModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            alertModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : AlertModule.forRoot()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bsDropdownModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : BsDropdownModule.forRoot()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpClientXsrfModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : HttpClientXsrfModule.withOptions(environment.xsrf)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggerModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : LoggerModule.forRoot(environment.ngxLoggerConfig)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tooltipModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : TooltipModule.forRoot()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeaheadModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : TypeaheadModule.forRoot()\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.dev.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  ngxLoggerConfig: {\n    level: NgxLoggerLevel.DEBUG,\n    disableConsoleLogging: false\n  },\n  xsrf: {\n    headerName: 'ATLASMAP-XSRF-TOKEN',\n    cookieName: 'ATLASMAP-XSRF-COOKIE',\n    defaultTokenValue: 'awesome',\n  },\n  backendUrls: {\n    atlasServiceUrl: 'http://localhost:8585/v2/atlas/',\n    javaInspectionServiceUrl: 'http://localhost:8585/v2/atlas/java/',\n    xmlInspectionServiceUrl: 'http://localhost:8585/v2/atlas/xml/',\n    jsonInspectionServiceUrl: 'http://localhost:8585/v2/atlas/json/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  ngxLoggerConfig: {\n    level: NgxLoggerLevel.OFF,\n    disableConsoleLogging: true\n  },\n  xsrf: {\n    headerName: 'ATLASMAP-XSRF-TOKEN',\n    cookieName: 'ATLASMAP-XSRF-COOKIE',\n    defaultTokenValue: 'awesome',\n  },\n  backendUrls: {\n    atlasServiceUrl: 'http://localhost:8585/v2/atlas/',\n    javaInspectionServiceUrl: 'http://localhost:8585/v2/atlas/java/',\n    xmlInspectionServiceUrl: 'http://localhost:8585/v2/atlas/xml/',\n    jsonInspectionServiceUrl: 'http://localhost:8585/v2/atlas/json/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  ngxLoggerConfig: {\n    level: NgxLoggerLevel.INFO,\n    disableConsoleLogging: true\n  },\n  xsrf: {\n    headerName: 'ATLASMAP-XSRF-TOKEN',\n    cookieName: 'ATLASMAP-XSRF-COOKIE',\n    defaultTokenValue: 'awesome',\n  },\n  backendUrls: {\n    atlasServiceUrl: '/v2/atlas/',\n    javaInspectionServiceUrl: '/v2/atlas/java/',\n    xmlInspectionServiceUrl: '/v2/atlas/xml/',\n    jsonInspectionServiceUrl: '/v2/atlas/json/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.trace.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  ngxLoggerConfig: {\n    level: NgxLoggerLevel.TRACE,\n    disableConsoleLogging: false\n  },\n  xsrf: {\n    headerName: 'ATLASMAP-XSRF-TOKEN',\n    cookieName: 'ATLASMAP-XSRF-COOKIE',\n    defaultTokenValue: 'awesome',\n  },\n  backendUrls: {\n    atlasServiceUrl: 'http://localhost:8585/v2/atlas/',\n    javaInspectionServiceUrl: 'http://localhost:8585/v2/atlas/java/',\n    xmlInspectionServiceUrl: 'http://localhost:8585/v2/atlas/xml/',\n    jsonInspectionServiceUrl: 'http://localhost:8585/v2/atlas/json/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
