var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AdmRedrawMappingLinesEvent.html",[0,0.189,1,2.439]],["body/classes/AdmRedrawMappingLinesEvent.html",[0,0.322,1,3.149,2,0.932,3,0.103,4,0.103,5,0.088,6,0.144,7,0.085,8,2.584,9,2.192,10,3.368,11,3.959,12,3.959,13,3.959,14,0.132,15,0.478,16,4.577,17,0.228,18,0.015,19,0.185,20,3.608,21,0.344,22,3.149,23,2.818,24,2.108,25,3.149,26,1.888,27,2.397,28,2.798,29,0.349,30,1.583,31,2.672,32,0.63,33,2.011,34,1.795,35,1.71,36,2.798,37,2.397,38,3.64,39,2.962,40,2.397,41,3.423,42,2.397,43,2.534,44,1.795,45,2.402,46,3.234,47,4.222,48,1.56,49,3.234,50,2.584,51,2.584,52,2.798,53,2.584,54,0.206,55,3.893,56,2.818,57,2.818,58,2.241,59,0.814,60,2.818,61,2.818,62,2.818,63,3.63,64,2.584,65,2.818,66,2.818,67,2.818,68,0.578,69,2.818,70,2.818,71,2.818,72,2.818,73,2.818,74,2.818,75,1.494,76,2.818,77,2.241,78,2.818,79,3.368,80,1.71,81,2.584,82,2.584,83,2.584,84,2.397,85,2.584,86,2.818,87,2.818,88,1.991,89,2.818,90,2.818,91,2.818,92,2.818,93,2.818,94,2.818,95,2.818,96,2.818,97,2.818,98,1.991,99,2.584,100,2.584,101,2.397,102,2.818,103,0.899,104,2.818,105,1.26,106,2.584,107,2.818,108,2.584,109,2.818,110,2.584,111,2.818,112,2.584,113,3.423,114,1.888,115,0.21,116,1.761,117,0.871,118,2.584,119,2.584,120,2.584,121,2.584,122,3.959,123,0.832,124,2.226,125,2.818,126,2.818,127,2.818,128,2.818,129,2.818,130,2.818,131,2.818,132,2.818,133,0.47,134,0.854,135,1.323,136,2.818,137,1.795,138,2.241,139,2.584,140,2.397,141,2.818,142,2.584,143,2.584,144,2.818,145,2.241,146,2.584,147,2.584,148,2.818,149,2.818,150,0.617,151,2.818,152,2.818,153,2.397,154,2.818,155,2.818,156,2.818,157,2.818,158,2.818,159,2.818,160,1.431,161,2.818,162,2.241,163,2.397,164,2.818,165,2.241,166,2.818,167,2.818,168,2.818,169,2.818,170,2.241,171,2.818,172,2.584,173,2.818,174,2.818,175,2.584,176,0.466,177,3.959,178,2.818,179,0.439,180,1.494,181,2.818,182,2.914,183,4.964,184,2.818,185,2.818,186,2.584,187,2.818,188,2.584,189,2.818,190,2.818,191,2.818,192,2.584,193,2.818,194,0.656,195,2.652,196,2.818,197,2.818,198,4.964,199,2.818,200,5.23,201,2.818,202,2.818,203,2.818,204,2.818,205,2.818,206,2.818,207,3.959,208,2.818,209,2.818,210,2.818,211,2.818,212,3.959,213,2.818,214,2.818,215,2.818,216,2.818,217,2.818,218,2.818,219,5.423,220,4.577,221,2.397,222,3.959,223,2.108,224,2.818,225,4.197,226,2.818,227,4.577,228,2.584,229,3.959,230,2.818,231,2.818,232,2.818,233,3.959,234,2.818,235,2.818,236,2.818,237,2.818,238,2.818,239,3.959,240,3.959,241,2.818,242,4.552,243,3.959,244,3.959,245,2.818,246,1.888,247,2.818,248,2.397,249,2.108,250,1.56,251,0.771,252,0.771,253,1.991,254,2.818,255,2.818,256,2.818,257,2.818,258,2.818,259,3.912,260,4.577,261,4.577,262,2.818,263,2.818,264,2.818,265,2.818,266,3.368,267,2.818,268,2.818,269,2.584,270,2.818,271,2.241,272,2.818,273,2.818,274,2.818,275,2.818,276,3.63,277,0.464,278,0.55,279,2.818,280,2.584,281,0.721,282,1.213,283,4.577,284,2.397,285,2.818,286,2.818,287,2.818,288,1.795,289,2.818,290,0.006,291,0.009,292,0.006]],["title/injectables/ApiHttpXsrfTokenExtractor.html",[293,1.952,294,2.608]],["body/injectables/ApiHttpXsrfTokenExtractor.html",[0,0.317,3,0.153,4,0.153,5,0.132,6,0.203,7,0.119,9,2.332,14,0.197,15,0.539,18,0.015,19,0.241,21,0.334,26,2.821,32,0.821,54,0.214,58,3.35,68,0.475,115,0.313,123,0.67,133,0.968,134,1.254,176,0.432,194,0.618,278,0.661,290,0.01,291,0.012,292,0.01,293,3.55,294,4.387,295,3.583,296,5.576,297,4.212,298,6.196,299,5.576,300,6.196,301,5.328,302,5.112,303,6.25,304,5.732,305,4.73,306,6.458,307,3.284,308,0.779,309,5.732,310,0.674,311,6.458,312,5.393,313,0.55,314,3.382,315,5.393,316,0.801,317,4.681,318,5.732,319,5.732,320,6.196,321,5.158,322,3.35,323,3.858,324,1.893,325,0.768,326,1.771,327,6.196,328,4.73,329,3.862,330,3.151,331,4.681,332,5.158,333,5.158,334,3.583,335,4.681,336,4.681,337,3.862,338,3.862,339,4.681,340,4.681,341,2.439,342,4.681,343,4.681,344,4.681,345,4.212,346,2.682,347,3.583,348,4.681,349,5.732,350,4.681,351,4.212,352,4.681,353,4.681,354,3.862,355,4.681,356,4.681]],["title/interceptors/ApiXsrfInterceptor.html",[329,2.812,334,2.608]],["body/interceptors/ApiXsrfInterceptor.html",[0,0.315,3,0.152,4,0.152,5,0.131,6,0.202,7,0.118,9,2.309,14,0.195,15,0.536,17,0.24,18,0.015,19,0.24,21,0.333,26,2.794,32,0.664,54,0.213,58,3.317,68,0.384,115,0.413,123,0.664,133,0.965,134,1.249,176,0.413,194,0.615,278,0.659,290,0.01,291,0.012,292,0.01,293,3.535,294,3.548,296,5.552,297,4.171,298,6.17,299,5.552,300,6.17,301,5.31,302,5.09,303,6.192,304,4.636,305,3.825,306,6.17,307,2.656,308,0.777,309,4.636,310,0.67,311,4.636,313,0.545,314,3.368,316,0.794,317,4.636,318,5.698,319,6.436,320,6.726,321,5.128,322,3.317,323,4.153,324,1.875,325,0.76,326,1.76,327,6.17,328,5.31,329,4.701,330,3.835,331,5.698,332,5.552,333,5.552,334,4.361,335,5.698,336,6.17,337,3.825,338,3.825,339,4.636,340,4.636,341,2.415,342,4.636,343,4.636,344,4.636,345,4.171,346,2.656,347,3.548,348,4.636,349,5.698,350,4.636,351,4.171,352,4.636,353,4.636,354,3.825,355,4.636,356,4.636,357,5.34,358,6.564,359,5.34,360,0.664,361,0.664,362,5.34]],["title/components/AppComponent.html",[363,0.193,364,0.838]],["body/components/AppComponent.html",[0,0.319,3,0.154,4,0.154,5,0.133,7,0.119,18,0.015,21,0.244,29,0.775,32,0.825,54,0.176,115,0.416,251,1.16,252,1.16,277,0.729,281,0.773,290,0.01,291,0.012,292,0.01,316,0.807,363,0.353,364,1.593,365,1.588,366,1.351,367,1.351,368,4.716,369,1.252,370,1.722,371,1.532,372,1.781,373,5.758,374,1.714,375,1.205,376,1.649,377,1.588,378,1.16,379,1.854,380,1.351,381,1.351,382,1.205,383,1.351,384,1.16,385,1.351,386,1.16,387,1.351,388,1.351,389,1.16,390,1.902,391,1.205,392,1.351,393,1.16,394,1.164,395,1.205,396,1.351,397,1.16,398,1.351,399,1.16,400,1.351,401,1.116,402,1.781,403,1.116,404,1.301,405,1.589,406,1.351,407,1.205,408,1.351,409,1.16,410,1.16,411,1.116,412,1.351,413,1.116,414,1.205,415,1.351,416,1.16,417,1.16,418,0.953,419,1.351,420,1.16,421,1.351,422,1.16,423,1.351,424,1.16,425,1.16,426,1.649,427,1.16,428,1.116,429,1.351,430,1.16,431,1.351,432,1.16,433,1.529,434,1.351,435,1.074,436,1.649,437,1.116,438,1.16,439,1.649,440,1.16,441,1.16,442,1.16,443,1.16,444,1.351,445,1.16,446,1.252,447,1.301,448,1.116,449,1.301,450,1.351]],["title/components/ClassNameComponent.html",[363,0.193,384,0.838]],["body/components/ClassNameComponent.html",[0,0.38,3,0.12,4,0.12,5,0.103,6,0.227,7,0.134,14,0.155,15,0.462,17,0.351,18,0.015,19,0.29,21,0.328,29,0.741,30,1.322,31,2.459,32,0.703,47,2.813,48,1.831,54,0.137,59,0.432,68,0.407,105,1.584,115,0.463,116,1.914,117,0.865,123,0.792,133,0.829,134,1.073,150,0.644,176,0.37,179,0.613,195,3.893,228,4.051,251,0.904,252,0.904,277,0.724,278,0.613,281,0.603,290,0.008,291,0.01,292,0.008,302,4.051,308,0.723,310,0.577,313,0.744,314,2.68,316,0.629,325,0.603,326,1.517,360,0.792,361,0.792,363,0.314,364,0.904,365,1.354,366,1.053,367,1.053,369,0.976,370,1.701,371,1.162,372,1.053,374,1.354,375,0.94,376,1.406,377,1.354,378,0.904,379,1.69,380,1.053,381,1.053,382,0.94,383,1.053,384,1.452,385,1.053,386,0.904,387,1.053,388,1.053,389,0.904,390,1.761,391,0.94,392,1.053,393,0.904,394,0.993,395,0.94,396,1.053,397,0.904,398,1.053,399,0.904,400,1.053,401,0.87,402,1.584,403,0.87,404,1.014,405,1.508,406,1.053,407,0.94,408,1.053,409,0.904,410,0.904,411,0.87,412,1.053,413,0.87,414,0.94,415,1.053,416,0.904,417,0.904,418,0.743,419,1.053,420,0.904,421,1.053,422,0.904,423,1.053,424,0.904,425,0.904,426,1.406,427,0.904,428,1.309,429,1.053,430,0.904,431,1.053,432,0.904,433,1.304,434,1.053,435,0.837,436,1.406,437,0.87,438,0.904,439,1.406,440,0.904,441,0.904,442,0.904,443,0.904,444,1.053,445,0.904,446,0.976,447,1.014,448,0.87,449,1.014,450,1.053,451,6.926,452,3.676,453,2.637,454,1.304,455,5.657,456,3.957,457,6.37,458,6.37,459,6.37,460,5.657,461,2.814,462,2.959,463,2.814,464,4.91,465,5.901,466,5.657,467,5.657,468,4.235,469,1.766,470,4.235,471,2.588,472,4.051,473,5.529,474,4.235,475,4.235,476,4.91,477,4.235,478,4.235,479,4.235,480,4.235,481,1.753,482,5.657,483,4.235,484,4.235,485,4.235,486,4.235,487,1.915,488,2.106,489,1.831,490,1.429,491,2.813,492,4.235,493,4.235,494,2.631,495,4.235,496,3.033,497,4.223,498,3.122,499,2.067,500,2.959,501,2.959,502,5.657]],["title/components/CollapsableHeaderComponent.html",[363,0.193,386,0.838]],["body/components/CollapsableHeaderComponent.html",[0,0.304,3,0.143,4,0.143,5,0.123,6,0.212,7,0.131,14,0.184,17,0.284,18,0.015,19,0.265,21,0.226,29,0.765,32,0.786,54,0.163,59,0.645,68,0.497,115,0.422,176,0.292,179,0.547,251,1.073,252,1.073,277,0.718,278,0.435,281,0.715,290,0.009,291,0.011,292,0.009,308,0.513,310,0.645,313,0.645,316,0.747,333,4.938,360,0.625,361,0.625,363,0.341,364,1.073,365,1.513,366,1.25,367,1.25,369,1.159,370,1.716,371,1.299,372,1.25,374,1.513,375,1.115,376,1.572,377,1.513,378,1.073,379,1.804,380,1.25,381,1.25,382,1.115,383,1.25,384,1.073,385,1.25,386,1.55,387,1.859,388,1.25,389,1.073,390,1.859,391,1.115,392,1.25,393,1.073,394,1.109,395,1.115,396,1.25,397,1.073,398,1.25,399,1.073,400,1.25,401,1.033,402,1.719,403,1.033,404,1.203,405,1.534,406,1.25,407,1.115,408,1.25,409,1.073,410,1.073,411,1.033,412,1.25,413,1.033,414,1.115,415,1.25,416,1.073,417,1.073,418,0.882,419,1.25,420,1.073,421,1.25,422,1.073,423,1.25,424,1.073,425,1.073,426,1.572,427,1.073,428,1.033,429,1.25,430,1.073,431,1.25,432,1.073,433,1.457,434,1.25,435,0.993,436,1.572,437,1.033,438,1.073,439,1.572,440,1.073,441,1.073,442,1.073,443,1.073,444,1.25,445,1.073,446,1.159,447,1.203,448,1.033,449,1.203,450,1.25,454,1.457,469,1.569,503,6.491,504,4.363,505,6.322,506,5.669,507,4.938,508,2.31,509,6.003,510,6.491,511,5.026,512,5.026,513,5.026,514,4.938,515,3.44,516,5.026,517,1.594,518,6.916,519,4.363,520,3.694,521,4.363,522,4.363,523,3.339]],["title/components/ConstantFieldEditComponent.html",[363,0.193,389,0.838]],["body/components/ConstantFieldEditComponent.html",[0,0.257,3,0.111,4,0.111,5,0.095,6,0.223,7,0.133,14,0.142,15,0.436,17,0.346,18,0.015,19,0.285,21,0.32,29,0.728,30,1.215,31,2.399,32,0.664,45,1.844,48,1.683,54,0.126,59,0.726,68,0.472,98,2.949,103,0.816,115,0.4,117,0.837,123,0.484,133,0.794,135,1.206,150,0.528,170,2.418,176,0.442,179,0.568,195,3.809,251,1.607,252,0.831,277,0.76,278,0.651,281,0.554,290,0.007,291,0.01,292,0.007,308,0.545,310,0.545,313,0.726,316,0.578,325,0.554,326,1.432,360,0.664,361,0.664,363,0.3,364,0.831,365,1.279,366,0.968,367,0.968,369,0.897,370,1.692,371,1.098,372,0.968,374,1.279,375,0.864,376,1.328,377,1.279,378,0.831,379,1.632,380,0.968,381,0.968,382,0.864,383,0.968,384,0.831,385,0.968,386,0.831,387,0.968,388,0.968,389,1.402,390,1.711,391,0.864,392,0.968,393,0.831,394,0.938,395,0.864,396,0.968,397,0.831,398,0.968,399,0.831,400,0.968,401,0.8,402,1.517,403,0.8,404,0.932,405,1.457,406,0.968,407,0.864,408,0.968,409,0.831,410,0.831,411,0.8,412,0.968,413,0.8,414,0.864,415,0.968,416,0.831,417,0.831,418,0.683,419,0.968,420,0.831,421,0.968,422,0.831,423,0.968,424,0.831,425,0.831,426,1.328,427,0.831,428,0.8,429,0.968,430,0.831,431,0.968,432,0.831,433,1.231,434,0.968,435,0.769,436,1.328,437,1.564,438,0.831,439,1.328,440,0.831,441,0.831,442,0.831,443,0.831,444,0.968,445,0.831,446,0.897,447,0.932,448,0.8,449,0.932,450,0.968,453,2.525,454,1.231,456,3.79,461,2.718,462,2.795,463,2.718,465,5.7,469,1.215,471,2.514,472,3.826,481,1.611,487,1.76,488,1.936,489,1.683,490,1.313,491,4.053,494,2.418,496,2.787,501,3.435,524,6.814,525,2.418,526,2.795,527,3.549,528,5.553,529,5.295,530,4.765,531,5.129,532,4.173,533,3.378,534,3.892,535,5.7,536,3.04,537,3.892,538,3.892,539,4.173,540,4.079,541,5.129,542,4.703,543,4.637,544,2.033,545,4.173,546,3.378,547,3.04,548,3.04,549,2.787,550,4.637,551,3.04,552,3.04,553,3.04,554,2.787,555,4.765,556,3.04,557,5.295,558,3.378,559,4.637,560,2.657,561,2.787,562,3.378,563,4.637,564,2.787,565,6.1,566,2.787,567,3.04,568,3.04,569,3.04,570,3.04,571,3.892,572,3.378,573,4.637,574,4.637,575,4.153,576,3.265,577,4.173,578,4.173,579,3.549,580,3.121,581,3.121,582,3.121,583,3.836,584,3.836,585,4.173,586,2.949,587,4.173,588,4.173,589,4.173,590,4.173,591,5.792]],["title/components/DataMapperAppExampleHostComponent.html",[363,0.193,393,0.838]],["body/components/DataMapperAppExampleHostComponent.html",[0,0.318,3,0.13,4,0.13,5,0.112,6,0.199,7,0.132,14,0.167,15,0.485,17,0.267,18,0.015,19,0.242,21,0.349,26,2.391,27,3.036,29,0.759,32,0.739,33,2.623,34,2.273,35,2.165,36,3.65,37,3.036,38,3.695,39,3.863,40,3.036,41,4.35,42,3.036,54,0.148,59,0.607,63,3.273,75,1.892,79,3.036,80,1.542,81,3.273,82,4.26,83,3.273,84,3.036,85,3.273,88,3.283,98,3.283,99,3.273,100,3.273,101,3.036,105,1.136,106,3.273,108,3.273,110,3.273,112,3.273,115,0.407,123,0.739,140,3.952,150,0.396,179,0.396,194,0.396,249,2.67,251,0.976,252,0.976,277,0.704,281,0.65,290,0.008,291,0.011,292,0.008,310,0.607,313,0.466,316,0.679,325,0.65,326,1.595,360,0.568,361,0.568,363,0.326,364,0.976,365,1.424,366,1.136,367,1.136,369,1.053,370,1.708,371,1.222,372,1.136,374,1.583,375,1.014,376,1.479,377,1.424,378,0.976,379,1.741,380,1.136,381,1.136,382,1.014,383,1.136,384,0.976,385,1.136,386,0.976,387,1.136,388,1.136,389,0.976,390,1.806,391,1.554,392,1.136,393,1.496,394,1.364,395,1.682,396,1.136,397,0.976,398,1.136,399,0.976,400,1.136,401,0.939,402,1.644,403,0.939,404,1.094,405,1.467,406,1.136,407,1.014,408,1.136,409,0.976,410,0.976,411,0.939,412,1.136,413,0.939,414,1.014,415,1.136,416,0.976,417,0.976,418,0.802,419,1.136,420,0.976,421,1.136,422,0.976,423,1.136,424,0.976,425,0.976,426,1.479,427,0.976,428,0.939,429,1.136,430,0.976,431,1.136,432,0.976,433,1.371,434,1.136,435,0.903,436,1.479,437,0.939,438,0.976,439,1.479,440,0.976,441,0.976,442,0.976,443,0.976,444,1.136,445,0.976,446,1.053,447,1.094,448,0.939,449,1.094,450,1.136,462,3.664,481,1.892,487,2.067,592,5.471,593,3.967,594,3.46,595,4.26,596,5.948,597,6.613,598,3.664,599,4.57,600,5.948,601,4.57,602,5.948,603,2.522,604,3.569,605,3.273,606,4.57,607,1.813,608,3.967,609,2.67,610,4.57,611,5.948,612,2.391,613,4.57,614,3.967,615,2.839,616,4.57,617,4.57,618,4.57,619,4.57,620,4.57,621,4.57,622,4.57,623,4.57,624,4.57,625,4.57,626,4.57,627,4.57,628,4.57,629,4.57,630,2.522,631,4.57,632,4.57,633,4.57,634,4.57,635,4.57,636,4.57,637,4.57,638,4.57,639,3.569,640,3.569,641,3.967,642,4.57,643,4.57,644,3.967,645,4.57,646,4.57,647,4.57]],["title/components/DataMapperErrorComponent.html",[363,0.193,397,0.838]],["body/components/DataMapperErrorComponent.html",[0,0.238,3,0.099,4,0.099,5,0.085,6,0.226,7,0.135,14,0.127,15,0.403,17,0.33,18,0.015,19,0.289,21,0.297,29,0.71,32,0.614,33,2.28,34,1.732,35,1.65,43,3.338,44,1.732,54,0.113,59,0.638,103,0.783,115,0.41,117,0.558,123,0.821,133,0.955,134,1.054,150,0.644,153,3.818,162,4.481,175,4.48,176,0.426,179,0.635,182,3.587,194,0.428,251,0.744,252,0.744,277,0.661,278,0.572,281,1.13,282,1.183,290,0.006,291,0.009,292,0.006,307,3.921,308,0.674,310,0.505,313,0.776,314,2.342,316,0.518,325,0.496,360,0.778,361,0.778,363,0.283,364,0.744,365,1.183,366,0.866,367,0.866,369,0.803,370,1.681,371,1.016,372,0.866,374,1.183,375,0.773,376,1.229,377,1.183,378,0.744,379,1.555,380,0.866,381,0.866,382,0.773,383,0.866,384,0.744,385,0.866,386,0.744,387,0.866,388,0.866,389,0.744,390,1.643,391,0.773,392,0.866,393,0.744,394,1.416,395,0.773,396,0.866,397,1.336,398,0.866,399,0.744,400,0.866,401,0.716,402,1.429,403,0.716,404,0.834,405,1.686,406,0.866,407,0.773,408,0.866,409,0.744,410,0.744,411,0.716,412,0.866,413,0.716,414,0.773,415,0.866,416,0.744,417,0.744,418,0.611,419,0.866,420,0.744,421,0.866,422,0.744,423,0.866,424,0.744,425,0.744,426,1.229,427,0.744,428,0.716,429,0.866,430,0.744,431,0.866,432,0.744,433,1.139,434,0.866,435,1.236,436,1.229,437,0.716,438,0.744,439,1.229,440,0.744,441,0.744,442,0.744,443,0.744,444,0.866,445,0.744,446,0.803,447,0.834,448,0.716,449,0.834,450,0.866,454,1.139,469,2.204,487,1.575,490,1.175,497,3.886,508,1.806,515,3.413,517,1.442,544,1.881,592,6.204,648,3.023,649,4.943,650,4.989,651,5.747,652,5.747,653,6.256,654,4.886,655,6.256,656,6.256,657,6.256,658,4.886,659,4.943,660,4.943,661,4.943,662,4.943,663,6.256,664,5.747,665,3.57,666,3.482,667,3.482,668,3.482,669,3.482,670,4.943,671,3.482,672,3.482,673,3.482,674,6.256,675,6.256,676,2.59,677,5.43,678,4.156,679,3.482,680,4.291,681,5.361,682,3.482,683,3.482,684,4.943,685,3.482,686,1.922,687,4.943,688,3.482,689,4.943,690,3.482,691,6.256,692,2.705,693,6.256,694,4.943,695,4.943,696,3.861,697,4.943,698,4.943,699,3.071,700,5.43,701,4.943,702,3.482,703,2.888,704,4.943,705,4.943,706,3.54,707,3.482,708,3.861,709,3.482,710,3.482,711,3.482,712,3.482,713,1.822,714,3.482,715,3.482,716,0.833,717,3.482,718,5.747,719,5.747,720,4.01,721,2.888,722,5.747,723,2.888,724,3.861,725,3.861,726,2.72,727,2.72,728,3.482,729,3.482,730,3.482,731,3.482,732,5.747,733,1.922,734,3.023,735,3.023,736,3.023,737,3.482,738,3.482,739,3.482,740,3.482,741,3.482,742,3.482,743,3.482,744,4.943,745,4.943,746,4.943]],["title/classes/DataMapperInitializationModel.html",[0,0.189,55,2.608]],["body/classes/DataMapperInitializationModel.html",[0,0.307,1,1.979,2,0.823,3,0.091,4,0.091,5,0.078,6,0.227,7,0.133,8,2.282,9,1.378,10,2.117,11,2.489,12,2.489,13,2.489,14,0.116,15,0.446,16,2.489,17,0.347,18,0.015,19,0.292,21,0.336,22,2.881,23,2.489,24,1.861,25,2.881,26,1.667,27,2.117,28,2.559,29,0.308,30,1.448,31,2.629,32,0.576,33,1.84,34,1.584,35,1.51,36,2.559,37,2.117,38,3.396,39,2.709,40,2.117,41,3.194,42,2.117,43,2.364,44,1.584,45,2.197,46,3.017,47,3.989,48,1.378,49,3.017,50,2.282,51,2.282,52,2.559,53,2.282,54,0.195,55,3.989,56,4.271,57,3.622,58,3.396,59,0.82,60,4.271,61,3.622,62,4.271,63,4.301,64,2.282,65,2.489,66,4.271,67,4.271,68,0.585,69,4.271,70,4.271,71,4.271,72,4.271,73,4.271,74,4.271,75,1.319,76,2.489,77,1.979,78,4.271,79,3.989,80,1.565,81,2.282,82,2.282,83,2.282,84,2.117,85,2.282,86,4.271,87,2.489,88,1.758,89,2.489,90,2.489,91,4.271,92,4.271,93,4.271,94,4.271,95,4.271,96,4.271,97,4.271,98,1.758,99,2.282,100,2.282,101,2.117,102,4.271,103,0.886,104,4.271,105,1.493,106,2.282,107,2.489,108,2.282,109,2.489,110,2.282,111,2.489,112,2.282,113,3.194,114,1.667,115,0.185,116,1.643,117,0.852,118,2.282,119,2.282,120,2.282,121,2.282,122,3.622,123,0.793,124,2.146,125,2.489,126,2.489,127,2.489,128,2.489,129,2.489,130,2.489,131,2.489,132,2.489,133,0.415,134,0.781,135,1.261,136,2.489,137,1.584,138,1.979,139,2.282,140,2.117,141,2.489,142,2.282,143,2.282,144,2.489,145,1.979,146,2.282,147,2.282,148,2.489,149,2.489,150,0.595,151,2.489,152,2.489,153,2.117,154,2.489,155,2.489,156,2.489,157,2.489,158,2.489,159,2.489,160,1.264,161,2.489,162,1.979,163,2.117,164,2.489,165,1.979,166,2.489,167,2.489,168,2.489,169,2.489,170,1.979,171,2.489,172,2.282,173,2.489,174,2.489,175,2.282,176,0.46,177,3.622,178,2.489,179,0.401,180,1.319,181,2.489,182,2.719,183,4.69,184,2.489,185,2.489,186,2.282,187,2.489,188,2.282,189,2.489,190,2.489,191,2.489,192,2.282,193,2.489,194,0.64,195,2.426,196,2.489,197,2.489,198,4.69,199,2.489,200,4.984,201,2.489,202,2.489,203,2.489,204,2.489,205,2.489,206,2.489,207,3.622,208,2.489,209,2.489,210,2.489,211,2.489,212,3.622,213,2.489,214,2.489,215,2.489,216,2.489,217,2.489,218,2.489,219,5.202,220,4.271,221,2.117,222,3.622,223,1.861,224,2.489,225,3.916,226,2.489,227,4.271,228,2.282,229,3.622,230,2.489,231,2.489,232,2.489,233,3.622,234,2.489,235,2.489,236,2.489,237,2.489,238,2.489,239,3.622,240,3.622,241,2.489,242,4.301,243,3.622,244,3.622,245,2.489,246,1.667,247,2.489,248,2.117,249,1.861,250,1.378,251,0.68,252,0.68,253,1.758,254,2.489,255,2.489,256,2.489,257,2.489,258,2.489,259,3.728,260,4.271,261,4.271,262,2.489,263,2.489,264,2.489,265,2.489,266,3.081,267,2.489,268,2.489,269,2.282,270,2.489,271,1.979,272,2.489,273,2.489,274,2.489,275,2.489,276,3.321,277,0.425,278,0.678,279,2.489,280,2.282,281,0.66,282,1.11,283,4.271,284,2.117,285,2.489,286,2.489,287,2.489,288,1.584,289,2.489,290,0.006,291,0.008,292,0.006,308,0.782,747,4.637,748,1.243,749,3.186,750,3.186,751,3.186,752,3.186,753,3.186,754,3.186,755,3.186,756,3.186,757,3.186,758,3.186,759,3.186,760,3.186,761,3.186,762,3.186,763,3.186,764,3.186,765,3.186,766,3.186,767,3.186,768,3.186,769,3.186,770,3.186,771,3.186]],["title/modules/DataMapperModule.html",[772,2.608,773,2.608]],["body/modules/DataMapperModule.html",[0,0.161,3,0.095,4,0.095,5,0.118,6,0.137,7,0.08,18,0.015,19,0.123,21,0.37,22,2.991,24,2.813,25,2.085,26,1.756,27,2.23,28,1.852,30,1.503,31,1.133,33,2.886,34,2.395,35,2.282,36,4.015,37,3.199,38,4.046,39,4.25,40,3.741,41,4.25,42,3.199,45,1.59,46,1.852,48,1.451,49,3.943,50,2.404,51,2.404,52,3.943,53,2.404,54,0.257,59,0.343,103,0.398,113,1.961,123,0.417,124,1.503,176,0.195,194,0.587,250,1.451,277,0.64,281,0.685,288,1.669,290,0.006,291,0.009,292,0.006,294,3.741,310,0.343,313,0.343,316,0.499,321,3.761,322,2.085,325,0.478,334,3.741,341,1.518,375,0.745,384,1.526,386,1.448,389,1.526,391,1.69,393,1.659,394,1.08,395,0.745,397,1.448,399,1.448,401,1.393,403,1.468,407,1.504,409,1.526,410,1.448,413,1.468,416,1.448,417,1.448,418,0.589,420,1.448,422,1.448,424,1.448,425,1.448,427,1.448,428,0.69,430,1.526,432,1.448,433,0.774,435,1.492,437,1.551,438,1.526,440,1.448,441,1.526,442,1.526,443,1.448,445,1.448,448,1.393,488,1.669,490,1.625,499,1.759,595,4.665,604,3.761,612,1.756,703,1.961,772,3.199,773,5.56,774,2.23,775,2.085,776,4.398,777,4.406,778,4.398,779,2.913,780,2.913,781,2.913,782,2.913,783,4.504,784,3.761,785,3.449,786,2.622,787,4.815,788,4.815,789,5.631,790,5.631,791,3.356,792,2.622,793,2.913,794,2.913,795,2.913,796,2.913,797,2.622,798,4.398,799,2.622,800,5.001,801,2.622,802,3.761,803,2.622,804,2.622,805,2.622,806,2.23,807,2.622,808,2.622,809,2.23,810,2.622,811,2.622,812,2.622,813,2.622,814,3.761,815,2.622,816,2.404,817,2.622,818,2.622,819,2.622,820,2.622,821,2.622,822,2.23,823,2.404,824,2.622,825,2.622,826,2.622,827,2.622,828,5.34,829,6.061,830,4.815,831,3.356,832,4.18,833,3.356,834,4.815,835,4.18,836,4.815,837,2.913,838,4.815,839,3.356,840,3.356,841,3.356,842,3.356,843,6.152,844,3.356,845,3.356,846,4.815,847,3.356,848,3.356,849,4.665,850,3.356,851,2.913,852,3.356,853,3.356,854,3.356,855,2.913,856,4.815,857,2.913,858,4.888,859,3.356,860,3.356,861,3.356,862,4.815,863,7.274,864,4.815,865,3.356,866,3.356,867,3.356,868,3.356,869,4.18,870,2.913,871,3.356,872,2.913,873,3.356,874,3.356,875,3.356,876,3.356,877,3.356,878,4.815,879,4.815,880,2.913,881,0.9,882,1.332,883,2.913,884,3.356,885,3.356,886,2.23,887,3.356,888,3.761,889,2.913,890,3.761,891,2.913,892,3.761,893,2.913,894,3.761,895,2.913,896,3.761,897,2.913,898,3.761,899,2.913,900,3.356,901,2.622,902,4.18,903,4.815,904,3.761]],["title/classes/DataMapperUtil.html",[0,0.189,905,1.776]],["body/classes/DataMapperUtil.html",[0,0.205,2,1.103,3,0.121,4,0.162,5,0.191,6,0.222,7,0.13,9,1.847,14,0.234,15,0.464,17,0.348,18,0.015,19,0.283,21,0.192,54,0.139,59,0.581,68,0.587,75,2.355,80,2.614,115,0.457,117,0.642,124,2.561,135,1.348,150,0.492,176,0.446,194,0.554,278,0.492,282,1.701,290,0.008,291,0.01,292,0.008,308,0.581,310,0.581,313,0.773,346,3.533,347,3.779,360,0.942,361,0.942,394,1.371,469,1.776,499,2.078,576,2.124,706,4.074,716,1.078,748,1.829,905,2.573,906,6.78,907,3.707,908,6.396,909,6.396,910,5.688,911,5.425,912,5.688,913,4.938,914,5.688,915,5.688,916,5.688,917,5.688,918,5.688,919,5.688,920,4.27,921,5.688,922,4.27,923,4.27,924,5.688,925,4.27,926,4.27,927,3.707,928,3.336,929,3.707,930,5.688,931,4.938,932,4.27,933,3.058,934,4.27,935,2.357,936,5.688,937,6.051,938,4.27,939,3.779,940,4.938,941,4.938,942,2.95,943,5.552,944,5.088,945,4.27,946,4.27,947,5.552,948,5.688,949,5.328,950,4.27,951,4.443,952,4.27,953,5.688,954,4.27,955,2.495,956,2.837,957,4.27,958,4.27,959,4.27,960,3.707,961,2.837,962,3.707,963,5.688,964,4.27,965,5.688,966,5.688,967,4.443,968,4.938,969,4.074,970,7.104,971,5.688,972,5.549,973,7.104,974,4.27,975,4.938,976,2.829,977,4.938,978,5.688,979,4.938,980,5.688,981,5.688,982,4.443,983,4.27,984,4.27,985,4.27,986,4.27,987,4.581,988,4.581,989,5.688,990,5.688,991,4.27,992,5.688,993,4.27,994,4.27,995,4.27,996,4.27,997,3.336,998,4.27,999,1.694,1000,4.27,1001,4.27,1002,4.27,1003,1.062,1004,6.396,1005,4.27,1006,5.688,1007,4.27,1008,3.336]],["title/components/DocumentFieldDetailComponent.html",[363,0.193,401,0.807]],["body/components/DocumentFieldDetailComponent.html",[0,0.198,3,0.117,4,0.077,5,0.122,6,0.225,7,0.133,14,0.099,15,0.336,17,0.338,18,0.015,19,0.288,21,0.315,29,0.666,32,0.811,45,1.286,48,1.174,54,0.088,59,0.738,68,0.526,103,0.322,105,0.675,115,0.429,117,0.777,123,0.618,133,0.647,134,0.838,150,0.582,176,0.456,179,0.65,180,1.124,194,0.65,251,1.185,252,1.185,259,1.586,271,1.686,277,0.755,278,0.235,281,0.386,282,0.65,290,0.005,291,0.009,292,0.009,308,0.277,310,0.508,313,0.777,316,0.403,325,0.386,345,2.12,360,0.872,361,0.872,363,0.245,364,0.58,365,0.986,366,0.675,367,0.675,369,0.626,370,1.649,371,0.846,372,0.675,373,2.356,374,0.986,375,0.602,376,1.024,377,0.986,378,0.58,379,1.38,380,0.675,381,0.675,382,0.602,383,0.675,384,0.58,385,0.675,386,0.58,387,0.675,388,0.675,389,1.393,390,1.483,391,0.602,392,0.675,393,0.58,394,0.722,395,0.602,396,0.675,397,0.58,398,0.675,399,0.58,400,0.675,401,1.414,402,1.236,403,0.558,404,0.65,405,1.232,406,0.675,407,0.602,408,0.675,409,1.393,410,1.185,411,0.846,412,0.675,413,0.558,414,0.602,415,0.675,416,0.58,417,0.58,418,0.476,419,0.675,420,0.58,421,0.675,422,0.58,423,0.675,424,0.58,425,0.58,426,1.024,427,0.58,428,0.846,429,0.675,430,0.58,431,0.675,432,0.58,433,0.949,434,0.675,435,0.536,436,1.024,437,1.341,438,0.58,439,1.024,440,0.58,441,1.393,442,0.58,443,0.58,444,0.675,445,0.58,446,0.626,447,0.65,448,0.558,449,0.65,450,0.675,454,0.949,469,2.307,471,1.817,481,1.704,487,1.228,489,1.174,490,0.916,501,1.42,506,4.336,507,3.216,508,1.504,514,3.216,515,3.423,517,1.375,519,2.356,520,4.448,521,2.356,522,2.356,523,1.803,526,2.602,540,1.686,560,2.473,564,1.944,566,2.948,567,3.216,570,4.336,607,1.077,612,1.42,614,3.574,639,3.216,678,1.803,716,0.838,733,1.498,849,3.562,851,2.356,927,3.574,1003,0.675,1009,6.868,1010,1.944,1011,3.216,1012,3.216,1013,4.973,1014,4.973,1015,4.317,1016,3.574,1017,3.574,1018,4.117,1019,3.574,1020,5.551,1021,5.551,1022,4.117,1023,5.551,1024,5.551,1025,5.551,1026,5.551,1027,5.551,1028,5.551,1029,3.574,1030,4.117,1031,3.574,1032,4.317,1033,3.089,1034,3.574,1035,2.18,1036,2.714,1037,4.818,1038,4.117,1039,3.574,1040,2.714,1041,2.356,1042,2.356,1043,2.714,1044,3.574,1045,2.714,1046,3.574,1047,4.818,1048,2.714,1049,4.117,1050,2.714,1051,3.574,1052,2.714,1053,2.714,1054,2.714,1055,2.714,1056,4.117,1057,2.714,1058,2.714,1059,2.714,1060,2.714,1061,2.714,1062,2.714,1063,4.317,1064,2.714,1065,2.714,1066,4.117,1067,2.405,1068,4.117,1069,4.117,1070,5.551,1071,4.117,1072,4.117,1073,2.272,1074,4.117,1075,2.714,1076,4.117,1077,2.714,1078,3.574,1079,2.356,1080,2.602,1081,4.117,1082,2.356,1083,4.117,1084,2.356,1085,2.714,1086,2.714,1087,1.42,1088,2.12,1089,1.803,1090,6.524,1091,2.714,1092,3.574,1093,2.714,1094,2.714,1095,2.714,1096,2.714,1097,4.317,1098,2.714,1099,2.356,1100,2.356,1101,2.714,1102,2.714,1103,2.714,1104,2.714,1105,2.356,1106,2.714,1107,2.714,1108,2.714,1109,1.686,1110,2.356,1111,2.356,1112,2.356,1113,2.356,1114,4.66,1115,4.973,1116,5.451,1117,3.216,1118,3.975,1119,4.117,1120,2.714,1121,2.714,1122,4.117,1123,4.117,1124,4.117,1125,2.714,1126,1.286,1127,2.735,1128,2.714,1129,2.714,1130,2.714,1131,2.356,1132,1.803,1133,3.574,1134,4.973,1135,2.12,1136,2.356,1137,2.714,1138,5.551,1139,4.117,1140,2.714,1141,4.973,1142,2.356,1143,2.714,1144,2.714,1145,4.497,1146,2.714,1147,2.356,1148,2.356,1149,1.803,1150,2.12,1151,2.714,1152,4.818,1153,4.818,1154,4.317,1155,2.714,1156,2.714,1157,2.714,1158,2.714,1159,4.117,1160,2.714,1161,2.714,1162,2.714,1163,1.42,1164,1.498,1165,1.686,1166,1.803,1167,2.714,1168,4.973,1169,2.714,1170,2.948,1171,3.574,1172,2.735,1173,2.735,1174,5.179,1175,4.117,1176,5.179,1177,2.714,1178,3.304,1179,1.803,1180,3.304,1181,4.117,1182,4.172,1183,2.714,1184,3.574,1185,4.117,1186,2.714,1187,4.117,1188,2.714,1189,2.714,1190,2.714,1191,1.803,1192,2.735,1193,5.551,1194,2.714,1195,2.714,1196,2.714,1197,2.714,1198,2.714,1199,3.574,1200,2.735,1201,2.58,1202,2.714,1203,1.944,1204,1.803,1205,1.944,1206,2.714,1207,2.714,1208,2.714,1209,2.714,1210,2.714,1211,2.714,1212,2.714,1213,2.356,1214,2.714,1215,1.686,1216,1.42,1217,2.714,1218,2.735,1219,5.551]],["title/classes/DocumentInitializationModel.html",[0,0.189,113,2.294]],["body/classes/DocumentInitializationModel.html",[0,0.316,1,2.129,2,0.885,3,0.097,4,0.097,5,0.084,6,0.217,7,0.127,8,2.455,9,2.464,10,2.277,11,2.678,12,2.678,13,2.678,14,0.125,15,0.465,16,2.678,17,0.346,18,0.015,19,0.279,21,0.341,22,3.037,23,2.678,24,2.003,25,3.037,26,1.793,27,2.277,28,2.698,29,0.332,30,1.526,31,2.655,32,0.608,33,1.939,34,1.705,35,1.624,36,2.698,37,2.277,38,3.539,39,2.856,40,2.277,41,3.329,42,2.277,43,2.464,44,1.705,45,2.7,46,3.768,47,4.668,48,1.482,49,3.145,50,2.455,51,2.455,52,2.698,53,2.455,54,0.202,55,3.785,56,2.678,57,2.678,58,2.129,59,0.809,60,2.678,61,2.678,62,2.678,63,3.501,64,2.455,65,2.678,66,2.678,67,2.678,68,0.584,69,2.678,70,2.678,71,2.678,72,2.678,73,2.678,74,2.678,75,1.419,76,2.678,77,2.129,78,2.678,79,3.248,80,1.649,81,2.455,82,2.455,83,2.455,84,2.277,85,2.455,86,2.678,87,2.678,88,1.892,89,2.678,90,2.678,91,2.678,92,2.678,93,2.678,94,2.678,95,2.678,96,2.678,97,2.678,98,1.892,99,2.455,100,2.455,101,2.277,102,2.678,103,0.899,104,2.678,105,1.215,106,2.455,107,2.678,108,2.455,109,2.678,110,2.455,111,2.678,112,2.455,113,3.629,114,2.981,115,0.331,116,1.973,117,0.87,118,4.081,119,4.081,120,4.081,121,4.081,122,4.852,123,0.816,124,2.194,125,2.678,126,2.678,127,2.678,128,2.678,129,2.678,130,2.678,131,2.678,132,2.678,133,0.446,134,0.824,135,1.298,136,2.678,137,1.705,138,2.129,139,2.455,140,2.277,141,2.678,142,2.455,143,2.455,144,2.678,145,2.129,146,2.455,147,2.455,148,2.678,149,2.678,150,0.608,151,2.678,152,2.678,153,2.277,154,2.678,155,2.678,156,2.678,157,2.678,158,2.678,159,2.678,160,1.36,161,2.678,162,2.129,163,2.277,164,2.678,165,2.129,166,2.678,167,2.678,168,2.678,169,2.678,170,2.129,171,2.678,172,2.455,173,2.678,174,2.678,175,2.455,176,0.463,177,3.818,178,2.678,179,0.423,180,1.419,181,2.678,182,2.834,183,4.852,184,2.678,185,2.678,186,2.455,187,2.678,188,2.455,189,2.678,190,2.678,191,2.678,192,2.455,193,2.678,194,0.65,195,2.558,196,2.678,197,2.678,198,4.852,199,2.678,200,5.13,201,2.678,202,2.678,203,2.678,204,2.678,205,2.678,206,2.678,207,3.818,208,2.678,209,2.678,210,2.678,211,2.678,212,3.818,213,2.678,214,2.678,215,2.678,216,2.678,217,2.678,218,2.678,219,5.333,220,4.45,221,2.277,222,3.818,223,2.003,224,2.678,225,4.081,226,2.678,227,4.45,228,2.455,229,3.818,230,2.678,231,2.678,232,2.678,233,3.818,234,2.678,235,2.678,236,2.678,237,2.678,238,2.678,239,3.818,240,3.818,241,2.678,242,4.449,243,3.818,244,3.818,245,2.678,246,1.793,247,2.678,248,2.277,249,2.003,250,1.482,251,0.732,252,0.732,253,1.892,254,2.678,255,2.678,256,2.678,257,2.678,258,2.678,259,3.837,260,4.45,261,4.45,262,2.678,263,2.678,264,2.678,265,2.678,266,3.248,267,2.678,268,2.678,269,2.455,270,2.678,271,2.129,272,2.678,273,2.678,274,2.678,275,2.678,276,3.501,277,0.448,278,0.568,279,2.678,280,2.455,281,0.696,282,1.17,283,4.45,284,2.277,285,2.678,286,2.678,287,2.678,288,1.705,289,2.678,290,0.006,291,0.009,292,0.006,308,0.35,1220,3.428,1221,3.428,1222,3.428,1223,3.428,1224,3.428,1225,3.428,1226,3.428,1227,3.428,1228,3.428,1229,3.428,1230,3.428,1231,3.428]],["title/components/EmptyModalBodyComponent.html",[363,0.193,403,0.807]],["body/components/EmptyModalBodyComponent.html",[0,0.307,3,0.121,4,0.161,5,0.104,6,0.181,7,0.122,14,0.155,17,0.255,18,0.015,19,0.207,21,0.306,29,0.742,32,0.705,54,0.207,59,0.772,68,0.306,103,0.757,115,0.371,117,0.769,123,0.705,133,0.831,134,0.717,150,0.632,176,0.371,179,0.632,182,2.116,194,0.553,250,1.839,251,0.908,252,0.908,277,0.693,281,0.808,290,0.008,291,0.01,292,0.008,307,2.116,310,0.579,313,0.579,316,0.632,324,1.493,325,0.605,326,1.712,346,2.116,363,0.349,364,0.908,365,1.358,366,1.058,367,1.058,369,0.98,370,1.703,371,1.166,372,1.058,374,1.358,375,0.944,376,1.411,377,1.358,378,0.908,379,1.693,380,1.058,381,1.058,382,0.944,383,1.058,384,0.908,385,1.058,386,0.908,387,1.058,388,1.058,389,0.908,390,1.764,391,0.944,392,1.058,393,0.908,394,0.996,395,0.944,396,1.058,397,0.908,398,1.058,399,0.908,400,1.058,401,0.874,402,1.587,403,1.458,404,1.528,405,1.679,406,1.058,407,0.944,408,1.058,409,0.908,410,0.908,411,0.874,412,1.058,413,0.874,414,0.944,415,1.058,416,0.908,417,0.908,418,0.746,419,1.058,420,0.908,421,1.058,422,0.908,423,1.058,424,0.908,425,0.908,426,1.411,427,0.908,428,0.874,429,1.058,430,0.908,431,1.058,432,0.908,433,1.308,434,1.058,435,1.262,436,1.411,437,1.166,438,0.908,439,1.411,440,0.908,441,0.908,442,0.908,443,0.908,444,1.058,445,0.908,446,0.98,447,1.018,448,0.874,449,1.018,450,1.058,453,2.937,454,0.98,461,2.937,463,2.937,471,2.488,490,1.435,515,2.116,517,1.744,603,3.131,607,1.688,665,2.643,733,3.759,999,1.688,1080,2.968,1087,2.226,1232,3.966,1233,2.643,1234,4.064,1235,3.692,1236,3.692,1237,4.525,1238,4.241,1239,3.769,1240,3.525,1241,3.315,1242,3.323,1243,2.226,1244,2.826,1245,2.826,1246,2.826,1247,2.826,1248,3.523,1249,2.826,1250,2.826,1251,2.348,1252,2.826,1253,2.826,1254,3.323,1255,3.769,1256,2.826,1257,2.826,1258,2.826,1259,2.826,1260,2.826,1261,2.826,1262,1.924,1263,2.643,1264,3.323,1265,4.432,1266,4.432,1267,3.323,1268,3.323,1269,3.323,1270,3.323,1271,3.323,1272,3.769,1273,4.241,1274,3.323,1275,3.323,1276,3.323,1277,3.047,1278,2.968,1279,2.826,1280,3.323,1281,3.323,1282,3.323,1283,3.323,1284,3.323,1285,4.432,1286,3.323,1287,4.432,1288,3.323,1289,4.432,1290,3.323,1291,3.323,1292,3.323,1293,3.323,1294,2.826,1295,3.769,1296,2.826,1297,2.643,1298,3.323,1299,3.323,1300,2.643,1301,2.826,1302,3.323,1303,3.769,1304,3.769,1305,3.323,1306,3.323,1307,3.047,1308,3.323,1309,3.323,1310,2.826,1311,3.047,1312,3.323,1313,2.826]],["title/classes/EnumValue.html",[0,0.189,1314,3.067]],["body/classes/EnumValue.html",[0,0.266,2,1.056,3,0.116,4,0.116,5,0.1,6,0.178,7,0.104,14,0.149,15,0.451,17,0.281,18,0.015,19,0.202,21,0.248,30,1.277,31,1.865,32,0.508,45,1.938,48,1.769,54,0.179,59,0.814,68,0.583,75,1.693,103,0.83,105,1.017,115,0.407,116,1.229,117,0.876,124,2.253,133,0.532,135,1.092,145,3.433,150,0.699,165,2.541,170,2.541,176,0.475,179,0.478,194,0.684,195,2.14,277,0.748,278,0.354,290,0.007,291,0.01,292,0.007,428,0.84,491,4.794,499,1.494,509,3.55,579,3.671,716,1.055,748,1.482,806,4.453,942,2.706,1133,3.55,1149,2.717,1165,2.541,1174,3.55,1176,3.55,1314,4.889,1315,3.55,1316,6.259,1317,4.09,1318,4.09,1319,4.09,1320,4.09,1321,3.195,1322,2.717,1323,3.55,1324,3.55,1325,3.55,1326,4.09,1327,3.55,1328,4.09,1329,2.39,1330,4.09,1331,4.09,1332,4.09,1333,4.09,1334,4.09,1335,3.195,1336,3.195,1337,4.09,1338,3.55,1339,3.55,1340,5.433,1341,4.797,1342,4.09,1343,4.09,1344,4.09,1345,5.236,1346,2.746,1347,3.195,1348,4.09,1349,4.09,1350,3.55,1351,6.512,1352,4.09,1353,4.09,1354,2.541,1355,5.526,1356,4.09,1357,4.09,1358,5.526,1359,1.557,1360,4.09,1361,4.09,1362,2.929,1363,4.09,1364,3.55,1365,4.09,1366,2.39,1367,4.09,1368,4.09,1369,4.09,1370,4.797,1371,3.274,1372,4.09,1373,6.259,1374,5.526,1375,6.403,1376,4.09,1377,4.09,1378,4.09,1379,3.55,1380,4.317,1381,5.526,1382,4.797,1383,4.797,1384,4.09,1385,5.526,1386,4.09,1387,5.433,1388,4.09,1389,4.09,1390,5.526,1391,4.09,1392,4.09,1393,4.09,1394,1.327,1395,3.55,1396,3.55,1397,4.09,1398,4.09,1399,4.09,1400,4.09,1401,4.09,1402,4.09,1403,4.801,1404,4.09,1405,4.09,1406,4.09,1407,4.09,1408,4.09,1409,4.09,1410,4.09,1411,4.09,1412,5.526,1413,3.55,1414,4.09,1415,3.55,1416,4.09,1417,5.526,1418,3.55,1419,4.09,1420,4.797]],["title/injectables/ErrorHandlerService.html",[33,1.557,293,1.952]],["body/injectables/ErrorHandlerService.html",[0,0.206,3,0.182,4,0.122,5,0.105,6,0.228,7,0.134,14,0.157,15,0.466,17,0.351,18,0.015,19,0.292,21,0.288,33,2.265,43,2.956,44,2.135,54,0.139,68,0.591,115,0.45,117,0.485,123,0.797,133,0.952,134,1.081,135,0.848,150,0.494,176,0.249,179,0.703,194,0.616,278,0.372,280,4.088,281,1.179,282,1.028,290,0.008,291,0.01,292,0.008,293,2.839,295,2.852,308,0.438,310,0.583,313,0.812,316,0.638,325,0.611,360,0.964,361,0.964,499,2.086,686,3.772,713,3.576,716,0.723,720,3.747,721,2.508,723,3.335,724,3.353,1251,4.237,1421,6.964,1422,3.726,1423,5.708,1424,5.708,1425,6.835,1426,5.339,1427,6.835,1428,4.459,1429,5.708,1430,5.708,1431,5.708,1432,5.339,1433,5.708,1434,4.459,1435,5.708,1436,4.895,1437,4.293,1438,5.708,1439,4.293,1440,4.293,1441,4.293,1442,4.293,1443,5.708,1444,4.293,1445,5.708,1446,4.293,1447,4.459,1448,5.708,1449,5.708,1450,3.546,1451,5.708,1452,5.708,1453,6.413,1454,5.708,1455,4.293,1456,5.708,1457,4.293,1458,5.708,1459,4.293,1460,5.708,1461,4.293,1462,4.261,1463,4.293,1464,5.708,1465,4.293,1466,5.708,1467,4.293,1468,4.293,1469,7.317,1470,4.293,1471,4.459,1472,5.708,1473,7.467,1474,5.708,1475,4.459,1476,4.459,1477,4.293,1478,6.413,1479,4.293,1480,4.293,1481,5.708,1482,4.293,1483,4.459,1484,2.508,1485,3.353,1486,4.293,1487,3.726,1488,4.293]],["title/classes/ErrorInfo.html",[0,0.189,43,1.698]],["body/classes/ErrorInfo.html",[0,0.274,2,1.472,3,0.194,4,0.162,5,0.139,6,0.226,7,0.133,14,0.208,15,0.557,17,0.354,18,0.015,19,0.288,43,2.953,54,0.222,68,0.572,105,1.417,115,0.331,124,2.283,133,0.952,278,0.493,281,1.142,290,0.01,291,0.012,292,0.01,308,0.582,360,0.709,361,0.709,713,4.117,716,1.151,748,1.529,1251,4.278,1300,3.541,1428,4.453,1434,4.453,1436,5.698,1462,4.858,1489,4.453,1490,5.435,1491,7.313,1492,6.83,1493,6.83,1494,4.453,1495,5.701,1496,5.701,1497,5.701,1498,5.701,1499,2.835,1500,4.948,1501,4.948,1502,5.701,1503,5.701,1504,5.701,1505,5.701,1506,5.701]],["title/modules/ExampleAppModule.html",[772,2.608,1507,2.812]],["body/modules/ExampleAppModule.html",[0,0.264,3,0.156,4,0.156,5,0.163,7,0.092,18,0.015,21,0.358,54,0.179,250,2.379,288,2.736,290,0.01,291,0.012,292,0.01,316,0.818,322,3.417,341,2.488,364,1.739,371,1.13,375,1.22,382,1.807,595,4.787,604,4.297,612,2.878,703,3.214,772,3.655,773,5.099,774,3.655,775,3.417,776,5.625,777,5.157,778,4.297,784,5.221,785,3.94,792,4.297,793,4.775,794,4.775,795,4.775,796,4.775,797,4.297,798,5.625,799,4.297,800,5.657,801,4.297,802,5.221,803,4.297,804,4.297,805,4.297,806,3.655,807,4.297,808,4.297,809,3.655,810,4.297,811,4.297,812,4.297,813,4.297,814,5.221,815,4.297,816,3.94,817,4.297,818,4.297,819,4.297,820,4.297,821,4.297,822,3.655,823,3.94,824,4.297,825,4.297,826,4.297,827,4.297,828,5.802,832,5.802,835,5.802,837,4.775,901,5.221,1088,4.297,1089,3.655,1507,5.833,1508,4.775,1509,4.775,1510,5.501,1511,4.775,1512,5.501,1513,5.501,1514,6.684,1515,5.501,1516,5.501,1517,5.501,1518,5.501,1519,5.501,1520,5.501,1521,5.501]],["title/classes/Examples.html",[0,0.189,605,2.812]],["body/classes/Examples.html",[0,0.292,2,1.567,3,0.172,4,0.172,5,0.148,6,0.201,7,0.118,14,0.222,15,0.578,18,0.015,19,0.222,54,0.197,84,4.987,124,2.344,249,4.141,278,0.525,290,0.011,291,0.013,292,0.011,308,0.619,605,5.076,1522,5.268,1523,6.152,1524,7.087,1525,7.087,1526,7.087,1527,5.536,1528,7.087,1529,7.98,1530,7.98,1531,6.152,1532,7.98,1533,7.087,1534,5.536,1535,6.068]],["title/classes/ExpressionNode.html",[0,0.189,1536,2.439]],["body/classes/ExpressionNode.html",[0,0.278,2,0.654,3,0.072,4,0.152,5,0.062,6,0.181,7,0.106,14,0.26,15,0.319,17,0.176,18,0.015,19,0.223,21,0.241,29,0.461,33,1.005,34,1.26,35,1.201,54,0.188,68,0.563,80,2.366,103,0.3,105,0.63,114,1.326,115,0.147,123,0.592,124,1.806,133,0.856,134,0.658,135,1.386,150,0.569,176,0.45,179,0.338,180,1.049,194,0.683,246,2.043,277,0.618,278,0.219,282,1.679,288,1.26,290,0.005,291,0.007,292,0.005,308,0.259,310,0.399,313,0.486,324,0.889,325,0.361,360,0.315,361,0.315,411,0.521,499,1.427,500,1.326,517,0.9,544,1.486,560,1.942,607,1.549,609,1.48,615,2.426,676,1.617,716,1.32,748,1.847,881,1.551,935,3.515,942,1.096,956,1.683,961,2.595,976,1.26,999,2.125,1003,2.002,1035,0.926,1126,3.018,1201,1.096,1218,1.683,1262,1.767,1278,1.326,1329,3.129,1346,1.814,1359,0.964,1366,2.282,1394,1.738,1484,3.129,1490,2.595,1536,4.191,1537,1.683,1538,4.377,1539,3.166,1540,3.836,1541,4.561,1542,4.561,1543,4.561,1544,2.797,1545,3.906,1546,3.836,1547,2.534,1548,2.534,1549,2.534,1550,2.534,1551,2.425,1552,1.326,1553,2.595,1554,3.956,1555,2.797,1556,5.27,1557,5.553,1558,1.815,1559,4.956,1560,2.595,1561,4.571,1562,1.815,1563,1.815,1564,1.815,1565,1.815,1566,4.778,1567,1.815,1568,1.815,1569,1.48,1570,2.797,1571,1.815,1572,1.815,1573,1.815,1574,1.48,1575,1.815,1576,1.815,1577,1.815,1578,1.815,1579,1.815,1580,1.815,1581,1.815,1582,1.815,1583,1.815,1584,2.797,1585,1.815,1586,2.797,1587,1.815,1588,3.413,1589,1.815,1590,1.815,1591,1.815,1592,4.832,1593,4.143,1594,4.143,1595,3.836,1596,1.815,1597,1.398,1598,1.815,1599,3.842,1600,5.219,1601,1.815,1602,2.797,1603,3.836,1604,1.815,1605,5.315,1606,4.935,1607,4.377,1608,4.956,1609,2.797,1610,1.815,1611,1.815,1612,4.143,1613,1.815,1614,3.413,1615,2.797,1616,1.815,1617,4.71,1618,4.143,1619,5.162,1620,1.815,1621,1.815,1622,3.413,1623,1.815,1624,2.797,1625,2.797,1626,3.836,1627,2.797,1628,2.426,1629,2.797,1630,4.143,1631,2.595,1632,2.595,1633,1.815,1634,1.815,1635,1.815,1636,4.71,1637,2.797,1638,4.561,1639,1.689,1640,1.815,1641,3.413,1642,4.527,1643,2.797,1644,4.377,1645,1.815,1646,5.097,1647,3.836,1648,2.797,1649,2.797,1650,2.797,1651,3.413,1652,2.797,1653,2.797,1654,1.815,1655,2.797,1656,2.797,1657,3.836,1658,2.797,1659,2.797,1660,3.166,1661,1.815,1662,1.815,1663,1.815,1664,1.815,1665,1.815,1666,3.413,1667,1.815,1668,4.143,1669,1.815,1670,4.377,1671,3.129,1672,4.377,1673,3.413,1674,1.814,1675,3.166,1676,3.413,1677,1.815,1678,5.097,1679,5.097,1680,4.377,1681,3.413,1682,1.815,1683,4.561,1684,1.815,1685,4.377,1686,1.815,1687,1.815,1688,3.413,1689,1.815,1690,3.413,1691,3.413,1692,3.413,1693,3.413,1694,2.797,1695,2.797,1696,2.797,1697,2.797,1698,2.797,1699,5.162,1700,2.797,1701,1.574,1702,1.815,1703,1.815,1704,1.815,1705,1.815,1706,1.815,1707,1.683,1708,1.815,1709,1.815,1710,1.815,1711,1.146,1712,1.815,1713,1.815,1714,1.574,1715,1.815,1716,2.043,1717,1.815,1718,1.815,1719,1.815,1720,2.797,1721,1.683,1722,1.815,1723,1.815,1724,2.797,1725,3.836,1726,3.836,1727,1.815,1728,1.815,1729,3.413,1730,1.815,1731,2.797,1732,2.797,1733,1.815,1734,4.71,1735,2.797,1736,1.815,1737,1.815,1738,1.815,1739,2.797,1740,1.815,1741,1.48,1742,2.797,1743,1.815,1744,1.815,1745,1.398,1746,1.815,1747,1.815,1748,1.815,1749,1.815,1750,1.815,1751,1.815,1752,1.815,1753,1.815,1754,2.797,1755,1.815,1756,2.797]],["title/classes/ExpressionUpdatedEvent.html",[0,0.189,1554,2.439]],["body/classes/ExpressionUpdatedEvent.html",[0,0.279,2,0.661,3,0.073,4,0.153,5,0.063,6,0.153,7,0.09,14,0.261,15,0.321,17,0.216,18,0.015,19,0.175,21,0.242,29,0.464,33,1.016,34,1.274,35,1.214,54,0.189,68,0.556,80,2.372,103,0.304,105,0.637,114,1.34,115,0.149,123,0.596,124,1.498,133,0.859,134,0.664,135,1.39,150,0.571,176,0.451,179,0.341,180,1.06,194,0.684,246,2.06,277,0.62,282,1.683,288,1.274,290,0.005,291,0.007,292,0.005,324,0.899,325,0.365,360,0.318,361,0.723,411,0.526,499,1.439,500,1.34,517,0.908,544,1.499,560,1.959,607,1.562,609,1.497,615,2.447,676,1.63,716,1.317,748,1.913,881,1.559,935,3.529,942,1.108,956,1.702,961,2.617,976,1.274,999,2.137,1003,2.004,1035,0.936,1126,3.029,1201,1.108,1218,1.702,1262,2.776,1278,1.34,1329,2.301,1346,1.826,1359,0.975,1366,2.301,1394,1.748,1484,3.147,1490,2.617,1494,3.076,1536,4.368,1537,1.702,1538,2.821,1539,1.702,1540,1.834,1541,3.436,1542,3.858,1543,3.858,1544,1.834,1546,3.436,1551,2.435,1552,1.34,1553,2.617,1554,4.099,1555,2.821,1556,5.402,1557,5.632,1558,1.834,1559,4.961,1560,2.617,1561,4.581,1562,1.834,1563,1.834,1564,1.834,1565,1.834,1566,4.785,1567,1.834,1568,1.834,1569,1.497,1570,2.821,1571,1.834,1572,1.834,1573,1.834,1574,1.497,1575,1.834,1576,1.834,1577,1.834,1578,1.834,1579,1.834,1580,1.834,1581,1.834,1582,1.834,1583,1.834,1584,2.821,1585,1.834,1586,2.821,1587,1.834,1588,3.436,1589,1.834,1590,1.834,1591,1.834,1592,4.847,1593,4.164,1594,4.164,1595,3.858,1596,1.834,1597,1.414,1598,1.834,1599,3.855,1600,5.231,1601,1.834,1602,2.821,1603,3.858,1604,1.834,1605,5.326,1606,4.949,1607,4.396,1608,4.961,1609,2.821,1610,1.834,1611,1.834,1612,4.164,1613,1.834,1614,3.436,1615,2.821,1616,1.834,1617,4.726,1618,4.164,1619,5.174,1620,1.834,1621,1.834,1622,3.436,1623,1.834,1624,2.821,1625,2.821,1626,3.858,1627,2.821,1628,2.447,1629,2.821,1630,4.164,1631,2.617,1632,2.617,1633,1.834,1634,1.834,1635,1.834,1636,4.726,1637,2.821,1638,4.579,1639,1.703,1640,1.834,1641,3.436,1642,4.537,1643,2.821,1644,4.396,1645,1.834,1646,5.11,1647,3.858,1648,2.821,1649,2.821,1650,2.821,1651,3.436,1652,2.821,1653,2.821,1654,1.834,1655,2.821,1656,2.821,1657,3.858,1658,2.821,1659,2.821,1660,3.188,1661,1.834,1662,1.834,1663,1.834,1664,1.834,1665,1.834,1666,3.436,1667,1.834,1668,4.164,1669,1.834,1670,4.396,1671,3.147,1672,4.396,1673,3.436,1674,1.826,1675,3.188,1676,3.436,1677,1.834,1678,5.11,1679,5.11,1680,4.396,1681,3.436,1682,1.834,1683,4.579,1684,1.834,1685,4.396,1686,1.834,1687,1.834,1688,3.436,1689,1.834,1690,3.436,1691,3.436,1692,3.436,1693,3.436,1694,2.821,1695,2.821,1696,2.821,1697,2.821,1698,2.821,1699,5.174,1700,2.821,1701,1.591,1702,1.834,1703,1.834,1704,1.834,1705,1.834,1706,1.834,1707,1.702,1708,1.834,1709,1.834,1710,1.834,1711,1.159,1712,1.834,1713,1.834,1714,1.591,1715,1.834,1716,2.06,1717,1.834,1718,1.834,1719,1.834,1720,2.821,1721,1.702,1722,1.834,1723,1.834,1724,2.821,1725,3.858,1726,3.858,1727,1.834,1728,1.834,1729,3.436,1730,1.834,1731,2.821,1732,2.821,1733,1.834,1734,4.726,1735,2.821,1736,1.834,1737,1.834,1738,1.834,1739,2.821,1740,1.834,1741,1.497,1742,2.821,1743,1.834,1744,1.834,1745,1.414,1746,1.834,1747,1.834,1748,1.834,1749,1.834,1750,1.834,1751,1.834,1752,1.834,1753,1.834,1754,2.821,1755,1.834,1756,2.821,1757,2.561,1758,2.561,1759,3.938]],["title/classes/FieldAction.html",[0,0.189,1760,1.625]],["body/classes/FieldAction.html",[0,0.303,2,0.918,3,0.101,4,0.202,5,0.087,6,0.212,7,0.125,14,0.13,15,0.515,17,0.348,18,0.015,19,0.27,21,0.261,29,0.644,30,1.11,31,1.2,32,0.442,54,0.216,59,0.785,68,0.576,103,0.886,115,0.434,116,2.076,117,0.854,124,2.302,133,0.867,135,1.366,150,0.684,160,1.411,176,0.47,179,0.503,180,1.472,194,0.615,277,0.729,278,0.647,282,1.809,290,0.006,291,0.012,292,0.006,308,0.705,310,0.512,313,0.593,330,2.077,341,1.608,360,0.723,361,0.723,418,0.88,497,3.117,517,0.82,544,2.212,575,2.931,576,2.495,580,2.931,581,2.931,582,2.931,583,2.931,584,2.931,586,3.485,630,1.962,716,1.122,748,0.953,881,1.785,942,2.169,955,2.077,999,2.306,1003,1.445,1035,2.433,1109,3.117,1163,3.041,1164,3.208,1322,3.333,1371,1.86,1394,2.304,1499,1.768,1552,1.86,1674,1.353,1760,3.002,1761,4.643,1762,2.209,1763,4.163,1764,4.163,1765,4.163,1766,4.163,1767,5.017,1768,5.017,1769,5.017,1770,3.715,1771,3.556,1772,3.858,1773,3.556,1774,3.556,1775,3.556,1776,3.556,1777,3.556,1778,3.593,1779,3.556,1780,3.593,1781,3.593,1782,3.556,1783,4.522,1784,3.593,1785,3.556,1786,2.077,1787,3.041,1788,2.931,1789,2.931,1790,2.931,1791,2.931,1792,3.396,1793,3.333,1794,2.547,1795,2.362,1796,2.209,1797,2.209,1798,3.593,1799,2.547,1800,4.643,1801,3.593,1802,3.117,1803,2.362,1804,1.962,1805,2.547,1806,2.547,1807,2.547,1808,4.769,1809,3.593,1810,4.949,1811,2.547,1812,2.547,1813,2.547,1814,2.209,1815,2.547,1816,2.547,1817,2.547,1818,3.333,1819,2.209,1820,2.547,1821,3.593,1822,2.547,1823,2.547,1824,3.593,1825,2.547,1826,3.117,1827,2.547,1828,2.931,1829,1.962,1830,2.209,1831,2.547,1832,3.208,1833,2.547,1834,2.362,1835,3.862,1836,3.593,1837,4.949,1838,4.522,1839,2.547,1840,2.547,1841,2.547,1842,2.547,1843,2.547,1844,4.163,1845,2.547,1846,2.547,1847,4.149,1848,3.593,1849,3.593,1850,2.547,1851,2.547,1852,2.547,1853,3.593,1854,2.547,1855,2.362,1856,2.547,1857,3.593,1858,4.163,1859,3.593,1860,3.922,1861,2.209,1862,2.547,1863,4.949,1864,2.547,1865,2.547,1866,3.117,1867,3.593,1868,2.547,1869,2.209,1870,2.547,1871,2.547,1872,2.547,1873,2.547,1874,2.547,1875,3.593,1876,2.547,1877,2.547,1878,3.593,1879,2.547,1880,2.547,1881,2.547,1882,2.547]],["title/classes/FieldActionArgument.html",[0,0.189,1787,2.054]],["body/classes/FieldActionArgument.html",[0,0.31,2,0.965,3,0.106,4,0.205,5,0.091,6,0.193,7,0.113,14,0.137,15,0.527,17,0.346,18,0.015,19,0.236,21,0.268,29,0.656,30,1.167,31,1.261,32,0.465,54,0.22,59,0.786,68,0.572,103,0.895,115,0.418,116,2.109,117,0.842,124,1.864,133,0.883,135,1.423,150,0.688,160,1.483,176,0.472,179,0.45,180,1.547,194,0.623,277,0.733,278,0.623,282,1.827,290,0.007,291,0.013,292,0.007,308,0.692,330,2.183,341,1.69,418,0.912,497,3.227,517,0.861,544,2.273,575,3.035,576,2.584,580,3.035,581,3.035,582,3.035,583,3.035,584,3.035,586,3.562,630,2.063,716,1.143,748,1.002,881,1.818,942,2.582,955,2.183,999,2.369,1003,1.485,1035,2.478,1109,3.227,1163,1.955,1164,3.296,1322,4.287,1371,1.955,1394,2.337,1499,1.859,1552,1.955,1674,1.422,1760,2.906,1761,4.213,1762,2.322,1763,2.677,1764,2.677,1765,2.677,1766,2.677,1770,3.548,1772,3.673,1778,2.677,1780,2.677,1781,2.677,1783,3.721,1784,2.677,1786,2.183,1787,3.376,1788,3.77,1789,3.035,1790,3.035,1791,3.035,1792,3.489,1793,3.451,1794,2.677,1795,2.483,1796,2.322,1797,2.322,1798,3.721,1799,2.677,1800,4.691,1801,3.721,1802,3.227,1803,2.483,1804,2.063,1805,2.677,1806,2.677,1807,2.677,1808,4.857,1809,3.721,1810,5.028,1811,2.677,1812,2.677,1813,2.677,1814,2.322,1815,2.677,1816,2.677,1817,2.677,1818,3.451,1819,2.322,1820,2.677,1821,3.721,1822,2.677,1823,2.677,1824,3.721,1825,2.677,1826,3.227,1827,2.677,1828,3.035,1829,2.063,1830,2.322,1831,2.677,1832,3.296,1833,2.677,1834,2.483,1835,3.967,1836,3.721,1837,5.028,1838,4.622,1839,2.677,1840,2.677,1841,2.677,1842,2.677,1843,2.677,1844,4.277,1845,2.677,1846,2.677,1847,4.207,1848,3.721,1849,3.721,1850,2.677,1851,2.677,1852,2.677,1853,3.721,1854,2.677,1855,2.483,1856,2.677,1857,3.721,1858,4.277,1859,3.721,1860,4.009,1861,2.322,1862,2.677,1863,5.028,1864,2.677,1865,2.677,1866,3.227,1867,3.721,1868,2.677,1869,2.322,1870,2.677,1871,2.677,1872,2.677,1873,2.677,1874,2.677,1875,3.721,1876,2.677,1877,2.677,1878,3.721,1879,2.677,1880,2.677,1881,2.677,1882,2.677,1883,3.737,1884,3.737,1885,3.737,1886,3.737]],["title/classes/FieldActionArgumentValue.html",[0,0.189,1770,2.054]],["body/classes/FieldActionArgumentValue.html",[0,0.312,2,0.981,3,0.108,4,0.206,5,0.093,6,0.171,7,0.1,14,0.139,15,0.53,17,0.331,18,0.015,19,0.192,21,0.271,29,0.66,30,1.186,31,1.281,32,0.472,54,0.221,59,0.788,68,0.571,103,0.898,115,0.42,116,2.12,117,0.845,124,1.88,133,0.888,135,1.394,150,0.687,160,1.507,176,0.473,179,0.455,180,1.572,194,0.626,277,0.735,278,0.626,282,1.832,290,0.007,291,0.013,292,0.007,308,0.615,330,2.219,341,1.718,418,0.922,497,3.263,517,0.875,544,2.292,575,3.069,576,2.612,580,3.069,581,3.069,582,3.069,583,3.069,584,3.069,586,3.586,630,2.096,716,1.149,748,1.018,881,1.829,942,2.271,955,2.219,999,2.389,1003,1.497,1035,2.492,1109,3.263,1163,1.987,1164,3.324,1322,3.49,1371,1.987,1394,2.347,1499,1.889,1552,1.987,1674,1.445,1760,2.921,1761,3.741,1762,2.359,1763,2.72,1764,2.72,1765,2.72,1766,2.72,1770,3.691,1772,3.691,1778,2.72,1780,2.72,1781,2.72,1783,3.762,1784,2.72,1786,2.219,1787,3.151,1788,3.069,1789,3.069,1790,3.069,1791,3.069,1792,3.518,1793,3.49,1794,2.72,1795,2.523,1796,2.359,1797,2.359,1798,3.762,1799,2.72,1800,4.706,1801,3.762,1802,3.263,1803,2.523,1804,2.096,1805,2.72,1806,2.72,1807,2.72,1808,4.885,1809,3.762,1810,5.053,1811,2.72,1812,2.72,1813,2.72,1814,2.359,1815,2.72,1816,2.72,1817,2.72,1818,3.49,1819,2.359,1820,2.72,1821,3.762,1822,2.72,1823,2.72,1824,3.762,1825,2.72,1826,3.263,1827,2.72,1828,3.069,1829,2.096,1830,2.359,1831,2.72,1832,3.324,1833,2.72,1834,2.523,1835,4.001,1836,3.762,1837,5.053,1838,4.654,1839,2.72,1840,2.72,1841,2.72,1842,2.72,1843,2.72,1844,4.313,1845,2.72,1846,2.72,1847,4.226,1848,3.762,1849,3.762,1850,2.72,1851,2.72,1852,2.72,1853,3.762,1854,2.72,1855,2.523,1856,2.72,1857,3.762,1858,4.313,1859,3.762,1860,4.037,1861,2.359,1862,2.72,1863,5.053,1864,2.72,1865,2.72,1866,3.263,1867,3.762,1868,2.72,1869,2.359,1870,2.72,1871,2.72,1872,2.72,1873,2.72,1874,2.72,1875,3.762,1876,2.72,1877,2.72,1878,3.762,1879,2.72,1880,2.72,1881,2.72,1882,2.72,1887,3.798,1888,3.798]],["title/classes/FieldActionDefinition.html",[0,0.189,1772,2.054]],["body/classes/FieldActionDefinition.html",[0,0.288,2,0.822,3,0.09,4,0.212,5,0.078,6,0.22,7,0.129,9,2.004,14,0.116,15,0.543,17,0.36,18,0.015,19,0.282,21,0.246,29,0.695,30,0.994,31,1.074,32,0.396,54,0.207,59,0.776,68,0.579,103,0.894,115,0.448,116,2.192,117,0.884,124,1.706,133,0.997,135,1.358,150,0.663,160,1.838,176,0.469,179,0.473,180,1.318,194,0.595,277,0.743,278,0.61,282,1.769,290,0.006,291,0.012,292,0.006,308,0.679,310,0.473,313,0.719,330,3.192,341,1.44,360,0.875,361,0.875,418,0.959,497,3.394,517,0.734,544,2.428,575,2.707,576,2.305,580,2.707,581,2.707,582,2.707,583,2.707,584,2.707,586,3.521,630,2.558,716,1.075,748,0.853,881,2.023,942,2.363,955,1.86,999,2.641,1003,1.359,1035,2.623,1109,3.729,1163,1.665,1164,3.313,1322,3.988,1371,1.665,1394,2.468,1499,1.583,1552,1.665,1674,1.211,1760,2.915,1761,4.816,1762,1.977,1763,2.28,1764,2.28,1765,2.28,1766,2.28,1770,3.337,1772,3.595,1778,2.28,1780,2.28,1781,2.28,1783,3.319,1784,2.28,1786,1.86,1787,3.337,1788,2.707,1789,3.507,1790,2.707,1791,2.707,1792,3.192,1793,3.079,1794,3.914,1795,3.63,1796,3.394,1797,3.394,1798,3.914,1799,3.319,1800,4.642,1801,4.299,1802,3.729,1803,3.079,1804,2.558,1805,3.319,1806,3.319,1807,3.319,1808,4.921,1809,3.319,1810,5.043,1811,2.28,1812,2.28,1813,3.319,1814,1.977,1815,2.28,1816,2.28,1817,2.28,1818,3.079,1819,1.977,1820,2.28,1821,3.319,1822,2.28,1823,2.28,1824,3.319,1825,3.319,1826,2.879,1827,2.28,1828,3.192,1829,2.558,1830,2.879,1831,3.319,1832,3.016,1833,2.28,1834,2.115,1835,4.238,1836,4.299,1837,5.043,1838,5.043,1839,3.319,1840,2.28,1841,2.28,1842,2.28,1843,2.28,1844,4.299,1845,3.319,1846,2.28,1847,4.195,1848,4.299,1849,4.299,1850,3.319,1851,2.28,1852,2.28,1853,3.319,1854,2.28,1855,2.115,1856,2.28,1857,3.319,1858,3.914,1859,3.319,1860,3.729,1861,2.879,1862,3.319,1863,4.768,1864,2.28,1865,2.28,1866,2.879,1867,3.319,1868,2.28,1869,1.977,1870,2.28,1871,2.28,1872,2.28,1873,2.28,1874,2.28,1875,3.319,1876,2.28,1877,2.28,1878,3.319,1879,2.28,1880,2.28,1881,2.28,1882,2.28,1889,4.634,1890,4.634,1891,4.634,1892,4.634,1893,4.634,1894,4.634,1895,4.634,1896,4.634,1897,3.183,1898,3.183,1899,3.183,1900,3.183,1901,3.183,1902,3.183,1903,3.183,1904,3.183,1905,3.183,1906,3.183,1907,3.183,1908,3.183,1909,3.183,1910,3.183,1911,3.183,1912,3.183]],["title/injectables/FieldActionService.html",[49,2.167,293,1.952]],["body/injectables/FieldActionService.html",[0,0.184,3,0.109,4,0.109,5,0.094,6,0.22,7,0.129,14,0.14,15,0.431,17,0.341,18,0.015,19,0.28,21,0.332,22,4.051,24,2.237,25,4.051,29,0.662,33,2.587,35,1.814,49,2.915,54,0.124,59,0.539,68,0.521,80,1.782,88,3.599,103,0.839,105,1.313,115,0.421,116,1.959,117,0.683,123,0.752,133,1.025,134,1.019,135,1.398,140,3.509,150,0.627,153,3.509,176,0.457,194,0.69,253,3.776,277,0.687,278,0.564,281,0.861,282,0.917,284,3.509,290,0.007,291,0.01,292,0.007,293,2.627,295,2.544,301,4.332,305,2.742,308,0.665,310,0.539,313,0.722,314,2.503,316,0.569,322,2.378,323,3.534,324,1.344,325,0.545,328,2.742,354,4.67,360,0.85,361,0.85,371,0.787,418,1.241,716,1.019,809,3.509,881,1.748,882,1.519,911,4.332,928,4.126,944,3.783,976,2.627,987,2.742,988,2.742,997,4.724,1163,2.003,1234,2.742,1354,4.051,1359,1.457,1483,2.991,1772,4.248,1787,2.764,1913,6.708,1914,3.323,1915,6.048,1916,6.048,1917,6.52,1918,5.282,1919,6.52,1920,5.282,1921,5.282,1922,5.282,1923,3.828,1924,5.66,1925,3.828,1926,3.828,1927,5.282,1928,3.828,1929,6.52,1930,3.828,1931,5.282,1932,3.828,1933,4.724,1934,5.282,1935,3.828,1936,4.126,1937,5.282,1938,3.828,1939,3.828,1940,3.828,1941,5.25,1942,5.66,1943,5.66,1944,5.66,1945,4.585,1946,3.828,1947,3.828,1948,2.742,1949,2.003,1950,3.828,1951,6.841,1952,3.828,1953,5.282,1954,3.828,1955,3.828,1956,6.52,1957,3.828,1958,5.282,1959,3.534,1960,4.585,1961,4.126,1962,3.783,1963,3.828,1964,3.828,1965,3.828,1966,3.828,1967,4.126,1968,2.991,1969,3.828,1970,2.991,1971,2.991,1972,2.742,1973,3.828,1974,3.828,1975,3.828,1976,5.282,1977,3.828,1978,3.828,1979,3.828,1980,3.323,1981,5.282,1982,3.828,1983,3.828,1984,3.323,1985,3.323,1986,3.323,1987,3.323,1988,3.828,1989,3.323,1990,3.323,1991,3.828,1992,5.282,1993,3.828,1994,5.282,1995,3.828,1996,3.828,1997,5.282,1998,4.585,1999,3.323,2000,3.828,2001,3.828,2002,3.828,2003,5.282,2004,3.828,2005,3.828,2006,3.828,2007,3.828,2008,3.828,2009,3.828,2010,3.828,2011,3.828,2012,3.828,2013,3.828,2014,3.828,2015,3.828,2016,3.828,2017,3.828,2018,5.282,2019,3.828,2020,3.828,2021,3.828,2022,3.828,2023,3.828,2024,3.828,2025,3.828,2026,3.828,2027,3.828,2028,3.828,2029,6.048,2030,3.828,2031,3.828,2032,5.282,2033,3.828,2034,7.073,2035,6.048,2036,3.828,2037,3.828,2038,3.828,2039,3.828]],["title/components/FieldEditComponent.html",[363,0.193,409,0.838]],["body/components/FieldEditComponent.html",[0,0.22,3,0.089,4,0.089,5,0.077,6,0.227,7,0.134,10,2.08,14,0.114,15,0.374,17,0.355,18,0.015,19,0.291,21,0.307,29,0.692,30,0.978,31,2.234,32,0.569,45,1.484,48,1.354,54,0.102,59,0.698,68,0.53,103,0.706,105,1.346,115,0.437,116,1.626,117,0.772,123,0.673,133,0.705,134,0.912,135,1.177,150,0.651,176,0.346,179,0.645,194,0.629,195,3.577,251,0.669,252,0.669,271,2.845,277,0.747,278,0.651,281,0.446,290,0.006,291,0.008,292,0.006,308,0.752,310,0.467,313,0.742,314,2.17,316,0.465,323,3.163,324,1.099,325,0.446,326,1.228,338,2.243,360,0.85,361,0.85,363,0.267,364,0.669,365,1.096,366,0.779,367,0.779,369,0.722,370,1.668,371,0.941,372,0.779,374,1.096,375,0.695,376,1.138,377,1.637,378,0.669,379,1.481,380,0.779,381,0.779,382,0.695,383,0.779,384,0.669,385,0.779,386,0.669,387,0.779,388,0.779,389,0.669,390,1.576,391,0.695,392,0.779,393,0.669,394,0.804,395,0.695,396,0.779,397,0.669,398,0.779,399,0.669,400,0.779,401,0.643,402,1.346,403,0.643,404,0.75,405,1.321,406,0.779,407,0.695,408,0.779,409,1.272,410,0.669,411,0.643,412,0.779,413,0.643,414,0.695,415,0.779,416,0.669,417,0.669,418,0.55,419,0.779,420,0.669,421,0.779,422,0.669,423,0.779,424,0.669,425,0.669,426,1.138,427,0.669,428,0.643,429,0.779,430,0.669,431,0.779,432,0.669,433,1.055,434,0.779,435,0.619,436,1.138,437,0.643,438,0.669,439,1.807,440,0.669,441,0.669,442,0.669,443,0.669,444,0.779,445,0.669,446,0.722,447,0.75,448,0.643,449,0.75,450,0.779,453,2.241,454,1.055,456,3.363,461,2.465,462,2.396,463,2.465,464,3.975,469,1.978,471,2.315,472,3.28,473,5.501,476,3.975,481,1.296,487,1.416,488,1.557,489,1.354,490,1.057,491,2.08,494,1.945,496,3.877,525,1.945,526,2.396,527,3.042,530,4.228,531,4.652,532,3.577,536,2.446,545,3.577,547,2.446,548,2.446,549,2.243,550,3.975,551,2.446,552,2.446,553,2.446,554,2.243,555,4.228,560,2.277,561,2.243,564,2.243,566,2.243,568,4.228,569,2.446,575,3.48,576,2.962,577,3.577,578,3.577,579,3.042,580,2.675,581,2.675,582,2.675,583,3.48,584,3.48,585,3.577,586,2.527,587,3.577,588,3.577,589,3.577,590,3.577,591,5.475,615,1.945,692,1.354,1003,0.779,1073,1.728,1131,3.975,1149,3.596,1164,1.728,1321,4.228,1336,4.228,1346,1.192,1359,1.192,1370,6.207,1387,6.085,1403,4.266,1420,3.975,1639,1.98,1674,1.743,1741,1.829,1861,1.945,2040,6.934,2041,4.699,2042,5.413,2043,5.413,2044,5.413,2045,3.877,2046,5.413,2047,3.975,2048,4.579,2049,4.579,2050,4.579,2051,3.975,2052,3.975,2053,3.131,2054,3.596,2055,4.579,2056,3.131,2057,3.131,2058,3.131,2059,4.579,2060,3.131,2061,3.131,2062,3.131,2063,4.579,2064,3.131,2065,3.131,2066,3.131,2067,3.131,2068,3.131,2069,3.131,2070,3.131,2071,4.355,2072,3.131,2073,2.718,2074,2.718,2075,3.131,2076,3.131,2077,5.956,2078,3.131,2079,5.413,2080,5.956,2081,3.131,2082,5.413,2083,4.699,2084,5.956,2085,5.956,2086,3.131,2087,5.956,2088,3.975,2089,3.131,2090,2.718,2091,3.131,2092,4.579,2093,3.131,2094,3.131,2095,3.131,2096,2.243,2097,5.413,2098,2.243,2099,2.446,2100,3.131,2101,3.131,2102,3.131,2103,5.413,2104,5.413,2105,4.579,2106,3.131,2107,3.131,2108,3.131,2109,2.718,2110,3.975,2111,3.131,2112,3.131,2113,2.718,2114,2.718,2115,3.131,2116,2.718,2117,2.718,2118,4.579,2119,3.131,2120,3.131,2121,2.718,2122,2.718,2123,2.718,2124,4.579,2125,2.718,2126,2.718]],["title/classes/FieldNode.html",[0,0.189,1566,2.439]],["body/classes/FieldNode.html",[0,0.275,2,0.638,3,0.07,4,0.15,5,0.06,6,0.172,7,0.101,14,0.265,15,0.313,17,0.238,18,0.015,19,0.25,21,0.238,29,0.512,33,0.981,34,1.23,35,1.172,54,0.186,68,0.563,80,2.351,103,0.293,105,0.615,114,1.294,115,0.144,123,0.583,124,1.971,133,0.849,134,0.646,135,1.377,150,0.565,176,0.449,179,0.332,180,1.024,194,0.682,246,2.005,277,0.664,278,0.332,282,1.668,288,1.23,290,0.004,291,0.007,292,0.004,308,0.391,310,0.391,313,0.584,324,0.868,325,0.352,360,0.307,361,0.583,411,0.508,499,1.4,500,1.294,517,0.883,544,1.459,560,1.906,607,1.521,609,1.445,615,2.381,676,1.587,716,1.316,748,1.897,881,1.693,935,3.484,942,1.069,956,1.643,961,2.546,976,1.23,999,2.097,1003,1.998,1035,0.904,1126,2.991,1201,1.069,1218,1.643,1262,2.391,1278,1.294,1329,3.089,1346,1.786,1359,0.941,1366,2.239,1394,1.716,1484,3.089,1490,3.512,1494,2.994,1536,4.504,1537,1.643,1538,4.334,1539,3.118,1540,3.786,1541,4.521,1542,4.902,1543,4.902,1544,1.771,1546,4.097,1551,2.657,1552,1.294,1553,2.546,1554,3.922,1555,2.745,1556,5.245,1557,5.536,1558,1.771,1559,4.945,1560,3.118,1561,4.59,1562,1.771,1563,1.771,1564,1.771,1565,1.771,1566,4.783,1567,1.771,1568,1.771,1569,1.445,1570,2.745,1571,1.771,1572,1.771,1573,1.771,1574,1.445,1575,1.771,1576,1.771,1577,1.771,1578,1.771,1579,1.771,1580,1.771,1581,1.771,1582,1.771,1583,1.771,1584,2.745,1585,1.771,1586,2.745,1587,1.771,1588,3.361,1589,1.771,1590,1.771,1591,1.771,1592,4.797,1593,4.097,1594,4.097,1595,3.786,1596,1.771,1597,1.365,1598,1.771,1599,3.811,1600,5.193,1601,1.771,1602,2.745,1603,3.786,1604,1.771,1605,5.291,1606,4.902,1607,4.334,1608,4.945,1609,2.745,1610,1.771,1611,1.771,1612,4.097,1613,1.771,1614,3.361,1615,2.745,1616,1.771,1617,4.672,1618,4.097,1619,5.134,1620,1.771,1621,1.771,1622,3.361,1623,1.771,1624,2.745,1625,2.745,1626,3.786,1627,2.745,1628,2.381,1629,2.745,1630,4.097,1631,2.546,1632,2.546,1633,1.771,1634,1.771,1635,1.771,1636,4.672,1637,2.745,1638,4.521,1639,1.657,1640,1.771,1641,3.361,1642,4.504,1643,2.745,1644,4.334,1645,1.771,1646,5.068,1647,3.786,1648,2.745,1649,2.745,1650,2.745,1651,3.361,1652,2.745,1653,2.745,1654,1.771,1655,2.745,1656,2.745,1657,3.786,1658,2.745,1659,2.745,1660,3.118,1661,1.771,1662,1.771,1663,1.771,1664,1.771,1665,1.771,1666,3.361,1667,1.771,1668,4.097,1669,1.771,1670,4.334,1671,3.089,1672,4.334,1673,3.361,1674,1.786,1675,3.118,1676,3.361,1677,1.771,1678,5.068,1679,5.068,1680,4.334,1681,3.361,1682,1.771,1683,4.521,1684,1.771,1685,4.334,1686,1.771,1687,1.771,1688,3.361,1689,1.771,1690,3.361,1691,3.361,1692,3.361,1693,3.361,1694,2.745,1695,2.745,1696,2.745,1697,2.745,1698,2.745,1699,5.134,1700,2.745,1701,1.536,1702,1.771,1703,1.771,1704,1.771,1705,1.771,1706,1.771,1707,1.643,1708,1.771,1709,1.771,1710,1.771,1711,1.118,1712,1.771,1713,1.771,1714,1.536,1715,1.771,1716,2.005,1717,1.771,1718,1.771,1719,1.771,1720,2.745,1721,1.643,1722,1.771,1723,1.771,1724,2.745,1725,3.786,1726,3.786,1727,1.771,1728,1.771,1729,3.361,1730,1.771,1731,2.745,1732,2.745,1733,1.771,1734,4.672,1735,2.745,1736,1.771,1737,1.771,1738,1.771,1739,2.745,1740,1.771,1741,1.445,1742,2.745,1743,1.771,1744,1.771,1745,1.365,1746,1.771,1747,1.771,1748,1.771,1749,1.771,1750,1.771,1751,1.771,1752,1.771,1753,1.771,1754,2.745,1755,1.771,1756,2.745,2127,2.473,2128,3.833,2129,2.473,2130,4.966,2131,2.147,2132,2.147,2133,2.473,2134,2.473,2135,2.147,2136,2.147,2137,2.147]],["title/injectables/FileManagementService.html",[52,2.167,293,1.952]],["body/injectables/FileManagementService.html",[0,0.176,3,0.066,4,0.104,5,0.188,6,0.212,7,0.13,9,1.583,14,0.085,15,0.299,17,0.338,18,0.015,19,0.275,21,0.314,22,3.181,24,1.362,25,2.808,29,0.664,32,0.29,36,1.287,38,1.449,46,1.287,48,1.008,52,2.021,54,0.2,59,0.238,68,0.569,80,1.878,88,4.097,101,2.433,103,0.536,105,0.58,115,0.382,117,0.414,123,0.637,133,0.973,134,0.938,135,1.495,137,3.633,138,2.275,150,0.554,160,3.12,176,0.431,179,0.391,180,1.871,194,0.669,223,1.362,248,2.433,249,1.362,250,1.583,253,1.287,259,1.362,278,0.391,281,1.096,282,1.226,290,0.007,291,0.007,292,0.004,293,1.821,295,1.549,301,3.238,305,3.238,308,0.238,310,0.374,313,0.722,316,0.347,322,1.449,323,4.337,324,0.819,325,0.332,328,4.424,337,5.277,346,1.821,347,1.549,354,4.821,360,0.795,361,0.795,371,1.383,394,0.409,428,0.752,469,0.728,499,1.338,500,1.22,540,2.275,576,1.821,607,0.925,677,3.924,678,1.549,692,2.911,703,1.362,708,2.86,716,1.078,905,1.055,911,4.711,937,2.86,939,2.433,941,4.831,944,4.23,947,3.178,960,2.024,962,2.024,972,2.86,975,2.024,976,3.181,979,2.024,982,3.531,987,1.67,988,3.238,997,3.531,1034,3.178,1126,1.105,1215,1.449,1248,2.021,1251,1.287,1432,4,1450,2.808,1483,1.822,1484,3.933,1924,4.445,1941,5.127,1942,5.361,1943,6.14,1944,6.282,1945,4.831,1960,5.552,1961,5.138,1962,5.554,1967,5.258,1968,5.138,1970,3.531,1971,3.531,1972,3.668,1980,5.361,1984,4.445,1985,4.445,1986,3.924,1987,5.361,1989,5.843,1990,3.924,1998,6.215,1999,5.127,2054,3.402,2090,3.178,2138,6.487,2139,2.024,2140,3.661,2141,3.661,2142,3.661,2143,3.661,2144,3.178,2145,3.178,2146,4.52,2147,5.565,2148,3.661,2149,3.661,2150,5.121,2151,5.121,2152,5.121,2153,5.121,2154,5.121,2155,3.661,2156,3.661,2157,3.661,2158,3.661,2159,2.332,2160,3.661,2161,3.661,2162,2.332,2163,4.347,2164,5.71,2165,6.753,2166,4.831,2167,5.128,2168,4.445,2169,4.831,2170,5.565,2171,6.176,2172,5.361,2173,5.552,2174,3.661,2175,2.332,2176,2.332,2177,2.332,2178,6.578,2179,5.843,2180,5.361,2181,6.578,2182,2.332,2183,2.332,2184,2.332,2185,3.661,2186,2.332,2187,3.661,2188,2.332,2189,3.924,2190,4.445,2191,3.661,2192,3.661,2193,3.661,2194,3.661,2195,3.661,2196,3.661,2197,3.661,2198,3.178,2199,3.661,2200,2.332,2201,2.86,2202,3.661,2203,2.332,2204,3.178,2205,4.445,2206,3.661,2207,3.178,2208,4.52,2209,4.52,2210,3.661,2211,2.332,2212,3.661,2213,3.661,2214,3.661,2215,3.178,2216,3.661,2217,3.661,2218,2.332,2219,2.332,2220,2.332,2221,2.332,2222,2.332,2223,2.332,2224,2.332,2225,2.332,2226,2.332,2227,1.22,2228,1.22,2229,2.332,2230,2.332,2231,3.661,2232,2.332,2233,3.661,2234,2.332,2235,5.906,2236,5.906,2237,2.86,2238,2.332,2239,4.52,2240,1.822,2241,2.332,2242,2.332,2243,4.52,2244,5.906,2245,5.906,2246,4.52,2247,5.121,2248,3.661,2249,2.332,2250,5.906,2251,3.661,2252,5.121,2253,4.52,2254,3.178,2255,3.661,2256,3.661,2257,2.332,2258,3.661,2259,2.332,2260,2.332,2261,4.52,2262,4.52,2263,4.52,2264,3.661,2265,2.332,2266,3.661,2267,2.332,2268,3.661,2269,2.332,2270,2.332,2271,2.332,2272,3.661,2273,5.565,2274,4.52,2275,4.445,2276,2.332,2277,2.024,2278,4.445,2279,2.332,2280,2.332,2281,6.176,2282,6.176,2283,4.52,2284,2.332,2285,2.332,2286,2.332,2287,2.024,2288,2.332,2289,2.332,2290,2.332,2291,2.332,2292,4.52,2293,2.332,2294,2.332,2295,2.024,2296,2.332,2297,2.332,2298,2.332,2299,2.332,2300,2.332,2301,2.332,2302,3.661,2303,2.332,2304,2.332,2305,2.024,2306,2.332,2307,2.332,2308,2.332,2309,2.332,2310,5.565,2311,5.906,2312,4.52,2313,5.906,2314,4.52,2315,5.121,2316,3.661,2317,2.332,2318,3.661,2319,2.024,2320,2.332,2321,2.332,2322,2.332,2323,2.332,2324,2.024,2325,2.024,2326,2.332,2327,3.661,2328,3.661,2329,2.332,2330,2.332,2331,2.332,2332,2.332,2333,2.332,2334,2.332,2335,3.661,2336,3.661,2337,2.332,2338,2.332,2339,2.332,2340,2.332,2341,2.332,2342,2.332,2343,2.332,2344,2.332,2345,2.332,2346,2.024]],["title/directives/FocusDirective.html",[378,0.838,448,0.807]],["body/directives/FocusDirective.html",[0,0.283,3,0.167,4,0.167,5,0.144,6,0.222,7,0.13,14,0.215,15,0.568,17,0.313,18,0.015,19,0.28,21,0.265,54,0.191,59,0.71,103,0.698,105,1.463,115,0.342,117,0.786,133,0.965,179,0.509,278,0.509,290,0.011,291,0.013,292,0.011,308,0.601,310,0.71,313,0.601,316,0.875,326,1.866,360,0.731,361,0.731,369,1.356,370,1.43,378,1.486,447,1.409,448,1.43,449,1.871,471,2.896,508,2.543,517,1.604,607,2.334,2347,5.108,2348,7.411,2349,7.411,2350,7.66,2351,5.884,2352,6.96,2353,5.884,2354,5.884,2355,5.884,2356,6.96,2357,5.884]],["title/classes/LineModel.html",[0,0.189,2358,3.067]],["body/classes/LineModel.html",[0,0.246,1,3.183,2,0.946,3,0.104,4,0.104,5,0.09,6,0.208,7,0.122,9,1.585,14,0.134,15,0.418,17,0.322,18,0.015,19,0.262,21,0.328,32,0.637,54,0.166,59,0.712,68,0.571,103,0.434,116,1.54,117,0.667,123,0.637,133,0.932,134,0.617,135,0.724,150,0.664,160,2.033,176,0.455,179,0.669,194,0.693,249,2.141,277,0.721,278,0.444,281,0.522,282,1.227,290,0.007,291,0.011,292,0.007,308,0.374,316,0.545,324,1.286,325,0.522,326,0.983,341,1.657,363,0.252,370,0.753,377,1.227,399,1.366,401,1.053,410,1.094,411,1.525,454,0.845,469,1.6,471,1.872,487,1.657,489,1.585,499,1.872,515,1.822,517,1.552,594,2.681,598,1.917,603,2.828,607,1.454,692,1.585,699,2.276,733,2.828,748,1.584,857,3.181,858,3.181,881,1.805,882,1.454,1003,0.911,1035,1.872,1037,4.448,1039,4.448,1063,5.554,1073,2.022,1088,2.862,1089,2.435,1135,2.862,1149,3.926,1150,4.003,1152,3.181,1153,4.448,1154,3.181,1164,2.022,1166,2.435,1215,2.276,1216,3.091,1240,3.183,1241,2.994,1255,2.435,1262,1.657,1263,2.276,1277,2.624,1278,1.917,1279,2.435,1297,2.276,1346,1.395,1359,2.435,1394,1.189,1628,2.276,1671,2.141,1701,2.276,1832,3.953,2346,3.181,2358,5.799,2359,6.343,2360,3.181,2361,6.399,2362,7.521,2363,7.307,2364,6.399,2365,6.733,2366,7.67,2367,3.664,2368,3.664,2369,5.909,2370,5.909,2371,5.909,2372,3.664,2373,3.664,2374,3.664,2375,3.664,2376,3.664,2377,3.664,2378,3.664,2379,3.664,2380,3.664,2381,3.181,2382,3.664,2383,3.664,2384,3.664,2385,3.664,2386,3.664,2387,3.664,2388,3.664,2389,3.664,2390,3.664,2391,3.664,2392,3.664,2393,3.664,2394,3.664,2395,3.664,2396,3.664,2397,3.664,2398,3.664,2399,3.664,2400,3.664,2401,3.664,2402,3.664,2403,5.124,2404,3.664,2405,3.664,2406,3.664,2407,3.664,2408,3.664,2409,3.664,2410,3.664,2411,3.664,2412,3.664,2413,3.664,2414,3.664,2415,3.181,2416,3.664,2417,5.124,2418,3.664,2419,3.664,2420,3.664,2421,3.664,2422,5.124,2423,3.664,2424,5.909,2425,3.664,2426,3.664,2427,3.664,2428,3.664,2429,5.124,2430,3.664,2431,3.664,2432,3.664,2433,5.124,2434,3.664,2435,3.664,2436,5.124,2437,3.664,2438,3.664,2439,3.664,2440,3.664,2441,3.664,2442,5.909,2443,3.664,2444,3.664,2445,3.664,2446,3.664,2447,3.664,2448,5.909,2449,3.664,2450,5.124,2451,3.664,2452,5.124,2453,2.862,2454,4.232,2455,6.399,2456,4.334,2457,3.664,2458,3.664,2459,3.664,2460,5.124,2461,3.181,2462,3.181,2463,3.664,2464,3.664,2465,3.664,2466,3.664,2467,3.664,2468,3.664,2469,3.664,2470,6.733,2471,3.664,2472,5.909,2473,3.664,2474,2.862,2475,3.664,2476,3.664,2477,3.181,2478,3.664,2479,3.664,2480,5.124,2481,3.664,2482,3.664,2483,3.664,2484,6.399,2485,2.862,2486,2.862,2487,3.664,2488,3.664,2489,3.664,2490,5.124,2491,3.664,2492,3.664,2493,3.664,2494,3.181,2495,3.664,2496,3.664,2497,3.664,2498,3.664,2499,5.909,2500,3.664,2501,5.124,2502,3.664,2503,5.909,2504,3.664,2505,3.181,2506,3.664,2507,3.664]],["title/classes/LookupTable.html",[0,0.189,2508,2.294]],["body/classes/LookupTable.html",[0,0.305,2,1.307,3,0.144,4,0.144,5,0.124,6,0.225,7,0.132,14,0.185,15,0.518,17,0.337,18,0.015,19,0.287,54,0.206,68,0.589,105,1.725,115,0.435,117,0.784,135,1.255,150,0.438,176,0.444,179,0.438,194,0.601,278,0.438,290,0.014,291,0.011,292,0.009,308,0.517,310,0.648,313,0.708,360,0.629,361,0.629,414,1.123,716,0.853,1003,1.258,1371,3.322,1796,3.944,1797,3.944,1860,3.944,1866,3.944,2237,5.683,2240,5.853,2508,3.71,2509,6.183,2510,3.953,2511,5.419,2512,5.419,2513,6.349,2514,6.315,2515,6.315,2516,6.349,2517,4.821,2518,5.061,2519,5.061,2520,5.061,2521,5.511,2522,6.315,2523,5.061,2524,6.505,2525,5.061,2526,5.061,2527,4.547,2528,4.393,2529,5.511,2530,5.511,2531,4.393,2532,4.393,2533,4.393,2534,4.393,2535,4.393,2536,4.393,2537,4.393,2538,4.393,2539,5.511,2540,5.511,2541,5.511,2542,6.022,2543,4.393,2544,2.648,2545,4.393,2546,4.393,2547,4.393,2548,6.022,2549,4.393,2550,4.393]],["title/components/LookupTableComponent.html",[363,0.193,413,0.807]],["body/components/LookupTableComponent.html",[0,0.308,3,0.122,4,0.122,5,0.105,6,0.218,7,0.133,14,0.156,15,0.465,17,0.32,18,0.015,19,0.277,21,0.329,29,0.781,32,0.708,54,0.185,59,0.437,68,0.511,103,0.507,115,0.397,117,0.483,123,0.848,134,0.721,135,1.126,150,0.493,176,0.331,179,0.591,194,0.681,251,0.914,252,0.914,266,3.784,277,0.716,281,0.609,290,0.008,291,0.01,292,0.008,310,0.581,313,0.697,316,0.636,325,0.609,326,1.527,360,0.532,361,0.532,363,0.315,364,0.914,365,1.364,366,1.064,367,1.064,369,0.986,370,1.702,371,1.17,372,1.064,374,1.364,375,0.949,376,1.416,377,1.364,378,0.914,379,1.697,380,1.064,381,1.064,382,0.949,383,1.064,384,0.914,385,1.064,386,0.914,387,1.064,388,1.064,389,0.914,390,1.767,391,0.949,392,1.064,393,0.914,394,1,395,0.949,396,1.064,397,0.914,398,1.064,399,0.914,400,1.064,401,0.879,402,1.592,403,0.879,404,1.024,405,1.515,406,1.064,407,0.949,408,1.064,409,0.914,410,0.914,411,0.879,412,1.064,413,1.403,414,1.622,415,1.064,416,0.914,417,0.914,418,0.751,419,1.064,420,0.914,421,1.064,422,0.914,423,1.064,424,0.914,425,0.914,426,1.416,427,0.914,428,0.879,429,1.064,430,0.914,431,1.064,432,0.914,433,1.313,434,1.064,435,0.846,436,1.416,437,0.879,438,0.914,439,1.416,440,0.914,441,0.914,442,0.914,443,0.914,444,1.064,445,0.914,446,0.986,447,1.024,448,0.879,449,1.024,450,1.064,453,2.65,454,1.313,461,2.826,462,2.98,463,2.826,471,2.339,481,1.771,489,1.85,490,1.444,498,3.534,612,2.239,686,3.534,881,1.96,882,1.697,999,1.697,1035,2.081,1080,3.35,1087,2.239,1359,1.628,1499,2.128,1832,2.361,2508,3.741,2517,4.241,2527,4.586,2544,3.824,2551,5.993,2552,3.342,2553,4.944,2554,5.558,2555,5.925,2556,4.279,2557,4.944,2558,4.279,2559,4.279,2560,4.279,2561,5.235,2562,4.279,2563,4.279,2564,4.944,2565,4.279,2566,4.279,2567,3.342,2568,3.342,2569,3.714,2570,3.714,2571,3.714,2572,3.064,2573,3.714,2574,3.714,2575,3.714,2576,3.714,2577,3.714,2578,4.944,2579,3.714,2580,3.342,2581,3.064,2582,3.714,2583,3.714,2584,3.714,2585,3.714,2586,3.714,2587,3.714,2588,3.714,2589,3.714,2590,3.714,2591,3.714,2592,3.714,2593,3.714,2594,3.714,2595,3.714,2596,3.714,2597,4.944,2598,3.714,2599,3.714,2600,3.714,2601,3.714,2602,3.714,2603,3.714,2604,3.714,2605,5.696,2606,5.696]],["title/classes/LookupTableData.html",[0,0.189,2561,2.812]],["body/classes/LookupTableData.html",[0,0.309,2,1.334,3,0.147,4,0.147,5,0.126,6,0.208,7,0.126,14,0.189,15,0.525,17,0.315,18,0.015,19,0.256,21,0.346,29,0.73,54,0.209,59,0.527,68,0.567,103,0.613,123,0.8,135,1.271,150,0.557,176,0.374,179,0.557,194,0.699,266,4.274,277,0.642,290,0.009,291,0.012,292,0.009,316,0.768,325,0.736,326,1.386,363,0.317,370,1.062,405,1.147,413,1.062,414,1.554,453,2.663,454,1.191,461,2.139,463,2.139,471,2.35,489,2.235,490,1.744,498,3.866,612,2.704,686,3.866,881,1.878,882,2.05,999,2.05,1035,2.35,1080,3.366,1087,2.704,1359,1.967,1499,2.57,1832,2.853,2508,3.758,2517,4.553,2527,5.016,2544,3.664,2551,5.725,2552,4.037,2553,4.486,2554,4.486,2555,4.486,2557,4.486,2561,5.505,2564,4.486,2567,4.037,2568,4.037,2569,6.08,2570,6.08,2571,6.08,2572,3.702,2573,4.486,2574,4.486,2575,4.486,2576,4.486,2577,4.486,2578,5.584,2579,4.486,2580,4.037,2581,3.702,2582,4.486,2583,4.486,2584,4.486,2585,4.486,2586,4.486,2587,4.486,2588,4.486,2589,4.486,2590,4.486,2591,4.486,2592,4.486,2593,4.486,2594,4.486,2595,4.486,2596,4.486,2597,5.584,2598,4.486,2599,4.486,2600,4.486,2601,4.486,2602,4.486,2603,4.486,2604,4.486,2607,5.168,2608,5.168,2609,5.168]],["title/classes/LookupTableEntry.html",[0,0.189,2517,2.439]],["body/classes/LookupTableEntry.html",[0,0.308,2,1.328,3,0.146,4,0.146,5,0.126,6,0.221,7,0.13,14,0.188,15,0.523,17,0.338,18,0.015,19,0.281,54,0.208,68,0.589,105,1.279,115,0.406,117,0.581,135,1.268,150,0.445,176,0.446,179,0.555,194,0.605,278,0.555,290,0.014,291,0.012,292,0.009,308,0.655,310,0.655,313,0.655,360,0.639,361,0.639,414,1.141,716,0.867,1003,1.279,1371,3.356,1796,4.546,1797,4.546,1860,3.985,1866,3.985,2167,3.684,2237,5.01,2240,5.881,2508,3.005,2509,6.083,2510,4.018,2511,4.018,2512,4.018,2514,4.465,2515,4.465,2517,4.77,2521,4.465,2522,5.568,2524,6.665,2527,5.241,2528,6.352,2529,5.568,2530,5.568,2531,5.568,2532,4.465,2533,4.465,2534,4.465,2535,4.465,2536,4.465,2537,4.465,2538,4.465,2539,5.568,2540,5.568,2541,5.568,2542,6.067,2543,4.465,2544,2.691,2545,4.465,2546,4.465,2547,4.465,2548,6.067,2549,4.465,2550,4.465,2610,6.414,2611,5.144,2612,5.144,2613,5.144,2614,5.144,2615,5.144,2616,5.144]],["title/classes/MappedField.html",[0,0.189,1551,1.557]],["body/classes/MappedField.html",[0,0.266,2,0.842,3,0.093,4,0.157,5,0.08,6,0.201,7,0.12,14,0.202,15,0.385,17,0.289,18,0.015,19,0.259,21,0.311,29,0.65,30,1.018,32,0.405,43,2.993,44,1.621,54,0.18,59,0.706,68,0.567,75,1.349,80,2.048,103,0.763,105,0.811,115,0.353,116,2.232,117,0.89,123,0.586,124,1.729,134,0.549,135,1.327,150,0.685,160,2.198,163,2.166,176,0.477,179,0.581,194,0.703,277,0.749,278,0.408,282,1.607,290,0.01,291,0.008,292,0.006,308,0.481,310,0.481,313,0.619,314,1.545,325,0.464,360,0.586,361,0.586,394,0.827,418,0.572,446,0.751,499,1.723,501,1.706,544,1.794,560,1.621,676,1.349,686,2.602,692,2.039,713,1.706,716,1.265,720,3.546,721,2.755,723,2.755,748,1.485,881,1.264,905,1.474,933,2.335,1003,1.601,1114,2.546,1165,2.025,1166,2.166,1201,1.41,1262,1.474,1329,1.905,1335,2.546,1345,3.683,1346,2.827,1347,2.546,1354,2.025,1359,1.794,1362,2.335,1366,1.905,1394,1.798,1426,2.546,1450,2.025,1462,3.133,1471,2.546,1476,3.683,1485,2.546,1551,3.248,1569,1.905,1597,1.799,1608,2.025,1639,2.395,1642,2.025,1711,1.474,1714,2.025,1716,3.837,1760,2.865,1786,1.905,1828,3.236,1829,1.799,1830,2.929,1936,2.546,1949,1.706,1959,3.236,2227,1.706,2228,1.706,2453,2.546,2456,2.025,2474,2.546,2485,2.546,2486,2.546,2617,2.546,2618,4.808,2619,5.269,2620,4.093,2621,4.715,2622,3.26,2623,3.26,2624,4.612,2625,3.26,2626,3.26,2627,3.26,2628,3.683,2629,3.26,2630,4.093,2631,3.26,2632,3.236,2633,2.546,2634,3.133,2635,2.83,2636,2.83,2637,2.83,2638,2.83,2639,2.83,2640,2.83,2641,2.83,2642,2.83,2643,2.83,2644,2.83,2645,3.377,2646,2.546,2647,3.683,2648,4.741,2649,2.83,2650,2.83,2651,2.83,2652,2.83,2653,2.83,2654,2.83,2655,2.83,2656,2.83,2657,2.83,2658,4.093,2659,2.83,2660,2.546,2661,2.546,2662,5.269,2663,2.83,2664,5.269,2665,2.83,2666,4.808,2667,2.83,2668,2.83,2669,2.83,2670,4.093,2671,4.093,2672,2.83,2673,4.808,2674,2.83,2675,2.83,2676,2.83,2677,4.093,2678,4.808,2679,4.808,2680,2.83,2681,2.83,2682,2.83,2683,2.83,2684,2.83,2685,2.546,2686,2.83,2687,2.83,2688,2.546,2689,4.808,2690,2.83,2691,2.83,2692,2.83,2693,4.808,2694,4.093,2695,2.83,2696,4.808,2697,4.808,2698,2.83,2699,2.83,2700,2.83,2701,2.83,2702,2.335,2703,2.83,2704,2.83,2705,2.83,2706,2.83,2707,4.808,2708,2.83,2709,2.83,2710,2.83,2711,4.327,2712,2.546,2713,2.546,2714,2.83,2715,4.093,2716,4.093,2717,2.83,2718,2.83,2719,2.83,2720,2.83,2721,2.83,2722,2.83,2723,2.83,2724,2.83,2725,4.093,2726,4.093,2727,3.683,2728,2.83,2729,2.83,2730,2.83,2731,4.093,2732,4.093,2733,2.546,2734,2.83,2735,2.83,2736,2.83,2737,2.83,2738,2.83,2739,2.83,2740,2.83,2741,2.546,2742,2.83,2743,2.83,2744,2.83,2745,2.83,2746,2.83,2747,2.83]],["title/classes/MappedFieldParsingData.html",[0,0.189,2624,2.812]],["body/classes/MappedFieldParsingData.html",[0,0.263,2,0.826,3,0.091,4,0.156,5,0.078,6,0.213,7,0.126,14,0.2,15,0.38,17,0.317,18,0.015,19,0.273,21,0.309,29,0.646,30,0.999,32,0.398,43,2.976,44,1.591,54,0.178,59,0.745,68,0.577,75,1.325,80,2.03,103,0.758,105,0.796,115,0.27,116,2.119,117,0.881,123,0.578,124,0.999,134,0.539,135,1.263,150,0.696,160,2.174,163,2.126,176,0.476,179,0.553,194,0.702,277,0.745,278,0.64,282,1.597,290,0.01,291,0.008,292,0.006,308,0.755,314,1.516,325,0.455,394,0.816,446,0.738,499,1.7,501,1.674,544,1.77,560,1.591,676,1.325,686,2.567,692,2.012,713,1.674,716,1.261,720,3.516,721,2.718,723,2.718,748,1.47,881,1.247,905,1.447,933,2.292,1003,1.589,1114,2.499,1165,1.988,1166,2.126,1201,1.384,1262,1.447,1329,1.869,1335,4.281,1345,3.634,1346,2.816,1347,2.499,1354,1.988,1359,1.77,1362,2.292,1366,1.869,1394,1.779,1426,2.499,1450,1.988,1462,3.091,1471,2.499,1476,3.634,1485,2.499,1551,3.23,1569,1.869,1597,1.766,1608,1.988,1639,2.37,1642,1.988,1711,1.447,1714,1.988,1716,3.761,1760,2.646,1786,1.869,1828,3.202,1829,1.766,1830,2.89,1936,2.499,1949,1.674,1959,1.869,2227,1.674,2228,1.674,2453,2.499,2456,1.988,2474,2.499,2485,2.499,2486,2.499,2617,2.499,2618,2.778,2619,2.778,2624,4.309,2628,2.499,2630,2.778,2632,3.202,2633,2.499,2634,3.091,2635,4.758,2636,4.758,2637,4.758,2638,4.758,2639,4.758,2640,4.758,2641,4.758,2642,4.758,2643,4.758,2644,4.758,2645,3.332,2646,2.499,2647,3.634,2648,4.7,2649,2.778,2650,2.778,2651,2.778,2652,2.778,2653,2.778,2654,2.778,2655,2.778,2656,2.778,2657,2.778,2658,4.038,2659,2.778,2660,2.499,2661,2.499,2662,5.223,2663,2.778,2664,5.223,2665,2.778,2666,4.758,2667,2.778,2668,2.778,2669,2.778,2670,4.038,2671,4.038,2672,2.778,2673,4.758,2674,2.778,2675,2.778,2676,2.778,2677,4.038,2678,4.758,2679,4.758,2680,2.778,2681,2.778,2682,2.778,2683,2.778,2684,2.778,2685,2.499,2686,2.778,2687,2.778,2688,2.499,2689,4.758,2690,2.778,2691,2.778,2692,2.778,2693,4.758,2694,4.038,2695,2.778,2696,4.758,2697,4.758,2698,2.778,2699,2.778,2700,2.778,2701,2.778,2702,2.292,2703,2.778,2704,2.778,2705,2.778,2706,2.778,2707,4.758,2708,2.778,2709,2.778,2710,2.778,2711,4.281,2712,2.499,2713,2.499,2714,2.778,2715,4.038,2716,4.038,2717,2.778,2718,2.778,2719,2.778,2720,2.778,2721,2.778,2722,2.778,2723,2.778,2724,2.778,2725,4.038,2726,4.038,2727,3.634,2728,2.778,2729,2.778,2730,2.778,2731,4.038,2732,4.038,2733,2.499,2734,2.778,2735,2.778,2736,2.778,2737,2.778,2738,2.778,2739,2.778,2740,2.778,2741,2.499,2742,2.778,2743,2.778,2744,2.778,2745,2.778,2746,2.778,2747,2.778,2748,3.2,2749,3.2,2750,3.2,2751,3.2,2752,3.2,2753,3.2,2754,3.2,2755,3.2,2756,3.2,2757,3.2,2758,3.2]],["title/classes/MappingDefinition.html",[0,0.189,28,2.167]],["body/classes/MappingDefinition.html",[0,0.156,2,0.84,3,0.092,4,0.092,5,0.08,6,0.23,7,0.135,9,1.407,14,0.202,15,0.384,17,0.361,18,0.015,19,0.295,21,0.318,28,2.599,29,0.456,30,1.016,31,1.867,32,0.754,54,0.106,59,0.332,68,0.583,75,1.347,80,1.589,103,0.558,105,1.376,114,2.463,115,0.462,116,1.822,117,0.828,123,0.949,133,0.966,134,1.194,138,2.021,150,0.669,160,2.406,176,0.412,179,0.65,194,0.669,259,3.543,277,0.699,278,0.613,290,0.006,291,0.008,292,0.006,308,0.723,310,0.481,313,0.804,325,0.463,360,0.967,361,0.967,394,0.571,418,0.971,488,1.618,489,1.407,500,1.702,716,0.932,881,2.095,905,1.472,1003,1.508,1150,3.678,1163,1.702,1201,1.407,1336,4.322,1354,3.767,1359,2.106,1371,1.702,1551,2.195,1552,1.702,1569,1.901,1711,1.472,1716,1.702,1760,1.347,1770,1.702,1772,1.702,1814,2.925,1949,1.702,1959,1.901,2201,4.322,2227,1.702,2228,1.702,2454,3.963,2456,4.298,2477,4.087,2508,4.519,2511,3.678,2512,4.737,2544,3.367,2567,2.541,2568,2.541,2580,3.678,2581,3.372,2633,2.541,2634,2.162,2660,2.541,2661,2.541,2711,2.541,2759,7.015,2760,2.541,2761,5.533,2762,6.435,2763,5.533,2764,5.533,2765,4.803,2766,4.708,2767,6.064,2768,4.708,2769,4.708,2770,4.708,2771,4.708,2772,4.708,2773,4.708,2774,6.064,2775,4.708,2776,4.708,2777,4.708,2778,4.708,2779,4.087,2780,4.708,2781,4.708,2782,6.064,2783,4.708,2784,4.708,2785,4.708,2786,4.708,2787,2.824,2788,2.824,2789,2.824,2790,3.254,2791,3.254,2792,4.708,2793,3.254,2794,2.824,2795,4.708,2796,3.254,2797,3.254,2798,3.254,2799,3.254,2800,3.254,2801,3.254,2802,3.254,2803,3.254,2804,3.254,2805,2.162,2806,2.33,2807,2.824,2808,4.708,2809,3.254,2810,3.678,2811,4.708,2812,3.254,2813,4.708,2814,3.254,2815,3.254,2816,3.254,2817,3.254,2818,3.254,2819,6.064,2820,6.064,2821,3.254,2822,3.254,2823,3.254,2824,3.254,2825,3.254,2826,3.254,2827,3.254,2828,3.254,2829,3.254,2830,4.708,2831,3.254,2832,4.708,2833,3.254,2834,3.254,2835,3.254,2836,3.254,2837,3.254,2838,4.708,2839,3.254,2840,3.254,2841,3.254,2842,2.021,2843,4.708,2844,3.254,2845,3.254,2846,3.254,2847,6.064,2848,3.254,2849,3.254,2850,5.533,2851,5.533,2852,5.533,2853,3.254,2854,4.708,2855,3.254,2856,3.254,2857,3.254,2858,3.254,2859,4.708,2860,3.254,2861,3.254,2862,3.254,2863,3.254,2864,3.254,2865,3.254,2866,3.254,2867,3.254,2868,3.254,2869,3.254,2870,3.254,2871,3.254,2872,3.254,2873,3.254,2874,3.254,2875,4.708,2876,4.737,2877,3.254,2878,4.708,2879,3.254,2880,3.254,2881,2.824,2882,3.254,2883,3.254,2884,3.254,2885,2.824,2886,3.254,2887,3.254,2888,3.254,2889,3.254,2890,2.824,2891,3.254,2892,3.254,2893,3.254,2894,5.264,2895,3.254,2896,3.254,2897,3.254,2898,2.824,2899,3.254,2900,4.708,2901,3.254,2902,3.254]],["title/components/MappingDetailComponent.html",[363,0.193,416,0.838]],["body/components/MappingDetailComponent.html",[0,0.267,3,0.117,4,0.117,5,0.101,6,0.219,7,0.131,14,0.151,15,0.454,17,0.325,18,0.015,19,0.278,21,0.338,29,0.783,32,0.692,54,0.134,59,0.422,68,0.4,115,0.408,123,0.782,133,0.942,134,1.06,137,2.055,176,0.24,179,0.651,194,0.626,251,0.882,252,0.882,277,0.729,281,0.588,290,0.007,291,0.01,292,0.007,310,0.568,313,0.717,316,0.614,324,1.45,325,0.588,326,1.492,360,0.692,361,0.692,363,0.31,364,0.882,365,1.332,366,1.027,367,1.027,369,0.952,370,1.698,371,1.143,372,1.027,374,1.332,375,0.917,376,1.383,377,1.332,378,0.882,379,1.673,380,1.027,381,1.027,382,0.917,383,1.027,384,0.882,385,1.027,386,1.437,387,1.383,388,1.027,389,0.882,390,1.747,391,0.917,392,1.027,393,0.882,394,0.976,395,0.917,396,1.027,397,0.882,398,1.027,399,0.882,400,1.027,401,0.849,402,1.564,403,0.849,404,0.989,405,1.493,406,1.027,407,0.917,408,1.027,409,0.882,410,0.882,411,0.849,412,1.027,413,0.849,414,1.234,415,1.027,416,1.5,417,0.882,418,0.725,419,1.027,420,0.882,421,1.027,422,0.882,423,1.027,424,0.882,425,0.882,426,1.383,427,0.882,428,0.849,429,1.027,430,1.579,431,1.027,432,0.882,433,1.282,434,1.027,435,0.816,436,1.383,437,1.545,438,0.882,439,1.383,440,0.882,441,0.882,442,0.882,443,0.882,444,1.027,445,0.882,446,0.952,447,0.989,448,0.849,449,0.989,450,1.027,454,1.282,469,1.29,481,1.71,487,1.868,489,1.786,490,1.394,508,2.033,515,3.129,517,1.45,594,3.291,598,3.521,603,3.472,612,2.911,855,3.586,869,3.586,881,1.687,882,1.639,1010,2.959,1011,4.346,1012,4.346,1033,3.908,1042,3.586,1073,3.071,1079,3.586,1082,3.586,1170,2.959,1172,3.696,1173,3.696,1178,3.696,1179,2.745,1180,4.471,1182,3.696,1184,3.586,1191,2.745,1192,3.696,1200,3.696,1201,2.72,1203,2.959,1204,2.745,1205,2.959,1216,2.161,1241,3.675,1279,4.471,1307,2.959,2454,2.959,2779,4.829,2903,3.829,2904,6.291,2905,6.291,2906,7.236,2907,4.829,2908,3.586,2909,3.586,2910,4.131,2911,5.563,2912,4.131,2913,5.563,2914,4.131,2915,4.131,2916,5.563,2917,4.131,2918,4.131,2919,4.131,2920,4.131,2921,4.131,2922,3.586,2923,4.131,2924,4.131,2925,4.131,2926,4.131,2927,5.563,2928,4.131,2929,4.131,2930,4.131,2931,4.131,2932,4.131,2933,4.131,2934,4.131,2935,4.131,2936,4.131,2937,4.131,2938,5.563,2939,5.563,2940,5.563,2941,5.563,2942,5.563,2943,5.563]],["title/components/MappingFieldActionArgumentComponent.html",[363,0.193,417,0.838]],["body/components/MappingFieldActionArgumentComponent.html",[0,0.231,3,0.095,4,0.095,5,0.082,6,0.221,7,0.131,9,1.451,14,0.238,15,0.393,17,0.345,18,0.015,19,0.282,21,0.293,29,0.748,32,0.598,54,0.109,59,0.575,68,0.552,77,3.822,80,2.198,103,0.571,115,0.423,123,0.7,133,0.733,134,0.949,150,0.564,176,0.429,179,0.618,194,0.618,251,0.717,252,0.717,276,3.449,277,0.751,278,0.618,281,0.478,282,1.71,284,4.087,290,0.006,291,0.009,292,0.006,308,0.575,310,0.491,313,0.729,316,0.499,325,0.478,341,2.783,360,0.843,361,0.843,363,0.321,364,0.717,365,1.153,366,0.834,367,0.834,369,0.774,370,1.676,371,0.989,372,0.834,374,1.153,375,0.745,376,1.197,377,1.153,378,0.717,379,1.53,380,0.834,381,0.834,382,0.745,383,0.834,384,0.717,385,0.834,386,0.717,387,0.834,388,0.834,389,0.717,390,1.619,391,0.745,392,0.834,393,0.717,394,0.988,395,0.745,396,0.834,397,0.717,398,0.834,399,0.717,400,0.834,401,0.69,402,1.4,403,0.69,404,0.803,405,1.249,406,0.834,407,0.745,408,0.834,409,0.717,410,0.717,411,0.69,412,0.834,413,0.69,414,0.745,415,0.834,416,0.717,417,1.314,418,1.432,419,0.834,420,0.717,421,0.834,422,0.717,423,0.834,424,0.717,425,0.717,426,1.197,427,0.717,428,0.69,429,0.834,430,0.717,431,0.834,432,0.717,433,1.418,434,0.834,435,0.663,436,1.197,437,0.69,438,0.717,439,1.197,440,0.717,441,0.717,442,0.717,443,0.717,444,0.834,445,0.717,446,0.774,447,0.803,448,0.69,449,0.803,450,0.834,454,1.11,469,1.921,499,1.759,501,2.519,508,1.759,517,1.755,523,4.639,542,4.406,544,1.833,676,1.993,692,2.932,716,1.037,748,1.979,823,3.449,882,1.332,886,3.199,905,1.518,967,3.761,969,3.449,976,2.395,1035,1.759,1073,1.852,1100,4.18,1126,3.212,1204,2.23,1380,2.622,1551,2.69,1599,2.813,1628,2.991,1631,4.087,1711,2.783,1745,1.852,1760,2.891,1770,3.219,1787,3.806,1788,3.594,1804,2.658,1819,2.085,1826,4.767,1847,2.813,1948,2.404,1949,1.756,1959,2.813,2227,1.756,2228,1.756,2903,3.864,2944,2.913,2945,4.815,2946,5.631,2947,4.815,2948,4.815,2949,6.152,2950,4.815,2951,4.815,2952,4.18,2953,5.34,2954,4.815,2955,7.144,2956,6.983,2957,7.144,2958,3.356,2959,3.356,2960,3.356,2961,3.356,2962,3.356,2963,3.356,2964,4.815,2965,3.356,2966,4.815,2967,3.356,2968,6.152,2969,3.761,2970,6.061,2971,4.18,2972,3.356,2973,4.18,2974,4.815,2975,3.356,2976,4.815,2977,3.356,2978,4.815,2979,4.815,2980,4.815,2981,4.815,2982,3.761,2983,4.18,2984,4.815,2985,3.356,2986,3.449,2987,4.18,2988,4.18,2989,4.18,2990,4.815,2991,3.356,2992,4.815,2993,3.356,2994,4.815,2995,4.815,2996,5.631,2997,4.18,2998,5.631,2999,3.356,3000,2.913,3001,4.815,3002,2.991,3003,3.356,3004,4.815,3005,3.356,3006,3.356,3007,2.913,3008,3.356,3009,3.356,3010,3.356,3011,2.913,3012,3.356,3013,3.356,3014,3.356,3015,3.356,3016,2.913,3017,3.356,3018,3.356,3019,3.356,3020,3.356,3021,2.913,3022,3.356,3023,2.913,3024,2.913,3025,4.815,3026,2.913,3027,3.356,3028,2.913,3029,3.356,3030,4.815,3031,3.356,3032,3.356,3033,3.356,3034,3.356,3035,3.356,3036,4.815,3037,6.152,3038,4.815]],["title/components/MappingFieldActionComponent.html",[363,0.193,420,0.838]],["body/components/MappingFieldActionComponent.html",[0,0.262,3,0.114,4,0.114,5,0.098,6,0.223,7,0.133,14,0.262,17,0.336,18,0.015,19,0.285,21,0.313,29,0.776,32,0.678,54,0.13,68,0.516,77,3.851,80,2.245,115,0.434,116,1.863,117,0.829,123,0.771,134,1.045,137,2.714,176,0.386,179,0.537,194,0.602,251,0.857,252,0.857,253,2.216,277,0.756,281,0.571,282,1.307,290,0.007,291,0.01,292,0.007,308,0.41,310,0.557,313,0.762,316,0.597,325,0.571,360,0.865,361,0.865,363,0.305,364,0.857,365,1.307,366,0.998,367,0.998,369,0.925,370,1.696,371,1.121,372,0.998,374,1.307,375,0.891,376,1.357,377,1.307,378,0.857,379,1.654,380,0.998,381,0.998,382,0.891,383,0.998,384,0.857,385,0.998,386,0.857,387,0.998,388,0.998,389,0.857,390,1.73,391,0.891,392,0.998,393,0.857,394,1.088,395,0.891,396,0.998,397,0.857,398,0.998,399,0.857,400,0.998,401,0.825,402,1.541,403,0.825,404,0.961,405,1.376,406,0.998,407,0.891,408,0.998,409,0.857,410,0.857,411,0.825,412,0.998,413,0.825,414,0.891,415,0.998,416,0.857,417,0.857,418,1.397,419,0.998,420,1.421,421,0.998,422,0.857,423,0.998,424,0.857,425,0.857,426,1.357,427,0.857,428,0.825,429,0.998,430,0.857,431,0.998,432,0.857,433,1.533,434,0.998,435,0.794,436,1.357,437,0.825,438,0.857,439,1.357,440,0.857,441,0.857,442,0.857,443,0.857,444,0.998,445,0.857,446,0.925,447,0.961,448,0.825,449,0.961,450,0.998,454,1.258,469,1.704,508,1.994,517,1.603,523,4.119,630,3.012,716,1.172,748,1.662,881,1.662,882,1.593,905,1.816,967,3.136,969,2.876,1035,1.467,1067,2.346,1126,2.586,1201,2.36,1346,1.528,1551,2.847,1711,2.468,1760,3.039,1770,2.101,1772,3.48,1787,2.101,1788,3.189,1795,4.119,1804,3.012,1814,2.494,1818,2.668,1819,2.494,1826,3.39,1948,2.876,1949,2.101,1959,3.189,2227,2.101,2228,2.101,2620,4.737,2628,4.263,2903,3.899,2952,4.737,2953,5.774,2969,4.263,2970,5.382,2971,4.737,2986,2.876,2987,3.485,2988,3.485,2989,3.485,3000,3.485,3002,2.494,3023,3.485,3024,3.485,3026,3.485,3028,3.485,3039,3.485,3040,5.457,3041,6.652,3042,5.457,3043,5.457,3044,6.652,3045,5.457,3046,4.015,3047,4.015,3048,4.015,3049,4.015,3050,4.015,3051,5.457,3052,4.015,3053,4.015,3054,4.015,3055,4.015,3056,4.015,3057,4.015,3058,4.015,3059,4.015,3060,5.457,3061,4.015,3062,5.457,3063,4.015,3064,4.737,3065,4.737,3066,4.015,3067,2.876,3068,4.015,3069,5.457,3070,4.015,3071,4.015,3072,4.015,3073,4.015,3074,4.015,3075,4.015,3076,4.015,3077,3.485,3078,4.015,3079,4.015,3080,4.015,3081,4.015,3082,4.015,3083,4.015,3084,5.457]],["title/components/MappingFieldContainerComponent.html",[363,0.193,422,0.838]],["body/components/MappingFieldContainerComponent.html",[0,0.213,3,0.085,4,0.166,5,0.073,6,0.228,7,0.134,14,0.109,15,0.361,17,0.345,18,0.015,19,0.292,21,0.311,29,0.748,30,0.935,31,1.01,32,0.551,54,0.097,59,0.706,68,0.546,75,1.834,103,0.838,105,1.547,115,0.437,116,1.584,117,0.824,123,0.655,133,0.987,134,0.889,150,0.612,176,0.444,179,0.661,194,0.583,195,1.566,251,0.639,252,0.639,277,0.754,278,0.599,281,0.426,282,0.717,290,0.005,291,0.008,292,0.005,308,0.665,310,0.452,313,0.784,316,0.445,323,3.081,324,1.051,325,0.426,326,1.188,360,0.878,361,0.878,363,0.26,364,0.639,365,1.06,366,0.744,367,0.744,369,0.69,370,1.662,371,0.91,372,0.744,374,1.06,375,0.664,376,1.101,377,1.06,378,0.639,379,1.449,380,0.744,381,0.744,382,0.664,383,0.744,384,0.639,385,0.744,386,0.639,387,0.744,388,0.744,389,0.639,390,1.547,391,0.664,392,0.744,393,0.639,394,0.925,395,0.664,396,0.744,397,0.639,398,0.744,399,0.639,400,0.744,401,0.615,402,1.311,403,0.615,404,0.717,405,1.17,406,0.744,407,0.664,408,0.744,409,0.639,410,0.639,411,0.615,412,0.744,413,0.615,414,0.664,415,0.744,416,0.639,417,0.639,418,0.525,419,0.744,420,0.639,421,0.744,422,1.245,423,0.744,424,0.639,425,0.639,426,1.101,427,0.639,428,0.615,429,0.744,430,0.639,431,0.744,432,0.639,433,1.021,434,0.744,435,0.592,436,1.101,437,0.615,438,0.639,439,1.101,440,0.639,441,0.639,442,0.639,443,0.639,444,0.744,445,0.639,446,0.69,447,0.717,448,0.615,449,0.717,450,0.744,454,1.021,469,2.207,488,1.489,489,1.294,508,1.619,515,2.623,517,1.434,594,2.759,598,3.049,630,2.445,650,4.577,700,2.598,716,1.098,734,3.845,735,2.598,736,2.598,748,1.188,822,1.989,881,1.563,882,1.188,905,1.354,929,3.845,931,3.845,1003,0.744,1015,4.577,1016,3.845,1017,3.845,1019,4.577,1029,3.845,1031,3.845,1044,3.845,1046,3.845,1047,5.059,1051,3.845,1078,3.845,1092,2.598,1097,4.577,1110,3.845,1111,2.598,1112,2.598,1113,2.598,1116,4.577,1117,4.119,1118,3.777,1132,1.989,1213,2.598,1216,1.566,1321,4.552,1346,2.007,1359,1.139,1394,1.891,1447,4.552,1551,2.928,1599,3.405,1639,1.915,1674,1.139,1716,1.566,1741,1.749,1803,2.943,2041,4.577,2047,3.845,2052,3.845,2054,3.872,2073,2.598,2074,2.598,2110,3.845,2113,2.598,2114,2.598,2116,2.598,2117,2.598,2163,2.338,2227,1.566,2228,1.566,2305,2.598,2454,2.144,2645,2.144,2702,3.173,2805,1.989,2806,2.144,2842,1.859,2903,3.982,2922,2.598,3002,1.859,3021,2.598,3067,4.956,3085,2.598,3086,4.43,3087,4.43,3088,5.273,3089,5.273,3090,4.119,3091,4.577,3092,5.828,3093,5.828,3094,5.828,3095,5.828,3096,5.828,3097,5.828,3098,5.828,3099,3.845,3100,3.845,3101,4.43,3102,4.43,3103,2.993,3104,2.993,3105,2.993,3106,2.993,3107,2.993,3108,2.993,3109,2.993,3110,5.828,3111,2.993,3112,2.993,3113,4.119,3114,4.43,3115,4.43,3116,4.43,3117,4.43,3118,2.993,3119,2.993,3120,2.993,3121,4.43,3122,2.993,3123,2.993,3124,2.993,3125,2.993,3126,2.993,3127,4.43,3128,2.993,3129,5.828,3130,2.993,3131,4.43,3132,2.993,3133,2.993,3134,2.993,3135,2.993,3136,2.993,3137,2.993,3138,2.993,3139,2.338,3140,2.993,3141,2.993,3142,4.43,3143,4.43,3144,4.43,3145,5.273,3146,2.993,3147,4.43,3148,2.993,3149,2.993,3150,2.993,3151,2.338,3152,2.993,3153,2.993,3154,2.993,3155,4.43,3156,4.43,3157,2.993,3158,2.993,3159,2.993,3160,2.993,3161,2.993,3162,2.993,3163,5.273,3164,2.598,3165,2.993,3166,2.993,3167,2.598,3168,2.993,3169,2.993,3170,3.845,3171,2.993,3172,3.845,3173,4.43,3174,2.993,3175,5.273,3176,5.273,3177,2.338,3178,2.338,3179,2.144,3180,3.46,3181,2.993,3182,2.993,3183,2.338,3184,2.993,3185,2.993,3186,2.993,3187,2.993,3188,2.993,3189,2.993,3190,2.993,3191,2.598,3192,2.598]],["title/components/MappingFieldDetailComponent.html",[363,0.193,424,0.838]],["body/components/MappingFieldDetailComponent.html",[0,0.239,3,0.1,4,0.1,5,0.086,6,0.224,7,0.133,10,3.837,14,0.273,15,0.406,17,0.325,18,0.015,19,0.29,21,0.282,29,0.757,32,0.618,54,0.114,59,0.359,68,0.52,103,0.59,115,0.385,116,1.735,117,0.799,123,0.718,133,0.957,134,0.973,135,0.695,137,2.474,150,0.669,176,0.442,179,0.636,194,0.574,251,0.75,252,0.75,277,0.753,278,0.636,281,0.5,282,1.191,290,0.006,291,0.009,292,0.006,310,0.508,313,0.77,316,0.522,325,0.5,326,1.334,360,0.618,361,0.618,363,0.285,364,0.75,365,1.191,366,0.874,367,0.874,369,0.81,370,1.682,371,1.022,372,0.874,374,1.191,375,0.78,376,1.237,377,1.191,378,0.75,379,1.562,380,0.874,381,0.874,382,0.78,383,0.874,384,0.75,385,0.874,386,0.75,387,0.874,388,0.874,389,0.75,390,1.648,391,0.78,392,0.874,393,0.75,394,0.873,395,0.78,396,0.874,397,0.75,398,0.874,399,0.75,400,0.874,401,0.722,402,1.436,403,0.722,404,0.841,405,1.282,406,0.874,407,0.78,408,0.874,409,0.75,410,0.75,411,0.722,412,0.874,413,0.722,414,0.78,415,0.874,416,0.75,417,0.75,418,1.208,419,0.874,420,0.75,421,0.874,422,0.75,423,0.874,424,1.341,425,0.75,426,1.237,427,0.75,428,0.722,429,0.874,430,0.75,431,0.874,432,0.75,433,1.147,434,0.874,435,0.695,436,1.237,437,0.722,438,0.75,439,1.237,440,0.75,441,0.75,442,0.75,443,0.75,444,0.874,445,0.75,446,0.81,447,0.841,448,0.722,449,0.841,450,0.874,454,1.147,469,1.553,498,1.939,499,1.818,508,1.818,517,1.528,520,3.67,594,3.022,598,3.286,692,2.151,716,1.117,809,2.335,881,1.549,882,1.394,886,3.305,939,3.305,1003,0.874,1010,2.517,1011,3.886,1012,3.886,1035,2.11,1041,3.05,1084,3.05,1127,2.335,1346,1.893,1539,3.305,1551,3.131,1639,3.18,1671,3.374,1711,3.113,1716,1.838,1760,2.391,1804,3.659,1948,2.517,1949,1.838,1959,2.053,2122,3.05,2123,3.05,2125,3.05,2126,3.05,2215,4.319,2572,2.517,2645,3.563,2702,3.563,2741,4.512,2881,4.319,2894,4.319,2898,3.05,2903,3.925,2908,3.05,2909,3.05,3002,3.091,3065,3.05,3067,2.517,3099,4.319,3164,3.05,3170,3.05,3191,3.05,3192,3.05,3193,6.629,3194,5.776,3195,6.281,3196,6.281,3197,5.452,3198,5.975,3199,5.452,3200,5.452,3201,4.975,3202,6.281,3203,6.281,3204,3.514,3205,3.514,3206,3.514,3207,3.514,3208,3.514,3209,3.514,3210,3.514,3211,3.514,3212,3.514,3213,3.514,3214,4.975,3215,3.514,3216,4.975,3217,4.975,3218,3.886,3219,5.776,3220,4.137,3221,4.319,3222,4.975,3223,4.975,3224,4.975,3225,4.975,3226,4.975,3227,3.514,3228,3.514,3229,4.975,3230,4.975,3231,4.975,3232,3.514,3233,3.514,3234,3.514,3235,5.452,3236,5.014,3237,3.514,3238,5.776,3239,4.319,3240,3.514,3241,3.514,3242,6.281,3243,3.514,3244,3.514,3245,5.776,3246,3.514,3247,3.514,3248,3.514,3249,3.514,3250,3.514,3251,3.514,3252,3.514,3253,3.05,3254,3.05,3255,3.05,3256,3.514,3257,4.975,3258,4.975,3259,3.514]],["title/components/MappingListComponent.html",[363,0.193,425,0.838]],["body/components/MappingListComponent.html",[0,0.246,3,0.104,4,0.104,5,0.09,6,0.225,7,0.134,14,0.246,15,0.418,17,0.342,18,0.015,19,0.289,21,0.303,29,0.775,30,1.143,31,1.236,32,0.637,54,0.119,59,0.653,68,0.566,103,0.7,115,0.431,116,1.775,117,0.838,123,0.734,133,0.966,134,0.995,150,0.604,160,2.671,176,0.455,179,0.604,194,0.604,251,0.782,252,0.782,277,0.703,278,0.511,281,0.521,290,0.007,291,0.009,292,0.011,308,0.603,310,0.523,313,0.789,316,0.544,325,0.521,360,0.867,361,0.867,363,0.291,364,0.782,365,1.226,366,0.911,367,0.911,369,0.844,370,1.686,371,1.052,372,0.911,374,1.226,375,0.813,376,1.273,377,1.226,378,0.782,379,1.59,380,0.911,381,0.911,382,0.813,383,0.911,384,0.782,385,0.911,386,0.782,387,0.911,388,0.911,389,0.782,390,1.674,391,0.813,392,0.911,393,0.782,394,0.899,395,0.813,396,0.911,397,0.782,398,0.911,399,0.782,400,0.911,401,0.753,402,1.469,403,0.753,404,0.877,405,1.311,406,0.911,407,0.813,408,0.911,409,0.782,410,0.782,411,0.753,412,0.911,413,0.753,414,0.813,415,0.911,416,0.782,417,0.782,418,0.643,419,0.911,420,0.782,421,0.911,422,0.782,423,0.911,424,0.782,425,1.366,426,1.273,427,0.782,428,1.214,429,0.911,430,0.782,431,0.911,432,0.782,433,1.181,434,0.911,435,0.724,436,1.273,437,0.753,438,0.782,439,1.273,440,0.782,441,0.782,442,0.782,443,0.782,444,0.911,445,0.782,446,0.844,447,0.877,448,0.753,449,0.877,450,0.911,454,1.181,488,1.821,489,1.584,508,1.872,517,1.181,520,2.993,699,2.275,716,0.617,748,1.584,881,2.142,882,1.453,949,2.861,951,2.861,1003,0.911,1145,5.129,1165,2.275,1216,2.68,1359,1.394,1551,2.538,1674,1.394,1745,2.021,2054,2.433,2648,2.861,2805,3.403,2806,3.669,2903,3.945,2907,4.446,3090,5.259,3113,5.259,3180,5.593,3260,2.861,3261,4.446,3262,5.127,3263,5.127,3264,5.122,3265,5.553,3266,5.122,3267,5.122,3268,6.397,3269,6.397,3270,5.553,3271,5.553,3272,5.122,3273,5.553,3274,5.553,3275,3.662,3276,5.122,3277,3.662,3278,3.179,3279,5.122,3280,3.662,3281,5.122,3282,3.662,3283,3.662,3284,3.662,3285,3.662,3286,3.662,3287,5.122,3288,3.662,3289,4.446,3290,3.662,3291,3.662,3292,5.122,3293,3.662,3294,3.662,3295,3.662,3296,3.179,3297,3.179,3298,6.528,3299,5.127,3300,3.179,3301,2.861,3302,3.662,3303,4.446,3304,4.446,3305,5.127,3306,5.122,3307,3.662,3308,3.179,3309,3.179,3310,2.623,3311,3.179,3312,3.179,3313,5.122,3314,5.907,3315,3.662,3316,3.662,3317,3.662,3318,3.662,3319,3.662,3320,3.662,3321,5.122]],["title/components/MappingListFieldComponent.html",[363,0.193,427,0.838]],["body/components/MappingListFieldComponent.html",[0,0.286,3,0.13,4,0.13,5,0.112,6,0.221,7,0.133,14,0.168,17,0.315,18,0.015,19,0.281,21,0.298,29,0.773,32,0.741,54,0.149,59,0.468,68,0.504,103,0.707,115,0.385,116,1.99,117,0.842,123,0.823,134,1.116,150,0.666,176,0.441,251,0.979,252,0.979,277,0.719,281,0.653,290,0.008,291,0.011,292,0.008,310,0.608,313,0.716,316,0.682,325,0.653,363,0.326,364,0.979,365,1.427,366,1.14,367,1.14,369,1.057,370,1.708,371,1.225,372,1.14,374,1.427,375,1.017,376,1.482,377,1.427,378,0.979,379,1.744,380,1.14,381,1.14,382,1.017,383,1.14,384,0.979,385,1.14,386,0.979,387,1.14,388,1.14,389,0.979,390,1.808,391,1.017,392,1.14,393,0.979,394,1.046,395,1.017,396,1.14,397,0.979,398,1.14,399,0.979,400,1.14,401,0.942,402,1.647,403,0.942,404,1.098,405,1.47,406,1.14,407,1.017,408,1.14,409,0.979,410,0.979,411,0.942,412,1.14,413,0.942,414,1.017,415,1.14,416,0.979,417,0.979,418,0.805,419,1.14,420,0.979,421,1.14,422,0.979,423,1.14,424,0.979,425,0.979,426,1.482,427,1.498,428,1.649,429,1.14,430,0.979,431,1.14,432,0.979,433,1.374,434,1.14,435,0.906,436,1.482,437,0.942,438,0.979,439,1.482,440,0.979,441,0.979,442,0.979,443,0.979,444,1.14,445,0.979,446,1.057,447,1.098,448,0.942,449,1.098,450,1.14,454,1.374,498,2.531,508,2.178,517,1.676,520,4.098,716,1.005,882,1.819,1127,3.046,1551,2.956,2903,3.867,3067,3.284,3197,6.088,3198,6.677,3199,6.469,3200,6.088,3235,5.75,3236,5.75,3239,5.175,3253,3.98,3254,3.98,3255,3.98,3322,3.98,3323,5.961,3324,6.624,3325,4.585,3326,4.585,3327,4.585,3328,4.585,3329,4.585,3330,4.585,3331,4.585,3332,4.585,3333,4.585]],["title/components/MappingSelectionComponent.html",[363,0.193,430,0.838]],["body/components/MappingSelectionComponent.html",[0,0.266,3,0.117,4,0.178,5,0.1,6,0.225,7,0.134,14,0.245,15,0.452,17,0.338,18,0.015,19,0.288,21,0.325,29,0.773,32,0.689,54,0.133,59,0.685,68,0.504,75,2.903,103,0.796,115,0.407,117,0.792,123,0.78,133,0.94,134,1.057,135,1.095,150,0.607,160,2.489,176,0.407,179,0.48,194,0.607,251,0.877,252,0.877,277,0.711,278,0.48,281,0.585,290,0.007,291,0.01,292,0.007,308,0.566,310,0.566,313,0.754,316,0.611,325,0.585,326,1.486,360,0.689,361,0.689,363,0.309,364,0.877,365,1.327,366,1.021,367,1.021,369,0.947,370,1.698,371,1.139,372,1.021,374,1.327,375,0.911,376,1.378,377,1.327,378,0.877,379,1.669,380,1.021,381,1.021,382,0.911,383,1.021,384,0.877,385,1.021,386,0.877,387,1.021,388,1.021,389,0.877,390,1.743,391,0.911,392,1.021,393,0.877,394,0.973,395,0.911,396,1.021,397,0.877,398,1.021,399,0.877,400,1.021,401,0.844,402,1.56,403,0.844,404,0.983,405,1.49,406,1.021,407,0.911,408,1.021,409,0.877,410,0.877,411,0.844,412,1.021,413,0.844,414,0.911,415,1.021,416,0.877,417,0.877,418,0.721,419,1.021,420,0.877,421,1.021,422,0.877,423,1.021,424,0.877,425,0.877,426,1.378,427,0.877,428,0.844,429,1.021,430,1.543,431,1.021,432,1.642,433,1.616,434,1.021,435,0.812,436,1.378,437,1.38,438,0.877,439,1.378,440,0.877,441,0.877,442,0.877,443,0.877,444,1.021,445,0.877,446,0.947,447,0.983,448,0.844,449,0.983,450,1.021,453,2.597,454,1.277,461,2.78,463,2.78,471,2.292,481,1.7,489,1.776,490,1.386,612,3.513,748,1.101,870,3.566,881,1.88,882,1.63,999,1.63,1003,1.669,1008,3.209,1033,3.897,1080,3.282,1087,2.149,1148,5.445,1170,2.942,1394,1.799,1639,2.397,1674,1.563,2876,4.329,2903,3.934,3100,4.811,3334,3.209,3335,4.811,3336,6.273,3337,6.273,3338,5.829,3339,4.811,3340,6.715,3341,6.715,3342,4.108,3343,4.811,3344,5.829,3345,4.108,3346,4.108,3347,4.108,3348,4.108,3349,4.108,3350,5.542,3351,4.108,3352,3.566,3353,3.566,3354,3.566,3355,5.542,3356,4.108,3357,4.108,3358,4.108,3359,4.108,3360,4.108,3361,4.108,3362,4.108,3363,5.542,3364,4.108,3365,3.566,3366,4.811,3367,3.566,3368,4.108,3369,4.108,3370,4.108,3371,6.273,3372,4.108,3373,5.542,3374,6.715]],["title/components/MappingSelectionSectionComponent.html",[363,0.193,432,0.838]],["body/components/MappingSelectionSectionComponent.html",[0,0.269,3,0.118,4,0.159,5,0.102,6,0.223,7,0.133,14,0.247,17,0.333,18,0.015,19,0.284,21,0.251,29,0.788,32,0.695,54,0.135,59,0.787,68,0.549,75,3.002,103,0.8,115,0.421,116,1.679,117,0.819,150,0.36,176,0.409,179,0.36,194,0.484,251,0.888,252,0.888,277,0.69,278,0.546,281,0.592,290,0.007,291,0.01,292,0.007,308,0.644,310,0.57,313,0.689,316,0.618,360,0.785,361,0.785,363,0.347,364,0.888,365,1.338,366,1.034,367,1.034,369,0.959,370,1.699,371,1.148,372,1.034,374,1.338,375,0.923,376,1.39,377,1.338,378,0.888,379,1.678,380,1.034,381,1.034,382,0.923,383,1.034,384,0.888,385,1.034,386,0.888,387,1.034,388,1.034,389,0.888,390,1.751,391,0.923,392,1.034,393,0.888,394,0.981,395,0.923,396,1.034,397,0.888,398,1.034,399,0.888,400,1.034,401,0.855,402,1.569,403,0.855,404,0.996,405,1.401,406,1.034,407,0.923,408,1.034,409,0.888,410,0.888,411,0.855,412,1.034,413,0.855,414,0.923,415,1.034,416,0.888,417,0.888,418,0.73,419,1.034,420,0.888,421,1.034,422,0.888,423,1.034,424,0.888,425,0.888,426,1.39,427,0.888,428,0.855,429,1.034,430,0.888,431,1.034,432,1.441,433,1.855,434,1.034,435,0.822,436,1.39,437,0.855,438,0.888,439,1.39,440,0.888,441,0.888,442,0.888,443,0.888,444,1.034,445,0.888,446,0.959,447,0.996,448,0.855,449,0.996,450,1.034,454,1.288,469,1.299,507,4.366,508,2.042,514,4.366,515,3.14,517,1.736,716,0.942,748,1.693,881,1.944,882,1.65,1003,1.803,1008,3.249,1035,2.307,1145,4.834,1147,3.611,1248,3.085,1394,1.35,2805,2.764,2806,2.979,2876,4.366,2903,3.896,3151,4.366,3339,4.852,3343,4.852,3344,5.859,3365,3.611,3366,4.852,3367,3.611,3375,3.611,3376,5.589,3377,6.749,3378,5.589,3379,6.313,3380,7.042,3381,6.313,3382,6.313,3383,6.313,3384,4.16,3385,4.16,3386,4.16,3387,4.16,3388,4.16,3389,4.16,3390,4.16,3391,4.16,3392,4.16,3393,5.589,3394,4.16,3395,4.16,3396,4.16,3397,4.16,3398,4.16,3399,4.16,3400,4.16,3401,4.16,3402,4.16,3403,5.589,3404,6.749,3405,5.589,3406,6.749]],["title/components/ModalErrorWindowComponent.html",[363,0.193,435,0.776]],["body/components/ModalErrorWindowComponent.html",[0,0.239,3,0.1,4,0.1,5,0.086,6,0.23,7,0.136,14,0.128,15,0.406,17,0.353,18,0.015,19,0.296,21,0.282,29,0.721,32,0.618,43,2.865,44,1.746,54,0.161,59,0.769,68,0.415,103,0.589,105,0.873,115,0.385,117,0.652,123,0.717,133,0.896,134,0.973,137,1.746,150,0.596,162,2.181,176,0.335,179,0.653,182,3.122,194,0.5,250,2.715,251,0.75,252,0.75,277,0.662,278,0.626,281,1.162,290,0.006,291,0.009,292,0.006,307,2.472,308,0.738,310,0.507,313,0.75,314,1.663,316,0.522,324,1.232,325,0.5,326,1.333,346,2.472,360,0.618,361,0.618,363,0.284,364,0.75,365,1.19,366,0.873,367,0.873,369,0.809,370,1.681,371,1.021,372,0.873,374,1.19,375,0.779,376,1.236,377,1.19,378,0.75,379,1.561,380,0.873,381,0.873,382,0.779,383,0.873,384,0.75,385,0.873,386,0.75,387,0.873,388,0.873,389,0.75,390,1.647,391,0.779,392,0.873,393,0.75,394,0.872,395,0.779,396,0.873,397,0.75,398,0.873,399,0.75,400,0.873,401,0.721,402,1.435,403,0.721,404,0.84,405,1.57,406,0.873,407,0.779,408,0.873,409,0.75,410,0.75,411,0.721,412,0.873,413,0.721,414,0.779,415,0.873,416,0.75,417,0.75,418,0.616,419,0.873,420,0.75,421,0.873,422,0.75,423,0.873,424,0.75,425,0.75,426,1.236,427,0.75,428,0.721,429,0.873,430,0.75,431,0.873,432,0.75,433,1.146,434,0.873,435,1.36,436,1.236,437,0.721,438,0.75,439,1.236,440,0.75,441,0.75,442,0.75,443,0.75,444,0.873,445,0.75,446,0.809,447,0.84,448,0.721,449,0.84,450,0.873,454,1.146,461,1.453,463,1.453,469,1.096,471,1.816,481,1.453,508,1.816,517,1.631,594,3.02,598,3.285,603,1.937,607,1.393,654,4.904,658,4.904,665,3.586,681,2.742,686,1.937,699,2.181,713,1.836,716,0.973,720,2.905,721,2.051,723,2.051,725,3.883,726,2.742,727,2.742,733,2.744,1080,3.02,1087,1.836,1215,3.088,1216,3.02,1232,5.034,1233,2.181,1235,3.047,1236,3.047,1237,3.835,1238,4.572,1239,2.332,1240,4.116,1241,3.372,1243,1.836,1244,3.303,1245,4.402,1246,3.835,1247,3.835,1248,3.798,1249,3.835,1250,3.835,1251,3.186,1252,3.835,1253,3.835,1256,3.835,1257,3.835,1258,3.303,1259,3.835,1260,3.835,1261,3.835,1262,2.611,1263,4.116,1272,2.332,1273,3.303,1294,4.171,1295,3.303,1296,2.332,1297,2.181,1300,3.088,1301,3.303,1303,2.332,1304,2.332,1310,3.303,1313,3.303,1475,3.883,1487,4.315,1597,1.937,3407,5.752,3408,5.45,3409,4.971,3410,5.45,3411,3.047,3412,4.971,3413,3.51,3414,3.51,3415,3.51,3416,3.51,3417,3.51,3418,3.51,3419,3.51,3420,3.51,3421,3.51,3422,4.315,3423,3.51,3424,3.047,3425,3.51,3426,3.047,3427,3.51,3428,4.315,3429,3.51,3430,3.51,3431,3.51,3432,3.047,3433,3.51,3434,3.51,3435,3.51,3436,4.134,3437,3.51,3438,3.51,3439,3.047,3440,3.047,3441,3.047,3442,3.047,3443,3.047,3444,3.047,3445,3.047,3446,3.047,3447,3.047,3448,3.047,3449,3.047,3450,3.047,3451,3.047,3452,4.971,3453,4.971,3454,4.971]],["title/interfaces/ModalErrorWindowValidator.html",[1243,2.054,3436,2.812]],["body/interfaces/ModalErrorWindowValidator.html",[0,0.24,3,0.142,4,0.142,5,0.122,6,0.196,7,0.115,14,0.182,17,0.283,18,0.015,19,0.23,21,0.325,29,0.483,43,2.981,44,2.483,54,0.204,59,0.79,68,0.359,103,0.746,117,0.779,123,0.782,133,0.819,134,0.841,137,2.483,150,0.627,162,3.101,176,0.4,179,0.646,182,2.483,194,0.597,250,2.159,281,1.062,290,0.009,291,0.011,292,0.009,307,2.483,310,0.642,313,0.642,314,2.365,316,0.742,324,1.752,325,0.711,326,1.339,346,2.483,363,0.31,370,1.026,405,1.397,435,1.244,454,1.151,461,2.997,463,2.997,471,2.519,517,1.783,594,3.293,598,2.612,603,2.755,607,1.981,654,3.899,658,3.899,665,3.101,681,3.899,686,2.755,699,3.101,713,2.612,716,1.162,720,3.678,721,2.917,723,2.917,725,4.917,726,3.899,727,3.899,733,3.474,1080,3.293,1087,2.612,1215,3.91,1216,3.607,1232,4.283,1233,3.101,1237,4.182,1238,4.58,1239,3.317,1240,3.91,1241,3.678,1243,2.612,1244,3.317,1245,3.317,1246,3.317,1247,3.317,1248,3.805,1249,3.317,1250,3.317,1251,2.755,1252,3.317,1253,3.317,1256,3.317,1257,3.317,1258,3.317,1259,3.317,1260,3.317,1261,3.317,1262,2.258,1263,3.101,1272,3.317,1273,4.182,1294,3.317,1295,4.182,1296,3.317,1297,3.101,1300,3.91,1301,4.182,1303,3.317,1304,3.317,1313,4.182,1475,4.917,1597,2.755,3407,4.333,3408,4.333,3410,4.333,3422,4.333,3428,4.333,3436,4.938,3439,4.333,3440,4.333,3441,4.333,3442,4.333,3443,4.333,3444,4.333,3445,4.333,3446,4.333,3447,4.333,3448,4.333,3449,4.333,3450,4.333,3451,4.333,3455,3.575,3456,4.992,3457,4.992]],["title/components/ModalWindowComponent.html",[363,0.193,437,0.807]],["body/components/ModalWindowComponent.html",[0,0.278,3,0.1,4,0.141,5,0.086,6,0.23,7,0.136,14,0.128,15,0.406,17,0.355,18,0.015,19,0.295,21,0.282,29,0.712,32,0.618,54,0.187,59,0.777,68,0.415,103,0.685,105,0.874,115,0.4,117,0.749,123,0.718,133,0.957,134,0.973,150,0.613,176,0.336,179,0.669,182,3.124,194,0.5,250,2.716,251,0.75,252,0.75,277,0.662,278,0.613,281,0.708,290,0.006,291,0.009,292,0.006,307,2.474,308,0.722,310,0.508,313,0.738,316,0.522,324,1.233,325,0.5,326,1.549,346,2.474,360,0.718,361,0.718,363,0.327,364,0.75,365,1.191,366,0.874,367,0.874,369,0.81,370,1.683,371,1.022,372,0.874,374,1.383,375,0.78,376,1.237,377,1.191,378,0.75,379,1.562,380,0.874,381,0.874,382,0.78,383,0.874,384,0.75,385,0.874,386,0.75,387,0.874,388,0.874,389,0.75,390,1.648,391,0.78,392,0.874,393,0.75,394,0.873,395,0.78,396,0.874,397,0.75,398,0.874,399,0.75,400,0.874,401,0.722,402,1.436,403,1.187,404,1.191,405,1.632,406,0.874,407,0.78,408,0.874,409,0.75,410,0.75,411,0.722,412,0.874,413,0.722,414,0.78,415,0.874,416,0.75,417,0.75,418,0.617,419,0.874,420,0.75,421,0.874,422,0.75,423,0.874,424,0.75,425,0.75,426,1.237,427,0.75,428,0.722,429,0.874,430,0.75,431,0.874,432,0.75,433,1.147,434,0.874,435,1.241,436,1.237,437,1.291,438,0.75,439,1.237,440,0.75,441,0.75,442,0.75,443,0.75,444,0.874,445,0.75,446,0.81,447,0.841,448,0.722,449,0.841,450,0.874,453,2.744,454,1.147,461,2.059,463,2.059,469,1.097,471,2.11,481,1.455,490,1.186,508,1.818,515,2.872,517,1.666,603,3.188,607,1.394,665,3.588,733,3.467,999,1.394,1080,3.022,1087,1.838,1232,5.026,1233,2.183,1234,2.517,1237,4.404,1238,4.573,1239,3.837,1240,4.118,1241,3.374,1242,2.745,1243,1.838,1244,3.305,1245,4.404,1246,3.837,1247,3.837,1248,3.799,1249,3.837,1250,3.837,1251,3.659,1252,3.837,1253,3.837,1254,5.178,1255,3.837,1256,3.837,1257,3.837,1258,3.305,1259,3.837,1260,3.837,1261,3.837,1262,2.612,1263,4.118,1264,4.906,1265,3.886,1266,3.886,1267,2.745,1268,2.745,1269,2.745,1270,2.745,1271,2.745,1272,3.305,1273,3.837,1274,2.745,1275,2.745,1276,2.745,1277,2.517,1278,2.603,1279,4.173,1280,4.906,1281,2.745,1282,2.745,1283,2.745,1284,2.745,1285,3.886,1286,2.745,1287,3.886,1288,2.745,1289,3.886,1290,2.745,1291,2.745,1292,3.886,1293,2.745,1294,4.173,1295,3.305,1296,2.335,1297,2.183,1298,2.745,1299,2.745,1300,2.183,1301,2.335,1302,2.745,1303,3.305,1304,3.305,1305,3.886,1306,3.886,1307,2.517,1308,2.745,1309,2.745,1310,3.837,1311,2.517,1312,2.745,1313,2.335,3411,3.05,3424,3.05,3426,4.319,3432,3.05,3458,4.975,3459,4.975,3460,3.514,3461,3.514,3462,3.514,3463,3.514,3464,3.514,3465,3.514,3466,3.514,3467,3.514,3468,3.514,3469,3.514,3470,3.514,3471,3.514,3472,3.514,3473,3.514,3474,3.514,3475,3.514,3476,3.514,3477,3.514,3478,3.514,3479,3.514,3480,3.514,3481,3.514]],["title/interfaces/ModalWindowValidator.html",[453,1.625,1243,2.054]],["body/interfaces/ModalWindowValidator.html",[0,0.295,3,0.137,4,0.175,5,0.117,6,0.192,7,0.113,14,0.176,17,0.276,18,0.015,19,0.225,21,0.321,54,0.22,59,0.793,68,0.346,103,0.803,117,0.806,123,0.764,133,0.882,134,0.81,150,0.653,176,0.393,179,0.653,182,2.39,194,0.586,250,2.078,281,0.684,290,0.009,291,0.011,292,0.009,307,2.39,310,0.627,313,0.627,316,0.714,324,1.687,325,0.684,326,1.648,346,2.39,363,0.352,370,1.263,374,1.151,403,1.263,404,1.151,405,1.584,435,1.214,437,0.988,453,3.054,454,1.108,461,3.054,463,3.054,471,2.608,490,1.622,515,2.39,517,1.79,603,3.391,607,1.907,665,2.986,733,3.94,999,1.907,1080,3.215,1087,2.515,1232,4.208,1233,2.986,1234,3.442,1237,4.743,1238,4.5,1239,4.082,1240,3.817,1241,3.59,1242,3.754,1243,2.515,1244,3.193,1245,3.193,1246,3.193,1247,3.193,1248,3.739,1249,3.193,1250,3.193,1251,2.653,1252,3.193,1253,3.193,1254,3.754,1255,4.082,1256,3.193,1257,3.193,1258,3.193,1259,3.193,1260,3.193,1261,3.193,1262,2.174,1263,2.986,1264,3.754,1265,4.8,1266,4.8,1267,3.754,1268,3.754,1269,3.754,1270,3.754,1271,3.754,1272,4.082,1273,4.5,1274,3.754,1275,3.754,1276,3.754,1277,3.442,1278,3.215,1279,3.193,1280,3.754,1281,3.754,1282,3.754,1283,3.754,1284,3.754,1285,4.8,1286,3.754,1287,4.8,1288,3.754,1289,4.8,1290,3.754,1291,3.754,1292,3.754,1293,3.754,1294,3.193,1295,4.082,1296,3.193,1297,2.986,1298,3.754,1299,3.754,1300,2.986,1301,3.193,1302,3.754,1303,4.082,1304,4.082,1305,3.754,1306,3.754,1307,3.442,1308,3.754,1309,3.754,1310,3.193,1311,3.442,1312,3.754,1313,3.193,3455,3.442,3482,4.806,3483,4.806]],["title/components/NamespaceEditComponent.html",[363,0.193,438,0.838]],["body/components/NamespaceEditComponent.html",[0,0.286,3,0.13,4,0.13,5,0.112,6,0.218,7,0.132,14,0.167,15,0.485,17,0.326,18,0.015,19,0.277,21,0.315,29,0.752,30,1.425,32,0.739,54,0.148,59,0.466,103,0.705,115,0.407,117,0.746,123,0.821,133,0.86,135,1.306,150,0.395,176,0.345,179,0.606,194,0.514,251,0.974,252,0.974,277,0.704,278,0.514,281,0.649,290,0.008,291,0.011,292,0.008,308,0.606,310,0.606,313,0.714,314,2.162,316,0.678,325,0.649,326,1.593,360,0.567,361,0.567,363,0.326,364,0.974,365,1.423,366,1.135,367,1.135,369,1.052,370,1.708,371,1.221,372,1.135,374,1.423,375,1.012,376,1.477,377,1.423,378,0.974,379,1.74,380,1.135,381,1.135,382,1.012,383,1.135,384,0.974,385,1.135,386,0.974,387,1.135,388,1.135,389,0.974,390,1.805,391,1.012,392,1.135,393,0.974,394,1.043,395,1.012,396,1.135,397,0.974,398,1.135,399,0.974,400,1.135,401,0.938,402,1.643,403,0.938,404,1.092,405,1.553,406,1.135,407,1.012,408,1.135,409,0.974,410,0.974,411,0.938,412,1.135,413,0.938,414,1.012,415,1.135,416,0.974,417,0.974,418,0.801,419,1.135,420,0.974,421,1.135,422,0.974,423,1.135,424,0.974,425,0.974,426,1.477,427,0.974,428,0.938,429,1.135,430,0.974,431,1.135,432,0.974,433,1.37,434,1.135,435,0.902,436,1.477,437,0.938,438,1.495,439,1.985,440,0.974,441,0.974,442,0.974,443,0.974,444,1.135,445,0.974,446,1.052,447,1.092,448,0.938,449,1.092,450,1.135,453,2.736,454,1.37,456,4.105,461,2.898,462,3.109,463,2.898,471,2.652,481,1.889,487,2.064,488,2.269,490,1.54,494,2.835,525,2.835,526,3.109,527,3.948,549,3.268,1394,1.928,1674,1.737,2045,5.014,2051,3.961,2071,4.934,2096,4.733,2098,3.268,3484,6.003,3485,6.608,3486,7,3487,4.563,3488,5.942,3489,4.563,3490,5.942,3491,4.563,3492,4.563,3493,3.961,3494,4.563,3495,4.563,3496,3.961,3497,3.961,3498,4.563,3499,6.608,3500,4.563,3501,3.961,3502,7,3503,4.563,3504,4.563,3505,5.67,3506,5.158]],["title/components/NamespaceListComponent.html",[363,0.193,440,0.838]],["body/components/NamespaceListComponent.html",[0,0.229,3,0.094,4,0.094,5,0.081,6,0.224,7,0.133,14,0.237,15,0.389,17,0.335,18,0.015,19,0.288,21,0.303,29,0.702,30,1.034,32,0.593,54,0.107,59,0.624,68,0.554,103,0.8,115,0.421,117,0.69,123,0.695,133,0.98,134,0.942,135,0.654,150,0.663,176,0.448,179,0.637,194,0.602,251,0.707,252,0.707,277,0.652,278,0.529,281,0.471,290,0.006,291,0.009,292,0.01,308,0.624,310,0.487,313,0.775,316,0.492,325,0.471,360,0.839,361,0.839,363,0.275,364,0.707,365,1.141,366,0.823,367,0.823,369,0.763,370,1.675,371,0.98,372,0.823,374,1.141,375,0.735,376,1.185,377,1.141,378,0.707,379,1.52,380,0.823,381,0.823,382,0.735,383,0.823,384,0.707,385,0.823,386,0.707,387,0.823,388,0.823,389,0.707,390,1.611,391,0.735,392,0.823,393,0.707,394,0.981,395,0.735,396,0.823,397,0.707,398,0.823,399,0.707,400,0.823,401,0.68,402,1.389,403,0.68,404,0.793,405,1.356,406,0.823,407,0.735,408,0.823,409,0.707,410,0.707,411,0.68,412,0.823,413,0.68,414,0.735,415,0.823,416,0.707,417,0.707,418,0.581,419,0.823,420,0.707,421,0.823,422,0.707,423,0.823,424,0.707,425,0.707,426,1.185,427,0.707,428,1.148,429,0.823,430,0.707,431,0.823,432,0.707,433,1.099,434,0.823,435,0.654,436,1.185,437,1.429,438,1.485,439,1.872,440,1.305,441,0.707,442,0.707,443,0.707,444,0.823,445,0.707,446,0.763,447,0.793,448,0.68,449,0.793,450,0.823,454,1.099,469,2.107,488,1.647,490,1.117,508,1.742,517,1.288,520,2.786,526,1.732,540,2.057,699,2.057,716,0.558,748,1.498,849,2.371,905,1.497,949,2.586,951,2.586,1003,0.823,1033,3.471,1118,3.415,1145,4.981,1172,3.168,1173,3.168,1178,3.168,1179,2.2,1180,3.712,1182,3.168,1191,2.2,1192,3.168,1200,3.168,1201,2.416,1203,2.371,1204,2.2,1205,2.371,1394,1.547,1639,1.432,1745,1.827,2045,4.64,2054,2.2,2071,4.965,2096,3.415,2098,5.271,2099,3.724,2227,1.732,2228,1.732,3002,2.057,3090,5.061,3113,5.061,3180,5.432,3260,2.586,3261,4.139,3262,4.85,3263,4.85,3265,5.307,3270,5.307,3271,5.307,3273,5.307,3274,5.307,3278,2.874,3289,4.139,3296,2.874,3297,2.874,3298,6.388,3299,4.85,3300,2.874,3301,2.586,3303,4.139,3304,4.139,3305,4.85,3308,4.85,3309,2.874,3310,2.371,3311,2.874,3312,2.874,3484,6.168,3496,4.139,3497,2.874,3501,4.139,3505,4.775,3506,4.139,3507,5.588,3508,4.768,3509,4.768,3510,6.113,3511,6.113,3512,4.768,3513,4.768,3514,4.768,3515,3.311,3516,4.768,3517,3.311,3518,3.311,3519,4.768,3520,3.311,3521,3.311,3522,3.311,3523,3.311,3524,3.311,3525,4.768,3526,3.311,3527,4.768,3528,3.311,3529,3.311,3530,3.311,3531,4.768,3532,3.311,3533,3.311,3534,3.311,3535,3.311,3536,3.311,3537,6.479,3538,6.113,3539,5.588,3540,3.311,3541,4.768,3542,3.311,3543,3.311,3544,3.311,3545,3.311,3546,3.311,3547,3.311,3548,3.311,3549,3.311,3550,3.311,3551,3.311,3552,3.311,3553,3.311,3554,3.311,3555,3.311,3556,3.311,3557,3.311,3558,3.311,3559,4.768,3560,4.768,3561,4.768,3562,4.768,3563,4.768]],["title/classes/NamespaceModel.html",[0,0.189,2071,2.439]],["body/classes/NamespaceModel.html",[0,0.243,2,0.722,3,0.079,4,0.079,5,0.068,6,0.204,7,0.12,9,1.209,14,0.102,15,0.344,17,0.327,18,0.015,19,0.258,21,0.272,28,2.795,29,0.408,30,0.873,31,1.709,32,0.629,45,2.864,46,2.795,48,1.209,54,0.164,58,1.737,59,0.765,68,0.581,75,2.096,79,1.858,80,1.709,103,0.838,113,2.46,114,1.463,115,0.369,116,1.265,117,0.784,118,2.003,119,2.003,120,2.003,121,2.003,124,2.117,133,0.883,135,1.001,145,1.737,150,0.698,165,1.737,170,1.737,176,0.464,179,0.63,180,1.158,194,0.692,225,2.003,242,4.036,246,1.463,259,2.46,269,3.015,277,0.754,278,0.55,282,1.349,290,0.005,291,0.008,292,0.005,308,0.648,310,0.43,313,0.575,325,0.398,360,0.348,361,0.348,394,0.491,501,1.463,542,2.003,544,1.602,556,2.184,561,2.003,579,3.744,607,1.109,676,1.158,716,1.143,748,0.75,806,4.379,880,2.427,905,1.265,933,2.003,1003,1.758,1109,1.737,1149,4.015,1163,2.203,1165,3.945,1166,1.858,1171,3.655,1201,1.821,1323,3.655,1324,2.427,1327,4.891,1338,3.655,1339,2.427,1340,5.246,1341,4.396,1346,2.691,1350,2.427,1351,4.891,1354,3.5,1359,1.927,1362,3.015,1364,3.655,1371,2.203,1375,4.396,1379,2.427,1394,1.366,1395,3.655,1396,2.427,1403,3.015,1413,2.427,1415,4.891,1418,2.427,1436,2.003,1484,2.46,1560,1.858,1674,1.064,1786,1.634,1832,1.543,1834,1.858,2045,2.003,2071,4.722,2083,2.427,2088,3.655,2096,4.036,2098,4.036,2099,3.289,2190,2.427,2201,3.289,2207,2.427,2227,1.463,2228,1.463,2461,2.427,2505,2.427,2581,3.015,2634,1.858,2646,2.184,2647,3.289,2685,2.184,2688,2.184,2733,2.184,2760,2.184,2787,2.427,2788,2.427,2789,2.427,2794,2.427,2885,5.246,3064,2.427,3077,4.396,3183,2.184,3505,4.721,3564,6.234,3565,5.064,3566,5.064,3567,5.064,3568,5.064,3569,4.21,3570,5.635,3571,5.635,3572,2.796,3573,2.796,3574,2.796,3575,2.796,3576,2.796,3577,2.796,3578,5.064,3579,2.796,3580,4.21,3581,2.796,3582,4.21,3583,2.796,3584,2.796,3585,2.796,3586,2.796,3587,2.796,3588,2.796,3589,2.796,3590,2.796,3591,2.796,3592,2.796,3593,2.796,3594,2.796,3595,2.796,3596,7.181,3597,2.796,3598,2.796,3599,2.796,3600,2.796,3601,2.796,3602,2.796,3603,2.796,3604,2.796,3605,2.796,3606,2.796,3607,4.21,3608,2.796,3609,2.796,3610,2.796,3611,2.796,3612,2.796,3613,5.064,3614,2.796,3615,2.796,3616,4.21,3617,2.796,3618,2.796,3619,4.21,3620,2.796,3621,2.796,3622,2.796,3623,2.796,3624,2.796,3625,2.796,3626,2.796,3627,4.21,3628,2.796,3629,2.796,3630,6.351,3631,6.044,3632,2.796,3633,2.427,3634,6.351,3635,2.796,3636,5.064,3637,4.21,3638,2.796,3639,2.796,3640,4.21,3641,2.796,3642,2.796,3643,2.796,3644,2.796,3645,2.796,3646,2.796,3647,2.796,3648,5.064,3649,5.635,3650,6.044,3651,5.064,3652,5.635,3653,4.21,3654,2.796,3655,5.064,3656,4.21,3657,4.21,3658,4.21,3659,4.21,3660,5.064,3661,2.796,3662,2.796,3663,2.796,3664,2.796,3665,2.796,3666,2.796,3667,2.796,3668,2.796,3669,5.635,3670,2.796,3671,4.21,3672,2.796,3673,4.21,3674,2.796,3675,4.21,3676,4.21,3677,4.21,3678,4.21,3679,2.796,3680,2.796,3681,5.635,3682,4.21,3683,2.796,3684,4.21,3685,2.796,3686,5.635,3687,4.21,3688,2.796,3689,2.796,3690,4.21,3691,2.796,3692,2.796,3693,2.184,3694,2.796,3695,2.796,3696,2.796,3697,2.796,3698,2.796,3699,2.796,3700,2.796,3701,2.796,3702,2.796,3703,4.21,3704,2.796,3705,2.796,3706,5.064,3707,2.796,3708,2.796,3709,2.796,3710,2.796,3711,2.796,3712,2.796,3713,2.796,3714,2.796,3715,2.796,3716,2.796,3717,2.796,3718,2.796,3719,2.796,3720,2.796,3721,2.796,3722,2.427,3723,2.796,3724,2.796,3725,2.796,3726,2.796,3727,2.796,3728,2.796,3729,2.796,3730,2.796,3731,2.796,3732,2.796,3733,2.796,3734,2.796,3735,2.796,3736,2.796]],["title/components/PropertyFieldEditComponent.html",[363,0.193,441,0.838]],["body/components/PropertyFieldEditComponent.html",[0,0.255,3,0.172,4,0.109,5,0.094,6,0.223,7,0.133,14,0.141,15,0.433,17,0.345,18,0.015,19,0.285,21,0.318,29,0.726,30,1.202,31,2.391,32,0.659,45,1.824,48,1.664,54,0.125,59,0.723,68,0.47,80,1.789,98,2.926,103,0.813,115,0.455,117,0.835,123,0.478,133,0.789,135,1.199,150,0.525,165,2.391,176,0.441,179,0.566,195,3.798,251,0.822,252,1.603,277,0.759,278,0.64,281,0.548,290,0.007,291,0.01,292,0.007,308,0.541,310,0.541,313,0.723,316,0.572,325,0.548,326,1.421,360,0.659,361,0.659,363,0.299,364,0.822,365,1.269,366,0.957,367,0.957,369,0.887,370,1.691,371,1.089,372,0.957,374,1.269,375,0.854,376,1.318,377,1.269,378,0.822,379,1.625,380,0.957,381,0.957,382,0.854,383,0.957,384,0.822,385,0.957,386,0.822,387,0.957,388,0.957,389,0.822,390,1.704,391,0.854,392,0.957,393,0.822,394,0.93,395,0.854,396,0.957,397,0.822,398,0.957,399,0.822,400,0.957,401,0.791,402,1.508,403,0.791,404,0.921,405,1.45,406,0.957,407,0.854,408,0.957,409,0.822,410,0.822,411,0.791,412,0.957,413,0.791,414,0.854,415,0.957,416,0.822,417,0.822,418,0.675,419,0.957,420,0.822,421,0.957,422,0.822,423,0.957,424,0.822,425,0.822,426,1.318,427,0.822,428,0.791,429,0.957,430,0.822,431,0.957,432,0.822,433,1.222,434,0.957,435,0.761,436,1.318,437,1.561,438,0.822,439,1.318,440,0.822,441,1.396,442,0.822,443,0.822,444,0.957,445,0.822,446,0.887,447,0.921,448,0.791,449,0.921,450,0.957,453,2.511,454,1.222,456,3.767,461,2.705,462,2.774,463,2.705,469,1.202,471,2.504,472,3.797,481,1.593,487,1.741,488,1.914,489,1.664,490,1.299,491,4.029,494,2.391,496,2.756,501,3.419,525,2.391,526,2.774,527,3.522,528,5.534,529,5.264,530,4.737,531,5.105,532,4.141,533,3.341,535,5.673,536,3.006,539,4.141,540,4.06,541,5.105,542,4.68,543,4.602,544,2.018,545,4.141,546,3.341,547,3.006,548,3.006,549,2.756,551,3.006,552,3.006,553,3.006,554,2.756,555,4.737,556,3.006,557,5.264,558,3.341,559,4.602,560,2.637,561,2.756,562,3.341,563,4.602,564,2.756,566,3.797,567,3.006,568,3.006,569,3.006,570,3.006,572,3.341,573,4.602,574,4.602,575,4.139,576,3.25,577,4.141,578,4.141,579,3.522,580,3.097,581,3.097,582,3.097,583,3.818,584,3.818,585,4.141,586,2.926,587,4.141,588,4.141,589,4.141,590,4.141,591,5.777,716,0.893,1073,2.926,1835,3.522,2121,3.341,3737,6.803,3738,6.535,3739,3.849,3740,3.849,3741,3.849,3742,5.301,3743,4.602,3744,5.301,3745,5.301]],["title/components/TemplateEditComponent.html",[363,0.193,442,0.838]],["body/components/TemplateEditComponent.html",[0,0.304,3,0.143,4,0.143,5,0.123,6,0.213,7,0.131,14,0.184,15,0.517,17,0.285,18,0.015,19,0.266,21,0.285,29,0.766,32,0.787,54,0.164,68,0.456,103,0.598,115,0.402,117,0.715,133,0.901,150,0.548,176,0.368,251,1.077,252,1.077,277,0.718,278,0.436,281,0.718,290,0.009,291,0.011,292,0.009,308,0.515,310,0.646,313,0.646,316,0.749,326,1.698,363,0.341,364,1.077,365,1.516,366,1.254,367,1.254,369,1.162,370,1.716,371,1.301,372,1.254,374,1.829,375,1.119,376,1.575,377,1.516,378,1.077,379,1.806,380,1.254,381,1.254,382,1.119,383,1.254,384,1.077,385,1.254,386,1.077,387,1.254,388,1.254,389,1.077,390,1.861,391,1.119,392,1.254,393,1.077,394,1.112,395,1.119,396,1.254,397,1.077,398,1.254,399,1.077,400,1.254,401,1.036,402,1.722,403,1.036,404,1.207,405,1.612,406,1.254,407,1.119,408,1.254,409,1.077,410,1.077,411,1.036,412,1.254,413,1.036,414,1.119,415,1.254,416,1.077,417,1.077,418,0.885,419,1.254,420,1.077,421,1.254,422,1.077,423,1.254,424,1.077,425,1.077,426,1.575,427,1.077,428,1.036,429,1.254,430,1.077,431,1.254,432,1.077,433,1.46,434,1.254,435,0.996,436,1.575,437,1.036,438,1.077,439,1.575,440,1.077,441,1.077,442,1.551,443,1.077,444,1.254,445,1.077,446,1.162,447,1.207,448,1.036,449,1.207,450,1.254,453,2.867,454,1.46,456,4.302,461,3.007,463,3.007,471,2.735,481,2.087,487,2.28,490,1.701,494,3.132,525,3.132,526,3.314,527,4.208,554,3.611,2765,6.012,3493,4.376,3746,6.497,3747,6.334,3748,5.042,3749,5.042]],["title/classes/TextNode.html",[0,0.189,1559,2.439]],["body/classes/TextNode.html",[0,0.275,2,0.641,3,0.071,4,0.151,5,0.061,6,0.172,7,0.101,14,0.259,15,0.314,17,0.238,18,0.015,19,0.25,21,0.238,29,0.456,33,0.986,34,1.235,35,1.177,54,0.186,68,0.568,80,2.354,103,0.295,105,0.618,114,1.3,115,0.144,123,0.585,124,1.974,133,0.85,134,0.648,135,1.379,150,0.566,176,0.449,179,0.333,180,1.028,194,0.682,246,2.012,277,0.615,278,0.333,282,1.67,288,1.235,290,0.004,291,0.007,292,0.004,308,0.393,310,0.393,313,0.585,324,0.872,325,0.354,360,0.309,361,0.309,411,0.51,499,1.405,500,1.3,517,0.887,544,1.464,560,1.913,607,1.526,609,1.451,615,2.389,676,1.592,716,1.317,748,1.837,881,1.537,935,3.49,942,1.074,956,1.65,961,3.808,976,1.235,999,2.102,1003,1.999,1035,0.908,1126,3.096,1201,1.074,1218,1.65,1262,2.397,1278,1.3,1329,3.096,1346,1.791,1359,0.945,1366,2.247,1394,1.72,1484,3.096,1490,3.521,1536,4.509,1537,1.65,1538,4.342,1539,3.127,1540,3.795,1541,4.529,1542,4.908,1543,4.908,1544,1.779,1546,4.106,1551,2.405,1552,1.3,1553,2.555,1554,3.928,1555,2.755,1556,5.25,1557,5.539,1558,1.779,1559,4.956,1560,3.127,1561,4.594,1562,1.779,1563,1.779,1564,1.779,1565,1.779,1566,4.765,1567,1.779,1568,1.779,1569,1.451,1570,2.755,1571,1.779,1572,1.779,1573,1.779,1574,1.451,1575,1.779,1576,1.779,1577,1.779,1578,1.779,1579,1.779,1580,1.779,1581,1.779,1582,1.779,1583,1.779,1584,2.755,1585,1.779,1586,2.755,1587,1.779,1588,3.371,1589,1.779,1590,1.779,1591,1.779,1592,4.804,1593,4.106,1594,4.106,1595,3.795,1596,1.779,1597,1.371,1598,1.779,1599,3.817,1600,5.198,1601,1.779,1602,2.755,1603,3.795,1604,1.779,1605,5.296,1606,4.908,1607,4.342,1608,4.947,1609,2.755,1610,1.779,1611,1.779,1612,4.106,1613,1.779,1614,3.371,1615,2.755,1616,1.779,1617,4.679,1618,4.106,1619,5.14,1620,1.779,1621,1.779,1622,3.371,1623,1.779,1624,2.755,1625,2.755,1626,3.795,1627,2.755,1628,2.389,1629,2.755,1630,4.106,1631,2.555,1632,2.555,1633,1.779,1634,1.779,1635,1.779,1636,4.679,1637,2.755,1638,4.529,1639,1.663,1640,1.779,1641,3.371,1642,4.509,1643,2.755,1644,4.342,1645,1.779,1646,5.073,1647,3.795,1648,2.755,1649,2.755,1650,2.755,1651,3.371,1652,2.755,1653,2.755,1654,1.779,1655,2.755,1656,2.755,1657,3.795,1658,2.755,1659,2.755,1660,3.127,1661,1.779,1662,1.779,1663,1.779,1664,1.779,1665,1.779,1666,3.371,1667,1.779,1668,4.106,1669,1.779,1670,4.342,1671,3.096,1672,4.342,1673,3.371,1674,1.791,1675,3.127,1676,3.371,1677,1.779,1678,5.073,1679,5.073,1680,4.342,1681,3.371,1682,1.779,1683,4.529,1684,1.779,1685,4.342,1686,1.779,1687,1.779,1688,3.371,1689,1.779,1690,3.371,1691,3.371,1692,3.371,1693,3.371,1694,2.755,1695,2.755,1696,2.755,1697,2.755,1698,2.755,1699,5.14,1700,2.755,1701,1.543,1702,1.779,1703,1.779,1704,1.779,1705,1.779,1706,1.779,1707,1.65,1708,1.779,1709,1.779,1710,1.779,1711,1.124,1712,1.779,1713,1.779,1714,1.543,1715,1.779,1716,2.012,1717,1.779,1718,1.779,1719,1.779,1720,2.755,1721,1.65,1722,1.779,1723,1.779,1724,2.755,1725,3.795,1726,3.795,1727,1.779,1728,1.779,1729,3.371,1730,1.779,1731,2.755,1732,2.755,1733,1.779,1734,4.679,1735,2.755,1736,1.779,1737,1.779,1738,1.779,1739,2.755,1740,1.779,1741,1.451,1742,2.755,1743,1.779,1744,1.779,1745,1.371,1746,1.779,1747,1.779,1748,1.779,1749,1.779,1750,1.779,1751,1.779,1752,1.779,1753,1.779,1754,2.755,1755,1.779,1756,2.755,2130,4.976,2131,2.156,2132,2.156,2135,2.156,2136,2.156,2137,2.156,3750,2.484,3751,3.846,3752,2.484,3753,2.484,3754,2.484]],["title/pipes/ToErrorIconClassPipe.html",[783,2.608,3755,2.294]],["body/pipes/ToErrorIconClassPipe.html",[0,0.284,3,0.198,4,0.168,5,0.144,6,0.198,7,0.116,17,0.265,18,0.015,19,0.216,21,0.314,43,3.316,44,2.937,54,0.192,68,0.502,115,0.431,176,0.445,278,0.511,281,1.056,290,0.011,291,0.013,292,0.011,310,0.603,313,0.603,316,0.878,326,1.583,360,0.734,361,0.734,369,1.361,680,5.126,713,3.09,720,4.337,721,3.45,723,3.45,724,4.613,783,4.634,886,4.634,1127,4.634,1142,5.126,3755,4.075,3756,5.905,3757,6.054,3758,5.126,3759,6.974,3760,5.905,3761,6.974,3762,5.905,3763,6.974,3764,7.422,3765,6.885,3766,5.905]],["title/components/ToolbarComponent.html",[363,0.193,443,0.838]],["body/components/ToolbarComponent.html",[0,0.234,3,0.074,4,0.074,5,0.182,6,0.22,7,0.131,14,0.096,15,0.327,17,0.318,18,0.015,19,0.282,21,0.306,29,0.741,31,0.884,32,0.605,46,1.446,48,1.133,54,0.216,59,0.658,68,0.516,80,1.642,88,3.418,98,1.446,115,0.426,117,0.728,123,0.605,133,0.964,134,0.82,135,0.962,137,3.205,142,2.87,143,2.87,145,1.627,146,1.876,147,1.876,150,0.558,160,2.845,176,0.417,179,0.628,182,3.457,186,1.876,194,0.59,223,2.341,246,2.096,248,4.114,250,2.787,251,0.559,252,0.559,253,2.211,271,1.627,277,0.624,278,0.227,281,0.917,282,1.483,290,0.005,291,0.007,292,0.005,307,1.993,308,0.267,310,0.409,313,0.756,316,0.389,323,1.53,325,0.373,326,1.074,330,1.53,337,3.903,341,2.201,346,1.993,347,2.662,360,0.847,361,0.847,363,0.24,364,0.559,365,0.959,366,0.651,367,0.651,369,0.604,370,1.644,371,1.366,372,0.651,374,1.483,375,0.581,376,0.996,377,0.959,378,0.559,379,1.355,380,0.651,381,0.651,382,0.581,383,0.651,384,0.559,385,0.651,386,0.559,387,0.651,388,0.651,389,0.559,390,1.46,391,0.581,392,0.651,393,0.559,394,0.854,395,0.581,396,0.651,397,0.559,398,0.651,399,0.559,400,0.651,401,0.538,402,1.21,403,0.538,404,0.627,405,1.374,406,0.651,407,1.43,408,0.651,409,0.559,410,0.559,411,0.538,412,0.651,413,0.538,414,0.581,415,0.651,416,0.559,417,0.559,418,1.356,419,0.651,420,0.559,421,0.651,422,0.559,423,0.651,424,0.559,425,0.559,426,0.996,427,0.559,428,0.538,429,0.651,430,0.559,431,0.651,432,0.559,433,0.923,434,0.651,435,0.518,436,0.996,437,1.324,438,0.559,439,0.996,440,0.559,441,0.559,442,1.376,443,1.254,444,0.651,445,0.559,446,0.604,447,0.627,448,0.538,449,0.627,450,0.651,454,0.923,469,2.239,481,1.084,487,1.185,490,0.884,499,1.464,501,1.37,506,3.13,508,1.464,517,1.121,520,4.19,523,2.662,526,1.37,539,2.046,540,1.627,541,3.13,576,1.993,594,2.546,598,2.851,609,2.341,639,3.13,676,1.659,692,3.057,703,1.53,716,0.918,849,1.876,901,2.046,911,4.435,913,3.478,937,3.801,939,2.662,940,3.478,942,1.133,943,5.376,944,2.87,972,3.801,976,2.71,982,3.13,987,1.876,988,1.876,1032,2.274,1033,3.023,1035,2.54,1067,2.341,1073,2.211,1117,3.801,1118,2.87,1126,2.305,1127,1.74,1132,1.74,1135,3.13,1136,3.478,1170,1.876,1172,2.662,1173,2.662,1178,2.662,1179,1.74,1180,3.232,1182,2.662,1191,1.74,1192,2.662,1199,2.274,1200,2.662,1201,1.733,1203,1.876,1204,1.74,1205,1.876,1215,3.385,1216,3.24,1255,2.662,1310,3.621,1311,2.87,1346,2.235,1394,1.3,1403,1.876,1432,4.587,1527,2.046,1639,1.133,1660,1.74,1711,1.812,1721,2.662,1800,2.489,1828,1.53,1847,1.53,1962,3.903,1967,3.13,1968,3.13,1970,3.13,1971,3.13,1972,2.87,2165,5.594,2166,4.73,2172,3.478,2173,4.223,2179,4.73,2180,3.478,2189,3.478,2198,3.478,2204,4.73,2205,5.769,2254,2.274,2275,2.274,2277,2.274,2278,4.223,2295,2.274,2319,4.223,2324,3.478,2325,2.274,2381,3.478,2494,4.223,2544,1.37,2842,1.627,2890,3.478,2983,2.274,3016,2.274,3139,2.046,3167,2.274,3179,1.876,3310,4.76,3338,2.274,3743,2.274,3765,4.73,3767,2.274,3768,4.007,3769,4.007,3770,4.865,3771,4.865,3772,5.45,3773,6.193,3774,4.007,3775,5.45,3776,4.007,3777,4.007,3778,5.45,3779,4.007,3780,4.007,3781,4.007,3782,4.007,3783,2.619,3784,2.619,3785,2.619,3786,2.619,3787,4.007,3788,2.619,3789,4.007,3790,2.619,3791,3.478,3792,2.619,3793,4.007,3794,2.619,3795,4.007,3796,4.007,3797,2.619,3798,4.007,3799,3.478,3800,2.619,3801,4.007,3802,2.619,3803,3.478,3804,2.619,3805,4.007,3806,2.619,3807,4.007,3808,4.007,3809,4.007,3810,2.619,3811,3.478,3812,4.007,3813,4.007,3814,2.619,3815,4.007,3816,2.619,3817,4.007,3818,4.007,3819,4.007,3820,4.007,3821,4.007,3822,2.619,3823,4.007,3824,2.619,3825,2.619,3826,2.619,3827,2.619,3828,2.619,3829,2.619,3830,2.619,3831,2.619,3832,2.619,3833,2.619,3834,2.619,3835,2.619,3836,2.619,3837,2.619,3838,2.619,3839,2.619,3840,4.865,3841,2.619,3842,2.619,3843,4.007,3844,2.619,3845,4.007,3846,2.619,3847,4.007,3848,4.007,3849,2.619,3850,2.619,3851,2.619,3852,2.619,3853,2.619,3854,4.007,3855,2.619,3856,4.007,3857,4.007,3858,2.619,3859,2.619,3860,5.872,3861,5.872,3862,2.619,3863,2.619,3864,3.13,3865,4.865,3866,5.45,3867,2.619,3868,4.007,3869,2.619,3870,2.619,3871,4.007,3872,4.007,3873,2.619,3874,2.619,3875,2.619,3876,2.619,3877,2.619,3878,2.619,3879,2.619,3880,2.619,3881,2.619,3882,2.619,3883,2.619,3884,2.619,3885,5.45,3886,2.619,3887,2.619,3888,2.619,3889,2.619,3890,2.619,3891,4.007,3892,2.619,3893,2.619,3894,4.007,3895,2.619,3896,4.007,3897,4.007,3898,4.007,3899,2.619,3900,2.619,3901,2.619,3902,2.619,3903,2.619,3904,2.619,3905,2.619,3906,2.619,3907,4.007]],["title/classes/TransitionDelimiterModel.html",[0,0.189,3908,2.608]],["body/classes/TransitionDelimiterModel.html",[0,0.264,2,1.046,3,0.115,4,0.115,5,0.099,6,0.204,7,0.12,14,0.148,15,0.448,17,0.314,18,0.015,19,0.269,21,0.247,29,0.392,54,0.217,59,0.413,68,0.582,105,1.548,115,0.235,117,0.788,124,2.178,150,0.657,176,0.469,179,0.351,194,0.637,277,0.371,278,0.604,282,0.97,290,0.007,291,0.01,292,0.007,308,0.712,360,0.503,361,0.503,462,2.119,498,3.03,640,5.215,676,2.763,692,2.374,706,4.997,716,0.682,748,1.086,904,3.163,935,3.437,955,2.366,1067,2.366,1499,3.47,1561,2.516,1574,3.207,1674,2.738,1760,2.272,1789,2.366,1790,2.366,1791,2.366,1792,2.366,1802,2.516,1869,2.516,1933,5.846,1949,2.119,2456,4.334,2544,2.119,2632,2.366,2810,3.163,2842,3.868,2986,2.9,3177,4.864,3178,4.864,3179,4.46,3220,2.9,3755,3.638,3864,3.163,3908,4.435,3909,2.9,3910,6.497,3911,5.846,3912,6.386,3913,6.386,3914,4.05,3915,5.434,3916,5.489,3917,5.405,3918,4.05,3919,4.05,3920,4.05,3921,3.515,3922,3.163,3923,4.864,3924,3.163,3925,4.864,3926,4.864,3927,4.864,3928,4.864,3929,4.864,3930,4.864,3931,3.163,3932,4.864,3933,4.864,3934,4.864,3935,4.864,3936,3.163,3937,6.245,3938,3.515,3939,3.515,3940,3.515,3941,3.515,3942,3.515,3943,3.515,3944,3.515,3945,3.515,3946,3.163,3947,3.515,3948,4.765,3949,6.942,3950,3.515,3951,3.515,3952,3.515,3953,3.515,3954,3.515,3955,3.515,3956,3.515,3957,3.515,3958,3.515,3959,3.515,3960,3.515,3961,3.515,3962,3.515,3963,3.515,3964,3.515,3965,3.515,3966,3.515,3967,3.515,3968,3.515,3969,3.515,3970,4.765,3971,3.515,3972,5.62,3973,3.515,3974,3.515,3975,4.765,3976,5.405,3977,4.765,3978,3.515,3979,6.057,3980,3.515,3981,3.515,3982,4.765,3983,4.864,3984,3.515,3985,4.765,3986,4.765,3987,3.515,3988,3.515,3989,3.515,3990,5.405,3991,3.515,3992,6.497,3993,5.405,3994,3.515,3995,3.515,3996,3.515,3997,3.515,3998,3.515,3999,3.515]],["title/classes/TransitionModel.html",[0,0.189,2632,2.294]],["body/classes/TransitionModel.html",[0,0.243,2,0.93,3,0.102,4,0.102,5,0.088,6,0.228,7,0.134,14,0.132,15,0.413,17,0.341,18,0.015,19,0.295,21,0.228,29,0.49,54,0.206,59,0.517,68,0.582,105,1.579,115,0.369,117,0.846,124,2.437,150,0.63,176,0.463,179,0.507,194,0.617,277,0.33,278,0.63,282,0.862,290,0.006,291,0.009,292,0.006,308,0.727,310,0.517,313,0.787,360,0.789,361,0.789,462,3.323,498,2.794,640,5.683,676,2.629,692,2.189,706,4.792,716,0.607,748,1.358,904,2.814,935,3.231,955,2.105,1067,2.105,1499,3.328,1561,3.637,1574,3.42,1674,2.641,1760,2.423,1789,2.105,1790,2.105,1791,2.105,1792,2.105,1802,2.238,1869,2.238,1933,5.683,1949,1.885,2456,4.157,2544,1.885,2632,2.958,2810,4.573,2842,4.311,2986,3.626,3177,4.961,3178,4.573,3179,4.193,3220,2.58,3755,3.42,3864,4.573,3908,4.219,3909,2.58,3910,5.808,3911,5.683,3912,5.082,3913,5.082,3915,5.367,3917,5.082,3921,3.127,3922,2.814,3923,4.573,3924,2.814,3925,4.573,3926,4.573,3927,4.573,3928,4.573,3929,4.573,3930,4.573,3931,2.814,3932,4.573,3933,4.573,3934,4.573,3935,4.573,3936,2.814,3937,6.023,3938,3.127,3939,3.127,3940,3.127,3941,5.082,3942,5.082,3943,3.127,3944,3.127,3945,5.082,3946,2.814,3947,3.127,3948,4.395,3949,6.844,3950,3.127,3951,3.127,3952,3.127,3953,3.127,3954,3.127,3955,3.127,3956,3.127,3957,3.127,3958,3.127,3959,3.127,3960,3.127,3961,3.127,3962,3.127,3963,3.127,3964,3.127,3965,3.127,3966,3.127,3967,3.127,3968,3.127,3969,3.127,3970,4.395,3971,3.127,3972,5.42,3973,4.395,3974,3.127,3975,4.395,3976,5.082,3977,4.395,3978,4.395,3979,5.808,3980,3.127,3981,4.395,3982,4.395,3983,4.573,3984,5.513,3985,4.395,3986,4.395,3987,5.513,3988,4.395,3989,5.513,3990,5.082,3991,3.127,3992,6.316,3993,5.082,3994,3.127,3995,5.513,3996,5.513,3997,5.513,3998,5.513,3999,5.513,4000,5.063,4001,5.063,4002,5.063,4003,5.063,4004,5.063,4005,3.602,4006,3.602,4007,3.602,4008,3.602,4009,3.602,4010,3.602,4011,3.602,4012,3.602,4013,3.602,4014,3.602,4015,3.602,4016,3.602,4017,3.602,4018,3.602,4019,3.602,4020,3.602,4021,3.602,4022,3.602,4023,3.602,4024,3.602]],["title/components/TransitionSelectionComponent.html",[363,0.193,445,0.838]],["body/components/TransitionSelectionComponent.html",[0,0.261,3,0.113,4,0.154,5,0.098,6,0.219,7,0.131,14,0.146,15,0.444,17,0.322,18,0.015,19,0.28,21,0.322,29,0.763,32,0.676,54,0.13,59,0.677,98,2.204,103,0.473,105,1.537,115,0.403,117,0.784,123,0.768,134,1.042,150,0.471,176,0.439,179,0.574,194,0.646,251,0.853,252,0.853,277,0.693,281,0.568,290,0.007,291,0.01,292,0.007,299,3.119,310,0.555,313,0.709,316,0.594,325,0.568,326,1.458,360,0.676,361,0.676,363,0.305,364,0.853,365,1.302,366,0.993,367,0.993,369,0.92,370,1.695,371,1.117,372,0.993,374,1.302,375,0.886,376,1.352,377,1.302,378,0.853,379,1.65,380,0.993,381,0.993,382,0.886,383,0.993,384,0.853,385,0.993,386,0.853,387,0.993,388,0.993,389,0.853,390,1.726,391,0.886,392,0.993,393,0.853,394,0.954,395,0.886,396,0.993,397,0.853,398,0.993,399,0.853,400,0.993,401,0.821,402,1.537,403,0.821,404,0.956,405,1.473,406,0.993,407,0.886,408,0.993,409,0.853,410,0.853,411,0.821,412,0.993,413,1.506,414,1.206,415,0.993,416,0.853,417,0.853,418,0.701,419,0.993,420,0.853,421,0.993,422,0.853,423,0.993,424,0.853,425,0.853,426,1.352,427,0.853,428,0.821,429,0.993,430,0.853,431,0.993,432,0.853,433,1.53,434,0.993,435,0.789,436,1.352,437,1.472,438,0.853,439,1.352,440,0.853,441,0.853,442,0.853,443,0.853,444,0.993,445,1.417,446,1.6,447,0.956,448,0.821,449,1.302,450,0.993,454,1.253,490,1.347,500,2.089,508,1.987,517,1.651,594,3.235,598,3.472,609,2.333,612,2.845,630,2.204,676,1.653,692,1.727,872,3.466,881,1.78,882,1.584,1003,0.993,1033,3.841,1073,3.412,1126,1.892,1172,2.653,1173,2.653,1178,2.653,1179,2.653,1180,3.612,1182,3.612,1191,2.653,1192,2.653,1200,2.653,1216,2.089,1248,3.832,1278,2.089,1325,3.466,1346,1.52,1394,1.296,1707,2.653,1711,2.459,1788,3.878,1829,2.204,1847,3.177,2572,2.86,2632,2.333,3002,2.481,3007,3.466,3011,3.466,3139,3.119,3172,3.466,3221,3.466,3334,3.119,3335,4.72,3352,4.72,3353,3.466,3354,3.466,3633,5.367,3908,5.026,3911,3.119,3915,2.86,3946,3.119,3972,3.119,3983,5.184,4025,6.703,4026,6.637,4027,5.437,4028,6.637,4029,5.437,4030,6.637,4031,3.993,4032,5.437,4033,3.993,4034,5.437,4035,3.993,4036,5.437,4037,3.993,4038,3.993,4039,3.993,4040,3.993,4041,3.993,4042,3.993,4043,3.993,4044,5.761,4045,3.993,4046,3.993,4047,3.993,4048,3.993,4049,3.993,4050,5.437,4051,3.993,4052,6.182,4053,3.993,4054,5.437,4055,7.164,4056,5.437,4057,3.993,4058,3.993,4059,3.993,4060,3.993,4061,3.993,4062,3.993,4063,3.993,4064,3.993,4065,3.993,4066,3.466,4067,3.993,4068,3.993,4069,3.993,4070,3.993,4071,3.993,4072,3.993,4073,3.993,4074,3.993,4075,3.993,4076,6.182,4077,3.993,4078,3.993,4079,5.437,4080,5.437,4081,5.437]],["title/coverage.html",[4082,4.665]],["body/coverage.html",[0,0.393,1,2.306,5,0.091,6,0.238,7,0.14,8,4.608,17,0.167,18,0.015,26,3.366,28,2.049,31,1.253,33,1.473,36,2.049,39,2.169,41,2.169,43,1.605,49,2.049,52,2.049,55,2.466,64,2.659,113,2.169,123,0.461,135,0.734,277,0.672,281,0.847,290,0.007,291,0.009,292,0.007,293,3.575,294,2.466,296,4.039,297,4.039,329,2.659,334,2.466,363,0.403,364,0.793,368,3.222,378,0.793,382,0.824,384,0.793,386,0.793,389,0.793,391,0.824,393,0.793,394,1.129,395,0.824,397,0.793,399,0.793,401,0.763,403,0.763,407,0.824,409,0.793,410,0.793,413,0.763,416,0.793,417,0.793,418,0.651,420,0.793,422,0.793,424,0.793,425,0.793,427,0.793,428,0.763,430,0.793,432,0.793,433,0.856,435,0.734,437,0.763,438,0.793,440,0.793,441,0.793,442,0.793,443,0.793,445,0.793,448,0.763,451,3.222,452,3.222,453,1.537,503,3.222,504,3.222,524,3.222,525,4.203,592,4.647,593,3.222,605,2.659,648,3.222,716,1.402,783,2.466,785,5.017,786,5.472,881,0.995,883,3.222,886,2.466,888,2.899,890,2.899,892,2.899,894,2.899,896,2.899,898,2.899,905,1.679,906,3.222,907,3.222,1009,4.488,1010,4.261,1232,4.203,1233,4.203,1243,2.705,1314,2.899,1315,4.488,1421,3.222,1422,3.222,1462,2.466,1489,2.899,1522,3.222,1536,2.306,1537,4.495,1551,1.473,1554,2.306,1559,2.306,1566,2.306,1574,2.169,1701,3.212,1760,1.537,1761,3.997,1762,3.997,1770,1.942,1772,1.942,1787,1.942,1913,3.222,1914,3.222,2040,3.222,2071,2.306,2138,3.222,2139,5.165,2347,3.222,2358,2.899,2359,4.488,2360,4.488,2508,2.169,2509,4.039,2510,4.039,2517,2.306,2544,1.942,2551,4.039,2552,4.039,2561,2.659,2617,4.647,2624,2.659,2632,2.169,2634,2.466,2759,3.222,2760,5.026,2903,3.703,2944,3.222,3039,3.222,3085,3.222,3260,4.039,3322,3.222,3334,4.039,3375,3.222,3436,2.659,3484,4.039,3564,5.165,3737,3.222,3746,3.222,3755,2.169,3757,3.222,3758,3.222,3767,3.222,3908,2.466,3909,3.703,4025,3.222,4082,3.222,4083,2.899,4084,3.712,4085,7.687,4086,3.712,4087,3.712,4088,3.712,4089,3.712,4090,3.712,4091,3.712,4092,6.434,4093,3.712,4094,5.165,4095,5.17,4096,3.712,4097,5.17,4098,3.712,4099,5.95,4100,3.712,4101,3.712,4102,3.712,4103,3.712,4104,3.712,4105,3.712,4106,3.712,4107,5.17,4108,5.95,4109,3.712,4110,5.95,4111,5.95,4112,5.17,4113,3.712,4114,3.712,4115,5.95,4116,3.712,4117,3.712,4118,5.17,4119,3.712,4120,3.712,4121,5.17,4122,3.712,4123,6.434,4124,3.712,4125,6.765,4126,3.712,4127,3.712,4128,3.712,4129,7.541,4130,3.222,4131,3.712,4132,5.17,4133,3.712,4134,3.712,4135,3.712,4136,3.712,4137,5.95,4138,3.712,4139,3.712,4140,3.712,4141,3.712,4142,3.712,4143,3.712,4144,3.712,4145,3.712,4146,3.712,4147,3.712,4148,5.17,4149,5.17,4150,3.712,4151,3.712,4152,3.712,4153,5.17,4154,3.712,4155,3.712,4156,3.712,4157,3.712,4158,3.712,4159,5.17,4160,3.712,4161,3.712,4162,3.712,4163,3.712,4164,3.222,4165,3.222,4166,3.222,4167,3.222,4168,3.712]],["title/dependencies.html",[302,2.342,775,2.936]],["body/dependencies.html",[18,0.015,24,3.585,290,0.011,291,0.013,292,0.011,324,2.154,775,3.812,777,5.401,1164,3.387,1523,5.327,1534,4.793,4044,5.327,4169,6.136,4170,6.136,4171,6.136,4172,6.136,4173,6.136,4174,6.136,4175,6.136,4176,6.136,4177,6.136,4178,6.136,4179,6.136,4180,5.327,4181,6.136,4182,7.133,4183,6.136,4184,6.136,4185,6.136,4186,6.136,4187,6.136,4188,6.136,4189,6.136,4190,6.136,4191,6.136,4192,6.136,4193,6.136,4194,6.136,4195,6.136,4196,7.133,4197,6.136,4198,6.136,4199,6.136,4200,6.136,4201,6.136]],["title/miscellaneous/enumerations.html",[4202,2.342,4203,4.102]],["body/miscellaneous/enumerations.html",[3,0.16,6,0.215,7,0.126,14,0.206,18,0.015,45,3.218,46,3.748,47,4.512,172,4.044,221,4.512,223,3.968,251,1.206,252,1.45,278,0.72,281,0.804,290,0.01,291,0.012,292,0.01,428,1.395,498,4.02,499,2.481,500,3.553,526,2.954,528,5.305,713,3.553,935,3.117,1428,4.411,1434,4.411,1450,4.219,1489,4.411,1499,2.808,1500,4.902,1501,4.902,1527,4.411,1534,5.305,1761,3.508,1762,4.219,1789,3.968,1790,4.255,1791,4.255,1792,4.255,1793,4.512,2167,4.864,2169,5.895,2842,4.219,3755,3.299,3909,4.044,3915,4.864,3922,4.411,3923,4.411,3924,4.411,3925,4.411,3926,4.411,3927,4.411,3928,4.411,3929,4.411,3930,4.411,3931,4.411,3932,4.411,3933,4.411,3934,4.411,3935,4.411,3936,4.411,4202,4.044,4203,4.902,4204,7.557,4205,5.647,4206,5.647,4207,6.791,4208,5.647,4209,5.647,4210,6.791,4211,6.791,4212,5.647,4213,6.791,4214,6.791]],["title/index.html",[14,0.12,4215,2.839,4216,2.839]],["body/index.html",[7,0.134,18,0.015,29,0.701,75,2.31,138,5.026,221,3.707,223,3.26,290,0.01,291,0.012,292,0.01,307,2.775,308,0.57,338,3.996,371,1.691,394,1.352,641,6.289,678,3.707,692,2.413,696,4.359,775,3.466,816,3.996,822,3.707,1089,3.707,1132,4.479,1243,2.919,1450,3.466,1671,3.26,1861,3.466,1961,4.359,1962,4.829,1972,3.996,2109,4.844,2145,4.844,2163,5.267,2167,3.996,2805,3.707,2982,4.359,3091,6.533,3218,4.359,3693,4.359,3722,5.853,3791,5.853,3803,5.853,3811,4.844,4083,5.66,4217,5.58,4218,5.58,4219,5.58,4220,5.58,4221,5.58,4222,5.58,4223,7.526,4224,5.58,4225,5.58,4226,5.58,4227,5.58,4228,5.58,4229,5.58,4230,5.58,4231,5.58,4232,5.58,4233,5.58,4234,5.58,4235,5.58,4236,5.58,4237,5.58,4238,7.246,4239,7.246,4240,6.742,4241,5.58,4242,5.58,4243,5.58,4244,5.58,4245,5.58,4246,5.58,4247,7.526,4248,5.58,4249,5.58,4250,5.58,4251,5.58,4252,5.58,4253,5.58,4254,5.58,4255,5.58,4256,4.844,4257,5.58,4258,4.844,4259,5.58,4260,7.706,4261,5.58,4262,5.58,4263,5.58,4264,5.58,4265,5.58,4266,5.58,4267,5.58,4268,5.58,4269,5.58,4270,5.58]],["title/license.html",[800,2.342,4215,2.839,4216,2.839]],["body/license.html",[0,0.166,4,0.216,5,0.176,9,1.492,18,0.01,19,0.126,21,0.155,32,0.429,77,2.144,88,1.905,115,0.332,139,2.472,253,1.905,288,3.099,290,0.009,291,0.009,292,0.006,341,3.359,395,0.766,469,1.078,510,2.996,544,2.604,586,1.905,608,2.996,644,2.996,676,1.429,678,2.293,696,5.621,703,2.016,708,2.696,792,5.978,797,2.696,798,5.72,799,4.867,800,5.84,801,4.467,802,4.467,803,4.467,804,2.696,805,2.696,806,3.799,807,2.696,808,4.867,809,3.799,810,4.467,811,4.467,812,4.867,813,3.837,814,4.467,815,3.837,816,4.716,817,4.467,818,5.978,819,3.837,820,3.837,821,3.837,822,2.293,823,2.472,824,2.696,825,2.696,826,4.467,827,2.696,902,2.996,928,5.143,939,2.293,942,2.959,968,2.996,969,5.481,976,1.716,977,2.996,1003,0.858,1067,2.016,1099,2.996,1105,4.964,1126,2.952,1132,3.799,1163,2.57,1346,1.313,1380,2.696,1382,2.996,1383,2.996,1447,3.837,1531,2.996,1553,3.263,1599,2.016,1632,3.263,1639,2.124,1675,2.293,1741,2.016,1800,2.144,1804,1.905,1829,3.156,1855,2.293,2144,6.356,2164,4.964,2168,2.996,2287,2.996,2415,2.996,2462,2.996,2712,3.837,2713,3.837,2727,3.837,2807,2.996,2969,3.837,2973,2.996,2982,2.696,2997,4.264,3151,2.696,3183,2.696,3218,4.467,3220,4.462,3301,2.696,3310,2.472,3455,2.472,3693,6.377,3799,2.996,4066,2.996,4083,4.467,4130,2.996,4256,2.996,4258,2.996,4271,3.451,4272,3.451,4273,3.451,4274,7.323,4275,6.231,4276,6.584,4277,7.758,4278,7.427,4279,3.451,4280,3.451,4281,7.427,4282,6.843,4283,7.427,4284,4.912,4285,3.451,4286,6.584,4287,3.451,4288,3.451,4289,3.451,4290,6.231,4291,3.451,4292,3.451,4293,6.231,4294,3.451,4295,5.719,4296,4.912,4297,4.912,4298,3.451,4299,7.875,4300,6.231,4301,4.912,4302,3.451,4303,4.912,4304,3.451,4305,3.451,4306,3.451,4307,3.451,4308,3.451,4309,3.451,4310,5.719,4311,3.451,4312,4.912,4313,3.451,4314,3.451,4315,6.843,4316,6.231,4317,3.451,4318,3.451,4319,3.451,4320,3.451,4321,3.451,4322,3.451,4323,5.719,4324,3.451,4325,7.323,4326,3.451,4327,4.912,4328,3.451,4329,7.875,4330,7.906,4331,3.451,4332,3.451,4333,3.451,4334,3.451,4335,3.451,4336,4.912,4337,5.719,4338,3.451,4339,3.451,4340,3.451,4341,3.451,4342,6.231,4343,6.584,4344,3.451,4345,4.912,4346,6.231,4347,4.912,4348,3.451,4349,6.584,4350,4.912,4351,3.451,4352,3.451,4353,5.719,4354,3.451,4355,3.451,4356,3.451,4357,3.451,4358,4.912,4359,3.451,4360,3.451,4361,3.451,4362,5.719,4363,3.451,4364,3.451,4365,5.719,4366,3.451,4367,3.451,4368,3.451,4369,7.427,4370,3.451,4371,3.451,4372,4.912,4373,5.719,4374,4.912,4375,4.912,4376,4.912,4377,4.912,4378,4.912,4379,5.719,4380,4.912,4381,4.912,4382,4.912,4383,4.912,4384,3.451,4385,4.912,4386,3.451,4387,6.584,4388,7.04,4389,4.912,4390,4.912,4391,4.912,4392,4.912,4393,3.451,4394,3.451,4395,3.451,4396,5.719,4397,3.451,4398,3.451,4399,4.912,4400,4.912,4401,3.451,4402,3.451,4403,3.451,4404,3.451,4405,3.451,4406,3.451,4407,3.451,4408,4.912,4409,3.451,4410,3.451,4411,3.451,4412,3.451,4413,3.451,4414,3.451,4415,3.451,4416,3.451,4417,3.451,4418,3.451,4419,3.451,4420,3.451,4421,7.196,4422,3.451,4423,3.451,4424,3.451,4425,3.451,4426,6.231,4427,4.912,4428,6.231,4429,3.451,4430,3.451,4431,3.451,4432,3.451,4433,3.451,4434,3.451,4435,4.912,4436,4.912,4437,3.451,4438,3.451,4439,4.912,4440,3.451,4441,3.451,4442,6.584,4443,3.451,4444,3.451,4445,3.451,4446,3.451,4447,3.451,4448,3.451,4449,5.719,4450,3.451,4451,3.451,4452,3.451,4453,3.451,4454,3.451,4455,3.451,4456,3.451,4457,3.451,4458,4.912,4459,3.451,4460,3.451,4461,3.451,4462,3.451,4463,3.451,4464,3.451,4465,3.451,4466,3.451,4467,3.451,4468,6.231,4469,4.912,4470,4.912,4471,3.451,4472,3.451,4473,3.451,4474,3.451,4475,3.451,4476,3.451,4477,3.451,4478,3.451,4479,4.912,4480,3.451,4481,3.451,4482,3.451,4483,6.584,4484,3.451,4485,3.451,4486,3.451,4487,3.451,4488,3.451,4489,3.451,4490,3.451,4491,3.451,4492,6.584,4493,3.451,4494,3.451,4495,3.451,4496,3.451,4497,3.451,4498,3.451,4499,3.451,4500,3.451,4501,3.451,4502,3.451,4503,3.451,4504,3.451,4505,3.451,4506,3.451,4507,3.451,4508,5.719,4509,3.451,4510,3.451,4511,3.451,4512,3.451,4513,4.912,4514,3.451,4515,3.451,4516,3.451,4517,3.451,4518,3.451,4519,3.451,4520,3.451,4521,3.451,4522,3.451,4523,3.451,4524,3.451,4525,3.451,4526,3.451,4527,3.451,4528,4.912,4529,3.451,4530,3.451,4531,4.912,4532,4.912,4533,3.451,4534,3.451,4535,3.451,4536,3.451,4537,3.451,4538,3.451,4539,3.451,4540,3.451,4541,3.451,4542,3.451,4543,3.451]],["title/modules.html",[774,3.571]],["body/modules.html",[18,0.013,290,0.012,291,0.013,292,0.012,773,4.28,774,4.28,1067,4.286,1089,4.874,1507,4.614,4544,7.336,4545,7.336]],["title/overview.html",[4546,4.665]],["body/overview.html",[2,1.276,18,0.015,33,2.723,36,3.788,39,4.01,41,4.01,49,3.788,52,3.788,250,2.138,290,0.009,291,0.011,292,0.009,295,3.284,364,1.648,365,1.183,375,1.097,378,1.056,382,1.713,384,1.466,386,1.466,389,1.466,391,1.713,393,1.683,397,1.466,399,1.466,401,1.41,403,1.41,407,1.523,409,1.466,410,1.466,413,1.41,416,1.466,417,1.466,420,1.466,422,1.466,424,1.466,425,1.466,427,1.466,430,1.466,432,1.466,435,1.526,437,1.586,438,1.466,440,1.466,441,1.466,442,1.466,443,1.466,445,1.466,448,1.41,595,3.54,703,2.888,772,3.284,773,5.61,774,3.284,775,3.071,776,3.861,777,3.54,778,3.861,779,4.291,780,4.291,781,4.291,782,4.291,783,4.56,784,4.886,1003,1.555,1507,5.689,1508,4.291,1509,4.291,1511,4.291,1745,3.453,3455,3.54,3755,2.888,4094,4.291,4546,4.291,4547,6.256]],["title/miscellaneous/variables.html",[4202,2.342,4548,4.102]],["body/miscellaneous/variables.html",[6,0.148,7,0.087,14,0.19,17,0.36,18,0.015,26,4.128,59,0.771,103,0.833,188,3.731,192,3.731,278,0.693,290,0.009,291,0.012,292,0.009,303,5.741,308,0.817,332,6.318,351,5.741,371,1.621,785,3.731,786,6.099,829,6.685,888,5.05,889,4.522,890,5.05,891,4.522,892,5.05,893,4.522,894,5.05,895,4.522,896,5.05,897,4.522,898,5.05,899,4.522,942,3.178,1436,5.264,4164,4.522,4165,4.522,4166,4.522,4167,4.522,4180,6.38,4202,3.731,4548,4.522,4549,7.702,4550,5.209,4551,5.209,4552,5.209,4553,5.209,4554,7.35,4555,7.35,4556,7.35,4557,7.35,4558,7.35,4559,7.35,4560,7.35,4561,7.35,4562,7.029,4563,7.35,4564,7.029,4565,7.35,4566,7.029,4567,7.35,4568,7.029,4569,5.209,4570,5.209,4571,5.209,4572,5.209,4573,5.209,4574,5.209]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":716,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{}}}],["0.5.1",{"_index":4187,"title":{},"body":{"dependencies.html":{}}}],["0.7.2",{"_index":4185,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":4201,"title":{},"body":{"dependencies.html":{}}}],["0.9.2017.07.28",{"_index":57,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["0/1",{"_index":4085,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":4112,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":4123,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":4121,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":4134,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":4122,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":4093,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":4120,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":4138,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":4097,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":4107,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":4126,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":4124,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4125,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4099,"title":{},"body":{"coverage.html":{}}}],["0/47",{"_index":4143,"title":{},"body":{"coverage.html":{}}}],["0/48",{"_index":4136,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":4092,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":4146,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":4137,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":4110,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":4111,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1003,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{},"overview.html":{}}}],["1).tostring",{"_index":1569,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/TextNode.html":{}}}],["1.1.20150312",{"_index":4176,"title":{},"body":{"dependencies.html":{}}}],["1.1.6",{"_index":4197,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":1526,"title":{},"body":{"classes/Examples.html":{}}}],["1/12",{"_index":4154,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":4095,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":4152,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":4131,"title":{},"body":{"coverage.html":{}}}],["1/23",{"_index":4147,"title":{},"body":{"coverage.html":{}}}],["1/27",{"_index":4103,"title":{},"body":{"coverage.html":{}}}],["1/29",{"_index":4117,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":4149,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1278,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["10/35",{"_index":4161,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1297,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["1000000",{"_index":2661,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{}}}],["1000000).tostring",{"_index":2538,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["11",{"_index":4118,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":4105,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":4101,"title":{},"body":{"coverage.html":{}}}],["14/34",{"_index":4089,"title":{},"body":{"coverage.html":{}}}],["1].touppercase",{"_index":3842,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["2",{"_index":1745,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"classes/TextNode.html":{},"overview.html":{}}}],["2.0",{"_index":802,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["2.0.0",{"_index":4191,"title":{},"body":{"dependencies.html":{}}}],["2.20.1",{"_index":4189,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":4174,"title":{},"body":{"dependencies.html":{}}}],["2.5.5",{"_index":4178,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1532,"title":{},"body":{"classes/Examples.html":{}}}],["2/18",{"_index":4119,"title":{},"body":{"coverage.html":{}}}],["2/23",{"_index":4163,"title":{},"body":{"coverage.html":{}}}],["2/30",{"_index":4144,"title":{},"body":{"coverage.html":{}}}],["2/31",{"_index":4109,"title":{},"body":{"coverage.html":{}}}],["2/49",{"_index":4133,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":4139,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":921,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["2004",{"_index":4272,"title":{},"body":{"license.html":{}}}],["2017",{"_index":793,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["204",{"_index":919,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["23",{"_index":4115,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":2484,"title":{},"body":{"classes/LineModel.html":{}}}],["28",{"_index":4160,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1701,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["3.0.1",{"_index":4192,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":4195,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":4183,"title":{},"body":{"dependencies.html":{}}}],["3/13",{"_index":4116,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":64,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{}}}],["30).tostring",{"_index":1209,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["300",{"_index":1296,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["30000",{"_index":63,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["32",{"_index":4547,"title":{},"body":{"overview.html":{}}}],["33",{"_index":4148,"title":{},"body":{"coverage.html":{}}}],["34",{"_index":4127,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":4141,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":4132,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":1523,"title":{},"body":{"classes/Examples.html":{},"dependencies.html":{}}}],["4.1.2",{"_index":4172,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":4181,"title":{},"body":{"dependencies.html":{}}}],["4/54",{"_index":4135,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":3189,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["41",{"_index":4088,"title":{},"body":{"coverage.html":{}}}],["43",{"_index":4113,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":2502,"title":{},"body":{"classes/LineModel.html":{}}}],["5/21",{"_index":4158,"title":{},"body":{"coverage.html":{}}}],["5/24",{"_index":4140,"title":{},"body":{"coverage.html":{}}}],["5/40",{"_index":4106,"title":{},"body":{"coverage.html":{}}}],["5/43",{"_index":4145,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":4130,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["500",{"_index":738,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["52",{"_index":4155,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":4108,"title":{},"body":{"coverage.html":{}}}],["6.1.0",{"_index":4171,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":4199,"title":{},"body":{"dependencies.html":{}}}],["6/17",{"_index":4142,"title":{},"body":{"coverage.html":{}}}],["6/20",{"_index":4098,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":4090,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":4094,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["7/11",{"_index":4091,"title":{},"body":{"coverage.html":{}}}],["7/16",{"_index":4114,"title":{},"body":{"coverage.html":{}}}],["7/30",{"_index":4151,"title":{},"body":{"coverage.html":{}}}],["7/48",{"_index":4102,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":4153,"title":{},"body":{"coverage.html":{}}}],["8/23",{"_index":4128,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1741,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"components/MappingFieldContainerComponent.html":{},"classes/TextNode.html":{},"license.html":{}}}],["9/17",{"_index":4156,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":3970,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["_cfg",{"_index":2146,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["_issource",{"_index":3583,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["_lmcinstance",{"_index":16,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["_nodes",{"_index":1578,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["_showmappingpreview",{"_index":148,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["_type",{"_index":3594,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["above",{"_index":4256,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":1541,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["accept",{"_index":1945,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["acceptance",{"_index":4511,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":4508,"title":{},"body":{"license.html":{}}}],["acceptinput",{"_index":2947,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acceptinput(event",{"_index":2964,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["access",{"_index":2332,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["accessing",{"_index":2246,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["accessors",{"_index":1034,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/FileManagementService.html":{}}}],["accordingly",{"_index":3808,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["acp",{"_index":2998,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acp.length",{"_index":3008,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acp[0].value",{"_index":3009,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acp[1].value",{"_index":3010,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acpv",{"_index":3004,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acpv.push(argument",{"_index":3006,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["act",{"_index":4517,"title":{},"body":{"license.html":{}}}],["acting",{"_index":4288,"title":{},"body":{"license.html":{}}}],["action",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["action's",{"_index":1799,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["action'},{'name",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.argumentvalues",{"_index":1818,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionComponent.html":{}}}],["action.argumentvalues.length",{"_index":1819,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["action.argumentvalues.values",{"_index":3080,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.argumentvalues[argvalindex].value",{"_index":3030,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["action.component",{"_index":867,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["action.component.html",{"_index":3040,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts",{"_index":3039,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"coverage.html":{}}}],["action.component.ts:30",{"_index":3046,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:31",{"_index":3048,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:32",{"_index":3047,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:33",{"_index":3049,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:35",{"_index":3059,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:39",{"_index":3061,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:43",{"_index":3050,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:47",{"_index":3055,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:56",{"_index":3063,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:66",{"_index":3052,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:93",{"_index":3057,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:97",{"_index":3054,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.definition",{"_index":1815,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["action.model",{"_index":1949,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["action.model.ts",{"_index":1762,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["action.model.ts:108",{"_index":1908,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:124",{"_index":1910,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:136",{"_index":1911,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:147",{"_index":1906,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:179",{"_index":1907,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:209",{"_index":1773,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:21",{"_index":1883,"title":{},"body":{"classes/FieldActionArgument.html":{}}}],["action.model.ts:210",{"_index":1777,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:212",{"_index":1775,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:213",{"_index":1776,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:214",{"_index":1774,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:215",{"_index":1771,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:217",{"_index":1779,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:22",{"_index":1885,"title":{},"body":{"classes/FieldActionArgument.html":{}}}],["action.model.ts:23",{"_index":1886,"title":{},"body":{"classes/FieldActionArgument.html":{}}}],["action.model.ts:235",{"_index":1782,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:24",{"_index":1884,"title":{},"body":{"classes/FieldActionArgument.html":{}}}],["action.model.ts:248",{"_index":1785,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:28",{"_index":1887,"title":{},"body":{"classes/FieldActionArgumentValue.html":{}}}],["action.model.ts:29",{"_index":1888,"title":{},"body":{"classes/FieldActionArgumentValue.html":{}}}],["action.model.ts:40",{"_index":1901,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:41",{"_index":1898,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:42",{"_index":1897,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:43",{"_index":1899,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:44",{"_index":1903,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:45",{"_index":1904,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:46",{"_index":1900,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:47",{"_index":1902,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:58",{"_index":1905,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:74",{"_index":1912,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:93",{"_index":1909,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.name",{"_index":1814,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionComponent.html":{}}}],["action.service",{"_index":51,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["action.service.ts",{"_index":1914,"title":{},"body":{"injectables/FieldActionService.html":{},"coverage.html":{}}}],["action.service.ts:104",{"_index":1926,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:132",{"_index":1928,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:165",{"_index":1938,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:27",{"_index":1940,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:28",{"_index":1939,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:29",{"_index":1947,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:30",{"_index":1946,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:32",{"_index":1925,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:39",{"_index":1930,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:81",{"_index":1932,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:97",{"_index":1935,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.setargumentvalue(arg.name",{"_index":1824,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["actionconfigparamselectionchanged",{"_index":2948,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["actionconfigparamselectionchanged(event",{"_index":2966,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["actionconfigparamval",{"_index":3038,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["actionconfigs",{"_index":1981,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actionconfigs.push(fieldactionconfig",{"_index":1995,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondef",{"_index":1976,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondef.name",{"_index":1977,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondefinition",{"_index":2894,"title":{},"body":{"classes/MappingDefinition.html":{},"components/MappingFieldDetailComponent.html":{}}}],["actiondefinition.populatefieldaction(action",{"_index":2898,"title":{},"body":{"classes/MappingDefinition.html":{},"components/MappingFieldDetailComponent.html":{}}}],["actiondefinitions",{"_index":1915,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail",{"_index":1929,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.actionschema",{"_index":2016,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.actionschema.properties[key",{"_index":2019,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.custom",{"_index":2006,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.method",{"_index":2012,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.multiplicity",{"_index":2014,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.name",{"_index":2004,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.sourcetype",{"_index":2008,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.targettype",{"_index":2010,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actionindex",{"_index":2955,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["actionname",{"_index":1933,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["actions",{"_index":1959,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["actionsexistforfield",{"_index":3041,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["active",{"_index":699,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/LineModel.html":{},"components/MappingListComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/NamespaceListComponent.html":{}}}],["activemapping",{"_index":2454,"title":{},"body":{"classes/LineModel.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["activemapping.islookupmode",{"_index":2923,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["acts",{"_index":4490,"title":{},"body":{"license.html":{}}}],["actual",{"_index":2288,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["actual_component",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["actualdelimiter",{"_index":3910,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["add",{"_index":1639,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/NamespaceListComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["adddocument(docinitmodel",{"_index":193,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["adddocuments(docmodels",{"_index":232,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["added",{"_index":1620,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["addeditnamespace",{"_index":3508,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["addeditnamespace(ns",{"_index":3516,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["addendum",{"_index":4441,"title":{},"body":{"license.html":{}}}],["adderror",{"_index":1423,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["adderror(message",{"_index":1435,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["addfield(field",{"_index":2685,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["adding",{"_index":342,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["additional",{"_index":4442,"title":{},"body":{"license.html":{}}}],["additions",{"_index":4344,"title":{},"body":{"license.html":{}}}],["addline(l",{"_index":2432,"title":{},"body":{"classes/LineModel.html":{}}}],["addlinefromparams(sourcex",{"_index":2423,"title":{},"body":{"classes/LineModel.html":{}}}],["addmappedfield(mappedfield",{"_index":2700,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["addmapping",{"_index":3338,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/ToolbarComponent.html":{}}}],["addtable",{"_index":2766,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["addtable(table",{"_index":2795,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["addtransformation",{"_index":3195,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["addvalidationerror(message",{"_index":2663,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["adjust",{"_index":1144,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["adm",{"_index":337,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["adm,.jar",{"_index":3853,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["admhttptimeout",{"_index":62,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["admredrawmappinglinesevent",{"_index":1,"title":{"classes/AdmRedrawMappingLinesEvent.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/LineModel.html":{},"coverage.html":{}}}],["advised",{"_index":4506,"title":{},"body":{"license.html":{}}}],["aftercontentchecked",{"_index":2348,"title":{},"body":{"directives/FocusDirective.html":{}}}],["afterviewinit",{"_index":1239,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["again",{"_index":3876,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["against",{"_index":4400,"title":{},"body":{"license.html":{}}}],["aggregatebuffer",{"_index":2273,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["agree",{"_index":4520,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":811,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["agreement",{"_index":4455,"title":{},"body":{"license.html":{}}}],["alertmodule",{"_index":838,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["alertmodule.forroot",{"_index":897,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["alertmoduleforroot",{"_index":896,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alias",{"_index":2096,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["alleging",{"_index":4405,"title":{},"body":{"license.html":{}}}],["allfields",{"_index":3597,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["allowdrop",{"_index":1016,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["allowdrop(event",{"_index":1044,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["alone",{"_index":644,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"license.html":{}}}],["along",{"_index":4433,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":4440,"title":{},"body":{"license.html":{}}}],["alphabetizefields(fields",{"_index":1352,"title":{},"body":{"classes/EnumValue.html":{}}}],["alphebatize",{"_index":3729,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["already",{"_index":501,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["alt",{"_index":3859,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["ampersand",{"_index":3923,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["and(b",{"_index":4417,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":4423,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":4429,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":4514,"title":{},"body":{"license.html":{}}}],["angle",{"_index":521,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["angular",{"_index":300,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["angular/animations",{"_index":4170,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":831,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["angular/common/http",{"_index":322,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["angular/core",{"_index":316,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"modules/ExampleAppModule.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["angular/forms",{"_index":837,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["angular/platform",{"_index":1088,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"modules/ExampleAppModule.html":{},"classes/LineModel.html":{}}}],["angular/router",{"_index":1516,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["angular2",{"_index":2460,"title":{},"body":{"classes/LineModel.html":{}}}],["annotations",{"_index":1531,"title":{},"body":{"classes/Examples.html":{},"license.html":{}}}],["another",{"_index":4257,"title":{},"body":{"index.html":{}}}],["answer",{"_index":1734,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["answer.push(fn",{"_index":1749,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["answer.push(new",{"_index":1742,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["any_date",{"_index":1840,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["apache",{"_index":799,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["apihttpxsrftokenextractor",{"_index":294,"title":{"injectables/ApiHttpXsrfTokenExtractor.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{},"coverage.html":{}}}],["apixsrfinterceptor",{"_index":334,"title":{"interceptors/ApiXsrfInterceptor.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{},"coverage.html":{}}}],["app",{"_index":3881,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["app.component",{"_index":604,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["app.component.ts",{"_index":4096,"title":{},"body":{"coverage.html":{}}}],["app.module.ts",{"_index":1513,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["appcomponent",{"_index":364,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":977,"title":{},"body":{"classes/DataMapperUtil.html":{},"license.html":{}}}],["append",{"_index":1641,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["appended",{"_index":1637,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["appendfieldnode(mfield",{"_index":1753,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["appendix",{"_index":4327,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":809,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldDetailComponent.html":{},"license.html":{}}}],["application/json",{"_index":1942,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["application/octet",{"_index":1943,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["applied",{"_index":1848,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["applies",{"_index":1855,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"license.html":{}}}],["appliestofield",{"_index":1889,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["appliestofield(mapping",{"_index":1807,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["appliestosourcefield",{"_index":1890,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["appliestosourcefield(mapping",{"_index":1850,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["appliestotargetfield",{"_index":1891,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["appliestotargetfield(mapping",{"_index":1862,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["apply",{"_index":4528,"title":{},"body":{"license.html":{}}}],["appropriate",{"_index":4535,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":4477,"title":{},"body":{"license.html":{}}}],["archive",{"_index":3807,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["archives",{"_index":4542,"title":{},"body":{"license.html":{}}}],["area",{"_index":2305,"title":{},"body":{"injectables/FileManagementService.html":{},"components/MappingFieldContainerComponent.html":{}}}],["arg",{"_index":1820,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["argconfig",{"_index":2956,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argconfig.values",{"_index":3005,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argconfig.values[argvalindex",{"_index":3034,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argconfigname",{"_index":2990,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument",{"_index":1826,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["argument'},{'name",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["argument.component",{"_index":868,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["argument.component.html",{"_index":2945,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts",{"_index":2944,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"coverage.html":{}}}],["argument.component.ts:125",{"_index":2977,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:139",{"_index":2985,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:29",{"_index":2958,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:30",{"_index":2959,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:31",{"_index":2961,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:32",{"_index":2960,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:33",{"_index":2962,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:34",{"_index":2963,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:36",{"_index":2999,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:38",{"_index":2991,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:45",{"_index":2972,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:55",{"_index":2965,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:64",{"_index":2975,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:77",{"_index":2993,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:92",{"_index":2967,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.name",{"_index":1827,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["argumentdefinition",{"_index":2021,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentdefinition.name",{"_index":2022,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentdefinition.serviceobject",{"_index":2027,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentdefinition.type",{"_index":2023,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentdefinition.values",{"_index":2025,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentname",{"_index":1783,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["arguments",{"_index":1795,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionComponent.html":{}}}],["argumentvalues",{"_index":1763,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["argval",{"_index":3062,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["argvalindex",{"_index":2957,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argvalue",{"_index":1875,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["argvalue.name",{"_index":1877,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["arising",{"_index":4496,"title":{},"body":{"license.html":{}}}],["array",{"_index":499,"title":{},"body":{"components/ClassNameComponent.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["arraybuffer",{"_index":2254,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["arraydoesnotcontainerror",{"_index":1424,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["arraydoesnotcontainerror(message",{"_index":1438,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["arrays",{"_index":2285,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["arrow",{"_index":519,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["asserted",{"_index":4526,"title":{},"body":{"license.html":{}}}],["associated",{"_index":2415,"title":{},"body":{"classes/LineModel.html":{},"license.html":{}}}],["assume",{"_index":4480,"title":{},"body":{"license.html":{}}}],["async",{"_index":911,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["async(result",{"_index":2324,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["async(value",{"_index":2307,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["asynchronous",{"_index":940,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/ToolbarComponent.html":{}}}],["asynchronously",{"_index":947,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["at_sign",{"_index":3924,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["atlas",{"_index":220,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["atlasmap",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["atlasmapcatalogname",{"_index":2256,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["atlasmapnavbarcomponent",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["atlasmapping",{"_index":2213,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["atlasmap}/standalone",{"_index":4249,"title":{},"body":{"index.html":{}}}],["atlasmap}/ui",{"_index":4266,"title":{},"body":{"index.html":{}}}],["atlasserviceurl",{"_index":4561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["atsign",{"_index":3953,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["attach",{"_index":4529,"title":{},"body":{"license.html":{}}}],["attached",{"_index":4326,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":4268,"title":{},"body":{"index.html":{}}}],["attempting",{"_index":2995,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["attribute",{"_index":2080,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["attributes",{"_index":3023,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["attributes.getnameditem('actionindex').value",{"_index":3028,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["attributes.getnameditem('argvalindex').value",{"_index":3027,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["attributes.getnameditem('value').value",{"_index":3026,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["attribution",{"_index":4426,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":4284,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":4323,"title":{},"body":{"license.html":{}}}],["autocreate",{"_index":2522,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["automatically",{"_index":2109,"title":{},"body":{"components/FieldEditComponent.html":{},"index.html":{}}}],["available",{"_index":678,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/FileManagementService.html":{},"index.html":{},"license.html":{}}}],["avoid",{"_index":344,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["avoids",{"_index":3882,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["await",{"_index":2278,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["awesome",{"_index":4180,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["back",{"_index":3224,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["backend",{"_index":2143,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["backendurls",{"_index":4560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backslash",{"_index":3925,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["bad",{"_index":2095,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["bar",{"_index":100,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["base",{"_index":616,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["based",{"_index":2982,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"index.html":{},"license.html":{}}}],["basejavainspectionserviceurl",{"_index":67,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["basejsoninspectionserviceurl",{"_index":70,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["basemappingserviceurl",{"_index":71,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["baseurl",{"_index":2250,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["basexmlinspectionserviceurl",{"_index":69,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["basis",{"_index":815,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["before",{"_index":609,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["begin",{"_index":3181,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["beginning",{"_index":933,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["behalf",{"_index":4349,"title":{},"body":{"license.html":{}}}],["below",{"_index":4328,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":4309,"title":{},"body":{"license.html":{}}}],["between",{"_index":1671,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{},"index.html":{}}}],["big",{"_index":574,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["binary",{"_index":941,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["binbuffer",{"_index":2298,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["bind",{"_index":4341,"title":{},"body":{"license.html":{}}}],["bit",{"_index":4245,"title":{},"body":{"index.html":{}}}],["blob",{"_index":972,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["blob([compress",{"_index":2301,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["blob([filebin",{"_index":2322,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["blob([value",{"_index":2308,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["block",{"_index":1448,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["body",{"_index":1234,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"injectables/FieldActionService.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["body'},{'name",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["body.actiondetails",{"_index":1991,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["body.actiondetails.actiondetail",{"_index":1992,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["body.actiondetails.actiondetail.length",{"_index":1993,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["body.stringmap.stringmapentry",{"_index":2238,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["boilerplate",{"_index":4530,"title":{},"body":{"license.html":{}}}],["bolt",{"_index":1140,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["boolean",{"_index":117,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["boot:run",{"_index":4252,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":777,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["brackets",{"_index":4532,"title":{},"body":{"license.html":{}}}],["break",{"_index":1674,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/NamespaceEditComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["browse",{"_index":4545,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1089,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"modules/ExampleAppModule.html":{},"classes/LineModel.html":{},"index.html":{},"modules.html":{}}}],["browsermodule",{"_index":1514,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["bsdropdownmodule",{"_index":839,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":893,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["bsdropdownmoduleforroot",{"_index":892,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["buffer",{"_index":2181,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["bug",{"_index":1113,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["build",{"_index":3722,"title":{},"body":{"classes/NamespaceModel.html":{},"index.html":{}}}],["build&restart",{"_index":4263,"title":{},"body":{"index.html":{}}}],["button",{"_index":541,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["buttonclicked",{"_index":3458,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["buttonclicked(okclicked",{"_index":1305,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["buttontext",{"_index":3407,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["byte",{"_index":576,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/DataMapperUtil.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["bytearray",{"_index":577,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["bytes",{"_index":3832,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["c",{"_index":612,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"modules/ExampleAppModule.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["c.cfg",{"_index":2930,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["c.getfielddetailcomponent(field",{"_index":1169,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["c.getselectedmapping",{"_index":2934,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["c.initcfg.basejavainspectionserviceurl",{"_index":619,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.basejsoninspectionserviceurl",{"_index":623,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.basemappingserviceurl",{"_index":625,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.basexmlinspectionserviceurl",{"_index":621,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.classpath",{"_index":638,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.classpathfetchtimeoutinmilliseconds",{"_index":637,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.disablemappingpreviewmode",{"_index":642,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.disablenavbar",{"_index":645,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.pompayload",{"_index":635,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.xsrfcookiename",{"_index":628,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.xsrfdefaulttokenvalue",{"_index":629,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.xsrfheadername",{"_index":627,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initialize(this.cfg",{"_index":4074,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["c.mappings",{"_index":2932,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["c.modalwindow",{"_index":2933,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["c.nativeelement.attributes['sourcevalue'].value",{"_index":2602,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["c.nativeelement.selectedoptions",{"_index":2598,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["c.parentcomponent",{"_index":3359,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["c.savetable",{"_index":4075,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["c.selected",{"_index":3363,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["c.selectedfield",{"_index":2929,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["cache",{"_index":3723,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cached",{"_index":3671,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cachedfield",{"_index":3669,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cachedfield.children",{"_index":3673,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cachedfield.copy",{"_index":3672,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["call",{"_index":82,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["calls",{"_index":618,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["camel",{"_index":966,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["camelcasestring",{"_index":970,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["camelcasestring.charat(0).touppercase",{"_index":1002,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["camelcasestring.indexof",{"_index":1000,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["can't",{"_index":3628,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cancel",{"_index":1310,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["cancelbuttonhandler",{"_index":1250,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["candidate",{"_index":1835,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/PropertyFieldEditComponent.html":{}}}],["candidatetype",{"_index":1837,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["canvas",{"_index":3811,"title":{},"body":{"components/ToolbarComponent.html":{},"index.html":{}}}],["capture",{"_index":929,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingFieldContainerComponent.html":{}}}],["caret",{"_index":1630,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["carry",{"_index":4419,"title":{},"body":{"license.html":{}}}],["case",{"_index":706,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["catalog",{"_index":2165,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["catalog.adm",{"_index":2257,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["catalogname",{"_index":2248,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["catch",{"_index":2315,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["catch((error",{"_index":1967,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["catheaders",{"_index":2252,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["cause",{"_index":4297,"title":{},"body":{"license.html":{}}}],["cd",{"_index":4238,"title":{},"body":{"index.html":{}}}],["cfg",{"_index":134,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceListComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["cfg(cfg",{"_index":2232,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["cfg.errors.length",{"_index":717,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["cfg.errorservice.displayerrorblock(cfg.mappings.activemapping.getpreviewerrors",{"_index":2942,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["cfg.errorservice.displayerrorblock(cfg.mappings.activemapping.getpreviewwarnings",{"_index":2941,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["cfg.errorservice.displayerrorblock(cfg.mappings.activemapping.getvalidationerrors",{"_index":2939,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["cfg.errorservice.displayerrorblock(cfg.mappings.activemapping.getvalidationwarnings",{"_index":2938,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["cfg.errorservice.error('could",{"_index":2580,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappingDefinition.html":{}}}],["cfg.fieldactionservice.getactiondefinitionforname(action.argumentvalues[0].value",{"_index":2896,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["cfg.fieldactionservice.getactiondefinitionforname(action.name",{"_index":2897,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["cfg.getdocs(false",{"_index":2872,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["cfg.getdocs(true",{"_index":2870,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["cfg.getfirstxmldoc(false).name",{"_index":3559,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["cfg.mappings.activemapping.clearpreviewerrors",{"_index":2943,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["cfg.mappings.activemapping.clearvalidationerrors",{"_index":2940,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["cfg.mappings.gettablebyname(mapping.transition.lookuptablename",{"_index":2579,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["cfg.mappings.mappings.length",{"_index":3321,"title":{},"body":{"components/MappingListComponent.html":{}}}],["cfg.validationerrors.length",{"_index":715,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["change",{"_index":1861,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/FieldEditComponent.html":{},"index.html":{}}}],["changed",{"_index":2973,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"license.html":{}}}],["changedetectorref",{"_index":1240,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["char",{"_index":578,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["character",{"_index":4066,"title":{},"body":{"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["characterencoding",{"_index":3601,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["charge",{"_index":4379,"title":{},"body":{"license.html":{}}}],["chart.js",{"_index":4173,"title":{},"body":{"dependencies.html":{}}}],["check",{"_index":1847,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["checkfieldeligibiltyforlinedrawing(field",{"_index":2506,"title":{},"body":{"classes/LineModel.html":{}}}],["checkiconenabled",{"_index":2946,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["checkout",{"_index":4232,"title":{},"body":{"index.html":{}}}],["child",{"_index":1095,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["childfield",{"_index":1340,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["childfield.children",{"_index":3728,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["childfield.copy",{"_index":3674,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["childfield.hasunmappedchildren",{"_index":1342,"title":{},"body":{"classes/EnumValue.html":{}}}],["childfield.parentfield",{"_index":3675,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["childrein",{"_index":3730,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["children",{"_index":1327,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["choose",{"_index":4509,"title":{},"body":{"license.html":{}}}],["circle",{"_index":1142,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["claim",{"_index":4402,"title":{},"body":{"license.html":{}}}],["claims",{"_index":4392,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"license.html":{}}}],["class.pipe",{"_index":887,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["class.pipe.ts",{"_index":3758,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{}}}],["class.pipe.ts:7",{"_index":3762,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["class=\"text",{"_index":3745,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"overview.html":{}}}],["classidentifier",{"_index":1320,"title":{},"body":{"classes/EnumValue.html":{}}}],["classlist.js",{"_index":4175,"title":{},"body":{"dependencies.html":{}}}],["classname",{"_index":226,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["classnameblacklist",{"_index":92,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["classnamecomponent",{"_index":384,"title":{"components/ClassNameComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classpath",{"_index":79,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["classpathfetchtimeoutinmilliseconds",{"_index":78,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["clean",{"_index":4240,"title":{},"body":{"index.html":{}}}],["cleanstr",{"_index":1615,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["clear",{"_index":246,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["cleardocs",{"_index":254,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["clearfields",{"_index":3680,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["clearlines",{"_index":2437,"title":{},"body":{"classes/LineModel.html":{}}}],["clearmappingerrors",{"_index":1425,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["clearpreviewerrors",{"_index":2669,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["cleartext(nodeid",{"_index":1604,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["cleartimeout(this.mouseeventtimer",{"_index":739,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["cleartoend(index",{"_index":1709,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["clearvalidationerrors",{"_index":1426,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["clearwarnings",{"_index":1427,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["cli",{"_index":4194,"title":{},"body":{"dependencies.html":{}}}],["click",{"_index":1069,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["clicked",{"_index":1311,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["clone",{"_index":4236,"title":{},"body":{"index.html":{}}}],["close",{"_index":1294,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["closeclicked",{"_index":3459,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["closeclicked(event",{"_index":1292,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["cluster_datamappermodule",{"_index":779,"title":{},"body":{"modules/DataMapperModule.html":{},"overview.html":{}}}],["cluster_datamappermodule_declarations",{"_index":780,"title":{},"body":{"modules/DataMapperModule.html":{},"overview.html":{}}}],["cluster_datamappermodule_exports",{"_index":781,"title":{},"body":{"modules/DataMapperModule.html":{},"overview.html":{}}}],["cluster_datamappermodule_providers",{"_index":782,"title":{},"body":{"modules/DataMapperModule.html":{},"overview.html":{}}}],["cluster_exampleappmodule",{"_index":1508,"title":{},"body":{"modules/ExampleAppModule.html":{},"overview.html":{}}}],["cluster_exampleappmodule_bootstrap",{"_index":1511,"title":{},"body":{"modules/ExampleAppModule.html":{},"overview.html":{}}}],["cluster_exampleappmodule_declarations",{"_index":1509,"title":{},"body":{"modules/ExampleAppModule.html":{},"overview.html":{}}}],["cluster_exampleappmodule_imports",{"_index":1510,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["clz",{"_index":1141,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["code",{"_index":1132,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{},"license.html":{}}}],["cog",{"_index":3867,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["collapsable",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["collapsableheadercomponent",{"_index":386,"title":{"components/CollapsableHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["collapsed",{"_index":509,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"classes/EnumValue.html":{}}}],["collection",{"_index":497,"title":{},"body":{"components/ClassNameComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["collectionclassname",{"_index":122,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["collectiontype",{"_index":47,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/enumerations.html":{}}}],["collectiontype.none",{"_index":228,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["collectiontypeselectionchanged",{"_index":460,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["collectiontypeselectionchanged(event",{"_index":467,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["colon",{"_index":3926,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["com.fasterxml.jackson.core",{"_index":1529,"title":{},"body":{"classes/Examples.html":{}}}],["combination",{"_index":4397,"title":{},"body":{"license.html":{}}}],["combineactionconfig",{"_index":1764,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["combobox",{"_index":4044,"title":{},"body":{"components/TransitionSelectionComponent.html":{},"dependencies.html":{}}}],["combobox').on('blur",{"_index":4059,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["combobox').on('input",{"_index":4063,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["coming",{"_index":1094,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["comma",{"_index":3927,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["command",{"_index":4267,"title":{},"body":{"index.html":{}}}],["comment",{"_index":4536,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":4504,"title":{},"body":{"license.html":{}}}],["commit",{"_index":2212,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["common",{"_index":4292,"title":{},"body":{"license.html":{}}}],["common/config.types",{"_index":48,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["common/data",{"_index":2227,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["common/focus.directive",{"_index":874,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["common/to",{"_index":885,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["commonmodule",{"_index":830,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["communication",{"_index":4353,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":4320,"title":{},"body":{"license.html":{}}}],["complex",{"_index":579,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["complexfieldsbyclassidentifier",{"_index":3599,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["compliance",{"_index":804,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["complies",{"_index":4447,"title":{},"body":{"license.html":{}}}],["component",{"_index":363,"title":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["componentfactory",{"_index":1283,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["componentfactoryresolver",{"_index":1238,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["componentloaded",{"_index":1260,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["components",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"overview.html":{}}}],["components/class",{"_index":852,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/collapsable",{"_index":854,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/constant",{"_index":860,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/data",{"_index":843,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/document",{"_index":856,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/expression.component",{"_index":875,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/field",{"_index":861,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/line",{"_index":850,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/mapping/lookup",{"_index":871,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/mapping/mapping",{"_index":863,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/mapping/transition",{"_index":873,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/modal",{"_index":846,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/namespace",{"_index":862,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/property",{"_index":859,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/template",{"_index":848,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/toolbar.component",{"_index":847,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["compound",{"_index":1072,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["compress",{"_index":2170,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["compressed",{"_index":2180,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["compressedbuffer",{"_index":2209,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["computer",{"_index":4501,"title":{},"body":{"license.html":{}}}],["concat(issource",{"_index":238,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["concat(targetvalues",{"_index":2589,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["concat(this.allfields",{"_index":3612,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["concat(this.cfg.getfirstxmldoc(false).namespaces",{"_index":3555,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["concat(this.cfg.mappings.getallmappings(true",{"_index":3306,"title":{},"body":{"components/MappingListComponent.html":{}}}],["concat(this.terminalfields",{"_index":3645,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["concatenate",{"_index":1869,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["conditional",{"_index":3167,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{}}}],["conditionalmappingexpressionenabled",{"_index":3772,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["conditions",{"_index":818,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["config",{"_index":140,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{}}}],["configmodel",{"_index":123,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["configmodel.cfg",{"_index":177,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["configmodel.getconfig",{"_index":314,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/DataMapperErrorComponent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/NamespaceEditComponent.html":{}}}],["configmodel.getconfig().errors.filter(e",{"_index":722,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["configmodel.getconfig().isrequiredfieldvalid(this.field.name",{"_index":2121,"title":{},"body":{"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["configmodel.getconfig().isrequiredfieldvalid(this.field.value",{"_index":571,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["configmodel.getconfig().isrequiredfieldvalid(this.userclassname",{"_index":493,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["configmodel.getconfig().mappings.activemapping.removevalidationerror(erroridentifier.value",{"_index":728,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["configmodel.getconfig().validationerrors.filter(e",{"_index":719,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["configmodel.isrequiredfieldvalid(this.namespace.alias",{"_index":3503,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["configmodel.isrequiredfieldvalid(this.namespace.uri",{"_index":3504,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["configs",{"_index":1975,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["configselectionchanged",{"_index":3042,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["configselectionchanged(event",{"_index":3051,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["configuration",{"_index":77,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"license.html":{}}}],["configuring",{"_index":4221,"title":{},"body":{"index.html":{}}}],["confirmbuttondisabled",{"_index":1253,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["confirmbuttontext",{"_index":1254,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["confirmed",{"_index":3818,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["connect",{"_index":1971,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["consequential",{"_index":4495,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":4516,"title":{},"body":{"license.html":{}}}],["console.log(\"copied",{"_index":1392,"title":{},"body":{"classes/EnumValue.html":{}}}],["conspicuously",{"_index":4366,"title":{},"body":{"license.html":{}}}],["const",{"_index":194,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["constant",{"_index":251,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["constantcomponent",{"_index":1185,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["constantcomponent.getfield",{"_index":1195,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["constantcomponent.initialize(self.field",{"_index":1186,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["constantdoc",{"_index":158,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["constantfieldeditcomponent",{"_index":389,"title":{"components/ConstantFieldEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["constants",{"_index":172,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/enumerations.html":{}}}],["constitutes",{"_index":4406,"title":{},"body":{"license.html":{}}}],["constrain",{"_index":3148,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["constructor",{"_index":105,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldContainerComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["constructor(componentfactoryresolver",{"_index":3411,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{}}}],["constructor(delimiter",{"_index":3914,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["constructor(elementref",{"_index":2351,"title":{},"body":{"directives/FocusDirective.html":{}}}],["constructor(errorservice",{"_index":1923,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["constructor(initializationservice",{"_index":599,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["constructor(logger",{"_index":2159,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["constructor(mapping",{"_index":2127,"title":{},"body":{"classes/FieldNode.html":{}}}],["constructor(message",{"_index":1492,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["constructor(node",{"_index":1757,"title":{},"body":{"classes/ExpressionUpdatedEvent.html":{}}}],["constructor(prefix",{"_index":1544,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["constructor(private",{"_index":607,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["constructor(public",{"_index":1555,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["constructor(sanitizer",{"_index":1036,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["constructor(str",{"_index":3750,"title":{},"body":{"classes/TextNode.html":{}}}],["construed",{"_index":4443,"title":{},"body":{"license.html":{}}}],["consumers",{"_index":877,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["contained",{"_index":4431,"title":{},"body":{"license.html":{}}}],["container",{"_index":3086,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container'},{'name",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["container.component",{"_index":866,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["container.component.html",{"_index":3087,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts",{"_index":3085,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:102",{"_index":3109,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:106",{"_index":3106,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:116",{"_index":3111,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:137",{"_index":3108,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:142",{"_index":3107,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:166",{"_index":3132,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:170",{"_index":3119,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:180",{"_index":3112,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:205",{"_index":3128,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:210",{"_index":3123,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:219",{"_index":3120,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:223",{"_index":3118,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:227",{"_index":3126,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:33",{"_index":3103,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:34",{"_index":3104,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:35",{"_index":3105,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:37",{"_index":3135,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:39",{"_index":3136,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:40",{"_index":3134,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:41",{"_index":3138,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:42",{"_index":3133,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:43",{"_index":3137,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:44",{"_index":3102,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:52",{"_index":3125,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:56",{"_index":3124,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:60",{"_index":3122,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:76",{"_index":3130,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["contains",{"_index":1622,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["content",{"_index":976,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["contentchanged",{"_index":2949,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["contents",{"_index":2807,"title":{},"body":{"classes/MappingDefinition.html":{},"license.html":{}}}],["continue",{"_index":1359,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["contract",{"_index":4301,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":4343,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":4396,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":4449,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":4369,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":4407,"title":{},"body":{"license.html":{}}}],["control",{"_index":4290,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":4291,"title":{},"body":{"license.html":{}}}],["conversion",{"_index":2996,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["conversions",{"_index":4321,"title":{},"body":{"license.html":{}}}],["convert",{"_index":965,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["cookie",{"_index":4558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cookiename",{"_index":4557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cookies",{"_index":306,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["copies",{"_index":1383,"title":{},"body":{"classes/EnumValue.html":{},"license.html":{}}}],["copy",{"_index":806,"title":{},"body":{"modules/DataMapperModule.html":{},"classes/EnumValue.html":{},"modules/ExampleAppModule.html":{},"classes/NamespaceModel.html":{},"license.html":{}}}],["copy.children",{"_index":1389,"title":{},"body":{"classes/EnumValue.html":{}}}],["copy.children.push(childfield.copy",{"_index":1391,"title":{},"body":{"classes/EnumValue.html":{}}}],["copy.docdef",{"_index":1388,"title":{},"body":{"classes/EnumValue.html":{}}}],["copy.parentfield",{"_index":1386,"title":{},"body":{"classes/EnumValue.html":{}}}],["copy.serviceobject",{"_index":1384,"title":{},"body":{"classes/EnumValue.html":{}}}],["copyfrom",{"_index":3569,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["copyfrom(that",{"_index":1395,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["copyright",{"_index":792,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["core",{"_index":1534,"title":{},"body":{"classes/Examples.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["correctly",{"_index":3147,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["corresponding",{"_index":1714,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["couldn't",{"_index":3152,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["counter",{"_index":2548,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["counterclaim",{"_index":4403,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":4082,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":4212,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["created",{"_index":3116,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["createdbyuser",{"_index":3565,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["createlinestyle(l",{"_index":2459,"title":{},"body":{"classes/LineModel.html":{}}}],["createnodesfromtext(text",{"_index":1738,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["createseparatecombinefieldaction",{"_index":1767,"title":{},"body":{"classes/FieldAction.html":{}}}],["createseparatecombinefieldaction(separatemode",{"_index":1778,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["creation",{"_index":543,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["cross",{"_index":4401,"title":{},"body":{"license.html":{}}}],["css",{"_index":2464,"title":{},"body":{"classes/LineModel.html":{}}}],["cssclass",{"_index":1145,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/NamespaceListComponent.html":{}}}],["csv",{"_index":4211,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ctrl/cmd",{"_index":1071,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["current",{"_index":137,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["currentdraggedfield",{"_index":149,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["currentparentpath",{"_index":3636,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["currentpathsection",{"_index":3637,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["custom",{"_index":11,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["custom_elements_schema",{"_index":789,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["customaction",{"_index":2895,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["customary",{"_index":4464,"title":{},"body":{"license.html":{}}}],["d",{"_index":266,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["d.appliestofield(mapping",{"_index":1979,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["d.id",{"_index":268,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["d.push(tabledata",{"_index":2593,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["d.sourceenumvalue",{"_index":2605,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["damages",{"_index":4492,"title":{},"body":{"license.html":{}}}],["dash",{"_index":3928,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["data",{"_index":7,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["databind",{"_index":1533,"title":{},"body":{"classes/Examples.html":{}}}],["dataisvalid",{"_index":3502,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["datamapperappcomponent",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datamapperappexamplehostcomponent",{"_index":393,"title":{"components/DataMapperAppExampleHostComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datamappercomponent",{"_index":597,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["datamappererrorcomponent",{"_index":397,"title":{"components/DataMapperErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datamapperinitializationmodel",{"_index":55,"title":{"classes/DataMapperInitializationModel.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{}}}],["datamappermodule",{"_index":773,"title":{"modules/DataMapperModule.html":{}},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"modules.html":{},"overview.html":{}}}],["datamappermodule.withinterceptor",{"_index":1521,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["datamapperutil",{"_index":905,"title":{"classes/DataMapperUtil.html":{}},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["datamapperutil.extractdisplaypath(field.getfieldlabel(configmodel.getconfig().showtypes",{"_index":3188,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["datamapperutil.http_status_no_content",{"_index":2243,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["datamapperutil.readbinaryfile(mappingsfilename",{"_index":2321,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["datamapperutil.removeitemfromarray(action",{"_index":2654,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["datamapperutil.removeitemfromarray(field",{"_index":3686,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["datamapperutil.removeitemfromarray(field.path",{"_index":3659,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["datamapperutil.removeitemfromarray(mappedfield",{"_index":2703,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["datamapperutil.removeitemfromarray(mappedfields.find(mf",{"_index":2690,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["datamapperutil.removeitemfromarray(ns",{"_index":3554,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["datamapperutil.str2bytes(aggregatebuffer",{"_index":2299,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["datamapperutil.todisplayable(argconfigname",{"_index":3035,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["datamapperutil.writefile(filecontent",{"_index":2309,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["datamapperversion",{"_index":56,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["datasource",{"_index":2041,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["date",{"_index":586,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"license.html":{}}}],["date().gettime",{"_index":2536,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["date_time",{"_index":1841,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["date_time_tz",{"_index":1842,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["datetime",{"_index":587,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["datetimetz",{"_index":590,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["datetz",{"_index":588,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["debug",{"_index":1428,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"miscellaneous/enumerations.html":{}}}],["debug(message",{"_index":1443,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["decimal",{"_index":580,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["declarations",{"_index":776,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}],["decorators",{"_index":481,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["deep",{"_index":3727,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["default",{"_index":308,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaulttokenvalue",{"_index":4559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defend",{"_index":4522,"title":{},"body":{"license.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["definition",{"_index":1163,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{},"license.html":{}}}],["definition'},{'name",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["definition.component",{"_index":857,"title":{},"body":{"modules/DataMapperModule.html":{},"classes/LineModel.html":{}}}],["definition.component.ts",{"_index":4100,"title":{},"body":{"coverage.html":{}}}],["definition.model",{"_index":30,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/FieldEditComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["definition.model.ts",{"_index":2760,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["definition.model.ts:102",{"_index":2833,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:114",{"_index":2809,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:123",{"_index":2831,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:144",{"_index":2821,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:160",{"_index":2817,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:198",{"_index":2804,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:206",{"_index":2841,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:221",{"_index":2836,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:24",{"_index":3573,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:247",{"_index":2801,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:26",{"_index":3572,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:263",{"_index":2799,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:27",{"_index":3574,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:273",{"_index":2829,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:277",{"_index":2827,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:28",{"_index":2789,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:29",{"_index":2788,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:295",{"_index":2823,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:30",{"_index":2787,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:309",{"_index":2839,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:31",{"_index":2790,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:32",{"_index":2794,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:34",{"_index":2791,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:35",{"_index":2793,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:36",{"_index":2786,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:41",{"_index":3577,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:42",{"_index":2834,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:46",{"_index":2796,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:49",{"_index":3575,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:52",{"_index":2812,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:55",{"_index":3576,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:56",{"_index":2797,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:85",{"_index":2814,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:90",{"_index":2815,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definitions",{"_index":253,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionComponent.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["definitions.length",{"_index":2030,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["deflate",{"_index":2224,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["deflate(binbuffer",{"_index":2300,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["defnames",{"_index":2032,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["defnames.push(name",{"_index":2036,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["defnames.sort",{"_index":2038,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["defsbyname",{"_index":2031,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["defsbyname[name",{"_index":2035,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["delete",{"_index":2201,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["deliberate",{"_index":4487,"title":{},"body":{"license.html":{}}}],["delimiter",{"_index":3911,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["delimiter.prettyname",{"_index":4081,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["delimiterdesc",{"_index":3990,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["delimitermodel",{"_index":4034,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["delimitermodel.delimiter",{"_index":4076,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["delimitermodels",{"_index":3941,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["delimiters",{"_index":4026,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["delta",{"_index":1006,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["depend",{"_index":1106,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["dependencies",{"_index":775,"title":{"dependencies.html":{}},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depth",{"_index":3706,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["derivative",{"_index":4329,"title":{},"body":{"license.html":{}}}],["derived",{"_index":4331,"title":{},"body":{"license.html":{}}}],["describing",{"_index":2287,"title":{},"body":{"injectables/FileManagementService.html":{},"license.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/FieldActionDefinition.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/NamespaceModel.html":{},"license.html":{}}}],["design",{"_index":1972,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["designated",{"_index":4368,"title":{},"body":{"license.html":{}}}],["designed",{"_index":4226,"title":{},"body":{"index.html":{}}}],["desire",{"_index":2093,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["detail",{"_index":1011,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail'},{'name",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["detail.component",{"_index":858,"title":{},"body":{"modules/DataMapperModule.html":{},"classes/LineModel.html":{}}}],["detail.component.html",{"_index":1012,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts",{"_index":1010,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:105",{"_index":1059,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:114",{"_index":3227,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:118",{"_index":1053,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:119",{"_index":3228,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:123",{"_index":1064,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:124",{"_index":3213,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:128",{"_index":3212,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:130",{"_index":1060,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:141",{"_index":1054,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:158",{"_index":1055,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:171",{"_index":1075,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:177",{"_index":1061,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:188",{"_index":1065,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:197",{"_index":1057,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:216",{"_index":1050,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:261",{"_index":1077,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:280",{"_index":1062,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:285",{"_index":1058,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:289",{"_index":1086,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:30",{"_index":3204,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:31",{"_index":3207,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:32",{"_index":3205,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":3206,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:35",{"_index":2908,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:36",{"_index":2909,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:37",{"_index":1040,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:38",{"_index":1041,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:39",{"_index":1042,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{}}}],["detail.component.ts:40",{"_index":1043,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:41",{"_index":2915,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:42",{"_index":1084,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:43",{"_index":1082,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{}}}],["detail.component.ts:45",{"_index":1038,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:49",{"_index":1079,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{}}}],["detail.component.ts:50",{"_index":3208,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:53",{"_index":2910,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:57",{"_index":2912,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:62",{"_index":3211,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:66",{"_index":1048,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:69",{"_index":3210,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:73",{"_index":2914,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:74",{"_index":1045,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:85",{"_index":3209,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:88",{"_index":1052,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:97",{"_index":3215,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["details",{"_index":2922,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["detected",{"_index":3667,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["detector",{"_index":1263,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["detecttableidentifiers",{"_index":2767,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["determine",{"_index":1628,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/TextNode.html":{}}}],["determining",{"_index":4476,"title":{},"body":{"license.html":{}}}],["dev",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["developer",{"_index":4228,"title":{},"body":{"index.html":{}}}],["development",{"_index":4254,"title":{},"body":{"index.html":{}}}],["diagnostic",{"_index":285,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["diff",{"_index":3088,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["different",{"_index":4258,"title":{},"body":{"index.html":{},"license.html":{}}}],["differing",{"_index":3012,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["direct",{"_index":4295,"title":{},"body":{"license.html":{}}}],["direction",{"_index":4298,"title":{},"body":{"license.html":{}}}],["directive",{"_index":378,"title":{"directives/FocusDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":447,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["directly",{"_index":4269,"title":{},"body":{"index.html":{}}}],["directory",{"_index":980,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["disable",{"_index":539,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["disableconsolelogging",{"_index":4556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disablemappingpreviewmode",{"_index":97,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disablenavbar",{"_index":102,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disableprivateonlyfields",{"_index":93,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disableprotectedonlyfields",{"_index":94,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disablepublicgettersetterfields",{"_index":96,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disablepubliconlyfields",{"_index":95,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disarm",{"_index":704,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["discard",{"_index":1357,"title":{},"body":{"classes/EnumValue.html":{}}}],["disclaimer",{"_index":4467,"title":{},"body":{"license.html":{}}}],["discovercomplexfields(fields",{"_index":3732,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["discussing",{"_index":4363,"title":{},"body":{"license.html":{}}}],["dismiss",{"_index":3428,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["dismissall",{"_index":3408,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["display",{"_index":1447,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingFieldContainerComponent.html":{},"license.html":{}}}],["displayablestring",{"_index":1001,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["displayed",{"_index":2979,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["displayerrorblock",{"_index":1429,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["displayerrorblock(errorblock",{"_index":1445,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["displayfieldsearchbox",{"_index":3092,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["displayindex",{"_index":3196,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["displayname",{"_index":1321,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["displayname.tolowercase().indexof(filter.tolowercase",{"_index":3186,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["displayparentobject",{"_index":3197,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["displayseparator",{"_index":3093,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["displaytransformationaction",{"_index":3043,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["displaytransformationaction(action",{"_index":3053,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["distribute",{"_index":4387,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":814,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["distribution",{"_index":4276,"title":{},"body":{"license.html":{}}}],["dm",{"_index":2198,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["doc",{"_index":259,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["doc.addfield(mappedfield.field",{"_index":2888,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["doc.getfield(parentpath",{"_index":2887,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["doc.id",{"_index":3605,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["doc.initialized",{"_index":275,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["doc.inspectionresult",{"_index":264,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["doc.inspectionsource",{"_index":2291,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["doc.inspectiontype",{"_index":2292,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["doc.type",{"_index":261,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["doccount",{"_index":2283,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["docdef",{"_index":195,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["docdef.description",{"_index":204,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.fields[0",{"_index":2081,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["docdef.id",{"_index":198,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.initmodel",{"_index":196,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.inspectionresult",{"_index":214,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.inspectionsource",{"_index":212,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.inspectiontype",{"_index":210,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.issource",{"_index":206,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.name",{"_index":202,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.selectedroot",{"_index":216,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.showfields",{"_index":208,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.type",{"_index":200,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.type.tolowercase",{"_index":224,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.uri",{"_index":219,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdefcomponent",{"_index":2497,"title":{},"body":{"classes/LineModel.html":{}}}],["docdefcomponent.getdocdefelementposition(field.docdef",{"_index":2500,"title":{},"body":{"classes/LineModel.html":{}}}],["docdefcomponent.getfielddetailcomponentposition(parentfield",{"_index":2504,"title":{},"body":{"classes/LineModel.html":{}}}],["docdefinput",{"_index":2379,"title":{},"body":{"classes/LineModel.html":{}}}],["docdefoutput",{"_index":2380,"title":{},"body":{"classes/LineModel.html":{}}}],["docdefs",{"_index":233,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdefs.push(this.adddocument(docmodel",{"_index":236,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docid",{"_index":2825,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["docinitmodel",{"_index":197,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.collectionclassname",{"_index":229,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.collectiontype",{"_index":227,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.description",{"_index":205,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.id",{"_index":199,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.inspectionresult",{"_index":215,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.inspectionsource",{"_index":213,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.inspectiontype",{"_index":211,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.issource",{"_index":207,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.name",{"_index":203,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.selectedroot",{"_index":217,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.showfields",{"_index":209,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.type",{"_index":201,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docmap",{"_index":2838,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["docmodel",{"_index":234,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docmodels",{"_index":235,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docs",{"_index":242,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["docs.length",{"_index":3604,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["document",{"_index":32,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["document).ready",{"_index":4041,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["documentation",{"_index":4083,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentdefinition",{"_index":31,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/FieldEditComponent.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["documentdefinitioncomponent",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documentfielddetailcomponent",{"_index":401,"title":{"components/DocumentFieldDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documentid",{"_index":269,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["documentinitializationmodel",{"_index":113,"title":{"classes/DocumentInitializationModel.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["documentmanagementservice",{"_index":36,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["documentmanagementservice.generateexportblockdata(doc.inspectionsource",{"_index":2297,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["documentmanagementservice.generateexportmappings(this.jsonbuffer[0",{"_index":2280,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["documentmanagementservice.generateexportmetastr(doc",{"_index":2296,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["documents",{"_index":248,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["documentsareloaded",{"_index":274,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["documentservice",{"_index":151,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["documenttype",{"_index":45,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"miscellaneous/enumerations.html":{}}}],["documenttype.constant",{"_index":170,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["documenttype.java",{"_index":225,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["documenttype.java_archive",{"_index":222,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["documenttype.json",{"_index":3895,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["documenttype.property",{"_index":165,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["documenttype.xml",{"_index":271,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/FieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["documenttype.xsd",{"_index":218,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["doesn't",{"_index":338,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/FieldEditComponent.html":{},"index.html":{}}}],["dofetchfieldactions",{"_index":1917,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["dom",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["domsanitizer",{"_index":1037,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["don't",{"_index":2462,"title":{},"body":{"classes/LineModel.html":{},"license.html":{}}}],["dormant",{"_index":2371,"title":{},"body":{"classes/LineModel.html":{}}}],["double",{"_index":581,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["down",{"_index":523,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/ToolbarComponent.html":{}}}],["download",{"_index":3254,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["downloads",{"_index":979,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["drag",{"_index":1092,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["dragenter/dragleave/dragover",{"_index":1102,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["dragenterleave",{"_index":1017,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["dragenterleave(event",{"_index":1046,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["dragged",{"_index":1108,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["draggedmappedfield",{"_index":3129,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["draghover",{"_index":1151,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["drawcurrentline(x",{"_index":2441,"title":{},"body":{"classes/LineModel.html":{}}}],["drawingline",{"_index":2383,"title":{},"body":{"classes/LineModel.html":{}}}],["drawline(event",{"_index":2438,"title":{},"body":{"classes/LineModel.html":{}}}],["drawlinesformapping(m",{"_index":2468,"title":{},"body":{"classes/LineModel.html":{}}}],["drop",{"_index":3153,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["dropdown",{"_index":2107,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["droppedfield",{"_index":1119,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["droppedmappedfield",{"_index":3163,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["dskiptests",{"_index":4248,"title":{},"body":{"index.html":{}}}],["dupe",{"_index":1356,"title":{},"body":{"classes/EnumValue.html":{}}}],["during",{"_index":1101,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["dynamic",{"_index":900,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["dynamically",{"_index":1268,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["e",{"_index":686,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["e.identifier",{"_index":1476,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["e.level",{"_index":720,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["e.message",{"_index":1487,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ModalErrorWindowComponent.html":{}}}],["e.name",{"_index":2587,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["e.sourcevalue",{"_index":2601,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["e.targetvalue",{"_index":2603,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["each",{"_index":3220,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"license.html":{}}}],["easier",{"_index":4540,"title":{},"body":{"license.html":{}}}],["edit",{"_index":526,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["edit'},{'name",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["edit.component",{"_index":849,"title":{},"body":{"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["edit.component.html",{"_index":527,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["edit.component.ts",{"_index":525,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:108",{"_index":2056,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:112",{"_index":2066,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:116",{"_index":2064,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:120",{"_index":2053,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:140",{"_index":2057,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:158",{"_index":2062,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:162",{"_index":2058,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:27",{"_index":3749,"title":{},"body":{"components/TemplateEditComponent.html":{}}}],["edit.component.ts:28",{"_index":3748,"title":{},"body":{"components/TemplateEditComponent.html":{}}}],["edit.component.ts:29",{"_index":3492,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:30",{"_index":3493,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["edit.component.ts:31",{"_index":3491,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:32",{"_index":548,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:33",{"_index":549,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:34",{"_index":554,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["edit.component.ts:35",{"_index":547,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:36",{"_index":553,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:37",{"_index":552,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:38",{"_index":551,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:39",{"_index":2070,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:40",{"_index":536,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:41",{"_index":2072,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:42",{"_index":2068,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:43",{"_index":2067,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:44",{"_index":2069,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:45",{"_index":2051,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:50",{"_index":3489,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:52",{"_index":546,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:53",{"_index":2061,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:56",{"_index":533,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:57",{"_index":3487,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:65",{"_index":3740,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:66",{"_index":537,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["edit.component.ts:69",{"_index":3739,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:70",{"_index":534,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["edit.component.ts:77",{"_index":3741,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:78",{"_index":538,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["edit.component.ts:93",{"_index":2060,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:97",{"_index":2065,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edited",{"_index":3217,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["editfield",{"_index":1018,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["editfield(event",{"_index":1049,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["editmode",{"_index":2042,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["editorial",{"_index":4332,"title":{},"body":{"license.html":{}}}],["edittemplate",{"_index":3773,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["el",{"_index":1154,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["el.offsetheight",{"_index":2471,"title":{},"body":{"classes/LineModel.html":{}}}],["el.offsetleft",{"_index":1156,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["el.offsetparent",{"_index":1158,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["el.offsettop",{"_index":1157,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["elaborations",{"_index":4334,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":4350,"title":{},"body":{"license.html":{}}}],["elem",{"_index":650,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["element",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["elementref",{"_index":471,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["emits",{"_index":1624,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["empty",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["emptymodalbodycomponent",{"_index":403,"title":{"components/EmptyModalBodyComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["enable",{"_index":98,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["enableexpression",{"_index":3864,"title":{},"body":{"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["enables",{"_index":4261,"title":{},"body":{"index.html":{}}}],["enclosed",{"_index":4531,"title":{},"body":{"license.html":{}}}],["end",{"_index":1599,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"classes/TextNode.html":{},"license.html":{}}}],["enddrag",{"_index":1019,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["enddrag(event",{"_index":1051,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["endoffset",{"_index":1603,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["engine",{"_index":4224,"title":{},"body":{"index.html":{}}}],["entering",{"_index":1047,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["entities",{"_index":4289,"title":{},"body":{"license.html":{}}}],["entity",{"_index":4283,"title":{},"body":{"license.html":{}}}],["entries",{"_index":2237,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["entry",{"_index":2240,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["entry.sourcevalue",{"_index":2542,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["entry.targetvalue",{"_index":2550,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["entrycomponents",{"_index":787,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["enum",{"_index":1499,"title":{},"body":{"classes/ErrorInfo.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["enumeration",{"_index":1325,"title":{},"body":{"classes/EnumValue.html":{},"components/TransitionSelectionComponent.html":{}}}],["enumerations",{"_index":4203,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumfieldsbyclassidentifier",{"_index":3600,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["enumvalue",{"_index":1314,"title":{"classes/EnumValue.html":{}},"body":{"classes/EnumValue.html":{},"coverage.html":{}}}],["enumvalues",{"_index":1326,"title":{},"body":{"classes/EnumValue.html":{}}}],["environment",{"_index":26,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.backendurls.atlasserviceurl",{"_index":626,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["environment.backendurls.javainspectionserviceurl",{"_index":620,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["environment.backendurls.jsoninspectionserviceurl",{"_index":624,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["environment.backendurls.xmlinspectionserviceurl",{"_index":622,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["environment.xsrf",{"_index":106,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["environment.xsrf.cookiename",{"_index":110,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["environment.xsrf.defaulttokenvalue",{"_index":112,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["environment.xsrf.headername",{"_index":108,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["environments/environment",{"_index":27,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["equal",{"_index":3929,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["equivalent",{"_index":981,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["error",{"_index":281,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["error'},{'name",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["error('could",{"_index":3642,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["error(message",{"_index":1454,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["error.component",{"_index":845,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["error.component.html",{"_index":649,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts",{"_index":648,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:107",{"_index":707,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:112",{"_index":671,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:120",{"_index":673,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:128",{"_index":679,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:31",{"_index":666,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:32",{"_index":667,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:33",{"_index":668,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:35",{"_index":710,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:36",{"_index":712,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:37",{"_index":711,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:38",{"_index":709,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:43",{"_index":669,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:48",{"_index":672,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:53",{"_index":683,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:58",{"_index":682,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:63",{"_index":688,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:71",{"_index":685,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:82",{"_index":690,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:97",{"_index":702,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.message",{"_index":1483,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["error.status",{"_index":1968,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["error.statustext",{"_index":2314,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["error1",{"_index":2316,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["errorblock",{"_index":1453,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errorblock[0",{"_index":1479,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errorhandlerservice",{"_index":33,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{},"overview.html":{}}}],["erroridentifier",{"_index":725,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["erroridentifier.value",{"_index":727,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["erroridentifiercounter",{"_index":1491,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["errorinfo",{"_index":43,"title":{"classes/ErrorInfo.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{}}}],["errorinfo(message",{"_index":1485,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["errorinfo.erroridentifiercounter",{"_index":1506,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["errorinfo.erroridentifiercounter.tostring",{"_index":1503,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["errorlevel",{"_index":713,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"pipes/ToErrorIconClassPipe.html":{},"miscellaneous/enumerations.html":{}}}],["errorlevel.debug",{"_index":1470,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errorlevel.error",{"_index":721,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["errorlevel.info",{"_index":724,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["errorlevel.mapping_error",{"_index":1472,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errorlevel.validation_error",{"_index":1471,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["errorlevel.warn",{"_index":723,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["errormessage",{"_index":287,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["erroroccurred",{"_index":3595,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["errors",{"_index":162,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["errorservice",{"_index":153,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{}}}],["errorservicerequired",{"_index":653,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["escaped",{"_index":634,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["establish",{"_index":2166,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["established",{"_index":502,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["establishing",{"_index":2269,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["even",{"_index":3301,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"license.html":{}}}],["event",{"_index":469,"title":{},"body":{"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["event's",{"_index":1098,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["event._lmcinstance",{"_index":2397,"title":{},"body":{"classes/LineModel.html":{}}}],["event.ctrlkey",{"_index":1122,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["event.currenttarget",{"_index":3154,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["event.datatransfer.setdata('text",{"_index":1111,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["event.item['field",{"_index":2106,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["event.metakey",{"_index":1123,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["event.offsety.tostring",{"_index":2440,"title":{},"body":{"classes/LineModel.html":{}}}],["event.preventdefault",{"_index":1117,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{}}}],["event.srcelement.value",{"_index":3850,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["event.stoppropagation",{"_index":1118,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["event.target",{"_index":2418,"title":{},"body":{"classes/LineModel.html":{}}}],["event.target.attributes.getnameditem('erroridentifier",{"_index":726,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["event.target.files[0",{"_index":3837,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["event.target.selectedoptions",{"_index":3022,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["event.target.selectedoptions.item(0).attributes",{"_index":3024,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["event.target.selectedoptions.item(0).attributes.getnameditem('value').value",{"_index":496,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["event.target.value",{"_index":3016,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/ToolbarComponent.html":{}}}],["event.target.value.length",{"_index":3017,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["event['clienty",{"_index":3156,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["event['pagey",{"_index":3155,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["events",{"_index":12,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["evt",{"_index":3160,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["evt.preventdefault",{"_index":3162,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["evt.stoppropagation",{"_index":3161,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["evt1",{"_index":700,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["evt1.preventdefault",{"_index":736,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["evt1.stoppropagation",{"_index":735,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["evt1['clienty",{"_index":3143,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["evt1['pagey",{"_index":3142,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["example",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"license.html":{}}}],["exampleappmodule",{"_index":1507,"title":{"modules/ExampleAppModule.html":{}},"body":{"modules/ExampleAppModule.html":{},"modules.html":{},"overview.html":{}}}],["examples",{"_index":605,"title":{"classes/Examples.html":{}},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/Examples.html":{},"coverage.html":{}}}],["examples.pom",{"_index":636,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["except",{"_index":803,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["exchange",{"_index":3855,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["excluding",{"_index":4365,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":4378,"title":{},"body":{"license.html":{}}}],["executed",{"_index":4456,"title":{},"body":{"license.html":{}}}],["executesearch",{"_index":2047,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["executesearch(filter",{"_index":2052,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["exercise",{"_index":4482,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":4311,"title":{},"body":{"license.html":{}}}],["exist",{"_index":2090,"title":{},"body":{"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{}}}],["exists",{"_index":542,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["explicitly",{"_index":4450,"title":{},"body":{"license.html":{}}}],["export",{"_index":54,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["exportblockdata",{"_index":2282,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["exported",{"_index":2204,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["exportmappings",{"_index":3863,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["exportmappingscatalog",{"_index":2148,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["exportmappingscatalog(mappingsfilename",{"_index":2161,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["exportmeta",{"_index":2281,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["exports",{"_index":778,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}],["express",{"_index":820,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["expression",{"_index":1561,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["expression'},{'name",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["expression.component",{"_index":3829,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["expression.model",{"_index":3921,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["expressioncomponent",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["expressionmodel",{"_index":1574,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{}}}],["expressionnode",{"_index":1536,"title":{"classes/ExpressionNode.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["expressionnode.sequence",{"_index":1558,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:26",{"_index":2131,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:27",{"_index":2132,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:33",{"_index":2135,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:37",{"_index":2137,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:38",{"_index":2136,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnodes",{"_index":1635,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressions",{"_index":3168,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["expressionupdated",{"_index":1576,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionupdatedevent",{"_index":1554,"title":{"classes/ExpressionUpdatedEvent.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["expressionupdatedsource",{"_index":1575,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["extends",{"_index":1560,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["extractdisplaypath",{"_index":910,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["extractdisplaypath(path",{"_index":923,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["extracted",{"_index":2192,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["extractfieldactiondefinition",{"_index":1918,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["extractfieldactiondefinition(actiondetail",{"_index":1927,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["extractor",{"_index":304,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["f",{"_index":2677,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["f(x",{"_index":3907,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["f.field",{"_index":2681,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["f.field.enumeration",{"_index":2684,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["f.field.isincollection",{"_index":2680,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fa",{"_index":520,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["fade",{"_index":1257,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["failure",{"_index":4502,"title":{},"body":{"license.html":{}}}],["fake",{"_index":2091,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fakenamespace",{"_index":2100,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fakenamespace.alias",{"_index":2101,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["false",{"_index":59,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/variables.html":{}}}],["faster",{"_index":4246,"title":{},"body":{"index.html":{}}}],["fatal",{"_index":2312,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["fee",{"_index":4510,"title":{},"body":{"license.html":{}}}],["feeding",{"_index":1451,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["fetch",{"_index":305,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["fetchedactionconfigs",{"_index":1965,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fetchfieldactions",{"_index":1919,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fetching",{"_index":76,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["field",{"_index":277,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["field's",{"_index":3064,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"classes/NamespaceModel.html":{}}}],["field'},{'name",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["field.alphabetizefields(cachedfield.children",{"_index":3731,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.alphabetizefields(field.parentfield.children",{"_index":3664,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.alphabetizefields(fields",{"_index":2726,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["field.alphabetizefields(this.fields",{"_index":3648,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.children",{"_index":1341,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.children.length",{"_index":1364,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.children.push(childfield",{"_index":3679,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.component",{"_index":865,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["field.component.html",{"_index":3323,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts",{"_index":3322,"title":{},"body":{"components/MappingListFieldComponent.html":{},"coverage.html":{}}}],["field.component.ts:28",{"_index":3328,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:29",{"_index":3327,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:30",{"_index":3326,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:31",{"_index":3325,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:33",{"_index":3332,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:37",{"_index":3330,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:44",{"_index":3329,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:52",{"_index":3331,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.copy",{"_index":561,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["field.docdef",{"_index":1166,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["field.docdef.showfields",{"_index":2498,"title":{},"body":{"classes/LineModel.html":{}}}],["field.docdef.type",{"_index":3617,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.enumeration",{"_index":3718,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.fielddepth",{"_index":3677,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.fieldhasunmappedchild(childfield",{"_index":1343,"title":{},"body":{"classes/EnumValue.html":{}}}],["field.fieldhasunmappedchild(field",{"_index":3704,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.getfieldlabel(cfg.showtypes",{"_index":1219,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["field.getfieldlabel(configmodel.getconfig().showtypes",{"_index":2113,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["field.getnamewithnamespace",{"_index":3707,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.hasunmappedchildren",{"_index":3690,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.isarray",{"_index":3709,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.isattribute",{"_index":3712,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.iscollection",{"_index":3708,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.isparentfield",{"_index":2112,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["field.issource",{"_index":2743,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["field.isterminal",{"_index":1338,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.model",{"_index":1786,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["field.name",{"_index":3616,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield",{"_index":3655,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield.children",{"_index":3688,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield.children.push(field",{"_index":3663,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield.fielddepth",{"_index":3657,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield.path",{"_index":3656,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.partofmapping",{"_index":1339,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.partoftransformation",{"_index":3691,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.path",{"_index":1165,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingListComponent.html":{},"classes/NamespaceModel.html":{}}}],["field.path.tolowercase().includes(filter",{"_index":3317,"title":{},"body":{"components/MappingListComponent.html":{}}}],["field.serviceobject",{"_index":3713,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.serviceobject.path",{"_index":3714,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.serviceobject.status",{"_index":3733,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.type",{"_index":556,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["field.uuidcounter",{"_index":1368,"title":{},"body":{"classes/EnumValue.html":{}}}],["field.uuidcounter.tostring",{"_index":1367,"title":{},"body":{"classes/EnumValue.html":{}}}],["field.visibleincurrentdocumentsearch",{"_index":2507,"title":{},"body":{"classes/LineModel.html":{}}}],["fieldaction",{"_index":1760,"title":{"classes/FieldAction.html":{}},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{}}}],["fieldaction.combineactionconfig",{"_index":1867,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["fieldaction.combineactionconfig.name",{"_index":1868,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["fieldaction.combineactionconfig.populatefieldaction(fieldaction",{"_index":1872,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["fieldaction.isseparateorcombinemode",{"_index":1874,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["fieldaction.separateactionconfig",{"_index":1870,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["fieldaction.separateactionconfig.name",{"_index":1871,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["fieldaction.separateactionconfig.populatefieldaction(fieldaction",{"_index":1873,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["fieldactionargument",{"_index":1787,"title":{"classes/FieldActionArgument.html":{}},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"coverage.html":{}}}],["fieldactionargumentvalue",{"_index":1770,"title":{"classes/FieldActionArgumentValue.html":{}},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"coverage.html":{}}}],["fieldactionconfig",{"_index":1994,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactionconfig.name",{"_index":2033,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition",{"_index":1772,"title":{"classes/FieldActionDefinition.html":{}},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionComponent.html":{},"coverage.html":{}}}],["fieldactiondefinition.arguments.push(argumentdefinition",{"_index":2028,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.arguments[0",{"_index":3081,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["fieldactiondefinition.arguments[0].values",{"_index":3082,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["fieldactiondefinition.arguments[0].values.length",{"_index":3083,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["fieldactiondefinition.iscustom",{"_index":2005,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.method",{"_index":2011,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.multiplicity",{"_index":2013,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.name",{"_index":2003,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.populatefieldaction(action",{"_index":3075,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["fieldactiondefinition.serviceobject",{"_index":2015,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.sourcetype",{"_index":2007,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.targettype",{"_index":2009,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactions",{"_index":1982,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactionservice",{"_index":49,"title":{"injectables/FieldActionService.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"coverage.html":{},"overview.html":{}}}],["fieldcomponent",{"_index":1187,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldcomponent.getfield",{"_index":1196,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldcomponent.initialize(self.field",{"_index":1190,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldcomponent.issource",{"_index":1188,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldcomponents",{"_index":1013,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fielddepth",{"_index":1328,"title":{},"body":{"classes/EnumValue.html":{}}}],["fielddescription",{"_index":283,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["fielddetail",{"_index":1146,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fielddetailelement",{"_index":1014,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldeditcomponent",{"_index":409,"title":{"components/FieldEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fieldexists(targetfield",{"_index":3614,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["fieldgroup",{"_index":1856,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["fieldhasunmappedchild(field",{"_index":1337,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldisconstant",{"_index":2642,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldisproperty",{"_index":2641,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldmappingpair",{"_index":1849,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["fieldmode",{"_index":528,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"miscellaneous/enumerations.html":{}}}],["fieldmode.create",{"_index":559,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["fieldmode.edit",{"_index":558,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["fieldname",{"_index":2876,"title":{},"body":{"classes/MappingDefinition.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["fieldname.indexof",{"_index":2878,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["fieldname.split(':')[0",{"_index":2879,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["fieldname.split(':')[1",{"_index":2880,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["fieldnameblacklist",{"_index":91,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["fieldnames",{"_index":1355,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldnames.push(field.name",{"_index":1360,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldnames.sort",{"_index":1361,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldnode",{"_index":1566,"title":{"classes/FieldNode.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["fieldnode(this.mapping",{"_index":1729,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fieldnodes",{"_index":1672,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fieldnodes.find(n",{"_index":1727,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fieldpairmatchessearch",{"_index":3264,"title":{},"body":{"components/MappingListComponent.html":{}}}],["fieldpairmatchessearch(mapping",{"_index":3276,"title":{},"body":{"components/MappingListComponent.html":{}}}],["fieldpath",{"_index":1351,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["fieldpaths",{"_index":2647,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["fieldpaths.push(path",{"_index":2651,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldpaths.sort",{"_index":2652,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldpos",{"_index":2503,"title":{},"body":{"classes/LineModel.html":{}}}],["fields",{"_index":1346,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["fields.concat(docdef.getterminalfields",{"_index":3185,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["fields.length",{"_index":1362,"title":{},"body":{"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["fields.push(field",{"_index":3624,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["fields.push(fieldsbyname[name",{"_index":1363,"title":{},"body":{"classes/EnumValue.html":{}}}],["fields.push(mappedfield.field",{"_index":2723,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fields[fields.length",{"_index":2721,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldsbyname",{"_index":1353,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldsbyname[field.name",{"_index":1358,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldsbypath",{"_index":2646,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["fieldsbypath[path",{"_index":2650,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldshouldbevisible",{"_index":1020,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldtype",{"_index":2043,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fieldtypeselectionchanged",{"_index":2048,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fieldtypeselectionchanged(event",{"_index":2055,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fieldwidth",{"_index":924,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["fifty",{"_index":4304,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"license.html":{}}}],["filebin",{"_index":2318,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["filebody",{"_index":990,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["filecontent",{"_index":982,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["filed",{"_index":4411,"title":{},"body":{"license.html":{}}}],["filedata",{"_index":3770,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filemanagementservice",{"_index":52,"title":{"injectables/FileManagementService.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["filename",{"_index":943,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/ToolbarComponent.html":{}}}],["filename.concat('.adm",{"_index":3904,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filename.length",{"_index":3899,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filename.split('.').pop",{"_index":3903,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filereader",{"_index":2319,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["files",{"_index":2164,"title":{},"body":{"injectables/FileManagementService.html":{},"license.html":{}}}],["files.gz",{"_index":2249,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["fileservice",{"_index":154,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["filter",{"_index":2054,"title":{},"body":{"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["filtering",{"_index":89,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["find",{"_index":2581,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["findmappingfiles",{"_index":2149,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["findmappingfiles(filter",{"_index":2174,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["findmappingsforfield",{"_index":2768,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["findmappingsforfield(field",{"_index":2798,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["finish",{"_index":4073,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["firefox",{"_index":1112,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["first",{"_index":1828,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ToolbarComponent.html":{}}}],["fitness",{"_index":4472,"title":{},"body":{"license.html":{}}}],["fits",{"_index":926,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["fixed",{"_index":674,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["fixme",{"_index":3692,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["flags",{"_index":90,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["float",{"_index":582,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["fn",{"_index":1739,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fn.field",{"_index":1747,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fname",{"_index":973,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["focus",{"_index":449,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["focusdirective",{"_index":448,"title":{"directives/FocusDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["focusel",{"_index":456,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["following",{"_index":3218,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"index.html":{},"license.html":{}}}],["font",{"_index":4179,"title":{},"body":{"dependencies.html":{}}}],["foo.bar",{"_index":1524,"title":{},"body":{"classes/Examples.html":{}}}],["for_each",{"_index":3922,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["forkjoin",{"_index":2226,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["forkjoin(operations).topromise().then((data",{"_index":2340,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["form",{"_index":969,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"license.html":{}}}],["format",{"_index":2168,"title":{},"body":{"injectables/FileManagementService.html":{},"license.html":{}}}],["formattedfield",{"_index":2114,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["formattedfield['displayname'].tolowercase().indexof(filter.tolowercase",{"_index":2115,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["formattedfields",{"_index":2110,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["formattedfields.length",{"_index":2117,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["formattedfields.push(formattedfield",{"_index":2116,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["formsmodule",{"_index":835,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["found",{"_index":4230,"title":{},"body":{"index.html":{}}}],["foundfields",{"_index":3619,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["foundfields.length",{"_index":3621,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["foundselectedmapping",{"_index":2455,"title":{},"body":{"classes/LineModel.html":{}}}],["free",{"_index":4381,"title":{},"body":{"license.html":{}}}],["fromjson",{"_index":2610,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["fromjson(json",{"_index":2531,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["full",{"_index":677,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/FileManagementService.html":{}}}],["function",{"_index":1248,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"injectables/FileManagementService.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/TransitionSelectionComponent.html":{}}}],["g",{"_index":1565,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["generated",{"_index":2712,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"license.html":{}}}],["generateinitialexpression",{"_index":1581,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["generating",{"_index":279,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["generically",{"_index":1836,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["geometry",{"_index":2399,"title":{},"body":{"classes/LineModel.html":{}}}],["getactionconfigparamvalues",{"_index":2950,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getactionconfigparamvalues(argconfig",{"_index":2974,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getactionconfigparamvdefault",{"_index":2951,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getactionconfigparamvdefault(argconfig",{"_index":2976,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getactionconfigs",{"_index":3044,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["getactiondefinitionforname",{"_index":1920,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactiondefinitionforname(actionname",{"_index":1931,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactionsappliestofield",{"_index":1921,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactionsappliestofield(mapping",{"_index":1934,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactualdelimiter",{"_index":3987,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["getactualfield",{"_index":1892,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["getactualfield(mapping",{"_index":1831,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["getaddbuttonlabel",{"_index":3094,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getalldocs",{"_index":272,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getallfields",{"_index":2733,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["getallmappedfields",{"_index":2735,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getallmappings",{"_index":2769,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["getallmappings(includeactivemapping",{"_index":2800,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["getargumentforname",{"_index":1893,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["getargumentforname(name",{"_index":1825,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["getargumentvalue",{"_index":1768,"title":{},"body":{"classes/FieldAction.html":{}}}],["getargumentvalue(argumentname",{"_index":1781,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["getcfg",{"_index":2220,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getclass",{"_index":3377,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getcollectionparentfield",{"_index":1402,"title":{},"body":{"classes/EnumValue.html":{}}}],["getcollectiontype",{"_index":1409,"title":{},"body":{"classes/EnumValue.html":{}}}],["getcomplexfield(classidentifier",{"_index":3608,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getconfig",{"_index":175,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getcssclass",{"_index":506,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["getcssclass(action",{"_index":3787,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["getcurrentadmcatalog",{"_index":2150,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getcurrentmappingcatalog",{"_index":2151,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getcurrentmappingjson",{"_index":2152,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getdocforidentifier(documentid",{"_index":265,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getdocmap",{"_index":2770,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["getdocmap(cfg",{"_index":2803,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["getdocs(issource",{"_index":241,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getdocswithoutpropertydoc(issource",{"_index":237,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getdocumentbyidentifier(documentid",{"_index":3603,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["geteditorsettingscssclass",{"_index":3774,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["geteditorsettingscssclass(open",{"_index":3789,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["getelementposition",{"_index":1021,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getentryforsource",{"_index":2513,"title":{},"body":{"classes/LookupTable.html":{}}}],["getentryforsource(sourcevalue",{"_index":2521,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["getenumfield(classidentifier",{"_index":3610,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["geterrors",{"_index":654,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["geterrors().length",{"_index":3453,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["getfield",{"_index":531,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["getfield(fieldpath",{"_index":1350,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["getfielddetailcomponent",{"_index":1022,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getfielddetailcomponent(field",{"_index":1056,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getfieldid",{"_index":1023,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getfieldlabel(showtypes",{"_index":1411,"title":{},"body":{"classes/EnumValue.html":{}}}],["getfieldnames(fields",{"_index":1348,"title":{},"body":{"classes/EnumValue.html":{}}}],["getfieldnames(issource",{"_index":2724,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getfieldpath",{"_index":3198,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["getfieldpaths(fields",{"_index":1344,"title":{},"body":{"classes/EnumValue.html":{}}}],["getfieldpaths(issource",{"_index":2729,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getfields(fieldpaths",{"_index":3622,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getfields(issource",{"_index":2722,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getfieldtypeicon",{"_index":1024,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getfilesuffix",{"_index":3775,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["getfirstcollectionfield(issource",{"_index":2676,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getfirsterror",{"_index":655,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getfirsterror().message",{"_index":746,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getfirstmappingforlookuptable",{"_index":2771,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["getfirstmappingforlookuptable(lookuptablename",{"_index":2808,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["getfirstwarning",{"_index":656,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getfirstwarning().message",{"_index":745,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getfirstxmldoc(issource",{"_index":270,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getformattedoutputpath",{"_index":3339,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["getformattedoutputpath(path",{"_index":3343,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["getformattedoutputpath(selectedfield.path",{"_index":3374,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["getformattedoutputpath(sourcefield.field.path",{"_index":3404,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getformattedoutputpath(targetfield.field.path",{"_index":3406,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getindexformappedfield(mappedfield",{"_index":2709,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getinfos",{"_index":657,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getinitialfocuselement",{"_index":461,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["getinputoutputkey",{"_index":2514,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["getitemscssclass",{"_index":3265,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["getjsonbuf",{"_index":2153,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getlabel",{"_index":2952,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["getlabel(actionconfig.name",{"_index":3084,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["getlabel(argconfig.name",{"_index":3037,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getlabel(argconfigname",{"_index":2984,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getlabel(paramname",{"_index":3056,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["getlastmappedfield(issource",{"_index":2720,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getlastnode",{"_index":1589,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["getlastnodeindex",{"_index":1587,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["getmappedfieldactions",{"_index":2953,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["getmappedfieldforfield(field",{"_index":2705,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getmappedfieldforindex(index",{"_index":2706,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getmappedfields",{"_index":3266,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappedfields(issource",{"_index":2719,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getmappedfields(mapping",{"_index":3279,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappedtarget(field",{"_index":2742,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getmappedvaluecount",{"_index":4079,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["getmappingclass",{"_index":1025,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getmappingcssclass",{"_index":3267,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappingcssclass(mapping",{"_index":3281,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappingid",{"_index":2154,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getmappingmodename",{"_index":4000,"title":{},"body":{"classes/TransitionModel.html":{}}}],["getmappingmodename(mode",{"_index":3973,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["getmappingrowscssclass",{"_index":3268,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappings",{"_index":3269,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getname(showtypes",{"_index":3625,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getnamespacecssclass",{"_index":3509,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getnamespacecssclass(namespace",{"_index":3519,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getnamespaceforalias(alias",{"_index":3626,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getnamespaces",{"_index":3510,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getnamespaces().length",{"_index":3563,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getnamewithnamespace",{"_index":1369,"title":{},"body":{"classes/EnumValue.html":{}}}],["getnode(nodeid",{"_index":1591,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["getparentobjectname",{"_index":3199,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["getparenttoggleclass",{"_index":1026,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getprettylabel",{"_index":3570,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getprettyname",{"_index":3989,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["getpreviewerrors",{"_index":2672,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getpreviewwarnings",{"_index":2674,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getrowscssclass",{"_index":3511,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getrowtitlecssclass",{"_index":3270,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["getscreenposforfield(field",{"_index":2496,"title":{},"body":{"classes/LineModel.html":{}}}],["getsearchiconcssclass",{"_index":3271,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["getsearchplaceholder",{"_index":3095,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getselected",{"_index":1085,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getselectedmapping",{"_index":3340,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["getselectedmappingcomponent",{"_index":3341,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["getserializeddelimeter",{"_index":3984,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["getsourceiconcssclass",{"_index":3200,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["getsourcetargetlabeltext",{"_index":3378,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getsourcetargetlabeltext(false",{"_index":3405,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getsourcetargetlabeltext(issource",{"_index":3393,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getsourcetargetlabeltext(true",{"_index":3403,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getspacerwidth",{"_index":1027,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["gettablebyname",{"_index":2772,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettablebyname(name",{"_index":2811,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettablebysourcetarget",{"_index":2773,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettablebysourcetarget(sourceidentifier",{"_index":2813,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettables",{"_index":2774,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettargetfieldfromline(selectedlineattrs",{"_index":2401,"title":{},"body":{"classes/LineModel.html":{}}}],["getterminalfields",{"_index":3644,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getting",{"_index":4215,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettitle",{"_index":2906,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["gettoken",{"_index":311,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["gettopfieldtypelabel",{"_index":3096,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["gettransformationclass",{"_index":1028,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["gettransitiondelimiterfromactual",{"_index":4001,"title":{},"body":{"classes/TransitionModel.html":{}}}],["gettransitiondelimiterfromactual(actualdelimiter",{"_index":3981,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["gettransitiondelimiterprettyname",{"_index":4002,"title":{},"body":{"classes/TransitionModel.html":{}}}],["gettransitiondelimiterprettyname(delimiter",{"_index":3978,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["getunqualifiednamespace",{"_index":3571,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getuserfieldcount(field",{"_index":2692,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getusermappedfields(issource",{"_index":2714,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getuuid",{"_index":1540,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["getvalidationerrors",{"_index":2665,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getvalidationwarnings",{"_index":2667,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getwarnings",{"_index":658,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["getwarnings().length",{"_index":3452,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["git",{"_index":4235,"title":{},"body":{"index.html":{}}}],["github",{"_index":4234,"title":{},"body":{"index.html":{}}}],["give",{"_index":4415,"title":{},"body":{"license.html":{}}}],["global",{"_index":1103,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["glue",{"_index":1670,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["go",{"_index":1676,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["goodwill",{"_index":4499,"title":{},"body":{"license.html":{}}}],["governing",{"_index":825,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["gradient",{"_index":2370,"title":{},"body":{"classes/LineModel.html":{}}}],["grant",{"_index":4373,"title":{},"body":{"license.html":{}}}],["granted",{"_index":4312,"title":{},"body":{"license.html":{}}}],["granting",{"_index":4285,"title":{},"body":{"license.html":{}}}],["grants",{"_index":4375,"title":{},"body":{"license.html":{}}}],["grossly",{"_index":4488,"title":{},"body":{"license.html":{}}}],["gzip",{"_index":2171,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["half",{"_index":697,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["hand",{"_index":3216,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["handle",{"_index":691,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlealertclick",{"_index":3409,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["handlealertclick(event",{"_index":3422,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["handlealertclose",{"_index":659,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlealertclose(e",{"_index":684,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handleclick",{"_index":660,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handleclick(event",{"_index":687,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handledocumentfieldmouseover(component",{"_index":2445,"title":{},"body":{"classes/LineModel.html":{}}}],["handleerror",{"_index":2155,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["handleerror(message",{"_index":2185,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["handleexportclick",{"_index":3776,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handleexportclick(event",{"_index":3793,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handleexportmapping",{"_index":3777,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handleexportmapping(event",{"_index":3796,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handleexportmappingcancel",{"_index":3778,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handlelineclick(event",{"_index":2416,"title":{},"body":{"classes/LineModel.html":{}}}],["handlemappingsinstancename",{"_index":3779,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handlemappingsinstancename(event",{"_index":3801,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handlemouseclick",{"_index":507,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["handlemouseclick(event",{"_index":514,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["handlemouseenter",{"_index":661,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlemouseenter(evt1",{"_index":689,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlemouseleave",{"_index":662,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlemouseleave(evt1",{"_index":701,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlemouseover",{"_index":1029,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["handlemouseover(event",{"_index":1074,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["handlemouseover(evt1",{"_index":3121,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["handleonblur",{"_index":2049,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["handleonblur(event",{"_index":2059,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["handler.service",{"_index":35,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["handler.service.ts",{"_index":1422,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:24",{"_index":1468,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:26",{"_index":1444,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:27",{"_index":1457,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:28",{"_index":1467,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:29",{"_index":1455,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:30",{"_index":1465,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:31",{"_index":1459,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:33",{"_index":1463,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:38",{"_index":1461,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:43",{"_index":1440,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:51",{"_index":1441,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:59",{"_index":1442,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:73",{"_index":1446,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:80",{"_index":1437,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:90",{"_index":1439,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleredrawmappinglinesevent(event",{"_index":2395,"title":{},"body":{"classes/LineModel.html":{}}}],["handles",{"_index":2140,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["handling",{"_index":1650,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["happen",{"_index":3696,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["happening",{"_index":3694,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["harmless",{"_index":4524,"title":{},"body":{"license.html":{}}}],["hasfieldactions",{"_index":2730,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["hasfocus",{"_index":2349,"title":{},"body":{"directives/FocusDirective.html":{}}}],["hash",{"_index":3930,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["hasjavadocuments",{"_index":258,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["hasmappedfield(issource",{"_index":2695,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["hastransformation",{"_index":2739,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["hasunmappedchildren",{"_index":1330,"title":{},"body":{"classes/EnumValue.html":{}}}],["hat",{"_index":795,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["hdd",{"_index":3253,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["header",{"_index":333,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/CollapsableHeaderComponent.html":{}}}],["header'},{'name",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["header.component",{"_index":855,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingDetailComponent.html":{}}}],["header.component.html",{"_index":505,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["header.component.ts",{"_index":504,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:25",{"_index":512,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["header.component.ts:26",{"_index":511,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["header.component.ts:28",{"_index":516,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["header.component.ts:32",{"_index":513,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["headername",{"_index":351,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":354,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["headertext",{"_index":1245,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["height",{"_index":4184,"title":{},"body":{"dependencies.html":{}}}],["hello",{"_index":3440,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["here",{"_index":13,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["hereby",{"_index":4374,"title":{},"body":{"license.html":{}}}],["herein",{"_index":4453,"title":{},"body":{"license.html":{}}}],["hold",{"_index":4523,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3219,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["host",{"_index":596,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["host'},{'name",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["host.component",{"_index":844,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["host.component.ts",{"_index":593,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"coverage.html":{}}}],["host.component.ts:38",{"_index":600,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["host.component.ts:42",{"_index":601,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["html",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["htmlcache",{"_index":1580,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["http",{"_index":301,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["http://127.0.0.1:8585",{"_index":4253,"title":{},"body":{"index.html":{}}}],["http://localhost:3000",{"_index":4270,"title":{},"body":{"index.html":{}}}],["http://localhost:8585/v2/atlas",{"_index":4562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8585/v2/atlas/java",{"_index":4564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8585/v2/atlas/json",{"_index":4568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8585/v2/atlas/xml",{"_index":4566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://stackoverflow.com/questions/40811809/add",{"_index":1267,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["http://www.apache.org/licenses",{"_index":4273,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":807,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["http://www.w3schools.com/howto/howto_css_modals.asp",{"_index":1242,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["http_interceptors",{"_index":834,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["http_status_no_content",{"_index":908,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["http_status_ok",{"_index":909,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["httpclient",{"_index":1924,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["httpclientmodule",{"_index":832,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["httpclientxsrfmodule",{"_index":833,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["httpclientxsrfmodule.withoptions(environment.xsrf",{"_index":895,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["httpclientxsrfmoduleforroot",{"_index":894,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpevent",{"_index":317,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httphandler",{"_index":319,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httpheaders",{"_index":1941,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["httpinterceptor",{"_index":318,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httprequest",{"_index":320,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httprequest.clone",{"_index":353,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httprequest.headers.has(headername",{"_index":352,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httprequest.headers.set(headername",{"_index":355,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["https://github.com/atlasmap/atlasmap",{"_index":4237,"title":{},"body":{"index.html":{}}}],["https://github.com/atlasmap/atlasmap/issues/1128",{"_index":3641,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["https://github.com/atlasmap/atlasmap/issues/329",{"_index":3890,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["https://github.com/atlasmap/atlasmap/issues/912",{"_index":3944,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["httpxsrftokenextractor",{"_index":321,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{}}}],["human",{"_index":967,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["i.message",{"_index":744,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["icon",{"_index":886,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{}}}],["id",{"_index":114,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["identification",{"_index":4541,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":1462,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"coverage.html":{}}}],["identify",{"_index":3021,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["identifying",{"_index":4534,"title":{},"body":{"license.html":{}}}],["ignore",{"_index":1091,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["ii",{"_index":4302,"title":{},"body":{"license.html":{}}}],["iii",{"_index":4308,"title":{},"body":{"license.html":{}}}],["immutable",{"_index":2658,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["implements",{"_index":326,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["implied",{"_index":821,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["import",{"_index":21,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"modules/ExampleAppModule.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["import/export",{"_index":101,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{}}}],["importadmcatalog",{"_index":2156,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["importadmcatalog(mappingsfilename",{"_index":2187,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["imported",{"_index":2205,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["importmappings",{"_index":3862,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["imports",{"_index":901,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"components/ToolbarComponent.html":{}}}],["improving",{"_index":4364,"title":{},"body":{"license.html":{}}}],["inability",{"_index":4497,"title":{},"body":{"license.html":{}}}],["inc",{"_index":796,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["incidental",{"_index":4494,"title":{},"body":{"license.html":{}}}],["include",{"_index":4337,"title":{},"body":{"license.html":{}}}],["includeactivemapping",{"_index":2802,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["included",{"_index":2713,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"license.html":{}}}],["includepath",{"_index":1412,"title":{},"body":{"classes/EnumValue.html":{}}}],["includes",{"_index":4430,"title":{},"body":{"license.html":{}}}],["including",{"_index":2144,"title":{},"body":{"injectables/FileManagementService.html":{},"license.html":{}}}],["inclusion",{"_index":4347,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":4372,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":4525,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":4521,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":4512,"title":{},"body":{"license.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexing",{"_index":3166,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["indexselectionchanged",{"_index":3201,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["indexselectionchanged(event",{"_index":3214,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["indicated",{"_index":4324,"title":{},"body":{"license.html":{}}}],["indicator",{"_index":1601,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["indices",{"_index":3222,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["indirect",{"_index":4296,"title":{},"body":{"license.html":{}}}],["individual",{"_index":4310,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["info(message",{"_index":1456,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["information",{"_index":608,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"license.html":{}}}],["informational",{"_index":4438,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":4395,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4408,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":2086,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["inherited",{"_index":2130,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["initcfg",{"_index":136,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["initialfocuselement",{"_index":1289,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["initialfocuselement.nativeelement.focus",{"_index":1291,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["initialization",{"_index":3878,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["initializationerroroccurred",{"_index":66,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["initializationservice",{"_index":41,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{},"overview.html":{}}}],["initialize",{"_index":462,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["initialize(cfg",{"_index":2557,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["initialize(field",{"_index":472,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["initialize(namespace",{"_index":3488,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["initialized",{"_index":58,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["initializefromfields",{"_index":3646,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["initializemappinglookuptable",{"_index":2775,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["initializemappinglookuptable(m",{"_index":2816,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["initializing",{"_index":610,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["initmodel",{"_index":3593,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["injectable",{"_index":293,"title":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"coverage.html":{}}}],["injectables",{"_index":295,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"overview.html":{}}}],["input",{"_index":517,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceListComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["inputfield",{"_index":2477,"title":{},"body":{"classes/LineModel.html":{},"classes/MappingDefinition.html":{}}}],["inputfield.classidentifier",{"_index":2856,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["inputfieldpos",{"_index":2480,"title":{},"body":{"classes/LineModel.html":{}}}],["inputfieldpos.y",{"_index":2483,"title":{},"body":{"classes/LineModel.html":{}}}],["inputid",{"_index":3089,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["inputs",{"_index":508,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"directives/FocusDirective.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["inputvalue",{"_index":4055,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["inputvalue.length",{"_index":4064,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["insert",{"_index":1619,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["insertbeforemappedfield",{"_index":3110,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["inserted",{"_index":1712,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["insertion",{"_index":3247,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["insertionindex",{"_index":3242,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["insertnodes(newnodes",{"_index":1640,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["insertposition",{"_index":1636,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["inserttext(str",{"_index":1633,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["inside",{"_index":1269,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["inspection",{"_index":87,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["inspectionresult",{"_index":120,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["inspectionsource",{"_index":119,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["inspectiontype",{"_index":46,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["inspectiontype.instance",{"_index":2293,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["inspectiontype.java_class",{"_index":2295,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["inspectiontype.schema",{"_index":2294,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["install",{"_index":4247,"title":{},"body":{"index.html":{}}}],["installor",{"_index":4241,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1450,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["instance/schema/mappings",{"_index":2289,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["instanceof",{"_index":1608,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["instead",{"_index":309,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["institute",{"_index":4398,"title":{},"body":{"license.html":{}}}],["instr",{"_index":957,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["int8array(reader.result",{"_index":994,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["integer",{"_index":575,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["integrations",{"_index":4222,"title":{},"body":{"index.html":{}}}],["intentionally",{"_index":4345,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":4218,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":358,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{}}}],["intercept(httprequest",{"_index":335,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["interceptor",{"_index":329,"title":{"interceptors/ApiXsrfInterceptor.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":357,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{}}}],["interface",{"_index":1243,"title":{"interfaces/ModalErrorWindowValidator.html":{},"interfaces/ModalWindowValidator.html":{}},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":3455,"title":{},"body":{"interfaces/ModalErrorWindowValidator.html":{},"interfaces/ModalWindowValidator.html":{},"license.html":{},"overview.html":{}}}],["internal",{"_index":2987,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["invalidate",{"_index":3072,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["invoke",{"_index":4043,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["io.atlasmap.java.v2",{"_index":128,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["io.atlasmap.json.v2",{"_index":130,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["io.atlasmap.json.v2.jsonfield",{"_index":2119,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["io.atlasmap.v2",{"_index":126,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["io.atlasmap.xml.v2",{"_index":132,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["io.atlasmap.xml.v2.xmlfield",{"_index":2120,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["iokey",{"_index":2866,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["irrevocable",{"_index":4382,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":3324,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["isactivemapping",{"_index":3272,"title":{},"body":{"components/MappingListComponent.html":{}}}],["isactivemapping(mapping",{"_index":3287,"title":{},"body":{"components/MappingListComponent.html":{}}}],["isadd",{"_index":473,"title":{},"body":{"components/ClassNameComponent.html":{},"components/FieldEditComponent.html":{}}}],["isaddbuttonvisible",{"_index":3097,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["isarray",{"_index":1332,"title":{},"body":{"classes/EnumValue.html":{}}}],["isattribute",{"_index":1333,"title":{},"body":{"classes/EnumValue.html":{}}}],["isclasspathresolutionneeded",{"_index":262,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["isclosing",{"_index":529,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["iscollection",{"_index":1331,"title":{},"body":{"classes/EnumValue.html":{}}}],["isconstant",{"_index":1176,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{}}}],["iscustom",{"_index":1794,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["isdatavalid",{"_index":463,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["isdebugenabled",{"_index":187,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["isdragdroptarget",{"_index":1015,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["iseditmode",{"_index":3539,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["isempty",{"_index":2698,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["isenumerationmode",{"_index":3999,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["isfieldmapped(field",{"_index":2737,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["isfieldsexist(fields",{"_index":3618,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["isforeachmode",{"_index":3998,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["isfullymapped",{"_index":2699,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["isincollection",{"_index":1406,"title":{},"body":{"classes/EnumValue.html":{}}}],["isindexarg",{"_index":3045,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["isindexarg(argval",{"_index":3060,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["isinitialized",{"_index":1916,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["islookupmode",{"_index":2682,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["ismanytoonemode",{"_index":3997,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["ismappingstale",{"_index":2776,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["ismappingstale(mapping",{"_index":2818,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["isn't",{"_index":1100,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["isoddrow",{"_index":3379,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["isonetomanymode",{"_index":3995,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["isonetoonemode",{"_index":3996,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["isopen",{"_index":651,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["ispadfield",{"_index":2619,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["isparentfield",{"_index":1372,"title":{},"body":{"classes/EnumValue.html":{}}}],["ispartialcomponent",{"_index":3098,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["isprimitive",{"_index":1334,"title":{},"body":{"classes/EnumValue.html":{}}}],["isproperty",{"_index":1174,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{}}}],["ispropertyorconstant",{"_index":1418,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["isrequiredfieldvalid(value",{"_index":286,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["isselectedmapping",{"_index":2472,"title":{},"body":{"classes/LineModel.html":{}}}],["isseparateorcombinemode",{"_index":1765,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["issource",{"_index":116,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/NamespaceModel.html":{}}}],["isstringfield",{"_index":1376,"title":{},"body":{"classes/EnumValue.html":{}}}],["issue",{"_index":4359,"title":{},"body":{"license.html":{}}}],["istarget",{"_index":3566,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["isterminal",{"_index":1377,"title":{},"body":{"classes/EnumValue.html":{}}}],["istraceenabled",{"_index":190,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["istransformcapable",{"_index":3202,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["isuserdelimiter",{"_index":4027,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["isuserdelimiter(delimitermodel",{"_index":4032,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["isvalidation",{"_index":664,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["isxml",{"_index":2044,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["it's",{"_index":1093,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["item",{"_index":951,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["itemrow",{"_index":3536,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["items",{"_index":949,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["items.length",{"_index":985,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["itemwasremoved",{"_index":986,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["jackson",{"_index":1530,"title":{},"body":{"classes/Examples.html":{}}}],["january",{"_index":4271,"title":{},"body":{"license.html":{}}}],["jar",{"_index":1527,"title":{},"body":{"classes/Examples.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["jars",{"_index":3819,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["java",{"_index":223,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["java_archive",{"_index":4209,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["java_class",{"_index":4213,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["javainspectionserviceurl",{"_index":4563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["javaservicespackageprefix",{"_index":127,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["jquery",{"_index":4182,"title":{},"body":{"dependencies.html":{}}}],["jquery(function",{"_index":4042,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["js",{"_index":4177,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":2167,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/LookupTableEntry.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["json.sourcetype",{"_index":2533,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["json.sourcevalue",{"_index":2532,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["json.stringify(actiondetail",{"_index":2002,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["json.stringify(body",{"_index":1990,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["json.stringify(data",{"_index":2342,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["json.stringify(res",{"_index":2262,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["json.targettype",{"_index":2535,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["json.targetvalue",{"_index":2534,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["jsonbuffer",{"_index":2147,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["jsonheaders",{"_index":2336,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["jsoninspectionserviceurl",{"_index":4567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jsonservicespackageprefix",{"_index":129,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["kept",{"_index":2214,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["key",{"_index":1354,"title":{},"body":{"classes/EnumValue.html":{},"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["keypos",{"_index":1609,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["kind",{"_index":819,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["knowing",{"_index":1107,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["l",{"_index":2424,"title":{},"body":{"classes/LineModel.html":{}}}],["l.sourcex",{"_index":2425,"title":{},"body":{"classes/LineModel.html":{}}}],["l.sourcey",{"_index":2426,"title":{},"body":{"classes/LineModel.html":{}}}],["l.stroke",{"_index":2429,"title":{},"body":{"classes/LineModel.html":{}}}],["l.style",{"_index":2465,"title":{},"body":{"classes/LineModel.html":{}}}],["l.targetfield",{"_index":2430,"title":{},"body":{"classes/LineModel.html":{}}}],["l.targetx",{"_index":2427,"title":{},"body":{"classes/LineModel.html":{}}}],["l.targety",{"_index":2428,"title":{},"body":{"classes/LineModel.html":{}}}],["label",{"_index":2988,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["language",{"_index":824,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["last",{"_index":1642,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["last.str",{"_index":1697,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["last.str.length",{"_index":1696,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["last.str.substring(0",{"_index":1698,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastaddedindex",{"_index":1667,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastfieldrefremoved(removed.field",{"_index":1695,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastnewnodeindex",{"_index":1654,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastnode",{"_index":1607,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastnode.str.indexof",{"_index":1610,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastnode.str.length",{"_index":1755,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastseparator",{"_index":2875,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["lasttextnode",{"_index":1645,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["latest",{"_index":1625,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["law",{"_index":810,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["lawsuit",{"_index":4404,"title":{},"body":{"license.html":{}}}],["leaf",{"_index":931,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingFieldContainerComponent.html":{}}}],["leaf.length",{"_index":1007,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["leaf.substr(0",{"_index":1005,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["leave",{"_index":2094,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["left",{"_index":1212,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["left_bracket",{"_index":3589,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["legal",{"_index":4286,"title":{},"body":{"license.html":{}}}],["legend",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"overview.html":{}}}],["legible",{"_index":2989,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["length",{"_index":4067,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["level",{"_index":1436,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/NamespaceModel.html":{},"miscellaneous/variables.html":{}}}],["liability",{"_index":4483,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4491,"title":{},"body":{"license.html":{}}}],["lib/atlasmap",{"_index":1518,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["licensable",{"_index":4393,"title":{},"body":{"license.html":{}}}],["license",{"_index":800,"title":{"license.html":{}},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["license.you",{"_index":4445,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":797,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["licenses",{"_index":4409,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":4281,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":4470,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":827,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["limited",{"_index":4316,"title":{},"body":{"license.html":{}}}],["line",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["line.sourcex",{"_index":2405,"title":{},"body":{"classes/LineModel.html":{}}}],["line.sourcey",{"_index":2407,"title":{},"body":{"classes/LineModel.html":{}}}],["line.targetfield",{"_index":2412,"title":{},"body":{"classes/LineModel.html":{}}}],["line.targetx",{"_index":2409,"title":{},"body":{"classes/LineModel.html":{}}}],["line.targety",{"_index":2411,"title":{},"body":{"classes/LineModel.html":{}}}],["linebeingformed",{"_index":2382,"title":{},"body":{"classes/LineModel.html":{}}}],["linemachine",{"_index":1032,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["linemachinecomponent",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["linemachineelement",{"_index":2386,"title":{},"body":{"classes/LineModel.html":{}}}],["linemachineheight",{"_index":2470,"title":{},"body":{"classes/LineModel.html":{}}}],["linemodel",{"_index":2358,"title":{"classes/LineModel.html":{}},"body":{"classes/LineModel.html":{},"coverage.html":{}}}],["lines",{"_index":2381,"title":{},"body":{"classes/LineModel.html":{},"components/ToolbarComponent.html":{}}}],["link",{"_index":3310,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["list",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["list'},{'name",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["list.component",{"_index":864,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["list.component.html",{"_index":3261,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts",{"_index":3260,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"coverage.html":{}}}],["list.component.ts:104",{"_index":3533,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:107",{"_index":3288,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:109",{"_index":3524,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:111",{"_index":3290,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:114",{"_index":3526,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:134",{"_index":3528,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:148",{"_index":3529,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:30",{"_index":3275,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:31",{"_index":3515,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:32",{"_index":3296,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:33",{"_index":3295,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:34",{"_index":3297,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:35",{"_index":3534,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:36",{"_index":3278,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:37",{"_index":3535,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:39",{"_index":3520,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:40",{"_index":3291,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:47",{"_index":3282,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:48",{"_index":3530,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:55",{"_index":3532,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:56",{"_index":3293,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:59",{"_index":3518,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:60",{"_index":3285,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:63",{"_index":3523,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:64",{"_index":3283,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:67",{"_index":3522,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:68",{"_index":3284,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:71",{"_index":3521,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:72",{"_index":3280,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:75",{"_index":3517,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:76",{"_index":3294,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:81",{"_index":3286,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:86",{"_index":3277,"title":{},"body":{"components/MappingListComponent.html":{}}}],["lists",{"_index":4357,"title":{},"body":{"license.html":{}}}],["literal",{"_index":2792,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["litigation",{"_index":4399,"title":{},"body":{"license.html":{}}}],["little",{"_index":4244,"title":{},"body":{"index.html":{}}}],["live",{"_index":3803,"title":{},"body":{"components/ToolbarComponent.html":{},"index.html":{}}}],["lmcinstance",{"_index":2396,"title":{},"body":{"classes/LineModel.html":{}}}],["lmcinstance.redrawlinesformappings",{"_index":2398,"title":{},"body":{"classes/LineModel.html":{}}}],["load",{"_index":1974,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["loadcomponent",{"_index":1280,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["loading",{"_index":61,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["loadingstatus",{"_index":60,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["local",{"_index":347,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["locale",{"_index":3602,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["location",{"_index":3506,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{}}}],["locationuri",{"_index":3567,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["logger",{"_index":25,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["loggermodule",{"_index":842,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["loggermodule.forroot(environment.ngxloggerconfig",{"_index":899,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["loggermoduleforroot",{"_index":898,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["long",{"_index":583,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["looking",{"_index":3629,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["lookup",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["lookuptable",{"_index":2508,"title":{"classes/LookupTable.html":{}},"body":{"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappingDefinition.html":{},"coverage.html":{}}}],["lookuptablecomponent",{"_index":413,"title":{"components/LookupTableComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lookuptabledata",{"_index":2561,"title":{"classes/LookupTableData.html":{}},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"coverage.html":{}}}],["lookuptableentry",{"_index":2517,"title":{"classes/LookupTableEntry.html":{}},"body":{"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"coverage.html":{}}}],["lookuptablename",{"_index":2810,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["loss",{"_index":4498,"title":{},"body":{"license.html":{}}}],["losses",{"_index":4505,"title":{},"body":{"license.html":{}}}],["lost",{"_index":4058,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["m",{"_index":2456,"title":{},"body":{"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["m.actualdelimiter",{"_index":3982,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["m.delimiter",{"_index":3979,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["m.getfields(false)[0",{"_index":2857,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["m.getfields(true)[0",{"_index":2855,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["m.isfieldmapped(field",{"_index":2746,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["m.prettyname",{"_index":3980,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["m.serializedvalue",{"_index":3986,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["m.sourcefields",{"_index":2476,"title":{},"body":{"classes/LineModel.html":{}}}],["m.sourcefields.length",{"_index":2473,"title":{},"body":{"classes/LineModel.html":{}}}],["m.sourcefields[0].field.name",{"_index":2747,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["m.targetfields",{"_index":2486,"title":{},"body":{"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["m.targetfields.length",{"_index":2474,"title":{},"body":{"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["m.transition.lookuptablename",{"_index":2854,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["m1",{"_index":1070,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["machine",{"_index":2377,"title":{},"body":{"classes/LineModel.html":{}}}],["machine'},{'name",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["machine.component",{"_index":851,"title":{},"body":{"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["machine.component.html",{"_index":2378,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts",{"_index":2360,"title":{},"body":{"classes/LineModel.html":{},"coverage.html":{}}}],["machine.component.ts:29",{"_index":2367,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:30",{"_index":2368,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:31",{"_index":2375,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:32",{"_index":2376,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:33",{"_index":2372,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:34",{"_index":2373,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:35",{"_index":2374,"title":{},"body":{"classes/LineModel.html":{}}}],["made",{"_index":2969,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"license.html":{}}}],["mailing",{"_index":4356,"title":{},"body":{"license.html":{}}}],["main",{"_index":1452,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["make",{"_index":1380,"title":{},"body":{"classes/EnumValue.html":{},"components/MappingFieldActionArgumentComponent.html":{},"license.html":{}}}],["making",{"_index":4314,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":4503,"title":{},"body":{"license.html":{}}}],["managed",{"_index":4361,"title":{},"body":{"license.html":{}}}],["management",{"_index":3799,"title":{},"body":{"components/ToolbarComponent.html":{},"license.html":{}}}],["management.service",{"_index":38,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{}}}],["management.service.ts",{"_index":2139,"title":{},"body":{"injectables/FileManagementService.html":{},"coverage.html":{}}}],["management.service.ts:108",{"_index":2176,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:138",{"_index":2200,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:162",{"_index":2211,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:186",{"_index":2203,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:213",{"_index":2162,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:312",{"_index":2188,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:33",{"_index":2218,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:35",{"_index":2219,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:353",{"_index":2183,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:378",{"_index":2182,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:38",{"_index":2160,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:413",{"_index":2184,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:417",{"_index":2186,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:42",{"_index":2221,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:46",{"_index":2223,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:53",{"_index":2175,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:81",{"_index":2177,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["manipulation",{"_index":2141,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["manually",{"_index":4264,"title":{},"body":{"index.html":{}}}],["many",{"_index":3975,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["many_to_one",{"_index":1792,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["map",{"_index":500,"title":{},"body":{"components/ClassNameComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/MappingDefinition.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["mapped",{"_index":1711,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["mappedfield",{"_index":1551,"title":{"classes/MappedField.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["mappedfield.actions",{"_index":2891,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["mappedfield.actions.length",{"_index":2732,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedfield.actions.push(action",{"_index":2899,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["mappedfield.field",{"_index":2648,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingListComponent.html":{}}}],["mappedfield.field.displayname",{"_index":2882,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["mappedfield.field.isattribute",{"_index":2883,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["mappedfield.field.issource",{"_index":3249,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["mappedfield.field.name",{"_index":2881,"title":{},"body":{"classes/MappingDefinition.html":{},"components/MappingFieldDetailComponent.html":{}}}],["mappedfield.field.namespacealias",{"_index":2884,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["mappedfield.field.parentfield",{"_index":2886,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["mappedfield.field.path",{"_index":2649,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedfield.field.type",{"_index":3257,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["mappedfield.ispadfield",{"_index":2694,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedfield.parseddata.parsedactions",{"_index":2893,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["mappedfield.parseddata.parsedactions.length",{"_index":2892,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["mappedfield.parseddata.parsedindex",{"_index":2901,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["mappedfield.parseddata.parsedname",{"_index":2889,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["mappedfieldparsingdata",{"_index":2624,"title":{"classes/MappedFieldParsingData.html":{}},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"coverage.html":{}}}],["mappedfields",{"_index":1716,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{}}}],["mappedfields.includes(node.field",{"_index":1722,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["mappedfields.length",{"_index":2645,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["mappedfields[+index",{"_index":2708,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedfields[0].field.isincollection",{"_index":3175,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["mappedinputfield",{"_index":2475,"title":{},"body":{"classes/LineModel.html":{}}}],["mappedinputfield.field",{"_index":2478,"title":{},"body":{"classes/LineModel.html":{}}}],["mappedoutputfield",{"_index":2485,"title":{},"body":{"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedoutputfield.field",{"_index":2487,"title":{},"body":{"classes/LineModel.html":{}}}],["mappedoutputfield.field.docdef",{"_index":2744,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedoutputfield.field.path",{"_index":2745,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mapper",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"index.html":{}}}],["mapper'},{'name",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["mapper.module",{"_index":1519,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["mapper.module.ts",{"_index":786,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapper.module.ts:167",{"_index":791,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["mapper/common/config.types.ts",{"_index":4208,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mapper/common/data",{"_index":906,"title":{},"body":{"classes/DataMapperUtil.html":{},"coverage.html":{}}}],["mapper/common/focus.directive.ts",{"_index":2347,"title":{},"body":{"directives/FocusDirective.html":{},"coverage.html":{}}}],["mapper/common/focus.directive.ts:14",{"_index":2354,"title":{},"body":{"directives/FocusDirective.html":{}}}],["mapper/common/focus.directive.ts:8",{"_index":2353,"title":{},"body":{"directives/FocusDirective.html":{}}}],["mapper/common/focus.directive.ts:9",{"_index":2352,"title":{},"body":{"directives/FocusDirective.html":{}}}],["mapper/common/to",{"_index":3757,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{}}}],["mapper/components/class",{"_index":451,"title":{},"body":{"components/ClassNameComponent.html":{},"coverage.html":{}}}],["mapper/components/collapsable",{"_index":503,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"coverage.html":{}}}],["mapper/components/constant",{"_index":524,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"coverage.html":{}}}],["mapper/components/data",{"_index":592,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"coverage.html":{}}}],["mapper/components/document",{"_index":1009,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"coverage.html":{}}}],["mapper/components/expression.component.ts",{"_index":4104,"title":{},"body":{"coverage.html":{}}}],["mapper/components/field",{"_index":2040,"title":{},"body":{"components/FieldEditComponent.html":{},"coverage.html":{}}}],["mapper/components/line",{"_index":2359,"title":{},"body":{"classes/LineModel.html":{},"coverage.html":{}}}],["mapper/components/mapping/lookup",{"_index":2551,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"coverage.html":{}}}],["mapper/components/mapping/mapping",{"_index":2903,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"coverage.html":{}}}],["mapper/components/mapping/transition",{"_index":4025,"title":{},"body":{"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["mapper/components/modal",{"_index":1232,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"coverage.html":{}}}],["mapper/components/namespace",{"_index":3484,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"coverage.html":{}}}],["mapper/components/property",{"_index":3737,"title":{},"body":{"components/PropertyFieldEditComponent.html":{},"coverage.html":{}}}],["mapper/components/template",{"_index":3746,"title":{},"body":{"components/TemplateEditComponent.html":{},"coverage.html":{}}}],["mapper/components/toolbar.component.ts",{"_index":3767,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["mapper/components/toolbar.component.ts:102",{"_index":3788,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:127",{"_index":3790,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:131",{"_index":3822,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:186",{"_index":3804,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:199",{"_index":3816,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:219",{"_index":3786,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:242",{"_index":3794,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:257",{"_index":3802,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:275",{"_index":3797,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:286",{"_index":3800,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:290",{"_index":3785,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:31",{"_index":3783,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:32",{"_index":3784,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:34",{"_index":3824,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:36",{"_index":3828,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:38",{"_index":3825,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:39",{"_index":3826,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:40",{"_index":3827,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:47",{"_index":3814,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:63",{"_index":3806,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:93",{"_index":3810,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar.component.ts:98",{"_index":3792,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/data",{"_index":785,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapper/models/config.model.ts",{"_index":8,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{}}}],["mapper/models/config.model.ts:319",{"_index":20,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{}}}],["mapper/models/config.model.ts:33",{"_index":757,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:34",{"_index":766,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:35",{"_index":767,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:36",{"_index":749,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:37",{"_index":765,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:39",{"_index":750,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:40",{"_index":753,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:41",{"_index":751,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:42",{"_index":752,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:44",{"_index":771,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:45",{"_index":769,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:46",{"_index":770,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:49",{"_index":756,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:51",{"_index":768,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:53",{"_index":755,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:56",{"_index":764,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:57",{"_index":754,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:58",{"_index":760,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:59",{"_index":761,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:60",{"_index":763,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:61",{"_index":762,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:63",{"_index":758,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:66",{"_index":759,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:68",{"_index":747,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:81",{"_index":1223,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:82",{"_index":1231,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:83",{"_index":1228,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:84",{"_index":1222,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:85",{"_index":1227,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:86",{"_index":1230,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:87",{"_index":1226,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:88",{"_index":1225,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:89",{"_index":1224,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:90",{"_index":1229,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:91",{"_index":1221,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:92",{"_index":1220,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/document",{"_index":3564,"title":{},"body":{"classes/NamespaceModel.html":{},"coverage.html":{}}}],["mapper/models/error.model.ts",{"_index":1489,"title":{},"body":{"classes/ErrorInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mapper/models/error.model.ts:20",{"_index":1495,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:22",{"_index":1496,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:23",{"_index":1498,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:24",{"_index":1497,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:25",{"_index":1493,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/examples.ts",{"_index":1522,"title":{},"body":{"classes/Examples.html":{},"coverage.html":{}}}],["mapper/models/examples.ts:18",{"_index":1535,"title":{},"body":{"classes/Examples.html":{}}}],["mapper/models/expression.model.ts",{"_index":1537,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["mapper/models/expression.model.ts:21",{"_index":1758,"title":{},"body":{"classes/ExpressionUpdatedEvent.html":{}}}],["mapper/models/expression.model.ts:22",{"_index":1759,"title":{},"body":{"classes/ExpressionUpdatedEvent.html":{}}}],["mapper/models/expression.model.ts:26",{"_index":1547,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:27",{"_index":1545,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:33",{"_index":1548,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:37",{"_index":1550,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:38",{"_index":1549,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:43",{"_index":3751,"title":{},"body":{"classes/TextNode.html":{}}}],["mapper/models/expression.model.ts:45",{"_index":3752,"title":{},"body":{"classes/TextNode.html":{}}}],["mapper/models/expression.model.ts:49",{"_index":3754,"title":{},"body":{"classes/TextNode.html":{}}}],["mapper/models/expression.model.ts:53",{"_index":3753,"title":{},"body":{"classes/TextNode.html":{}}}],["mapper/models/expression.model.ts:61",{"_index":2128,"title":{},"body":{"classes/FieldNode.html":{}}}],["mapper/models/expression.model.ts:63",{"_index":2129,"title":{},"body":{"classes/FieldNode.html":{}}}],["mapper/models/expression.model.ts:73",{"_index":2134,"title":{},"body":{"classes/FieldNode.html":{}}}],["mapper/models/expression.model.ts:77",{"_index":2133,"title":{},"body":{"classes/FieldNode.html":{}}}],["mapper/models/field",{"_index":1761,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mapper/models/field.model.ts",{"_index":1315,"title":{},"body":{"classes/EnumValue.html":{},"coverage.html":{}}}],["mapper/models/field.model.ts:21",{"_index":1317,"title":{},"body":{"classes/EnumValue.html":{}}}],["mapper/models/field.model.ts:22",{"_index":1318,"title":{},"body":{"classes/EnumValue.html":{}}}],["mapper/models/lookup",{"_index":2509,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"coverage.html":{}}}],["mapper/models/mapping",{"_index":2759,"title":{},"body":{"classes/MappingDefinition.html":{},"coverage.html":{}}}],["mapper/models/mapping.model.ts",{"_index":2617,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"coverage.html":{}}}],["mapper/models/mapping.model.ts:26",{"_index":2754,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:27",{"_index":2755,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:28",{"_index":2756,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:29",{"_index":2751,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:30",{"_index":2752,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:31",{"_index":2753,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:32",{"_index":2749,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:33",{"_index":2748,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:34",{"_index":2757,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:35",{"_index":2750,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:36",{"_index":2758,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:40",{"_index":2625,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:41",{"_index":2623,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:42",{"_index":2622,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:44",{"_index":2631,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:66",{"_index":2626,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:70",{"_index":2627,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:74",{"_index":2629,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/transition.model.ts",{"_index":3909,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mapper/models/transition.model.ts:117",{"_index":4017,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:126",{"_index":4016,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:135",{"_index":4015,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:147",{"_index":4012,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:159",{"_index":4024,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:167",{"_index":4014,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:179",{"_index":4022,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:183",{"_index":4023,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:187",{"_index":4021,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:191",{"_index":4020,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:195",{"_index":4019,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:26",{"_index":3918,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["mapper/models/transition.model.ts:27",{"_index":3920,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["mapper/models/transition.model.ts:28",{"_index":3919,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["mapper/models/transition.model.ts:29",{"_index":3916,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["mapper/models/transition.model.ts:41",{"_index":4006,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:43",{"_index":4010,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:44",{"_index":4005,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:45",{"_index":4011,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:46",{"_index":4009,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:47",{"_index":4008,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:48",{"_index":4007,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:51",{"_index":4004,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:57",{"_index":4018,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:85",{"_index":4013,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/services/api",{"_index":296,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"coverage.html":{}}}],["mapper/services/document",{"_index":4150,"title":{},"body":{"coverage.html":{}}}],["mapper/services/error",{"_index":1421,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["mapper/services/field",{"_index":1913,"title":{},"body":{"injectables/FieldActionService.html":{},"coverage.html":{}}}],["mapper/services/file",{"_index":2138,"title":{},"body":{"injectables/FileManagementService.html":{},"coverage.html":{}}}],["mapper/services/initialization.service.ts",{"_index":4157,"title":{},"body":{"coverage.html":{}}}],["mapper/services/mapping",{"_index":4159,"title":{},"body":{"coverage.html":{}}}],["mapping",{"_index":29,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"index.html":{}}}],["mapping.adm",{"_index":2277,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["mapping.getallfields",{"_index":3700,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mapping.getallmappedfields",{"_index":3316,"title":{},"body":{"components/MappingListComponent.html":{}}}],["mapping.getfields(false)[0",{"_index":2573,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["mapping.getfields(issource",{"_index":1833,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["mapping.getfields(true)[0",{"_index":2583,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["mapping.getindexformappedfield(mappedfield",{"_index":3258,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["mapping.getmappedfieldforfield(field).actions.length",{"_index":3701,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mapping.getmappedfieldforindex((index",{"_index":1568,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["mapping.getmappedfields(issource",{"_index":2902,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["mapping.getusermappedfields(issource",{"_index":3307,"title":{},"body":{"components/MappingListComponent.html":{}}}],["mapping.getusermappedfields(true",{"_index":1717,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["mapping.isfullymapped",{"_index":4072,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["mapping.model",{"_index":1552,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/MappingDefinition.html":{},"classes/TextNode.html":{}}}],["mapping.sourcefields.length",{"_index":3400,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["mapping.targetfields.length",{"_index":3401,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["mapping.transition.getprettyname",{"_index":3314,"title":{},"body":{"components/MappingListComponent.html":{}}}],["mapping.transition.userdelimiter",{"_index":4080,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["mapping/gz",{"_index":2251,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping/json",{"_index":2266,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping/reset",{"_index":2259,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping/zip",{"_index":2258,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping_error",{"_index":1501,"title":{},"body":{"classes/ErrorInfo.html":{},"miscellaneous/enumerations.html":{}}}],["mappingchanged",{"_index":2449,"title":{},"body":{"classes/LineModel.html":{}}}],["mappingdefinition",{"_index":28,"title":{"classes/MappingDefinition.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["mappingdefinition.activemapping",{"_index":3699,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mappingdefinition.getallmappings(true",{"_index":3697,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mappingdetailcomponent",{"_index":416,"title":{"components/MappingDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingerror",{"_index":1430,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["mappingerror(message",{"_index":1458,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["mappingfieldactionargumentcomponent",{"_index":417,"title":{"components/MappingFieldActionArgumentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfieldactioncomponent",{"_index":420,"title":{"components/MappingFieldActionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfieldcontainercomponent",{"_index":422,"title":{"components/MappingFieldContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfielddetailcomponent",{"_index":424,"title":{"components/MappingFieldDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfilenames",{"_index":2239,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappingfilenames.push(entry.name",{"_index":2241,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappingfiles",{"_index":159,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["mappinginitialized",{"_index":104,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["mappingisactive",{"_index":3698,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mappinglistcomponent",{"_index":425,"title":{"components/MappingListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappinglistfieldcomponent",{"_index":427,"title":{"components/MappingListFieldComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingmanagementservice",{"_index":39,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{},"overview.html":{}}}],["mappingmodel",{"_index":881,"title":{},"body":{"modules/DataMapperModule.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["mappingname",{"_index":2335,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappings",{"_index":160,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ToolbarComponent.html":{}}}],["mappings.\\n",{"_index":2317,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappingselectioncomponent",{"_index":430,"title":{"components/MappingSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingselectionrequiredsubscription",{"_index":2904,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["mappingselectionsection",{"_index":3396,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["mappingselectionsectioncomponent",{"_index":432,"title":{"components/MappingSelectionSectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingserializer",{"_index":883,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{}}}],["mappingservice",{"_index":152,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["mappingservicespackageprefix",{"_index":125,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["mappingsfilename",{"_index":2173,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["mappingsfilename.length",{"_index":2276,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappingsforfield",{"_index":2927,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["mappingupdatedsubscription",{"_index":2388,"title":{},"body":{"classes/LineModel.html":{}}}],["margin",{"_index":1211,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["marked",{"_index":4367,"title":{},"body":{"license.html":{}}}],["marks",{"_index":4461,"title":{},"body":{"license.html":{}}}],["master",{"_index":2199,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["match",{"_index":1164,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"dependencies.html":{}}}],["matches",{"_index":1803,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldContainerComponent.html":{}}}],["matchesdate",{"_index":1894,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["matchesdate(candidatetype",{"_index":1839,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["matchesnumeric",{"_index":1895,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["matchesnumeric(candidatetype",{"_index":1845,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["matching",{"_index":291,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materializing",{"_index":3883,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["math.floor((math.random",{"_index":2660,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{}}}],["math.floor(math.random",{"_index":2537,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["maven",{"_index":81,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["max",{"_index":3246,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["max_path_width",{"_index":1004,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["mean",{"_index":4278,"title":{},"body":{"license.html":{}}}],["means",{"_index":1632,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"license.html":{}}}],["mechanical",{"_index":4318,"title":{},"body":{"license.html":{}}}],["media",{"_index":4322,"title":{},"body":{"license.html":{}}}],["medium",{"_index":4413,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4414,"title":{},"body":{"license.html":{}}}],["menu",{"_index":2971,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["menus",{"_index":3079,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["merchantability",{"_index":4471,"title":{},"body":{"license.html":{}}}],["merely",{"_index":4340,"title":{},"body":{"license.html":{}}}],["mergedarray",{"_index":1481,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["mergedtextnode",{"_index":1657,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["mergedtextnode.str",{"_index":1659,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["message",{"_index":1251,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"injectables/FileManagementService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["message).length",{"_index":1488,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["messages",{"_index":1449,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["meta",{"_index":2286,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["metadata",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["method",{"_index":330,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/ToolbarComponent.html":{}}}],["methods",{"_index":310,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/FieldAction.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["mf.field",{"_index":2691,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mfield",{"_index":1726,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["minimal",{"_index":2216,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["miscellaneous",{"_index":4202,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mkdirp",{"_index":4186,"title":{},"body":{"dependencies.html":{}}}],["modal",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["modalerrorwindow",{"_index":665,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["modalerrorwindowcomponent",{"_index":435,"title":{"components/ModalErrorWindowComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalerrorwindowvalidator",{"_index":3436,"title":{"interfaces/ModalErrorWindowValidator.html":{}},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"coverage.html":{}}}],["modalwindow",{"_index":1033,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["modalwindowcomponent",{"_index":437,"title":{"components/ModalWindowComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalwindowvalidator",{"_index":453,"title":{"interfaces/ModalWindowValidator.html":{}},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"coverage.html":{}}}],["mode",{"_index":640,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["modeisenum",{"_index":4028,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["modeissupported",{"_index":4029,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["modeissupported(delimitermodel",{"_index":4036,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["model",{"_index":249,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/Examples.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{}}}],["model['field'].docdef",{"_index":3256,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["model['field'].docdef.name",{"_index":2122,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["model['field'].path",{"_index":2123,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["model[\\'field\\'].docdef",{"_index":3259,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["model[\\'field\\'].docdef.name",{"_index":2125,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["model[\\'field\\'].path",{"_index":2126,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["models",{"_index":3948,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["models.push(new",{"_index":3949,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["models/config.model",{"_index":325,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["models/document",{"_index":488,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"modules/DataMapperModule.html":{},"components/FieldEditComponent.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["models/error.model",{"_index":44,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["models/examples",{"_index":606,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["models/field",{"_index":1948,"title":{},"body":{"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["models/field.model",{"_index":489,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["models/lookup",{"_index":2567,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappingDefinition.html":{}}}],["models/mapping",{"_index":880,"title":{},"body":{"modules/DataMapperModule.html":{},"classes/NamespaceModel.html":{}}}],["models/mapping.model",{"_index":882,"title":{},"body":{"modules/DataMapperModule.html":{},"injectables/FieldActionService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["models/transition.model",{"_index":3139,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["modifications",{"_index":4315,"title":{},"body":{"license.html":{}}}],["modified",{"_index":4418,"title":{},"body":{"license.html":{}}}],["modify",{"_index":4439,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":4444,"title":{},"body":{"license.html":{}}}],["module",{"_index":772,"title":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}],["modules",{"_index":774,"title":{"modules.html":{}},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":829,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["moment",{"_index":4188,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":3183,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"classes/NamespaceModel.html":{},"license.html":{}}}],["mouse",{"_index":1068,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["mouseevent",{"_index":515,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["mouseeventtimer",{"_index":652,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["mousing",{"_index":693,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["movement",{"_index":3149,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["much",{"_index":930,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["multi",{"_index":904,"title":{},"body":{"modules/DataMapperModule.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["multi_space",{"_index":3931,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["multiple",{"_index":2983,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/ToolbarComponent.html":{}}}],["multiplicity",{"_index":1789,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["multiplicity.many_to_one",{"_index":1854,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["multiplicity.one_to_many",{"_index":1851,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["multiplicity.one_to_one",{"_index":1798,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["multiplicity.zero_to_one].includes(this.multiplicity",{"_index":1852,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["multispace",{"_index":3962,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["mvnw",{"_index":4239,"title":{},"body":{"index.html":{}}}],["mw",{"_index":1180,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["mw.nestedcomponent",{"_index":1182,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["mwc",{"_index":535,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["mytarget",{"_index":1259,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["mytargetchangessubscription",{"_index":1261,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["n",{"_index":1484,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["n.field",{"_index":1693,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["n.getuuid",{"_index":1595,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["n/a",{"_index":1573,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["n\\sourceidentifier",{"_index":2546,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["n\\targetidentifier",{"_index":2547,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["n\\tentry",{"_index":2549,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["name",{"_index":115,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["name'},{'name",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["name.component",{"_index":853,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["name.component.html",{"_index":455,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts",{"_index":452,"title":{},"body":{"components/ClassNameComponent.html":{},"coverage.html":{}}}],["name.component.ts:31",{"_index":479,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:32",{"_index":483,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:33",{"_index":484,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:34",{"_index":486,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:35",{"_index":485,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:36",{"_index":480,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:37",{"_index":466,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:42",{"_index":474,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:47",{"_index":477,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:50",{"_index":475,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:54",{"_index":470,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:58",{"_index":478,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:62",{"_index":468,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["namednodemap",{"_index":2402,"title":{},"body":{"classes/LineModel.html":{}}}],["nameexistsoncreation",{"_index":3738,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["nameonly",{"_index":3344,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["names",{"_index":2727,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"license.html":{}}}],["names.push(field.name",{"_index":2728,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["namespace",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["namespace.alias",{"_index":3560,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespace.copy",{"_index":3495,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["namespace.istarget",{"_index":3496,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{}}}],["namespace.locationuri",{"_index":3562,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespace.uri",{"_index":3561,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacealias",{"_index":1336,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/MappingDefinition.html":{}}}],["namespacecomponent",{"_index":3541,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacecomponent.initialize(ns",{"_index":3542,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacecomponent.namespace",{"_index":3544,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespaceeditcomponent",{"_index":438,"title":{"components/NamespaceEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["namespacefound",{"_index":2097,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["namespacelistcomponent",{"_index":440,"title":{"components/NamespaceListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["namespacematchessearch",{"_index":3512,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacematchessearch(ns",{"_index":3525,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacemodel",{"_index":2071,"title":{"classes/NamespaceModel.html":{}},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["namespacemodel.getunqualifiednamespace",{"_index":2083,"title":{},"body":{"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{}}}],["namespacemodel.unqualifiednamespace",{"_index":3578,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["namespaces",{"_index":2045,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["namespaceselectionchanged",{"_index":2050,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["namespaceselectionchanged(event",{"_index":2063,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["navbar'},{'name",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["navbar.component",{"_index":1517,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["navbar.component.ts",{"_index":4087,"title":{},"body":{"coverage.html":{}}}],["navigation",{"_index":99,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["nbsp",{"_index":1218,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["ncp",{"_index":4190,"title":{},"body":{"dependencies.html":{}}}],["necessarily",{"_index":4394,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":670,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["need",{"_index":345,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["need/use",{"_index":339,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["needed",{"_index":3078,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["needs",{"_index":675,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["negligence",{"_index":4486,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":4489,"title":{},"body":{"license.html":{}}}],["nestedcomponent",{"_index":1252,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["nestedcomponentinitializedcallback",{"_index":1247,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["nestedcomponenttype",{"_index":1246,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["network",{"_index":1970,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["new",{"_index":135,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["newargvalue",{"_index":1878,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["newargvalue.name",{"_index":1879,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["newargvalue.value",{"_index":1880,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["newfield",{"_index":1193,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["newlines",{"_index":632,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["newnamespace",{"_index":3543,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["newnodes",{"_index":1638,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.length",{"_index":1655,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.pop",{"_index":1687,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.push(new",{"_index":1663,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.push(targetnode",{"_index":1665,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.splice(0",{"_index":1647,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.splice(lastnewnodeindex",{"_index":1662,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes[0",{"_index":1644,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes[lastnewnodeindex",{"_index":1656,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes[lastnewnodeindex]as",{"_index":1661,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes[newnodes.length",{"_index":1685,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newoffset",{"_index":1700,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["next",{"_index":336,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["next.handle(httprequest",{"_index":356,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["nextnode",{"_index":1683,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["nextnode.str",{"_index":1686,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["nextnodeindex",{"_index":1682,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["ng",{"_index":4198,"title":{},"body":{"dependencies.html":{}}}],["ngaftercontentchecked",{"_index":2350,"title":{},"body":{"directives/FocusDirective.html":{}}}],["ngafterviewinit",{"_index":1264,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["ngif",{"_index":1270,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["ngmodule",{"_index":828,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["ngondestroy",{"_index":1279,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["ngoninit",{"_index":598,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["ngx",{"_index":24,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"dependencies.html":{}}}],["ngxlogger",{"_index":22,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["ngxloggerconfig",{"_index":4555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxloggerlevel",{"_index":23,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["ngxloggerlevel.debug",{"_index":188,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/variables.html":{}}}],["ngxloggerlevel.info",{"_index":4570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxloggerlevel.off",{"_index":4569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxloggerlevel.trace",{"_index":192,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/variables.html":{}}}],["ngxloggerlevel.trace].includes(this.logger.getconfigsnapshot().level",{"_index":189,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["node",{"_index":1556,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["node.tohtml",{"_index":1737,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["node.totext",{"_index":1736,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["nodeid",{"_index":1592,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["nodes",{"_index":1584,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["non",{"_index":1829,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["none",{"_index":498,"title":{},"body":{"components/ClassNameComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["normally",{"_index":4437,"title":{},"body":{"license.html":{}}}],["note",{"_index":630,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["nothing",{"_index":4452,"title":{},"body":{"license.html":{}}}],["notice",{"_index":4325,"title":{},"body":{"license.html":{}}}],["notices",{"_index":4421,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":4451,"title":{},"body":{"license.html":{}}}],["ns",{"_index":2098,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["ns.alias",{"_index":2099,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["ns.alias.tolowercase().includes(filter",{"_index":3549,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.copyfrom(newnamespace",{"_index":3545,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.createdbyuser",{"_index":3540,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.getprettylabel",{"_index":2124,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["ns.istarget",{"_index":3497,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{}}}],["ns.locationuri",{"_index":3552,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.locationuri.tolowercase().includes(filter",{"_index":3553,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.uri",{"_index":3550,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.uri.tolowercase().includes(filter",{"_index":3551,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["null",{"_index":150,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["number",{"_index":748,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["number'].indexof(arg.type",{"_index":1823,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["number'].indexof(selectedtype",{"_index":1846,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["number(event.target.value",{"_index":3243,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["numeric",{"_index":1844,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["numerical",{"_index":3225,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["numerics",{"_index":1822,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["o",{"_index":1127,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{}}}],["object",{"_index":942,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object.assign(copy",{"_index":1379,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["object.assign(this",{"_index":1396,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["object.freeze(this.previewerrors",{"_index":2671,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["object.freeze(this.validationerrors",{"_index":2662,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["object.keys(actiondetail.actionschema.properties",{"_index":2017,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["obligations",{"_index":4513,"title":{},"body":{"license.html":{}}}],["observable",{"_index":323,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{}}}],["observable((observer",{"_index":1980,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["observable.create((observer",{"_index":2074,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["observer",{"_index":3115,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["observer.complete",{"_index":1998,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["observer.error(error",{"_index":1999,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["observer.next('no",{"_index":2341,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["observer.next(actionconfigs",{"_index":1997,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["observer.next(body",{"_index":2255,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["observer.next(data",{"_index":2343,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["observer.next(mappingfilenames",{"_index":2242,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["observer.next(this.executesearch(observer.outervalue",{"_index":2075,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["observer.next(this.executesearch(this.searchfilter",{"_index":3140,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["observer.next(true",{"_index":2263,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["obtain",{"_index":805,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["occurred",{"_index":2245,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["octet",{"_index":2320,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["odd",{"_index":3399,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["offer",{"_index":4390,"title":{},"body":{"license.html":{}}}],["offset",{"_index":1557,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["ok",{"_index":1255,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["okbuttonhandler",{"_index":1249,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["okclicked",{"_index":1306,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["oldparentfield",{"_index":2105,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["oldpath",{"_index":1171,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/NamespaceModel.html":{}}}],["oldselecteditem",{"_index":3360,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["oldselecteditem.selected",{"_index":3362,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["once",{"_index":2190,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{}}}],["ondestroy",{"_index":603,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["one",{"_index":676,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["one_to_many",{"_index":1791,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["one_to_one",{"_index":1790,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["oninit",{"_index":594,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["open",{"_index":3791,"title":{},"body":{"components/ToolbarComponent.html":{},"index.html":{}}}],["operation",{"_index":2337,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["operations",{"_index":2334,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["operations.push(operation",{"_index":2339,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["opn",{"_index":4193,"title":{},"body":{"dependencies.html":{}}}],["option",{"_index":2092,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["optional",{"_index":361,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["optionselected",{"_index":4048,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["optionselected.val",{"_index":4051,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["order",{"_index":3226,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["ordinal",{"_index":1316,"title":{},"body":{"classes/EnumValue.html":{}}}],["origin",{"_index":4465,"title":{},"body":{"license.html":{}}}],["original",{"_index":2997,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"license.html":{}}}],["originalpath",{"_index":3631,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["originalpath.indexof(pathseparator",{"_index":3634,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["originalpath.substr(0",{"_index":3638,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["originalpath.substr(originalpath.indexof(pathseparator",{"_index":3640,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["originalpath.substring(1",{"_index":3635,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["otherwise",{"_index":544,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"license.html":{}}}],["out",{"_index":703,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"license.html":{},"overview.html":{}}}],["outcome",{"_index":4262,"title":{},"body":{"index.html":{}}}],["output",{"_index":2489,"title":{},"body":{"classes/LineModel.html":{}}}],["outputfield",{"_index":1150,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{},"classes/MappingDefinition.html":{}}}],["outputfield.classidentifier",{"_index":2858,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["outputfieldpos",{"_index":2490,"title":{},"body":{"classes/LineModel.html":{}}}],["outputfieldpos.y",{"_index":2493,"title":{},"body":{"classes/LineModel.html":{}}}],["outputnumber",{"_index":3380,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["outputselects",{"_index":2554,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["outstanding",{"_index":4306,"title":{},"body":{"license.html":{}}}],["over",{"_index":694,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["overhead",{"_index":2217,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["override",{"_index":298,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["overview",{"_index":4546,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":4282,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":4303,"title":{},"body":{"license.html":{}}}],["package",{"_index":302,"title":{"dependencies.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{}}}],["padding",{"_index":1830,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["paddingfield",{"_index":2634,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["padfield",{"_index":3588,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["page",{"_index":4539,"title":{},"body":{"license.html":{}}}],["pair",{"_index":1936,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["pako",{"_index":2225,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["panel",{"_index":2711,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{}}}],["panels",{"_index":2413,"title":{},"body":{"classes/LineModel.html":{}}}],["param",{"_index":282,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["parameter",{"_index":2968,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["parameters",{"_index":360,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["paramname",{"_index":3058,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["parent",{"_index":1403,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/ToolbarComponent.html":{}}}],["parent.iscollection",{"_index":1404,"title":{},"body":{"classes/EnumValue.html":{}}}],["parent.parentfield",{"_index":1405,"title":{},"body":{"classes/EnumValue.html":{}}}],["parentcomponent",{"_index":3381,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["parentfield",{"_index":1149,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"classes/NamespaceModel.html":{}}}],["parentfield.parentfield",{"_index":2505,"title":{},"body":{"classes/LineModel.html":{},"classes/NamespaceModel.html":{}}}],["parentfield.partofmapping",{"_index":3702,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["parentfield.partoftransformation",{"_index":3703,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["parentfieldname",{"_index":2046,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["parentobjectname",{"_index":3193,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["parentpath",{"_index":2885,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["parentselectionchanged",{"_index":464,"title":{},"body":{"components/ClassNameComponent.html":{},"components/FieldEditComponent.html":{}}}],["parentselectionchanged(event",{"_index":476,"title":{},"body":{"components/ClassNameComponent.html":{},"components/FieldEditComponent.html":{}}}],["parsed",{"_index":1816,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["parsedactions",{"_index":2644,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parseddata",{"_index":2618,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parseddocid",{"_index":2638,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parseddocs",{"_index":2761,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["parseddocuri",{"_index":2639,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedindex",{"_index":2640,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedname",{"_index":2635,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedpath",{"_index":2636,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedvalue",{"_index":2637,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedvaluetype",{"_index":2643,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parseint(selectedvalue",{"_index":4053,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["parseint(text.substring(position",{"_index":1744,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["parses",{"_index":1621,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["part",{"_index":4428,"title":{},"body":{"license.html":{}}}],["particular",{"_index":4473,"title":{},"body":{"license.html":{}}}],["partofmapping",{"_index":1133,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{}}}],["partofmappingicon",{"_index":1138,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["partofmappingiconhidden",{"_index":1139,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["partoftransformation",{"_index":1323,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["party",{"_index":4436,"title":{},"body":{"license.html":{}}}],["passed",{"_index":3665,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["patent",{"_index":4388,"title":{},"body":{"license.html":{}}}],["path",{"_index":75,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/NamespaceModel.html":{},"index.html":{}}}],["path.lastindexof",{"_index":3366,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["path.replace",{"_index":3365,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["path.substr(0",{"_index":1008,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["path.substr(path.lastindexof",{"_index":3367,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["path.substring(0",{"_index":2874,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["path.substring(lastseparator",{"_index":2877,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["paths",{"_index":1345,"title":{},"body":{"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["paths.push(field.name",{"_index":1349,"title":{},"body":{"classes/EnumValue.html":{}}}],["paths.push(field.path",{"_index":1347,"title":{},"body":{"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["pathseparator",{"_index":3596,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["patternfly",{"_index":4196,"title":{},"body":{"dependencies.html":{}}}],["peer",{"_index":4169,"title":{},"body":{"dependencies.html":{}}}],["percent",{"_index":4305,"title":{},"body":{"license.html":{}}}],["perform",{"_index":939,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldDetailComponent.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["performance",{"_index":2195,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["period",{"_index":3932,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["permission",{"_index":4459,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":826,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["permitted",{"_index":1806,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["perpetual",{"_index":4376,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":4427,"title":{},"body":{"license.html":{}}}],["pficon",{"_index":3765,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{}}}],["pipe",{"_index":3755,"title":{"pipes/ToErrorIconClassPipe.html":{}},"body":{"pipes/ToErrorIconClassPipe.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["pipe(map((res",{"_index":2338,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["pipe(timeout(this.cfg.initcfg.admhttptimeout",{"_index":2247,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["pipes",{"_index":3756,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["pipetransform",{"_index":3763,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["pitests",{"_index":4250,"title":{},"body":{"index.html":{}}}],["place",{"_index":10,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["places",{"_index":4432,"title":{},"body":{"license.html":{}}}],["please",{"_index":3743,"title":{},"body":{"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["pointers",{"_index":1381,"title":{},"body":{"classes/EnumValue.html":{}}}],["pom",{"_index":84,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/Examples.html":{}}}],["pompayload",{"_index":86,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["populate",{"_index":3077,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"classes/NamespaceModel.html":{}}}],["populatechildren(field",{"_index":3668,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["populatefieldaction",{"_index":1896,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["populatefieldaction(action",{"_index":1813,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["populatefielddata(field",{"_index":3715,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["populatefieldparentpaths(field",{"_index":3705,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["popup",{"_index":3817,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["port",{"_index":4259,"title":{},"body":{"index.html":{}}}],["pos",{"_index":2499,"title":{},"body":{"classes/LineModel.html":{}}}],["pos['y",{"_index":2501,"title":{},"body":{"classes/LineModel.html":{}}}],["position",{"_index":1600,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["possibility",{"_index":4507,"title":{},"body":{"license.html":{}}}],["possible",{"_index":932,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["post",{"_index":1660,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["post.length",{"_index":1653,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["power",{"_index":4294,"title":{},"body":{"license.html":{}}}],["pre",{"_index":1652,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["pre.length",{"_index":1658,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["predefines",{"_index":3076,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["preferred",{"_index":4313,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":1546,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["preloadedfieldactionmetadata",{"_index":161,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["prepare",{"_index":4384,"title":{},"body":{"license.html":{}}}],["preparecomplexfields",{"_index":3721,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["present",{"_index":1817,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["prettyname",{"_index":3912,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["preview",{"_index":639,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["previewerrors",{"_index":2659,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["previous",{"_index":2741,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldDetailComponent.html":{}}}],["previously",{"_index":3073,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["primarily",{"_index":4225,"title":{},"body":{"index.html":{}}}],["printed",{"_index":4538,"title":{},"body":{"license.html":{}}}],["private",{"_index":133,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["process",{"_index":2890,"title":{},"body":{"classes/MappingDefinition.html":{},"components/ToolbarComponent.html":{}}}],["processimportedfile",{"_index":3780,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["processimportedfile(event",{"_index":3805,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["processing",{"_index":3844,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["processmappingscatalog",{"_index":3781,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["processmappingscatalog(selectedfile",{"_index":3809,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["product",{"_index":4462,"title":{},"body":{"license.html":{}}}],["production",{"_index":4554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prominent",{"_index":4420,"title":{},"body":{"license.html":{}}}],["promise",{"_index":944,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["promise((resolve",{"_index":987,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["promise(async(resolve",{"_index":2272,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["properties",{"_index":15,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["property",{"_index":252,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["propertycomponent",{"_index":1181,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["propertycomponent.getfield",{"_index":1194,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["propertycomponent.initialize(self.field",{"_index":1183,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["propertydoc",{"_index":157,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["propertyfieldeditcomponent",{"_index":441,"title":{"components/PropertyFieldEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["propertyobject",{"_index":2018,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["propertyobject.const",{"_index":2020,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["propertyobject.enum",{"_index":2026,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["propertyobject.type",{"_index":2024,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["protected",{"_index":1538,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["provide",{"_index":902,"title":{},"body":{"modules/DataMapperModule.html":{},"license.html":{}}}],["provided",{"_index":928,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"license.html":{}}}],["providers",{"_index":595,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}],["provides",{"_index":4469,"title":{},"body":{"license.html":{}}}],["public",{"_index":1262,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{}}}],["publicly",{"_index":4385,"title":{},"body":{"license.html":{}}}],["pull",{"_index":2970,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["purpose",{"_index":4362,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":4293,"title":{},"body":{"license.html":{}}}],["push",{"_index":2189,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["pushed",{"_index":2191,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["put",{"_index":1629,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["px",{"_index":1213,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["querylist",{"_index":1080,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["quotes",{"_index":631,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["range",{"_index":1598,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["re",{"_index":3221,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["reactiveformsmodule",{"_index":836,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["read",{"_index":346,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/DataMapperUtil.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/FileManagementService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["readable",{"_index":968,"title":{},"body":{"classes/DataMapperUtil.html":{},"license.html":{}}}],["readbinaryfile",{"_index":912,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["readbinaryfile(filename",{"_index":936,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["reader",{"_index":937,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["reader.onload",{"_index":989,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["reader.readasarraybuffer(filename",{"_index":995,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["reader.readastext(filename",{"_index":993,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["reader.result",{"_index":991,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["readfile",{"_index":913,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/ToolbarComponent.html":{}}}],["readfile(filecontent",{"_index":3813,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["readfile(filename",{"_index":945,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["readonly",{"_index":1490,"title":{},"body":{"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["readonlyarray",{"_index":1585,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["reason",{"_index":4527,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":4463,"title":{},"body":{"license.html":{}}}],["reasons",{"_index":2196,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["received",{"_index":4370,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":4416,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":4537,"title":{},"body":{"license.html":{}}}],["red",{"_index":794,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["redistributing",{"_index":4479,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":4412,"title":{},"body":{"license.html":{}}}],["redrawlinesformappings",{"_index":2451,"title":{},"body":{"classes/LineModel.html":{}}}],["reference",{"_index":1623,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["references",{"_index":615,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["referencing",{"_index":2824,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["reflect",{"_index":1710,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["regarding",{"_index":4457,"title":{},"body":{"license.html":{}}}],["reinitialize",{"_index":3820,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["reject",{"_index":988,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["reject(`could",{"_index":1973,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["reject(`fatal",{"_index":1969,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["related",{"_index":4229,"title":{},"body":{"index.html":{}}}],["relative",{"_index":3158,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["remain",{"_index":4338,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":934,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["remove",{"_index":1201,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["removeaction",{"_index":2620,"title":{},"body":{"classes/MappedField.html":{},"components/MappingFieldActionComponent.html":{}}}],["removeaction(action",{"_index":2628,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionComponent.html":{}}}],["removed",{"_index":1690,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["removed.field",{"_index":1694,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["removedocumentreferencefromallmappings",{"_index":2777,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["removedocumentreferencefromallmappings(docid",{"_index":2822,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["removeerror",{"_index":1431,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["removeerror(identifier",{"_index":1460,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["removefield",{"_index":1030,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["removefield(event",{"_index":1076,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["removefield(field",{"_index":2688,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["removefieldfromallmappings",{"_index":2778,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["removefieldfromallmappings(field",{"_index":2826,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["removeitemfromarray",{"_index":914,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["removeitemfromarray(item",{"_index":948,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["removemappedfield",{"_index":3099,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["removemappedfield(mappedfield",{"_index":2702,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["removemapping",{"_index":2779,"title":{},"body":{"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{}}}],["removemapping(event",{"_index":2911,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["removemapping(m",{"_index":2828,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["removenamespace",{"_index":3513,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["removenamespace(ns",{"_index":3527,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["removepreviewerror(identifier",{"_index":2675,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["removestalemappings",{"_index":2780,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["removestalemappings(cfg",{"_index":2830,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["removetablebyname",{"_index":2781,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["removetablebyname(name",{"_index":2832,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["removetoken(lastfieldrefremoved",{"_index":1689,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["removevalidationerror(identifier",{"_index":2668,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["replace",{"_index":1707,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["replaced",{"_index":4533,"title":{},"body":{"license.html":{}}}],["repo",{"_index":4233,"title":{},"body":{"index.html":{}}}],["represent",{"_index":4335,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":4355,"title":{},"body":{"license.html":{}}}],["representing",{"_index":2978,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["reproduce",{"_index":4383,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":4466,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":4275,"title":{},"body":{"license.html":{}}}],["request",{"_index":328,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["requested",{"_index":3798,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["requests",{"_index":343,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["required",{"_index":288,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"modules/ExampleAppModule.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"license.html":{}}}],["requires",{"_index":1649,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["res",{"_index":2264,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["reset",{"_index":250,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"injectables/FileManagementService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["resetall",{"_index":1432,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["resetting",{"_index":2265,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["resolve",{"_index":83,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["resolve(bytes",{"_index":3834,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["resolve(false",{"_index":2327,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["resolve(filebody",{"_index":992,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["resolve(this.actiondefinitions.length",{"_index":1966,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["resolve(true",{"_index":997,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["respective",{"_index":1801,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["response",{"_index":1989,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["responsetype",{"_index":2253,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["responsibility",{"_index":4519,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":4475,"title":{},"body":{"license.html":{}}}],["restart",{"_index":2197,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["result",{"_index":290,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.push(fieldsbypath[name",{"_index":2653,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["resultfields",{"_index":2716,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["resultfields.push(mappedfield",{"_index":2717,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["resultfields.shift",{"_index":2718,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["resulting",{"_index":4317,"title":{},"body":{"license.html":{}}}],["results",{"_index":292,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":4424,"title":{},"body":{"license.html":{}}}],["retrieve",{"_index":2178,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["return",{"_index":176,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["returnedcomponent",{"_index":1168,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["returning",{"_index":3815,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["returns",{"_index":313,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/FieldAction.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["revisions",{"_index":4333,"title":{},"body":{"license.html":{}}}],["right",{"_index":522,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["right_bracket",{"_index":3591,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["rights",{"_index":4515,"title":{},"body":{"license.html":{}}}],["risks",{"_index":4481,"title":{},"body":{"license.html":{}}}],["root",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["root'},{'name",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["routermodule",{"_index":1515,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["routermodule.forroot",{"_index":1520,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["rows",{"_index":3304,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["rowtitles",{"_index":3303,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["royalty",{"_index":4380,"title":{},"body":{"license.html":{}}}],["run",{"_index":4223,"title":{},"body":{"index.html":{}}}],["running",{"_index":4255,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":1962,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["rxjs",{"_index":324,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":2230,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["safestyle",{"_index":1063,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["same",{"_index":1382,"title":{},"body":{"classes/EnumValue.html":{},"license.html":{}}}],["samenameddefs",{"_index":2034,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["samenameddefs.push(fieldactionconfig",{"_index":2037,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["sanitizer",{"_index":1039,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["save",{"_index":540,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/FileManagementService.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["saveas",{"_index":983,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["saveas(filecontent",{"_index":996,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["saver",{"_index":984,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["savetable",{"_index":2555,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["saving",{"_index":2208,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["schema",{"_index":2169,"title":{},"body":{"injectables/FileManagementService.html":{},"miscellaneous/enumerations.html":{}}}],["schemas",{"_index":788,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["search",{"_index":3113,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["search(searchfilter",{"_index":3289,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchboxicon",{"_index":3309,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchfilter",{"_index":3090,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchmode",{"_index":3262,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchresults",{"_index":3263,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchresultsvisible",{"_index":3273,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchshown",{"_index":3299,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["second",{"_index":698,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["seconds",{"_index":65,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["section",{"_index":3151,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"license.html":{}}}],["section'},{'name",{"_index":434,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["section.component",{"_index":870,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingSelectionComponent.html":{}}}],["section.component.html",{"_index":3376,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts",{"_index":3375,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{},"coverage.html":{}}}],["section.component.ts:27",{"_index":3386,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:28",{"_index":3385,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:29",{"_index":3389,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:30",{"_index":3388,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:31",{"_index":3390,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:32",{"_index":3387,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:33",{"_index":3384,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:35",{"_index":3391,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:46",{"_index":3394,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:53",{"_index":3392,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:64",{"_index":3395,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["sectioncomponents",{"_index":3336,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["sections",{"_index":4279,"title":{},"body":{"license.html":{}}}],["see",{"_index":822,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"components/MappingFieldContainerComponent.html":{},"index.html":{},"license.html":{}}}],["select",{"_index":1073,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["select#separator').combobox({clearifnomatch",{"_index":4046,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["select#separator').on('change",{"_index":4047,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selecte",{"_index":2108,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["selected",{"_index":1035,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["selected.targetvalue",{"_index":2592,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedactionindex",{"_index":3070,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["selectedactionname",{"_index":3069,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["selectedargvalname",{"_index":3025,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["selectedcallback",{"_index":3382,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["selectedelement",{"_index":2417,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedelement.nodename",{"_index":2419,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedfield",{"_index":1148,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingSelectionComponent.html":{}}}],["selectedfield.issource",{"_index":3373,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selectedfieldissource",{"_index":3383,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["selectedfile",{"_index":3812,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["selectedicon",{"_index":3311,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["selectedlineattrs",{"_index":2400,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedlineattrs[1].nodevalue",{"_index":2404,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedlineattrs[2].nodevalue",{"_index":2406,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedlineattrs[3].nodevalue",{"_index":2408,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedlineattrs[4].nodevalue",{"_index":2410,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedmappingcomponent",{"_index":3337,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selectedmappingselectionsection",{"_index":3397,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["selectednamespace",{"_index":3507,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["selectedoptions",{"_index":2597,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedoptions.length",{"_index":2599,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedoptions[0].label",{"_index":2600,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedroot",{"_index":121,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["selectedsourcefield",{"_index":1808,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["selectedsourcefield.type",{"_index":1858,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["selectedtargetenumvalue",{"_index":2571,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedtargetfield",{"_index":1810,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["selectedtargetfield.type",{"_index":1863,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["selectedtype",{"_index":1838,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["selectedvalue",{"_index":4050,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["selection'},{'name",{"_index":431,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component",{"_index":869,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingDetailComponent.html":{}}}],["selection.component.html",{"_index":3335,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts",{"_index":3334,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:101",{"_index":4035,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:105",{"_index":4039,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:129",{"_index":4037,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:138",{"_index":4033,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:31",{"_index":4031,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:32",{"_index":3354,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:33",{"_index":3353,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:34",{"_index":3357,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:35",{"_index":3352,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:37",{"_index":3356,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:39",{"_index":3358,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:41",{"_index":3349,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:42",{"_index":4038,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:45",{"_index":3346,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:49",{"_index":3351,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:57",{"_index":3345,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:65",{"_index":3342,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:70",{"_index":3347,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:74",{"_index":3348,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selectionchanged",{"_index":3100,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{}}}],["selectionchanged(c",{"_index":3350,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selectionchanged(event",{"_index":3127,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["selectmapping",{"_index":2907,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/MappingListComponent.html":{}}}],["selectmapping(field",{"_index":2913,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["selectmapping(mapping",{"_index":3292,"title":{},"body":{"components/MappingListComponent.html":{}}}],["selectnamespace",{"_index":3514,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["selectnamespace(ns",{"_index":3531,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["selector",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["self",{"_index":1170,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ToolbarComponent.html":{}}}],["self.cfg",{"_index":2931,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["self.cfg.mappings.removefieldfromallmappings(self.field",{"_index":1206,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.cfg.mappingservice.notifymappingupdated",{"_index":1199,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["self.cfg.mappingservice.selectmapping(mapping",{"_index":2935,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["self.cfg.mappingservice.selectmapping(null",{"_index":2937,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["self.field.copyfrom(newfield",{"_index":1197,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.field.docdef.removefield(self.field",{"_index":1207,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.field.docdef.updatefield(self.field",{"_index":1198,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.field.issource",{"_index":1189,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.getselectedmappingcomponent",{"_index":3361,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["self.selectedmappingcomponent",{"_index":3364,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["sell",{"_index":4391,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1066,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["semicolon",{"_index":3933,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["send",{"_index":2326,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["sent",{"_index":4354,"title":{},"body":{"license.html":{}}}],["separable",{"_index":4339,"title":{},"body":{"license.html":{}}}],["separate",{"_index":708,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/FileManagementService.html":{},"license.html":{}}}],["separateactionconfig",{"_index":1766,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["separately",{"_index":2194,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["separatemode",{"_index":1780,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["separator",{"_index":3633,"title":{},"body":{"classes/NamespaceModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["sequence",{"_index":1539,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{}}}],["sequential",{"_index":2981,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["serializedvalue",{"_index":3913,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["serializer.service",{"_index":884,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["serializer.service.ts",{"_index":4162,"title":{},"body":{"coverage.html":{}}}],["server",{"_index":2179,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["service",{"_index":88,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["serviceobject",{"_index":1322,"title":{},"body":{"classes/EnumValue.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["services",{"_index":611,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["services/api",{"_index":878,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["services/document",{"_index":37,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/error",{"_index":34,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["services/field",{"_index":50,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/file",{"_index":53,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/initialization.service",{"_index":42,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/mapping",{"_index":40,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/types",{"_index":876,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["set",{"_index":180,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["setargumentvalue",{"_index":1769,"title":{},"body":{"classes/FieldAction.html":{}}}],["setargumentvalue(argumentname",{"_index":1784,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["setbinaryfiletoservice",{"_index":2157,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["setbinaryfiletoservice(compressedbuffer",{"_index":2202,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["setcfg(cfg",{"_index":2222,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["setconfig(cfg",{"_index":178,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["setconfigmodel(cfg",{"_index":1596,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["setlinebeingformed(l",{"_index":2435,"title":{},"body":{"classes/LineModel.html":{}}}],["setmappingtoservice",{"_index":2158,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["setmappingtoservice(jsonbuffer",{"_index":2210,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["setserializeddelimeterfromserializedvalue",{"_index":4003,"title":{},"body":{"classes/TransitionModel.html":{}}}],["setserializeddelimeterfromserializedvalue(value",{"_index":3988,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["settimeout",{"_index":733,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["shall",{"_index":4277,"title":{},"body":{"license.html":{}}}],["share",{"_index":3858,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["shares",{"_index":4307,"title":{},"body":{"license.html":{}}}],["short",{"_index":584,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["shortest",{"_index":4231,"title":{},"body":{"index.html":{}}}],["show",{"_index":182,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["showactiveerrors",{"_index":663,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["showdetails",{"_index":3854,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["showfields",{"_index":118,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["showlines",{"_index":3857,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["showlinesalways",{"_index":144,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["showlookuptable",{"_index":4030,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["showmappedfields",{"_index":146,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["showmappingdetailtray",{"_index":141,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["showmappingpreview",{"_index":186,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["showmappingpreview(show",{"_index":181,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["showmappingtable",{"_index":142,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["shownamespacetable",{"_index":143,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["showtypes",{"_index":145,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/NamespaceModel.html":{},"components/ToolbarComponent.html":{}}}],["showunmappedfields",{"_index":147,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["side",{"_index":1805,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["sign",{"_index":3954,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["signal",{"_index":2463,"title":{},"body":{"classes/LineModel.html":{}}}],["simplifies",{"_index":4220,"title":{},"body":{"index.html":{}}}],["simply",{"_index":2994,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["skip",{"_index":4242,"title":{},"body":{"index.html":{}}}],["skipped",{"_index":85,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["slash",{"_index":3934,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["software",{"_index":813,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["sole",{"_index":4518,"title":{},"body":{"license.html":{}}}],["solely",{"_index":4474,"title":{},"body":{"license.html":{}}}],["solution",{"_index":4217,"title":{},"body":{"index.html":{}}}],["something",{"_index":3015,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["somethingtoshow",{"_index":3410,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["somewhere",{"_index":1104,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["sort",{"_index":3223,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["sortedactiondefinitions",{"_index":2029,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["sortedactiondefinitions.push(fieldactiondefinition",{"_index":2039,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["sortfieldactiondefinitions",{"_index":1922,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["sortfieldactiondefinitions(definitions",{"_index":1937,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["sortmappedfieldsbypath",{"_index":2621,"title":{},"body":{"classes/MappedField.html":{}}}],["sortmappedfieldsbypath(mappedfields",{"_index":2630,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["source/target",{"_index":1109,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/NamespaceModel.html":{}}}],["source/target/mapping",{"_index":247,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["sourcedocs",{"_index":155,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["sourceenumvalue",{"_index":2569,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["sourcefield",{"_index":2582,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["sourcefield.enumvalues",{"_index":2584,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["sourcefieldpaths",{"_index":2819,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["sourcefieldpaths.concat(field.getfieldpaths(doc.getallfields",{"_index":2871,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["sourcefields",{"_index":2656,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["sourceiconcssclass",{"_index":3194,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["sourceidentifier",{"_index":2511,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappingDefinition.html":{}}}],["sources",{"_index":2805,"title":{},"body":{"classes/MappingDefinition.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"index.html":{}}}],["sourcesheader",{"_index":2905,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["sourcetype",{"_index":1796,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["sourcevalue",{"_index":2524,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["sourcex",{"_index":2361,"title":{},"body":{"classes/LineModel.html":{}}}],["sourcey",{"_index":2362,"title":{},"body":{"classes/LineModel.html":{}}}],["space",{"_index":935,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["spaces",{"_index":3963,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["special",{"_index":4493,"title":{},"body":{"license.html":{}}}],["specific",{"_index":823,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"components/MappingFieldActionArgumentComponent.html":{},"license.html":{}}}],["specified",{"_index":80,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["specify",{"_index":3019,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["split",{"_index":955,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["splitbystring",{"_index":915,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["splitbystring(instr",{"_index":952,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["splitmarker",{"_index":953,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["spring",{"_index":4251,"title":{},"body":{"index.html":{}}}],["src",{"_index":1393,"title":{},"body":{"classes/EnumValue.html":{}}}],["src/.../config.types.ts",{"_index":4204,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../data",{"_index":4549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.dev.ts",{"_index":4550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":4551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.trace.ts",{"_index":4552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":4553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error.model.ts",{"_index":4205,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../field",{"_index":4206,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transition.model.ts",{"_index":4207,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.ts",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/atlasmap",{"_index":4086,"title":{},"body":{"coverage.html":{}}}],["src/app/example",{"_index":1512,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["src/app/lib/atlasmap",{"_index":6,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.dev.ts",{"_index":4164,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":4165,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.trace.ts",{"_index":4166,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":4167,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stand",{"_index":643,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["standalone",{"_index":641,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"index.html":{}}}],["standard",{"_index":4062,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["start",{"_index":3091,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"index.html":{}}}],["startdrag",{"_index":1031,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["startdrag(event",{"_index":1078,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["started",{"_index":4216,"title":{"index.html":{},"license.html":{}},"body":{}}],["startoffset",{"_index":1602,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["state",{"_index":139,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"license.html":{}}}],["stated",{"_index":4389,"title":{},"body":{"license.html":{}}}],["statement",{"_index":4446,"title":{},"body":{"license.html":{}}}],["statements",{"_index":4084,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":124,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["stating",{"_index":4422,"title":{},"body":{"license.html":{}}}],["stay",{"_index":695,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["stock",{"_index":299,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/TransitionSelectionComponent.html":{}}}],["stoppage",{"_index":4500,"title":{},"body":{"license.html":{}}}],["storage",{"_index":348,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["store",{"_index":614,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["stored",{"_index":2142,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["str",{"_index":961,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["str2bytes",{"_index":916,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["str2bytes(str",{"_index":958,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["stream",{"_index":1944,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["string",{"_index":68,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["strip",{"_index":3632,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["stroke",{"_index":2363,"title":{},"body":{"classes/LineModel.html":{}}}],["style",{"_index":2364,"title":{},"body":{"classes/LineModel.html":{}}}],["subject",{"_index":1553,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"license.html":{}}}],["sublicense",{"_index":4386,"title":{},"body":{"license.html":{}}}],["submission",{"_index":4448,"title":{},"body":{"license.html":{}}}],["submit",{"_index":4348,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":4346,"title":{},"body":{"license.html":{}}}],["subscriber",{"_index":1627,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["subscription",{"_index":1241,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["subsequently",{"_index":4371,"title":{},"body":{"license.html":{}}}],["substring",{"_index":956,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["such",{"_index":4299,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":3901,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["super",{"_index":3584,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["super(fieldnode.prefix",{"_index":1567,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["super(textnode.prefix",{"_index":1562,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["supersede",{"_index":4454,"title":{},"body":{"license.html":{}}}],["supersedes",{"_index":4045,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["support",{"_index":1067,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"license.html":{},"modules.html":{}}}],["supported",{"_index":3734,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["supports",{"_index":3889,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["sure",{"_index":1204,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["svg",{"_index":4544,"title":{},"body":{"modules.html":{}}}],["svgstyle",{"_index":2384,"title":{},"body":{"classes/LineModel.html":{}}}],["switch",{"_index":3974,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["syndesis",{"_index":4227,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":1675,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"license.html":{}}}],["system",{"_index":646,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["systems",{"_index":4358,"title":{},"body":{"license.html":{}}}],["t",{"_index":2848,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["t.sourceidentifier",{"_index":2850,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["t.targetidentifier",{"_index":2851,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["table",{"_index":2544,"title":{},"body":{"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappingDefinition.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["table.component",{"_index":872,"title":{},"body":{"modules/DataMapperModule.html":{},"components/TransitionSelectionComponent.html":{}}}],["table.component.html",{"_index":2553,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["table.component.ts",{"_index":2552,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"coverage.html":{}}}],["table.component.ts:27",{"_index":2608,"title":{},"body":{"classes/LookupTableData.html":{}}}],["table.component.ts:28",{"_index":2609,"title":{},"body":{"classes/LookupTableData.html":{}}}],["table.component.ts:29",{"_index":2607,"title":{},"body":{"classes/LookupTableData.html":{}}}],["table.component.ts:38",{"_index":2563,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:40",{"_index":2566,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:41",{"_index":2562,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:43",{"_index":2565,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:45",{"_index":2558,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:73",{"_index":2559,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:77",{"_index":2556,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:81",{"_index":2560,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.getinputoutputkey",{"_index":2867,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["table.model",{"_index":2568,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappingDefinition.html":{}}}],["table.model.ts",{"_index":2510,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"coverage.html":{}}}],["table.model.ts:18",{"_index":2612,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:19",{"_index":2611,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:20",{"_index":2614,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:21",{"_index":2613,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:23",{"_index":2616,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:32",{"_index":2615,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:41",{"_index":2519,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:42",{"_index":2518,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:43",{"_index":2520,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:44",{"_index":2516,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:50",{"_index":2525,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:54",{"_index":2523,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:69",{"_index":2526,"title":{},"body":{"classes/LookupTable.html":{}}}],["tablechanged",{"_index":2852,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["tabledata",{"_index":2585,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["tabledata.selectedtargetenumvalue",{"_index":2591,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["tabledata.sourceenumvalue",{"_index":2586,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["tabledata.targetenumvalues",{"_index":2588,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["tables",{"_index":2762,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["tables.push(table",{"_index":2865,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["tablesbyname",{"_index":2763,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["tablesbysourcetargetkey",{"_index":2764,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":4168,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":633,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["tack",{"_index":3900,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["target",{"_index":1394,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["target'.includes(filter",{"_index":3548,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["targetdoc",{"_index":3891,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["targetdoc.type",{"_index":3894,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["targetdocs",{"_index":156,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["targetenabled",{"_index":3485,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["targetenumvalue",{"_index":2606,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["targetenumvalues",{"_index":2570,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetfield",{"_index":1832,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/NamespaceModel.html":{}}}],["targetfield.enumvalues",{"_index":2576,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetfield.name",{"_index":1834,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/NamespaceModel.html":{}}}],["targetfielddocdeftype",{"_index":3613,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["targetfields",{"_index":2657,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["targetidentifier",{"_index":2512,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappingDefinition.html":{}}}],["targetindex",{"_index":3245,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["targetnode",{"_index":1605,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetnode.str",{"_index":1612,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetnode.str.replace(targetnode.str.substring(startoffset",{"_index":1616,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetnode.str.substring(0",{"_index":1613,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetnodeindex",{"_index":1606,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targets",{"_index":2806,"title":{},"body":{"classes/MappingDefinition.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["targetsourcepaths",{"_index":2820,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["targetsourcepaths.concat(field.getfieldpaths(doc.getallfields",{"_index":2873,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["targetstring",{"_index":1702,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetstring.substr(1",{"_index":1703,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetstring.substring(0",{"_index":1704,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetstring.substring(offset",{"_index":1705,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetsupportstemplate",{"_index":3771,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["targettoggled",{"_index":3486,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["targettype",{"_index":1797,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["targetvalue",{"_index":2527,"title":{},"body":{"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{}}}],["targetvalues",{"_index":2574,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetvalues.push",{"_index":2575,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetvalues.push(e.name",{"_index":2577,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetx",{"_index":2365,"title":{},"body":{"classes/LineModel.html":{}}}],["targety",{"_index":2366,"title":{},"body":{"classes/LineModel.html":{}}}],["template",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["templatecomponent",{"_index":3896,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["templatecomponent.templatetext",{"_index":3897,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["templateeditcomponent",{"_index":442,"title":{"components/TemplateEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["templateexists",{"_index":2782,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["templatetext",{"_index":2765,"title":{},"body":{"classes/MappingDefinition.html":{},"components/TemplateEditComponent.html":{}}}],["templateurl",{"_index":454,"title":{},"body":{"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["terminal",{"_index":3666,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["terminalfields",{"_index":3598,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["terminate",{"_index":4410,"title":{},"body":{"license.html":{}}}],["terminating",{"_index":1708,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["terms",{"_index":4274,"title":{},"body":{"license.html":{}}}],["test",{"_index":1528,"title":{},"body":{"classes/Examples.html":{}}}],["test.model",{"_index":1525,"title":{},"body":{"classes/Examples.html":{}}}],["tests",{"_index":4243,"title":{},"body":{"index.html":{}}}],["text",{"_index":1126,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["text.indexof",{"_index":1746,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["text.length",{"_index":1751,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["text.search(/\\$\\{[0",{"_index":1740,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["text.substring(text.indexof",{"_index":1750,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textcache",{"_index":1579,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textinput",{"_index":3036,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["textnode",{"_index":1559,"title":{"classes/TextNode.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["textnode(post",{"_index":1664,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textnode(text",{"_index":1752,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textnode(text.substring(0",{"_index":1743,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textnode).str",{"_index":1646,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textnode).str.length",{"_index":1680,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["that.cfg.errorservice.error('the",{"_index":4065,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.cfg.mappingservice.notifymappingupdated",{"_index":4054,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.cfg.mappingservice.updatemappedfield(that.fieldpair",{"_index":4070,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.children",{"_index":1400,"title":{},"body":{"classes/EnumValue.html":{}}}],["that.docdef",{"_index":1399,"title":{},"body":{"classes/EnumValue.html":{}}}],["that.fieldpair.transition.delimiter",{"_index":4068,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.fieldpair.transition.userdelimiter",{"_index":4069,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.mapping.transition.delimiter",{"_index":4052,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.mapping.transition.userdelimiter",{"_index":4057,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.parentfield",{"_index":1398,"title":{},"body":{"classes/EnumValue.html":{}}}],["that.serviceobject",{"_index":1397,"title":{},"body":{"classes/EnumValue.html":{}}}],["then((fetchedactionconfigs",{"_index":1964,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["then(async(result",{"_index":2304,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["theory",{"_index":4484,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":4342,"title":{},"body":{"license.html":{}}}],["they've",{"_index":3014,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["third",{"_index":4435,"title":{},"body":{"license.html":{}}}],["this).find('option:selected",{"_index":4049,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this).find('option:selected').val(that.mapping.transition.userdelimiter",{"_index":4060,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this).val",{"_index":4056,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this).val(that.mapping.transition.userdelimiter).trigger('input",{"_index":4061,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this._cfg",{"_index":2231,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this._cfg.logger",{"_index":2233,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this._issource",{"_index":3587,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this._nodes",{"_index":1586,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.filter(n",{"_index":1720,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.find(n",{"_index":1594,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.foreach(node",{"_index":1735,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.indexof(lastnode",{"_index":1611,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.indexof(node",{"_index":1723,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.indexof(targetnode",{"_index":1614,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.length",{"_index":1588,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.pop",{"_index":1692,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.push(...newnodes",{"_index":1643,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.push(lastnode",{"_index":1754,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.push(new",{"_index":1756,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(index",{"_index":1724,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(lastaddedindex",{"_index":1677,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(nextnodeindex",{"_index":1688,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(targetnodeindex",{"_index":1666,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(this.getlastnodeindex",{"_index":1648,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[index",{"_index":1725,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[lastaddedindex",{"_index":1668,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[nextnodeindex",{"_index":1684,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[targetnodeindex",{"_index":1699,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[this.getlastnodeindex",{"_index":1590,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._showmappingpreview",{"_index":183,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this._type",{"_index":3607,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.actionconfigparamselectionchanged(event",{"_index":3003,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.actiondefinitions",{"_index":1951,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.actiondefinitions.filter(d",{"_index":1978,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.actiondefinitions.push(fieldactiondefinition",{"_index":1954,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.actions",{"_index":2655,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.actualdelimiter",{"_index":3940,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.adderror(message",{"_index":1469,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.addline(l",{"_index":2431,"title":{},"body":{"classes/LineModel.html":{}}}],["this.addlinefromparams('0",{"_index":2495,"title":{},"body":{"classes/LineModel.html":{}}}],["this.alias",{"_index":3580,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.allfields",{"_index":3681,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.allfields.push(field",{"_index":3717,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.alphabetizefields(field.children",{"_index":1365,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.appendfieldnode(f",{"_index":1583,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.appendfieldnode(mfield",{"_index":1730,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.appliestosourcefield(mapping",{"_index":1811,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.appliestotargetfield(mapping",{"_index":1812,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.arguments",{"_index":1821,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.argumentvalues",{"_index":1876,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.argumentvalues.push(newargvalue",{"_index":1881,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.arraydoesnotcontainerror(errorblock[0].message",{"_index":1480,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.arraydoesnotcontainerror(message",{"_index":1482,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.buttonclicked(false",{"_index":1293,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cancelbuttonhandler",{"_index":1304,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cancelbuttonhandler(this",{"_index":1312,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cfg",{"_index":1597,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"classes/TextNode.html":{}}}],["this.cfg.currentdraggedfield",{"_index":1097,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["this.cfg.currentdraggedfield.issource",{"_index":1115,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.currentdraggedfield.selected",{"_index":1120,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.documentservice.processdocument(event.target.files[0",{"_index":3849,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.errors",{"_index":1473,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.cfg.errors.filter(e",{"_index":1475,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.cfg.errors.length",{"_index":3439,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.cfg.errors.push(e",{"_index":1486,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.cfg.errorservice.clearmappingerrors",{"_index":3007,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.errorservice.clearvalidationerrors",{"_index":1307,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/MappingDetailComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cfg.errorservice.error('could",{"_index":3848,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.errorservice.error('fatal",{"_index":3847,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.errorservice.error('unable",{"_index":1748,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.cfg.errorservice.info('at",{"_index":1706,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.cfg.errorservice.info('please",{"_index":3877,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.errorservice.info('the",{"_index":3233,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.cfg.errorservice.info('you",{"_index":3018,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.cfg.errorservice.mappingerror",{"_index":2311,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.errorservice.mappingerror('please",{"_index":3011,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.errorservice.mappingerror('unable",{"_index":2310,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.errorservice.mappingerror(message",{"_index":2345,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.errorservice.removeerror(e.identifier",{"_index":3447,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.cfg.errorservice.removeerror(erroridentifier.value",{"_index":3442,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.cfg.errorservice.removeerror(w.identifier",{"_index":3451,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.cfg.errorservice.resetall",{"_index":3843,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.errorservice.warn",{"_index":3875,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.errorservice.warn('mapping",{"_index":1958,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.fieldactionservice.getactiondefinitionforname(selectedactionname",{"_index":3074,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["this.cfg.fieldactionservice.getactionsappliestofield(this.mapping",{"_index":3065,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["this.cfg.fileservice.exportmappingscatalog(filename",{"_index":3906,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.fileservice.importadmcatalog(selectedfile",{"_index":3852,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.fileservice.resetall().topromise().then",{"_index":3845,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.getalldocs",{"_index":2290,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.getdocs(this.issource",{"_index":3184,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.cfg.getfirstxmldoc(false).namespaces",{"_index":3538,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.cfg.getfirstxmldoc(false).namespaces.push(newnamespace",{"_index":3546,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.cfg.initcfg.basemappingserviceurl",{"_index":1960,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["this.cfg.initcfg.initialized",{"_index":2346,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/LineModel.html":{}}}],["this.cfg.initcfg.xsrfdefaulttokenvalue",{"_index":327,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["this.cfg.initcfg.xsrfheadername",{"_index":349,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["this.cfg.initializationservice.initialize",{"_index":2325,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.initializationservice.systeminitializedsource.next",{"_index":3884,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.initializationservice.updateloadingstatus('importing",{"_index":3851,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.isdebugenabled",{"_index":2000,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.istraceenabled",{"_index":1987,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["this.cfg.logger.debug(`deserializing",{"_index":2001,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.logger.trace('field",{"_index":1983,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.logger.trace('mapping",{"_index":2235,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.logger.trace('set",{"_index":2270,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.logger.trace(`field",{"_index":1988,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.logger.trace(`mapping",{"_index":2236,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.logger.trace(`set",{"_index":2271,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappingfiles",{"_index":2333,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappingfiles.length",{"_index":2344,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappingfiles[0",{"_index":2328,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappings",{"_index":1215,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.activemapping",{"_index":1216,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.mappings.activemapping.getfields(this.field.issource()).includes(this.field",{"_index":1217,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.mappings.activemapping.islookupmode",{"_index":2921,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappings.activemapping.removevalidationerror(e.identifier",{"_index":3446,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.cfg.mappings.activemapping.removevalidationerror(erroridentifier.value",{"_index":3441,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.cfg.mappings.activemapping.removevalidationerror(w.identifier",{"_index":3450,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.cfg.mappings.activemapping.transition",{"_index":3865,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.activemapping.transition.enableexpression",{"_index":3866,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.activemapping.transition.mode",{"_index":3874,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.findmappingsforfield(field",{"_index":2928,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappings.getallmappings(true",{"_index":3318,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.cfg.mappings.mappings",{"_index":2453,"title":{},"body":{"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.cfg.mappings.name",{"_index":2329,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappings.removetablebyname(activemapping.transition.lookuptablename",{"_index":2924,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappings.templateexists",{"_index":3856,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.templatetext",{"_index":3898,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappingservice",{"_index":1957,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.mappingservice.addnewmapping(null",{"_index":3868,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappingservice.addnewmapping(this.selectedfield",{"_index":3368,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.cfg.mappingservice.addplaceholders(insertionindex",{"_index":3248,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.deselectmapping",{"_index":3869,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappingservice.fieldselected(event.item['field",{"_index":3190,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.cfg.mappingservice.fieldselected(targetfield",{"_index":2421,"title":{},"body":{"classes/LineModel.html":{}}}],["this.cfg.mappingservice.fieldselected(this.cfg.currentdraggedfield",{"_index":1121,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.fieldselected(this.field",{"_index":1124,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.isfieldselectable(activemapping",{"_index":3187,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.cfg.mappingservice.mappingselectionrequired$.subscribe((field",{"_index":2918,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappingservice.mappingupdated$.subscribe",{"_index":2390,"title":{},"body":{"classes/LineModel.html":{}}}],["this.cfg.mappingservice.movemappedfieldto(this.mapping",{"_index":3164,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.notifymappingupdated",{"_index":3002,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.mappingservice.removemapping(activemapping",{"_index":2925,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappingservice.selectmapping(mapping",{"_index":3302,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.cfg.mappingservice.updatemappedfield(this.mapping",{"_index":3192,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["this.cfg.preloadedfieldactionmetadata",{"_index":1950,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.preloadedfieldactionmetadata.actiondetails.actiondetail",{"_index":1952,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.showlinesalways",{"_index":2494,"title":{},"body":{"classes/LineModel.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.showmappedfields",{"_index":1135,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.showmappingdetailtray",{"_index":2926,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.showmappingpreview",{"_index":3872,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.showmappingtable",{"_index":3860,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.shownamespacetable",{"_index":3861,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.showtypes",{"_index":3871,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.showunmappedfields",{"_index":1136,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.targetdocs[0",{"_index":3892,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.validationerrors",{"_index":1474,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.cfg.validationerrors.filter(e",{"_index":1477,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.checkfieldeligibiltyforlinedrawing(inputfield",{"_index":2479,"title":{},"body":{"classes/LineModel.html":{}}}],["this.checkfieldeligibiltyforlinedrawing(outputfield",{"_index":2488,"title":{},"body":{"classes/LineModel.html":{}}}],["this.checkiconenabled",{"_index":3001,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.children",{"_index":1390,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.children.push(childfield.copy",{"_index":1401,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.classidentifier",{"_index":3585,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.clearlines",{"_index":2452,"title":{},"body":{"classes/LineModel.html":{}}}],["this.close",{"_index":1313,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.collapsed",{"_index":518,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["this.complexfieldsbyclassidentifier",{"_index":3684,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.complexfieldsbyclassidentifier.hasownproperty(key",{"_index":3725,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.complexfieldsbyclassidentifier[classidentifier",{"_index":3609,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.complexfieldsbyclassidentifier[field.classidentifier",{"_index":3735,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.complexfieldsbyclassidentifier[key",{"_index":3726,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.nestedcomponenttype",{"_index":1284,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.componentloaded",{"_index":1272,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.confirmbuttondisabled",{"_index":1298,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.confirmbuttontext",{"_index":1299,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.constantdoc.clearfields",{"_index":256,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc.issource",{"_index":173,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc.name",{"_index":171,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc.showfields",{"_index":174,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc.type",{"_index":169,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc].concat(docs",{"_index":245,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc].concat(this.sourcedocs).concat(this.targetdocs",{"_index":273,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.createlinestyle(l",{"_index":2433,"title":{},"body":{"classes/LineModel.html":{}}}],["this.data",{"_index":2594,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.datasource",{"_index":2073,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["this.delimiter",{"_index":3937,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.delimiters",{"_index":4040,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this.detector.detectchanges",{"_index":1277,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.diff",{"_index":3144,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.discovercomplexfields(field.children",{"_index":3736,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.discovercomplexfields(fields",{"_index":3724,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.displayname",{"_index":3586,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.docdef",{"_index":491,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.docdef.fieldexists(this.getfield",{"_index":572,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.docdef.getallfields",{"_index":2111,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.docdef.ispropertyorconstant",{"_index":1419,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.docdef.issource",{"_index":1408,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.docdef.type",{"_index":1420,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{}}}],["this.docdefinput",{"_index":2482,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefinput.setlinemachine(this",{"_index":2392,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefoutput",{"_index":2492,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefoutput.getfielddetailcomponentposition(component.field).y",{"_index":2446,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefoutput.setlinemachine(this",{"_index":2393,"title":{},"body":{"classes/LineModel.html":{}}}],["this.dofetchfieldactions().topromise",{"_index":1963,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.drawcurrentline('100",{"_index":2447,"title":{},"body":{"classes/LineModel.html":{}}}],["this.drawcurrentline(event.offsetx.tostring",{"_index":2439,"title":{},"body":{"classes/LineModel.html":{}}}],["this.drawingline",{"_index":2442,"title":{},"body":{"classes/LineModel.html":{}}}],["this.drawlinesformapping(activemapping",{"_index":2458,"title":{},"body":{"classes/LineModel.html":{}}}],["this.drawlinesformapping(m",{"_index":2457,"title":{},"body":{"classes/LineModel.html":{}}}],["this.editmode",{"_index":2076,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.edittemplate",{"_index":3870,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.elem",{"_index":734,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["this.elem.onmouseup",{"_index":3159,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.elem.style.position",{"_index":3157,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.elem.style['top",{"_index":3146,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.elementref.nativeelement.focus",{"_index":2357,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.enablecheck",{"_index":3032,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.entries",{"_index":2541,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.entries.length",{"_index":2545,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.entries.push(entry",{"_index":2543,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.enumeration",{"_index":1378,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.enumfieldsbyclassidentifier",{"_index":3685,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.enumfieldsbyclassidentifier[classidentifier",{"_index":3611,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.enumfieldsbyclassidentifier[field.classidentifier",{"_index":3719,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.error",{"_index":1505,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["this.errorservice",{"_index":714,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.errorservice.removeerror(e.identifier",{"_index":731,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.errorservice.removeerror(erroridentifier.value",{"_index":729,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.errorservice.validationerror(errormessage",{"_index":289,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.expressionupdatedsource.asobservable",{"_index":1577,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.expressionupdatedsource.next",{"_index":1618,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.expressionupdatedsource.next(updatedevent",{"_index":1681,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.extractfieldactiondefinition(actiondetail",{"_index":1953,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.fade",{"_index":1295,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.field",{"_index":560,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{}}}],["this.field.collapsed",{"_index":1161,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.displayname",{"_index":564,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.docdef",{"_index":570,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.docdef.type",{"_index":1130,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.enumeration",{"_index":1125,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.field.name",{"_index":1572,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.field.fielddepth",{"_index":1208,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.hasunmappedchildren",{"_index":1143,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.isattribute",{"_index":1131,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{}}}],["this.field.iscollection",{"_index":1128,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.isconstant",{"_index":1177,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.isproperty",{"_index":1175,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.ispropertyorconstant",{"_index":1202,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.issource",{"_index":1114,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.field.isterminal",{"_index":1090,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.name",{"_index":566,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.name.length",{"_index":1214,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.namespacealias",{"_index":2085,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.field.parentfield",{"_index":2077,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.field.partofmapping",{"_index":1134,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.partoftransformation",{"_index":1137,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.path",{"_index":567,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.serviceobject.jsontype",{"_index":2118,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.field.type",{"_index":568,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.usercreated",{"_index":569,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.value",{"_index":565,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["this.fieldcomponents.toarray",{"_index":1167,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.fielddetailelement.nativeelement",{"_index":1155,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.fieldmode",{"_index":557,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.fieldpairmatchessearch(mapping",{"_index":3319,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.fieldpaths",{"_index":3660,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldpaths.push(field.path",{"_index":3716,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldpaths.sort",{"_index":3652,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fields",{"_index":3649,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fields.push(field",{"_index":3661,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath",{"_index":3683,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath[currentparentpath",{"_index":3639,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath[field.path",{"_index":3687,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath[fieldpath",{"_index":3627,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath[oldpath",{"_index":3658,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldtype",{"_index":2079,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.filedata",{"_index":3886,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.focus",{"_index":2355,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.focusel",{"_index":494,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["this.getactualfield(mapping",{"_index":1809,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.getalldocs",{"_index":260,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.getallfields",{"_index":3615,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.getallmappedfields",{"_index":2731,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getargumentvalue(argumentname).value",{"_index":1882,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.getcollectionparentfield",{"_index":1407,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.getcomplexfield(field.classidentifier",{"_index":3670,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.getcurrentadmcatalog().subscribe",{"_index":2306,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getcurrentmappingjson().topromise().then((result",{"_index":2330,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getdocs(issource",{"_index":267,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.getdocswithoutpropertydoc(issource",{"_index":243,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.geterrors",{"_index":3445,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.geterrors().length",{"_index":3443,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.geterrors()[0",{"_index":742,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.getfield(fieldpath",{"_index":3623,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.getfields(field.getfieldpaths(fields",{"_index":3620,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.getfields(issource",{"_index":2725,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getfields(true).concat(this.getfields(false",{"_index":2734,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getfirstmappingforlookuptable(t.name",{"_index":2853,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.getjsonbuf",{"_index":2279,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getlastnode",{"_index":1593,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.getmappedfieldactions()[actionindex",{"_index":3033,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.getmappedfieldactions()[selectedactionindex",{"_index":3071,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["this.getmappedfieldforfield(field",{"_index":2738,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(field.issource",{"_index":2689,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(field.issource()).push(mappedfield",{"_index":2687,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(field.issource()).unshift(mappedfield",{"_index":2686,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(issource",{"_index":2707,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(issource).push(mappedfield",{"_index":2701,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(mappedfield.field.issource",{"_index":2704,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(mappedfield.field.issource()).indexof(mappedfield",{"_index":2710,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(true).concat(this.getmappedfields(false",{"_index":2736,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappingid",{"_index":2267,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getmappingid()).topromise",{"_index":2303,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getmappingid()).topromise().then",{"_index":2323,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getnamewithnamespace",{"_index":1414,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.getparentobjectname",{"_index":3252,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.getscreenposforfield(inputfield",{"_index":2481,"title":{},"body":{"classes/LineModel.html":{}}}],["this.getscreenposforfield(outputfield",{"_index":2491,"title":{},"body":{"classes/LineModel.html":{}}}],["this.getselectedmappingcomponent().mapping",{"_index":3370,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.getsourceiconcssclass",{"_index":3251,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.gettables",{"_index":2849,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.gettargetfieldfromline(selectedelement.attributes",{"_index":2420,"title":{},"body":{"classes/LineModel.html":{}}}],["this.getwarnings",{"_index":3449,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.getwarnings().length",{"_index":3444,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.getwarnings()[0",{"_index":743,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.handleerror('error",{"_index":2244,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.hasfocus",{"_index":2356,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.headers",{"_index":1985,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["this.headertext",{"_index":1301,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.htmlcache",{"_index":1732,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.http.delete(url",{"_index":2260,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.http.get(url",{"_index":1984,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["this.http.put(url",{"_index":2268,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.identifier",{"_index":1502,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["this.index",{"_index":1570,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.initcfg.classpath",{"_index":263,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.initializationservice.cfg",{"_index":613,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["this.initializationservice.initialize",{"_index":647,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["this.initialized",{"_index":3653,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.initializemappinglookuptable(m",{"_index":2860,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.inputid",{"_index":3141,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.insertnodes([new",{"_index":1728,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.insertnodes(this.createnodesfromtext(str",{"_index":1634,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.isarray",{"_index":1410,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.isclosing",{"_index":563,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.iscollection",{"_index":1373,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.isdragdroptarget",{"_index":1116,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["this.isinitialized",{"_index":1956,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.isoddrow",{"_index":3398,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["this.isopen",{"_index":730,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.isprimitive",{"_index":1374,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.isproperty",{"_index":1416,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.ispropertyorconstant",{"_index":1415,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["this.issource",{"_index":3067,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.issource).length",{"_index":3066,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["this.issource)[0",{"_index":3232,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.istarget",{"_index":3581,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.isvalidation",{"_index":718,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.isxml",{"_index":2078,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.jsonbuffer",{"_index":2331,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.left_bracket",{"_index":3710,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.level",{"_index":1504,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["this.linebeingformed",{"_index":2436,"title":{},"body":{"classes/LineModel.html":{}}}],["this.linebeingformed.targetx",{"_index":2443,"title":{},"body":{"classes/LineModel.html":{}}}],["this.linebeingformed.targety",{"_index":2444,"title":{},"body":{"classes/LineModel.html":{}}}],["this.linemachine",{"_index":1159,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.linemachine.handledocumentfieldmouseover(this",{"_index":1160,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.linemachine.redrawlinesformappings",{"_index":1162,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.linemachineelement.nativeelement",{"_index":2469,"title":{},"body":{"classes/LineModel.html":{}}}],["this.lines",{"_index":2403,"title":{},"body":{"classes/LineModel.html":{}}}],["this.lines.push(l",{"_index":2434,"title":{},"body":{"classes/LineModel.html":{}}}],["this.loadcomponent",{"_index":1276,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.logger",{"_index":2234,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.logger.getconfigsnapshot().level",{"_index":191,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.lookuptablename",{"_index":3994,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.mappedfield",{"_index":3235,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.actions",{"_index":3000,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["this.mappedfield.actions.push(action",{"_index":3234,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.actions[actionindex",{"_index":3029,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.mappedfield.field",{"_index":3236,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.field.docdef",{"_index":3239,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.field.docdef.getname(configmodel.getconfig().showtypes",{"_index":3255,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.field.getfieldlabel(configmodel.getconfig().showtypes",{"_index":3333,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.field.name.length",{"_index":3231,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.field.path",{"_index":3237,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.ispadfield",{"_index":3230,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.parseddata.usercreated",{"_index":3020,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.mappedfield.removeaction(action",{"_index":3068,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["this.mapping",{"_index":2572,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldDetailComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.mapping.getindexformappedfield(insertbeforemappedfield",{"_index":3165,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.getindexformappedfield(this.field",{"_index":1571,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.mapping.getmappedfields(mappedfield.issource",{"_index":3244,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mapping.getmappedfields(this.issource",{"_index":3174,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.getmappedfields(this.issource).length",{"_index":3241,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mapping.getusermappedfields(true).foreach(f",{"_index":1582,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.mapping.removemappedfield(mappedfield",{"_index":3191,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["this.mapping.transition",{"_index":3169,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.transition.enableexpression",{"_index":3170,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["this.mapping.transition.expression.updatefieldreference(this.mapping",{"_index":3171,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.transition.isenumerationmode",{"_index":4071,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this.mapping.transition.ismanytoonemode",{"_index":3173,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.transition.isonetomanymode",{"_index":3172,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.mapping.transition.mode",{"_index":3176,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mappingchanged",{"_index":2391,"title":{},"body":{"classes/LineModel.html":{}}}],["this.mappingfiles",{"_index":257,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.mappings",{"_index":2859,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.mappingselectionrequiredsubscription",{"_index":2917,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.mappingselectionrequiredsubscription.unsubscribe",{"_index":2920,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.mappingservice.disablemappingpreview",{"_index":185,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.mappingservice.enablemappingpreview",{"_index":184,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.mappingsfilename",{"_index":3885,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.mappingsfilename.length",{"_index":3905,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.mappingupdatedsubscription",{"_index":2389,"title":{},"body":{"classes/LineModel.html":{}}}],["this.mappingupdatedsubscription.unsubscribe",{"_index":2394,"title":{},"body":{"classes/LineModel.html":{}}}],["this.matchesdate(this.sourcetype",{"_index":1857,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.matchesdate(this.targettype",{"_index":1864,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.matchesnumeric(this.sourcetype",{"_index":1859,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.matchesnumeric(this.targettype",{"_index":1865,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.message",{"_index":1300,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/ErrorInfo.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorwindow.reset",{"_index":740,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.modalerrorwindow.show",{"_index":741,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.modalwindow",{"_index":1184,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{}}}],["this.modalwindow.cancelbuttonhandler",{"_index":2936,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.modalwindow.close",{"_index":3369,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.modalwindow.confirmbuttontext",{"_index":1173,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.headertext",{"_index":1178,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.message",{"_index":1203,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.modalwindow.nestedcomponentinitializedcallback",{"_index":1179,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.nestedcomponenttype",{"_index":1191,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.okbuttonhandler",{"_index":1192,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.reset",{"_index":1172,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.show",{"_index":1200,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindowcomponent",{"_index":562,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.modalwindowcomponent.confirmbuttondisabled",{"_index":573,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.mode",{"_index":3992,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.mouseeventtimer",{"_index":732,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.multiplicity",{"_index":1853,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.mytarget",{"_index":1274,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytarget.changes.subscribe(changes",{"_index":1271,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytarget.toarray().length",{"_index":1275,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytarget.toarray()[0",{"_index":1281,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytargetchangessubscription",{"_index":1265,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytargetchangessubscription.unsubscribe",{"_index":1266,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.name",{"_index":1371,"title":{},"body":{"classes/EnumValue.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["this.namespace",{"_index":3494,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["this.namespace.alias",{"_index":3500,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["this.namespace.istarget",{"_index":3499,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["this.namespacealias",{"_index":1370,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{}}}],["this.namespacematchessearch(ns",{"_index":3556,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.namespaces",{"_index":2088,"title":{},"body":{"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{}}}],["this.namespaces.push(fakenamespace",{"_index":2102,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.nestedcomponent",{"_index":1285,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponent.getinitialfocuselement",{"_index":1290,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponent.isdatavalid",{"_index":1308,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponentinitializedcallback",{"_index":1287,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponentinitializedcallback(this",{"_index":1288,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponenttype",{"_index":1302,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nodes[lastaddedindex",{"_index":1669,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.okbuttonhandler",{"_index":1303,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.okbuttonhandler(this",{"_index":1309,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.outputselects.toarray",{"_index":2596,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.parentfield",{"_index":1387,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{}}}],["this.parentfield.name",{"_index":2104,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.parentfield.namespacealias",{"_index":2087,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.parentfieldname",{"_index":2103,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.parentobjectname",{"_index":3238,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.parentobjectname.length",{"_index":3240,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.path",{"_index":1413,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["this.pathseparator",{"_index":3630,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatechildren(field.parentfield",{"_index":3662,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatechildren(parentfield",{"_index":3643,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatefielddata(childfield",{"_index":3678,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatefielddata(field",{"_index":3651,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatefieldparentpaths(childfield",{"_index":3676,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatefieldparentpaths(field",{"_index":3650,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.preparecomplexfields",{"_index":3647,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.prettyname",{"_index":3939,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.previewerrors",{"_index":2670,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.previewerrors.filter(e",{"_index":2673,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.processmappingscatalog(userfile",{"_index":3846,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.propertydoc",{"_index":244,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.clearfields",{"_index":255,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.issource",{"_index":167,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.name",{"_index":166,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.showfields",{"_index":168,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.type",{"_index":164,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.reader",{"_index":3887,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.reader.onload",{"_index":3830,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.reader.readasarraybuffer(filecontent",{"_index":3835,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.reader.result",{"_index":3831,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.redrawlinesformappings",{"_index":2422,"title":{},"body":{"classes/LineModel.html":{}}}],["this.removeerror(e.identifier",{"_index":1478,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.resetall",{"_index":3873,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.right_bracket",{"_index":3711,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.sanitizer.bypasssecuritytruststyle('display:inline",{"_index":1210,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytruststyle('stroke",{"_index":2466,"title":{},"body":{"classes/LineModel.html":{}}}],["this.search(this.searchfilter",{"_index":3308,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchfilter",{"_index":3180,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchfilter.tolowercase",{"_index":3312,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchmode",{"_index":3298,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchresults",{"_index":3305,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchresults.length",{"_index":3300,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchresults.push(mapping",{"_index":3320,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.searchresults.push(ns",{"_index":3557,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.sectioncomponents.toarray",{"_index":3372,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.selected",{"_index":1147,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["this.selectedcallback(this",{"_index":3402,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["this.selectedmappingcomponent",{"_index":3371,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.selectednamespace",{"_index":3537,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.selectmapping(field",{"_index":2919,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.selectnamespace",{"_index":3558,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.serializedvalue",{"_index":3938,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.serviceobject",{"_index":1385,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.setbinaryfiletoservice(filecontent",{"_index":2302,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.setlinebeingformed(null",{"_index":2450,"title":{},"body":{"classes/LineModel.html":{}}}],["this.showactiveerrors",{"_index":737,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.sortfieldactiondefinitions(actionconfigs",{"_index":1996,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.sortfieldactiondefinitions(this.actiondefinitions",{"_index":1955,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.sourcedocs",{"_index":239,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.sourcedocs.push(docdef",{"_index":230,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.sourcefields",{"_index":2678,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.sourcefields.concat(this.targetfields",{"_index":2683,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.sourcefields.length",{"_index":2696,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.sourceiconcssclass",{"_index":3250,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.sourceidentifier",{"_index":2539,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.sourcetype",{"_index":1860,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.sourcevalue",{"_index":2529,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.start",{"_index":3145,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.str",{"_index":1563,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.str.replace",{"_index":1564,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.table",{"_index":2578,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.table.entries",{"_index":2595,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.table.entries.push(e",{"_index":2604,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.table.getentryforsource(tabledata.sourceenumvalue",{"_index":2590,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.tables.push(table",{"_index":2846,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tables[this.tables.indexof(table",{"_index":2868,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname",{"_index":2862,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname.hasownproperty(key",{"_index":2863,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname[key",{"_index":2864,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname[name",{"_index":2847,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname[table.name",{"_index":2845,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbysourcetargetkey[iokey",{"_index":2869,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbysourcetargetkey[key",{"_index":2861,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbysourcetargetkey[table.getinputoutputkey",{"_index":2844,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.targetdocs",{"_index":240,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.targetdocs.push(docdef",{"_index":231,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.targetenabled",{"_index":3498,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["this.targetfields",{"_index":2679,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.targetfields.length",{"_index":2697,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.targetidentifier",{"_index":2540,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.targetsupportstemplate",{"_index":3893,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.targettype",{"_index":1866,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.targetvalue",{"_index":2530,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.templatetext",{"_index":2843,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.terminalfields",{"_index":3682,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.terminalfields.push(field",{"_index":3720,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.textcache",{"_index":1731,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.tokenextractor.gettoken",{"_index":350,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["this.type",{"_index":1375,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["this.updatecache",{"_index":1617,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.updatetemplatevalues",{"_index":3229,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.uri",{"_index":3582,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.userclassname",{"_index":492,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["this.usercollectiontype",{"_index":495,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["this.userdelimiter",{"_index":3985,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.uuid",{"_index":1366,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["this.validateactionconfigparamselection(action.argumentvalues",{"_index":3031,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.validationerrors",{"_index":2664,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.validationerrors.filter(e",{"_index":2666,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.value",{"_index":1417,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.valuetype",{"_index":555,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.visible",{"_index":1273,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.xsrfcookiename",{"_index":109,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.xsrfdefaulttokenvalue",{"_index":111,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.xsrfheadername",{"_index":107,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.yoffset).tostring",{"_index":2448,"title":{},"body":{"classes/LineModel.html":{}}}],["those",{"_index":1105,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"license.html":{}}}],["through",{"_index":4280,"title":{},"body":{"license.html":{}}}],["throw",{"_index":2461,"title":{},"body":{"classes/LineModel.html":{},"classes/NamespaceModel.html":{}}}],["time",{"_index":585,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["time'].indexof(selectedtype",{"_index":1843,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["timeout",{"_index":2229,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["timer",{"_index":705,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["times",{"_index":3695,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["timetz",{"_index":589,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["title",{"_index":510,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"license.html":{}}}],["tns",{"_index":3501,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{}}}],["tns'.includes(filter",{"_index":3547,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["toadd",{"_index":1718,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["todisplayable",{"_index":917,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["todisplayable(camelcasestring",{"_index":963,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["todo",{"_index":3943,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["toerroriconclass",{"_index":3759,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["toerroriconclasspipe",{"_index":783,"title":{"pipes/ToErrorIconClassPipe.html":{}},"body":{"modules/DataMapperModule.html":{},"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{},"overview.html":{}}}],["togglesearch",{"_index":3274,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["tohtml",{"_index":1542,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["tojson",{"_index":2528,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["token",{"_index":303,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tokenposition",{"_index":1691,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["toolbar",{"_index":3768,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["toolbar.component.html",{"_index":3769,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarbuttonclicked",{"_index":3782,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarbuttonclicked(action",{"_index":3821,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcomponent",{"_index":443,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tooltipmodule",{"_index":840,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["tooltipmodule.forroot",{"_index":891,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["tooltipmoduleforroot",{"_index":890,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["topromise().then((body",{"_index":1986,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["topromise().then((res",{"_index":2261,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["toremove",{"_index":1719,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["tort",{"_index":4485,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":2515,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["totext",{"_index":1543,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["tracking",{"_index":4360,"title":{},"body":{"license.html":{}}}],["trade",{"_index":4460,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4425,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":4458,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1099,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"license.html":{}}}],["transform",{"_index":3760,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["transform(value",{"_index":3761,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["transformation",{"_index":1804,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"license.html":{}}}],["transformations",{"_index":1802,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transition",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["transition.model",{"_index":2633,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{}}}],["transitiondelimiter",{"_index":3915,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["transitiondelimiter.multi_space",{"_index":4078,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["transitiondelimiter.none",{"_index":4077,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["transitiondelimiter.space",{"_index":3917,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimiter.user_defined",{"_index":3983,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["transitiondelimitermodel",{"_index":3908,"title":{"classes/TransitionDelimiterModel.html":{}},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["transitiondelimitermodel(transitiondelimiter.ampersand",{"_index":3951,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.at_sign",{"_index":3952,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.backslash",{"_index":3955,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.colon",{"_index":3956,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.comma",{"_index":3957,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.dash",{"_index":3958,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.equal",{"_index":3959,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.hash",{"_index":3960,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.multi_space",{"_index":3961,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.none",{"_index":3950,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.period",{"_index":3964,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.pipe",{"_index":3965,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.semicolon",{"_index":3966,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.slash",{"_index":3967,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.space",{"_index":3968,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.underscore",{"_index":3969,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.user_defined",{"_index":3971,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionfieldaction",{"_index":3945,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmode",{"_index":2842,"title":{},"body":{"classes/MappingDefinition.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["transitionmode.enum",{"_index":3976,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmode.for_each",{"_index":3977,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmode.many_to_one",{"_index":3178,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmode.one_to_many",{"_index":3179,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmode.one_to_one",{"_index":3177,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmodel",{"_index":2632,"title":{"classes/TransitionModel.html":{}},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["transitionmodel.delimitermodels",{"_index":3972,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["transitionmodel.delimitermodels.length",{"_index":3947,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmodel.getmappingmodename(this.mode",{"_index":3993,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmodel.gettransitiondelimiterprettyname(this.delimiter",{"_index":3991,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmodel.initialize",{"_index":3946,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["transitionname",{"_index":3313,"title":{},"body":{"components/MappingListComponent.html":{}}}],["transitionname.tolowercase().includes(filter",{"_index":3315,"title":{},"body":{"components/MappingListComponent.html":{}}}],["transitionselectioncomponent",{"_index":445,"title":{"components/TransitionSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["translate",{"_index":2986,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["translation",{"_index":4319,"title":{},"body":{"license.html":{}}}],["tree",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["triangle",{"_index":3766,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["trigger",{"_index":3879,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["triggered",{"_index":3114,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["true",{"_index":103,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":2275,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["turn",{"_index":960,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["two",{"_index":2284,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["type",{"_index":17,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type(type",{"_index":3606,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["typeaheadmodule",{"_index":841,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["typeaheadmodule.forroot",{"_index":889,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["typeaheadmoduleforroot",{"_index":888,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":998,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["types",{"_index":1800,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["typing",{"_index":3182,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["ui",{"_index":138,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"classes/MappingDefinition.html":{},"index.html":{}}}],["ui's",{"_index":4265,"title":{},"body":{"index.html":{}}}],["uint8array",{"_index":962,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["uint8array(arraybuffer",{"_index":3833,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["ul",{"_index":1129,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["unable",{"_index":2313,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["undefined",{"_index":999,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{}}}],["under",{"_index":798,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["underscore",{"_index":3935,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["union",{"_index":4287,"title":{},"body":{"license.html":{}}}],["unique",{"_index":3744,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["units",{"_index":3013,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["unknown",{"_index":4214,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unless",{"_index":808,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["unmapped",{"_index":1721,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["unqualified",{"_index":3579,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["unqualifiednamespace",{"_index":3568,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["unqualifiedns",{"_index":2082,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["unqualifiedns.alias",{"_index":2084,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["unqualifiedns].concat(this.docdef.namespaces",{"_index":2089,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["unselected",{"_index":1713,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["unsigned",{"_index":591,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["until",{"_index":3888,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["update",{"_index":2163,"title":{},"body":{"injectables/FileManagementService.html":{},"components/MappingFieldContainerComponent.html":{},"index.html":{}}}],["updatecache",{"_index":1733,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updated",{"_index":2215,"title":{},"body":{"injectables/FileManagementService.html":{},"components/MappingFieldDetailComponent.html":{}}}],["updatedevent",{"_index":1651,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updatedevent.node",{"_index":1678,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updatedevent.offset",{"_index":1679,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updatedocumentnamespacesfrommappings",{"_index":2783,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["updatedocumentnamespacesfrommappings(cfg",{"_index":2835,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["updatefield(field",{"_index":3654,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["updatefieldreference(mapping",{"_index":1715,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updatefromconfig",{"_index":3880,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["updatefrommappings(mappingdefinition",{"_index":3689,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["updatemappedfieldsfromdocuments",{"_index":2784,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["updatemappedfieldsfromdocuments(mapping",{"_index":2837,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["updatemappingsfromdocuments",{"_index":2785,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["updatemappingsfromdocuments(cfg",{"_index":2840,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["updatesearchfilter",{"_index":3101,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["updatesearchfilter(value",{"_index":3131,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["updatetemplatevalues",{"_index":3203,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["uri",{"_index":3505,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["url",{"_index":1961,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"index.html":{}}}],["url(#line",{"_index":2369,"title":{},"body":{"classes/LineModel.html":{}}}],["urls",{"_index":617,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["use",{"_index":341,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LineModel.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["useclass",{"_index":903,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["used",{"_index":284,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["user",{"_index":692,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"index.html":{}}}],["user's",{"_index":978,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["user_defined",{"_index":3936,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["userclassname",{"_index":457,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["usercollectionclassname",{"_index":458,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["usercollectiontype",{"_index":459,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["usercreated",{"_index":1335,"title":{},"body":{"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["userdelimiter",{"_index":3942,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["userexport",{"_index":2274,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["userfieldcount",{"_index":2693,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["userfile",{"_index":3836,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["userfile.name.split",{"_index":3839,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["userfilecomps",{"_index":3838,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["userfilecomps[userfilecomps.length",{"_index":3841,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["userfilesuffix",{"_index":3840,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["using",{"_index":4478,"title":{},"body":{"license.html":{}}}],["util",{"_index":2228,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["util.ts",{"_index":907,"title":{},"body":{"classes/DataMapperUtil.html":{},"coverage.html":{}}}],["util.ts:101",{"_index":938,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:118",{"_index":974,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:130",{"_index":964,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:152",{"_index":925,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:20",{"_index":922,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:21",{"_index":920,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:23",{"_index":950,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:46",{"_index":954,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:71",{"_index":959,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:85",{"_index":946,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["uuid",{"_index":1329,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["uuidcounter",{"_index":1319,"title":{},"body":{"classes/EnumValue.html":{}}}],["v2/atlas",{"_index":4571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2/atlas/java",{"_index":4572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2/atlas/json",{"_index":4574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2/atlas/xml",{"_index":4573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":276,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["validateactionconfigparamselection",{"_index":2954,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["validateactionconfigparamselection(acp",{"_index":2992,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["validation",{"_index":280,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{}}}],["validation_error",{"_index":1500,"title":{},"body":{"classes/ErrorInfo.html":{},"miscellaneous/enumerations.html":{}}}],["validationerror",{"_index":1433,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["validationerror(message",{"_index":1464,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["validationerrors",{"_index":163,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["value",{"_index":278,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.some(e",{"_index":3764,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["valued",{"_index":2980,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["valueexistsoncreation",{"_index":465,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{}}}],["values",{"_index":1788,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["valuetype",{"_index":530,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["valuetypeselectionchanged",{"_index":532,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["valuetypeselectionchanged(event",{"_index":545,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["var",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["variable",{"_index":4129,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":4548,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":4351,"title":{},"body":{"license.html":{}}}],["verify",{"_index":2414,"title":{},"body":{"classes/LineModel.html":{}}}],["version",{"_index":801,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["vertical",{"_index":3150,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["via",{"_index":2145,"title":{},"body":{"injectables/FileManagementService.html":{},"index.html":{}}}],["viewchild",{"_index":487,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["viewchild('class",{"_index":482,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["viewchild('datamappercomponent",{"_index":602,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["viewchild('expressioncomponent",{"_index":3823,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["viewchild('fielddetailelement",{"_index":1083,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["viewchild('linemachineelement",{"_index":2385,"title":{},"body":{"classes/LineModel.html":{}}}],["viewchild('name",{"_index":3742,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["viewchild('namespace",{"_index":3490,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["viewchild('sourcesheader",{"_index":2916,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["viewchild('template",{"_index":3747,"title":{},"body":{"components/TemplateEditComponent.html":{}}}],["viewchild('value",{"_index":550,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{}}}],["viewchildren",{"_index":1087,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewchildren('dyn_target",{"_index":1258,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewchildren('fielddetail",{"_index":1081,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["viewchildren('mappingsection",{"_index":3355,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["viewchildren('outputselect",{"_index":2564,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["viewcontainerref",{"_index":1237,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewcontainerref.clear",{"_index":1282,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewcontainerref.createcomponent(componentfactory).instance",{"_index":1286,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["visible",{"_index":1256,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["visibleincurrentdocumentsearch",{"_index":1324,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["void",{"_index":179,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["w",{"_index":3448,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["w.message",{"_index":3454,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["walk",{"_index":2740,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["want",{"_index":1205,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["warn",{"_index":1434,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"miscellaneous/enumerations.html":{}}}],["warn(message",{"_index":1466,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["warning",{"_index":680,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["warnings",{"_index":681,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["warranties",{"_index":817,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["warranty",{"_index":4468,"title":{},"body":{"license.html":{}}}],["wasn't",{"_index":3902,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["way",{"_index":2206,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["we'll",{"_index":340,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["we're",{"_index":2207,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{}}}],["web",{"_index":4219,"title":{},"body":{"index.html":{}}}],["well",{"_index":2193,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["wherever",{"_index":4434,"title":{},"body":{"license.html":{}}}],["whether",{"_index":4300,"title":{},"body":{"license.html":{}}}],["who's",{"_index":1096,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["whole",{"_index":4336,"title":{},"body":{"license.html":{}}}],["whose",{"_index":3117,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["widget",{"_index":1631,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/TextNode.html":{}}}],["width",{"_index":927,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["width:4px",{"_index":2467,"title":{},"body":{"classes/LineModel.html":{}}}],["window",{"_index":307,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["window'},{'name",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["window.component",{"_index":490,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["window.component.html",{"_index":1244,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["window.component.ts",{"_index":1233,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"coverage.html":{}}}],["window.component.ts:111",{"_index":3419,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:113",{"_index":3467,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:114",{"_index":3466,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:120",{"_index":3472,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:127",{"_index":3471,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:139",{"_index":3465,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:26",{"_index":3457,"title":{},"body":{"interfaces/ModalErrorWindowValidator.html":{}}}],["window.component.ts:27",{"_index":3456,"title":{},"body":{"interfaces/ModalErrorWindowValidator.html":{}}}],["window.component.ts:28",{"_index":3483,"title":{},"body":{"interfaces/ModalWindowValidator.html":{}}}],["window.component.ts:29",{"_index":3482,"title":{},"body":{"interfaces/ModalWindowValidator.html":{}}}],["window.component.ts:36",{"_index":3414,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:37",{"_index":3417,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:38",{"_index":3416,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:39",{"_index":1236,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:40",{"_index":3413,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:41",{"_index":3415,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:43",{"_index":1235,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:44",{"_index":3434,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:45",{"_index":3437,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:46",{"_index":3431,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:47",{"_index":3429,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:48",{"_index":3438,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:49",{"_index":3433,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:51",{"_index":3435,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:53",{"_index":3430,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:54",{"_index":3412,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:55",{"_index":3462,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:56",{"_index":3432,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{}}}],["window.component.ts:57",{"_index":3464,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:58",{"_index":3424,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{}}}],["window.component.ts:59",{"_index":3460,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:60",{"_index":3461,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:61",{"_index":3463,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:62",{"_index":3418,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:63",{"_index":3478,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:64",{"_index":3480,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:65",{"_index":3474,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:66",{"_index":3475,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:67",{"_index":3481,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:68",{"_index":3477,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:69",{"_index":3427,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:70",{"_index":3479,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:72",{"_index":3473,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:73",{"_index":3426,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{}}}],["window.component.ts:75",{"_index":3476,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:77",{"_index":3469,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:82",{"_index":3425,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:90",{"_index":3420,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:94",{"_index":3421,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:95",{"_index":3470,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:98",{"_index":3423,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:99",{"_index":3468,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.event",{"_index":1110,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["within",{"_index":696,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"index.html":{},"license.html":{}}}],["withinterceptor",{"_index":790,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["without",{"_index":816,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"index.html":{},"license.html":{}}}],["won't",{"_index":1673,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["work",{"_index":3693,"title":{},"body":{"classes/NamespaceModel.html":{},"index.html":{},"license.html":{}}}],["worked",{"_index":1626,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["workingfields",{"_index":2715,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["works",{"_index":4330,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":4377,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":331,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["write",{"_index":975,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["writefile",{"_index":918,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["writefile(filecontent",{"_index":971,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["writing",{"_index":812,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["written",{"_index":4352,"title":{},"body":{"license.html":{}}}],["wudget",{"_index":3795,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["x",{"_index":1152,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["x5b",{"_index":3590,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["x5d",{"_index":3592,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["xml",{"_index":221,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["xmlinspectionserviceurl",{"_index":4565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xmlservicespackageprefix",{"_index":131,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["xsd",{"_index":4210,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["xsrf",{"_index":332,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"miscellaneous/variables.html":{}}}],["xsrf.service",{"_index":879,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["xsrf.service.ts",{"_index":297,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"coverage.html":{}}}],["xsrf.service.ts:19",{"_index":315,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{}}}],["xsrf.service.ts:20",{"_index":312,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{}}}],["xsrf.service.ts:32",{"_index":362,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{}}}],["xsrf.service.ts:33",{"_index":359,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{}}}],["xsrfcookiename",{"_index":73,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["xsrfdefaulttokenvalue",{"_index":74,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["xsrfheadername",{"_index":72,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["y",{"_index":1153,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["yarn",{"_index":4260,"title":{},"body":{"index.html":{}}}],["yes",{"_index":1494,"title":{},"body":{"classes/ErrorInfo.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{}}}],["yoffset",{"_index":2387,"title":{},"body":{"classes/LineModel.html":{}}}],["yyyy",{"_index":4543,"title":{},"body":{"license.html":{}}}],["zero_to_one",{"_index":1793,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"miscellaneous/enumerations.html":{}}}],["zerobasedindex",{"_index":2900,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["zip",{"_index":2172,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["zone.js",{"_index":4200,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":784,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AdmRedrawMappingLinesEvent.html":{"url":"classes/AdmRedrawMappingLinesEvent.html","title":"class - AdmRedrawMappingLinesEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdmRedrawMappingLinesEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/config.model.ts\n        \n\n            \n                Description\n            \n            \n                Place all custom events here.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _lmcInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _lmcInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:319\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NGXLogger, NgxLoggerLevel } from 'ngx-logger';\nimport { environment } from '../../../../environments/environment';\nimport { MappingDefinition } from './mapping-definition.model';\nimport { DocumentDefinition } from './document-definition.model';\n\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { DocumentManagementService } from '../services/document-management.service';\nimport { MappingManagementService } from '../services/mapping-management.service';\nimport { InitializationService } from '../services/initialization.service';\nimport { ErrorInfo } from '../models/error.model';\n\nimport { DocumentType, InspectionType, CollectionType } from '../common/config.types';\nimport { FieldActionService } from '../services/field-action.service';\nimport { FileManagementService } from '../services/file-management.service';\n\nexport class DataMapperInitializationModel {\n  dataMapperVersion = '0.9.2017.07.28';\n  initialized = false;\n  loadingStatus = 'Loading.';\n  admHttpTimeout = 30000;  // 30 seconds\n  initializationErrorOccurred = false;\n\n  baseJavaInspectionServiceUrl: string;\n  baseXMLInspectionServiceUrl: string;\n  baseJSONInspectionServiceUrl: string;\n  baseMappingServiceUrl: string;\n\n  xsrfHeaderName: string;\n  xsrfCookieName: string;\n  xsrfDefaultTokenValue: string;\n\n  /* class path fetching configuration */\n  classPathFetchTimeoutInMilliseconds = 30000;\n  // if classPath is specified, maven call to resolve pom will be skipped\n  pomPayload: string;\n\n  classPath: string;\n\n  /* inspection service filtering flags */\n  fieldNameBlacklist: string[] = [];\n  classNameBlacklist: string[] = [];\n  disablePrivateOnlyFields = false;\n  disableProtectedOnlyFields = false;\n  disablePublicOnlyFields = false;\n  disablePublicGetterSetterFields = false;\n\n  disableMappingPreviewMode = false;\n\n  /* enable the navigation bar and import/export */\n  disableNavbar = true;\n\n  mappingInitialized = false;\n\n  constructor() {\n    if (environment.xsrf) {\n      this.xsrfHeaderName = environment.xsrf.headerName;\n      this.xsrfCookieName = environment.xsrf.cookieName;\n      this.xsrfDefaultTokenValue = environment.xsrf.defaultTokenValue;\n    }\n  }\n\n}\n\nexport class DocumentInitializationModel {\n  id: string;\n  type: DocumentType;\n  name: string;\n  description: string;\n  isSource: boolean;\n  showFields = true;\n  inspectionType: InspectionType;\n  inspectionSource: string;\n  inspectionResult: string;\n  selectedRoot: string;\n  collectionType: CollectionType;\n  collectionClassName: string;\n}\n\nexport class ConfigModel {\n  static mappingServicesPackagePrefix = 'io.atlasmap.v2';\n  static javaServicesPackagePrefix = 'io.atlasmap.java.v2';\n  static jsonServicesPackagePrefix = 'io.atlasmap.json.v2';\n  static xmlServicesPackagePrefix = 'io.atlasmap.xml.v2';\n  private static cfg: ConfigModel = new ConfigModel();\n\n  initCfg: DataMapperInitializationModel = new DataMapperInitializationModel;\n\n  /* current ui state config */\n  showMappingDetailTray = false;\n  showMappingTable = false;\n  showNamespaceTable = false;\n  showLinesAlways = true;\n  showTypes = false;\n  showMappedFields = true;\n  showUnmappedFields = true;\n  _showMappingPreview = false;\n  currentDraggedField: any = null;\n\n  documentService: DocumentManagementService;\n  mappingService: MappingManagementService;\n  errorService: ErrorHandlerService;\n  initializationService: InitializationService;\n  fieldActionService: FieldActionService;\n  fileService: FileManagementService;\n\n  sourceDocs: DocumentDefinition[] = [];\n  targetDocs: DocumentDefinition[] = [];\n  propertyDoc: DocumentDefinition = new DocumentDefinition();\n  constantDoc: DocumentDefinition = new DocumentDefinition();\n  mappingFiles: string[] = [];\n\n  mappings: MappingDefinition = null;\n\n  preloadedFieldActionMetadata: any;\n\n  errors: ErrorInfo[] = [];\n  validationErrors: ErrorInfo[] = [];\n\n  logger: NGXLogger;\n\n  constructor() {\n    this.propertyDoc.type = DocumentType.PROPERTY;\n    this.propertyDoc.name = 'Properties';\n    this.propertyDoc.isSource = true;\n    this.propertyDoc.showFields = false;\n    this.constantDoc.type = DocumentType.CONSTANT;\n    this.constantDoc.name = 'Constants';\n    this.constantDoc.isSource = true;\n    this.constantDoc.showFields = false;\n  }\n\n  static getConfig(): ConfigModel {\n    return ConfigModel.cfg;\n  }\n\n  static setConfig(cfg: ConfigModel): void {\n    ConfigModel.cfg = cfg;\n  }\n\n  set showMappingPreview(show: boolean) {\n    if (show && !this._showMappingPreview) {\n      this.mappingService.enableMappingPreview();\n    } else if (!show && this._showMappingPreview) {\n      this.mappingService.disableMappingPreview();\n    }\n    this._showMappingPreview = show;\n  }\n\n  get showMappingPreview(): boolean {\n    return this._showMappingPreview;\n  }\n\n  isDebugEnabled(): boolean {\n    return [NgxLoggerLevel.DEBUG, NgxLoggerLevel.TRACE].includes(this.logger.getConfigSnapshot().level);\n  }\n\n  isTraceEnabled(): boolean {\n    return this.logger.getConfigSnapshot().level === NgxLoggerLevel.TRACE;\n  }\n\n  addDocument(docInitModel: DocumentInitializationModel): DocumentDefinition {\n    const docDef: DocumentDefinition = new DocumentDefinition();\n    docDef.initModel = docInitModel;\n    docDef.id = docInitModel.id;\n    docDef.type = docInitModel.type;\n    docDef.name = docInitModel.name;\n    docDef.description = docInitModel.description;\n    docDef.isSource = docInitModel.isSource;\n    docDef.showFields = docInitModel.showFields;\n    docDef.inspectionType = docInitModel.inspectionType;\n    docDef.inspectionSource = docInitModel.inspectionSource;\n    docDef.inspectionResult = docInitModel.inspectionResult;\n    docDef.selectedRoot = docInitModel.selectedRoot;\n\n    if (docDef.type === DocumentType.XSD) {\n      docDef.uri = 'atlas:' + 'xml' + ':' + docDef.id;\n    } else if (docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri = 'atlas:' + 'java' + ':' + docDef.id;\n    } else {\n      docDef.uri = 'atlas:' + docDef.type.toLowerCase() + ':' + docDef.id;\n    }\n\n    if (docDef.type === DocumentType.JAVA || docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri += '?className=' + docDef.inspectionSource;\n      if (docInitModel.collectionType && docInitModel.collectionType !== CollectionType.NONE) {\n        docDef.uri += '&collectionType=' + docInitModel.collectionType;\n        if (docInitModel.collectionClassName) {\n          docDef.uri += '&collectionClassName=' + docInitModel.collectionClassName;\n        }\n      }\n    }\n\n    if (docInitModel.isSource) {\n      this.sourceDocs.push(docDef);\n    } else {\n      this.targetDocs.push(docDef);\n    }\n    return docDef;\n  }\n\n  addDocuments(docModels: DocumentInitializationModel[]): DocumentDefinition[] {\n    const docDefs: DocumentDefinition[] = [];\n    for (const docModel of docModels) {\n      docDefs.push(this.addDocument(docModel));\n    }\n    return docDefs;\n  }\n\n  getDocsWithoutPropertyDoc(isSource: boolean): DocumentDefinition[] {\n    return [].concat(isSource ? this.sourceDocs : this.targetDocs);\n  }\n\n  getDocs(isSource: boolean): DocumentDefinition[] {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    return isSource ? [this.propertyDoc, this.constantDoc].concat(docs) : docs;\n  }\n\n  /**\n   * Clear source/target/mapping documents from the model.  Reset constant and property document definitions.\n   */\n  clearDocs(): void {\n    this.sourceDocs = [];\n    this.targetDocs = [];\n    this.propertyDoc.clearFields();\n    this.constantDoc.clearFields();\n    this.mappingFiles = [];\n  }\n\n  hasJavaDocuments(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isClassPathResolutionNeeded(): boolean {\n    if (this.initCfg.classPath) {\n      return false;\n    }\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA && doc.inspectionResult == null) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getDocForIdentifier(documentId: string, isSource: boolean): DocumentDefinition {\n    for (const d of this.getDocs(isSource)) {\n      if (d.id === documentId) {\n        return d;\n      }\n    }\n    return null;\n  }\n\n  getFirstXmlDoc(isSource: boolean) {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    for (const doc of docs) {\n      if (doc.type === DocumentType.XML) {\n        return doc;\n      }\n    }\n    return null;\n  }\n\n  getAllDocs(): DocumentDefinition[] {\n    return [this.propertyDoc, this.constantDoc].concat(this.sourceDocs).concat(this.targetDocs);\n  }\n\n  documentsAreLoaded(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (!doc.initialized) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Validate the specified field value, generating a validation error if not defined.\n   * @param value - field to validate\n   * @param fieldDescription - used in error diagnostic\n   */\n  isRequiredFieldValid(value: string, fieldDescription: string): boolean {\n\n    if (value == null || '' === value) {\n      const errorMessage: string = fieldDescription + ' is required.';\n      this.errorService.validationError(errorMessage, null);\n      return false;\n    }\n    return true;\n  }\n\n}\n\n/**\n * Place all custom events here.\n */\nexport class AdmRedrawMappingLinesEvent {\n  _lmcInstance: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiHttpXsrfTokenExtractor.html":{"url":"injectables/ApiHttpXsrfTokenExtractor.html","title":"injectable - ApiHttpXsrfTokenExtractor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiHttpXsrfTokenExtractor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts\n        \n\n            \n                Description\n            \n            \n                Override the stock @angular HTTP package token extractor to not fetch cookies from\nthe Window document.  Return a default token value instead.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cfg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpXsrfTokenExtractor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ConfigModel } from '../models/config.model';\n\n/**\n * Override the stock @angular HTTP package token extractor to *not* fetch cookies from\n * the Window document.  Return a default token value instead.\n */\n@Injectable()\nexport class ApiHttpXsrfTokenExtractor implements HttpXsrfTokenExtractor {\n  private cfg = ConfigModel.getConfig();\n  getToken(): string {\n    return this.cfg.initCfg.xsrfDefaultTokenValue;\n  }\n}\n\n/**\n * Override the stock @angular HTTP package request interceptor method to wrap the request\n * with default XSRF header name and token value.\n */\n@Injectable()\nexport class ApiXsrfInterceptor implements HttpInterceptor {\n\n  private cfg = ConfigModel.getConfig();\n  intercept(httpRequest: HttpRequest, next: HttpHandler): Observable> {\n    /*\n      ADM doesn't need/use cookies so we'll use the default token value initialized from the environment when\n      adding the XSRF header to HTTP requests.  This will avoid the need to read cookies from local storage.\n    */\n    if (this.cfg.initCfg.xsrfHeaderName) {\n      // const token = this.tokenExtractor.getToken() || this.cfg.initCfg.xsrfDefaultTokenValue;\n      const token = this.cfg.initCfg.xsrfDefaultTokenValue;\n      const headerName = this.cfg.initCfg.xsrfHeaderName;\n\n      if (!httpRequest.headers.has(headerName)) {\n        httpRequest = httpRequest.clone({ headers: httpRequest.headers.set(headerName, token) });\n      }\n    }\n    return next.handle(httpRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ApiXsrfInterceptor.html":{"url":"interceptors/ApiXsrfInterceptor.html","title":"interceptor - ApiXsrfInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ApiXsrfInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts\n        \n\n            \n                Description\n            \n            \n                Override the stock @angular HTTP package request interceptor method to wrap the request\nwith default XSRF header name and token value.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cfg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(httpRequest: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    httpRequest\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts:32\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpXsrfTokenExtractor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ConfigModel } from '../models/config.model';\n\n/**\n * Override the stock @angular HTTP package token extractor to *not* fetch cookies from\n * the Window document.  Return a default token value instead.\n */\n@Injectable()\nexport class ApiHttpXsrfTokenExtractor implements HttpXsrfTokenExtractor {\n  private cfg = ConfigModel.getConfig();\n  getToken(): string {\n    return this.cfg.initCfg.xsrfDefaultTokenValue;\n  }\n}\n\n/**\n * Override the stock @angular HTTP package request interceptor method to wrap the request\n * with default XSRF header name and token value.\n */\n@Injectable()\nexport class ApiXsrfInterceptor implements HttpInterceptor {\n\n  private cfg = ConfigModel.getConfig();\n  intercept(httpRequest: HttpRequest, next: HttpHandler): Observable> {\n    /*\n      ADM doesn't need/use cookies so we'll use the default token value initialized from the environment when\n      adding the XSRF header to HTTP requests.  This will avoid the need to read cookies from local storage.\n    */\n    if (this.cfg.initCfg.xsrfHeaderName) {\n      // const token = this.tokenExtractor.getToken() || this.cfg.initCfg.xsrfDefaultTokenValue;\n      const token = this.cfg.initCfg.xsrfDefaultTokenValue;\n      const headerName = this.cfg.initCfg.xsrfHeaderName;\n\n      if (!httpRequest.headers.has(headerName)) {\n        httpRequest = httpRequest.clone({ headers: httpRequest.headers.set(headerName, token) });\n      }\n    }\n    return next.handle(httpRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atlasmap-dev-root\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'atlasmap-dev-root',\n  template: '',\n})\n\nexport class AppComponent { }\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClassNameComponent.html":{"url":"components/ClassNameComponent.html","title":"component - ClassNameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ClassNameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/class-name.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                class-name\n            \n\n\n\n\n            \n                templateUrl\n                ./class-name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                docDef\n                            \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                isSource\n                            \n                            \n                                userClassName\n                            \n                            \n                                userCollectionClassName\n                            \n                            \n                                userCollectionType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                collectionTypeSelectionChanged\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                parentSelectionChanged\n                            \n                            \n                                valueExistsOnCreation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:37\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            collectionTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncollectionTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(field: Field, docDef: DocumentDefinition, isAdd: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docDef\n                                    \n                                                DocumentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isAdd\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parentSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nparentSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueExistsOnCreation\n                        \n                        \n                    \n                \n            \n            \n                \nvalueExistsOnCreation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('class')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userClassName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userCollectionClassName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userCollectionType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CollectionType.NONE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/class-name.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { DocumentDefinition } from '../models/document-definition.model';\nimport { Field } from '../models/field.model';\nimport { ConfigModel } from '../models/config.model';\nimport { ModalWindowValidator } from './modal-window.component';\nimport { CollectionType } from '../common/config.types';\n\n@Component({\n  selector: 'class-name',\n  templateUrl: './class-name.component.html',\n})\n\nexport class ClassNameComponent implements ModalWindowValidator {\n  cfg: ConfigModel = ConfigModel.getConfig();\n  isSource: boolean;\n  userClassName: string = null;\n  userCollectionType = CollectionType.NONE;\n  userCollectionClassName = null;\n  docDef: DocumentDefinition = null;\n  @ViewChild('class') private focusEl: ElementRef;\n\n  constructor() {\n  }\n\n  initialize(field: Field, docDef: DocumentDefinition, isAdd: boolean): void {\n    this.docDef = docDef;\n    this.userClassName = '';\n  }\n\n  parentSelectionChanged(event: any): void {\n  }\n\n  isDataValid(): boolean {\n    return ConfigModel.getConfig().isRequiredFieldValid(this.userClassName, 'Class name');\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n  valueExistsOnCreation(): boolean {\n    return false;\n  }\n\n  collectionTypeSelectionChanged(event: any) {\n      this.userCollectionType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n}\n\n    \n\n    \n        \n\n  \n    Class package name:\n      \n    \n    Collection Type:\n      \n        NONE\n        ARRAY\n        LIST\n        Map -->\n      \n    \n    Collection class name:\n      \n    \n    \n      Class name has already been established.\n          \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Class package name:              Collection Type:              NONE        ARRAY        LIST        Map -->              Collection class name:                    Class name has already been established.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ClassNameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CollapsableHeaderComponent.html":{"url":"components/CollapsableHeaderComponent.html","title":"component - CollapsableHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CollapsableHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/collapsable-header.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                collapsable-header\n            \n\n\n\n\n            \n                templateUrl\n                ./collapsable-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCSSClass\n                            \n                            \n                                handleMouseClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                collapsed\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        collapsed\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/collapsable-header.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/collapsable-header.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/collapsable-header.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseClick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/collapsable-header.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'collapsable-header',\n  templateUrl: './collapsable-header.component.html',\n})\n\nexport class CollapsableHeaderComponent {\n  @Input() title: string;\n  @Input() collapsed = false;\n\n  handleMouseClick(event: MouseEvent): void {\n    this.collapsed = !this.collapsed;\n  }\n\n  getCSSClass() {\n    return 'arrow fa fa-angle-' + (this.collapsed ? 'right' : 'down');\n  }\n}\n\n    \n\n    \n        \n  \n    {{ title }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ title }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'CollapsableHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConstantFieldEditComponent.html":{"url":"components/ConstantFieldEditComponent.html","title":"component - ConstantFieldEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConstantFieldEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                constant-field-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./constant-field-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                docDef\n                            \n                            \n                                field\n                            \n                            \n                                fieldMode\n                            \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                isClosing\n                            \n                            \n                                modalWindowComponent\n                            \n                            \n                                valueType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getField\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                valueExistsOnCreation\n                            \n                            \n                                valueTypeSelectionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getField\n                        \n                        \n                    \n                \n            \n            \n                \ngetField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Field\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(field: Field, docDef: DocumentDefinition, mwc: ModalWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docDef\n                                    \n                                                DocumentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mwc\n                                    \n                                                ModalWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueExistsOnCreation\n                        \n                        \n                    \n                \n            \n            \n                \nvalueExistsOnCreation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:78\n                \n            \n\n\n            \n                \n                    Return true and disable the save button if the constant field already exists on creation, return false\nand enable the save button otherwise.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nvalueTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                    \n                        \n                            Default value : new Field()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('value')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isClosing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalWindowComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { DocumentType, FieldMode } from '../common/config.types';\n\nimport { ConfigModel } from '../models/config.model';\nimport { DocumentDefinition } from '../models/document-definition.model';\nimport { Field } from '../models/field.model';\nimport { ModalWindowComponent, ModalWindowValidator } from './modal-window.component';\n\n@Component({\n  selector: 'constant-field-edit',\n  templateUrl: './constant-field-edit.component.html',\n})\n\nexport class ConstantFieldEditComponent implements ModalWindowValidator {\n  field: Field = new Field();\n  fieldMode: FieldMode;\n  valueType: any = 'STRING';\n  docDef: DocumentDefinition;\n  modalWindowComponent: ModalWindowComponent;\n  isClosing: boolean;\n  @ViewChild('value') private focusEl: ElementRef;\n\n  initialize(field: Field, docDef: DocumentDefinition, mwc: ModalWindowComponent): void {\n    if (field != null) {\n      this.valueType = field.type;\n      this.fieldMode = FieldMode.EDIT;\n    } else { this.fieldMode = FieldMode.CREATE; }\n\n    this.field = field == null ? new Field() : field.copy();\n    this.docDef = docDef;\n    this.modalWindowComponent = mwc;\n    this.isClosing = false;\n  }\n\n  valueTypeSelectionChanged(event: any): void {\n    this.valueType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  getField(): Field {\n    this.field.displayName = this.field.value;\n    this.field.name = this.field.value;\n    this.field.path = this.field.value;\n    this.field.type = this.valueType;\n    this.field.userCreated = true;\n    this.field.docDef = this.docDef;\n    return this.field;\n  }\n\n  isDataValid(): boolean {\n    return ConfigModel.getConfig().isRequiredFieldValid(this.field.value, 'Value');\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n  /**\n   * Return true and disable the save button if the constant field already exists on creation, return false\n   * and enable the save button otherwise.\n   */\n  valueExistsOnCreation(): boolean {\n    if (this.isClosing) {\n      return false;\n    }\n    if (this.fieldMode === FieldMode.CREATE && this.docDef != null &&\n        this.docDef.fieldExists(this.getField(), DocumentType.CONSTANT)) {\n      this.modalWindowComponent.confirmButtonDisabled = true;\n      return true;\n    }\n    this.modalWindowComponent.confirmButtonDisabled = false;\n    return false;\n  }\n}\n\n    \n\n    \n        \n  \n    Value:\n    \n    \n      Constant value already exists.\n    \n  \n  \n    Value Type:\n    \n      Boolean\n      Big Integer\n      Byte\n      ByteArray\n      Char\n      Complex\n      Decimal\n      Double\n      Float\n      Integer\n      Long\n      Short\n      String\n      Time\n      Date\n      DateTime\n      DateTZ\n      TimeTZ\n      DateTimeTZ\n      Unsigned Byte\n      Unsigned Integer\n      Unsigned Long\n      Unsigned Short\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Value:              Constant value already exists.            Value Type:          Boolean      Big Integer      Byte      ByteArray      Char      Complex      Decimal      Double      Float      Integer      Long      Short      String      Time      Date      DateTime      DateTZ      TimeTZ      DateTimeTZ      Unsigned Byte      Unsigned Integer      Unsigned Long      Unsigned Short      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConstantFieldEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataMapperAppExampleHostComponent.html":{"url":"components/DataMapperAppExampleHostComponent.html","title":"component - DataMapperAppExampleHostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataMapperAppExampleHostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                MappingManagementService\n                                ErrorHandlerService\n                                DocumentManagementService\n                \n            \n\n\n            \n                selector\n                data-mapper-example-host\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataMapperComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(initializationService: InitializationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initializationService\n                                                  \n                                                        \n                                                                        InitializationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataMapperComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataMapperAppComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dataMapperComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, OnInit, OnDestroy } from '@angular/core';\nimport { ConfigModel } from '../models/config.model';\n\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { DocumentManagementService } from '../services/document-management.service';\nimport { MappingManagementService } from '../services/mapping-management.service';\nimport { InitializationService } from '../services/initialization.service';\n\nimport { DataMapperAppComponent } from './data-mapper-app.component';\nimport { environment } from '../../../../environments/environment';\nimport { Examples } from '../models/examples';\n\n@Component({\n  selector: 'data-mapper-example-host',\n  template: '',\n  providers: [MappingManagementService, ErrorHandlerService, DocumentManagementService],\n})\n\nexport class DataMapperAppExampleHostComponent implements OnInit {\n\n  @ViewChild('dataMapperComponent')\n  dataMapperComponent: DataMapperAppComponent;\n\n  constructor(private initializationService: InitializationService) { }\n\n  ngOnInit() {\n    // initialize config information before initializing services\n    const c: ConfigModel = this.initializationService.cfg;\n\n    // store references to our services in our config model\n\n    // initialize base urls for our service calls\n    c.initCfg.baseJavaInspectionServiceUrl = environment.backendUrls.javaInspectionServiceUrl;\n    c.initCfg.baseXMLInspectionServiceUrl = environment.backendUrls.xmlInspectionServiceUrl;\n    c.initCfg.baseJSONInspectionServiceUrl = environment.backendUrls.jsonInspectionServiceUrl;\n    c.initCfg.baseMappingServiceUrl = environment.backendUrls.atlasServiceUrl;\n\n    if (environment.xsrf) {\n      c.initCfg.xsrfHeaderName = environment.xsrf.headerName;\n      c.initCfg.xsrfCookieName = environment.xsrf.cookieName;\n      c.initCfg.xsrfDefaultTokenValue = environment.xsrf.defaultTokenValue;\n    }\n\n    // initialize data for our class path service call\n    // note that quotes, newlines, and tabs are escaped\n    c.initCfg.pomPayload = Examples.pom;\n    c.initCfg.classPathFetchTimeoutInMilliseconds = 30000;\n    // if classPath is specified, maven call to resolve pom will be skipped\n    c.initCfg.classPath = null;\n\n    // enable mapping preview mode for standalone\n    c.initCfg.disableMappingPreviewMode = false;\n\n    // enable the navigation bar and import/export for stand-alone\n    c.initCfg.disableNavbar = false;\n\n    // initialize system\n    this.initializationService.initialize();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DataMapperAppExampleHostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataMapperErrorComponent.html":{"url":"components/DataMapperErrorComponent.html","title":"component - DataMapperErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataMapperErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                data-mapper-error\n            \n\n\n\n\n            \n                templateUrl\n                ./data-mapper-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                    Private\n                                elem\n                            \n                            \n                                isOpen\n                            \n                            \n                                    Private\n                                mouseEventTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                errorServiceRequired\n                            \n                            \n                                getConfig\n                            \n                            \n                                getErrors\n                            \n                            \n                                getFirstError\n                            \n                            \n                                getFirstWarning\n                            \n                            \n                                getInfos\n                            \n                            \n                                getWarnings\n                            \n                            \n                                handleAlertClose\n                            \n                            \n                                handleClick\n                            \n                            \n                                handleMouseEnter\n                            \n                            \n                                handleMouseLeave\n                            \n                            \n                                    Private\n                                showActiveErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorService\n                            \n                            \n                                isValidation\n                            \n                            \n                                modalErrorWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorService\n                    \n                \n                \n                    \n                        Type :         ErrorHandlerService\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isValidation\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalErrorWindow\n                    \n                \n                \n                    \n                        Type :         ModalErrorWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            errorServiceRequired\n                        \n                        \n                    \n                \n            \n            \n                \nerrorServiceRequired()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:43\n                \n            \n\n\n            \n                \n                    Return true if an error window is necessary, false otherwise.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ConfigModel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFirstError\n                        \n                        \n                    \n                \n            \n            \n                \ngetFirstError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:120\n                \n            \n\n\n            \n                \n                    The fixed error window only needs to show one error.  The full collection of errors is\navailable from the error modal window.\n\n\n                    \n                        Returns :         ErrorInfo\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFirstWarning\n                        \n                        \n                    \n                \n            \n            \n                \ngetFirstWarning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:128\n                \n            \n\n\n            \n                \n                    The fixed error window only needs to show one warning.  The full collection of warnings is\navailable from the error modal window.\n\n\n                    \n                        Returns :         ErrorInfo\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInfos\n                        \n                        \n                    \n                \n            \n            \n                \ngetInfos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWarnings\n                        \n                        \n                    \n                \n            \n            \n                \ngetWarnings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleAlertClose\n                        \n                        \n                    \n                \n            \n            \n                \nhandleAlertClose(e: ErrorInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                ErrorInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleClick(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseEnter\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseEnter(evt1: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:82\n                \n            \n\n\n            \n                \n                    Handle the event of a user mousing over the error window.  If they stay within the window\nfor a half-second then the active errors modal will show all of the errors/ warnings.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt1\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseLeave\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseLeave(evt1: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:97\n                \n            \n\n\n            \n                \n                    Handle the event of a user mousing out of the error window.  Disarm the event timer if that case.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt1\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            showActiveErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showActiveErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:107\n                \n            \n\n\n            \n                \n                    Show all errors/ warnings in a separate modal window.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            elem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mouseEventTimer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild } from '@angular/core';\n\nimport { ModalErrorWindowComponent } from './modal-error-window.component';\n\nimport { ErrorInfo, ErrorLevel } from '../models/error.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { ConfigModel } from '../models/config.model';\n\n@Component({\n  selector: 'data-mapper-error',\n  templateUrl: './data-mapper-error.component.html',\n})\n\nexport class DataMapperErrorComponent {\n  @Input() errorService: ErrorHandlerService;\n  @Input() isValidation = false;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  private elem = null;\n  private mouseEventTimer = null;\n  isOpen = true;\n  cfg: ConfigModel = null;\n\n  /**\n   * Return true if an error window is necessary, false otherwise.\n   */\n  errorServiceRequired(): boolean {\n    const cfg = ConfigModel.getConfig();\n    return (this.errorService && (cfg.validationErrors.length > 0 || cfg.errors.length > 0));\n  }\n\n  getErrors(): ErrorInfo[] {\n    return this.isValidation ? ConfigModel.getConfig().validationErrors.filter(e => e.level >= ErrorLevel.ERROR)\n      : ConfigModel.getConfig().errors.filter(e => e.level >= ErrorLevel.ERROR);\n  }\n\n  getWarnings(): ErrorInfo[] {\n    return this.isValidation ? ConfigModel.getConfig().validationErrors.filter(e => e.level === ErrorLevel.WARN)\n      : ConfigModel.getConfig().errors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  getInfos(): ErrorInfo[] {\n    return this.isValidation ? ConfigModel.getConfig().validationErrors.filter(e => e.level === ErrorLevel.INFO)\n      : ConfigModel.getConfig().errors.filter(e => e.level === ErrorLevel.INFO);\n  }\n\n  handleClick(event: any) {\n    const errorIdentifier = event.target.attributes.getNamedItem('errorIdentifier');\n    if (errorIdentifier && errorIdentifier.value) {\n      ConfigModel.getConfig().mappings.activeMapping.removeValidationError(errorIdentifier.value);\n      this.errorService.removeError(errorIdentifier.value);\n    }\n  }\n\n  handleAlertClose(e: ErrorInfo): void {\n    this.isOpen = true;\n    this.errorService.removeError(e.identifier);\n  }\n\n  /**\n   * Handle the event of a user mousing over the error window.  If they stay within the window\n   * for a half-second then the active errors modal will show all of the errors/ warnings.\n   *\n   * @param evt1\n   */\n  handleMouseEnter(evt1: MouseEvent): void {\n    this.mouseEventTimer =  setTimeout(() => {\n        if (this.elem != null) {\n            evt1.stopPropagation();\n            evt1.preventDefault();\n          }\n      this.showActiveErrors();\n    }, 500);\n  }\n\n  /**\n   * Handle the event of a user mousing out of the error window.  Disarm the event timer if that case.\n   *\n   * @param evt1\n   */\n  handleMouseLeave(evt1: MouseEvent): void {\n    if (this.mouseEventTimer) {\n      clearTimeout(this.mouseEventTimer);\n    }\n    this.mouseEventTimer = null;\n  }\n\n  /**\n   * Show all errors/ warnings in a separate modal window.\n   */\n  private showActiveErrors(): void {\n    this.modalErrorWindow.reset();\n    this.modalErrorWindow.show();\n  }\n\n  getConfig(): ConfigModel {\n    return ConfigModel.getConfig();\n  }\n\n  /**\n   * The fixed error window only needs to show one error.  The full collection of errors is\n   * available from the error modal window.\n   */\n  getFirstError(): ErrorInfo {\n    return this.getErrors()[0];\n  }\n\n  /**\n   * The fixed error window only needs to show one warning.  The full collection of warnings is\n   * available from the error modal window.\n   */\n  getFirstWarning(): ErrorInfo {\n    return this.getWarnings()[0];\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    {{ i.message }}\n  \n\n  \n    \n    {{ getFirstWarning().message }}\n  \n\n  \n    \n    {{ getFirstError().message }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ i.message }}            {{ getFirstWarning().message }}            {{ getFirstError().message }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DataMapperErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataMapperInitializationModel.html":{"url":"classes/DataMapperInitializationModel.html","title":"class - DataMapperInitializationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataMapperInitializationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/config.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                admHttpTimeout\n                            \n                            \n                                baseJavaInspectionServiceUrl\n                            \n                            \n                                baseJSONInspectionServiceUrl\n                            \n                            \n                                baseMappingServiceUrl\n                            \n                            \n                                baseXMLInspectionServiceUrl\n                            \n                            \n                                classNameBlacklist\n                            \n                            \n                                classPath\n                            \n                            \n                                classPathFetchTimeoutInMilliseconds\n                            \n                            \n                                dataMapperVersion\n                            \n                            \n                                disableMappingPreviewMode\n                            \n                            \n                                disableNavbar\n                            \n                            \n                                disablePrivateOnlyFields\n                            \n                            \n                                disableProtectedOnlyFields\n                            \n                            \n                                disablePublicGetterSetterFields\n                            \n                            \n                                disablePublicOnlyFields\n                            \n                            \n                                fieldNameBlacklist\n                            \n                            \n                                initializationErrorOccurred\n                            \n                            \n                                initialized\n                            \n                            \n                                loadingStatus\n                            \n                            \n                                mappingInitialized\n                            \n                            \n                                pomPayload\n                            \n                            \n                                xsrfCookieName\n                            \n                            \n                                xsrfDefaultTokenValue\n                            \n                            \n                                xsrfHeaderName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:68\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admHttpTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseJavaInspectionServiceUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseJSONInspectionServiceUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseMappingServiceUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseXMLInspectionServiceUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            classNameBlacklist\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            classPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            classPathFetchTimeoutInMilliseconds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataMapperVersion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0.9.2017.07.28'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableMappingPreviewMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableNavbar\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disablePrivateOnlyFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableProtectedOnlyFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disablePublicGetterSetterFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disablePublicOnlyFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldNameBlacklist\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initializationErrorOccurred\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Loading.'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappingInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pomPayload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xsrfCookieName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xsrfDefaultTokenValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xsrfHeaderName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NGXLogger, NgxLoggerLevel } from 'ngx-logger';\nimport { environment } from '../../../../environments/environment';\nimport { MappingDefinition } from './mapping-definition.model';\nimport { DocumentDefinition } from './document-definition.model';\n\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { DocumentManagementService } from '../services/document-management.service';\nimport { MappingManagementService } from '../services/mapping-management.service';\nimport { InitializationService } from '../services/initialization.service';\nimport { ErrorInfo } from '../models/error.model';\n\nimport { DocumentType, InspectionType, CollectionType } from '../common/config.types';\nimport { FieldActionService } from '../services/field-action.service';\nimport { FileManagementService } from '../services/file-management.service';\n\nexport class DataMapperInitializationModel {\n  dataMapperVersion = '0.9.2017.07.28';\n  initialized = false;\n  loadingStatus = 'Loading.';\n  admHttpTimeout = 30000;  // 30 seconds\n  initializationErrorOccurred = false;\n\n  baseJavaInspectionServiceUrl: string;\n  baseXMLInspectionServiceUrl: string;\n  baseJSONInspectionServiceUrl: string;\n  baseMappingServiceUrl: string;\n\n  xsrfHeaderName: string;\n  xsrfCookieName: string;\n  xsrfDefaultTokenValue: string;\n\n  /* class path fetching configuration */\n  classPathFetchTimeoutInMilliseconds = 30000;\n  // if classPath is specified, maven call to resolve pom will be skipped\n  pomPayload: string;\n\n  classPath: string;\n\n  /* inspection service filtering flags */\n  fieldNameBlacklist: string[] = [];\n  classNameBlacklist: string[] = [];\n  disablePrivateOnlyFields = false;\n  disableProtectedOnlyFields = false;\n  disablePublicOnlyFields = false;\n  disablePublicGetterSetterFields = false;\n\n  disableMappingPreviewMode = false;\n\n  /* enable the navigation bar and import/export */\n  disableNavbar = true;\n\n  mappingInitialized = false;\n\n  constructor() {\n    if (environment.xsrf) {\n      this.xsrfHeaderName = environment.xsrf.headerName;\n      this.xsrfCookieName = environment.xsrf.cookieName;\n      this.xsrfDefaultTokenValue = environment.xsrf.defaultTokenValue;\n    }\n  }\n\n}\n\nexport class DocumentInitializationModel {\n  id: string;\n  type: DocumentType;\n  name: string;\n  description: string;\n  isSource: boolean;\n  showFields = true;\n  inspectionType: InspectionType;\n  inspectionSource: string;\n  inspectionResult: string;\n  selectedRoot: string;\n  collectionType: CollectionType;\n  collectionClassName: string;\n}\n\nexport class ConfigModel {\n  static mappingServicesPackagePrefix = 'io.atlasmap.v2';\n  static javaServicesPackagePrefix = 'io.atlasmap.java.v2';\n  static jsonServicesPackagePrefix = 'io.atlasmap.json.v2';\n  static xmlServicesPackagePrefix = 'io.atlasmap.xml.v2';\n  private static cfg: ConfigModel = new ConfigModel();\n\n  initCfg: DataMapperInitializationModel = new DataMapperInitializationModel;\n\n  /* current ui state config */\n  showMappingDetailTray = false;\n  showMappingTable = false;\n  showNamespaceTable = false;\n  showLinesAlways = true;\n  showTypes = false;\n  showMappedFields = true;\n  showUnmappedFields = true;\n  _showMappingPreview = false;\n  currentDraggedField: any = null;\n\n  documentService: DocumentManagementService;\n  mappingService: MappingManagementService;\n  errorService: ErrorHandlerService;\n  initializationService: InitializationService;\n  fieldActionService: FieldActionService;\n  fileService: FileManagementService;\n\n  sourceDocs: DocumentDefinition[] = [];\n  targetDocs: DocumentDefinition[] = [];\n  propertyDoc: DocumentDefinition = new DocumentDefinition();\n  constantDoc: DocumentDefinition = new DocumentDefinition();\n  mappingFiles: string[] = [];\n\n  mappings: MappingDefinition = null;\n\n  preloadedFieldActionMetadata: any;\n\n  errors: ErrorInfo[] = [];\n  validationErrors: ErrorInfo[] = [];\n\n  logger: NGXLogger;\n\n  constructor() {\n    this.propertyDoc.type = DocumentType.PROPERTY;\n    this.propertyDoc.name = 'Properties';\n    this.propertyDoc.isSource = true;\n    this.propertyDoc.showFields = false;\n    this.constantDoc.type = DocumentType.CONSTANT;\n    this.constantDoc.name = 'Constants';\n    this.constantDoc.isSource = true;\n    this.constantDoc.showFields = false;\n  }\n\n  static getConfig(): ConfigModel {\n    return ConfigModel.cfg;\n  }\n\n  static setConfig(cfg: ConfigModel): void {\n    ConfigModel.cfg = cfg;\n  }\n\n  set showMappingPreview(show: boolean) {\n    if (show && !this._showMappingPreview) {\n      this.mappingService.enableMappingPreview();\n    } else if (!show && this._showMappingPreview) {\n      this.mappingService.disableMappingPreview();\n    }\n    this._showMappingPreview = show;\n  }\n\n  get showMappingPreview(): boolean {\n    return this._showMappingPreview;\n  }\n\n  isDebugEnabled(): boolean {\n    return [NgxLoggerLevel.DEBUG, NgxLoggerLevel.TRACE].includes(this.logger.getConfigSnapshot().level);\n  }\n\n  isTraceEnabled(): boolean {\n    return this.logger.getConfigSnapshot().level === NgxLoggerLevel.TRACE;\n  }\n\n  addDocument(docInitModel: DocumentInitializationModel): DocumentDefinition {\n    const docDef: DocumentDefinition = new DocumentDefinition();\n    docDef.initModel = docInitModel;\n    docDef.id = docInitModel.id;\n    docDef.type = docInitModel.type;\n    docDef.name = docInitModel.name;\n    docDef.description = docInitModel.description;\n    docDef.isSource = docInitModel.isSource;\n    docDef.showFields = docInitModel.showFields;\n    docDef.inspectionType = docInitModel.inspectionType;\n    docDef.inspectionSource = docInitModel.inspectionSource;\n    docDef.inspectionResult = docInitModel.inspectionResult;\n    docDef.selectedRoot = docInitModel.selectedRoot;\n\n    if (docDef.type === DocumentType.XSD) {\n      docDef.uri = 'atlas:' + 'xml' + ':' + docDef.id;\n    } else if (docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri = 'atlas:' + 'java' + ':' + docDef.id;\n    } else {\n      docDef.uri = 'atlas:' + docDef.type.toLowerCase() + ':' + docDef.id;\n    }\n\n    if (docDef.type === DocumentType.JAVA || docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri += '?className=' + docDef.inspectionSource;\n      if (docInitModel.collectionType && docInitModel.collectionType !== CollectionType.NONE) {\n        docDef.uri += '&collectionType=' + docInitModel.collectionType;\n        if (docInitModel.collectionClassName) {\n          docDef.uri += '&collectionClassName=' + docInitModel.collectionClassName;\n        }\n      }\n    }\n\n    if (docInitModel.isSource) {\n      this.sourceDocs.push(docDef);\n    } else {\n      this.targetDocs.push(docDef);\n    }\n    return docDef;\n  }\n\n  addDocuments(docModels: DocumentInitializationModel[]): DocumentDefinition[] {\n    const docDefs: DocumentDefinition[] = [];\n    for (const docModel of docModels) {\n      docDefs.push(this.addDocument(docModel));\n    }\n    return docDefs;\n  }\n\n  getDocsWithoutPropertyDoc(isSource: boolean): DocumentDefinition[] {\n    return [].concat(isSource ? this.sourceDocs : this.targetDocs);\n  }\n\n  getDocs(isSource: boolean): DocumentDefinition[] {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    return isSource ? [this.propertyDoc, this.constantDoc].concat(docs) : docs;\n  }\n\n  /**\n   * Clear source/target/mapping documents from the model.  Reset constant and property document definitions.\n   */\n  clearDocs(): void {\n    this.sourceDocs = [];\n    this.targetDocs = [];\n    this.propertyDoc.clearFields();\n    this.constantDoc.clearFields();\n    this.mappingFiles = [];\n  }\n\n  hasJavaDocuments(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isClassPathResolutionNeeded(): boolean {\n    if (this.initCfg.classPath) {\n      return false;\n    }\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA && doc.inspectionResult == null) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getDocForIdentifier(documentId: string, isSource: boolean): DocumentDefinition {\n    for (const d of this.getDocs(isSource)) {\n      if (d.id === documentId) {\n        return d;\n      }\n    }\n    return null;\n  }\n\n  getFirstXmlDoc(isSource: boolean) {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    for (const doc of docs) {\n      if (doc.type === DocumentType.XML) {\n        return doc;\n      }\n    }\n    return null;\n  }\n\n  getAllDocs(): DocumentDefinition[] {\n    return [this.propertyDoc, this.constantDoc].concat(this.sourceDocs).concat(this.targetDocs);\n  }\n\n  documentsAreLoaded(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (!doc.initialized) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Validate the specified field value, generating a validation error if not defined.\n   * @param value - field to validate\n   * @param fieldDescription - used in error diagnostic\n   */\n  isRequiredFieldValid(value: string, fieldDescription: string): boolean {\n\n    if (value == null || '' === value) {\n      const errorMessage: string = fieldDescription + ' is required.';\n      this.errorService.validationError(errorMessage, null);\n      return false;\n    }\n    return true;\n  }\n\n}\n\n/**\n * Place all custom events here.\n */\nexport class AdmRedrawMappingLinesEvent {\n  _lmcInstance: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataMapperModule.html":{"url":"modules/DataMapperModule.html","title":"module - DataMapperModule","body":"\n                   \n\n\n\n\n    Modules\n    DataMapperModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataMapperModule\n\n\n\ncluster_DataMapperModule_declarations\n\n\n\ncluster_DataMapperModule_exports\n\n\n\ncluster_DataMapperModule_providers\n\n\n\n\nClassNameComponent\n\nClassNameComponent\n\n\n\nDataMapperModule\n\nDataMapperModule\n\nDataMapperModule -->\n\nClassNameComponent->DataMapperModule\n\n\n\n\n\nCollapsableHeaderComponent\n\nCollapsableHeaderComponent\n\nDataMapperModule -->\n\nCollapsableHeaderComponent->DataMapperModule\n\n\n\n\n\nConstantFieldEditComponent\n\nConstantFieldEditComponent\n\nDataMapperModule -->\n\nConstantFieldEditComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppComponent\n\nDataMapperAppComponent\n\nDataMapperModule -->\n\nDataMapperAppComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppExampleHostComponent\n\nDataMapperAppExampleHostComponent\n\nDataMapperModule -->\n\nDataMapperAppExampleHostComponent->DataMapperModule\n\n\n\n\n\nDataMapperErrorComponent\n\nDataMapperErrorComponent\n\nDataMapperModule -->\n\nDataMapperErrorComponent->DataMapperModule\n\n\n\n\n\nDocumentDefinitionComponent\n\nDocumentDefinitionComponent\n\nDataMapperModule -->\n\nDocumentDefinitionComponent->DataMapperModule\n\n\n\n\n\nDocumentFieldDetailComponent\n\nDocumentFieldDetailComponent\n\nDataMapperModule -->\n\nDocumentFieldDetailComponent->DataMapperModule\n\n\n\n\n\nEmptyModalBodyComponent\n\nEmptyModalBodyComponent\n\nDataMapperModule -->\n\nEmptyModalBodyComponent->DataMapperModule\n\n\n\n\n\nExpressionComponent\n\nExpressionComponent\n\nDataMapperModule -->\n\nExpressionComponent->DataMapperModule\n\n\n\n\n\nFieldEditComponent\n\nFieldEditComponent\n\nDataMapperModule -->\n\nFieldEditComponent->DataMapperModule\n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nDataMapperModule -->\n\nFocusDirective->DataMapperModule\n\n\n\n\n\nLineMachineComponent\n\nLineMachineComponent\n\nDataMapperModule -->\n\nLineMachineComponent->DataMapperModule\n\n\n\n\n\nLookupTableComponent\n\nLookupTableComponent\n\nDataMapperModule -->\n\nLookupTableComponent->DataMapperModule\n\n\n\n\n\nMappingDetailComponent\n\nMappingDetailComponent\n\nDataMapperModule -->\n\nMappingDetailComponent->DataMapperModule\n\n\n\n\n\nMappingFieldActionArgumentComponent\n\nMappingFieldActionArgumentComponent\n\nDataMapperModule -->\n\nMappingFieldActionArgumentComponent->DataMapperModule\n\n\n\n\n\nMappingFieldActionComponent\n\nMappingFieldActionComponent\n\nDataMapperModule -->\n\nMappingFieldActionComponent->DataMapperModule\n\n\n\n\n\nMappingFieldContainerComponent\n\nMappingFieldContainerComponent\n\nDataMapperModule -->\n\nMappingFieldContainerComponent->DataMapperModule\n\n\n\n\n\nMappingFieldDetailComponent\n\nMappingFieldDetailComponent\n\nDataMapperModule -->\n\nMappingFieldDetailComponent->DataMapperModule\n\n\n\n\n\nMappingListComponent\n\nMappingListComponent\n\nDataMapperModule -->\n\nMappingListComponent->DataMapperModule\n\n\n\n\n\nMappingListFieldComponent\n\nMappingListFieldComponent\n\nDataMapperModule -->\n\nMappingListFieldComponent->DataMapperModule\n\n\n\n\n\nMappingSelectionComponent\n\nMappingSelectionComponent\n\nDataMapperModule -->\n\nMappingSelectionComponent->DataMapperModule\n\n\n\n\n\nMappingSelectionSectionComponent\n\nMappingSelectionSectionComponent\n\nDataMapperModule -->\n\nMappingSelectionSectionComponent->DataMapperModule\n\n\n\n\n\nModalErrorWindowComponent\n\nModalErrorWindowComponent\n\nDataMapperModule -->\n\nModalErrorWindowComponent->DataMapperModule\n\n\n\n\n\nModalWindowComponent\n\nModalWindowComponent\n\nDataMapperModule -->\n\nModalWindowComponent->DataMapperModule\n\n\n\n\n\nNamespaceEditComponent\n\nNamespaceEditComponent\n\nDataMapperModule -->\n\nNamespaceEditComponent->DataMapperModule\n\n\n\n\n\nNamespaceListComponent\n\nNamespaceListComponent\n\nDataMapperModule -->\n\nNamespaceListComponent->DataMapperModule\n\n\n\n\n\nPropertyFieldEditComponent\n\nPropertyFieldEditComponent\n\nDataMapperModule -->\n\nPropertyFieldEditComponent->DataMapperModule\n\n\n\n\n\nTemplateEditComponent\n\nTemplateEditComponent\n\nDataMapperModule -->\n\nTemplateEditComponent->DataMapperModule\n\n\n\n\n\nToErrorIconClassPipe\n\nToErrorIconClassPipe\n\nDataMapperModule -->\n\nToErrorIconClassPipe->DataMapperModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nDataMapperModule -->\n\nToolbarComponent->DataMapperModule\n\n\n\n\n\nTransitionSelectionComponent\n\nTransitionSelectionComponent\n\nDataMapperModule -->\n\nTransitionSelectionComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppComponent \n\nDataMapperAppComponent \n\nDataMapperAppComponent  -->\n\nDataMapperModule->DataMapperAppComponent \n\n\n\n\n\nDataMapperAppExampleHostComponent \n\nDataMapperAppExampleHostComponent \n\nDataMapperAppExampleHostComponent  -->\n\nDataMapperModule->DataMapperAppExampleHostComponent \n\n\n\nDataMapperAppExampleHostComponent  -->\n\nDataMapperModule->DataMapperAppExampleHostComponent \n\n\n\n\n\nModalErrorWindowComponent \n\nModalErrorWindowComponent \n\nModalErrorWindowComponent  -->\n\nDataMapperModule->ModalErrorWindowComponent \n\n\n\n\n\nModalWindowComponent \n\nModalWindowComponent \n\nModalWindowComponent  -->\n\nDataMapperModule->ModalWindowComponent \n\n\n\n\n\nDocumentManagementService\n\nDocumentManagementService\n\nDataMapperModule -->\n\nDocumentManagementService->DataMapperModule\n\n\n\n\n\nErrorHandlerService\n\nErrorHandlerService\n\nDataMapperModule -->\n\nErrorHandlerService->DataMapperModule\n\n\n\n\n\nFieldActionService\n\nFieldActionService\n\nDataMapperModule -->\n\nFieldActionService->DataMapperModule\n\n\n\n\n\nFileManagementService\n\nFileManagementService\n\nDataMapperModule -->\n\nFileManagementService->DataMapperModule\n\n\n\n\n\nInitializationService\n\nInitializationService\n\nDataMapperModule -->\n\nInitializationService->DataMapperModule\n\n\n\n\n\nMappingManagementService\n\nMappingManagementService\n\nDataMapperModule -->\n\nMappingManagementService->DataMapperModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ClassNameComponent\n                        \n                        \n                            CollapsableHeaderComponent\n                        \n                        \n                            ConstantFieldEditComponent\n                        \n                        \n                            DataMapperAppComponent\n                        \n                        \n                            DataMapperAppExampleHostComponent\n                        \n                        \n                            DataMapperErrorComponent\n                        \n                        \n                            DocumentDefinitionComponent\n                        \n                        \n                            DocumentFieldDetailComponent\n                        \n                        \n                            EmptyModalBodyComponent\n                        \n                        \n                            ExpressionComponent\n                        \n                        \n                            FieldEditComponent\n                        \n                        \n                            FocusDirective\n                        \n                        \n                            LineMachineComponent\n                        \n                        \n                            LookupTableComponent\n                        \n                        \n                            MappingDetailComponent\n                        \n                        \n                            MappingFieldActionArgumentComponent\n                        \n                        \n                            MappingFieldActionComponent\n                        \n                        \n                            MappingFieldContainerComponent\n                        \n                        \n                            MappingFieldDetailComponent\n                        \n                        \n                            MappingListComponent\n                        \n                        \n                            MappingListFieldComponent\n                        \n                        \n                            MappingSelectionComponent\n                        \n                        \n                            MappingSelectionSectionComponent\n                        \n                        \n                            ModalErrorWindowComponent\n                        \n                        \n                            ModalWindowComponent\n                        \n                        \n                            NamespaceEditComponent\n                        \n                        \n                            NamespaceListComponent\n                        \n                        \n                            PropertyFieldEditComponent\n                        \n                        \n                            TemplateEditComponent\n                        \n                        \n                            ToErrorIconClassPipe\n                        \n                        \n                            ToolbarComponent\n                        \n                        \n                            TransitionSelectionComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ClassNameComponent\n                        \n                        \n                            ConstantFieldEditComponent\n                        \n                        \n                            EmptyModalBodyComponent\n                        \n                        \n                            FieldEditComponent\n                        \n                        \n                            LookupTableComponent\n                        \n                        \n                            MappingSelectionComponent\n                        \n                        \n                            NamespaceEditComponent\n                        \n                        \n                            PropertyFieldEditComponent\n                        \n                        \n                            TemplateEditComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DocumentManagementService\n                        \n                        \n                            ErrorHandlerService\n                        \n                        \n                            FieldActionService\n                        \n                        \n                            FileManagementService\n                        \n                        \n                            InitializationService\n                        \n                        \n                            MappingManagementService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DataMapperAppComponent\n                        \n                        \n                            DataMapperAppExampleHostComponent\n                        \n                        \n                            ModalErrorWindowComponent\n                        \n                        \n                            ModalWindowComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            DataMapperAppExampleHostComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            withInterceptor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    withInterceptor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/data-mapper.module.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n    Copyright (C) 2017 Red Hat, Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\nimport { NgModule, ModuleWithProviders, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HttpClientXsrfModule, HttpXsrfTokenExtractor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AlertModule, BsDropdownModule, TooltipModule, TypeaheadModule } from 'ngx-bootstrap';\nimport { LoggerModule, NGXLogger } from 'ngx-logger';\nimport { environment } from '../../../environments/environment';\nimport { DocumentManagementService } from './services/document-management.service';\nimport { MappingManagementService } from './services/mapping-management.service';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { InitializationService } from './services/initialization.service';\n\nimport { DataMapperAppExampleHostComponent } from './components/data-mapper-example-host.component';\nimport { DataMapperAppComponent } from './components/data-mapper-app.component';\nimport { DataMapperErrorComponent } from './components/data-mapper-error.component';\nimport { ModalWindowComponent, EmptyModalBodyComponent } from './components/modal-window.component';\nimport { ModalErrorWindowComponent } from './components/modal-error-window.component';\nimport { ToolbarComponent } from './components/toolbar.component';\nimport { TemplateEditComponent } from './components/template-edit.component';\nimport { LineMachineComponent } from './components/line-machine.component';\nimport { ClassNameComponent } from './components/class-name.component';\nimport { CollapsableHeaderComponent } from './components/collapsable-header.component';\nimport { DocumentDefinitionComponent } from './components/document-definition.component';\nimport { DocumentFieldDetailComponent } from './components/document-field-detail.component';\nimport { PropertyFieldEditComponent } from './components/property-field-edit.component';\nimport { ConstantFieldEditComponent } from './components/constant-field-edit.component';\nimport { FieldEditComponent } from './components/field-edit.component';\nimport { NamespaceEditComponent } from './components/namespace-edit.component';\nimport { MappingListComponent } from './components/mapping/mapping-list.component';\nimport { MappingListFieldComponent } from './components/mapping/mapping-list-field.component';\nimport { NamespaceListComponent } from './components/namespace-list.component';\nimport { MappingDetailComponent } from './components/mapping/mapping-detail.component';\nimport { MappingFieldContainerComponent } from './components/mapping/mapping-field-container.component';\nimport { MappingFieldDetailComponent } from './components/mapping/mapping-field-detail.component';\nimport { MappingFieldActionComponent } from './components/mapping/mapping-field-action.component';\nimport { MappingFieldActionArgumentComponent } from './components/mapping/mapping-field-action-argument.component';\nimport { MappingSelectionComponent } from './components/mapping/mapping-selection.component';\nimport { MappingSelectionSectionComponent } from './components/mapping/mapping-selection-section.component';\nimport { LookupTableComponent } from './components/mapping/lookup-table.component';\nimport { TransitionSelectionComponent } from './components/mapping/transition-selection.component';\nimport { FocusDirective } from './common/focus.directive';\nimport { ExpressionComponent } from './components/expression.component';\n\n// export services/types for consumers of this module\nexport { ApiXsrfInterceptor, ApiHttpXsrfTokenExtractor } from './services/api-xsrf.service';\nexport { ErrorHandlerService } from './services/error-handler.service';\nexport { DocumentManagementService } from './services/document-management.service';\nexport { MappingManagementService } from './services/mapping-management.service';\nexport { InitializationService } from './services/initialization.service';\nexport { DocumentDefinition } from './models/document-definition.model';\nexport { MappingDefinition } from './models/mapping-definition.model';\nexport { DocumentType, InspectionType } from './common/config.types';\nexport { ConfigModel, DocumentInitializationModel } from './models/config.model';\nexport { MappingModel } from './models/mapping.model';\nexport { MappingSerializer } from './services/mapping-serializer.service';\n\nimport { ToErrorIconClassPipe } from './common/to-error-icon-class.pipe';\nimport { ApiXsrfInterceptor, ApiHttpXsrfTokenExtractor } from './services/api-xsrf.service';\nimport { FieldActionService } from './services/field-action.service';\nimport { FileManagementService } from './services/file-management.service';\n\nexport { DataMapperAppComponent } from './components/data-mapper-app.component';\n\nexport const typeaheadModuleForRoot: ModuleWithProviders = TypeaheadModule.forRoot();\nexport const tooltipModuleForRoot: ModuleWithProviders = TooltipModule.forRoot();\nexport const bsDropdownModuleForRoot: ModuleWithProviders = BsDropdownModule.forRoot();\nexport const httpClientXsrfModuleForRoot: ModuleWithProviders = HttpClientXsrfModule.withOptions(environment.xsrf);\nexport const alertModuleForRoot: ModuleWithProviders = AlertModule.forRoot();\nexport const loggerModuleForRoot: ModuleWithProviders = LoggerModule.forRoot(environment.ngxLoggerConfig);\n\n// @dynamic\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    typeaheadModuleForRoot,\n    tooltipModuleForRoot,\n    bsDropdownModuleForRoot,\n    httpClientXsrfModuleForRoot,\n    alertModuleForRoot,\n    loggerModuleForRoot,\n  ],\n  declarations: [\n    DataMapperAppComponent,\n    ClassNameComponent,\n    DocumentDefinitionComponent,\n    MappingDetailComponent,\n    MappingFieldContainerComponent,\n    ModalWindowComponent,\n    ModalErrorWindowComponent,\n    DataMapperAppExampleHostComponent,\n    MappingFieldActionComponent,\n    MappingFieldActionArgumentComponent,\n    MappingFieldDetailComponent,\n    DocumentFieldDetailComponent,\n    DataMapperErrorComponent,\n    TransitionSelectionComponent,\n    LineMachineComponent,\n    MappingSelectionComponent,\n    MappingSelectionSectionComponent,\n    ToolbarComponent,\n    LookupTableComponent,\n    EmptyModalBodyComponent,\n    FieldEditComponent,\n    NamespaceEditComponent,\n    PropertyFieldEditComponent,\n    ConstantFieldEditComponent,\n    CollapsableHeaderComponent,\n    MappingListComponent,\n    MappingListFieldComponent,\n    NamespaceListComponent,\n    TemplateEditComponent,\n    ExpressionComponent,\n    FocusDirective,\n    ToErrorIconClassPipe\n  ],\n  exports: [\n    DataMapperAppExampleHostComponent,\n    ModalWindowComponent,\n    ModalErrorWindowComponent,\n    DataMapperAppComponent,\n    AlertModule\n  ],\n  providers: [\n    DocumentManagementService,\n    MappingManagementService,\n    ErrorHandlerService,\n    InitializationService,\n    FieldActionService,\n    FileManagementService,\n    NGXLogger,\n  ],\n  entryComponents: [\n    MappingSelectionComponent,\n    LookupTableComponent,\n    EmptyModalBodyComponent,\n    FieldEditComponent,\n    NamespaceEditComponent,\n    PropertyFieldEditComponent,\n    ClassNameComponent,\n    ConstantFieldEditComponent,\n    TemplateEditComponent,\n  ],\n  bootstrap: [DataMapperAppExampleHostComponent],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\n\nexport class DataMapperModule {\n  static withInterceptor(): Array {\n    return [\n      { ngModule: DataMapperModule,\n        providers: [\n          DocumentManagementService,\n          MappingManagementService,\n          ErrorHandlerService,\n          FieldActionService,\n          FileManagementService,\n          InitializationService,\n          {\n            provide: HTTP_INTERCEPTORS,\n            useClass: ApiXsrfInterceptor,\n            multi: true\n          },\n        ],\n      },\n      { ngModule: DataMapperModule,\n        providers: [\n          DocumentManagementService,\n          MappingManagementService,\n          ErrorHandlerService,\n          FieldActionService,\n          FileManagementService,\n          InitializationService,\n          {\n            provide: HttpXsrfTokenExtractor,\n            useClass: ApiHttpXsrfTokenExtractor,\n            multi: false\n          },\n        ],\n      }\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataMapperUtil.html":{"url":"classes/DataMapperUtil.html","title":"class - DataMapperUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataMapperUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                HTTP_STATUS_NO_CONTENT\n                            \n                            \n                                    Static\n                                HTTP_STATUS_OK\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                extractDisplayPath\n                            \n                            \n                                    Static\n                                    Async\n                                readBinaryFile\n                            \n                            \n                                    Static\n                                    Async\n                                readFile\n                            \n                            \n                                    Static\n                                removeItemFromArray\n                            \n                            \n                                    Static\n                                splitByString\n                            \n                            \n                                    Static\n                                str2bytes\n                            \n                            \n                                    Static\n                                toDisplayable\n                            \n                            \n                                    Static\n                                    Async\n                                writeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            HTTP_STATUS_NO_CONTENT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 204\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            HTTP_STATUS_OK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            extractDisplayPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractDisplayPath(path: string, fieldWidth: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:152\n                \n            \n\n\n            \n                \n                    Return a string path that fits into the width provided.  Capture as much of the leaf\nas possible, then as much of the beginning with the remaining space.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fieldWidth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            readBinaryFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readBinaryFile(fileName: any, reader: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:101\n                \n            \n\n\n            \n                \n                    Perform an asynchronous binary read of the specified file name with the specified reader object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fileName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nfile to read\n\n\n                                    \n                                \n                                \n                                    reader\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nreader object\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            readFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(fileName: any, reader: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:85\n                \n            \n\n\n            \n                \n                    Asynchronously read from the specified file and return as a string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reader\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            removeItemFromArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItemFromArray(item: any, items: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    items\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            splitByString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    splitByString(inStr: string, splitMarker: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:46\n                \n            \n\n\n            \n                \n                    Split a source string by the specified substring into a string array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inStr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    splitMarker\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            str2bytes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    str2bytes(str: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:71\n                \n            \n\n\n            \n                \n                    Turn a string into a byte array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Uint8Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            toDisplayable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toDisplayable(camelCaseString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:130\n                \n            \n\n\n            \n                \n                    Convert a camel-case string into human-readable form.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camelCaseString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            writeFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeFile(fileContent: Blob, fName: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:118\n                \n            \n\n\n            \n                \n                    Asynchronously write the specified file content (Blob) to the specified file name.  It will appear\nin the user's local Downloads directory (or equivalent).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileContent\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { saveAs } from 'file-saver';\n\nexport class DataMapperUtil {\n\n  static HTTP_STATUS_OK = 200;\n  static HTTP_STATUS_NO_CONTENT = 204;\n\n  static removeItemFromArray(item: any, items: any[]): boolean {\n    if (item == null || items == null || items.length === 0) {\n      return false;\n    }\n    let i = 0;\n    let itemWasRemoved = false;\n    while (i  {\n    return new Promise((resolve, reject) => {\n      reader.onload = (event: any) => {\n        const fileBody = reader.result;\n        resolve(fileBody);\n      };\n      reader.readAsText(fileName);\n    });\n  }\n\n  /**\n   *  Perform an asynchronous binary read of the specified file name with the specified reader object.\n   *\n   * @param fileName - file to read\n   * @param reader - reader object\n   */\n  static async readBinaryFile(fileName: any, reader: any): Promise {\n    return new Promise((resolve, reject) => {\n      reader.onload = (event: any) => {\n        const fileBody = new Int8Array(reader.result);\n        resolve(fileBody);\n      };\n      reader.readAsArrayBuffer(fileName);\n    });\n  }\n\n  /**\n   * Asynchronously write the specified file content (Blob) to the specified file name.  It will appear\n   * in the user's local Downloads directory (or equivalent).\n   *\n   * @param fileContent\n   * @param fName\n   */\n  static async writeFile(fileContent: Blob, fName: any): Promise {\n    return new Promise((resolve, reject) => {\n      saveAs(fileContent, fName);\n      resolve(true);\n    });\n  }\n\n  /**\n   * Convert a camel-case string into human-readable form.\n   *\n   * @param camelCaseString\n   */\n  static toDisplayable(camelCaseString: string): string {\n    if (typeof camelCaseString === 'undefined' || !camelCaseString || camelCaseString.indexOf(' ') >= 0) {\n      return camelCaseString;\n    }\n    let displayableString: string = camelCaseString.charAt(0).toUpperCase();\n    for (let index = 1; index = MAX_PATH_WIDTH) {\n      return leaf.substr(0, MAX_PATH_WIDTH);\n    }\n    const delta = MAX_PATH_WIDTH - leaf.length;\n    return path.substr(0, delta) + '...' + leaf;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentFieldDetailComponent.html":{"url":"components/DocumentFieldDetailComponent.html","title":"component - DocumentFieldDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentFieldDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                document-field-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./document-field-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fieldComponents\n                            \n                            \n                                fieldDetailElement\n                            \n                            \n                                    Private\n                                isDragDropTarget\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allowDrop\n                            \n                            \n                                dragEnterLeave\n                            \n                            \n                                editField\n                            \n                            \n                                endDrag\n                            \n                            \n                                fieldShouldBeVisible\n                            \n                            \n                                getCssClass\n                            \n                            \n                                getElementPosition\n                            \n                            \n                                getFieldDetailComponent\n                            \n                            \n                                getFieldId\n                            \n                            \n                                getFieldTypeIcon\n                            \n                            \n                                getMappingClass\n                            \n                            \n                                getParentToggleClass\n                            \n                            \n                                getSpacerWidth\n                            \n                            \n                                getTransformationClass\n                            \n                            \n                                handleMouseClick\n                            \n                            \n                                handleMouseOver\n                            \n                            \n                                removeField\n                            \n                            \n                                startDrag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                field\n                            \n                            \n                                lineMachine\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selected\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         Field\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMachine\n                    \n                \n                \n                    \n                        Type :         LineMachineComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:40\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allowDrop\n                        \n                        \n                    \n                \n            \n            \n                \nallowDrop(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragEnterLeave\n                        \n                        \n                    \n                \n            \n            \n                \ndragEnterLeave(event: any, entering: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entering\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editField\n                        \n                        \n                    \n                \n            \n            \n                \neditField(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endDrag\n                        \n                        \n                    \n                \n            \n            \n                \nendDrag(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fieldShouldBeVisible\n                        \n                        \n                    \n                \n            \n            \n                \nfieldShouldBeVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCssClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetCssClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getElementPosition\n                        \n                        \n                    \n                \n            \n            \n                \ngetElementPosition()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldDetailComponent\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldDetailComponent(field: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DocumentFieldDetailComponent\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldId\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:285\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldTypeIcon\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldTypeIcon()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappingClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappingClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParentToggleClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetParentToggleClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSpacerWidth\n                        \n                        \n                    \n                \n            \n            \n                \ngetSpacerWidth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:280\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SafeStyle\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTransformationClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetTransformationClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseClick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:188\n                \n            \n\n\n            \n                \n                    Semantic support for a mouse click.\n\nM1 - the field is selected\nCtrl/Cmd-M1 - compound-select\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseOver\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseOver(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeField\n                        \n                        \n                    \n                \n            \n            \n                \nremoveField(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:261\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startDrag\n                        \n                        \n                    \n                \n            \n            \n                \nstartDrag(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldComponents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('fieldDetail')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldDetailElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('fieldDetailElement')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDragDropTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n\n                \n                    \n                        getselected()\n                    \n                \n                            \n                                \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts:289\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, ElementRef, ViewChild, ViewChildren, QueryList } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { DocumentType } from '../common/config.types';\nimport { ConfigModel } from '../models/config.model';\nimport { Field } from '../models/field.model';\n\nimport { LineMachineComponent } from './line-machine.component';\nimport { ModalWindowComponent } from './modal-window.component';\n\nimport { PropertyFieldEditComponent } from './property-field-edit.component';\nimport { ConstantFieldEditComponent } from './constant-field-edit.component';\nimport { FieldEditComponent } from './field-edit.component';\n\n@Component({\n  selector: 'document-field-detail',\n  templateUrl: './document-field-detail.component.html',\n})\n\nexport class DocumentFieldDetailComponent {\n  @Input() cfg: ConfigModel;\n  @Input() field: Field;\n  @Input() lineMachine: LineMachineComponent;\n  @Input() modalWindow: ModalWindowComponent;\n\n  @ViewChild('fieldDetailElement') fieldDetailElement: ElementRef;\n  @ViewChildren('fieldDetail') fieldComponents: QueryList;\n\n  private isDragDropTarget = false;\n\n  constructor(private sanitizer: DomSanitizer) { }\n\n  startDrag(event: any): void {\n\n    if (!this.field.isTerminal()) {\n      // ignore drag event, it's coming from a child field who's already set on the drag event\n      return;\n    }\n\n    this.cfg.currentDraggedField = null;\n\n    // event's data transfer store isn't available during dragenter/dragleave/dragover, so we need\n    // to store this info in a global somewhere since those methods depend on knowing if the\n    // dragged field is source/target\n    event = event || window.event;\n    event.dataTransfer.setData('text', '');  // firefox bug\n    this.cfg.currentDraggedField = this.field;\n  }\n\n  dragEnterLeave(event: any, entering: boolean): void {\n    if (!this.field.isTerminal() || (this.field.isSource() === this.cfg.currentDraggedField.isSource())) {\n      this.isDragDropTarget = false;\n      return;\n    }\n    this.isDragDropTarget = entering;\n  }\n\n  allowDrop(event: any): void {\n    if (!this.field.isTerminal() || (this.field.isSource() === this.cfg.currentDraggedField.isSource())) {\n      this.isDragDropTarget = false;\n      return;\n    }\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n    this.isDragDropTarget = true;\n  }\n\n  endDrag(event: MouseEvent): void {\n    this.isDragDropTarget = false;\n    if (!this.field.isTerminal() || (this.field.isSource() === this.cfg.currentDraggedField.isSource())) {\n      return;\n    }\n\n    const droppedField: Field = this.cfg.currentDraggedField;\n    if (droppedField == null) {\n      return;\n    }\n\n    if (!this.cfg.currentDraggedField.selected) {\n      this.cfg.mappingService.fieldSelected(this.cfg.currentDraggedField, event.ctrlKey || event.metaKey);\n    }\n    this.cfg.mappingService.fieldSelected(this.field, false);\n  }\n\n  getFieldTypeIcon(): string {\n    if (this.field.enumeration) {\n      return 'fa fa-file-text-o';\n    }\n    if (this.field.isCollection) {\n      return 'fa fa-list-ul';\n    }\n    if (this.field.docDef.type === DocumentType.XML) {\n      return this.field.isAttribute ? 'fa fa-at' : 'fa fa-code';\n    }\n    return 'fa fa-file-o';\n  }\n\n  fieldShouldBeVisible(): boolean {\n    const partOfMapping: boolean = this.field.partOfMapping;\n    return partOfMapping ? this.cfg.showMappedFields : this.cfg.showUnmappedFields;\n  }\n\n  getTransformationClass(): string {\n    if (!this.field.partOfMapping || !this.field.partOfTransformation) {\n      return 'partOfMappingIcon partOfMappingIconHidden';\n    }\n    return 'partOfMappingIcon fa fa-bolt';\n  }\n\n  getMappingClass(): string {\n    if (!this.field.partOfMapping) {\n      return 'partOfMappingIcon partOfMappingIconHidden';\n    }\n    let clz = 'fa fa-circle';\n    if (!this.field.isTerminal() && this.field.hasUnmappedChildren) {\n      clz = 'fa fa-adjust';\n    }\n    return 'partOfMappingIcon ' + clz;\n  }\n\n  getCssClass(): string {\n    let cssClass = 'fieldDetail';\n    if (this.selected) {\n      cssClass += ' selectedField';\n    }\n    if (!this.field.isTerminal()) {\n      cssClass += ' parentField';\n    }\n    if (!this.field.isSource()) {\n      cssClass += ' outputField';\n    }\n    if (this.isDragDropTarget) {\n      cssClass += ' dragHover';\n    }\n    return cssClass;\n  }\n\n  getElementPosition(): any {\n    let x = 0;\n    let y = 0;\n\n    let el: any = this.fieldDetailElement.nativeElement;\n    while (el != null) {\n      x += el.offsetLeft;\n      y += el.offsetTop;\n      el = el.offsetParent;\n    }\n    return { 'x': x, 'y': y };\n  }\n\n  handleMouseOver(event: MouseEvent): void {\n    if (this.field.isTerminal() && this.lineMachine != null) {\n      this.lineMachine.handleDocumentFieldMouseOver(this, event, this.field.isSource());\n    }\n  }\n\n  getParentToggleClass() {\n    return 'arrow fa fa-angle-' + (this.field.collapsed ? 'right' : 'down');\n  }\n\n  /**\n   * Semantic support for a mouse click.\n   * * M1 - the field is selected\n   * * Ctrl/Cmd-M1 - compound-select\n   *\n   * @param event\n   */\n  handleMouseClick(event: MouseEvent): void {\n    this.cfg.mappingService.fieldSelected(this.field, event.ctrlKey || event.metaKey);\n    if (this.lineMachine != null) {\n      setTimeout(() => {\n        this.lineMachine.redrawLinesForMappings();\n      }, 1);\n    }\n  }\n\n  getFieldDetailComponent(field: Field): DocumentFieldDetailComponent {\n    if (this.field === field) {\n      return this;\n    }\n\n    // Matching name and doc definition is a match\n    if ((this.field.path === field.path) && (this.field.docDef === field.docDef)) {\n      this.field = field;\n      return this;\n    }\n    for (const c of this.fieldComponents.toArray()) {\n      const returnedComponent: DocumentFieldDetailComponent = c.getFieldDetailComponent(field);\n      if (returnedComponent != null) {\n        return returnedComponent;\n      }\n    }\n    return null;\n  }\n\n  editField(event: any): void {\n    event.stopPropagation();\n    const self: DocumentFieldDetailComponent = this;\n    const oldPath: string = this.field.path;\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Save';\n    const isProperty: boolean = this.field.isProperty();\n    const isConstant: boolean = this.field.isConstant();\n    this.modalWindow.headerText = isProperty ? 'Edit Property' : (isConstant ? 'Edit Constant' : 'Edit Field');\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      if (isProperty) {\n        const propertyComponent: PropertyFieldEditComponent = mw.nestedComponent as PropertyFieldEditComponent;\n        propertyComponent.initialize(self.field, this.field.docDef, this.modalWindow);\n      } else if (isConstant) {\n        const constantComponent: ConstantFieldEditComponent = mw.nestedComponent as ConstantFieldEditComponent;\n        constantComponent.initialize(self.field, this.field.docDef, this.modalWindow);\n      } else {\n        const fieldComponent: FieldEditComponent = mw.nestedComponent as FieldEditComponent;\n        fieldComponent.isSource = self.field.isSource();\n        fieldComponent.initialize(self.field, this.field.docDef, false);\n      }\n    };\n    this.modalWindow.nestedComponentType = isProperty ? PropertyFieldEditComponent\n      : (isConstant ? ConstantFieldEditComponent : FieldEditComponent);\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      let newField: Field = null;\n      if (isProperty) {\n        const propertyComponent: PropertyFieldEditComponent = mw.nestedComponent as PropertyFieldEditComponent;\n        newField = propertyComponent.getField();\n      } else if (isConstant) {\n        const constantComponent: ConstantFieldEditComponent = mw.nestedComponent as ConstantFieldEditComponent;\n        newField = constantComponent.getField();\n      } else {\n        const fieldComponent: FieldEditComponent = mw.nestedComponent as FieldEditComponent;\n        newField = fieldComponent.getField();\n      }\n      self.field.copyFrom(newField);\n\n      self.field.docDef.updateField(self.field, oldPath);\n\n      self.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  removeField(event: any): void {\n    event.stopPropagation();\n    const self: DocumentFieldDetailComponent = this;\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Remove';\n    if (this.field.isPropertyOrConstant()) {\n      this.modalWindow.headerText = this.field.isProperty() ? 'Remove Property?' : 'Remove Constant?';\n    } else {\n      this.modalWindow.headerText = 'Remove field?';\n    }\n    this.modalWindow.message = 'Are you sure you want to remove \\'' + this.field.displayName + '\\'?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      self.cfg.mappings.removeFieldFromAllMappings(self.field);\n      self.field.docDef.removeField(self.field);\n      self.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  getSpacerWidth(): SafeStyle {\n    const width: string = (this.field.fieldDepth * 30).toString();\n    return this.sanitizer.bypassSecurityTrustStyle('display:inline; margin-left:' + width + 'px');\n  }\n\n  getFieldId(): string {\n    return this.field.name && this.field.name.length > 0 ? this.field.name : 'document-root';\n  }\n\n  get selected(): boolean {\n    if (this.cfg.mappings && this.cfg.mappings.activeMapping) {\n      return this.cfg.mappings.activeMapping.getFields(this.field.isSource()).includes(this.field);\n    }\n    return false;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n      \n      &nbsp;\n      \n        \n        \n        \n      \n      \n        \n      \n    \n    &nbsp;\n    \n      {{ field.getFieldLabel(cfg.showTypes, false) }}\n    \n\n    \n      {{ field.getFieldLabel(cfg.showTypes, false) }}\n    \n\n    \n      \n      \n    \n    \n      \n      \n    \n    \n\n    \n      \n        \n          \n          \n            \n            \n              \n                \n                  \n                    \n                      Preview Results\n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n    \n  \n\n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                    {{ field.getFieldLabel(cfg.showTypes, false) }}              {{ field.getFieldLabel(cfg.showTypes, false) }}                                                                                                                                                                                                        Preview Results                                                                                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DocumentFieldDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DocumentInitializationModel.html":{"url":"classes/DocumentInitializationModel.html","title":"class - DocumentInitializationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DocumentInitializationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/config.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collectionClassName\n                            \n                            \n                                collectionType\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                inspectionResult\n                            \n                            \n                                inspectionSource\n                            \n                            \n                                inspectionType\n                            \n                            \n                                isSource\n                            \n                            \n                                name\n                            \n                            \n                                selectedRoot\n                            \n                            \n                                showFields\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collectionClassName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collectionType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CollectionType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inspectionResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inspectionSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inspectionType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InspectionType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:82\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NGXLogger, NgxLoggerLevel } from 'ngx-logger';\nimport { environment } from '../../../../environments/environment';\nimport { MappingDefinition } from './mapping-definition.model';\nimport { DocumentDefinition } from './document-definition.model';\n\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { DocumentManagementService } from '../services/document-management.service';\nimport { MappingManagementService } from '../services/mapping-management.service';\nimport { InitializationService } from '../services/initialization.service';\nimport { ErrorInfo } from '../models/error.model';\n\nimport { DocumentType, InspectionType, CollectionType } from '../common/config.types';\nimport { FieldActionService } from '../services/field-action.service';\nimport { FileManagementService } from '../services/file-management.service';\n\nexport class DataMapperInitializationModel {\n  dataMapperVersion = '0.9.2017.07.28';\n  initialized = false;\n  loadingStatus = 'Loading.';\n  admHttpTimeout = 30000;  // 30 seconds\n  initializationErrorOccurred = false;\n\n  baseJavaInspectionServiceUrl: string;\n  baseXMLInspectionServiceUrl: string;\n  baseJSONInspectionServiceUrl: string;\n  baseMappingServiceUrl: string;\n\n  xsrfHeaderName: string;\n  xsrfCookieName: string;\n  xsrfDefaultTokenValue: string;\n\n  /* class path fetching configuration */\n  classPathFetchTimeoutInMilliseconds = 30000;\n  // if classPath is specified, maven call to resolve pom will be skipped\n  pomPayload: string;\n\n  classPath: string;\n\n  /* inspection service filtering flags */\n  fieldNameBlacklist: string[] = [];\n  classNameBlacklist: string[] = [];\n  disablePrivateOnlyFields = false;\n  disableProtectedOnlyFields = false;\n  disablePublicOnlyFields = false;\n  disablePublicGetterSetterFields = false;\n\n  disableMappingPreviewMode = false;\n\n  /* enable the navigation bar and import/export */\n  disableNavbar = true;\n\n  mappingInitialized = false;\n\n  constructor() {\n    if (environment.xsrf) {\n      this.xsrfHeaderName = environment.xsrf.headerName;\n      this.xsrfCookieName = environment.xsrf.cookieName;\n      this.xsrfDefaultTokenValue = environment.xsrf.defaultTokenValue;\n    }\n  }\n\n}\n\nexport class DocumentInitializationModel {\n  id: string;\n  type: DocumentType;\n  name: string;\n  description: string;\n  isSource: boolean;\n  showFields = true;\n  inspectionType: InspectionType;\n  inspectionSource: string;\n  inspectionResult: string;\n  selectedRoot: string;\n  collectionType: CollectionType;\n  collectionClassName: string;\n}\n\nexport class ConfigModel {\n  static mappingServicesPackagePrefix = 'io.atlasmap.v2';\n  static javaServicesPackagePrefix = 'io.atlasmap.java.v2';\n  static jsonServicesPackagePrefix = 'io.atlasmap.json.v2';\n  static xmlServicesPackagePrefix = 'io.atlasmap.xml.v2';\n  private static cfg: ConfigModel = new ConfigModel();\n\n  initCfg: DataMapperInitializationModel = new DataMapperInitializationModel;\n\n  /* current ui state config */\n  showMappingDetailTray = false;\n  showMappingTable = false;\n  showNamespaceTable = false;\n  showLinesAlways = true;\n  showTypes = false;\n  showMappedFields = true;\n  showUnmappedFields = true;\n  _showMappingPreview = false;\n  currentDraggedField: any = null;\n\n  documentService: DocumentManagementService;\n  mappingService: MappingManagementService;\n  errorService: ErrorHandlerService;\n  initializationService: InitializationService;\n  fieldActionService: FieldActionService;\n  fileService: FileManagementService;\n\n  sourceDocs: DocumentDefinition[] = [];\n  targetDocs: DocumentDefinition[] = [];\n  propertyDoc: DocumentDefinition = new DocumentDefinition();\n  constantDoc: DocumentDefinition = new DocumentDefinition();\n  mappingFiles: string[] = [];\n\n  mappings: MappingDefinition = null;\n\n  preloadedFieldActionMetadata: any;\n\n  errors: ErrorInfo[] = [];\n  validationErrors: ErrorInfo[] = [];\n\n  logger: NGXLogger;\n\n  constructor() {\n    this.propertyDoc.type = DocumentType.PROPERTY;\n    this.propertyDoc.name = 'Properties';\n    this.propertyDoc.isSource = true;\n    this.propertyDoc.showFields = false;\n    this.constantDoc.type = DocumentType.CONSTANT;\n    this.constantDoc.name = 'Constants';\n    this.constantDoc.isSource = true;\n    this.constantDoc.showFields = false;\n  }\n\n  static getConfig(): ConfigModel {\n    return ConfigModel.cfg;\n  }\n\n  static setConfig(cfg: ConfigModel): void {\n    ConfigModel.cfg = cfg;\n  }\n\n  set showMappingPreview(show: boolean) {\n    if (show && !this._showMappingPreview) {\n      this.mappingService.enableMappingPreview();\n    } else if (!show && this._showMappingPreview) {\n      this.mappingService.disableMappingPreview();\n    }\n    this._showMappingPreview = show;\n  }\n\n  get showMappingPreview(): boolean {\n    return this._showMappingPreview;\n  }\n\n  isDebugEnabled(): boolean {\n    return [NgxLoggerLevel.DEBUG, NgxLoggerLevel.TRACE].includes(this.logger.getConfigSnapshot().level);\n  }\n\n  isTraceEnabled(): boolean {\n    return this.logger.getConfigSnapshot().level === NgxLoggerLevel.TRACE;\n  }\n\n  addDocument(docInitModel: DocumentInitializationModel): DocumentDefinition {\n    const docDef: DocumentDefinition = new DocumentDefinition();\n    docDef.initModel = docInitModel;\n    docDef.id = docInitModel.id;\n    docDef.type = docInitModel.type;\n    docDef.name = docInitModel.name;\n    docDef.description = docInitModel.description;\n    docDef.isSource = docInitModel.isSource;\n    docDef.showFields = docInitModel.showFields;\n    docDef.inspectionType = docInitModel.inspectionType;\n    docDef.inspectionSource = docInitModel.inspectionSource;\n    docDef.inspectionResult = docInitModel.inspectionResult;\n    docDef.selectedRoot = docInitModel.selectedRoot;\n\n    if (docDef.type === DocumentType.XSD) {\n      docDef.uri = 'atlas:' + 'xml' + ':' + docDef.id;\n    } else if (docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri = 'atlas:' + 'java' + ':' + docDef.id;\n    } else {\n      docDef.uri = 'atlas:' + docDef.type.toLowerCase() + ':' + docDef.id;\n    }\n\n    if (docDef.type === DocumentType.JAVA || docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri += '?className=' + docDef.inspectionSource;\n      if (docInitModel.collectionType && docInitModel.collectionType !== CollectionType.NONE) {\n        docDef.uri += '&collectionType=' + docInitModel.collectionType;\n        if (docInitModel.collectionClassName) {\n          docDef.uri += '&collectionClassName=' + docInitModel.collectionClassName;\n        }\n      }\n    }\n\n    if (docInitModel.isSource) {\n      this.sourceDocs.push(docDef);\n    } else {\n      this.targetDocs.push(docDef);\n    }\n    return docDef;\n  }\n\n  addDocuments(docModels: DocumentInitializationModel[]): DocumentDefinition[] {\n    const docDefs: DocumentDefinition[] = [];\n    for (const docModel of docModels) {\n      docDefs.push(this.addDocument(docModel));\n    }\n    return docDefs;\n  }\n\n  getDocsWithoutPropertyDoc(isSource: boolean): DocumentDefinition[] {\n    return [].concat(isSource ? this.sourceDocs : this.targetDocs);\n  }\n\n  getDocs(isSource: boolean): DocumentDefinition[] {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    return isSource ? [this.propertyDoc, this.constantDoc].concat(docs) : docs;\n  }\n\n  /**\n   * Clear source/target/mapping documents from the model.  Reset constant and property document definitions.\n   */\n  clearDocs(): void {\n    this.sourceDocs = [];\n    this.targetDocs = [];\n    this.propertyDoc.clearFields();\n    this.constantDoc.clearFields();\n    this.mappingFiles = [];\n  }\n\n  hasJavaDocuments(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isClassPathResolutionNeeded(): boolean {\n    if (this.initCfg.classPath) {\n      return false;\n    }\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA && doc.inspectionResult == null) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getDocForIdentifier(documentId: string, isSource: boolean): DocumentDefinition {\n    for (const d of this.getDocs(isSource)) {\n      if (d.id === documentId) {\n        return d;\n      }\n    }\n    return null;\n  }\n\n  getFirstXmlDoc(isSource: boolean) {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    for (const doc of docs) {\n      if (doc.type === DocumentType.XML) {\n        return doc;\n      }\n    }\n    return null;\n  }\n\n  getAllDocs(): DocumentDefinition[] {\n    return [this.propertyDoc, this.constantDoc].concat(this.sourceDocs).concat(this.targetDocs);\n  }\n\n  documentsAreLoaded(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (!doc.initialized) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Validate the specified field value, generating a validation error if not defined.\n   * @param value - field to validate\n   * @param fieldDescription - used in error diagnostic\n   */\n  isRequiredFieldValid(value: string, fieldDescription: string): boolean {\n\n    if (value == null || '' === value) {\n      const errorMessage: string = fieldDescription + ' is required.';\n      this.errorService.validationError(errorMessage, null);\n      return false;\n    }\n    return true;\n  }\n\n}\n\n/**\n * Place all custom events here.\n */\nexport class AdmRedrawMappingLinesEvent {\n  _lmcInstance: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmptyModalBodyComponent.html":{"url":"components/EmptyModalBodyComponent.html","title":"component - EmptyModalBodyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmptyModalBodyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                empty-modal-body\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitialFocusElement\n                            \n                            \n                                isDataValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  Component, Input, ViewChildren, QueryList, OnDestroy,\n  ViewContainerRef, Type, ComponentFactoryResolver, AfterViewInit, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../models/config.model';\nimport { Subscription } from 'rxjs';\nimport { ModalErrorWindowComponent } from './modal-error-window.component';\n\n// source: http://www.w3schools.com/howto/howto_css_modals.asp\n\nexport interface ModalWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'empty-modal-body',\n  template: '',\n})\n\nexport class EmptyModalBodyComponent implements ModalWindowValidator {\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n}\n\n@Component({\n  selector: 'modal-window',\n  templateUrl: './modal-window.component.html',\n})\n\nexport class ModalWindowComponent implements AfterViewInit, OnDestroy {\n  @Input() headerText = '';\n  @Input() nestedComponentType: Type;\n  @Input() nestedComponentInitializedCallback: Function;\n  @Input() okButtonHandler: Function;\n  @Input() cancelButtonHandler: Function;\n  @Input() cfg: ConfigModel;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  message: string = null;\n  nestedComponent: ModalWindowValidator;\n  confirmButtonDisabled = false;\n  confirmButtonText = 'OK';\n  visible = false;\n  fade = false;\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  private componentLoaded = false;\n  private myTargetChangesSubscription: Subscription;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, public detector: ChangeDetectorRef) { }\n\n  ngAfterViewInit() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n\n    // from: http://stackoverflow.com/questions/40811809/add-component-dynamically-inside-an-ngif\n    this.myTargetChangesSubscription = this.myTarget.changes.subscribe(changes => {\n      setTimeout(() => {\n        if (!this.componentLoaded && this.visible && this.myTarget && (this.myTarget.toArray().length)) {\n          this.loadComponent();\n        }\n        setTimeout(() => {\n          this.detector.detectChanges();\n        }, 10);\n      }, 10);\n    });\n  }\n\n  ngOnDestroy() {\n    this.myTargetChangesSubscription.unsubscribe();\n  }\n\n  loadComponent(): void {\n    const viewContainerRef: ViewContainerRef = this.myTarget.toArray()[0];\n    viewContainerRef.clear();\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.nestedComponentType);\n    this.nestedComponent = viewContainerRef.createComponent(componentFactory).instance as ModalWindowValidator;\n    if (this.nestedComponentInitializedCallback != null) {\n      this.nestedComponentInitializedCallback(this);\n    }\n    const initialFocusElement = this.nestedComponent.getInitialFocusElement();\n    if (initialFocusElement) {\n      initialFocusElement.nativeElement.focus();\n    }\n  }\n\n  closeClicked(event: MouseEvent): void { this.buttonClicked(false); }\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.visible = false;\n    }, 300);\n  }\n  show(): void {\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.nestedComponentInitializedCallback = null;\n    this.confirmButtonDisabled = false;\n    this.confirmButtonText = 'OK';\n    this.message = '';\n    this.headerText = '';\n    this.componentLoaded = false;\n    this.nestedComponentType = EmptyModalBodyComponent;\n    this.okButtonHandler = null;\n    this.cancelButtonHandler = null;\n  }\n\n  private buttonClicked(okClicked: boolean): void {\n    if (okClicked) {\n      if (this.nestedComponent != null) {\n        this.cfg.errorService.clearValidationErrors();\n        if (!(this.nestedComponent.isDataValid())) {\n          return;\n        }\n      }\n      if (this.okButtonHandler) {\n        this.okButtonHandler(this);\n      }\n    } else { // cancel clicked\n      if (this.cancelButtonHandler) {\n        this.cancelButtonHandler(this);\n      }\n    }\n    this.close();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmptyModalBodyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnumValue.html":{"url":"classes/EnumValue.html","title":"class - EnumValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnumValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                ordinal\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ordinal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field.model.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DocumentType } from '../common/config.types';\nimport { DocumentDefinition } from './document-definition.model';\n\nexport class EnumValue {\n  name: string;\n  ordinal: number;\n}\n\nexport class Field {\n  private static uuidCounter = 0;\n\n  name: string = null;\n  classIdentifier: string = null;\n  displayName: string;\n  path: string = null;\n  type: string = null;\n  value: string = null;\n  serviceObject: any = new Object();\n  parentField: Field;\n  partOfMapping = false;\n  partOfTransformation = false;\n  visibleInCurrentDocumentSearch = true;\n  enumeration = false;\n  enumValues: EnumValue[] = [];\n  children: Field[] = [];\n  fieldDepth = 0;\n  uuid: string = null;\n  collapsed = true;\n  hasUnmappedChildren = false;\n  isCollection = false;\n  isArray = false;\n  isAttribute = false;\n  isPrimitive = false;\n  userCreated = false;\n  docDef: DocumentDefinition = null;\n  namespaceAlias: string = null;\n\n  static fieldHasUnmappedChild(field: Field): boolean {\n    if (field == null) {\n      return false;\n    }\n    if (field.isTerminal()) {\n      return (field.partOfMapping === false);\n    }\n    for (const childField of field.children) {\n      if (childField.hasUnmappedChildren || Field.fieldHasUnmappedChild(childField)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static getFieldPaths(fields: Field[]): string[] {\n    const paths: string[] = [];\n    for (const field of fields) {\n      paths.push(field.path);\n    }\n    return paths;\n  }\n\n  static getFieldNames(fields: Field[]): string[] {\n    const paths: string[] = [];\n    for (const field of fields) {\n      paths.push(field.name);\n    }\n    return paths;\n  }\n\n  static getField(fieldPath: string, fields: Field[]): Field {\n    for (const field of fields) {\n      if (fieldPath === field.path) {\n        return field;\n      }\n    }\n    return null;\n  }\n\n  static alphabetizeFields(fields: Field[]): void {\n    const fieldsByName: { [key: string]: Field; } = {};\n    const fieldNames: string[] = [];\n    for (const field of fields) {\n      // if field is a dupe, discard it\n      if (fieldsByName[field.name] != null) {\n        continue;\n      }\n      fieldsByName[field.name] = field;\n      fieldNames.push(field.name);\n    }\n    fieldNames.sort();\n    fields.length = 0;\n    for (const name of fieldNames) {\n      fields.push(fieldsByName[name]);\n    }\n\n    for (const field of fields) {\n      if (field.children && field.children.length) {\n        this.alphabetizeFields(field.children);\n      }\n    }\n  }\n\n  constructor() {\n    this.uuid = Field.uuidCounter.toString();\n    Field.uuidCounter++;\n  }\n\n  getNameWithNamespace(): string {\n    if (!this.namespaceAlias) {\n      return this.name;\n    }\n    return this.namespaceAlias + ':' + this.name;\n  }\n\n  isParentField(): boolean {\n    if (this.isCollection && !this.isPrimitive) {\n      return true;\n    }\n    return (this.type === 'COMPLEX');\n  }\n\n  isStringField(): boolean {\n    return (this.type === 'STRING');\n  }\n\n  isTerminal(): boolean {\n    if (this.enumeration) {\n      return true;\n    }\n    if (this.isCollection && !this.isPrimitive) {\n      return false;\n    }\n    return (this.type !== 'COMPLEX');\n  }\n\n  copy(): Field {\n    const copy: Field = new Field();\n    Object.assign(copy, this);\n\n    // make these pointers to the same object, not copies\n    copy.serviceObject = this.serviceObject;\n    copy.parentField = this.parentField;\n    copy.docDef = this.docDef;\n\n    copy.children = [];\n    for (const childField of this.children) {\n      copy.children.push(childField.copy());\n    }\n    // console.log(\"Copied: \" + this.name, { \"src\": this, \"target\": copy });\n    return copy;\n  }\n\n  copyFrom(that: Field): void {\n    Object.assign(this, that);\n\n    // make these pointers to the same object, not copies\n    this.serviceObject = that.serviceObject;\n    this.parentField = that.parentField;\n    this.docDef = that.docDef;\n\n    this.children = [];\n    for (const childField of that.children) {\n      this.children.push(childField.copy());\n    }\n  }\n\n  getCollectionParentField(): Field {\n    let parent: Field = this;\n    while (parent != null) {\n      if (parent.isCollection) {\n        return parent;\n      }\n      parent = parent.parentField;\n    }\n    return null;\n  }\n\n  isInCollection(): boolean {\n    return (this.getCollectionParentField() != null);\n  }\n\n  isSource(): boolean {\n    return (this.docDef != null) && this.docDef.isSource;\n  }\n\n  getCollectionType(): string {\n    return this.isCollection ? (this.isArray ? 'ARRAY' : 'LIST') : null;\n  }\n\n  getFieldLabel(showTypes: boolean, includePath: boolean): string {\n    let fieldPath = includePath ? this.path : this.getNameWithNamespace();\n    if (showTypes && this.type && !this.isPropertyOrConstant()) {\n      fieldPath += ' (' + this.type + ')';\n    } else if (this.isProperty() && this.value != null) {\n      fieldPath += ' = ' + this.value;\n      if (showTypes && this.type) {\n        fieldPath += ' (' + this.type + ')';\n      }\n    }\n    if (!fieldPath && !this.parentField) {\n      fieldPath = '';\n    }\n    return fieldPath;\n  }\n\n  isPropertyOrConstant(): boolean {\n    return (this.docDef == null) ? false : this.docDef.isPropertyOrConstant;\n  }\n\n  isProperty(): boolean {\n    return (this.docDef == null) ? false : this.docDef.type === DocumentType.PROPERTY;\n  }\n\n  isConstant(): boolean {\n    return (this.docDef == null) ? false : this.docDef.type === DocumentType.CONSTANT;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addError\n                            \n                            \n                                    Private\n                                arrayDoesNotContainError\n                            \n                            \n                                clearMappingErrors\n                            \n                            \n                                clearValidationErrors\n                            \n                            \n                                clearWarnings\n                            \n                            \n                                debug\n                            \n                            \n                                displayErrorBlock\n                            \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                mappingError\n                            \n                            \n                                removeError\n                            \n                            \n                                resetAll\n                            \n                            \n                                validationError\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addError(message: string, level: ErrorLevel, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                ErrorLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            arrayDoesNotContainError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    arrayDoesNotContainError(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearMappingErrors\n                        \n                        \n                    \n                \n            \n            \n                \nclearMappingErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearValidationErrors\n                        \n                        \n                    \n                \n            \n            \n                \nclearValidationErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearWarnings\n                        \n                        \n                    \n                \n            \n            \n                \nclearWarnings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: string, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayErrorBlock\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayErrorBlock(errorBlock: ErrorInfo[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:73\n                \n            \n\n\n            \n                \n                    Display a block of error messages (from validation for instance) by feeding them into the main\nerror array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorBlock\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(message: string, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mappingError\n                        \n                        \n                    \n                \n            \n            \n                \nmappingError(message: string, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeError\n                        \n                        \n                    \n                \n            \n            \n                \nremoveError(identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetAll\n                        \n                        \n                    \n                \n            \n            \n                \nresetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validationError\n                        \n                        \n                    \n                \n            \n            \n                \nvalidationError(message: string, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: string, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ErrorInfo, ErrorLevel } from '../models/error.model';\nimport { ConfigModel } from '../models/config.model';\n\n@Injectable()\nexport class ErrorHandlerService {\n  cfg: ConfigModel = null;\n\n  debug(message: string, error: any) { this.addError(message, ErrorLevel.DEBUG, error); }\n  info(message: string, error: any) { this.addError(message, ErrorLevel.INFO, error); }\n  warn(message: string, error: any) { this.addError(message, ErrorLevel.WARN, error); }\n  error(message: string, error: any) { this.addError(message, ErrorLevel.ERROR, error); }\n  validationError(message: string, error: any) { this.addError(message, ErrorLevel.VALIDATION_ERROR, error); }\n  mappingError(message: string, error: any) { this.addError(message, ErrorLevel.MAPPING_ERROR, error); }\n\n  resetAll(): void {\n    this.cfg.errors = [];\n    this.cfg.validationErrors = [];\n  }\n\n  removeError(identifier: string): void {\n    this.cfg.errors = this.cfg.errors.filter(e => e.identifier !== identifier);\n    this.cfg.validationErrors = this.cfg.validationErrors.filter(e => e.identifier !== identifier);\n  }\n\n  clearMappingErrors(): void {\n    for (const e of this.cfg.errors) {\n      if (e.level === ErrorLevel.MAPPING_ERROR) {\n        this.removeError(e.identifier);\n      }\n    }\n  }\n\n  clearValidationErrors(): void {\n    for (const e of this.cfg.errors) {\n      if (e.level === ErrorLevel.VALIDATION_ERROR) {\n        this.removeError(e.identifier);\n      }\n    }\n  }\n\n  clearWarnings(): void {\n      for (const e of this.cfg.errors) {\n        if (e.level === ErrorLevel.WARN) {\n          this.removeError(e.identifier);\n        }\n      }\n  }\n\n  /**\n   * Display a block of error messages (from validation for instance) by feeding them into the main\n   * error array.\n   *\n   * @param errorBlock\n   */\n  displayErrorBlock(errorBlock: ErrorInfo[]): void {\n    if (errorBlock[0] && this.arrayDoesNotContainError(errorBlock[0].message)) {\n      const mergedArray = [ ...this.cfg.errors, ...errorBlock ];\n      this.cfg.errors = mergedArray;\n    }\n  }\n\n  private addError(message: string, level: ErrorLevel, error: any): void {\n    if (this.arrayDoesNotContainError(message)) {\n      if (error && error.message) {\n        message += ('\\n' + error.message);\n      }\n      const e = new ErrorInfo(message, level, error);\n      this.cfg.errors.push(e);\n    }\n  }\n\n  private arrayDoesNotContainError(message: string) {\n    return this.cfg.errors.filter(e => e.message === message).length === 0;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorInfo.html":{"url":"classes/ErrorInfo.html","title":"class - ErrorInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/error.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                error\n                            \n                            \n                                    Private\n                                    Static\n                                errorIdentifierCounter\n                            \n                            \n                                    Readonly\n                                identifier\n                            \n                            \n                                    Readonly\n                                level\n                            \n                            \n                                    Readonly\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, level: ErrorLevel, error?: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        ErrorLevel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            errorIdentifierCounter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorLevel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export enum ErrorLevel { DEBUG, INFO, WARN, ERROR, VALIDATION_ERROR, MAPPING_ERROR }\n\nexport class ErrorInfo {\n  private static errorIdentifierCounter = 0;\n\n  readonly identifier: string;\n  readonly message: string;\n  readonly level: ErrorLevel;\n  readonly error: any;\n\n  constructor(message: string, level: ErrorLevel, error?: any) {\n    this.identifier = ErrorInfo.errorIdentifierCounter.toString();\n    this.message = message;\n    this.level = level;\n    this.error = error;\n    ErrorInfo.errorIdentifierCounter++;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExampleAppModule.html":{"url":"modules/ExampleAppModule.html","title":"module - ExampleAppModule","body":"\n                   \n\n\n\n\n    Modules\n    ExampleAppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExampleAppModule\n\n\n\ncluster_ExampleAppModule_declarations\n\n\n\ncluster_ExampleAppModule_imports\n\n\n\ncluster_ExampleAppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nExampleAppModule\n\nExampleAppModule\n\nExampleAppModule -->\n\nAppComponent->ExampleAppModule\n\n\n\n\n\nAtlasmapNavbarComponent\n\nAtlasmapNavbarComponent\n\nExampleAppModule -->\n\nAtlasmapNavbarComponent->ExampleAppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nExampleAppModule->AppComponent \n\n\n\n\n\nAtlasmapNavbarComponent \n\nAtlasmapNavbarComponent \n\nAtlasmapNavbarComponent  -->\n\nExampleAppModule->AtlasmapNavbarComponent \n\n\n\n\n\nDataMapperModule\n\nDataMapperModule\n\nExampleAppModule -->\n\nDataMapperModule->ExampleAppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/example-app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AtlasmapNavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataMapperModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AtlasmapNavbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n    Copyright (C) 2017 Red Hat, Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { AtlasmapNavbarComponent } from './atlasmap-navbar.component';\n\nimport { DataMapperModule } from './lib/atlasmap-data-mapper/data-mapper.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AtlasmapNavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot([]),\n    DataMapperModule.withInterceptor(),\n  ],\n  providers: [],\n  bootstrap: [\n    AppComponent,\n    AtlasmapNavbarComponent,\n  ],\n})\n\nexport class ExampleAppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Examples.html":{"url":"classes/Examples.html","title":"class - Examples","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Examples\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/examples.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                pom\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            pom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `\n    \n\n        4.0.0\n        foo.bar\n        test.model\n        1.10.0\n        jar\n        Test :: Model\n\n        \n            \n                com.fasterxml.jackson.core\n                jackson-annotations\n                2.8.5\n            \n            \n                com.fasterxml.jackson.core\n                jackson-databind\n                2.8.5\n            \n            \n                com.fasterxml.jackson.core\n                jackson-core\n                2.8.5\n            \n        \n    \n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/examples.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Examples {\n  static pom = `\n    \n\n        4.0.0\n        foo.bar\n        test.model\n        1.10.0\n        jar\n        Test :: Model\n\n        \n            \n                com.fasterxml.jackson.core\n                jackson-annotations\n                2.8.5\n            \n            \n                com.fasterxml.jackson.core\n                jackson-databind\n                2.8.5\n            \n            \n                com.fasterxml.jackson.core\n                jackson-core\n                2.8.5\n            \n        \n    \n  `;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpressionNode.html":{"url":"classes/ExpressionNode.html","title":"class - ExpressionNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpressionNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                sequence\n                            \n                            \n                                    Protected\n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUuid\n                            \n                            \n                                    Abstract\n                                toHTML\n                            \n                            \n                                    Abstract\n                                toText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prefix: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prefix\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            sequence\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            uuid\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:27\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetUuid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toHTML()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { MappedField, MappingModel } from './mapping.model';\nimport { Subject } from 'rxjs';\n\nexport class ExpressionUpdatedEvent {\n  constructor(public node?: ExpressionNode, public offset?: number) {}\n}\n\nexport abstract class ExpressionNode {\n  protected static sequence = 0;\n  protected uuid;\n\n  constructor(prefix: string) {\n    this.uuid = prefix + ExpressionNode.sequence++;\n  }\n\n  getUuid() {\n    return this.uuid;\n  }\n\n  abstract toText(): string;\n  abstract toHTML(): string;\n}\n\nexport class TextNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-text-';\n\n  constructor(public str: string) {\n    super(TextNode.PREFIX);\n  }\n\n  toText(): string {\n    return this.str;\n  }\n\n  toHTML(): string {\n    return `${this.str.replace(/ /g, '&nbsp;')}`;\n  }\n\n}\n\nexport class FieldNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-field-';\n\n  constructor(private mapping: MappingModel, public field?: MappedField, private index?: number) {\n    super(FieldNode.PREFIX);\n    if (!field) {\n      this.field = mapping.getMappedFieldForIndex((index + 1).toString(), true);\n    }\n    if (!index) {\n      this.index = this.mapping.getIndexForMappedField(this.field) - 1;\n    }\n  }\n\n  toText(): string {\n    return '${' + this.index + '}';\n  }\n\n  toHTML(): string {\n    if (this.field) {\n      return `${this.field.field.name}`;\n    } else {\n      return `N/A`;\n    }\n  }\n\n}\n\nexport class ExpressionModel {\n  expressionUpdatedSource = new Subject();\n  expressionUpdated$ = this.expressionUpdatedSource.asObservable();\n\n  private _nodes: ExpressionNode[] = [];\n  private textCache = '';\n  private htmlCache = '';\n\n  constructor(private mapping: MappingModel, private cfg: ConfigModel) {}\n\n  generateInitialExpression() {\n    this.mapping.getUserMappedFields(true).forEach(f => this.appendFieldNode(f));\n  }\n\n  get nodes(): ReadonlyArray {\n    return this._nodes;\n  }\n\n  getLastNodeIndex() {\n    return this._nodes.length - 1;\n  }\n\n  getLastNode() {\n    return this._nodes[this.getLastNodeIndex()];\n  }\n\n  getNode(nodeId?: string): any {\n    if (!nodeId) {\n      return this.getLastNode();\n    }\n    return this._nodes.find(n => n.getUuid() === nodeId);\n  }\n\n  setConfigModel(cfg: ConfigModel) {\n    this.cfg = cfg;\n  }\n\n  /**\n   * Clear all text from the specified TextNode offset range or from the '@' to the end\n   * of the text node if no node ID is specified.\n   *\n   * Return the new UUID position indicator string or null.\n   *\n   * @param nodeId\n   * @param startOffset\n   * @param endOffset\n   */\n  clearText(nodeId?: string, startOffset?: number, endOffset?: number): TextNode {\n    let targetNode: TextNode;\n    let targetNodeIndex = 0;\n    if (!nodeId) {\n      const lastNode = this.getLastNode();\n      if (!(lastNode instanceof TextNode)) {\n        return null;\n      }\n      const keyPos = lastNode.str.indexOf('@');\n      targetNodeIndex = this._nodes.indexOf(lastNode);\n      targetNode = lastNode;\n      targetNode.str = targetNode.str.substring(0, keyPos);\n    } else {\n      const node = this._nodes.find(n => n.getUuid() === nodeId);\n      if (!(node instanceof TextNode) || !endOffset) {\n        return null;\n      }\n      targetNode = node;\n      targetNodeIndex = this._nodes.indexOf(targetNode);\n      const cleanStr = targetNode.str.replace(targetNode.str.substring(startOffset, endOffset), '');\n      targetNode.str = cleanStr;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n    return targetNode;\n  }\n\n  /**\n   * Insert text into expression at specified position. If nodeId is not specified,\n   * it will be added to the end of expression. It parses the string\n   * and insert a set of TextNode & FieldNode if it contains field reference like ${0},\n   * otherwise just one TextNode.\n   * This emits ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   * @param str string to insert\n   * @param nodeId target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertText(str: string, nodeId?: string, offset?: number) {\n    this.insertNodes(this.createNodesFromText(str), nodeId, offset);\n  }\n\n  /**\n   * Insert an array of ExpressionNodes at the specified position. If insertPosition is\n   * not specified the nodes will be appended to the end of the expression.\n   * This emits an ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   *\n   * @param newNodes an array of ExpressionNode to add\n   * @param insertPosition target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertNodes(newNodes: ExpressionNode[], insertPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!insertPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        this._nodes.push(...newNodes);\n      } else if (last instanceof TextNode && newNodes[0] instanceof TextNode) {\n        const lastTextNode = last as TextNode;\n        (last as TextNode).str += (newNodes[0] as TextNode).str;\n        newNodes.splice(0, 1, last);\n        this._nodes.splice(this.getLastNodeIndex(), 1, ...newNodes);\n      } else if (last instanceof FieldNode && newNodes[0] instanceof FieldNode) {\n        this._nodes.splice(this.getLastNodeIndex(), 0, new TextNode(' + '), ...newNodes);\n      } else {\n        this._nodes.push(...newNodes);\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    const updatedEvent = new ExpressionUpdatedEvent();\n    const targetNode = this._nodes.find(n => n.getUuid() === insertPosition);\n    const targetNodeIndex = this._nodes.indexOf(targetNode);\n\n    if (targetNode instanceof TextNode) {\n      if (offset === undefined || offset === null || offset  0) {\n        if (newNodes[0] instanceof TextNode) {\n          targetNode.str = pre + (newNodes[0] as TextNode).str;\n          newNodes.splice(0, 1, targetNode);\n        } else {\n          targetNode.str = pre;\n          newNodes.splice(0, 0, targetNode);\n        }\n      }\n      if (post.length > 0) {\n        const lastNewNodeIndex = newNodes.length - 1;\n        if (newNodes[lastNewNodeIndex] instanceof TextNode) {\n          let mergedTextNode: TextNode;\n          if (pre.length > 0) {\n            mergedTextNode = newNodes[lastNewNodeIndex] as TextNode;\n            mergedTextNode.str += post;\n          } else {\n            mergedTextNode = targetNode;\n            mergedTextNode.str = (newNodes[lastNewNodeIndex]as TextNode).str + post;\n          }\n          newNodes.splice(lastNewNodeIndex, 1, mergedTextNode);\n        } else {\n          if (pre.length > 0) {\n            newNodes.push(new TextNode(post));\n          } else {\n            targetNode.str = post;\n            newNodes.push(targetNode);\n          }\n        }\n      }\n      this._nodes.splice(targetNodeIndex, 1, ...newNodes);\n      const lastAddedIndex = targetNodeIndex + newNodes.length - 1;\n      if (this._nodes[lastAddedIndex] instanceof FieldNode\n          && this.nodes[lastAddedIndex + 1] instanceof FieldNode) {\n        // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n        const space = new TextNode(' + ');\n        this._nodes.splice(lastAddedIndex + 1, 0, space);\n        updatedEvent.node = space;\n        updatedEvent.offset = 1;\n      } else if (this._nodes[lastAddedIndex] instanceof FieldNode) {\n        updatedEvent.node = this._nodes[lastAddedIndex + 1];\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = this._nodes[lastAddedIndex];\n        updatedEvent.offset = (this._nodes[lastAddedIndex] as TextNode).str.length - post.length;\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next(updatedEvent);\n      return;\n    }\n\n    // targetNode is a FieldNode - insert the text before it if offset is 0, otherwise after it\n    if (offset !== 0 && newNodes[0] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      newNodes.splice(0, 0, new TextNode(' + '));\n    }\n    const nextNodeIndex = offset === 0 ? targetNodeIndex : targetNodeIndex + 1;\n    const nextNode = this._nodes[nextNodeIndex];\n    if (nextNode instanceof TextNode && newNodes[newNodes.length - 1] instanceof TextNode) {\n      updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      nextNode.str = (newNodes[newNodes.length - 1] as TextNode).str + (nextNode as TextNode).str;\n      newNodes.pop();\n      this._nodes.splice(nextNodeIndex, 1, ...newNodes);\n      updatedEvent.node = nextNode;\n    } else if (nextNode instanceof FieldNode && newNodes[newNodes.length - 1] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      const space = new TextNode(' + ');\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes, space);\n      updatedEvent.node = space;\n      updatedEvent.offset = 1;\n    } else {\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes);\n      if (nextNode instanceof TextNode) {\n        updatedEvent.node = nextNode;\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = newNodes[newNodes.length - 1];\n        updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  removeToken(lastFieldRefRemoved: (removed: MappedField) => void, tokenPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!tokenPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        return;\n      }\n      if (last instanceof FieldNode) {\n        const removed = this._nodes.pop() as FieldNode;\n        if (!this._nodes.find(n => n instanceof FieldNode && n.field === removed.field)) {\n          lastFieldRefRemoved(removed.field);\n        }\n      } else if (last instanceof TextNode) {\n        if (last.str.length > 0) {\n          last.str = last.str.substring(0, last.str.length - 1);\n        } else {\n          this._nodes.pop();\n        }\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    let updatedEvent = new ExpressionUpdatedEvent();\n    let targetNode = this._nodes.find(n => n.getUuid() === tokenPosition);\n    let targetNodeIndex = this._nodes.indexOf(targetNode);\n    if (!targetNode || offset === -1) {\n      if (targetNodeIndex  n instanceof FieldNode && n.field === removed.field)) {\n        lastFieldRefRemoved(removed.field);\n      }\n      if (this._nodes.length > targetNodeIndex) {\n        if (this._nodes[targetNodeIndex - 1] instanceof TextNode\n            && this._nodes[targetNodeIndex] instanceof TextNode) {\n          const newOffset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n          (this._nodes[targetNodeIndex - 1] as TextNode).str\n              += (this._nodes[targetNodeIndex] as TextNode).str;\n          this._nodes.splice(targetNodeIndex, 1);\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = newOffset;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof FieldNode\n            && this._nodes[targetNodeIndex] instanceof FieldNode) {\n          const glue = new TextNode(' + ');\n          this._nodes.splice(targetNodeIndex, 0, glue);\n          updatedEvent.node = glue;\n          updatedEvent.offset = 3;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n        } else if (this._nodes[targetNodeIndex] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex];\n          updatedEvent.offset = 0;\n        }\n      } else {\n        // end of line\n        updatedEvent = undefined;\n      }\n    } else {\n      const targetString = (targetNode as TextNode).str;\n      (targetNode as TextNode).str = offset === 0 ? targetString.substr(1)\n        : targetString.substring(0, offset) + targetString.substring(offset + 1);\n      if ((targetNode as TextNode).str.length === 0) {\n        this.cfg.errorService.info('At least one space is required between field references.', null);\n        return;\n      }\n      updatedEvent.node = targetNode;\n      updatedEvent.offset = offset;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  /**\n   * Replace the content of the last text node with a substring terminating at the\n   * specified index.\n   *\n   * @param index\n   */\n  clearToEnd(index: number): void {\n    const last = this.getLastNode();\n    if (!(last instanceof TextNode)) {\n      return;\n    }\n    last.str = last.str.substring(0, index);\n  }\n\n  /**\n   * Reflect mapped source fields to the field references in the expression.\n   * Selected source fields are inserted into or appended to the expression,\n   * and unselected source fields are removed from expression.\n   *\n   * @param mapping Corresponding MappingModel object\n   */\n  updateFieldReference(mapping: MappingModel, insertPosition?: string, offset?: number) {\n    const mappedFields = mapping.getUserMappedFields(true);\n    const toAdd: MappedField[] = [];\n    const toRemove: MappedField[] = [];\n    let fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n\n    // Remove the field from the expression if unmapped.\n    for (const node of fieldNodes) {\n      if (mappedFields.includes(node.field)) {\n        continue;\n      }\n      const index = this._nodes.indexOf(node);\n      this._nodes.splice(index, 1);\n      if (this._nodes.length > index && this._nodes[index - 1] instanceof TextNode\n          && this._nodes[index] instanceof TextNode) {\n        (this._nodes[index - 1] as TextNode).str += (this._nodes[index] as TextNode).str;\n        this._nodes.splice(index, 1);\n      }\n    }\n\n    // Add the specified field into the expression - append if no insert position is specified.\n    fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n    for (const mfield of mappedFields) {\n      if (!fieldNodes.find(n => n.field === mfield)) {\n        if (insertPosition) {\n          this.insertNodes([new FieldNode(this.mapping, mfield)], insertPosition, offset);\n        } else {\n          this.appendFieldNode(mfield);\n        }\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  clear() {\n    this._nodes = [];\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  toText() {\n    return this.textCache;\n  }\n\n  toHTML() {\n    return this.htmlCache;\n  }\n\n  private updateCache() {\n    let answer = '';\n    this._nodes.forEach(node => answer += node.toText());\n    this.textCache = answer;\n    answer = '';\n    this._nodes.forEach(node => answer += node.toHTML());\n    this.htmlCache = answer;\n  }\n\n  private createNodesFromText(text: string): ExpressionNode[] {\n    const answer = [];\n    let position = -1;\n    let fn = null;\n\n    while ((position = text.search(/\\$\\{[0-9]+\\}/)) !== -1 ) {\n      if (position !== 0) {\n        answer.push(new TextNode(text.substring(0, position)));\n      }\n      const index = parseInt(text.substring(position + 2, text.indexOf('}')), 10);\n      fn = new FieldNode(this.mapping, null, index);\n      if (fn.field === null) {\n        this.cfg.errorService.error('Unable to map expression index to field node.', index);\n      } else {\n        answer.push(fn);\n      }\n      text = text.substring(text.indexOf('}') + 1);\n    }\n    if (text.length > 0) {\n      answer.push(new TextNode(text));\n    }\n    return answer;\n  }\n\n  private appendFieldNode(mfield: MappedField) {\n    const lastNode = this._nodes.pop();\n    if (lastNode instanceof FieldNode) {\n        this._nodes.push(lastNode, new TextNode(' + '));\n    } else if (lastNode instanceof TextNode) {\n      if (lastNode.str.length === 0) {\n        this._nodes.push(new TextNode(' + '));\n      } else {\n        this._nodes.push(lastNode);\n      }\n    }\n    this._nodes.push(new FieldNode(this.mapping, mfield));\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpressionUpdatedEvent.html":{"url":"classes/ExpressionUpdatedEvent.html","title":"class - ExpressionUpdatedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpressionUpdatedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                node\n                            \n                            \n                                    Public\n                                    Optional\n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(node?: ExpressionNode, offset?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                  \n                                                        \n                                                                        ExpressionNode\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        offset\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            node\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExpressionNode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            offset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { MappedField, MappingModel } from './mapping.model';\nimport { Subject } from 'rxjs';\n\nexport class ExpressionUpdatedEvent {\n  constructor(public node?: ExpressionNode, public offset?: number) {}\n}\n\nexport abstract class ExpressionNode {\n  protected static sequence = 0;\n  protected uuid;\n\n  constructor(prefix: string) {\n    this.uuid = prefix + ExpressionNode.sequence++;\n  }\n\n  getUuid() {\n    return this.uuid;\n  }\n\n  abstract toText(): string;\n  abstract toHTML(): string;\n}\n\nexport class TextNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-text-';\n\n  constructor(public str: string) {\n    super(TextNode.PREFIX);\n  }\n\n  toText(): string {\n    return this.str;\n  }\n\n  toHTML(): string {\n    return `${this.str.replace(/ /g, '&nbsp;')}`;\n  }\n\n}\n\nexport class FieldNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-field-';\n\n  constructor(private mapping: MappingModel, public field?: MappedField, private index?: number) {\n    super(FieldNode.PREFIX);\n    if (!field) {\n      this.field = mapping.getMappedFieldForIndex((index + 1).toString(), true);\n    }\n    if (!index) {\n      this.index = this.mapping.getIndexForMappedField(this.field) - 1;\n    }\n  }\n\n  toText(): string {\n    return '${' + this.index + '}';\n  }\n\n  toHTML(): string {\n    if (this.field) {\n      return `${this.field.field.name}`;\n    } else {\n      return `N/A`;\n    }\n  }\n\n}\n\nexport class ExpressionModel {\n  expressionUpdatedSource = new Subject();\n  expressionUpdated$ = this.expressionUpdatedSource.asObservable();\n\n  private _nodes: ExpressionNode[] = [];\n  private textCache = '';\n  private htmlCache = '';\n\n  constructor(private mapping: MappingModel, private cfg: ConfigModel) {}\n\n  generateInitialExpression() {\n    this.mapping.getUserMappedFields(true).forEach(f => this.appendFieldNode(f));\n  }\n\n  get nodes(): ReadonlyArray {\n    return this._nodes;\n  }\n\n  getLastNodeIndex() {\n    return this._nodes.length - 1;\n  }\n\n  getLastNode() {\n    return this._nodes[this.getLastNodeIndex()];\n  }\n\n  getNode(nodeId?: string): any {\n    if (!nodeId) {\n      return this.getLastNode();\n    }\n    return this._nodes.find(n => n.getUuid() === nodeId);\n  }\n\n  setConfigModel(cfg: ConfigModel) {\n    this.cfg = cfg;\n  }\n\n  /**\n   * Clear all text from the specified TextNode offset range or from the '@' to the end\n   * of the text node if no node ID is specified.\n   *\n   * Return the new UUID position indicator string or null.\n   *\n   * @param nodeId\n   * @param startOffset\n   * @param endOffset\n   */\n  clearText(nodeId?: string, startOffset?: number, endOffset?: number): TextNode {\n    let targetNode: TextNode;\n    let targetNodeIndex = 0;\n    if (!nodeId) {\n      const lastNode = this.getLastNode();\n      if (!(lastNode instanceof TextNode)) {\n        return null;\n      }\n      const keyPos = lastNode.str.indexOf('@');\n      targetNodeIndex = this._nodes.indexOf(lastNode);\n      targetNode = lastNode;\n      targetNode.str = targetNode.str.substring(0, keyPos);\n    } else {\n      const node = this._nodes.find(n => n.getUuid() === nodeId);\n      if (!(node instanceof TextNode) || !endOffset) {\n        return null;\n      }\n      targetNode = node;\n      targetNodeIndex = this._nodes.indexOf(targetNode);\n      const cleanStr = targetNode.str.replace(targetNode.str.substring(startOffset, endOffset), '');\n      targetNode.str = cleanStr;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n    return targetNode;\n  }\n\n  /**\n   * Insert text into expression at specified position. If nodeId is not specified,\n   * it will be added to the end of expression. It parses the string\n   * and insert a set of TextNode & FieldNode if it contains field reference like ${0},\n   * otherwise just one TextNode.\n   * This emits ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   * @param str string to insert\n   * @param nodeId target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertText(str: string, nodeId?: string, offset?: number) {\n    this.insertNodes(this.createNodesFromText(str), nodeId, offset);\n  }\n\n  /**\n   * Insert an array of ExpressionNodes at the specified position. If insertPosition is\n   * not specified the nodes will be appended to the end of the expression.\n   * This emits an ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   *\n   * @param newNodes an array of ExpressionNode to add\n   * @param insertPosition target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertNodes(newNodes: ExpressionNode[], insertPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!insertPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        this._nodes.push(...newNodes);\n      } else if (last instanceof TextNode && newNodes[0] instanceof TextNode) {\n        const lastTextNode = last as TextNode;\n        (last as TextNode).str += (newNodes[0] as TextNode).str;\n        newNodes.splice(0, 1, last);\n        this._nodes.splice(this.getLastNodeIndex(), 1, ...newNodes);\n      } else if (last instanceof FieldNode && newNodes[0] instanceof FieldNode) {\n        this._nodes.splice(this.getLastNodeIndex(), 0, new TextNode(' + '), ...newNodes);\n      } else {\n        this._nodes.push(...newNodes);\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    const updatedEvent = new ExpressionUpdatedEvent();\n    const targetNode = this._nodes.find(n => n.getUuid() === insertPosition);\n    const targetNodeIndex = this._nodes.indexOf(targetNode);\n\n    if (targetNode instanceof TextNode) {\n      if (offset === undefined || offset === null || offset  0) {\n        if (newNodes[0] instanceof TextNode) {\n          targetNode.str = pre + (newNodes[0] as TextNode).str;\n          newNodes.splice(0, 1, targetNode);\n        } else {\n          targetNode.str = pre;\n          newNodes.splice(0, 0, targetNode);\n        }\n      }\n      if (post.length > 0) {\n        const lastNewNodeIndex = newNodes.length - 1;\n        if (newNodes[lastNewNodeIndex] instanceof TextNode) {\n          let mergedTextNode: TextNode;\n          if (pre.length > 0) {\n            mergedTextNode = newNodes[lastNewNodeIndex] as TextNode;\n            mergedTextNode.str += post;\n          } else {\n            mergedTextNode = targetNode;\n            mergedTextNode.str = (newNodes[lastNewNodeIndex]as TextNode).str + post;\n          }\n          newNodes.splice(lastNewNodeIndex, 1, mergedTextNode);\n        } else {\n          if (pre.length > 0) {\n            newNodes.push(new TextNode(post));\n          } else {\n            targetNode.str = post;\n            newNodes.push(targetNode);\n          }\n        }\n      }\n      this._nodes.splice(targetNodeIndex, 1, ...newNodes);\n      const lastAddedIndex = targetNodeIndex + newNodes.length - 1;\n      if (this._nodes[lastAddedIndex] instanceof FieldNode\n          && this.nodes[lastAddedIndex + 1] instanceof FieldNode) {\n        // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n        const space = new TextNode(' + ');\n        this._nodes.splice(lastAddedIndex + 1, 0, space);\n        updatedEvent.node = space;\n        updatedEvent.offset = 1;\n      } else if (this._nodes[lastAddedIndex] instanceof FieldNode) {\n        updatedEvent.node = this._nodes[lastAddedIndex + 1];\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = this._nodes[lastAddedIndex];\n        updatedEvent.offset = (this._nodes[lastAddedIndex] as TextNode).str.length - post.length;\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next(updatedEvent);\n      return;\n    }\n\n    // targetNode is a FieldNode - insert the text before it if offset is 0, otherwise after it\n    if (offset !== 0 && newNodes[0] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      newNodes.splice(0, 0, new TextNode(' + '));\n    }\n    const nextNodeIndex = offset === 0 ? targetNodeIndex : targetNodeIndex + 1;\n    const nextNode = this._nodes[nextNodeIndex];\n    if (nextNode instanceof TextNode && newNodes[newNodes.length - 1] instanceof TextNode) {\n      updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      nextNode.str = (newNodes[newNodes.length - 1] as TextNode).str + (nextNode as TextNode).str;\n      newNodes.pop();\n      this._nodes.splice(nextNodeIndex, 1, ...newNodes);\n      updatedEvent.node = nextNode;\n    } else if (nextNode instanceof FieldNode && newNodes[newNodes.length - 1] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      const space = new TextNode(' + ');\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes, space);\n      updatedEvent.node = space;\n      updatedEvent.offset = 1;\n    } else {\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes);\n      if (nextNode instanceof TextNode) {\n        updatedEvent.node = nextNode;\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = newNodes[newNodes.length - 1];\n        updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  removeToken(lastFieldRefRemoved: (removed: MappedField) => void, tokenPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!tokenPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        return;\n      }\n      if (last instanceof FieldNode) {\n        const removed = this._nodes.pop() as FieldNode;\n        if (!this._nodes.find(n => n instanceof FieldNode && n.field === removed.field)) {\n          lastFieldRefRemoved(removed.field);\n        }\n      } else if (last instanceof TextNode) {\n        if (last.str.length > 0) {\n          last.str = last.str.substring(0, last.str.length - 1);\n        } else {\n          this._nodes.pop();\n        }\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    let updatedEvent = new ExpressionUpdatedEvent();\n    let targetNode = this._nodes.find(n => n.getUuid() === tokenPosition);\n    let targetNodeIndex = this._nodes.indexOf(targetNode);\n    if (!targetNode || offset === -1) {\n      if (targetNodeIndex  n instanceof FieldNode && n.field === removed.field)) {\n        lastFieldRefRemoved(removed.field);\n      }\n      if (this._nodes.length > targetNodeIndex) {\n        if (this._nodes[targetNodeIndex - 1] instanceof TextNode\n            && this._nodes[targetNodeIndex] instanceof TextNode) {\n          const newOffset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n          (this._nodes[targetNodeIndex - 1] as TextNode).str\n              += (this._nodes[targetNodeIndex] as TextNode).str;\n          this._nodes.splice(targetNodeIndex, 1);\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = newOffset;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof FieldNode\n            && this._nodes[targetNodeIndex] instanceof FieldNode) {\n          const glue = new TextNode(' + ');\n          this._nodes.splice(targetNodeIndex, 0, glue);\n          updatedEvent.node = glue;\n          updatedEvent.offset = 3;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n        } else if (this._nodes[targetNodeIndex] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex];\n          updatedEvent.offset = 0;\n        }\n      } else {\n        // end of line\n        updatedEvent = undefined;\n      }\n    } else {\n      const targetString = (targetNode as TextNode).str;\n      (targetNode as TextNode).str = offset === 0 ? targetString.substr(1)\n        : targetString.substring(0, offset) + targetString.substring(offset + 1);\n      if ((targetNode as TextNode).str.length === 0) {\n        this.cfg.errorService.info('At least one space is required between field references.', null);\n        return;\n      }\n      updatedEvent.node = targetNode;\n      updatedEvent.offset = offset;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  /**\n   * Replace the content of the last text node with a substring terminating at the\n   * specified index.\n   *\n   * @param index\n   */\n  clearToEnd(index: number): void {\n    const last = this.getLastNode();\n    if (!(last instanceof TextNode)) {\n      return;\n    }\n    last.str = last.str.substring(0, index);\n  }\n\n  /**\n   * Reflect mapped source fields to the field references in the expression.\n   * Selected source fields are inserted into or appended to the expression,\n   * and unselected source fields are removed from expression.\n   *\n   * @param mapping Corresponding MappingModel object\n   */\n  updateFieldReference(mapping: MappingModel, insertPosition?: string, offset?: number) {\n    const mappedFields = mapping.getUserMappedFields(true);\n    const toAdd: MappedField[] = [];\n    const toRemove: MappedField[] = [];\n    let fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n\n    // Remove the field from the expression if unmapped.\n    for (const node of fieldNodes) {\n      if (mappedFields.includes(node.field)) {\n        continue;\n      }\n      const index = this._nodes.indexOf(node);\n      this._nodes.splice(index, 1);\n      if (this._nodes.length > index && this._nodes[index - 1] instanceof TextNode\n          && this._nodes[index] instanceof TextNode) {\n        (this._nodes[index - 1] as TextNode).str += (this._nodes[index] as TextNode).str;\n        this._nodes.splice(index, 1);\n      }\n    }\n\n    // Add the specified field into the expression - append if no insert position is specified.\n    fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n    for (const mfield of mappedFields) {\n      if (!fieldNodes.find(n => n.field === mfield)) {\n        if (insertPosition) {\n          this.insertNodes([new FieldNode(this.mapping, mfield)], insertPosition, offset);\n        } else {\n          this.appendFieldNode(mfield);\n        }\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  clear() {\n    this._nodes = [];\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  toText() {\n    return this.textCache;\n  }\n\n  toHTML() {\n    return this.htmlCache;\n  }\n\n  private updateCache() {\n    let answer = '';\n    this._nodes.forEach(node => answer += node.toText());\n    this.textCache = answer;\n    answer = '';\n    this._nodes.forEach(node => answer += node.toHTML());\n    this.htmlCache = answer;\n  }\n\n  private createNodesFromText(text: string): ExpressionNode[] {\n    const answer = [];\n    let position = -1;\n    let fn = null;\n\n    while ((position = text.search(/\\$\\{[0-9]+\\}/)) !== -1 ) {\n      if (position !== 0) {\n        answer.push(new TextNode(text.substring(0, position)));\n      }\n      const index = parseInt(text.substring(position + 2, text.indexOf('}')), 10);\n      fn = new FieldNode(this.mapping, null, index);\n      if (fn.field === null) {\n        this.cfg.errorService.error('Unable to map expression index to field node.', index);\n      } else {\n        answer.push(fn);\n      }\n      text = text.substring(text.indexOf('}') + 1);\n    }\n    if (text.length > 0) {\n      answer.push(new TextNode(text));\n    }\n    return answer;\n  }\n\n  private appendFieldNode(mfield: MappedField) {\n    const lastNode = this._nodes.pop();\n    if (lastNode instanceof FieldNode) {\n        this._nodes.push(lastNode, new TextNode(' + '));\n    } else if (lastNode instanceof TextNode) {\n      if (lastNode.str.length === 0) {\n        this._nodes.push(new TextNode(' + '));\n      } else {\n        this._nodes.push(lastNode);\n      }\n    }\n    this._nodes.push(new FieldNode(this.mapping, mfield));\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldAction.html":{"url":"classes/FieldAction.html","title":"class - FieldAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                argumentValues\n                            \n                            \n                                    Static\n                                combineActionConfig\n                            \n                            \n                                definition\n                            \n                            \n                                isSeparateOrCombineMode\n                            \n                            \n                                name\n                            \n                            \n                                    Static\n                                separateActionConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createSeparateCombineFieldAction\n                            \n                            \n                                getArgumentValue\n                            \n                            \n                                setArgumentValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            argumentValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldActionArgumentValue[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:215\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            combineActionConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldActionDefinition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:209\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            definition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldActionDefinition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:214\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSeparateOrCombineMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:212\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:213\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            separateActionConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldActionDefinition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:210\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createSeparateCombineFieldAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createSeparateCombineFieldAction(separateMode: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    separateMode\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldAction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getArgumentValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetArgumentValue(argumentName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:235\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argumentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldActionArgumentValue\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setArgumentValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetArgumentValue(argumentName: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argumentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DocumentDefinition } from './document-definition.model';\nimport { MappingModel } from './mapping.model';\nimport { Field } from './field.model';\n\nexport class FieldActionArgument {\n  name: string = null;\n  type = 'STRING';\n  values = null;\n  serviceObject: any = new Object();\n}\n\nexport class FieldActionArgumentValue {\n  name: string = null;\n  value: string = null;\n}\n\nexport enum Multiplicity {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  ZERO_TO_ONE = 'ZERO_TO_ONE'\n}\n\nexport class FieldActionDefinition {\n  name: string;\n  isCustom: boolean;\n  arguments: FieldActionArgument[] = [];\n  method: string;\n  sourceType = 'undefined';\n  targetType = 'undefined';\n  multiplicity = Multiplicity.ONE_TO_ONE;\n  serviceObject: any = new Object();\n\n  /**\n   * Return true if the action's source/target types and collection types match the respective source/target\n   * field properties for source transformations, or matches the respective target field properties only for\n   * a target transformation.\n   *\n   * Note - source-side only transformations are permitted so the target field may be undefined.\n   *\n   * @param mapping\n   */\n  appliesToField(mapping: MappingModel, isSource: boolean): boolean {\n\n    if (mapping == null) {\n      return false;\n    }\n    const selectedSourceField: Field = this.getActualField(mapping, true);\n    const selectedTargetField: Field = this.getActualField(mapping, false);\n\n    if ((isSource && selectedSourceField == null) || (!isSource) && selectedTargetField == null) {\n      return false;\n    }\n\n    return isSource ? this.appliesToSourceField(mapping, selectedSourceField)\n     : this.appliesToTargetField(mapping, selectedTargetField);\n  }\n\n  populateFieldAction(action: FieldAction): void {\n    action.name = this.name;\n    action.definition = this;\n\n    // Use the parsed values if present, otherwise set to '0'.\n    if (action.argumentValues == null || action.argumentValues.length === 0) {\n      action.argumentValues = [];\n      for (const arg of this.arguments) {\n\n        // Default the input field to 0 for numerics\n        if (['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(arg.type) !== -1) {\n          action.setArgumentValue(arg.name, '0');\n        } else {\n          action.setArgumentValue(arg.name, '');\n        }\n      }\n    }\n  }\n\n  getArgumentForName(name: string): FieldActionArgument {\n    for (const argument of this.arguments) {\n      if (argument.name === name) {\n        return argument;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Return the first non-padding field in either the source or target mappings.\n   *\n   * @param mapping\n   * @param isSource\n   */\n  private getActualField(mapping: MappingModel, isSource: boolean): Field {\n    let targetField: Field = null;\n    for (targetField of mapping.getFields(isSource)) {\n      if ((targetField.name !== '')) {\n        break;\n      }\n    }\n    return targetField;\n  }\n\n  /**\n   * Return true if the candidate type and selected type are generically a date, false otherwise.\n   *\n   * @param candidateType\n   * @param selectedType\n   */\n  private matchesDate(candidateType: string, selectedType: string): boolean {\n    return ((candidateType === 'ANY') ||\n      (candidateType === 'ANY_DATE' &&\n        ['DATE', 'DATE_TIME', 'DATE_TIME_TZ', 'TIME'].indexOf(selectedType) !== -1));\n  }\n\n  /**\n   * Return true if the candidate type and selected type are generically numeric, false otherwise.\n   *\n   * @param candidateType\n   * @param selectedType\n   */\n  private matchesNumeric(candidateType: string, selectedType: string): boolean {\n    return ((candidateType === 'ANY') ||\n      (candidateType === 'NUMBER' &&\n        ['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(selectedType) !== -1));\n  }\n\n  /**\n   * Check if it could be applied to source field.\n   * @param mapping FieldMappingPair\n   * @param selectedSourceField selected source field\n   */\n  private appliesToSourceField(mapping: MappingModel, selectedSourceField: Field): boolean {\n\n    if ([Multiplicity.ONE_TO_MANY, Multiplicity.ZERO_TO_ONE].includes(this.multiplicity)) {\n      return false;\n    } else if (this.multiplicity === Multiplicity.MANY_TO_ONE) {\n      // MANY_TO_ONE field action only applies to collection field or FieldGroup\n      return false;\n    }\n\n    // Check for matching types - date.\n    if (this.matchesDate(this.sourceType, selectedSourceField.type)) {\n      return true;\n    }\n\n    // Check for matching types - numeric.\n    if (this.matchesNumeric(this.sourceType, selectedSourceField.type)) {\n      return true;\n    }\n\n    // First check if the source types match.\n    if ((this.sourceType === 'ANY') || (selectedSourceField.type === this.sourceType)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if it could be applied for target field. Target type may not change.\n   * @param mapping FieldMappingPair\n   * @param selectedTargetField selected target field\n   */\n  private appliesToTargetField(mapping: MappingModel, selectedTargetField: Field): boolean {\n    if (selectedTargetField == null) {\n      return false;\n    }\n\n    if (this.multiplicity !== Multiplicity.ONE_TO_ONE) {\n      return false;\n    }\n\n    // Check for matching types - date.\n    if (this.matchesDate(this.sourceType, selectedTargetField.type) && this.matchesDate(this.targetType, selectedTargetField.type)) {\n      return true;\n    }\n\n    // Check for matching types - numeric.\n    if (this.matchesNumeric(this.sourceType, selectedTargetField.type) && this.matchesNumeric(this.targetType, selectedTargetField.type)) {\n      return true;\n    }\n\n    if (this.sourceType !== 'ANY' && this.sourceType !== selectedTargetField.type) {\n      return false;\n    }\n\n    // All other types must match the selected field types with the candidate field action types.\n    return (this.targetType === 'ANY' || selectedTargetField.type === this.targetType);\n  }\n\n}\n\nexport class FieldAction {\n  static combineActionConfig: FieldActionDefinition = null;\n  static separateActionConfig: FieldActionDefinition = null;\n\n  isSeparateOrCombineMode = false;\n  name: string;\n  definition: FieldActionDefinition = null;\n  argumentValues: FieldActionArgumentValue[] = [];\n\n  static createSeparateCombineFieldAction(separateMode: boolean) {\n    if (FieldAction.combineActionConfig == null) {\n      FieldAction.combineActionConfig = new FieldActionDefinition();\n      FieldAction.combineActionConfig.name = 'Concatenate';\n      FieldAction.separateActionConfig = new FieldActionDefinition();\n      FieldAction.separateActionConfig.name = 'Split';\n    }\n\n    const fieldAction: FieldAction = new FieldAction();\n    FieldAction.combineActionConfig.populateFieldAction(fieldAction);\n    if (separateMode) {\n      FieldAction.separateActionConfig.populateFieldAction(fieldAction);\n    }\n    fieldAction.isSeparateOrCombineMode = true;\n\n    return fieldAction;\n  }\n\n  getArgumentValue(argumentName: string): FieldActionArgumentValue {\n    for (const argValue of this.argumentValues) {\n      if (argValue.name === argumentName) {\n        return argValue;\n      }\n    }\n    const newArgValue: FieldActionArgumentValue = new FieldActionArgumentValue();\n    newArgValue.name = argumentName;\n    newArgValue.value = '0';\n    this.argumentValues.push(newArgValue);\n    return newArgValue;\n  }\n\n  setArgumentValue(argumentName: string, value: string): void {\n    this.getArgumentValue(argumentName).value = value;\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldActionArgument.html":{"url":"classes/FieldActionArgument.html","title":"class - FieldActionArgument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldActionArgument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                serviceObject\n                            \n                            \n                                type\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : new Object()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            values\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DocumentDefinition } from './document-definition.model';\nimport { MappingModel } from './mapping.model';\nimport { Field } from './field.model';\n\nexport class FieldActionArgument {\n  name: string = null;\n  type = 'STRING';\n  values = null;\n  serviceObject: any = new Object();\n}\n\nexport class FieldActionArgumentValue {\n  name: string = null;\n  value: string = null;\n}\n\nexport enum Multiplicity {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  ZERO_TO_ONE = 'ZERO_TO_ONE'\n}\n\nexport class FieldActionDefinition {\n  name: string;\n  isCustom: boolean;\n  arguments: FieldActionArgument[] = [];\n  method: string;\n  sourceType = 'undefined';\n  targetType = 'undefined';\n  multiplicity = Multiplicity.ONE_TO_ONE;\n  serviceObject: any = new Object();\n\n  /**\n   * Return true if the action's source/target types and collection types match the respective source/target\n   * field properties for source transformations, or matches the respective target field properties only for\n   * a target transformation.\n   *\n   * Note - source-side only transformations are permitted so the target field may be undefined.\n   *\n   * @param mapping\n   */\n  appliesToField(mapping: MappingModel, isSource: boolean): boolean {\n\n    if (mapping == null) {\n      return false;\n    }\n    const selectedSourceField: Field = this.getActualField(mapping, true);\n    const selectedTargetField: Field = this.getActualField(mapping, false);\n\n    if ((isSource && selectedSourceField == null) || (!isSource) && selectedTargetField == null) {\n      return false;\n    }\n\n    return isSource ? this.appliesToSourceField(mapping, selectedSourceField)\n     : this.appliesToTargetField(mapping, selectedTargetField);\n  }\n\n  populateFieldAction(action: FieldAction): void {\n    action.name = this.name;\n    action.definition = this;\n\n    // Use the parsed values if present, otherwise set to '0'.\n    if (action.argumentValues == null || action.argumentValues.length === 0) {\n      action.argumentValues = [];\n      for (const arg of this.arguments) {\n\n        // Default the input field to 0 for numerics\n        if (['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(arg.type) !== -1) {\n          action.setArgumentValue(arg.name, '0');\n        } else {\n          action.setArgumentValue(arg.name, '');\n        }\n      }\n    }\n  }\n\n  getArgumentForName(name: string): FieldActionArgument {\n    for (const argument of this.arguments) {\n      if (argument.name === name) {\n        return argument;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Return the first non-padding field in either the source or target mappings.\n   *\n   * @param mapping\n   * @param isSource\n   */\n  private getActualField(mapping: MappingModel, isSource: boolean): Field {\n    let targetField: Field = null;\n    for (targetField of mapping.getFields(isSource)) {\n      if ((targetField.name !== '')) {\n        break;\n      }\n    }\n    return targetField;\n  }\n\n  /**\n   * Return true if the candidate type and selected type are generically a date, false otherwise.\n   *\n   * @param candidateType\n   * @param selectedType\n   */\n  private matchesDate(candidateType: string, selectedType: string): boolean {\n    return ((candidateType === 'ANY') ||\n      (candidateType === 'ANY_DATE' &&\n        ['DATE', 'DATE_TIME', 'DATE_TIME_TZ', 'TIME'].indexOf(selectedType) !== -1));\n  }\n\n  /**\n   * Return true if the candidate type and selected type are generically numeric, false otherwise.\n   *\n   * @param candidateType\n   * @param selectedType\n   */\n  private matchesNumeric(candidateType: string, selectedType: string): boolean {\n    return ((candidateType === 'ANY') ||\n      (candidateType === 'NUMBER' &&\n        ['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(selectedType) !== -1));\n  }\n\n  /**\n   * Check if it could be applied to source field.\n   * @param mapping FieldMappingPair\n   * @param selectedSourceField selected source field\n   */\n  private appliesToSourceField(mapping: MappingModel, selectedSourceField: Field): boolean {\n\n    if ([Multiplicity.ONE_TO_MANY, Multiplicity.ZERO_TO_ONE].includes(this.multiplicity)) {\n      return false;\n    } else if (this.multiplicity === Multiplicity.MANY_TO_ONE) {\n      // MANY_TO_ONE field action only applies to collection field or FieldGroup\n      return false;\n    }\n\n    // Check for matching types - date.\n    if (this.matchesDate(this.sourceType, selectedSourceField.type)) {\n      return true;\n    }\n\n    // Check for matching types - numeric.\n    if (this.matchesNumeric(this.sourceType, selectedSourceField.type)) {\n      return true;\n    }\n\n    // First check if the source types match.\n    if ((this.sourceType === 'ANY') || (selectedSourceField.type === this.sourceType)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if it could be applied for target field. Target type may not change.\n   * @param mapping FieldMappingPair\n   * @param selectedTargetField selected target field\n   */\n  private appliesToTargetField(mapping: MappingModel, selectedTargetField: Field): boolean {\n    if (selectedTargetField == null) {\n      return false;\n    }\n\n    if (this.multiplicity !== Multiplicity.ONE_TO_ONE) {\n      return false;\n    }\n\n    // Check for matching types - date.\n    if (this.matchesDate(this.sourceType, selectedTargetField.type) && this.matchesDate(this.targetType, selectedTargetField.type)) {\n      return true;\n    }\n\n    // Check for matching types - numeric.\n    if (this.matchesNumeric(this.sourceType, selectedTargetField.type) && this.matchesNumeric(this.targetType, selectedTargetField.type)) {\n      return true;\n    }\n\n    if (this.sourceType !== 'ANY' && this.sourceType !== selectedTargetField.type) {\n      return false;\n    }\n\n    // All other types must match the selected field types with the candidate field action types.\n    return (this.targetType === 'ANY' || selectedTargetField.type === this.targetType);\n  }\n\n}\n\nexport class FieldAction {\n  static combineActionConfig: FieldActionDefinition = null;\n  static separateActionConfig: FieldActionDefinition = null;\n\n  isSeparateOrCombineMode = false;\n  name: string;\n  definition: FieldActionDefinition = null;\n  argumentValues: FieldActionArgumentValue[] = [];\n\n  static createSeparateCombineFieldAction(separateMode: boolean) {\n    if (FieldAction.combineActionConfig == null) {\n      FieldAction.combineActionConfig = new FieldActionDefinition();\n      FieldAction.combineActionConfig.name = 'Concatenate';\n      FieldAction.separateActionConfig = new FieldActionDefinition();\n      FieldAction.separateActionConfig.name = 'Split';\n    }\n\n    const fieldAction: FieldAction = new FieldAction();\n    FieldAction.combineActionConfig.populateFieldAction(fieldAction);\n    if (separateMode) {\n      FieldAction.separateActionConfig.populateFieldAction(fieldAction);\n    }\n    fieldAction.isSeparateOrCombineMode = true;\n\n    return fieldAction;\n  }\n\n  getArgumentValue(argumentName: string): FieldActionArgumentValue {\n    for (const argValue of this.argumentValues) {\n      if (argValue.name === argumentName) {\n        return argValue;\n      }\n    }\n    const newArgValue: FieldActionArgumentValue = new FieldActionArgumentValue();\n    newArgValue.name = argumentName;\n    newArgValue.value = '0';\n    this.argumentValues.push(newArgValue);\n    return newArgValue;\n  }\n\n  setArgumentValue(argumentName: string, value: string): void {\n    this.getArgumentValue(argumentName).value = value;\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldActionArgumentValue.html":{"url":"classes/FieldActionArgumentValue.html","title":"class - FieldActionArgumentValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldActionArgumentValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DocumentDefinition } from './document-definition.model';\nimport { MappingModel } from './mapping.model';\nimport { Field } from './field.model';\n\nexport class FieldActionArgument {\n  name: string = null;\n  type = 'STRING';\n  values = null;\n  serviceObject: any = new Object();\n}\n\nexport class FieldActionArgumentValue {\n  name: string = null;\n  value: string = null;\n}\n\nexport enum Multiplicity {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  ZERO_TO_ONE = 'ZERO_TO_ONE'\n}\n\nexport class FieldActionDefinition {\n  name: string;\n  isCustom: boolean;\n  arguments: FieldActionArgument[] = [];\n  method: string;\n  sourceType = 'undefined';\n  targetType = 'undefined';\n  multiplicity = Multiplicity.ONE_TO_ONE;\n  serviceObject: any = new Object();\n\n  /**\n   * Return true if the action's source/target types and collection types match the respective source/target\n   * field properties for source transformations, or matches the respective target field properties only for\n   * a target transformation.\n   *\n   * Note - source-side only transformations are permitted so the target field may be undefined.\n   *\n   * @param mapping\n   */\n  appliesToField(mapping: MappingModel, isSource: boolean): boolean {\n\n    if (mapping == null) {\n      return false;\n    }\n    const selectedSourceField: Field = this.getActualField(mapping, true);\n    const selectedTargetField: Field = this.getActualField(mapping, false);\n\n    if ((isSource && selectedSourceField == null) || (!isSource) && selectedTargetField == null) {\n      return false;\n    }\n\n    return isSource ? this.appliesToSourceField(mapping, selectedSourceField)\n     : this.appliesToTargetField(mapping, selectedTargetField);\n  }\n\n  populateFieldAction(action: FieldAction): void {\n    action.name = this.name;\n    action.definition = this;\n\n    // Use the parsed values if present, otherwise set to '0'.\n    if (action.argumentValues == null || action.argumentValues.length === 0) {\n      action.argumentValues = [];\n      for (const arg of this.arguments) {\n\n        // Default the input field to 0 for numerics\n        if (['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(arg.type) !== -1) {\n          action.setArgumentValue(arg.name, '0');\n        } else {\n          action.setArgumentValue(arg.name, '');\n        }\n      }\n    }\n  }\n\n  getArgumentForName(name: string): FieldActionArgument {\n    for (const argument of this.arguments) {\n      if (argument.name === name) {\n        return argument;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Return the first non-padding field in either the source or target mappings.\n   *\n   * @param mapping\n   * @param isSource\n   */\n  private getActualField(mapping: MappingModel, isSource: boolean): Field {\n    let targetField: Field = null;\n    for (targetField of mapping.getFields(isSource)) {\n      if ((targetField.name !== '')) {\n        break;\n      }\n    }\n    return targetField;\n  }\n\n  /**\n   * Return true if the candidate type and selected type are generically a date, false otherwise.\n   *\n   * @param candidateType\n   * @param selectedType\n   */\n  private matchesDate(candidateType: string, selectedType: string): boolean {\n    return ((candidateType === 'ANY') ||\n      (candidateType === 'ANY_DATE' &&\n        ['DATE', 'DATE_TIME', 'DATE_TIME_TZ', 'TIME'].indexOf(selectedType) !== -1));\n  }\n\n  /**\n   * Return true if the candidate type and selected type are generically numeric, false otherwise.\n   *\n   * @param candidateType\n   * @param selectedType\n   */\n  private matchesNumeric(candidateType: string, selectedType: string): boolean {\n    return ((candidateType === 'ANY') ||\n      (candidateType === 'NUMBER' &&\n        ['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(selectedType) !== -1));\n  }\n\n  /**\n   * Check if it could be applied to source field.\n   * @param mapping FieldMappingPair\n   * @param selectedSourceField selected source field\n   */\n  private appliesToSourceField(mapping: MappingModel, selectedSourceField: Field): boolean {\n\n    if ([Multiplicity.ONE_TO_MANY, Multiplicity.ZERO_TO_ONE].includes(this.multiplicity)) {\n      return false;\n    } else if (this.multiplicity === Multiplicity.MANY_TO_ONE) {\n      // MANY_TO_ONE field action only applies to collection field or FieldGroup\n      return false;\n    }\n\n    // Check for matching types - date.\n    if (this.matchesDate(this.sourceType, selectedSourceField.type)) {\n      return true;\n    }\n\n    // Check for matching types - numeric.\n    if (this.matchesNumeric(this.sourceType, selectedSourceField.type)) {\n      return true;\n    }\n\n    // First check if the source types match.\n    if ((this.sourceType === 'ANY') || (selectedSourceField.type === this.sourceType)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if it could be applied for target field. Target type may not change.\n   * @param mapping FieldMappingPair\n   * @param selectedTargetField selected target field\n   */\n  private appliesToTargetField(mapping: MappingModel, selectedTargetField: Field): boolean {\n    if (selectedTargetField == null) {\n      return false;\n    }\n\n    if (this.multiplicity !== Multiplicity.ONE_TO_ONE) {\n      return false;\n    }\n\n    // Check for matching types - date.\n    if (this.matchesDate(this.sourceType, selectedTargetField.type) && this.matchesDate(this.targetType, selectedTargetField.type)) {\n      return true;\n    }\n\n    // Check for matching types - numeric.\n    if (this.matchesNumeric(this.sourceType, selectedTargetField.type) && this.matchesNumeric(this.targetType, selectedTargetField.type)) {\n      return true;\n    }\n\n    if (this.sourceType !== 'ANY' && this.sourceType !== selectedTargetField.type) {\n      return false;\n    }\n\n    // All other types must match the selected field types with the candidate field action types.\n    return (this.targetType === 'ANY' || selectedTargetField.type === this.targetType);\n  }\n\n}\n\nexport class FieldAction {\n  static combineActionConfig: FieldActionDefinition = null;\n  static separateActionConfig: FieldActionDefinition = null;\n\n  isSeparateOrCombineMode = false;\n  name: string;\n  definition: FieldActionDefinition = null;\n  argumentValues: FieldActionArgumentValue[] = [];\n\n  static createSeparateCombineFieldAction(separateMode: boolean) {\n    if (FieldAction.combineActionConfig == null) {\n      FieldAction.combineActionConfig = new FieldActionDefinition();\n      FieldAction.combineActionConfig.name = 'Concatenate';\n      FieldAction.separateActionConfig = new FieldActionDefinition();\n      FieldAction.separateActionConfig.name = 'Split';\n    }\n\n    const fieldAction: FieldAction = new FieldAction();\n    FieldAction.combineActionConfig.populateFieldAction(fieldAction);\n    if (separateMode) {\n      FieldAction.separateActionConfig.populateFieldAction(fieldAction);\n    }\n    fieldAction.isSeparateOrCombineMode = true;\n\n    return fieldAction;\n  }\n\n  getArgumentValue(argumentName: string): FieldActionArgumentValue {\n    for (const argValue of this.argumentValues) {\n      if (argValue.name === argumentName) {\n        return argValue;\n      }\n    }\n    const newArgValue: FieldActionArgumentValue = new FieldActionArgumentValue();\n    newArgValue.name = argumentName;\n    newArgValue.value = '0';\n    this.argumentValues.push(newArgValue);\n    return newArgValue;\n  }\n\n  setArgumentValue(argumentName: string, value: string): void {\n    this.getArgumentValue(argumentName).value = value;\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldActionDefinition.html":{"url":"classes/FieldActionDefinition.html","title":"class - FieldActionDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldActionDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                arguments\n                            \n                            \n                                isCustom\n                            \n                            \n                                method\n                            \n                            \n                                multiplicity\n                            \n                            \n                                name\n                            \n                            \n                                serviceObject\n                            \n                            \n                                sourceType\n                            \n                            \n                                targetType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                appliesToField\n                            \n                            \n                                    Private\n                                appliesToSourceField\n                            \n                            \n                                    Private\n                                appliesToTargetField\n                            \n                            \n                                    Private\n                                getActualField\n                            \n                            \n                                getArgumentForName\n                            \n                            \n                                    Private\n                                matchesDate\n                            \n                            \n                                    Private\n                                matchesNumeric\n                            \n                            \n                                populateFieldAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arguments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldActionArgument[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCustom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            method\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            multiplicity\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Multiplicity.ONE_TO_ONE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : new Object()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'undefined'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'undefined'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:45\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            appliesToField\n                        \n                        \n                    \n                \n            \n            \n                \nappliesToField(mapping: MappingModel, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:58\n                \n            \n\n\n            \n                \n                    Return true if the action's source/target types and collection types match the respective source/target\nfield properties for source transformations, or matches the respective target field properties only for\na target transformation.\nNote - source-side only transformations are permitted so the target field may be undefined.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            appliesToSourceField\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    appliesToSourceField(mapping: MappingModel, selectedSourceField: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:147\n                \n            \n\n\n            \n                \n                    Check if it could be applied to source field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FieldMappingPair\n\n                                    \n                                \n                                \n                                    selectedSourceField\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected source field\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            appliesToTargetField\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    appliesToTargetField(mapping: MappingModel, selectedTargetField: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:179\n                \n            \n\n\n            \n                \n                    Check if it could be applied for target field. Target type may not change.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FieldMappingPair\n\n                                    \n                                \n                                \n                                    selectedTargetField\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected target field\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getActualField\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getActualField(mapping: MappingModel, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:108\n                \n            \n\n\n            \n                \n                    Return the first non-padding field in either the source or target mappings.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Field\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getArgumentForName\n                        \n                        \n                    \n                \n            \n            \n                \ngetArgumentForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldActionArgument\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            matchesDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchesDate(candidateType: string, selectedType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:124\n                \n            \n\n\n            \n                \n                    Return true if the candidate type and selected type are generically a date, false otherwise.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    candidateType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            matchesNumeric\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchesNumeric(candidateType: string, selectedType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:136\n                \n            \n\n\n            \n                \n                    Return true if the candidate type and selected type are generically numeric, false otherwise.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    candidateType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            populateFieldAction\n                        \n                        \n                    \n                \n            \n            \n                \npopulateFieldAction(action: FieldAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DocumentDefinition } from './document-definition.model';\nimport { MappingModel } from './mapping.model';\nimport { Field } from './field.model';\n\nexport class FieldActionArgument {\n  name: string = null;\n  type = 'STRING';\n  values = null;\n  serviceObject: any = new Object();\n}\n\nexport class FieldActionArgumentValue {\n  name: string = null;\n  value: string = null;\n}\n\nexport enum Multiplicity {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  ZERO_TO_ONE = 'ZERO_TO_ONE'\n}\n\nexport class FieldActionDefinition {\n  name: string;\n  isCustom: boolean;\n  arguments: FieldActionArgument[] = [];\n  method: string;\n  sourceType = 'undefined';\n  targetType = 'undefined';\n  multiplicity = Multiplicity.ONE_TO_ONE;\n  serviceObject: any = new Object();\n\n  /**\n   * Return true if the action's source/target types and collection types match the respective source/target\n   * field properties for source transformations, or matches the respective target field properties only for\n   * a target transformation.\n   *\n   * Note - source-side only transformations are permitted so the target field may be undefined.\n   *\n   * @param mapping\n   */\n  appliesToField(mapping: MappingModel, isSource: boolean): boolean {\n\n    if (mapping == null) {\n      return false;\n    }\n    const selectedSourceField: Field = this.getActualField(mapping, true);\n    const selectedTargetField: Field = this.getActualField(mapping, false);\n\n    if ((isSource && selectedSourceField == null) || (!isSource) && selectedTargetField == null) {\n      return false;\n    }\n\n    return isSource ? this.appliesToSourceField(mapping, selectedSourceField)\n     : this.appliesToTargetField(mapping, selectedTargetField);\n  }\n\n  populateFieldAction(action: FieldAction): void {\n    action.name = this.name;\n    action.definition = this;\n\n    // Use the parsed values if present, otherwise set to '0'.\n    if (action.argumentValues == null || action.argumentValues.length === 0) {\n      action.argumentValues = [];\n      for (const arg of this.arguments) {\n\n        // Default the input field to 0 for numerics\n        if (['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(arg.type) !== -1) {\n          action.setArgumentValue(arg.name, '0');\n        } else {\n          action.setArgumentValue(arg.name, '');\n        }\n      }\n    }\n  }\n\n  getArgumentForName(name: string): FieldActionArgument {\n    for (const argument of this.arguments) {\n      if (argument.name === name) {\n        return argument;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Return the first non-padding field in either the source or target mappings.\n   *\n   * @param mapping\n   * @param isSource\n   */\n  private getActualField(mapping: MappingModel, isSource: boolean): Field {\n    let targetField: Field = null;\n    for (targetField of mapping.getFields(isSource)) {\n      if ((targetField.name !== '')) {\n        break;\n      }\n    }\n    return targetField;\n  }\n\n  /**\n   * Return true if the candidate type and selected type are generically a date, false otherwise.\n   *\n   * @param candidateType\n   * @param selectedType\n   */\n  private matchesDate(candidateType: string, selectedType: string): boolean {\n    return ((candidateType === 'ANY') ||\n      (candidateType === 'ANY_DATE' &&\n        ['DATE', 'DATE_TIME', 'DATE_TIME_TZ', 'TIME'].indexOf(selectedType) !== -1));\n  }\n\n  /**\n   * Return true if the candidate type and selected type are generically numeric, false otherwise.\n   *\n   * @param candidateType\n   * @param selectedType\n   */\n  private matchesNumeric(candidateType: string, selectedType: string): boolean {\n    return ((candidateType === 'ANY') ||\n      (candidateType === 'NUMBER' &&\n        ['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(selectedType) !== -1));\n  }\n\n  /**\n   * Check if it could be applied to source field.\n   * @param mapping FieldMappingPair\n   * @param selectedSourceField selected source field\n   */\n  private appliesToSourceField(mapping: MappingModel, selectedSourceField: Field): boolean {\n\n    if ([Multiplicity.ONE_TO_MANY, Multiplicity.ZERO_TO_ONE].includes(this.multiplicity)) {\n      return false;\n    } else if (this.multiplicity === Multiplicity.MANY_TO_ONE) {\n      // MANY_TO_ONE field action only applies to collection field or FieldGroup\n      return false;\n    }\n\n    // Check for matching types - date.\n    if (this.matchesDate(this.sourceType, selectedSourceField.type)) {\n      return true;\n    }\n\n    // Check for matching types - numeric.\n    if (this.matchesNumeric(this.sourceType, selectedSourceField.type)) {\n      return true;\n    }\n\n    // First check if the source types match.\n    if ((this.sourceType === 'ANY') || (selectedSourceField.type === this.sourceType)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if it could be applied for target field. Target type may not change.\n   * @param mapping FieldMappingPair\n   * @param selectedTargetField selected target field\n   */\n  private appliesToTargetField(mapping: MappingModel, selectedTargetField: Field): boolean {\n    if (selectedTargetField == null) {\n      return false;\n    }\n\n    if (this.multiplicity !== Multiplicity.ONE_TO_ONE) {\n      return false;\n    }\n\n    // Check for matching types - date.\n    if (this.matchesDate(this.sourceType, selectedTargetField.type) && this.matchesDate(this.targetType, selectedTargetField.type)) {\n      return true;\n    }\n\n    // Check for matching types - numeric.\n    if (this.matchesNumeric(this.sourceType, selectedTargetField.type) && this.matchesNumeric(this.targetType, selectedTargetField.type)) {\n      return true;\n    }\n\n    if (this.sourceType !== 'ANY' && this.sourceType !== selectedTargetField.type) {\n      return false;\n    }\n\n    // All other types must match the selected field types with the candidate field action types.\n    return (this.targetType === 'ANY' || selectedTargetField.type === this.targetType);\n  }\n\n}\n\nexport class FieldAction {\n  static combineActionConfig: FieldActionDefinition = null;\n  static separateActionConfig: FieldActionDefinition = null;\n\n  isSeparateOrCombineMode = false;\n  name: string;\n  definition: FieldActionDefinition = null;\n  argumentValues: FieldActionArgumentValue[] = [];\n\n  static createSeparateCombineFieldAction(separateMode: boolean) {\n    if (FieldAction.combineActionConfig == null) {\n      FieldAction.combineActionConfig = new FieldActionDefinition();\n      FieldAction.combineActionConfig.name = 'Concatenate';\n      FieldAction.separateActionConfig = new FieldActionDefinition();\n      FieldAction.separateActionConfig.name = 'Split';\n    }\n\n    const fieldAction: FieldAction = new FieldAction();\n    FieldAction.combineActionConfig.populateFieldAction(fieldAction);\n    if (separateMode) {\n      FieldAction.separateActionConfig.populateFieldAction(fieldAction);\n    }\n    fieldAction.isSeparateOrCombineMode = true;\n\n    return fieldAction;\n  }\n\n  getArgumentValue(argumentName: string): FieldActionArgumentValue {\n    for (const argValue of this.argumentValues) {\n      if (argValue.name === argumentName) {\n        return argValue;\n      }\n    }\n    const newArgValue: FieldActionArgumentValue = new FieldActionArgumentValue();\n    newArgValue.name = argumentName;\n    newArgValue.value = '0';\n    this.argumentValues.push(newArgValue);\n    return newArgValue;\n  }\n\n  setArgumentValue(argumentName: string, value: string): void {\n    this.getArgumentValue(argumentName).value = value;\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FieldActionService.html":{"url":"injectables/FieldActionService.html","title":"injectable - FieldActionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FieldActionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/field-action.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionDefinitions\n                            \n                            \n                                cfg\n                            \n                            \n                                    Private\n                                headers\n                            \n                            \n                                isInitialized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                doFetchFieldActions\n                            \n                            \n                                    Private\n                                extractFieldActionDefinition\n                            \n                            \n                                    Async\n                                fetchFieldActions\n                            \n                            \n                                getActionDefinitionForName\n                            \n                            \n                                getActionsAppliesToField\n                            \n                            \n                                    Private\n                                sortFieldActionDefinitions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorService: ErrorHandlerService, logger: NGXLogger, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            doFetchFieldActions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doFetchFieldActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractFieldActionDefinition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractFieldActionDefinition(actionDetail: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actionDetail\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldActionDefinition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchFieldActions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchFieldActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionDefinitionForName\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionDefinitionForName(actionName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldActionDefinition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionsAppliesToField\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionsAppliesToField(mapping: MappingModel, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:97\n                \n            \n\n\n            \n                \n                    Return the field action Definitions applicable to the specified field mapping pair.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     FieldActionDefinition[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sortFieldActionDefinitions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sortFieldActionDefinitions(definitions: FieldActionDefinition[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    definitions\n                                    \n                                            FieldActionDefinition[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     FieldActionDefinition[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionDefinitions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldActionDefinition[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new HttpHeaders(\n    {'Content-Type': 'application/json; application/octet-stream',\n     'Accept':       'application/json; application/octet-stream'})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ConfigModel } from '../models/config.model';\nimport { NGXLogger } from 'ngx-logger';\nimport { ErrorHandlerService } from './error-handler.service';\nimport { FieldActionDefinition, FieldActionArgument } from '../models/field-action.model';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { MappingModel } from '../models/mapping.model';\n\n@Injectable()\nexport class FieldActionService {\n  cfg: ConfigModel = ConfigModel.getConfig();\n  actionDefinitions: FieldActionDefinition[];\n  isInitialized = false;\n  private headers = new HttpHeaders(\n    {'Content-Type': 'application/json; application/octet-stream',\n     'Accept':       'application/json; application/octet-stream'});\n\n  constructor(\n    private errorService: ErrorHandlerService,\n    private logger: NGXLogger,\n    private http: HttpClient) {}\n\n  async fetchFieldActions(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this.cfg.preloadedFieldActionMetadata) {\n        this.actionDefinitions = [];\n        for (const actionDetail of this.cfg.preloadedFieldActionMetadata.ActionDetails.actionDetail) {\n          const fieldActionDefinition = this.extractFieldActionDefinition(actionDetail);\n          this.actionDefinitions.push(fieldActionDefinition);\n        }\n        this.sortFieldActionDefinitions(this.actionDefinitions);\n        this.isInitialized = true;\n        resolve(true);\n        return;\n      }\n\n      if (this.cfg.mappingService == null) {\n        this.cfg.errorService.warn('Mapping service is not provided. Field Actions will not be used.', null);\n        this.isInitialized = true;\n        resolve(true);\n        return;\n      } else if (this.cfg.initCfg.baseMappingServiceUrl == null) {\n        this.cfg.errorService.warn('Mapping service URL is not provided. Field Actions will not be used.', null);\n        this.isInitialized = true;\n        resolve(true);\n        return;\n      }\n\n      // Fetch the field actions from the runtime service.\n      this.doFetchFieldActions().toPromise()\n        .then((fetchedActionConfigs: FieldActionDefinition[]) => {\n          this.actionDefinitions = fetchedActionConfigs;\n          this.isInitialized = true;\n          resolve(this.actionDefinitions.length > 0);\n        }).catch((error: any) => {\n          if (error.status === 0) {\n            reject(`Fatal network error: Could not connect to AtlasMap design runtime service. (${error})`);\n          } else {\n            reject(`Could not load field action configs: (${error.message})`);\n          }\n        });\n    });\n  }\n\n  getActionDefinitionForName(actionName: string): FieldActionDefinition {\n    if (!this.actionDefinitions || !actionName) {\n      return null;\n    }\n    for (const actionDef of this.actionDefinitions) {\n      if (actionName === actionDef.name) {\n        return actionDef;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Return the field action Definitions applicable to the specified field mapping pair.\n   * @param mapping\n   */\n  getActionsAppliesToField(mapping: MappingModel, isSource: boolean = true): FieldActionDefinition[] {\n    if (!mapping || !this.actionDefinitions) {\n      return [];\n    }\n    return this.actionDefinitions.filter(d => d.appliesToField(mapping, isSource));\n  }\n\n  private doFetchFieldActions(): Observable {\n    return new Observable((observer: any) => {\n      let actionConfigs: FieldActionDefinition[] = [];\n      const url: string = this.cfg.initCfg.baseMappingServiceUrl + 'fieldActions';\n      this.cfg.logger.trace('Field Action Config Request');\n      this.http.get(url, { headers: this.headers }).toPromise().then((body: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Field Action Config Response: ${JSON.stringify(body)}`);\n        }\n        if (body && body.ActionDetails\n          && body.ActionDetails.actionDetail\n          && body.ActionDetails.actionDetail.length) {\n          for (const actionDetail of body.ActionDetails.actionDetail) {\n            const fieldActionConfig = this.extractFieldActionDefinition(actionDetail);\n            actionConfigs.push(fieldActionConfig);\n          }\n        }\n        actionConfigs = this.sortFieldActionDefinitions(actionConfigs);\n        observer.next(actionConfigs);\n        observer.complete();\n      }).catch((error: any) => {\n        observer.error(error);\n        observer.next(actionConfigs);\n        observer.complete();\n      });\n    });\n  }\n\n  private extractFieldActionDefinition(actionDetail: any): FieldActionDefinition {\n    if (this.cfg.isDebugEnabled()) {\n      this.cfg.logger.debug(`Deserializing field action definition: ${JSON.stringify(actionDetail)}`);\n    }\n\n    const fieldActionDefinition = new FieldActionDefinition();\n    fieldActionDefinition.name = actionDetail.name;\n    fieldActionDefinition.isCustom = actionDetail.custom;\n    fieldActionDefinition.sourceType = actionDetail.sourceType;\n    fieldActionDefinition.targetType = actionDetail.targetType;\n    fieldActionDefinition.method = actionDetail.method;\n    fieldActionDefinition.multiplicity = actionDetail.multiplicity;\n    fieldActionDefinition.serviceObject = actionDetail;\n\n    if (actionDetail.actionSchema) {\n\n      for (const key of Object.keys(actionDetail.actionSchema.properties)) {\n        const propertyObject = actionDetail.actionSchema.properties[key];\n        if (key === '@type') {\n          fieldActionDefinition.name = propertyObject.const;\n          continue;\n        }\n        const argumentDefinition = new FieldActionArgument();\n        argumentDefinition.name = key;\n        argumentDefinition.type = propertyObject.type;\n        argumentDefinition.values = propertyObject.enum;\n        argumentDefinition.serviceObject = propertyObject;\n        fieldActionDefinition.arguments.push(argumentDefinition);\n      }\n    }\n    return fieldActionDefinition;\n  }\n\n  private sortFieldActionDefinitions(definitions: FieldActionDefinition[]): FieldActionDefinition[] {\n    const sortedActionDefinitions: FieldActionDefinition[] = [];\n    if (definitions == null || definitions.length === 0) {\n      return sortedActionDefinitions;\n    }\n\n    const defsByName: { [key: string]: FieldActionDefinition[]; } = {};\n    const defNames: string[] = [];\n    for (const fieldActionConfig of definitions) {\n      const name: string = fieldActionConfig.name;\n      let sameNamedDefs: FieldActionDefinition[] = defsByName[name];\n      if (!sameNamedDefs) {\n        sameNamedDefs = [];\n        defNames.push(name);\n      }\n      sameNamedDefs.push(fieldActionConfig);\n      defsByName[name] = sameNamedDefs;\n    }\n\n    defNames.sort();\n\n    for (const name of defNames) {\n      const sameNamedDefs: FieldActionDefinition[] = defsByName[name];\n      for (const fieldActionDefinition of sameNamedDefs) {\n        sortedActionDefinitions.push(fieldActionDefinition);\n      }\n    }\n    return sortedActionDefinitions;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FieldEditComponent.html":{"url":"components/FieldEditComponent.html","title":"component - FieldEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FieldEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                field-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./field-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                dataSource\n                            \n                            \n                                docDef\n                            \n                            \n                                editMode\n                            \n                            \n                                field\n                            \n                            \n                                fieldType\n                            \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                isSource\n                            \n                            \n                                isXML\n                            \n                            \n                                namespaceAlias\n                            \n                            \n                                namespaces\n                            \n                            \n                                parentField\n                            \n                            \n                                parentFieldName\n                            \n                            \n                                valueType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                executeSearch\n                            \n                            \n                                fieldTypeSelectionChanged\n                            \n                            \n                                getField\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                handleOnBlur\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                namespaceSelectionChanged\n                            \n                            \n                                parentSelectionChanged\n                            \n                            \n                                valueTypeSelectionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:45\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            executeSearch\n                        \n                        \n                    \n                \n            \n            \n                \nexecuteSearch(filter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fieldTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nfieldTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getField\n                        \n                        \n                    \n                \n            \n            \n                \ngetField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Field\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleOnBlur\n                        \n                        \n                    \n                \n            \n            \n                \nhandleOnBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(field: Field, docDef: DocumentDefinition, isAdd: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docDef\n                                    \n                                                DocumentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isAdd\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            namespaceSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nnamespaceSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parentSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nparentSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nvalueTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                    \n                        \n                            Default value : new Field()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 'element'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('value')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isXML\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespaceAlias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespaces\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentFieldName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { DocumentDefinition, NamespaceModel } from '../models/document-definition.model';\nimport { Field } from '../models/field.model';\nimport { DocumentType } from '../common/config.types';\nimport { ConfigModel } from '../models/config.model';\nimport { Observable } from 'rxjs';\nimport { ModalWindowValidator } from './modal-window.component';\n\n@Component({\n  selector: 'field-edit',\n  templateUrl: './field-edit.component.html',\n})\n\nexport class FieldEditComponent implements ModalWindowValidator {\n  cfg: ConfigModel = ConfigModel.getConfig();\n  field: Field = new Field();\n  parentField: Field;\n  parentFieldName: String = null;\n  isSource = false;\n  fieldType: any = 'element';\n  valueType: any = 'STRING';\n  namespaceAlias = '';\n  editMode = false;\n  namespaces: NamespaceModel[] = [];\n  docDef: DocumentDefinition = null;\n  dataSource: Observable;\n  isXML = false;\n  @ViewChild('value') private focusEl: ElementRef;\n\n  constructor() {\n    this.dataSource = Observable.create((observer: any) => {\n      observer.next(this.executeSearch(observer.outerValue));\n    });\n  }\n\n  initialize(field: Field, docDef: DocumentDefinition, isAdd: boolean): void {\n    this.docDef = docDef;\n    this.editMode = !isAdd;\n    this.field = field == null ? new Field() : field.copy();\n    this.valueType = (this.field.type == null) ? 'STRING' : this.field.type;\n    this.parentField = this.field.parentField;\n\n    if (this.docDef.type === DocumentType.XML) {\n      this.isXML = true;\n      this.fieldType = this.field.isAttribute ? 'attribute' : 'element';\n      this.parentField = (this.field.parentField == null) ? docDef.fields[0] : this.field.parentField;\n      const unqualifiedNS: NamespaceModel = NamespaceModel.getUnqualifiedNamespace();\n      this.namespaceAlias = unqualifiedNS.alias;\n      if (this.field.namespaceAlias) {\n        this.namespaceAlias = this.field.namespaceAlias;\n      }\n      if (isAdd) { // on add, inherit namespace from parent field\n        this.namespaceAlias = this.parentField.namespaceAlias == null ? unqualifiedNS.alias : this.parentField.namespaceAlias;\n      }\n\n      this.namespaces = [unqualifiedNS].concat(this.docDef.namespaces);\n\n      // if the field references a namespace that doesn't exist, add a fake namespace option for the\n      // user to select if they desire to leave that bad namespace alias in place\n      let namespaceFound = false;\n      for (const ns of this.namespaces) {\n        if (ns.alias === this.namespaceAlias) {\n          namespaceFound = true;\n          break;\n        }\n      }\n      if (!namespaceFound) {\n        const fakeNamespace: NamespaceModel = new NamespaceModel();\n        fakeNamespace.alias = this.namespaceAlias;\n        this.namespaces.push(fakeNamespace);\n      }\n    }\n    this.parentFieldName = this.parentField.name;\n  }\n\n  handleOnBlur(event: any): void {\n    this.parentFieldName = this.parentField.name;\n  }\n\n  parentSelectionChanged(event: any): void {\n    const oldParentField: Field = this.parentField;\n    this.parentField = event.item['field'];\n    this.parentField = (this.parentField == null) ? oldParentField : this.parentField;\n    this.parentFieldName = this.parentField.name;\n\n    // change namespace dropdown selecte option to match parent fields' namespace automatically\n    const unqualifiedNS: NamespaceModel = NamespaceModel.getUnqualifiedNamespace();\n    this.namespaceAlias = this.parentField.namespaceAlias == null ? unqualifiedNS.alias : this.parentField.namespaceAlias;\n  }\n\n  fieldTypeSelectionChanged(event: any): void {\n    this.fieldType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  valueTypeSelectionChanged(event: any): void {\n    this.valueType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  namespaceSelectionChanged(event: any): void {\n    this.namespaceAlias = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  executeSearch(filter: string): any[] {\n    const formattedFields: any[] = [];\n\n    for (const field of this.docDef.getAllFields()) {\n      if (!field.isParentField()) {\n        continue;\n      }\n      const displayName = (field == null) ? '' : field.getFieldLabel(ConfigModel.getConfig().showTypes, true);\n      const formattedField: any = { 'field': field, 'displayName': displayName };\n      if (filter == null || filter === ''\n        || formattedField['displayName'].toLowerCase().indexOf(filter.toLowerCase()) !== -1) {\n        formattedFields.push(formattedField);\n      }\n      if (formattedFields.length > 9) {\n        break;\n      }\n    }\n    return formattedFields;\n  }\n\n  getField(): Field {\n    this.field.displayName = this.field.name;\n    this.field.parentField = this.parentField;\n    this.field.type = this.valueType;\n    this.field.userCreated = true;\n    this.field.serviceObject.jsonType = 'io.atlasmap.json.v2.JsonField';\n    if (this.docDef.type === DocumentType.XML) {\n      this.field.isAttribute = (this.fieldType === 'attribute');\n      this.field.namespaceAlias = this.namespaceAlias;\n      const unqualifiedNS: NamespaceModel = NamespaceModel.getUnqualifiedNamespace();\n      if (this.namespaceAlias === unqualifiedNS.alias) {\n        this.field.namespaceAlias = null;\n      }\n      this.field.serviceObject.jsonType = 'io.atlasmap.xml.v2.XmlField';\n    }\n    return this.field;\n  }\n\n  isDataValid(): boolean {\n    return ConfigModel.getConfig().isRequiredFieldValid(this.field.name, 'Name');\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n}\n\n    \n\n    \n        \n\n  {{ model['field'].docDef.name }}\n  {{ model['field'].path }}\n\n\n\n  \n    Parent\n    \n  \n  \n    Name\n    \n  \n  \n    Namespace\n    \n      \n        {{ ns.getPrettyLabel() }}\n      \n    \n  \n  \n    Field Type\n    \n      Element\n      Attribute\n    \n  \n  \n    Value Type\n    \n      Boolean\n      Byte\n      ByteArray\n      Char\n      Complex\n      Decimal\n      Double\n      Float\n      Integer\n      Long\n      Short\n      String\n      Time\n      Date\n      DateTime\n      DateTZ\n      TimeTZ\n      DateTimeTZ\n      Unsigned Byte\n      Unsigned Integer\n      Unsigned Long\n      Unsigned Short\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ model[\\'field\\'].docDef.name }}  {{ model[\\'field\\'].path }}      Parent            Name            Namespace                  {{ ns.getPrettyLabel() }}                  Field Type          Element      Attribute            Value Type          Boolean      Byte      ByteArray      Char      Complex      Decimal      Double      Float      Integer      Long      Short      String      Time      Date      DateTime      DateTZ      TimeTZ      DateTimeTZ      Unsigned Byte      Unsigned Integer      Unsigned Long      Unsigned Short      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'FieldEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldNode.html":{"url":"classes/FieldNode.html","title":"class - FieldNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ExpressionNode\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                field\n                            \n                            \n                                    Static\n                                    Readonly\n                                PREFIX\n                            \n                            \n                                    Protected\n                                    Static\n                                sequence\n                            \n                            \n                                    Protected\n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toHTML\n                            \n                            \n                                toText\n                            \n                            \n                                getUuid\n                            \n                            \n                                    Abstract\n                                toHTML\n                            \n                            \n                                    Abstract\n                                toText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapping: MappingModel, field?: MappedField, index?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        MappingModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        MappedField\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        index\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappedField\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PREFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'expression-field-'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            sequence\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                            \n                                \n                                    Inherited from         ExpressionNode\n\n                                \n                            \n                        \n                            \n                                    Defined in         ExpressionNode:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            uuid\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         ExpressionNode\n\n                                \n                            \n                        \n                            \n                                    Defined in         ExpressionNode:27\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \ntoHTML()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \ntoText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetUuid()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toHTML()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toText()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { MappedField, MappingModel } from './mapping.model';\nimport { Subject } from 'rxjs';\n\nexport class ExpressionUpdatedEvent {\n  constructor(public node?: ExpressionNode, public offset?: number) {}\n}\n\nexport abstract class ExpressionNode {\n  protected static sequence = 0;\n  protected uuid;\n\n  constructor(prefix: string) {\n    this.uuid = prefix + ExpressionNode.sequence++;\n  }\n\n  getUuid() {\n    return this.uuid;\n  }\n\n  abstract toText(): string;\n  abstract toHTML(): string;\n}\n\nexport class TextNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-text-';\n\n  constructor(public str: string) {\n    super(TextNode.PREFIX);\n  }\n\n  toText(): string {\n    return this.str;\n  }\n\n  toHTML(): string {\n    return `${this.str.replace(/ /g, '&nbsp;')}`;\n  }\n\n}\n\nexport class FieldNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-field-';\n\n  constructor(private mapping: MappingModel, public field?: MappedField, private index?: number) {\n    super(FieldNode.PREFIX);\n    if (!field) {\n      this.field = mapping.getMappedFieldForIndex((index + 1).toString(), true);\n    }\n    if (!index) {\n      this.index = this.mapping.getIndexForMappedField(this.field) - 1;\n    }\n  }\n\n  toText(): string {\n    return '${' + this.index + '}';\n  }\n\n  toHTML(): string {\n    if (this.field) {\n      return `${this.field.field.name}`;\n    } else {\n      return `N/A`;\n    }\n  }\n\n}\n\nexport class ExpressionModel {\n  expressionUpdatedSource = new Subject();\n  expressionUpdated$ = this.expressionUpdatedSource.asObservable();\n\n  private _nodes: ExpressionNode[] = [];\n  private textCache = '';\n  private htmlCache = '';\n\n  constructor(private mapping: MappingModel, private cfg: ConfigModel) {}\n\n  generateInitialExpression() {\n    this.mapping.getUserMappedFields(true).forEach(f => this.appendFieldNode(f));\n  }\n\n  get nodes(): ReadonlyArray {\n    return this._nodes;\n  }\n\n  getLastNodeIndex() {\n    return this._nodes.length - 1;\n  }\n\n  getLastNode() {\n    return this._nodes[this.getLastNodeIndex()];\n  }\n\n  getNode(nodeId?: string): any {\n    if (!nodeId) {\n      return this.getLastNode();\n    }\n    return this._nodes.find(n => n.getUuid() === nodeId);\n  }\n\n  setConfigModel(cfg: ConfigModel) {\n    this.cfg = cfg;\n  }\n\n  /**\n   * Clear all text from the specified TextNode offset range or from the '@' to the end\n   * of the text node if no node ID is specified.\n   *\n   * Return the new UUID position indicator string or null.\n   *\n   * @param nodeId\n   * @param startOffset\n   * @param endOffset\n   */\n  clearText(nodeId?: string, startOffset?: number, endOffset?: number): TextNode {\n    let targetNode: TextNode;\n    let targetNodeIndex = 0;\n    if (!nodeId) {\n      const lastNode = this.getLastNode();\n      if (!(lastNode instanceof TextNode)) {\n        return null;\n      }\n      const keyPos = lastNode.str.indexOf('@');\n      targetNodeIndex = this._nodes.indexOf(lastNode);\n      targetNode = lastNode;\n      targetNode.str = targetNode.str.substring(0, keyPos);\n    } else {\n      const node = this._nodes.find(n => n.getUuid() === nodeId);\n      if (!(node instanceof TextNode) || !endOffset) {\n        return null;\n      }\n      targetNode = node;\n      targetNodeIndex = this._nodes.indexOf(targetNode);\n      const cleanStr = targetNode.str.replace(targetNode.str.substring(startOffset, endOffset), '');\n      targetNode.str = cleanStr;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n    return targetNode;\n  }\n\n  /**\n   * Insert text into expression at specified position. If nodeId is not specified,\n   * it will be added to the end of expression. It parses the string\n   * and insert a set of TextNode & FieldNode if it contains field reference like ${0},\n   * otherwise just one TextNode.\n   * This emits ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   * @param str string to insert\n   * @param nodeId target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertText(str: string, nodeId?: string, offset?: number) {\n    this.insertNodes(this.createNodesFromText(str), nodeId, offset);\n  }\n\n  /**\n   * Insert an array of ExpressionNodes at the specified position. If insertPosition is\n   * not specified the nodes will be appended to the end of the expression.\n   * This emits an ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   *\n   * @param newNodes an array of ExpressionNode to add\n   * @param insertPosition target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertNodes(newNodes: ExpressionNode[], insertPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!insertPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        this._nodes.push(...newNodes);\n      } else if (last instanceof TextNode && newNodes[0] instanceof TextNode) {\n        const lastTextNode = last as TextNode;\n        (last as TextNode).str += (newNodes[0] as TextNode).str;\n        newNodes.splice(0, 1, last);\n        this._nodes.splice(this.getLastNodeIndex(), 1, ...newNodes);\n      } else if (last instanceof FieldNode && newNodes[0] instanceof FieldNode) {\n        this._nodes.splice(this.getLastNodeIndex(), 0, new TextNode(' + '), ...newNodes);\n      } else {\n        this._nodes.push(...newNodes);\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    const updatedEvent = new ExpressionUpdatedEvent();\n    const targetNode = this._nodes.find(n => n.getUuid() === insertPosition);\n    const targetNodeIndex = this._nodes.indexOf(targetNode);\n\n    if (targetNode instanceof TextNode) {\n      if (offset === undefined || offset === null || offset  0) {\n        if (newNodes[0] instanceof TextNode) {\n          targetNode.str = pre + (newNodes[0] as TextNode).str;\n          newNodes.splice(0, 1, targetNode);\n        } else {\n          targetNode.str = pre;\n          newNodes.splice(0, 0, targetNode);\n        }\n      }\n      if (post.length > 0) {\n        const lastNewNodeIndex = newNodes.length - 1;\n        if (newNodes[lastNewNodeIndex] instanceof TextNode) {\n          let mergedTextNode: TextNode;\n          if (pre.length > 0) {\n            mergedTextNode = newNodes[lastNewNodeIndex] as TextNode;\n            mergedTextNode.str += post;\n          } else {\n            mergedTextNode = targetNode;\n            mergedTextNode.str = (newNodes[lastNewNodeIndex]as TextNode).str + post;\n          }\n          newNodes.splice(lastNewNodeIndex, 1, mergedTextNode);\n        } else {\n          if (pre.length > 0) {\n            newNodes.push(new TextNode(post));\n          } else {\n            targetNode.str = post;\n            newNodes.push(targetNode);\n          }\n        }\n      }\n      this._nodes.splice(targetNodeIndex, 1, ...newNodes);\n      const lastAddedIndex = targetNodeIndex + newNodes.length - 1;\n      if (this._nodes[lastAddedIndex] instanceof FieldNode\n          && this.nodes[lastAddedIndex + 1] instanceof FieldNode) {\n        // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n        const space = new TextNode(' + ');\n        this._nodes.splice(lastAddedIndex + 1, 0, space);\n        updatedEvent.node = space;\n        updatedEvent.offset = 1;\n      } else if (this._nodes[lastAddedIndex] instanceof FieldNode) {\n        updatedEvent.node = this._nodes[lastAddedIndex + 1];\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = this._nodes[lastAddedIndex];\n        updatedEvent.offset = (this._nodes[lastAddedIndex] as TextNode).str.length - post.length;\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next(updatedEvent);\n      return;\n    }\n\n    // targetNode is a FieldNode - insert the text before it if offset is 0, otherwise after it\n    if (offset !== 0 && newNodes[0] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      newNodes.splice(0, 0, new TextNode(' + '));\n    }\n    const nextNodeIndex = offset === 0 ? targetNodeIndex : targetNodeIndex + 1;\n    const nextNode = this._nodes[nextNodeIndex];\n    if (nextNode instanceof TextNode && newNodes[newNodes.length - 1] instanceof TextNode) {\n      updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      nextNode.str = (newNodes[newNodes.length - 1] as TextNode).str + (nextNode as TextNode).str;\n      newNodes.pop();\n      this._nodes.splice(nextNodeIndex, 1, ...newNodes);\n      updatedEvent.node = nextNode;\n    } else if (nextNode instanceof FieldNode && newNodes[newNodes.length - 1] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      const space = new TextNode(' + ');\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes, space);\n      updatedEvent.node = space;\n      updatedEvent.offset = 1;\n    } else {\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes);\n      if (nextNode instanceof TextNode) {\n        updatedEvent.node = nextNode;\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = newNodes[newNodes.length - 1];\n        updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  removeToken(lastFieldRefRemoved: (removed: MappedField) => void, tokenPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!tokenPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        return;\n      }\n      if (last instanceof FieldNode) {\n        const removed = this._nodes.pop() as FieldNode;\n        if (!this._nodes.find(n => n instanceof FieldNode && n.field === removed.field)) {\n          lastFieldRefRemoved(removed.field);\n        }\n      } else if (last instanceof TextNode) {\n        if (last.str.length > 0) {\n          last.str = last.str.substring(0, last.str.length - 1);\n        } else {\n          this._nodes.pop();\n        }\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    let updatedEvent = new ExpressionUpdatedEvent();\n    let targetNode = this._nodes.find(n => n.getUuid() === tokenPosition);\n    let targetNodeIndex = this._nodes.indexOf(targetNode);\n    if (!targetNode || offset === -1) {\n      if (targetNodeIndex  n instanceof FieldNode && n.field === removed.field)) {\n        lastFieldRefRemoved(removed.field);\n      }\n      if (this._nodes.length > targetNodeIndex) {\n        if (this._nodes[targetNodeIndex - 1] instanceof TextNode\n            && this._nodes[targetNodeIndex] instanceof TextNode) {\n          const newOffset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n          (this._nodes[targetNodeIndex - 1] as TextNode).str\n              += (this._nodes[targetNodeIndex] as TextNode).str;\n          this._nodes.splice(targetNodeIndex, 1);\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = newOffset;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof FieldNode\n            && this._nodes[targetNodeIndex] instanceof FieldNode) {\n          const glue = new TextNode(' + ');\n          this._nodes.splice(targetNodeIndex, 0, glue);\n          updatedEvent.node = glue;\n          updatedEvent.offset = 3;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n        } else if (this._nodes[targetNodeIndex] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex];\n          updatedEvent.offset = 0;\n        }\n      } else {\n        // end of line\n        updatedEvent = undefined;\n      }\n    } else {\n      const targetString = (targetNode as TextNode).str;\n      (targetNode as TextNode).str = offset === 0 ? targetString.substr(1)\n        : targetString.substring(0, offset) + targetString.substring(offset + 1);\n      if ((targetNode as TextNode).str.length === 0) {\n        this.cfg.errorService.info('At least one space is required between field references.', null);\n        return;\n      }\n      updatedEvent.node = targetNode;\n      updatedEvent.offset = offset;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  /**\n   * Replace the content of the last text node with a substring terminating at the\n   * specified index.\n   *\n   * @param index\n   */\n  clearToEnd(index: number): void {\n    const last = this.getLastNode();\n    if (!(last instanceof TextNode)) {\n      return;\n    }\n    last.str = last.str.substring(0, index);\n  }\n\n  /**\n   * Reflect mapped source fields to the field references in the expression.\n   * Selected source fields are inserted into or appended to the expression,\n   * and unselected source fields are removed from expression.\n   *\n   * @param mapping Corresponding MappingModel object\n   */\n  updateFieldReference(mapping: MappingModel, insertPosition?: string, offset?: number) {\n    const mappedFields = mapping.getUserMappedFields(true);\n    const toAdd: MappedField[] = [];\n    const toRemove: MappedField[] = [];\n    let fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n\n    // Remove the field from the expression if unmapped.\n    for (const node of fieldNodes) {\n      if (mappedFields.includes(node.field)) {\n        continue;\n      }\n      const index = this._nodes.indexOf(node);\n      this._nodes.splice(index, 1);\n      if (this._nodes.length > index && this._nodes[index - 1] instanceof TextNode\n          && this._nodes[index] instanceof TextNode) {\n        (this._nodes[index - 1] as TextNode).str += (this._nodes[index] as TextNode).str;\n        this._nodes.splice(index, 1);\n      }\n    }\n\n    // Add the specified field into the expression - append if no insert position is specified.\n    fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n    for (const mfield of mappedFields) {\n      if (!fieldNodes.find(n => n.field === mfield)) {\n        if (insertPosition) {\n          this.insertNodes([new FieldNode(this.mapping, mfield)], insertPosition, offset);\n        } else {\n          this.appendFieldNode(mfield);\n        }\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  clear() {\n    this._nodes = [];\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  toText() {\n    return this.textCache;\n  }\n\n  toHTML() {\n    return this.htmlCache;\n  }\n\n  private updateCache() {\n    let answer = '';\n    this._nodes.forEach(node => answer += node.toText());\n    this.textCache = answer;\n    answer = '';\n    this._nodes.forEach(node => answer += node.toHTML());\n    this.htmlCache = answer;\n  }\n\n  private createNodesFromText(text: string): ExpressionNode[] {\n    const answer = [];\n    let position = -1;\n    let fn = null;\n\n    while ((position = text.search(/\\$\\{[0-9]+\\}/)) !== -1 ) {\n      if (position !== 0) {\n        answer.push(new TextNode(text.substring(0, position)));\n      }\n      const index = parseInt(text.substring(position + 2, text.indexOf('}')), 10);\n      fn = new FieldNode(this.mapping, null, index);\n      if (fn.field === null) {\n        this.cfg.errorService.error('Unable to map expression index to field node.', index);\n      } else {\n        answer.push(fn);\n      }\n      text = text.substring(text.indexOf('}') + 1);\n    }\n    if (text.length > 0) {\n      answer.push(new TextNode(text));\n    }\n    return answer;\n  }\n\n  private appendFieldNode(mfield: MappedField) {\n    const lastNode = this._nodes.pop();\n    if (lastNode instanceof FieldNode) {\n        this._nodes.push(lastNode, new TextNode(' + '));\n    } else if (lastNode instanceof TextNode) {\n      if (lastNode.str.length === 0) {\n        this._nodes.push(new TextNode(' + '));\n      } else {\n        this._nodes.push(lastNode);\n      }\n    }\n    this._nodes.push(new FieldNode(this.mapping, mfield));\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileManagementService.html":{"url":"injectables/FileManagementService.html","title":"injectable - FileManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/file-management.service.ts\n        \n\n            \n                Description\n            \n            \n                Handles file manipulation stored in the backend, including import/export via UI.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _cfg\n                            \n                            \n                                    Private\n                                headers\n                            \n                            \n                                    Private\n                                jsonBuffer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportMappingsCatalog\n                            \n                            \n                                findMappingFiles\n                            \n                            \n                                getCurrentADMCatalog\n                            \n                            \n                                getCurrentMappingCatalog\n                            \n                            \n                                    Private\n                                getCurrentMappingJson\n                            \n                            \n                                    Private\n                                    Async\n                                getJsonBuf\n                            \n                            \n                                    Private\n                                getMappingId\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Async\n                                importADMCatalog\n                            \n                            \n                                resetAll\n                            \n                            \n                                setBinaryFileToService\n                            \n                            \n                                setMappingToService\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    cfg\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: NGXLogger, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            exportMappingsCatalog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exportMappingsCatalog(mappingsFileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:213\n                \n            \n\n\n            \n                \n                    Update the current mapping files and export the current mappings catalog (ADM).\nEstablish the file content in JSON format (mappings + schema + instance-schema), compress\nit (GZIP), update the runtime, then fetch the full ADM catalog ZIP file from the runtime\nand export it.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappingsFileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findMappingFiles\n                        \n                        \n                    \n                \n            \n            \n                \nfindMappingFiles(filter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentADMCatalog\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentADMCatalog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentMappingCatalog\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentMappingCatalog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:81\n                \n            \n\n\n            \n                \n                    Retrieve the current user data mappings catalog from the server as a GZIP compressed byte array buffer.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCurrentMappingJson\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentMappingJson()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:378\n                \n            \n\n\n            \n                \n                    Retrieve the current user AtlasMap data mappings from the server as an JSON buffer.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getJsonBuf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getJsonBuf()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:353\n                \n            \n\n\n            \n                \n                    Asynchronously retrieve the current user-defined AtlasMap mappings from the runtime server as an JSON buffer.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getMappingId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMappingId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:413\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(message: string, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:417\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            importADMCatalog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    importADMCatalog(mappingsFileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:312\n                \n            \n\n\n            \n                \n                    Perform a binary read of the specified catalog (.ADM) file and push it to the runtime.  The ADM file is\nin (ZIP) file format.  Once pushed, we can retrieve from runtime the extracted compressed (GZIP) mappings\nfile catalog as well as the mappings JSON file.  These files exist separately for performance reasons.\nOnce the runtime has its ADM catalog, catalog files and mappings file set then restart the DM.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    mappingsFileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nADM master ZIP catalog\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetAll\n                        \n                        \n                    \n                \n            \n            \n                \nresetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:138\n                \n            \n\n\n            \n                \n                    Establish an observable function to delete mapping files on the runtime.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBinaryFileToService\n                        \n                        \n                    \n                \n            \n            \n                \nsetBinaryFileToService(compressedBuffer: any, url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:186\n                \n            \n\n\n            \n                \n                    The user has either exported their mappings or imported new mappings.  Either way we're saving them on the server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    compressedBuffer\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMappingToService\n                        \n                        \n                    \n                \n            \n            \n                \nsetMappingToService(jsonBuffer: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:162\n                \n            \n\n\n            \n                \n                    Commit the specified AtlasMapping JSON user mapping string to the runtime service.  The mappings\nare kept separate so they can be updated with minimal overhead.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    jsonBuffer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new HttpHeaders(\n    {'Content-Type': 'application/json; application/octet-stream',\n     'Accept':       'application/json; application/octet-stream'})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            jsonBuffer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:38\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n\n                \n                    \n                        getcfg()\n                    \n                \n                            \n                                \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:42\n                                \n                            \n\n                \n                    \n                        setcfg(cfg)\n                    \n                \n                            \n                                \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:46\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            cfg\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ConfigModel } from '../models/config.model';\nimport { NGXLogger } from 'ngx-logger';\nimport { deflate } from 'pako';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, forkJoin } from 'rxjs';\nimport { DataMapperUtil } from '../common/data-mapper-util';\nimport { map, timeout } from 'rxjs/operators';\nimport { DocumentManagementService } from './document-management.service';\nimport { InspectionType } from '../common/config.types';\n\n/**\n * Handles file manipulation stored in the backend, including import/export via UI.\n */\n@Injectable()\nexport class FileManagementService {\n  _cfg: ConfigModel;\n\n  private headers = new HttpHeaders(\n    {'Content-Type': 'application/json; application/octet-stream',\n     'Accept':       'application/json; application/octet-stream'});\n  private jsonBuffer: string;\n\n  constructor(private logger: NGXLogger, private http: HttpClient) {}\n\n  get cfg() {\n    return this._cfg;\n  }\n\n  set cfg(cfg: ConfigModel) {\n    this._cfg = cfg;\n    if (!this._cfg.logger) {\n      this._cfg.logger = this.logger;\n    }\n  }\n\n  findMappingFiles(filter: string): Observable {\n    return new Observable((observer: any) => {\n      const url = this.cfg.initCfg.baseMappingServiceUrl + 'mappings' + (filter == null ? '' : '?filter=' + filter);\n      this.cfg.logger.trace('Mapping List Request');\n      this.http.get(url, { headers: this.headers }).toPromise().then((body: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping List Response: ${JSON.stringify(body)}`);\n        }\n        const entries: any[] = body.StringMap.stringMapEntry;\n        const mappingFileNames: string[] = [];\n        for (const entry of entries) {\n          mappingFileNames.push(entry.name);\n        }\n        observer.next(mappingFileNames);\n        observer.complete();\n      }).catch((error: any) => {\n        if (error.status !== DataMapperUtil.HTTP_STATUS_NO_CONTENT) {\n          this.handleError('Error occurred while accessing the current mapping files from the runtime service.', error);\n          observer.error(error);\n        }\n        observer.complete();\n      });\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n  /**\n   * Retrieve the current user data mappings catalog from the server as a GZIP compressed byte array buffer.\n   */\n  getCurrentMappingCatalog(): Observable {\n    const catalogName = 'adm-catalog-files.gz';\n    return new Observable((observer: any) => {\n      const baseURL: string = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/GZ/';\n      const url: string = baseURL + catalogName;\n      this.cfg.logger.trace('Mapping Catalog Request');\n      const catHeaders = new HttpHeaders(\n        { 'Content-Type':  'application/octet-stream',\n          'Accept':        'application/octet-stream',\n          'Response-Type': 'application/octet-stream'\n        });\n      this.http.get(url, { headers: catHeaders, responseType: 'arraybuffer' }).toPromise().then((body: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping Catalog Response: ${JSON.stringify(body)}`);\n        }\n        observer.next(body);\n        observer.complete();\n      }).catch((error: any) => {\n        if (error.status !== DataMapperUtil.HTTP_STATUS_NO_CONTENT) {\n          this.handleError('Error occurred while accessing the current mappings catalog from the runtime service.', error);\n          observer.error(error);\n        }\n        observer.complete();\n      });\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n  getCurrentADMCatalog(): Observable {\n    const atlasmapCatalogName = 'atlasmap-catalog.adm';\n    return new Observable((observer: any) => {\n      const baseURL: string = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/ZIP/';\n      const url: string = baseURL + atlasmapCatalogName;\n      this.cfg.logger.trace('Mapping Catalog Request');\n      const catHeaders = new HttpHeaders(\n        { 'Content-Type':  'application/octet-stream',\n          'Accept':        'application/octet-stream',\n          'Response-Type': 'application/octet-stream'\n        });\n      this.http.get(url, { headers: catHeaders, responseType: 'arraybuffer' }).toPromise().then((body: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping Catalog Response: ${JSON.stringify(body)}`);\n        }\n        observer.next(body);\n        observer.complete();\n      }).catch((error: any) => {\n        if (error.status !== DataMapperUtil.HTTP_STATUS_NO_CONTENT) {\n          this.handleError('Error occurred while accessing the ADM catalog from the runtime service.', error);\n          observer.error(error);\n        }\n        observer.complete();\n      });\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n  /**\n   * Establish an observable function to delete mapping files on the runtime.\n   */\n  resetAll(): Observable {\n    return new Observable((observer: any) => {\n      const url = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/RESET';\n      this.cfg.logger.trace('Mapping Service Request - Reset');\n      this.http.delete(url, { headers: this.headers }).toPromise().then((res: any) => {\n          if (this.cfg.isTraceEnabled()) {\n            this.cfg.logger.trace(`Mapping Service Response - Reset: ${JSON.stringify(res)}`);\n          }\n          observer.next(true);\n          observer.complete();\n          return res;\n        })\n        .catch((error: any) => {\n          this.handleError('Error occurred while resetting mappings.', error); },\n      );\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n /**\n  * Commit the specified AtlasMapping JSON user mapping string to the runtime service.  The mappings\n  * are kept separate so they can be updated with minimal overhead.\n  *\n  * @param buffer - JSON content\n  */\n  setMappingToService(jsonBuffer: string): Observable {\n    return new Observable((observer: any) => {\n      const url = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/JSON/' + this.getMappingId();\n      this.cfg.logger.trace('Mapping Service Request');\n      this.http.put(url, jsonBuffer, { headers: this.headers }).toPromise().then((res: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping Service Response: ${JSON.stringify(res)}`);\n        }\n        observer.next(true);\n        observer.complete();\n      })\n      .catch((error: any) => {\n        this.handleError('Error occurred while establishing mappings from an imported JSON.', error);\n        observer.error(error);\n        observer.complete();\n      });\n    });\n  }\n\n  /**\n   * The user has either exported their mappings or imported new mappings.  Either way we're saving them on the server.\n   *\n   * @param compressedBuffer\n   */\n   setBinaryFileToService(compressedBuffer: any, url: string): Observable {\n     return new Observable((observer: any) => {\n       this.cfg.logger.trace('Set Compressed Mapping Service Request');\n       this.http.put(url, compressedBuffer, { headers: this.headers }).toPromise().then((res: any) => {\n          if (this.cfg.isTraceEnabled()) {\n            this.cfg.logger.trace(`Set Compressed Mapping Service Response: ${JSON.stringify(res)}`);\n          }\n          observer.next(true);\n          observer.complete();\n       })\n      .catch((error: any) => {\n        this.handleError('Error occurred while saving mapping.', error);\n        observer.error(error);\n        observer.complete();\n      });\n    });\n   }\n\n  /**\n   * Update the current mapping files and export the current mappings catalog (ADM).\n   *\n   * Establish the file content in JSON format (mappings + schema + instance-schema), compress\n   * it (GZIP), update the runtime, then fetch the full ADM catalog ZIP file from the runtime\n   * and export it.\n   *\n   * @param event\n   */\n  async exportMappingsCatalog(mappingsFileName: string): Promise {\n    return new Promise(async(resolve, reject) => {\n      let aggregateBuffer = '   {\\n';\n      let userExport = true;\n\n      try {\n        if (mappingsFileName === null || mappingsFileName.length === 0) {\n          mappingsFileName = 'atlasmap-mapping.adm';\n          userExport = false;\n        }\n\n        // Retrieve the JSON mappings buffer from the server.\n        if (await this.getJsonBuf()) {\n          aggregateBuffer += DocumentManagementService.generateExportMappings(this.jsonBuffer[0]);\n        }\n\n        let exportMeta = '   \"exportMeta\": [\\n';\n        let exportBlockData = '      \"exportBlockData\": [\\n';\n        let docCount = 0;\n\n        // Establish two string arrays:\n        //   exportMeta - meta-data describing the instance or schema documents.\n        //   exportBlockData - the actual source of the instance/schema/mappings documents or the Java class name.\n        for (const doc of this.cfg.getAllDocs()) {\n          if (doc.inspectionSource !== null &&\n               (doc.inspectionType === InspectionType.INSTANCE) || (doc.inspectionType === InspectionType.SCHEMA) ||\n                 (doc.inspectionType === InspectionType.JAVA_CLASS) ) {\n            if (docCount > 0) {\n              exportMeta += ',\\n';\n              exportBlockData += ',\\n';\n            }\n            exportMeta += DocumentManagementService.generateExportMetaStr(doc);\n            exportBlockData += DocumentManagementService.generateExportBlockData(doc.inspectionSource);\n            docCount++;\n          }\n        }\n        exportMeta += '   ],\\n';\n        exportBlockData += '   ]\\n';\n        aggregateBuffer += exportMeta;\n        aggregateBuffer += exportBlockData;\n        aggregateBuffer += '   }\\n';\n\n        // Compress the JSON buffer - write out as binary.\n        const binBuffer = DataMapperUtil.str2bytes(aggregateBuffer);\n        try {\n          const compress = deflate(binBuffer, {gzip: true});\n          let fileContent: Blob = new Blob([compress], {type: 'application/octet-stream'});\n\n          // Save the model mappings to the runtime.\n          this.setBinaryFileToService(fileContent,\n            this.cfg.initCfg.baseMappingServiceUrl + 'mapping/GZ/' + this.getMappingId()).toPromise()\n            .then(async(result: boolean) => {\n\n            // Fetch the full ADM catalog file from the runtime (ZIP) and export it to to the local\n            // downloads area.\n            if (userExport) {\n\n              this.getCurrentADMCatalog().subscribe( async(value: Uint8Array) => {\n\n                // If value is null then no compressed mappings catalog is available on the server.\n                if (value !== null) {\n                  fileContent = new Blob([value], {type: 'application/octet-stream'});\n                  if (!await DataMapperUtil.writeFile(fileContent, mappingsFileName)) {\n                    this.cfg.errorService.mappingError('Unable to save the current data mappings.', null);\n                  }\n                }\n                resolve(true);\n              });\n            }\n          }).catch((error: any) => {\n            if (error.status === 0) {\n              this.cfg.errorService.mappingError(\n                'Fatal network error: Unable to connect to the AtlasMap design runtime service.', error);\n            } else {\n              this.cfg.errorService.mappingError(\n                'Unable to update the catalog mappings file to the AtlasMap design runtime service.  ' +\n                  error.status + ' ' + error.statusText, error);\n            }\n          });\n        } catch (error1) {\n          this.cfg.errorService.mappingError('Unable to compress the current data mappings.\\n', error1);\n          return;\n        }\n      } catch (error) {\n        this.cfg.errorService.mappingError('Unable to export the current data mappings.', error);\n        return;\n      }\n    });\n  }\n\n  /**\n   * Perform a binary read of the specified catalog (.ADM) file and push it to the runtime.  The ADM file is\n   * in (ZIP) file format.  Once pushed, we can retrieve from runtime the extracted compressed (GZIP) mappings\n   * file catalog as well as the mappings JSON file.  These files exist separately for performance reasons.\n   *\n   * Once the runtime has its ADM catalog, catalog files and mappings file set then restart the DM.\n   *\n   * @param mappingsFileName - ADM master ZIP catalog\n   */\n  async importADMCatalog(mappingsFileName: string): Promise {\n    return new Promise(async(resolve, reject) => {\n      let fileBin = null;\n      const reader = new FileReader();\n\n      // Turn the imported ADM file into a binary octet stream.\n      try {\n        fileBin = await DataMapperUtil.readBinaryFile(mappingsFileName, reader);\n      } catch (error) {\n        this.cfg.errorService.mappingError('Unable to import the specified catalog file \\'' + mappingsFileName + '\\'', error);\n        return;\n      }\n      const fileContent: Blob = new Blob([fileBin], {type: 'application/octet-stream'});\n\n      // Push the binary stream to the runtime.\n      this.setBinaryFileToService(fileContent, this.cfg.initCfg.baseMappingServiceUrl +\n        'mapping/ZIP/' + this.getMappingId()).toPromise().then( async(result: boolean) => {\n\n        try {\n          await this.cfg.initializationService.initialize();\n        } catch (error) {\n          this.cfg.errorService.mappingError('Unable to import the catalog file: \\n' + mappingsFileName +\n            '\\n' + error.message, error);\n          return;\n        }\n      }).catch((error: any) => {\n        if (error.status === 0) {\n          this.cfg.errorService.mappingError(\n            'Fatal network error: Unable to connect to the AtlasMap design runtime service.', error);\n        } else {\n          this.cfg.errorService.mappingError(\n            'Unable to send the ADM file to the runtime service.  ' + error.status + ' ' + error.statusText, error);\n        }\n      });\n      resolve(true);\n    });\n  }\n\n  /**\n   * Asynchronously retrieve the current user-defined AtlasMap mappings from the runtime server as an JSON buffer.\n   */\n  private async getJsonBuf(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this.cfg.mappings === null) {\n        resolve(false);\n      }\n      this.cfg.mappingFiles[0] = this.cfg.mappings.name;\n      this.getCurrentMappingJson().toPromise().then((result: string) => {\n        this.jsonBuffer = result;\n        resolve(true);\n      }).catch((error: any) => {\n        if (error.status === 0) {\n          this.cfg.errorService.mappingError(\n            'Fatal network error: Unable to connect to the AtlasMap design runtime service.', error);\n        } else {\n          this.cfg.errorService.mappingError(\n            'Unable to access current mapping definitions: ' + error.status + ' ' + error.statusText, error);\n        }\n        resolve(false);\n      });\n    });\n  }\n\n  /**\n   * Retrieve the current user AtlasMap data mappings from the server as an JSON buffer.\n   */\n  private getCurrentMappingJson(): Observable {\n    const mappingFileNames: string[] = this.cfg.mappingFiles;\n    return new Observable((observer: any) => {\n      const baseURL: string = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/JSON/';\n      const operations: Observable[] = [];\n      for (const mappingName of mappingFileNames) {\n        const url: string = baseURL + mappingName;\n        this.cfg.logger.trace('Mapping Service Request');\n        const jsonHeaders = new HttpHeaders(\n          { 'Content-Type':  'application/json',\n            'Accept':        'application/json',\n            'Response-Type': 'application/json'\n          });\n        const operation = this.http.get(url, { headers: jsonHeaders, responseType: 'text' }).pipe(map((res: any) => res ));\n        operations.push(operation);\n      }\n\n      forkJoin(operations).toPromise().then((data: string[]) => {\n        if (!data) {\n          observer.next('no data');\n          observer.complete();\n          return;\n        }\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping Service Response: ${JSON.stringify(data)}`);\n        }\n        observer.next(data);\n        observer.complete();\n      }).catch((error: any) => {\n        observer.error(error);\n        observer.complete();\n      });\n    });\n  }\n\n  private getMappingId(): string {\n    return (this.cfg.mappingFiles.length > 0) ? this.cfg.mappingFiles[0] : '0';\n  }\n\n  private handleError(message: string, error: any): void {\n    this.cfg.errorService.mappingError(message, error);\n    this.cfg.initCfg.initialized = true;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusDirective.html":{"url":"directives/FocusDirective.html","title":"directive - FocusDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FocusDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/common/focus.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterContentChecked\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [focus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hasFocus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentChecked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/common/focus.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        focus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/common/focus.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentChecked\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentChecked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/focus.directive.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hasFocus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/common/focus.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input, AfterContentChecked } from '@angular/core';\n\n@Directive({\n  selector: '[focus]'\n})\nexport class FocusDirective implements AfterContentChecked {\n\n  @Input() focus: boolean;\n  private hasFocus = false;\n\n  constructor(private elementRef: ElementRef) {\n  }\n\n  ngAfterContentChecked() {\n    if (this.focus && !this.hasFocus) {\n      this.elementRef.nativeElement.focus();\n      this.hasFocus = true;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LineModel.html":{"url":"classes/LineModel.html","title":"class - LineModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LineModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/components/line-machine.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sourceX\n                            \n                            \n                                sourceY\n                            \n                            \n                                stroke\n                            \n                            \n                                style\n                            \n                            \n                                targetField\n                            \n                            \n                                targetX\n                            \n                            \n                                targetY\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/line-machine.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/line-machine.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stroke\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'url(#line-gradient-dormant)'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/line-machine.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeStyle\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/line-machine.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/line-machine.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/line-machine.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/line-machine.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, Input, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { ConfigModel, AdmRedrawMappingLinesEvent } from '../models/config.model';\nimport { MappingModel } from '../models/mapping.model';\nimport { Field } from '../models/field.model';\n\nimport { DocumentDefinitionComponent } from './document-definition.component';\nimport { DocumentFieldDetailComponent } from './document-field-detail.component';\nimport { Subscription } from 'rxjs';\n\nexport class LineModel {\n  sourceX: string;\n  sourceY: string;\n  targetX: string;\n  targetY: string;\n  stroke = 'url(#line-gradient-dormant)';\n  style: SafeStyle;\n  targetField: Field;\n}\n\n@Component({\n  selector: 'line-machine',\n  templateUrl: './line-machine.component.html',\n})\n\nexport class LineMachineComponent implements OnInit, OnDestroy {\n  @Input() cfg: ConfigModel;\n  @Input() docDefInput: DocumentDefinitionComponent;\n  @Input() docDefOutput: DocumentDefinitionComponent;\n\n  lines: LineModel[] = [];\n  lineBeingFormed: LineModel;\n  drawingLine = false;\n  svgStyle: SafeStyle;\n\n  @ViewChild('lineMachineElement') lineMachineElement: ElementRef;\n\n  private yOffset = 3;\n  private mappingUpdatedSubscription: Subscription;\n\n  constructor(private sanitizer: DomSanitizer, public detector: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.mappingUpdatedSubscription = this.cfg.mappingService.mappingUpdated$.subscribe(() => {\n      this.mappingChanged();\n      this.docDefInput.setLineMachine(this);\n      this.docDefOutput.setLineMachine(this);\n    });\n  }\n\n  ngOnDestroy() {\n    this.mappingUpdatedSubscription.unsubscribe();\n  }\n\n  handleRedrawMappingLinesEvent(event: AdmRedrawMappingLinesEvent): void {\n    const lmcInstance: LineMachineComponent = event._lmcInstance;\n    lmcInstance.redrawLinesForMappings();\n  }\n\n  /**\n   * Match the line geometry of a selected line to determine the matching line model array element.  Return\n   * the target field from that array element.\n   *\n   * @param selectedLineAttrs\n   */\n  private getTargetFieldFromLine(selectedLineAttrs: NamedNodeMap): Field {\n    for (const line of this.lines) {\n      if ((selectedLineAttrs[1].nodeValue === line.sourceX) &&\n          (selectedLineAttrs[2].nodeValue === line.sourceY) &&\n          (selectedLineAttrs[3].nodeValue === line.targetX) &&\n          (selectedLineAttrs[4].nodeValue === line.targetY)) {\n        return line.targetField;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * The user has selected between the panels.  This is likely a line - verify it and select the fields\n   * associated with the line.\n   *\n   * @param event\n   */\n  handleLineClick(event) {\n    const selectedElement = event.target;\n    if (selectedElement !== null && selectedElement.nodeName === 'line') {\n      const targetField: Field = this.getTargetFieldFromLine(selectedElement.attributes);\n      if (targetField != null) {\n        this.cfg.mappingService.fieldSelected(targetField, false);\n        setTimeout(() => {\n          this.redrawLinesForMappings();\n        }, 1);\n      }\n    }\n  }\n\n  addLineFromParams(sourceX: string, sourceY: string, targetX: string, targetY: string, stroke: string, targetField: Field): void {\n    const l: LineModel = new LineModel();\n    l.sourceX = sourceX;\n    l.sourceY = sourceY;\n    l.targetX = targetX;\n    l.targetY = targetY;\n    l.stroke = stroke;\n    l.targetField = targetField;\n    this.addLine(l);\n  }\n\n  addLine(l: LineModel): void {\n    this.createLineStyle(l);\n    this.lines.push(l);\n  }\n\n  setLineBeingFormed(l: LineModel): void {\n    if (l != null) {\n      this.createLineStyle(l);\n    }\n    this.lineBeingFormed = l;\n  }\n\n  clearLines(): void {\n    this.lines = [];\n  }\n\n  drawLine(event: MouseEvent): void {\n    this.drawCurrentLine(event.offsetX.toString(), event.offsetY.toString());\n  }\n\n  drawCurrentLine(x: string, y: string): void {\n    if (this.drawingLine && this.lineBeingFormed) {\n      this.lineBeingFormed.targetX = x;\n      this.lineBeingFormed.targetY = y;\n    }\n  }\n\n  handleDocumentFieldMouseOver(component: DocumentFieldDetailComponent, event: any, isSource: boolean): void {\n    if (!this.drawingLine) {\n      return;\n    }\n    if (isSource) {\n      return;\n    }\n    const targetY = this.docDefOutput.getFieldDetailComponentPosition(component.field).y;\n    this.drawCurrentLine('100%', (targetY + this.yOffset).toString());\n  }\n\n  mappingChanged(): void {\n    this.drawingLine = false;\n    this.setLineBeingFormed(null);\n    this.redrawLinesForMappings();\n  }\n\n  redrawLinesForMappings(): void {\n    if (!this.cfg.initCfg.initialized || !this.cfg.mappings) {\n      this.clearLines();\n      return;\n    }\n    if (!this.cfg.mappings.activeMapping) {\n      this.setLineBeingFormed(null);\n    }\n    this.clearLines();\n    if (!this.cfg.showMappedFields) {\n      return;\n    }\n    const mappings: MappingModel[] = this.cfg.mappings.mappings;\n    const activeMapping: MappingModel = this.cfg.mappings.activeMapping;\n    let foundSelectedMapping = false;\n    for (const m of mappings) {\n      foundSelectedMapping = foundSelectedMapping || (m === activeMapping);\n      this.drawLinesForMapping(m);\n    }\n    if (!foundSelectedMapping && activeMapping) {\n      this.drawLinesForMapping(activeMapping);\n    }\n    setTimeout(() => {\n      this.detector.detectChanges();\n    }, 10);\n  }\n\n  private createLineStyle(l: LineModel): void {\n    // angular2 will throw an error if we don't use this sanitizer to signal to angular2 that the css style value is ok.\n    l.style = this.sanitizer.bypassSecurityTrustStyle('stroke:' + l.stroke + '; stroke-width:4px;');\n  }\n\n  private drawLinesForMapping(m: MappingModel): void {\n    const el: any = this.lineMachineElement.nativeElement;\n    const lineMachineHeight: number = el.offsetHeight;\n\n    const isSelectedMapping: boolean = (this.cfg.mappings.activeMapping === m);\n    const stroke: string = 'url(#line-gradient-' + (isSelectedMapping ? 'active' : 'dormant') + ')';\n    if (!m.sourceFields.length || !m.targetFields.length) {\n      return;\n    }\n\n    for (const mappedInputField of m.sourceFields) {\n      const inputField: Field = mappedInputField.field;\n      if (!this.checkFieldEligibiltyForLineDrawing(inputField, 'input', m)) {\n        continue;\n      }\n\n      const inputFieldPos: any = this.getScreenPosForField(inputField, this.docDefInput);\n      if (inputFieldPos == null) {\n        continue;\n      }\n\n      let sourceY: number = inputFieldPos.y;\n      sourceY = (sourceY  (lineMachineHeight - 27)) ? (lineMachineHeight - 27) : sourceY;\n\n      for (const mappedOutputField of m.targetFields) {\n        const outputField: Field = mappedOutputField.field;\n        if (!this.checkFieldEligibiltyForLineDrawing(outputField, 'output', m)) {\n          continue;\n        }\n\n        const outputFieldPos: any = this.getScreenPosForField(outputField, this.docDefOutput);\n        if (outputFieldPos == null) {\n          continue;\n        }\n\n        let targetY: number = outputFieldPos.y;\n        targetY = (targetY  (lineMachineHeight - 27)) ? (lineMachineHeight - 27) : targetY;\n\n        if (isSelectedMapping || (this.cfg.showLinesAlways)) {\n          this.addLineFromParams('0', (sourceY + this.yOffset).toString(),\n            '100%', (targetY + this.yOffset).toString(), stroke, outputField);\n        }\n      }\n    }\n  }\n\n  private getScreenPosForField(field: Field, docDefComponent: DocumentDefinitionComponent): any {\n    if (field == null || field.docDef == null) {\n      return null;\n    }\n    if (!field.docDef.showFields) {\n      const pos: any = docDefComponent.getDocDefElementPosition(field.docDef);\n      if (pos) {\n        pos['y'] = pos['y'] + 5;\n      }\n      return pos;\n    }\n    let parentField: Field = field;\n    while (parentField != null) {\n      const fieldPos: any = docDefComponent.getFieldDetailComponentPosition(parentField);\n      if (fieldPos != null) {\n        return fieldPos;\n      }\n      parentField = parentField.parentField;\n    }\n    return null;\n  }\n\n  private checkFieldEligibiltyForLineDrawing(field: Field, description: string, m: MappingModel): boolean {\n    if (!field) {\n      return false;\n    }\n    if (!field.visibleInCurrentDocumentSearch) {\n      return false;\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LookupTable.html":{"url":"classes/LookupTable.html","title":"class - LookupTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LookupTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                name\n                            \n                            \n                                sourceIdentifier\n                            \n                            \n                                targetIdentifier\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEntryForSource\n                            \n                            \n                                getInputOutputKey\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:44\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LookupTableEntry[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceIdentifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetIdentifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:44\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEntryForSource\n                        \n                        \n                    \n                \n            \n            \n                \ngetEntryForSource(sourceValue: string, autocreate: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    autocreate\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LookupTableEntry\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInputOutputKey\n                        \n                        \n                    \n                \n            \n            \n                \ngetInputOutputKey()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class LookupTableEntry {\n  sourceValue: string;\n  sourceType = 'STRING';\n  targetValue: string;\n  targetType = 'STRING';\n\n  toJSON(): any {\n    return {\n      'sourceValue': this.sourceValue,\n      'sourceType': this.sourceType,\n      'targetValue': this.targetValue,\n      'targetType': this.targetType,\n    };\n  }\n\n  fromJSON(json: any): void {\n    this.sourceValue = json.sourceValue;\n    this.sourceType = json.sourceType;\n    this.targetValue = json.targetValue;\n    this.targetType = json.targetType;\n  }\n}\n\nexport class LookupTable {\n  name: string;\n  entries: LookupTableEntry[] = [];\n  sourceIdentifier: string;\n  targetIdentifier: string;\n\n  constructor() {\n    this.name = (new Date().getTime() + '-' + Math.floor(Math.random() * 1000000).toString());\n  }\n\n  getInputOutputKey(): string {\n    return this.sourceIdentifier + ':' + this.targetIdentifier;\n  }\n\n  getEntryForSource(sourceValue: string, autocreate: boolean): LookupTableEntry {\n    for (const entry of this.entries) {\n      if (entry.sourceValue === sourceValue) {\n        return entry;\n      }\n    }\n    if (autocreate) {\n      const entry: LookupTableEntry = new LookupTableEntry();\n      entry.sourceValue = sourceValue;\n      this.entries.push(entry);\n      return entry;\n    }\n    return null;\n  }\n\n  toString() {\n    let result: string = 'Lookup Table, name: ' + this.name + ', entries: ' + this.entries.length;\n    result += '\\n\\sourceIdentifier: ' + this.sourceIdentifier;\n    result += '\\n\\targetIdentifier: ' + this.targetIdentifier;\n    let counter = 0;\n    for (const entry of this.entries) {\n      result += '\\n\\tEntry #' + counter + ': ' + entry.sourceValue + ' => ' + entry.targetValue;\n      counter += 1;\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LookupTableComponent.html":{"url":"components/LookupTableComponent.html","title":"component - LookupTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LookupTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lookup-table\n            \n\n\n\n\n            \n                templateUrl\n                ./lookup-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                mapping\n                            \n                            \n                                outputSelects\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                saveTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(cfg: ConfigModel, mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveTable\n                        \n                        \n                    \n                \n            \n            \n                \nsaveTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LookupTableData[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            outputSelects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('outputSelect')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            table\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LookupTable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChildren, ElementRef, QueryList } from '@angular/core';\n\nimport { LookupTable, LookupTableEntry } from '../../models/lookup-table.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\nimport { MappingModel } from '../../models/mapping.model';\nimport { ModalWindowValidator } from '../modal-window.component';\n\nexport class LookupTableData {\n  sourceEnumValue: string;\n  targetEnumValues: string[];\n  selectedTargetEnumValue: string;\n}\n\n@Component({\n  selector: 'lookup-table',\n  templateUrl: './lookup-table.component.html',\n})\n\nexport class LookupTableComponent implements ModalWindowValidator {\n  mapping: MappingModel;\n\n  table: LookupTable;\n  data: LookupTableData[];\n\n  @ViewChildren('outputSelect') outputSelects: QueryList;\n\n  initialize(cfg: ConfigModel, mapping: MappingModel): void {\n    this.mapping = mapping;\n\n    const targetField: Field = mapping.getFields(false)[0];\n    const targetValues: string[] = [];\n    targetValues.push('[ None ]');\n    for (const e of targetField.enumValues) {\n      targetValues.push(e.name);\n    }\n\n    this.table = cfg.mappings.getTableByName(mapping.transition.lookupTableName);\n    if (this.table == null) {\n      cfg.errorService.error('Could not find enum lookup table for mapping.', mapping);\n    }\n\n    const d: LookupTableData[] = [];\n    const sourceField: Field = mapping.getFields(true)[0];\n    for (const e of sourceField.enumValues) {\n      const tableData: LookupTableData = new LookupTableData();\n      tableData.sourceEnumValue = e.name;\n      tableData.targetEnumValues = [].concat(targetValues);\n      const selected: LookupTableEntry = this.table.getEntryForSource(tableData.sourceEnumValue, false);\n      tableData.selectedTargetEnumValue = (selected == null) ? '[ None ]' : selected.targetValue;\n      d.push(tableData);\n    }\n    this.data = d;\n  }\n\n  isDataValid() {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n  saveTable(): void {\n    this.table.entries = [];\n    for (const c of this.outputSelects.toArray()) {\n      const selectedOptions: any[] = c.nativeElement.selectedOptions;\n      if (selectedOptions && selectedOptions.length) {\n        const targetValue: string = selectedOptions[0].label;\n        if (targetValue === '[ None ]') {\n          continue;\n        }\n        const e: LookupTableEntry = new LookupTableEntry();\n        e.sourceValue = c.nativeElement.attributes['sourceValue'].value;\n        e.targetValue = targetValue;\n        this.table.entries.push(e);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{ d.sourceEnumValue }}\n    \n      {{ targetEnumValue }}\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ d.sourceEnumValue }}          {{ targetEnumValue }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'LookupTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LookupTableData.html":{"url":"classes/LookupTableData.html","title":"class - LookupTableData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LookupTableData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedTargetEnumValue\n                            \n                            \n                                sourceEnumValue\n                            \n                            \n                                targetEnumValues\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTargetEnumValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceEnumValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetEnumValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, ViewChildren, ElementRef, QueryList } from '@angular/core';\n\nimport { LookupTable, LookupTableEntry } from '../../models/lookup-table.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\nimport { MappingModel } from '../../models/mapping.model';\nimport { ModalWindowValidator } from '../modal-window.component';\n\nexport class LookupTableData {\n  sourceEnumValue: string;\n  targetEnumValues: string[];\n  selectedTargetEnumValue: string;\n}\n\n@Component({\n  selector: 'lookup-table',\n  templateUrl: './lookup-table.component.html',\n})\n\nexport class LookupTableComponent implements ModalWindowValidator {\n  mapping: MappingModel;\n\n  table: LookupTable;\n  data: LookupTableData[];\n\n  @ViewChildren('outputSelect') outputSelects: QueryList;\n\n  initialize(cfg: ConfigModel, mapping: MappingModel): void {\n    this.mapping = mapping;\n\n    const targetField: Field = mapping.getFields(false)[0];\n    const targetValues: string[] = [];\n    targetValues.push('[ None ]');\n    for (const e of targetField.enumValues) {\n      targetValues.push(e.name);\n    }\n\n    this.table = cfg.mappings.getTableByName(mapping.transition.lookupTableName);\n    if (this.table == null) {\n      cfg.errorService.error('Could not find enum lookup table for mapping.', mapping);\n    }\n\n    const d: LookupTableData[] = [];\n    const sourceField: Field = mapping.getFields(true)[0];\n    for (const e of sourceField.enumValues) {\n      const tableData: LookupTableData = new LookupTableData();\n      tableData.sourceEnumValue = e.name;\n      tableData.targetEnumValues = [].concat(targetValues);\n      const selected: LookupTableEntry = this.table.getEntryForSource(tableData.sourceEnumValue, false);\n      tableData.selectedTargetEnumValue = (selected == null) ? '[ None ]' : selected.targetValue;\n      d.push(tableData);\n    }\n    this.data = d;\n  }\n\n  isDataValid() {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n  saveTable(): void {\n    this.table.entries = [];\n    for (const c of this.outputSelects.toArray()) {\n      const selectedOptions: any[] = c.nativeElement.selectedOptions;\n      if (selectedOptions && selectedOptions.length) {\n        const targetValue: string = selectedOptions[0].label;\n        if (targetValue === '[ None ]') {\n          continue;\n        }\n        const e: LookupTableEntry = new LookupTableEntry();\n        e.sourceValue = c.nativeElement.attributes['sourceValue'].value;\n        e.targetValue = targetValue;\n        this.table.entries.push(e);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LookupTableEntry.html":{"url":"classes/LookupTableEntry.html","title":"class - LookupTableEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LookupTableEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sourceType\n                            \n                            \n                                sourceValue\n                            \n                            \n                                targetType\n                            \n                            \n                                targetValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fromJSON\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fromJSON\n                        \n                        \n                    \n                \n            \n            \n                \nfromJSON(json: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    json\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class LookupTableEntry {\n  sourceValue: string;\n  sourceType = 'STRING';\n  targetValue: string;\n  targetType = 'STRING';\n\n  toJSON(): any {\n    return {\n      'sourceValue': this.sourceValue,\n      'sourceType': this.sourceType,\n      'targetValue': this.targetValue,\n      'targetType': this.targetType,\n    };\n  }\n\n  fromJSON(json: any): void {\n    this.sourceValue = json.sourceValue;\n    this.sourceType = json.sourceType;\n    this.targetValue = json.targetValue;\n    this.targetType = json.targetType;\n  }\n}\n\nexport class LookupTable {\n  name: string;\n  entries: LookupTableEntry[] = [];\n  sourceIdentifier: string;\n  targetIdentifier: string;\n\n  constructor() {\n    this.name = (new Date().getTime() + '-' + Math.floor(Math.random() * 1000000).toString());\n  }\n\n  getInputOutputKey(): string {\n    return this.sourceIdentifier + ':' + this.targetIdentifier;\n  }\n\n  getEntryForSource(sourceValue: string, autocreate: boolean): LookupTableEntry {\n    for (const entry of this.entries) {\n      if (entry.sourceValue === sourceValue) {\n        return entry;\n      }\n    }\n    if (autocreate) {\n      const entry: LookupTableEntry = new LookupTableEntry();\n      entry.sourceValue = sourceValue;\n      this.entries.push(entry);\n      return entry;\n    }\n    return null;\n  }\n\n  toString() {\n    let result: string = 'Lookup Table, name: ' + this.name + ', entries: ' + this.entries.length;\n    result += '\\n\\sourceIdentifier: ' + this.sourceIdentifier;\n    result += '\\n\\targetIdentifier: ' + this.targetIdentifier;\n    let counter = 0;\n    for (const entry of this.entries) {\n      result += '\\n\\tEntry #' + counter + ': ' + entry.sourceValue + ' => ' + entry.targetValue;\n      counter += 1;\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MappedField.html":{"url":"classes/MappedField.html","title":"class - MappedField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MappedField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                field\n                            \n                            \n                                parsedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isPadField\n                            \n                            \n                                isSource\n                            \n                            \n                                removeAction\n                            \n                            \n                                    Static\n                                sortMappedFieldsByPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldAction[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappedFieldParsingData\n\n                        \n                    \n                    \n                        \n                            Default value : new MappedFieldParsingData()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:40\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPadField\n                        \n                        \n                    \n                \n            \n            \n                \nisPadField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSource\n                        \n                        \n                    \n                \n            \n            \n                \nisSource()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeAction\n                        \n                        \n                    \n                \n            \n            \n                \nremoveAction(action: FieldAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            sortMappedFieldsByPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sortMappedFieldsByPath(mappedFields: MappedField[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappedFields\n                                    \n                                            MappedField[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MappedField[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { Field } from './field.model';\nimport { TransitionModel } from './transition.model';\nimport { ErrorInfo, ErrorLevel } from '../models/error.model';\n\nimport { DataMapperUtil } from '../common/data-mapper-util';\nimport { FieldAction } from './field-action.model';\nimport { PaddingField } from './document-definition.model';\n\nexport class MappedFieldParsingData {\n  parsedName: string = null;\n  parsedPath: string = null;\n  parsedValue: string = null;\n  parsedDocID: string = null;\n  parsedDocURI: string = null;\n  parsedIndex: string = null;\n  fieldIsProperty = false;\n  fieldIsConstant = false;\n  parsedValueType: string = null;\n  parsedActions: FieldAction[] = [];\n  userCreated = false;\n}\n\nexport class MappedField {\n  parsedData: MappedFieldParsingData = new MappedFieldParsingData();\n  field: Field;\n  actions: FieldAction[] = [];\n\n  static sortMappedFieldsByPath(mappedFields: MappedField[]): MappedField[] {\n    if (mappedFields == null || mappedFields.length === 0) {\n      return [];\n    }\n    const fieldsByPath: { [key: string]: MappedField; } = {};\n    const fieldPaths: string[] = [];\n    for (const mappedField of mappedFields) {\n      if (mappedField == null || mappedField.field == null) {\n        continue;\n      }\n      const path: string = mappedField.field.path;\n      fieldsByPath[path] = mappedField;\n      fieldPaths.push(path);\n    }\n    fieldPaths.sort();\n    const result: MappedField[] = [];\n    for (const name of fieldPaths) {\n      result.push(fieldsByPath[name]);\n    }\n    return result;\n  }\n\n  isPadField(): boolean {\n    return this.field instanceof PaddingField;\n  }\n\n  isSource(): boolean {\n    return this.field.isSource();\n  }\n\n  removeAction(action: FieldAction): void {\n    DataMapperUtil.removeItemFromArray(action, this.actions);\n  }\n\n}\n\nexport class MappingModel {\n  cfg: ConfigModel;\n  uuid: string;\n\n  sourceFields: MappedField[] = [];\n  targetFields: MappedField[] = [];\n  transition: TransitionModel = new TransitionModel();\n\n  validationErrors: ErrorInfo[] = []; // must be immutable\n  previewErrors: ErrorInfo[] = []; // must be immutable\n\n  constructor() {\n    this.uuid = 'mapping.' + Math.floor((Math.random() * 1000000) + 1).toString();\n    this.cfg = ConfigModel.getConfig();\n    Object.freeze(this.validationErrors);\n  }\n\n  addValidationError(message: string) {\n    const e = new ErrorInfo(message, ErrorLevel.VALIDATION_ERROR);\n    this.validationErrors = [...this.validationErrors, e];\n    Object.freeze(this.validationErrors);\n  }\n\n  clearValidationErrors(): void {\n    this.validationErrors = [];\n    Object.freeze(this.validationErrors);\n  }\n\n  getValidationErrors(): ErrorInfo[] {\n    return this.validationErrors.filter(e => e.level >= ErrorLevel.ERROR);\n  }\n\n  getValidationWarnings(): ErrorInfo[] {\n    return this.validationErrors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  removeValidationError(identifier: string) {\n    this.validationErrors = this.validationErrors.filter(e => e.identifier !== identifier);\n    Object.freeze(this.validationErrors);\n  }\n\n  clearPreviewErrors(): void {\n    this.previewErrors = [];\n    Object.freeze(this.previewErrors);\n  }\n\n  getPreviewErrors(): ErrorInfo[] {\n    return this.previewErrors.filter(e => e.level >= ErrorLevel.ERROR);\n  }\n\n  getPreviewWarnings(): ErrorInfo[] {\n    return this.previewErrors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  removePreviewError(identifier: string) {\n    this.previewErrors = this.previewErrors.filter(e => e.identifier !== identifier);\n    Object.freeze(this.previewErrors);\n  }\n\n  getFirstCollectionField(isSource: boolean): Field {\n    for (const f of isSource ? this.sourceFields : this.targetFields) {\n      if (f.field.isInCollection()) {\n        return f.field;\n      }\n    }\n    return null;\n  }\n\n  isLookupMode(): boolean {\n    for (const f of this.sourceFields.concat(this.targetFields)) {\n      if (f.field.enumeration) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Add the specified field to this field mapping.\n   *\n   * @param field - field to add to the mapping\n   * @param first - if true add the field to the beginning of the array, last otherwise.\n   */\n  addField(field: Field, first: boolean): MappedField {\n    const mappedField: MappedField = new MappedField();\n    mappedField.field = field;\n    if (first) {\n      this.getMappedFields(field.isSource()).unshift(mappedField);\n    } else {\n      this.getMappedFields(field.isSource()).push(mappedField);\n    }\n    return mappedField;\n  }\n\n  /**\n   * Remove the specified field from this field mapping.\n   *\n   * @param field\n   */\n  removeField(field: Field) {\n    const mappedFields = this.getMappedFields(field.isSource());\n    DataMapperUtil.removeItemFromArray(mappedFields.find(mf => mf.field === field), mappedFields);\n  }\n\n  /**\n   * Return the number of user-defined (non-padding) fields in this mapping.\n   *\n   * @param field\n   */\n  getUserFieldCount(field: Field): number {\n    const mappedFields = this.getMappedFields(field.isSource());\n    let userFieldCount = 0;\n\n    for (const mappedField of mappedFields) {\n      if (!mappedField.isPadField()) {\n        userFieldCount++;\n      }\n    }\n    return userFieldCount;\n  }\n\n  hasMappedField(isSource: boolean) {\n    return isSource ? this.sourceFields.length > 0 : this.targetFields.length > 0;\n  }\n\n  isEmpty() {\n    return this.sourceFields.length === 0 && this.targetFields.length === 0;\n  }\n\n  isFullyMapped(): boolean {\n    return this.sourceFields.length > 0 && this.targetFields.length > 0;\n  }\n\n  addMappedField(mappedField: MappedField, isSource: boolean): void {\n    this.getMappedFields(isSource).push(mappedField);\n  }\n\n  removeMappedField(mappedField: MappedField): void {\n    DataMapperUtil.removeItemFromArray(mappedField, this.getMappedFields(mappedField.field.isSource()));\n  }\n\n  getMappedFieldForField(field: Field): MappedField {\n    for (const mappedField of this.getMappedFields(field.isSource())) {\n      if (mappedField.field === field) {\n        return mappedField;\n      }\n    }\n    return null;\n  }\n\n  getMappedFieldForIndex(index: string, isSource: boolean): MappedField {\n    if (!index) {\n      return null;\n    }\n    const mappedFields = this.getMappedFields(isSource);\n    if (+index - 1 > mappedFields.length - 1) {\n      return null;\n    }\n    return mappedFields[+index - 1];\n  }\n\n  getIndexForMappedField(mappedField: MappedField): number {\n    if (!mappedField) {\n      return null;\n    }\n    return this.getMappedFields(mappedField.field.isSource()).indexOf(mappedField) + 1;\n  }\n\n  /**\n   * Return an array of user mapped fields for the specified panel in this field pair instance.  No\n   * data-mapper generated padding fields will be included.\n   *\n   * @param isSource - true source panel, false target panel\n   */\n  getUserMappedFields(isSource: boolean): MappedField[] {\n    const workingFields = isSource ? this.sourceFields : this.targetFields;\n    const resultFields: MappedField[] = [new MappedField()];\n\n    for (const mappedField of workingFields) {\n      if (!mappedField.isPadField()) {\n        resultFields.push(mappedField);\n      }\n    }\n    resultFields.shift();\n    return resultFields;\n  }\n\n  getMappedFields(isSource: boolean): MappedField[] {\n    return isSource ? this.sourceFields : this.targetFields;\n  }\n\n  getLastMappedField(isSource: boolean): MappedField {\n    const fields: MappedField[] = this.getMappedFields(isSource);\n    if ((fields != null) && (fields.length > 0)) {\n      return fields[fields.length - 1];\n    }\n    return null;\n  }\n\n  getFields(isSource: boolean): Field[] {\n    const fields: Field[] = [];\n    for (const mappedField of this.getMappedFields(isSource)) {\n      if (mappedField.field != null) {\n        fields.push(mappedField.field);\n      }\n    }\n    return fields;\n  }\n\n  getFieldNames(isSource: boolean): string[] {\n    const fields: Field[] = this.getFields(isSource);\n    Field.alphabetizeFields(fields);\n    const names: string[] = [];\n    for (const field of fields) {\n      names.push(field.name);\n    }\n    return names;\n  }\n\n  getFieldPaths(isSource: boolean): string[] {\n    const fields: Field[] = this.getFields(isSource);\n    Field.alphabetizeFields(fields);\n    const paths: string[] = [];\n    for (const field of fields) {\n      paths.push(field.path);\n    }\n    return paths;\n  }\n\n  hasFieldActions(): boolean {\n    for (const mappedField of this.getAllMappedFields()) {\n      if (mappedField.actions.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getAllFields(): Field[] {\n    return this.getFields(true).concat(this.getFields(false));\n  }\n\n  getAllMappedFields(): MappedField[] {\n    return this.getMappedFields(true).concat(this.getMappedFields(false));\n  }\n\n  isFieldMapped(field: Field): boolean {\n    return this.getMappedFieldForField(field) != null;\n  }\n\n  hasTransformation(): boolean {\n    const mappedFields: MappedField[] = this.getAllMappedFields();\n    for (const mappedField of mappedFields) {\n      if (mappedField.actions.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Walk all target field mappings and return one of corresponding source field name\n   * if the specified field is already the target of a previous mapping, null otherwise.\n   *\n   * @param field\n   */\n  public getMappedTarget(field: Field): string {\n    const mappings: MappingModel[] = this.cfg.mappings.mappings;\n\n    if (field.isSource()) {\n      return null;\n    }\n    for (const m of mappings) {\n      if (m.targetFields.length === 0) {\n        continue;\n      }\n\n      for (const mappedOutputField of m.targetFields) {\n        if (mappedOutputField.field.docDef === field.docDef\n          && mappedOutputField.field.path === field.path) {\n          if (m.isFieldMapped(field)) {\n            return m.sourceFields[0].field.name;\n          }\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MappedFieldParsingData.html":{"url":"classes/MappedFieldParsingData.html","title":"class - MappedFieldParsingData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MappedFieldParsingData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fieldIsConstant\n                            \n                            \n                                fieldIsProperty\n                            \n                            \n                                parsedActions\n                            \n                            \n                                parsedDocID\n                            \n                            \n                                parsedDocURI\n                            \n                            \n                                parsedIndex\n                            \n                            \n                                parsedName\n                            \n                            \n                                parsedPath\n                            \n                            \n                                parsedValue\n                            \n                            \n                                parsedValueType\n                            \n                            \n                                userCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldIsConstant\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldIsProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldAction[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedDocID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedDocURI\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedValueType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userCreated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { Field } from './field.model';\nimport { TransitionModel } from './transition.model';\nimport { ErrorInfo, ErrorLevel } from '../models/error.model';\n\nimport { DataMapperUtil } from '../common/data-mapper-util';\nimport { FieldAction } from './field-action.model';\nimport { PaddingField } from './document-definition.model';\n\nexport class MappedFieldParsingData {\n  parsedName: string = null;\n  parsedPath: string = null;\n  parsedValue: string = null;\n  parsedDocID: string = null;\n  parsedDocURI: string = null;\n  parsedIndex: string = null;\n  fieldIsProperty = false;\n  fieldIsConstant = false;\n  parsedValueType: string = null;\n  parsedActions: FieldAction[] = [];\n  userCreated = false;\n}\n\nexport class MappedField {\n  parsedData: MappedFieldParsingData = new MappedFieldParsingData();\n  field: Field;\n  actions: FieldAction[] = [];\n\n  static sortMappedFieldsByPath(mappedFields: MappedField[]): MappedField[] {\n    if (mappedFields == null || mappedFields.length === 0) {\n      return [];\n    }\n    const fieldsByPath: { [key: string]: MappedField; } = {};\n    const fieldPaths: string[] = [];\n    for (const mappedField of mappedFields) {\n      if (mappedField == null || mappedField.field == null) {\n        continue;\n      }\n      const path: string = mappedField.field.path;\n      fieldsByPath[path] = mappedField;\n      fieldPaths.push(path);\n    }\n    fieldPaths.sort();\n    const result: MappedField[] = [];\n    for (const name of fieldPaths) {\n      result.push(fieldsByPath[name]);\n    }\n    return result;\n  }\n\n  isPadField(): boolean {\n    return this.field instanceof PaddingField;\n  }\n\n  isSource(): boolean {\n    return this.field.isSource();\n  }\n\n  removeAction(action: FieldAction): void {\n    DataMapperUtil.removeItemFromArray(action, this.actions);\n  }\n\n}\n\nexport class MappingModel {\n  cfg: ConfigModel;\n  uuid: string;\n\n  sourceFields: MappedField[] = [];\n  targetFields: MappedField[] = [];\n  transition: TransitionModel = new TransitionModel();\n\n  validationErrors: ErrorInfo[] = []; // must be immutable\n  previewErrors: ErrorInfo[] = []; // must be immutable\n\n  constructor() {\n    this.uuid = 'mapping.' + Math.floor((Math.random() * 1000000) + 1).toString();\n    this.cfg = ConfigModel.getConfig();\n    Object.freeze(this.validationErrors);\n  }\n\n  addValidationError(message: string) {\n    const e = new ErrorInfo(message, ErrorLevel.VALIDATION_ERROR);\n    this.validationErrors = [...this.validationErrors, e];\n    Object.freeze(this.validationErrors);\n  }\n\n  clearValidationErrors(): void {\n    this.validationErrors = [];\n    Object.freeze(this.validationErrors);\n  }\n\n  getValidationErrors(): ErrorInfo[] {\n    return this.validationErrors.filter(e => e.level >= ErrorLevel.ERROR);\n  }\n\n  getValidationWarnings(): ErrorInfo[] {\n    return this.validationErrors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  removeValidationError(identifier: string) {\n    this.validationErrors = this.validationErrors.filter(e => e.identifier !== identifier);\n    Object.freeze(this.validationErrors);\n  }\n\n  clearPreviewErrors(): void {\n    this.previewErrors = [];\n    Object.freeze(this.previewErrors);\n  }\n\n  getPreviewErrors(): ErrorInfo[] {\n    return this.previewErrors.filter(e => e.level >= ErrorLevel.ERROR);\n  }\n\n  getPreviewWarnings(): ErrorInfo[] {\n    return this.previewErrors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  removePreviewError(identifier: string) {\n    this.previewErrors = this.previewErrors.filter(e => e.identifier !== identifier);\n    Object.freeze(this.previewErrors);\n  }\n\n  getFirstCollectionField(isSource: boolean): Field {\n    for (const f of isSource ? this.sourceFields : this.targetFields) {\n      if (f.field.isInCollection()) {\n        return f.field;\n      }\n    }\n    return null;\n  }\n\n  isLookupMode(): boolean {\n    for (const f of this.sourceFields.concat(this.targetFields)) {\n      if (f.field.enumeration) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Add the specified field to this field mapping.\n   *\n   * @param field - field to add to the mapping\n   * @param first - if true add the field to the beginning of the array, last otherwise.\n   */\n  addField(field: Field, first: boolean): MappedField {\n    const mappedField: MappedField = new MappedField();\n    mappedField.field = field;\n    if (first) {\n      this.getMappedFields(field.isSource()).unshift(mappedField);\n    } else {\n      this.getMappedFields(field.isSource()).push(mappedField);\n    }\n    return mappedField;\n  }\n\n  /**\n   * Remove the specified field from this field mapping.\n   *\n   * @param field\n   */\n  removeField(field: Field) {\n    const mappedFields = this.getMappedFields(field.isSource());\n    DataMapperUtil.removeItemFromArray(mappedFields.find(mf => mf.field === field), mappedFields);\n  }\n\n  /**\n   * Return the number of user-defined (non-padding) fields in this mapping.\n   *\n   * @param field\n   */\n  getUserFieldCount(field: Field): number {\n    const mappedFields = this.getMappedFields(field.isSource());\n    let userFieldCount = 0;\n\n    for (const mappedField of mappedFields) {\n      if (!mappedField.isPadField()) {\n        userFieldCount++;\n      }\n    }\n    return userFieldCount;\n  }\n\n  hasMappedField(isSource: boolean) {\n    return isSource ? this.sourceFields.length > 0 : this.targetFields.length > 0;\n  }\n\n  isEmpty() {\n    return this.sourceFields.length === 0 && this.targetFields.length === 0;\n  }\n\n  isFullyMapped(): boolean {\n    return this.sourceFields.length > 0 && this.targetFields.length > 0;\n  }\n\n  addMappedField(mappedField: MappedField, isSource: boolean): void {\n    this.getMappedFields(isSource).push(mappedField);\n  }\n\n  removeMappedField(mappedField: MappedField): void {\n    DataMapperUtil.removeItemFromArray(mappedField, this.getMappedFields(mappedField.field.isSource()));\n  }\n\n  getMappedFieldForField(field: Field): MappedField {\n    for (const mappedField of this.getMappedFields(field.isSource())) {\n      if (mappedField.field === field) {\n        return mappedField;\n      }\n    }\n    return null;\n  }\n\n  getMappedFieldForIndex(index: string, isSource: boolean): MappedField {\n    if (!index) {\n      return null;\n    }\n    const mappedFields = this.getMappedFields(isSource);\n    if (+index - 1 > mappedFields.length - 1) {\n      return null;\n    }\n    return mappedFields[+index - 1];\n  }\n\n  getIndexForMappedField(mappedField: MappedField): number {\n    if (!mappedField) {\n      return null;\n    }\n    return this.getMappedFields(mappedField.field.isSource()).indexOf(mappedField) + 1;\n  }\n\n  /**\n   * Return an array of user mapped fields for the specified panel in this field pair instance.  No\n   * data-mapper generated padding fields will be included.\n   *\n   * @param isSource - true source panel, false target panel\n   */\n  getUserMappedFields(isSource: boolean): MappedField[] {\n    const workingFields = isSource ? this.sourceFields : this.targetFields;\n    const resultFields: MappedField[] = [new MappedField()];\n\n    for (const mappedField of workingFields) {\n      if (!mappedField.isPadField()) {\n        resultFields.push(mappedField);\n      }\n    }\n    resultFields.shift();\n    return resultFields;\n  }\n\n  getMappedFields(isSource: boolean): MappedField[] {\n    return isSource ? this.sourceFields : this.targetFields;\n  }\n\n  getLastMappedField(isSource: boolean): MappedField {\n    const fields: MappedField[] = this.getMappedFields(isSource);\n    if ((fields != null) && (fields.length > 0)) {\n      return fields[fields.length - 1];\n    }\n    return null;\n  }\n\n  getFields(isSource: boolean): Field[] {\n    const fields: Field[] = [];\n    for (const mappedField of this.getMappedFields(isSource)) {\n      if (mappedField.field != null) {\n        fields.push(mappedField.field);\n      }\n    }\n    return fields;\n  }\n\n  getFieldNames(isSource: boolean): string[] {\n    const fields: Field[] = this.getFields(isSource);\n    Field.alphabetizeFields(fields);\n    const names: string[] = [];\n    for (const field of fields) {\n      names.push(field.name);\n    }\n    return names;\n  }\n\n  getFieldPaths(isSource: boolean): string[] {\n    const fields: Field[] = this.getFields(isSource);\n    Field.alphabetizeFields(fields);\n    const paths: string[] = [];\n    for (const field of fields) {\n      paths.push(field.path);\n    }\n    return paths;\n  }\n\n  hasFieldActions(): boolean {\n    for (const mappedField of this.getAllMappedFields()) {\n      if (mappedField.actions.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getAllFields(): Field[] {\n    return this.getFields(true).concat(this.getFields(false));\n  }\n\n  getAllMappedFields(): MappedField[] {\n    return this.getMappedFields(true).concat(this.getMappedFields(false));\n  }\n\n  isFieldMapped(field: Field): boolean {\n    return this.getMappedFieldForField(field) != null;\n  }\n\n  hasTransformation(): boolean {\n    const mappedFields: MappedField[] = this.getAllMappedFields();\n    for (const mappedField of mappedFields) {\n      if (mappedField.actions.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Walk all target field mappings and return one of corresponding source field name\n   * if the specified field is already the target of a previous mapping, null otherwise.\n   *\n   * @param field\n   */\n  public getMappedTarget(field: Field): string {\n    const mappings: MappingModel[] = this.cfg.mappings.mappings;\n\n    if (field.isSource()) {\n      return null;\n    }\n    for (const m of mappings) {\n      if (m.targetFields.length === 0) {\n        continue;\n      }\n\n      for (const mappedOutputField of m.targetFields) {\n        if (mappedOutputField.field.docDef === field.docDef\n          && mappedOutputField.field.path === field.path) {\n          if (m.isFieldMapped(field)) {\n            return m.sourceFields[0].field.name;\n          }\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MappingDefinition.html":{"url":"classes/MappingDefinition.html","title":"class - MappingDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MappingDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeMapping\n                            \n                            \n                                mappings\n                            \n                            \n                                name\n                            \n                            \n                                parsedDocs\n                            \n                            \n                                    Private\n                                tables\n                            \n                            \n                                    Private\n                                tablesByName\n                            \n                            \n                                    Private\n                                tablesBySourceTargetKey\n                            \n                            \n                                templateText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTable\n                            \n                            \n                                detectTableIdentifiers\n                            \n                            \n                                findMappingsForField\n                            \n                            \n                                getAllMappings\n                            \n                            \n                                    Private\n                                getDocMap\n                            \n                            \n                                getFirstMappingForLookupTable\n                            \n                            \n                                getTableByName\n                            \n                            \n                                getTableBySourceTarget\n                            \n                            \n                                getTables\n                            \n                            \n                                initializeMappingLookupTable\n                            \n                            \n                                isMappingStale\n                            \n                            \n                                removeDocumentReferenceFromAllMappings\n                            \n                            \n                                removeFieldFromAllMappings\n                            \n                            \n                                removeMapping\n                            \n                            \n                                removeStaleMappings\n                            \n                            \n                                removeTableByName\n                            \n                            \n                                templateExists\n                            \n                            \n                                updateDocumentNamespacesFromMappings\n                            \n                            \n                                updateMappedFieldsFromDocuments\n                            \n                            \n                                updateMappingsFromDocuments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:36\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeMapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedDocs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LookupTable[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tablesByName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tablesBySourceTargetKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templateText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTable\n                        \n                        \n                    \n                \n            \n            \n                \naddTable(table: LookupTable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                LookupTable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            detectTableIdentifiers\n                        \n                        \n                    \n                \n            \n            \n                \ndetectTableIdentifiers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findMappingsForField\n                        \n                        \n                    \n                \n            \n            \n                \nfindMappingsForField(field: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:263\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MappingModel[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllMappings\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllMappings(includeActiveMapping: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:247\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    includeActiveMapping\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MappingModel[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getDocMap\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDocMap(cfg: ConfigModel, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:198\n                \n            \n\n\n            \n                \n                    Return a document map for either the sources or targets panel contents.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFirstMappingForLookupTable\n                        \n                        \n                    \n                \n            \n            \n                \ngetFirstMappingForLookupTable(lookupTableName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lookupTableName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MappingModel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTableByName\n                        \n                        \n                    \n                \n            \n            \n                \ngetTableByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LookupTable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTableBySourceTarget\n                        \n                        \n                    \n                \n            \n            \n                \ngetTableBySourceTarget(sourceIdentifier: string, targetIdentifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceIdentifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetIdentifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LookupTable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTables\n                        \n                        \n                    \n                \n            \n            \n                \ngetTables()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LookupTable[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeMappingLookupTable\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeMappingLookupTable(m: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    m\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isMappingStale\n                        \n                        \n                    \n                \n            \n            \n                \nisMappingStale(mapping: MappingModel, sourceFieldPaths: string[], targetSourcePaths: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sourceFieldPaths\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetSourcePaths\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeDocumentReferenceFromAllMappings\n                        \n                        \n                    \n                \n            \n            \n                \nremoveDocumentReferenceFromAllMappings(docId: string, cfg: ConfigModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:295\n                \n            \n\n\n            \n                \n                    Remove any mappings referencing the specified document ID.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    docId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nSpecified document ID\n\n\n                                    \n                                \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeFieldFromAllMappings\n                        \n                        \n                    \n                \n            \n            \n                \nremoveFieldFromAllMappings(field: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:277\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMapping\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMapping(m: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:273\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    m\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeStaleMappings\n                        \n                        \n                    \n                \n            \n            \n                \nremoveStaleMappings(cfg: ConfigModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeTableByName\n                        \n                        \n                    \n                \n            \n            \n                \nremoveTableByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            templateExists\n                        \n                        \n                    \n                \n            \n            \n                \ntemplateExists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateDocumentNamespacesFromMappings\n                        \n                        \n                    \n                \n            \n            \n                \nupdateDocumentNamespacesFromMappings(cfg: ConfigModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:221\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateMappedFieldsFromDocuments\n                        \n                        \n                    \n                \n            \n            \n                \nupdateMappedFieldsFromDocuments(mapping: MappingModel, cfg: ConfigModel, docMap: any, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:309\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docMap\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateMappingsFromDocuments\n                        \n                        \n                    \n                \n            \n            \n                \nupdateMappingsFromDocuments(cfg: ConfigModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:206\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MappingModel, MappedField } from './mapping.model';\nimport { LookupTable } from '../models/lookup-table.model';\nimport { ConfigModel } from '../models/config.model';\nimport { Field } from '../models/field.model';\nimport { FieldAction, FieldActionArgumentValue, FieldActionDefinition } from './field-action.model';\nimport { TransitionMode } from './transition.model';\nimport { DocumentDefinition, PaddingField } from '../models/document-definition.model';\n\nimport { DataMapperUtil } from '../common/data-mapper-util';\n\nexport class MappingDefinition {\n  name: string = null;\n  mappings: MappingModel[] = [];\n  activeMapping: MappingModel = null;\n  parsedDocs: DocumentDefinition[] = [];\n  templateText: string = null;\n\n  private tables: LookupTable[] = [];\n  private tablesBySourceTargetKey: { [key: string]: LookupTable; } = {};\n  private tablesByName: { [key: string]: LookupTable; } = {};\n\n  constructor() {\n    this.name = 'UI.' + Math.floor((Math.random() * 1000000) + 1).toString();\n  }\n\n  templateExists(): boolean {\n    return ((this.templateText != null) && (this.templateText !== ''));\n  }\n\n  addTable(table: LookupTable): void {\n    this.tablesBySourceTargetKey[table.getInputOutputKey()] = table;\n    this.tablesByName[table.name] = table;\n    this.tables.push(table);\n  }\n\n  getTableByName(name: string): LookupTable {\n    return this.tablesByName[name];\n  }\n\n  detectTableIdentifiers() {\n    for (const t of this.getTables()) {\n      if (t.sourceIdentifier && t.targetIdentifier) {\n        continue;\n      }\n      let tableChanged = false;\n      const m: MappingModel = this.getFirstMappingForLookupTable(t.name);\n      if (m != null && m.transition.lookupTableName != null) {\n        if (!t.sourceIdentifier) {\n          const inputField: Field = m.getFields(true)[0];\n          if (inputField) {\n            t.sourceIdentifier = inputField.classIdentifier;\n            tableChanged = true;\n          }\n        }\n        if (!t.targetIdentifier) {\n          const outputField: Field = m.getFields(false)[0];\n          if (outputField) {\n            t.targetIdentifier = outputField.classIdentifier;\n            tableChanged = true;\n          }\n        }\n      }\n    }\n    for (const m of this.mappings) {\n      this.initializeMappingLookupTable(m);\n    }\n  }\n\n  getTableBySourceTarget(sourceIdentifier: string, targetIdentifier: string): LookupTable {\n    const key: string = sourceIdentifier + ':' + targetIdentifier;\n    return this.tablesBySourceTargetKey[key];\n  }\n\n  getTables(): LookupTable[] {\n    const tables: LookupTable[] = [];\n    for (const key in this.tablesByName) {\n      if (!this.tablesByName.hasOwnProperty(key)) {\n        continue;\n      }\n      const table: LookupTable = this.tablesByName[key];\n      tables.push(table);\n    }\n    return tables;\n  }\n\n  removeTableByName(name: string) {\n    if (name) {\n      const table = this.tablesByName[name];\n      const iokey = table.getInputOutputKey();\n      if (this.tablesByName[name]) {\n        delete this.tables[this.tables.indexOf(table)];\n        delete this.tablesByName[name];\n        delete this.tablesBySourceTargetKey[iokey];\n      }\n    }\n  }\n\n  getFirstMappingForLookupTable(lookupTableName: string): MappingModel {\n    for (const m of this.mappings) {\n      if (m.transition.lookupTableName === lookupTableName) {\n        return m;\n      }\n    }\n    return null;\n  }\n\n  removeStaleMappings(cfg: ConfigModel): void {\n    let index = 0;\n    let sourceFieldPaths: string[] = [];\n    for (const doc of cfg.getDocs(true)) {\n      sourceFieldPaths = sourceFieldPaths.concat(Field.getFieldPaths(doc.getAllFields()));\n    }\n    let targetSourcePaths: string[] = [];\n    for (const doc of cfg.getDocs(false)) {\n      targetSourcePaths = targetSourcePaths.concat(Field.getFieldPaths(doc.getAllFields()));\n    }\n    while (index  0) ? path.substring(0, lastSeparator) : null;\n          let fieldName: string = (lastSeparator === -1) ? path : path.substring(lastSeparator + 1);\n          let namespaceAlias: string = null;\n          if (fieldName.indexOf(':') !== -1) {\n            namespaceAlias = fieldName.split(':')[0];\n            fieldName = fieldName.split(':')[1];\n          }\n\n          mappedField.field.name = fieldName;\n          mappedField.field.displayName = fieldName;\n          mappedField.field.isAttribute = (fieldName.indexOf('@') !== -1);\n          mappedField.field.namespaceAlias = namespaceAlias;\n\n          if (parentPath != null) {\n            mappedField.field.parentField = doc.getField(parentPath);\n          }\n\n          doc.addField(mappedField.field);\n        } else {\n          cfg.errorService.error('Could not find field from document for mapped field \\'' + mappedField.parsedData.parsedName + '\\'',\n            { 'mappedField': mappedField, 'doc': doc });\n          return;\n        }\n      }\n\n      // Process field actions.\n      mappedField.actions = [];\n      if (mappedField.parsedData.parsedActions.length > 0) {\n\n        for (const action of mappedField.parsedData.parsedActions) {\n          let actionDefinition = null;\n          if (action.name === 'CustomAction') {\n            actionDefinition = cfg.fieldActionService.getActionDefinitionForName(action.argumentValues[0].value);\n          } else {\n            actionDefinition = cfg.fieldActionService.getActionDefinitionForName(action.name);\n          }\n          if (actionDefinition == null) {\n            cfg.errorService.error('Could not find field action definition for action \\'' + action.name + '\\'', null);\n            continue;\n          }\n          actionDefinition.populateFieldAction(action);\n          mappedField.actions.push(action);\n        }\n      }\n\n      const zeroBasedIndex = +mappedField.parsedData.parsedIndex;\n      mappedFields = mapping.getMappedFields(isSource);\n      if (zeroBasedIndex \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingDetailComponent.html":{"url":"components/MappingDetailComponent.html","title":"component - MappingDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mappingSelectionRequiredSubscription\n                            \n                            \n                                sourcesHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitle\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeMapping\n                            \n                            \n                                    Private\n                                selectMapping\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMapping\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMapping(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            selectMapping\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectMapping(field: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mappingSelectionRequiredSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourcesHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CollapsableHeaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('sourcesHeader')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnDestroy, ViewChild } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\nimport { MappingModel } from '../../models/mapping.model';\n\nimport { CollapsableHeaderComponent } from '../collapsable-header.component';\n\nimport { ModalWindowComponent } from '../modal-window.component';\nimport { MappingSelectionComponent } from './mapping-selection.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'mapping-detail',\n  templateUrl: './mapping-detail.component.html',\n})\n\nexport class MappingDetailComponent implements OnInit, OnDestroy {\n  @Input() cfg: ConfigModel;\n  @Input() modalWindow: ModalWindowComponent;\n\n  @ViewChild('sourcesHeader')\n  sourcesHeader: CollapsableHeaderComponent;\n\n  private mappingSelectionRequiredSubscription: Subscription;\n\n  ngOnInit(): void {\n    this.mappingSelectionRequiredSubscription = this.cfg.mappingService.mappingSelectionRequired$.subscribe((field: Field) => {\n      this.selectMapping(field);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.mappingSelectionRequiredSubscription.unsubscribe();\n  }\n\n  getTitle(): string {\n    return this.cfg.mappings.activeMapping.isLookupMode() ? 'Lookup Mapping' : 'Mapping Details';\n  }\n\n  removeMapping(event: MouseEvent): void {\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Remove';\n    this.modalWindow.headerText = 'Remove Mapping?';\n    this.modalWindow.message = 'Are you sure you want to remove the current mapping?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      const activeMapping = this.cfg.mappings.activeMapping;\n      if (activeMapping.isLookupMode) {\n        this.cfg.mappings.removeTableByName(activeMapping.transition.lookupTableName);\n      }\n      this.cfg.mappingService.removeMapping(activeMapping);\n      this.cfg.showMappingDetailTray = false;\n    };\n    this.modalWindow.show();\n  }\n\n  private selectMapping(field: Field): void {\n    const mappingsForField: MappingModel[] = this.cfg.mappings.findMappingsForField(field);\n    const self: MappingDetailComponent = this;\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Select';\n    this.modalWindow.headerText = 'Select Mapping';\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      const c: MappingSelectionComponent = mw.nestedComponent as MappingSelectionComponent;\n      c.selectedField = field;\n      c.cfg = self.cfg;\n      c.mappings = mappingsForField;\n      c.modalWindow = this.modalWindow;\n    };\n    this.modalWindow.nestedComponentType = MappingSelectionComponent;\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      this.cfg.errorService.clearValidationErrors();\n      const c: MappingSelectionComponent = mw.nestedComponent as MappingSelectionComponent;\n      const mapping: MappingModel = c.getSelectedMapping();\n      self.cfg.mappingService.selectMapping(mapping);\n    };\n    this.modalWindow.cancelButtonHandler = (mw: ModalWindowComponent) => {\n      self.cfg.mappingService.selectMapping(null);\n    };\n    this.modalWindow.show();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        {{ getTitle() }}\n        \n      \n    \n\n    \n\n      {{ cfg.errorService.displayErrorBlock(cfg.mappings.activeMapping.getValidationWarnings()) }}\n      {{ cfg.errorService.displayErrorBlock(cfg.mappings.activeMapping.getValidationErrors()) }}\n      {{ cfg.mappings.activeMapping.clearValidationErrors() }}\n\n      {{ cfg.errorService.displayErrorBlock(cfg.mappings.activeMapping.getPreviewWarnings()) }}\n      {{ cfg.errorService.displayErrorBlock(cfg.mappings.activeMapping.getPreviewErrors()) }}\n      {{ cfg.mappings.activeMapping.clearPreviewErrors() }}\n\n      \n        \n\n          \n          \n            \n\n              \n                \n                  \n                  \n                \n              \n            \n\n            \n              \n              \n                \n                  \n                  \n                \n              \n            \n          \n\n          \n          \n            \n\n              \n                \n                  \n                  \n                \n              \n            \n\n            \n              \n              \n                \n                  \n                  \n                \n              \n            \n          \n        \n      \n\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ getTitle() }}                            {{ cfg.errorService.displayErrorBlock(cfg.mappings.activeMapping.getValidationWarnings()) }}      {{ cfg.errorService.displayErrorBlock(cfg.mappings.activeMapping.getValidationErrors()) }}      {{ cfg.mappings.activeMapping.clearValidationErrors() }}      {{ cfg.errorService.displayErrorBlock(cfg.mappings.activeMapping.getPreviewWarnings()) }}      {{ cfg.errorService.displayErrorBlock(cfg.mappings.activeMapping.getPreviewErrors()) }}      {{ cfg.mappings.activeMapping.clearPreviewErrors() }}n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingFieldActionArgumentComponent.html":{"url":"components/MappingFieldActionArgumentComponent.html","title":"component - MappingFieldActionArgumentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingFieldActionArgumentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-field-action-argument\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-field-action-argument.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkIconEnabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acceptInput\n                            \n                            \n                                actionConfigParamSelectionChanged\n                            \n                            \n                                contentChanged\n                            \n                            \n                                getActionConfigParamValues\n                            \n                            \n                                getActionConfigParamVDefault\n                            \n                            \n                                getLabel\n                            \n                            \n                                getMappedFieldActions\n                            \n                            \n                                validateActionConfigParamSelection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                actionIndex\n                            \n                            \n                                argConfig\n                            \n                            \n                                argValIndex\n                            \n                            \n                                cfg\n                            \n                            \n                                mappedField\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :         FieldAction\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        actionIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        argConfig\n                    \n                \n                \n                    \n                        Type :         FieldActionArgument\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        argValIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mappedField\n                    \n                \n                \n                    \n                        Type :         MappedField\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:34\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            acceptInput\n                        \n                        \n                    \n                \n            \n            \n                \nacceptInput(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:55\n                \n            \n\n\n            \n                \n                    The user has selected the check icon at the end of the input text widget.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            actionConfigParamSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nactionConfigParamSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:92\n                \n            \n\n\n            \n                \n                    A mapping field action parameter selection has been made either from a pull-down menu\nor from user input to a text field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contentChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncontentChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:45\n                \n            \n\n\n            \n                \n                    The input text widget content has changed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionConfigParamValues\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionConfigParamValues(argConfig: FieldActionArgument)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:64\n                \n            \n\n\n            \n                \n                    Return in a string array the parameter values for the specified field action argument.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argConfig\n                                    \n                                                FieldActionArgument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     String[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionConfigParamVDefault\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionConfigParamVDefault(argConfig: FieldActionArgument, actionIndex: number, argValIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:125\n                \n            \n\n\n            \n                \n                    Return a string representing the default value for the field action argument pull-down.  If a mapped\nfield already exists for this component then use that to determine the displayed valued in the\npull-down; otherwise use the sequential configuration value based on the argument value index.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    argConfig\n                                    \n                                                FieldActionArgument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nargument configuration used if no mapped field exists\n\n\n                                    \n                                \n                                \n                                    actionIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nused when multiple actions are specified\n\n\n                                    \n                                \n                                \n                                    argValIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nindex into the argument values for any one specific action.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLabel(argConfigName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:139\n                \n            \n\n\n            \n                \n                    Translate an internal label to a human legible form.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argConfigName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedFieldActions\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedFieldActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     FieldAction[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateActionConfigParamSelection\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateActionConfigParamSelection(acp: FieldActionArgumentValue[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:77\n                \n            \n\n\n            \n                \n                    Simply validate that the user isn't attempting a conversion to the original type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    acp\n                                    \n                                            FieldActionArgumentValue[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkIconEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\nimport { MappedField } from '../../models/mapping.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { FieldAction, FieldActionArgument, FieldActionArgumentValue } from '../../models/field-action.model';\n\n@Component({\n  selector: 'mapping-field-action-argument',\n  templateUrl: './mapping-field-action-argument.component.html',\n})\n\nexport class MappingFieldActionArgumentComponent {\n  @Input() action: FieldAction;\n  @Input() actionIndex: number;\n  @Input() argValIndex: number;\n  @Input() argConfig: FieldActionArgument;\n  @Input() cfg: ConfigModel;\n  @Input() mappedField: MappedField;\n\n  private checkIconEnabled = false;\n\n  getMappedFieldActions(): FieldAction[] {\n    return this.mappedField.actions;\n  }\n\n  /**\n   * The input text widget content has changed.\n   */\n  contentChanged(): void {\n    this.checkIconEnabled = true;\n    this.cfg.mappingService.notifyMappingUpdated();\n  }\n\n  /**\n   * The user has selected the check icon at the end of the input text widget.\n   *\n   * @param event\n   */\n  acceptInput(event: any): void {\n    this.actionConfigParamSelectionChanged(event);\n  }\n\n  /**\n   * Return in a string array the parameter values for the specified field action argument.\n   *\n   * @param argConfig\n   */\n  getActionConfigParamValues(argConfig: FieldActionArgument): String[] {\n    const acpv: String[] = [];\n    for (const argument of argConfig.values) {\n      acpv.push(argument);\n    }\n    return acpv;\n  }\n\n  /**\n   * Simply validate that the user isn't attempting a conversion to the original type.\n   *\n   * @param acp\n   */\n  validateActionConfigParamSelection(acp: FieldActionArgumentValue[]): void {\n    this.cfg.errorService.clearMappingErrors();\n    if (acp != null && acp.length === 2) {\n      if (acp[0].value === acp[1].value) {\n        this.cfg.errorService.mappingError('Please select differing \\'from\\' and \\'to\\' units in your conversion transformation.', null);\n      }\n    }\n  }\n\n  /**\n   * A mapping field action parameter selection has been made either from a pull-down menu\n   * or from user input to a text field.\n   *\n   * @param event\n   */\n  actionConfigParamSelectionChanged(event: any): void {\n\n    // Make sure they've specified something.\n    if (!event.target.value || event.target.value.length === 0) {\n      this.cfg.errorService.info('You must specify a transformation argument value.', null);\n      return;\n    }\n    this.mappedField.parsedData.userCreated = true;\n\n    // Identify the pull-down\n    if (event.target.selectedOptions != null) {\n      const attributes: any = event.target.selectedOptions.item(0).attributes;\n      const selectedArgValName: any = attributes.getNamedItem('value').value;\n      const argValIndex: any = attributes.getNamedItem('argValIndex').value;\n      const actionIndex: any = attributes.getNamedItem('actionIndex').value;\n      const action: FieldAction = this.mappedField.actions[actionIndex];\n      action.argumentValues[argValIndex].value = selectedArgValName;\n      this.validateActionConfigParamSelection(action.argumentValues);\n    }\n    this.cfg.mappingService.notifyMappingUpdated();\n    this.checkIconEnabled = false;\n    // this.enableCheck();\n  }\n\n  /**\n   * Return a string representing the default value for the field action argument pull-down.  If a mapped\n   * field already exists for this component then use that to determine the displayed valued in the\n   * pull-down; otherwise use the sequential configuration value based on the argument value index.\n   *\n   * @param argConfig - argument configuration used if no mapped field exists\n   * @param actionIndex - used when multiple actions are specified\n   * @param argValIndex - index into the argument values for any one specific action.\n   */\n  getActionConfigParamVDefault(argConfig: FieldActionArgument, actionIndex: number, argValIndex: number): String {\n    const action: FieldAction = this.getMappedFieldActions()[actionIndex];\n    if (action != null && action.argumentValues.length > 0) {\n      return action.argumentValues[argValIndex].value;\n    } else {\n      return argConfig.values[argValIndex];\n    }\n  }\n\n  /**\n   * Translate an internal label to a human legible form.\n   *\n   * @param argConfigName\n   */\n  getLabel(argConfigName: string): string {\n    return DataMapperUtil.toDisplayable(argConfigName);\n  }\n\n}\n\n    \n\n    \n        \n  \n\n   0; else textInput\">\n    {{ getLabel(argConfig.name) }}\n    \n      {{ actionConfigParamVal }}\n      \n    \n  \n\n  \n    {{ getLabel(argConfig.name) }}: \n    \n      \n    \n    \n      \n    \n\n    \n      \n        \n      \n      \n        \n      \n    \n    -->\n  \n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     0; else textInput\">    {{ getLabel(argConfig.name) }}          {{ actionConfigParamVal }}                  {{ getLabel(argConfig.name) }}:                                                                                 -->    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingFieldActionArgumentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingFieldActionComponent.html":{"url":"components/MappingFieldActionComponent.html","title":"component - MappingFieldActionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingFieldActionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-field-action\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-field-action.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actionsExistForField\n                            \n                            \n                                configSelectionChanged\n                            \n                            \n                                displayTransformationAction\n                            \n                            \n                                getActionConfigs\n                            \n                            \n                                getLabel\n                            \n                            \n                                getMappedFieldActions\n                            \n                            \n                                isIndexArg\n                            \n                            \n                                removeAction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                isSource\n                            \n                            \n                                mappedField\n                            \n                            \n                                mapping\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSource\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mappedField\n                    \n                \n                \n                    \n                        Type :         MappedField\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            actionsExistForField\n                        \n                        \n                    \n                \n            \n            \n                \nactionsExistForField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nconfigSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:66\n                \n            \n\n\n            \n                \n                    A mapping field action configuration selection has been made.  Note that action field arguments, if any,\nmay be specified by either a text field or pull-down menu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayTransformationAction\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayTransformationAction(action)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionConfigs\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionConfigs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     FieldActionDefinition[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLabel(paramName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:93\n                \n            \n\n\n            \n                \n                    Translate an internal label to a human legible form.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paramName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedFieldActions\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedFieldActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     FieldAction[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isIndexArg\n                        \n                        \n                    \n                \n            \n            \n                \nisIndexArg(argVal: string, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeAction\n                        \n                        \n                    \n                \n            \n            \n                \nremoveAction(action: FieldAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts:56\n                \n            \n\n\n            \n                \n                    Remove the specified field action (transformation) from the current mapped field's\nactions.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\nimport { MappingModel, MappedField } from '../../models/mapping.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { FieldAction, FieldActionArgument, FieldActionArgumentValue,\n         FieldActionDefinition } from '../../models/field-action.model';\n\n@Component({\n  selector: 'mapping-field-action',\n  templateUrl: './mapping-field-action.component.html',\n})\n\nexport class MappingFieldActionComponent {\n  @Input() cfg: ConfigModel;\n  @Input() mappedField: MappedField;\n  @Input() isSource: boolean;\n  @Input() mapping: MappingModel;\n\n  getMappedFieldActions(): FieldAction[] {\n    return this.mappedField.actions;\n  }\n\n  isIndexArg(argVal: string, index: number): boolean {\n    return (argVal === 'Index' && index === 0);\n  }\n\n  actionsExistForField(): boolean {\n    return (this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, this.isSource).length > 0);\n  }\n\n  getActionConfigs(): FieldActionDefinition[] {\n    return this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, this.isSource);\n  }\n\n  /**\n   * Remove the specified field action (transformation) from the current mapped field's\n   * actions.\n   * @param action\n   */\n  removeAction(action: FieldAction): void {\n    this.mappedField.removeAction(action);\n    this.cfg.mappingService.notifyMappingUpdated();\n  }\n\n  /**\n   * A mapping field action configuration selection has been made.  Note that action field arguments, if any,\n   * may be specified by either a text field or pull-down menu.\n   * @param event\n   */\n  configSelectionChanged(event: any) {\n    const attributes: any = event.target.selectedOptions.item(0).attributes;\n    const selectedActionName: any = attributes.getNamedItem('value').value;\n    const selectedActionIndex: any = attributes.getNamedItem('actionIndex').value;\n    const action: FieldAction = this.getMappedFieldActions()[selectedActionIndex];\n    if (action.name !== selectedActionName) {\n      action.argumentValues = [];  // Invalidate the previously selected field action arguments.\n      const fieldActionDefinition = this.cfg.fieldActionService.getActionDefinitionForName(selectedActionName);\n      fieldActionDefinition.populateFieldAction(action);\n\n      // If the field action configuration predefines argument values then populate the fields with\n      // default values.  Needed to support pull-down menus in action argument definitions.\n      if (action.argumentValues.values && action.argumentValues.length > 0\n        && fieldActionDefinition.arguments[0] && fieldActionDefinition.arguments[0].values\n        && fieldActionDefinition.arguments[0].values.length > 0) {\n        for (let i = 0; i \n    \n\n    \n        \n  \n\n    \n      \n        \n        \n          {{ getLabel(actionConfig.name) }}\n        \n        \n          \n        \n        \n      \n\n      \n        \n\n          \n          \n\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      {{ getLabel(actionConfig.name) }}                                                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingFieldActionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingFieldContainerComponent.html":{"url":"components/MappingFieldContainerComponent.html","title":"component - MappingFieldContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingFieldContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-field-container\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-field-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                    Private\n                                diff\n                            \n                            \n                                    Private\n                                elem\n                            \n                            \n                                inputId\n                            \n                            \n                                    Private\n                                isDragDropTarget\n                            \n                            \n                                    Private\n                                searchFilter\n                            \n                            \n                                    Private\n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allowDrop\n                            \n                            \n                                displayFieldSearchBox\n                            \n                            \n                                displaySeparator\n                            \n                            \n                                dragEnterLeave\n                            \n                            \n                                endDrag\n                            \n                            \n                                executeSearch\n                            \n                            \n                                getAddButtonLabel\n                            \n                            \n                                getSearchPlaceholder\n                            \n                            \n                                getTopFieldTypeLabel\n                            \n                            \n                                handleMouseOver\n                            \n                            \n                                isAddButtonVisible\n                            \n                            \n                                isPartialComponent\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeMappedField\n                            \n                            \n                                selectionChanged\n                            \n                            \n                                startDrag\n                            \n                            \n                                updateSearchFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                isSource\n                            \n                            \n                                mapping\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:44\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSource\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allowDrop\n                        \n                        \n                    \n                \n            \n            \n                \nallowDrop(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayFieldSearchBox\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayFieldSearchBox()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displaySeparator\n                        \n                        \n                    \n                \n            \n            \n                \ndisplaySeparator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragEnterLeave\n                        \n                        \n                    \n                \n            \n            \n                \ndragEnterLeave(event: any, entering: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entering\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endDrag\n                        \n                        \n                    \n                \n            \n            \n                \nendDrag(event: any, insertBeforeMappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    insertBeforeMappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            executeSearch\n                        \n                        \n                    \n                \n            \n            \n                \nexecuteSearch(filter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:180\n                \n            \n\n\n            \n                \n                    This search is triggered off of the observer created in the constructor.  Note that we display any\nfield whose path matches but we capture only the field leaf name for display.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAddButtonLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetAddButtonLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:223\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSearchPlaceholder\n                        \n                        \n                    \n                \n            \n            \n                \ngetSearchPlaceholder()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTopFieldTypeLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetTopFieldTypeLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseOver\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseOver(evt1: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt1\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAddButtonVisible\n                        \n                        \n                    \n                \n            \n            \n                \nisAddButtonVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPartialComponent\n                        \n                        \n                    \n                \n            \n            \n                \nisPartialComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMappedField\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMappedField(mappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startDrag\n                        \n                        \n                    \n                \n            \n            \n                \nstartDrag(event: any, draggedMappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    draggedMappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSearchFilter\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSearchFilter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            diff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            elem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDragDropTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\nimport { MappingModel, MappedField } from '../../models/mapping.model';\nimport { DocumentDefinition } from '../../models/document-definition.model';\nimport { TransitionMode } from '../../models/transition.model';\nimport { Observable } from 'rxjs';\nimport { Field } from '../../models/field.model';\n\n@Component({\n  selector: 'mapping-field-container',\n  templateUrl: './mapping-field-container.component.html',\n})\n\nexport class MappingFieldContainerComponent implements OnInit {\n  @Input() cfg: ConfigModel;\n  @Input() isSource = false;\n  @Input() mapping: MappingModel;\n\n  inputId: String;\n\n  private isDragDropTarget = false;\n  private elem = null;\n  private start = 0;\n  private diff = 0;\n  private searchFilter = '';\n  dataSource: Observable;\n\n  constructor() {\n    this.dataSource = Observable.create((observer: any) => {\n      observer.next(this.executeSearch(this.searchFilter));\n    });\n  }\n\n  ngOnInit() {\n    this.inputId = 'input-' + this.isSource ? 'source' : 'target';\n  }\n\n  isPartialComponent(): boolean {\n    return true;\n  }\n\n  handleMouseOver(evt1: MouseEvent): void {\n    if (this.elem != null) {\n      evt1.stopPropagation();\n      evt1.preventDefault();\n      let end = 0;\n\n      if (evt1['pageY']) {\n        end = evt1['pageY'];\n      } else if (evt1['clientY']) {\n        end = evt1['clientY'];\n      }\n      this.diff = end - this.start;\n      this.elem.style['top'] = this.diff + 'px';\n    }\n  }\n\n  startDrag(event: any, draggedMappedField: MappedField): void {\n    event = event || window.event;\n    event.dataTransfer.setData('text', '');  // firefox bug\n    this.cfg.currentDraggedField = draggedMappedField;\n    /* this code does correctly constrain the drag movement to the vertical area of\n     * the mapping details section. It couldn't correctly identify the on-drop target\n    event = event || window.event;\n    event.stopPropagation();\n    event.preventDefault();\n    this.elem = event.currentTarget;\n\n    if (event['pageY']) {\n        this.start = event['pageY'];\n    } else if (event['clientY']) {\n        this.start = event['clientY'];\n    }\n\n    this.elem.style.position = 'relative';\n    this.elem.onmouseup = (evt: any) => {\n      // See endDrag()\n      evt.stopPropagation();\n      evt.preventDefault();\n    };\n    */\n  }\n\n  dragEnterLeave(event: any, entering: boolean): void {\n    this.isDragDropTarget = entering;\n  }\n\n  allowDrop(event: any): void {\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n    this.isDragDropTarget = true;\n  }\n\n  endDrag(event: any, insertBeforeMappedField: MappedField): void {\n    this.isDragDropTarget = false;\n\n    const droppedMappedField: MappedField = this.cfg.currentDraggedField;\n    if (droppedMappedField == null) {\n      return;\n    }\n\n    if (insertBeforeMappedField != null) {\n      this.cfg.mappingService.moveMappedFieldTo(this.mapping, droppedMappedField,\n        this.mapping.getIndexForMappedField(insertBeforeMappedField));\n\n      // Update indexing in any conditional mapping expressions.\n      if (this.mapping.transition && this.mapping.transition.enableExpression) {\n        this.mapping.transition.expression.updateFieldReference(this.mapping);\n        this.cfg.mappingService.notifyMappingUpdated();\n      }\n    }\n    this.cfg.currentDraggedField = null;\n  }\n\n  displaySeparator(): boolean {\n    return (this.isSource && !this.mapping.transition.enableExpression &&\n      (this.mapping.transition.isOneToManyMode() || this.mapping.transition.isManyToOneMode()));\n  }\n\n  displayFieldSearchBox(): boolean {\n\n    const mappedFields = this.mapping.getMappedFields(this.isSource);\n    if (mappedFields.length === 0) {\n      return true;\n    } else if (mappedFields[0].field.isInCollection()) {\n      return false;\n    }\n\n    if (this.mapping.transition.mode === TransitionMode.ONE_TO_ONE) {\n      return true;\n    }\n    if (this.isSource) {\n      if (this.mapping.transition.mode === TransitionMode.MANY_TO_ONE) {\n        return !mappedFields[0].field.isInCollection();\n      }\n    } else {\n      if (this.mapping.transition.mode === TransitionMode.ONE_TO_MANY) {\n        return !mappedFields[0].field.isInCollection();\n      }\n    }\n    return false;\n  }\n\n  updateSearchFilter(value: string) {\n    this.searchFilter = value;\n  }\n\n  getSearchPlaceholder(): string {\n    return 'Begin typing to search for more ' + (this.isSource ? 'sources' : 'targets');\n  }\n\n  /**\n   * This search is triggered off of the observer created in the constructor.  Note that we display any\n   * field whose path matches but we capture only the field leaf name for display.\n   *\n   * @param filter\n   */\n  executeSearch(filter: string): any[] {\n    const formattedFields: any[] = [];\n    let fields: Field[] = [];\n    for (const docDef of this.cfg.getDocs(this.isSource)) {\n      fields = fields.concat(docDef.getTerminalFields());\n    }\n    const activeMapping: MappingModel = this.cfg.mappings.activeMapping;\n    for (const field of fields) {\n      let displayName = (field == null) ? '' : field.getFieldLabel(ConfigModel.getConfig().showTypes, true);\n\n      if (filter == null || filter === '' || displayName.toLowerCase().indexOf(filter.toLowerCase()) !== -1) {\n        if (!this.cfg.mappingService.isFieldSelectable(activeMapping, field)) {\n          continue;\n        }\n        displayName = DataMapperUtil.extractDisplayPath(field.getFieldLabel(ConfigModel.getConfig().showTypes, true), 40);\n        const formattedField: any = { 'field': field, 'displayName': displayName };\n        formattedFields.push(formattedField);\n      }\n      if (formattedFields.length > 9) {\n        break;\n      }\n    }\n    return formattedFields;\n  }\n\n  selectionChanged(event: any): void {\n    this.cfg.mappingService.fieldSelected(event.item['field'], true);\n    this.searchFilter = '';\n  }\n\n  isAddButtonVisible(): boolean {\n    if (this.isSource && this.mapping.transition.isManyToOneMode()) {\n      return true;\n    } else if (!this.isSource && this.mapping.transition.isOneToManyMode()) {\n      return true;\n    }\n    return false;\n  }\n\n  getTopFieldTypeLabel(): string {\n    return this.isSource ? 'Source' : 'Target';\n  }\n\n  getAddButtonLabel(): string {\n    return this.isSource ? 'Add Source' : 'Add Target';\n  }\n\n  removeMappedField(mappedField: MappedField): void {\n    this.mapping.removeMappedField(mappedField);\n    this.cfg.mappingService.updateMappedField(this.mapping);\n  }\n}\n\n    \n\n    \n        \n\n  \n\n    \n      \n        \n        \n      \n    \n\n    \n      \n    \n  \n\n  \n\n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingFieldContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingFieldDetailComponent.html":{"url":"components/MappingFieldDetailComponent.html","title":"component - MappingFieldDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingFieldDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-field-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-field-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                parentObjectName\n                            \n                            \n                                sourceIconCSSClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTransformation\n                            \n                            \n                                displayIndex\n                            \n                            \n                                displayParentObject\n                            \n                            \n                                getFieldPath\n                            \n                            \n                                    Private\n                                getParentObjectName\n                            \n                            \n                                    Private\n                                getSourceIconCSSClass\n                            \n                            \n                                indexSelectionChanged\n                            \n                            \n                                isTransformCapable\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeMappedField\n                            \n                            \n                                    Private\n                                updateTemplateValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                isSource\n                            \n                            \n                                mappedField\n                            \n                            \n                                mapping\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSource\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mappedField\n                    \n                \n                \n                    \n                        Type :         MappedField\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTransformation\n                        \n                        \n                    \n                \n            \n            \n                \naddTransformation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:50\n                \n            \n\n\n            \n                \n                    The add transformation icon has been selected.  Add a field action to the current\nmapped field.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayIndex\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayParentObject\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayParentObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldPath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getParentObjectName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getParentObjectName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getSourceIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceIconCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            indexSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nindexSelectionChanged(event: any, mappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:97\n                \n            \n\n\n            \n                \n                    The user has hand-edited the index value of a mapped field.  Perform the following:\n\nAdd place-holders for each index value between the updated value and its previous value.\nRe-sequence the field action indices.\nSort the mapped fields array to get then back into numerical order.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTransformCapable\n                        \n                        \n                    \n                \n            \n            \n                \nisTransformCapable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMappedField\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMappedField(mappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateTemplateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTemplateValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentObjectName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceIconCSSClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { MappingModel, MappedField } from '../../models/mapping.model';\nimport { FieldAction } from '../../models/field-action.model';\n\n@Component({\n  selector: 'mapping-field-detail',\n  templateUrl: './mapping-field-detail.component.html',\n})\n\nexport class MappingFieldDetailComponent implements OnInit {\n\n  @Input() cfg: ConfigModel;\n  @Input() mapping: MappingModel;\n  @Input() isSource: boolean;\n  @Input() mappedField: MappedField;\n\n  sourceIconCSSClass: string;\n  parentObjectName: string;\n\n  ngOnInit() {\n    this.updateTemplateValues();\n  }\n\n  isTransformCapable() {\n    return (!this.mappedField.isPadField() && this.mappedField.field.name.length > 0);\n  }\n\n  /**\n   * The add transformation icon has been selected.  Add a field action to the current\n   * mapped field.\n   */\n  addTransformation(): void {\n    const actionDefinition = this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, this.isSource)[0];\n    if (actionDefinition == null) {\n      this.cfg.errorService.info('The selected field has no applicable transformation actions.', null);\n      return;\n    }\n    const action: FieldAction = new FieldAction();\n    actionDefinition.populateFieldAction(action);\n    this.mappedField.actions.push(action);\n    this.cfg.mappingService.notifyMappingUpdated();\n  }\n\n  getFieldPath(): string {\n    if (this.mappedField == null || this.mappedField.field == null) {\n      return '[None]';\n    }\n    return this.mappedField.field.path;\n  }\n\n  displayParentObject(): boolean {\n    if (this.mappedField != null && this.mappedField.isPadField()) {\n      this.parentObjectName = '';\n      return true;\n    }\n    if (this.mappedField == null || this.mappedField.field == null\n      || this.mappedField.field.name.length === 0\n      || this.mappedField.field.docDef == null) {\n      return false;\n    }\n    if (this.parentObjectName == null || this.parentObjectName.length === 0) {\n      this.updateTemplateValues();\n    }\n    return true;\n  }\n\n  displayIndex(): boolean {\n    return this.mapping.getMappedFields(this.isSource).length > 1 && !this.mapping.transition.enableExpression;\n  }\n\n  /**\n   * The user has hand-edited the index value of a mapped field.  Perform the following:\n   *   - Add place-holders for each index value between the updated value and its previous value.\n   *   - Re-sequence the field action indices.\n   *   - Sort the mapped fields array to get then back into numerical order.\n   * @param event\n   * @param mappedField\n   */\n  indexSelectionChanged(event: any, mappedField: MappedField): void {\n    const insertionIndex = Number(event.target.value) || 0;\n    if (insertionIndex === 0) {\n      return;\n    }\n    const mappedFields = this.mapping.getMappedFields(mappedField.isSource());\n    const targetIndex = mappedFields.length;\n    if (insertionIndex > targetIndex) {\n\n      // Add place-holders for each index value between the previous max index and the insertion index.\n      this.cfg.mappingService.addPlaceholders(insertionIndex - mappedFields.length,\n        this.mapping, targetIndex, mappedField.field.isSource());\n    }\n    this.cfg.mappingService.moveMappedFieldTo(this.mapping, mappedField, insertionIndex);\n    this.cfg.mappingService.notifyMappingUpdated();\n  }\n\n  removeMappedField(mappedField: MappedField): void {\n    this.mapping.removeMappedField(mappedField);\n    this.cfg.mappingService.updateMappedField(this.mapping);\n  }\n\n  private updateTemplateValues(): void {\n    this.sourceIconCSSClass = this.getSourceIconCSSClass();\n    this.parentObjectName = this.getParentObjectName();\n  }\n\n  private getSourceIconCSSClass(): string {\n    return this.isSource ? 'fa fa-hdd-o' : 'fa fa-download';\n  }\n\n  private getParentObjectName() {\n    if (this.mappedField == null || this.mappedField.field == null || this.mappedField.field.docDef == null) {\n      return '';\n    }\n    return this.mappedField.field.docDef.getName(ConfigModel.getConfig().showTypes);\n  }\n}\n\n    \n\n    \n        \n\n{{ model['field'].docDef == null ?\n  'Not yet defined' : model['field'].docDef.name }}\n{{ model['field'].path }}\n\n\n\n\n\n\n  \n     {{ parentObjectName }}\n  \n  {{ getFieldPath() }}\n  ({{ mappedField.field.type }})\n  \n\n\n\n\n\n  \n\n    \n    \n    \n\n    \n    \n      {{ mappedField.field.name }}\n    \n\n    \n    \n      Index:\n\n      \n        \n          {{ mapping.getIndexForMappedField(mappedField) }}\n        \n        \n          \n        \n      \n      \n        \n      \n    \n  \n\n  \n\n  \n  \n    \n      \n        Add Transformation\n      \n    \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ model[\\'field\\'].docDef == null ?  \\'Not yet defined\\' : model[\\'field\\'].docDef.name }}{{ model[\\'field\\'].path }}       {{ parentObjectName }}    {{ getFieldPath() }}  ({{ mappedField.field.type }})                              {{ mappedField.field.name }}                  Index:                        {{ mapping.getIndexForMappedField(mappedField) }}                                                                                          Add Transformation                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingFieldDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingListComponent.html":{"url":"components/MappingListComponent.html","title":"component - MappingListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-list\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                searchFilter\n                            \n                            \n                                searchMode\n                            \n                            \n                                    Private\n                                searchResults\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fieldPairMatchesSearch\n                            \n                            \n                                getItemsCSSClass\n                            \n                            \n                                getMappedFields\n                            \n                            \n                                getMappingCSSClass\n                            \n                            \n                                getMappingRowsCSSClass\n                            \n                            \n                                getMappings\n                            \n                            \n                                getRowTitleCSSClass\n                            \n                            \n                                getSearchIconCSSClass\n                            \n                            \n                                isActiveMapping\n                            \n                            \n                                    Private\n                                search\n                            \n                            \n                                searchResultsVisible\n                            \n                            \n                                selectMapping\n                            \n                            \n                                toggleSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fieldPairMatchesSearch\n                        \n                        \n                    \n                \n            \n            \n                \nfieldPairMatchesSearch(mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItemsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetItemsCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedFields\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedFields(mapping: MappingModel, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MappedField[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappingCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappingCSSClass(mapping: MappingModel, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappingRowsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappingRowsCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappings\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MappingModel[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRowTitleCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetRowTitleCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSearchIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetSearchIconCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActiveMapping\n                        \n                        \n                    \n                \n            \n            \n                \nisActiveMapping(mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(searchFilter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchFilter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchResultsVisible\n                        \n                        \n                    \n                \n            \n            \n                \nsearchResultsVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectMapping\n                        \n                        \n                    \n                \n            \n            \n                \nselectMapping(mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSearch\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\nimport { MappingModel, MappedField } from '../../models/mapping.model';\nimport { DocumentDefinition } from '../../models/document-definition.model';\n\n@Component({\n  selector: 'mapping-list',\n  templateUrl: './mapping-list.component.html',\n})\n\nexport class MappingListComponent {\n  @Input() cfg: ConfigModel;\n\n  searchMode = false;\n  private searchFilter = '';\n  private searchResults: MappingModel[] = [];\n\n  getItemsCSSClass(): string {\n    return 'items mappings' + (this.searchMode ? ' searchShown' : '');\n  }\n\n  searchResultsVisible(): boolean {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      return false;\n    }\n    return (this.searchResults.length === 0);\n  }\n\n  getMappingCSSClass(mapping: MappingModel, index: number): string {\n    let cssClass = 'item ';\n    cssClass += (index % 2 === 1) ? ' even' : '';\n    if (mapping === this.cfg.mappings.activeMapping) {\n      cssClass += ' active';\n    }\n    return cssClass;\n  }\n\n  selectMapping(mapping: MappingModel): void {\n    this.cfg.mappingService.selectMapping(mapping);\n  }\n\n  getRowTitleCSSClass(): string {\n    return this.searchMode ? 'rowTitles searchShown' : 'rowTitles';\n  }\n\n  getMappingRowsCSSClass(): string {\n    return this.searchMode ? 'rows searchShown' : 'rows';\n  }\n\n  getMappings(): MappingModel[] {\n    return this.searchMode ? this.searchResults : [].concat(this.cfg.mappings.getAllMappings(true));\n  }\n\n  getMappedFields(mapping: MappingModel, isSource: boolean): MappedField[] {\n    return mapping.getUserMappedFields(isSource);\n  }\n\n  toggleSearch(): void {\n    this.searchMode = !this.searchMode;\n    this.search(this.searchFilter);\n  }\n\n  getSearchIconCSSClass(): string {\n    const cssClass = 'fa fa-search searchBoxIcon link';\n    return this.searchMode ? (cssClass + ' selectedIcon') : cssClass;\n  }\n\n  fieldPairMatchesSearch(mapping: MappingModel): boolean {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      return true;\n    }\n    const filter: string = this.searchFilter.toLowerCase();\n    const transitionName: string = mapping.transition.getPrettyName();\n    if (transitionName != null && transitionName.toLowerCase().includes(filter)) {\n      return true;\n    }\n    for (const mappedField of mapping.getAllMappedFields()) {\n      const field: Field = mappedField.field;\n      if (field == null || field.path == null) {\n        continue;\n      }\n      if (field.path.toLowerCase().includes(filter)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isActiveMapping(mapping: MappingModel): boolean {\n    return this.cfg.mappings.activeMapping === mapping;\n  }\n\n  private search(searchFilter: string): void {\n    this.searchFilter = searchFilter;\n\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      this.searchResults = [].concat(this.cfg.mappings.getAllMappings(true));\n      return;\n    }\n\n    this.searchResults = [];\n    for (const mapping of this.cfg.mappings.getAllMappings(true)) {\n      if (this.fieldPairMatchesSearch(mapping)) {\n        this.searchResults.push(mapping);\n        break;\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          Mappings\n        \n        \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          \n            Sources\n          \n            Targets\n          \n            Type\n          \n        \n        \n      \n    \n    \n      \n        \n          \n            \n              \n              \n            \n            \n              \n              \n            \n            \n              {{ mapping.transition.getPrettyName() }}\n              \n            \n            \n              \n            \n            \n          \n        \n      \n      \n        No search results.\n        \n      \n    \n    {{ cfg.mappings.mappings.length }} mappings\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Mappings                                                                                                                Sources                      Targets                      Type                                                                                                                                                                                                  {{ mapping.transition.getPrettyName() }}                                                                                                                  No search results.                      {{ cfg.mappings.mappings.length }} mappings      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingListFieldComponent.html":{"url":"components/MappingListFieldComponent.html","title":"component - MappingListFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingListFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list-field.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-list-field\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-list-field.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayParentObject\n                            \n                            \n                                getFieldPath\n                            \n                            \n                                getParentObjectName\n                            \n                            \n                                getSourceIconCSSClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                isActive\n                            \n                            \n                                isSource\n                            \n                            \n                                mappedField\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list-field.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isActive\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list-field.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSource\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list-field.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mappedField\n                    \n                \n                \n                    \n                        Type :         MappedField\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list-field.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayParentObject\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayParentObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list-field.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldPath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list-field.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParentObjectName\n                        \n                        \n                    \n                \n            \n            \n                \ngetParentObjectName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list-field.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSourceIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetSourceIconCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list-field.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { MappedField } from '../../models/mapping.model';\n\n@Component({\n  selector: 'mapping-list-field',\n  templateUrl: './mapping-list-field.component.html',\n})\n\nexport class MappingListFieldComponent {\n  @Input() mappedField: MappedField;\n  @Input() isSource: boolean;\n  @Input() isActive: boolean;\n  @Input() cfg: ConfigModel;\n\n  getSourceIconCSSClass(): string {\n    return this.isSource ? 'fa fa-hdd-o' : 'fa fa-download';\n  }\n\n  getFieldPath(): string {\n    if (this.mappedField == null || this.mappedField.field == null) {\n      return '[None]';\n    }\n    return this.mappedField.field.getFieldLabel(ConfigModel.getConfig().showTypes, true);\n  }\n\n  displayParentObject(): boolean {\n    if (this.mappedField == null || this.mappedField.field == null\n      || this.mappedField.field.docDef == null) {\n      return false;\n    }\n    return true;\n  }\n\n  getParentObjectName() {\n    if (this.mappedField == null || this.mappedField.field == null || this.mappedField.field.docDef == null) {\n      return '';\n    }\n    return this.mappedField.field.docDef.getName(ConfigModel.getConfig().showTypes);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ getParentObjectName() }}\n    \n    {{ getFieldPath() }}\n    \n  \n\n\n\n  \n    \n      \n        \n          {{ getFieldPath() }}\n           0\">\n        \n      \n    \n  \n\n  \n    \n      \n        \n        \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ getParentObjectName() }}        {{ getFieldPath() }}                                    {{ getFieldPath() }}           0\">                                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingListFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingSelectionComponent.html":{"url":"components/MappingSelectionComponent.html","title":"component - MappingSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-selection\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                mappings\n                            \n                            \n                                modalWindow\n                            \n                            \n                                sectionComponents\n                            \n                            \n                                selectedField\n                            \n                            \n                                    Private\n                                selectedMappingComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMapping\n                            \n                            \n                                getFormattedOutputPath\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                getSelectedMapping\n                            \n                            \n                                    Private\n                                getSelectedMappingComponent\n                            \n                            \n                                isDataValid\n                            \n                            \n                                selectionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addMapping\n                        \n                        \n                    \n                \n            \n            \n                \naddMapping()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFormattedOutputPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetFormattedOutputPath(path: string, nameOnly: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nameOnly\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSelectedMapping\n                        \n                        \n                    \n                \n            \n            \n                \ngetSelectedMapping()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MappingModel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getSelectedMappingComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSelectedMappingComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MappingSelectionSectionComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged(c: MappingSelectionSectionComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                MappingSelectionSectionComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalWindow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sectionComponents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('mappingSection')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedMappingComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingSelectionSectionComponent\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChildren, QueryList, ElementRef } from '@angular/core';\n\nimport { MappingModel } from '../../models/mapping.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\n\nimport { ModalWindowComponent, ModalWindowValidator } from '../modal-window.component';\nimport { MappingSelectionSectionComponent } from './mapping-selection-section.component';\n\n@Component({\n  selector: 'mapping-selection',\n  templateUrl: './mapping-selection.component.html',\n})\n\nexport class MappingSelectionComponent implements ModalWindowValidator {\n  modalWindow: ModalWindowComponent;\n  mappings: MappingModel[];\n  selectedField: Field = null;\n  cfg: ConfigModel;\n\n  @ViewChildren('mappingSection') sectionComponents: QueryList;\n\n  private selectedMappingComponent: MappingSelectionSectionComponent = null;\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n  selectionChanged(c: MappingSelectionSectionComponent) {\n    const self: MappingSelectionComponent = c.parentComponent as MappingSelectionComponent;\n    const oldSelectedItem: MappingSelectionSectionComponent = self.getSelectedMappingComponent();\n    oldSelectedItem.selected = false;\n    c.selected = true;\n    self.selectedMappingComponent = c;\n  }\n\n  getFormattedOutputPath(path: string, nameOnly: boolean) {\n    path = path.replace('.', '/');\n    const index: number = path.lastIndexOf('/');\n    const fieldName: string = (index === -1) ? path : path.substr(path.lastIndexOf('/') + 1);\n    path = (index === -1) ? '' : path.substr(0, path.lastIndexOf('/') + 1);\n    return nameOnly ? fieldName : path;\n  }\n\n  addMapping() {\n    this.cfg.mappingService.addNewMapping(this.selectedField, false);\n    this.modalWindow.close();\n  }\n\n  getSelectedMapping(): MappingModel {\n    return this.getSelectedMappingComponent().mapping;\n  }\n\n  private getSelectedMappingComponent(): MappingSelectionSectionComponent {\n    if (this.selectedMappingComponent == null) {\n      for (const c of this.sectionComponents.toArray()) {\n        if (c.selected) {\n          this.selectedMappingComponent = c;\n          break;\n        }\n      }\n    }\n    return this.selectedMappingComponent;\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ selectedField.isSource() ? 'Source' : 'Target' }}\n    \n      {{ getFormattedOutputPath(selectedField.path, false) }}\n      {{ getFormattedOutputPath(selectedField.path, true) }}\n      \n    \n    \n    \n      Add New Mapping\n    \n  \n  \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ selectedField.isSource() ? \\'Source\\' : \\'Target\\' }}          {{ getFormattedOutputPath(selectedField.path, false) }}      {{ getFormattedOutputPath(selectedField.path, true) }}                        Add New Mapping                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingSelectionSectionComponent.html":{"url":"components/MappingSelectionSectionComponent.html","title":"component - MappingSelectionSectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingSelectionSectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-selection-section\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-selection-section.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClass\n                            \n                            \n                                getFormattedOutputPath\n                            \n                            \n                                getSourceTargetLabelText\n                            \n                            \n                                handleMouseClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOddRow\n                            \n                            \n                                mapping\n                            \n                            \n                                outputNumber\n                            \n                            \n                                parentComponent\n                            \n                            \n                                selected\n                            \n                            \n                                selectedCallback\n                            \n                            \n                                selectedFieldIsSource\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOddRow\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        outputNumber\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentComponent\n                    \n                \n                \n                    \n                        Type :         Component\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedCallback\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedFieldIsSource\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFormattedOutputPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetFormattedOutputPath(path: string, nameOnly: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nameOnly\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSourceTargetLabelText\n                        \n                        \n                    \n                \n            \n            \n                \ngetSourceTargetLabelText(isSource: boolean, mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseClick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { MappingModel } from '../../models/mapping.model';\n\n@Component({\n  selector: 'mapping-selection-section',\n  templateUrl: './mapping-selection-section.component.html',\n})\n\nexport class MappingSelectionSectionComponent {\n  @Input() outputNumber: number;\n  @Input() mapping: MappingModel;\n  @Input() selectedCallback: Function;\n  @Input() selected = false;\n  @Input() selectedFieldIsSource = false;\n  @Input() parentComponent: Component;\n  @Input() isOddRow = false;\n\n  getClass(): string {\n    let cssClass = 'MappingSelectionSection';\n    if (this.selected) {\n      cssClass += ' SelectedMappingSelectionSection';\n    }\n    if (this.isOddRow) {\n      cssClass += ' odd';\n    }\n    return cssClass;\n  }\n\n  getSourceTargetLabelText(isSource: boolean, mapping: MappingModel): string {\n    if (isSource) {\n      return (mapping.sourceFields.length > 0) ? 'Sources' : 'Source';\n    }\n    return (mapping.targetFields.length > 0) ? 'Targets' : 'Target';\n  }\n\n  getFormattedOutputPath(path: string, nameOnly: boolean) {\n    if (path == null) {\n      return '';\n    }\n    path = path.replace('.', '/');\n    const index: number = path.lastIndexOf('/');\n    const fieldName: string = (index === -1) ? path : path.substr(path.lastIndexOf('/') + 1);\n    path = (index === -1) ? '' : path.substr(0, path.lastIndexOf('/') + 1);\n    return nameOnly ? fieldName : path;\n  }\n\n  handleMouseClick(event: MouseEvent) {\n    this.selectedCallback(this);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ outputNumber + 1 }}\n  \n  \n    \n      \n        {{ getSourceTargetLabelText(true, mapping) }}\n        \n          \n            \n              \n              {{ getFormattedOutputPath(sourceField.field.path, false) }}\n            \n            {{ getFormattedOutputPath(sourceField.field.path, true) }}\n            \n          \n        \n      \n      \n        {{ getSourceTargetLabelText(false, mapping) }}\n        \n          \n            \n              \n              {{ getFormattedOutputPath(targetField.field.path, false) }}\n            \n            {{ getFormattedOutputPath(targetField.field.path, true) }}\n            \n          \n        \n      \n    \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ outputNumber + 1 }}                      {{ getSourceTargetLabelText(true, mapping) }}                                                          {{ getFormattedOutputPath(sourceField.field.path, false) }}                        {{ getFormattedOutputPath(sourceField.field.path, true) }}                                                  {{ getSourceTargetLabelText(false, mapping) }}                                                          {{ getFormattedOutputPath(targetField.field.path, false) }}                        {{ getFormattedOutputPath(targetField.field.path, true) }}                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingSelectionSectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalErrorWindowComponent.html":{"url":"components/ModalErrorWindowComponent.html","title":"component - ModalErrorWindowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalErrorWindowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-error-window\n            \n\n\n\n\n            \n                templateUrl\n                ./modal-error-window.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                cfg\n                            \n                            \n                                    Private\n                                componentLoaded\n                            \n                            \n                                confirmButtonDisabled\n                            \n                            \n                                    Public\n                                detector\n                            \n                            \n                                fade\n                            \n                            \n                                message\n                            \n                            \n                                myTarget\n                            \n                            \n                                    Private\n                                myTargetChangesSubscription\n                            \n                            \n                                nestedComponent\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                dismissAll\n                            \n                            \n                                getErrors\n                            \n                            \n                                getWarnings\n                            \n                            \n                                handleAlertClick\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                            \n                                show\n                            \n                            \n                                somethingToShow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelButtonHandler\n                            \n                            \n                                headerText\n                            \n                            \n                                modalErrorWindow\n                            \n                            \n                                nestedComponentInitializedCallback\n                            \n                            \n                                nestedComponentType\n                            \n                            \n                                okButtonHandler\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, detector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cancelButtonHandler\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        headerText\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalErrorWindow\n                    \n                \n                \n                    \n                        Type :         ModalErrorWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nestedComponentInitializedCallback\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nestedComponentType\n                    \n                \n                \n                    \n                        Type :     Type\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        okButtonHandler\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dismissAll\n                        \n                        \n                    \n                \n            \n            \n                \ndismissAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWarnings\n                        \n                        \n                    \n                \n            \n            \n                \ngetWarnings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleAlertClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleAlertClick(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            somethingToShow\n                        \n                        \n                    \n                \n            \n            \n                \nsomethingToShow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Dismiss All'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            componentLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmButtonDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            detector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fade\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('dyn_target', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            myTargetChangesSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nestedComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalErrorWindowValidator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component, Input, ViewChildren, QueryList, OnDestroy, OnInit,\n  ViewContainerRef, Type, ComponentFactoryResolver, AfterViewInit, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../models/config.model';\nimport { Subscription } from 'rxjs';\nimport { ErrorInfo, ErrorLevel } from '../models/error.model';\n\nexport interface ModalErrorWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'modal-error-window',\n  templateUrl: './modal-error-window.component.html',\n})\n\nexport class ModalErrorWindowComponent implements OnInit {\n  @Input() headerText = '';\n  @Input() nestedComponentType: Type;\n  @Input() nestedComponentInitializedCallback: Function;\n  @Input() okButtonHandler: Function;\n  @Input() cancelButtonHandler: Function;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  cfg: ConfigModel = null;\n  message: string = null;\n  nestedComponent: ModalErrorWindowValidator;\n  confirmButtonDisabled = false;\n  buttonText = 'Dismiss All';\n  visible = false;\n  fade = false;\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  private componentLoaded = false;\n  private myTargetChangesSubscription: Subscription;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, public detector: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.cfg = ConfigModel.getConfig();\n  }\n\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.visible = false;\n    }, 300);\n  }\n\n  somethingToShow(): boolean {\n    return (this.cfg.errors.length > 0);\n  }\n\n  show(): void {\n    this.headerText = 'Errors and Warnings - Current Active Mapping';\n    this.message = '';\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.message = 'Hello!';\n    this.headerText = '';\n    this.componentLoaded = false;\n    this.okButtonHandler = null;\n    this.cancelButtonHandler = null;\n  }\n\n  getErrors(): ErrorInfo[] {\n    return this.cfg.errors.filter(e => e.level >= ErrorLevel.ERROR);\n  }\n\n  getWarnings(): ErrorInfo[] {\n    return this.cfg.errors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  handleAlertClick(event: any) {\n    const errorIdentifier = event.target.attributes.getNamedItem('errorIdentifier');\n    if (errorIdentifier && errorIdentifier.value) {\n      if (this.cfg.mappings.activeMapping) {\n        this.cfg.mappings.activeMapping.removeValidationError(errorIdentifier.value);\n      }\n      this.cfg.errorService.removeError(errorIdentifier.value);\n    }\n    if (this.getErrors().length === 0 && this.getWarnings().length === 0) {\n      this.close();\n    }\n  }\n\n  dismissAll(): void {\n    for (const e of this.getErrors()) {\n      if (this.cfg.mappings && this.cfg.mappings.activeMapping) {\n        this.cfg.mappings.activeMapping.removeValidationError(e.identifier);\n      }\n      this.cfg.errorService.removeError(e.identifier);\n    }\n    for (const w of this.getWarnings()) {\n      if (this.cfg.mappings && this.cfg.mappings.activeMapping) {\n        this.cfg.mappings.activeMapping.removeValidationError(w.identifier);\n      }\n      this.cfg.errorService.removeError(w.identifier);\n    }\n    this.close();\n  }\n}\n\n    \n\n    \n        \n   -->\n  \n    \n      \n        \n          \n            \n              \n            \n          \n          {{ headerText }}\n          \n             {{ getWarnings().length }}\n             | \n             {{ getErrors().length }}\n          \n        \n        \n        \n        \n          \n              \n              \n                \n              \n              \n              {{ w.message }}\n            \n          \n            \n              \n                \n              \n              \n              {{ e.message }}\n            \n\n          \n          \n        \n        \n          \n            {{ buttonText }} \n            Cancel -->\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->                                                                                        {{ headerText }}                       {{ getWarnings().length }}             |              {{ getErrors().length }}                                                                                                                                          {{ w.message }}                                                                                                          {{ e.message }}                                                                      {{ buttonText }}             Cancel -->                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalErrorWindowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalErrorWindowValidator.html":{"url":"interfaces/ModalErrorWindowValidator.html","title":"interface - ModalErrorWindowValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModalErrorWindowValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getInitialFocusElement\n                                \n                                \n                                    isDataValid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Component, Input, ViewChildren, QueryList, OnDestroy, OnInit,\n  ViewContainerRef, Type, ComponentFactoryResolver, AfterViewInit, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../models/config.model';\nimport { Subscription } from 'rxjs';\nimport { ErrorInfo, ErrorLevel } from '../models/error.model';\n\nexport interface ModalErrorWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'modal-error-window',\n  templateUrl: './modal-error-window.component.html',\n})\n\nexport class ModalErrorWindowComponent implements OnInit {\n  @Input() headerText = '';\n  @Input() nestedComponentType: Type;\n  @Input() nestedComponentInitializedCallback: Function;\n  @Input() okButtonHandler: Function;\n  @Input() cancelButtonHandler: Function;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  cfg: ConfigModel = null;\n  message: string = null;\n  nestedComponent: ModalErrorWindowValidator;\n  confirmButtonDisabled = false;\n  buttonText = 'Dismiss All';\n  visible = false;\n  fade = false;\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  private componentLoaded = false;\n  private myTargetChangesSubscription: Subscription;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, public detector: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.cfg = ConfigModel.getConfig();\n  }\n\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.visible = false;\n    }, 300);\n  }\n\n  somethingToShow(): boolean {\n    return (this.cfg.errors.length > 0);\n  }\n\n  show(): void {\n    this.headerText = 'Errors and Warnings - Current Active Mapping';\n    this.message = '';\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.message = 'Hello!';\n    this.headerText = '';\n    this.componentLoaded = false;\n    this.okButtonHandler = null;\n    this.cancelButtonHandler = null;\n  }\n\n  getErrors(): ErrorInfo[] {\n    return this.cfg.errors.filter(e => e.level >= ErrorLevel.ERROR);\n  }\n\n  getWarnings(): ErrorInfo[] {\n    return this.cfg.errors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  handleAlertClick(event: any) {\n    const errorIdentifier = event.target.attributes.getNamedItem('errorIdentifier');\n    if (errorIdentifier && errorIdentifier.value) {\n      if (this.cfg.mappings.activeMapping) {\n        this.cfg.mappings.activeMapping.removeValidationError(errorIdentifier.value);\n      }\n      this.cfg.errorService.removeError(errorIdentifier.value);\n    }\n    if (this.getErrors().length === 0 && this.getWarnings().length === 0) {\n      this.close();\n    }\n  }\n\n  dismissAll(): void {\n    for (const e of this.getErrors()) {\n      if (this.cfg.mappings && this.cfg.mappings.activeMapping) {\n        this.cfg.mappings.activeMapping.removeValidationError(e.identifier);\n      }\n      this.cfg.errorService.removeError(e.identifier);\n    }\n    for (const w of this.getWarnings()) {\n      if (this.cfg.mappings && this.cfg.mappings.activeMapping) {\n        this.cfg.mappings.activeMapping.removeValidationError(w.identifier);\n      }\n      this.cfg.errorService.removeError(w.identifier);\n    }\n    this.close();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalWindowComponent.html":{"url":"components/ModalWindowComponent.html","title":"component - ModalWindowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalWindowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-window\n            \n\n\n\n\n            \n                templateUrl\n                ./modal-window.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                componentLoaded\n                            \n                            \n                                confirmButtonDisabled\n                            \n                            \n                                confirmButtonText\n                            \n                            \n                                    Public\n                                detector\n                            \n                            \n                                fade\n                            \n                            \n                                message\n                            \n                            \n                                myTarget\n                            \n                            \n                                    Private\n                                myTargetChangesSubscription\n                            \n                            \n                                nestedComponent\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buttonClicked\n                            \n                            \n                                close\n                            \n                            \n                                closeClicked\n                            \n                            \n                                loadComponent\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                reset\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelButtonHandler\n                            \n                            \n                                cfg\n                            \n                            \n                                headerText\n                            \n                            \n                                modalErrorWindow\n                            \n                            \n                                nestedComponentInitializedCallback\n                            \n                            \n                                nestedComponentType\n                            \n                            \n                                okButtonHandler\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, detector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:73\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cancelButtonHandler\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        headerText\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalErrorWindow\n                    \n                \n                \n                    \n                        Type :         ModalErrorWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nestedComponentInitializedCallback\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nestedComponentType\n                    \n                \n                \n                    \n                        Type :     Type\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        okButtonHandler\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:58\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buttonClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buttonClicked(okClicked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    okClicked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeClicked\n                        \n                        \n                    \n                \n            \n            \n                \ncloseClicked(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadComponent\n                        \n                        \n                    \n                \n            \n            \n                \nloadComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            componentLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmButtonDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmButtonText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'OK'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            detector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fade\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('dyn_target', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            myTargetChangesSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nestedComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowValidator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:67\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component, Input, ViewChildren, QueryList, OnDestroy,\n  ViewContainerRef, Type, ComponentFactoryResolver, AfterViewInit, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../models/config.model';\nimport { Subscription } from 'rxjs';\nimport { ModalErrorWindowComponent } from './modal-error-window.component';\n\n// source: http://www.w3schools.com/howto/howto_css_modals.asp\n\nexport interface ModalWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'empty-modal-body',\n  template: '',\n})\n\nexport class EmptyModalBodyComponent implements ModalWindowValidator {\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n}\n\n@Component({\n  selector: 'modal-window',\n  templateUrl: './modal-window.component.html',\n})\n\nexport class ModalWindowComponent implements AfterViewInit, OnDestroy {\n  @Input() headerText = '';\n  @Input() nestedComponentType: Type;\n  @Input() nestedComponentInitializedCallback: Function;\n  @Input() okButtonHandler: Function;\n  @Input() cancelButtonHandler: Function;\n  @Input() cfg: ConfigModel;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  message: string = null;\n  nestedComponent: ModalWindowValidator;\n  confirmButtonDisabled = false;\n  confirmButtonText = 'OK';\n  visible = false;\n  fade = false;\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  private componentLoaded = false;\n  private myTargetChangesSubscription: Subscription;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, public detector: ChangeDetectorRef) { }\n\n  ngAfterViewInit() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n\n    // from: http://stackoverflow.com/questions/40811809/add-component-dynamically-inside-an-ngif\n    this.myTargetChangesSubscription = this.myTarget.changes.subscribe(changes => {\n      setTimeout(() => {\n        if (!this.componentLoaded && this.visible && this.myTarget && (this.myTarget.toArray().length)) {\n          this.loadComponent();\n        }\n        setTimeout(() => {\n          this.detector.detectChanges();\n        }, 10);\n      }, 10);\n    });\n  }\n\n  ngOnDestroy() {\n    this.myTargetChangesSubscription.unsubscribe();\n  }\n\n  loadComponent(): void {\n    const viewContainerRef: ViewContainerRef = this.myTarget.toArray()[0];\n    viewContainerRef.clear();\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.nestedComponentType);\n    this.nestedComponent = viewContainerRef.createComponent(componentFactory).instance as ModalWindowValidator;\n    if (this.nestedComponentInitializedCallback != null) {\n      this.nestedComponentInitializedCallback(this);\n    }\n    const initialFocusElement = this.nestedComponent.getInitialFocusElement();\n    if (initialFocusElement) {\n      initialFocusElement.nativeElement.focus();\n    }\n  }\n\n  closeClicked(event: MouseEvent): void { this.buttonClicked(false); }\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.visible = false;\n    }, 300);\n  }\n  show(): void {\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.nestedComponentInitializedCallback = null;\n    this.confirmButtonDisabled = false;\n    this.confirmButtonText = 'OK';\n    this.message = '';\n    this.headerText = '';\n    this.componentLoaded = false;\n    this.nestedComponentType = EmptyModalBodyComponent;\n    this.okButtonHandler = null;\n    this.cancelButtonHandler = null;\n  }\n\n  private buttonClicked(okClicked: boolean): void {\n    if (okClicked) {\n      if (this.nestedComponent != null) {\n        this.cfg.errorService.clearValidationErrors();\n        if (!(this.nestedComponent.isDataValid())) {\n          return;\n        }\n      }\n      if (this.okButtonHandler) {\n        this.okButtonHandler(this);\n      }\n    } else { // cancel clicked\n      if (this.cancelButtonHandler) {\n        this.cancelButtonHandler(this);\n      }\n    }\n    this.close();\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          \n            \n              \n            \n          \n          {{ headerText }}\n        \n        \n          \n        \n        \n          {{ message }}\n          \n        \n        \n          \n            {{ confirmButtonText }} \n            Cancel\n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                          {{ headerText }}                                                    {{ message }}                                                {{ confirmButtonText }}             Cancel                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalWindowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalWindowValidator.html":{"url":"interfaces/ModalWindowValidator.html","title":"interface - ModalWindowValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModalWindowValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getInitialFocusElement\n                                \n                                \n                                    isDataValid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Component, Input, ViewChildren, QueryList, OnDestroy,\n  ViewContainerRef, Type, ComponentFactoryResolver, AfterViewInit, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../models/config.model';\nimport { Subscription } from 'rxjs';\nimport { ModalErrorWindowComponent } from './modal-error-window.component';\n\n// source: http://www.w3schools.com/howto/howto_css_modals.asp\n\nexport interface ModalWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'empty-modal-body',\n  template: '',\n})\n\nexport class EmptyModalBodyComponent implements ModalWindowValidator {\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n}\n\n@Component({\n  selector: 'modal-window',\n  templateUrl: './modal-window.component.html',\n})\n\nexport class ModalWindowComponent implements AfterViewInit, OnDestroy {\n  @Input() headerText = '';\n  @Input() nestedComponentType: Type;\n  @Input() nestedComponentInitializedCallback: Function;\n  @Input() okButtonHandler: Function;\n  @Input() cancelButtonHandler: Function;\n  @Input() cfg: ConfigModel;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  message: string = null;\n  nestedComponent: ModalWindowValidator;\n  confirmButtonDisabled = false;\n  confirmButtonText = 'OK';\n  visible = false;\n  fade = false;\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  private componentLoaded = false;\n  private myTargetChangesSubscription: Subscription;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, public detector: ChangeDetectorRef) { }\n\n  ngAfterViewInit() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n\n    // from: http://stackoverflow.com/questions/40811809/add-component-dynamically-inside-an-ngif\n    this.myTargetChangesSubscription = this.myTarget.changes.subscribe(changes => {\n      setTimeout(() => {\n        if (!this.componentLoaded && this.visible && this.myTarget && (this.myTarget.toArray().length)) {\n          this.loadComponent();\n        }\n        setTimeout(() => {\n          this.detector.detectChanges();\n        }, 10);\n      }, 10);\n    });\n  }\n\n  ngOnDestroy() {\n    this.myTargetChangesSubscription.unsubscribe();\n  }\n\n  loadComponent(): void {\n    const viewContainerRef: ViewContainerRef = this.myTarget.toArray()[0];\n    viewContainerRef.clear();\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.nestedComponentType);\n    this.nestedComponent = viewContainerRef.createComponent(componentFactory).instance as ModalWindowValidator;\n    if (this.nestedComponentInitializedCallback != null) {\n      this.nestedComponentInitializedCallback(this);\n    }\n    const initialFocusElement = this.nestedComponent.getInitialFocusElement();\n    if (initialFocusElement) {\n      initialFocusElement.nativeElement.focus();\n    }\n  }\n\n  closeClicked(event: MouseEvent): void { this.buttonClicked(false); }\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.visible = false;\n    }, 300);\n  }\n  show(): void {\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.nestedComponentInitializedCallback = null;\n    this.confirmButtonDisabled = false;\n    this.confirmButtonText = 'OK';\n    this.message = '';\n    this.headerText = '';\n    this.componentLoaded = false;\n    this.nestedComponentType = EmptyModalBodyComponent;\n    this.okButtonHandler = null;\n    this.cancelButtonHandler = null;\n  }\n\n  private buttonClicked(okClicked: boolean): void {\n    if (okClicked) {\n      if (this.nestedComponent != null) {\n        this.cfg.errorService.clearValidationErrors();\n        if (!(this.nestedComponent.isDataValid())) {\n          return;\n        }\n      }\n      if (this.okButtonHandler) {\n        this.okButtonHandler(this);\n      }\n    } else { // cancel clicked\n      if (this.cancelButtonHandler) {\n        this.cancelButtonHandler(this);\n      }\n    }\n    this.close();\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NamespaceEditComponent.html":{"url":"components/NamespaceEditComponent.html","title":"component - NamespaceEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NamespaceEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/namespace-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                namespace-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./namespace-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                namespace\n                            \n                            \n                                targetEnabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                targetToggled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-edit.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(namespace: NamespaceModel, namespaces: NamespaceModel[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-edit.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    namespaces\n                                    \n                                                NamespaceModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-edit.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            targetToggled\n                        \n                        \n                    \n                \n            \n            \n                \ntargetToggled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-edit.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('namespace')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-edit.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel\n\n                        \n                    \n                    \n                        \n                            Default value : new NamespaceModel()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-edit.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-edit.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { ConfigModel } from '../models/config.model';\nimport { NamespaceModel } from '../models/document-definition.model';\nimport { ModalWindowValidator } from './modal-window.component';\n\n@Component({\n  selector: 'namespace-edit',\n  templateUrl: './namespace-edit.component.html',\n})\n\nexport class NamespaceEditComponent implements ModalWindowValidator {\n  namespace: NamespaceModel = new NamespaceModel();\n  targetEnabled = true;\n  @ViewChild('namespace') private focusEl: ElementRef;\n\n  initialize(namespace: NamespaceModel, namespaces: NamespaceModel[]): void {\n    this.namespace = (namespace == null) ? new NamespaceModel() : namespace.copy();\n    if (!namespace.isTarget) {\n      for (const ns of namespaces) {\n        if (ns.isTarget) {\n          this.targetEnabled = false;\n          break;\n        }\n      }\n    }\n  }\n\n  targetToggled(): void {\n    this.namespace.isTarget = !this.namespace.isTarget;\n    this.namespace.alias = this.namespace.isTarget ? 'tns' : '';\n  }\n\n  isDataValid(): boolean {\n    const configModel: ConfigModel = ConfigModel.getConfig();\n    let dataIsValid: boolean = configModel.isRequiredFieldValid(this.namespace.alias, 'Alias');\n    dataIsValid = configModel.isRequiredFieldValid(this.namespace.uri, 'URI') && dataIsValid;\n    return dataIsValid;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n}\n\n    \n\n    \n        \n  \n    Alias\n    \n  \n  \n    URI\n    \n  \n  \n    Location URI\n    \n  \n  \n    Type\n    \n    Target Namespace\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Alias            URI            Location URI            Type        Target Namespace      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'NamespaceEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NamespaceListComponent.html":{"url":"components/NamespaceListComponent.html","title":"component - NamespaceListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NamespaceListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                namespace-list\n            \n\n\n\n\n            \n                templateUrl\n                ./namespace-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                searchFilter\n                            \n                            \n                                searchMode\n                            \n                            \n                                    Private\n                                searchResults\n                            \n                            \n                                    Private\n                                selectedNamespace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEditNamespace\n                            \n                            \n                                getItemsCSSClass\n                            \n                            \n                                getNamespaceCSSClass\n                            \n                            \n                                getNamespaces\n                            \n                            \n                                getRowsCSSClass\n                            \n                            \n                                getRowTitleCSSClass\n                            \n                            \n                                getSearchIconCSSClass\n                            \n                            \n                                namespaceMatchesSearch\n                            \n                            \n                                removeNamespace\n                            \n                            \n                                    Private\n                                search\n                            \n                            \n                                searchResultsVisible\n                            \n                            \n                                selectNamespace\n                            \n                            \n                                toggleSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEditNamespace\n                        \n                        \n                    \n                \n            \n            \n                \naddEditNamespace(ns: NamespaceModel, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ns\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItemsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetItemsCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNamespaceCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetNamespaceCSSClass(namespace: NamespaceModel, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNamespaces\n                        \n                        \n                    \n                \n            \n            \n                \ngetNamespaces()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         NamespaceModel[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRowsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetRowsCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRowTitleCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetRowTitleCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSearchIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetSearchIconCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            namespaceMatchesSearch\n                        \n                        \n                    \n                \n            \n            \n                \nnamespaceMatchesSearch(ns: NamespaceModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ns\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeNamespace\n                        \n                        \n                    \n                \n            \n            \n                \nremoveNamespace(ns: NamespaceModel, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ns\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(searchFilter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchFilter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchResultsVisible\n                        \n                        \n                    \n                \n            \n            \n                \nsearchResultsVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNamespace\n                        \n                        \n                    \n                \n            \n            \n                \nselectNamespace(ns: NamespaceModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ns\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSearch\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ConfigModel } from '../models/config.model';\nimport { NamespaceModel } from '../models/document-definition.model';\nimport { NamespaceEditComponent } from './namespace-edit.component';\nimport { ModalWindowComponent } from './modal-window.component';\nimport { DataMapperUtil } from '../common/data-mapper-util';\n\n@Component({\n  selector: 'namespace-list',\n  templateUrl: './namespace-list.component.html',\n})\n\nexport class NamespaceListComponent {\n  @Input() cfg: ConfigModel;\n  @Input() modalWindow: ModalWindowComponent;\n\n  searchMode = false;\n  private searchFilter = '';\n  private selectedNamespace: NamespaceModel = null;\n  private searchResults: NamespaceModel[] = [];\n\n  getNamespaceCSSClass(namespace: NamespaceModel, index: number): string {\n    let cssClass = 'item itemRow ';\n    cssClass += (index % 2 === 1) ? ' even' : '';\n    if (namespace === this.selectedNamespace) {\n      cssClass += ' active';\n    }\n    return cssClass;\n  }\n\n  searchResultsVisible(): boolean {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      return false;\n    }\n    return (this.searchResults.length === 0);\n  }\n\n  selectNamespace(ns: NamespaceModel): void {\n    this.selectedNamespace = (this.selectedNamespace === ns) ? null : ns;\n  }\n\n  getItemsCSSClass(): string {\n    return 'items namespaces' + (this.searchMode ? ' searchShown' : '');\n  }\n\n  getRowTitleCSSClass(): string {\n    return this.searchMode ? 'rowTitles searchShown' : 'rowTitles';\n  }\n\n  getRowsCSSClass(): string {\n    return this.searchMode ? 'rows searchShown' : 'rows';\n  }\n\n  getNamespaces(): NamespaceModel[] {\n    return this.searchMode ? this.searchResults : this.cfg.getFirstXmlDoc(false).namespaces;\n  }\n\n  addEditNamespace(ns: NamespaceModel, event: any): void {\n    event.stopPropagation();\n    const isEditMode = (ns != null);\n    if (!isEditMode) {\n      ns = new NamespaceModel();\n      ns.createdByUser = true;\n    }\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Save';\n    this.modalWindow.headerText = (ns == null) ? 'Add Namespace' : 'Edit Namespace';\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      const namespaceComponent: NamespaceEditComponent = mw.nestedComponent as NamespaceEditComponent;\n      namespaceComponent.initialize(ns, this.cfg.getFirstXmlDoc(false).namespaces);\n    };\n    this.modalWindow.nestedComponentType = NamespaceEditComponent;\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      const namespaceComponent: NamespaceEditComponent = mw.nestedComponent as NamespaceEditComponent;\n      const newNamespace: NamespaceModel = namespaceComponent.namespace;\n      if (isEditMode) {\n        ns.copyFrom(newNamespace);\n      } else {\n        this.cfg.getFirstXmlDoc(false).namespaces.push(newNamespace);\n      }\n      this.search(this.searchFilter);\n      this.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  toggleSearch(): void {\n    this.searchMode = !this.searchMode;\n    this.search(this.searchFilter);\n  }\n\n  getSearchIconCSSClass(): string {\n    const cssClass = 'fa fa-search searchBoxIcon link';\n    return this.searchMode ? (cssClass + ' selectedIcon') : cssClass;\n  }\n\n  namespaceMatchesSearch(ns: NamespaceModel): boolean {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      return true;\n    }\n    const filter: string = this.searchFilter.toLowerCase();\n    if (ns.isTarget && ('tns'.includes(filter) || 'target'.includes(filter))) {\n      return true;\n    }\n    if (ns.alias != null && ns.alias.toLowerCase().includes(filter)) {\n      return true;\n    }\n    if (ns.uri != null && ns.uri.toLowerCase().includes(filter)) {\n      return true;\n    }\n    if (ns.locationUri != null && ns.locationUri.toLowerCase().includes(filter)) {\n      return true;\n    }\n    return false;\n  }\n\n  removeNamespace(ns: NamespaceModel, event: any): void {\n    event.stopPropagation();\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Remove';\n    this.modalWindow.headerText = 'Remove Namespace?';\n    this.modalWindow.message = 'Are you sure you want to remove \\'' + ns.alias + '\\' ?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      DataMapperUtil.removeItemFromArray(ns, this.cfg.getFirstXmlDoc(false).namespaces);\n      this.selectedNamespace = null;\n      this.search(this.searchFilter);\n    };\n    this.modalWindow.show();\n  }\n\n  private search(searchFilter: string): void {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      this.searchResults = [].concat(this.cfg.getFirstXmlDoc(false).namespaces);\n      return;\n    }\n\n    this.searchFilter = searchFilter;\n    this.searchResults = [];\n    for (const ns of this.cfg.getFirstXmlDoc(false).namespaces) {\n      if (this.namespaceMatchesSearch(ns)) {\n        this.searchResults.push(ns);\n      } else if (this.selectedNamespace != null) {\n        this.selectNamespace = null;\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          Namespaces for {{ cfg.getFirstXmlDoc(false).name }}\n        \n        \n        \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          Alias\n          Uri\n          Location URI\n          \n        \n        \n      \n    \n    \n      \n        \n          {{ namespace.isTarget ? 'Target (tns)' : namespace.alias }}\n          {{ namespace.uri }}\n          {{ namespace.locationUri }}\n          \n            \n            \n          \n          \n        \n      \n      \n        No search results.\n        \n      \n    \n    {{ getNamespaces().length }} namespaces\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Namespaces for {{ cfg.getFirstXmlDoc(false).name }}                                                                                                            Alias          Uri          Location URI                                                                {{ namespace.isTarget ? \\'Target (tns)\\' : namespace.alias }}          {{ namespace.uri }}          {{ namespace.locationUri }}                                                                                  No search results.                      {{ getNamespaces().length }} namespaces      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'NamespaceListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NamespaceModel.html":{"url":"classes/NamespaceModel.html","title":"class - NamespaceModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NamespaceModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                createdByUser\n                            \n                            \n                                isTarget\n                            \n                            \n                                locationUri\n                            \n                            \n                                    Private\n                                    Static\n                                unqualifiedNamespace\n                            \n                            \n                                uri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                copyFrom\n                            \n                            \n                                getPrettyLabel\n                            \n                            \n                                    Static\n                                getUnqualifiedNamespace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdByUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locationUri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            unqualifiedNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:27\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         NamespaceModel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyFrom\n                        \n                        \n                    \n                \n            \n            \n                \ncopyFrom(that: NamespaceModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    that\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPrettyLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetPrettyLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getUnqualifiedNamespace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnqualifiedNamespace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         NamespaceModel\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Field } from './field.model';\nimport { DocumentType, InspectionType } from '../common/config.types';\nimport { MappingDefinition } from '../models/mapping-definition.model';\nimport { DataMapperUtil } from '../common/data-mapper-util';\nimport { DocumentInitializationModel } from '../models/config.model';\n\nexport class NamespaceModel {\n  private static unqualifiedNamespace: NamespaceModel = null;\n\n  alias: string = null;\n  uri: string = null;\n  locationUri: string = null;\n  createdByUser = false;\n  isTarget = false;\n\n  static getUnqualifiedNamespace(): NamespaceModel {\n    if (NamespaceModel.unqualifiedNamespace == null) {\n      const ns: NamespaceModel = new NamespaceModel();\n      ns.alias = 'Unqualified';\n      NamespaceModel.unqualifiedNamespace = ns;\n    }\n    return NamespaceModel.unqualifiedNamespace;\n  }\n\n  getPrettyLabel(): string {\n    if (this === NamespaceModel.getUnqualifiedNamespace()) {\n      return this.alias;\n    }\n    return (this.isTarget ? 'Target' : this.alias)\n      + ' [' + (this.uri == null ? 'NO URI' : this.uri) + ']';\n  }\n\n  copy(): NamespaceModel {\n    const copy: NamespaceModel = new NamespaceModel();\n    Object.assign(copy, this);\n    return copy;\n  }\n\n  copyFrom(that: NamespaceModel): void {\n    Object.assign(this, that);\n  }\n}\n\nexport class PaddingField extends Field {\n  constructor(private _isSource: boolean) {\n    super();\n    this.name = '';\n    this.classIdentifier = '';\n    this.type = '';\n    this.displayName = '';\n    this.path = '';\n  }\n\n  isSource(): boolean {\n    return this._isSource;\n  }\n\n}\n\nexport class DocumentDefinition {\n  private static padField: Field = null;\n\n  LEFT_BRACKET = '\\x5b';\n  RIGHT_BRACKET = '\\x5d';\n\n  initModel: DocumentInitializationModel;\n  id: string;\n  _type: DocumentType;\n  name: string;\n  description: string;\n  uri: string;\n  inspectionType: InspectionType;\n  inspectionSource: string;\n  inspectionResult: string;\n  isSource: boolean;\n  isPropertyOrConstant: boolean;\n  selectedRoot: string;\n\n  classPath: string;\n  initialized = false;\n  errorOccurred = false;\n  pathSeparator = '/';\n  fields: Field[] = [];\n  allFields: Field[] = [];\n  terminalFields: Field[] = [];\n  complexFieldsByClassIdentifier: { [key: string]: Field; } = {};\n  enumFieldsByClassIdentifier: { [key: string]: Field; } = {};\n  fieldsByPath: { [key: string]: Field; } = {};\n  fieldPaths: string[] = [];\n  showFields = true;\n  visibleInCurrentDocumentSearch = true;\n  namespaces: NamespaceModel[] = [];\n  characterEncoding: string = null;\n  locale: string = null;\n\n  static getDocumentByIdentifier(documentId: string, docs: DocumentDefinition[]): DocumentDefinition {\n    if (documentId == null || docs == null || !docs.length) {\n      return null;\n    }\n    for (const doc of docs) {\n      if (doc.id === documentId) {\n        return doc;\n      }\n    }\n    return null;\n\n  }\n\n  set type(type: DocumentType) {\n    this._type = type;\n    this.isPropertyOrConstant = type === DocumentType.CONSTANT || type === DocumentType.PROPERTY;\n  }\n\n  get type(): DocumentType {\n    return this._type;\n  }\n\n  getComplexField(classIdentifier: string): Field {\n    return this.complexFieldsByClassIdentifier[classIdentifier];\n  }\n\n  getEnumField(classIdentifier: string): Field {\n    return this.enumFieldsByClassIdentifier[classIdentifier];\n  }\n\n  getAllFields(): Field[] {\n    return [].concat(this.allFields);\n  }\n\n  /**\n   * Return true if the specified field name already exists in the specified document definition,\n   * false otherwise.\n   *\n   * @param targetField\n   * @param targetFieldDocDefType\n   */\n  fieldExists(targetField: Field, targetFieldDocDefType: DocumentType): boolean {\n\n    for (const field of this.getAllFields()) {\n      if (field.name === targetField.name && field.docDef.type === targetFieldDocDefType) {\n          return true;\n      }\n    }\n    return false;\n  }\n\n  isFieldsExist(fields: Field[]): boolean {\n    if (fields == null || fields.length === 0) {\n      return true;\n    }\n    const foundFields: Field[] = this.getFields(Field.getFieldPaths(fields));\n    return (foundFields != null) && (fields.length === foundFields.length);\n  }\n\n  getFields(fieldPaths: string[]): Field[] {\n    const fields: Field[] = [];\n    for (const fieldPath of fieldPaths) {\n      const field: Field = this.getField(fieldPath);\n      if (field != null) {\n        fields.push(field);\n      }\n    }\n    return fields;\n  }\n\n  getName(showTypes: boolean): string {\n    let name = this.name;\n    if (showTypes && !this.isPropertyOrConstant) {\n      const type = this.type;\n      if (type) {\n        name += ' (' + type + ')';\n      }\n    }\n    return name;\n  }\n\n  getNamespaceForAlias(alias: string): NamespaceModel {\n    for (const ns of this.namespaces) {\n      if (alias === ns.alias) {\n        return ns;\n      }\n    }\n    return null;\n  }\n\n  getField(fieldPath: string): Field {\n    if (!fieldPath) {\n      return null;\n    }\n    let field: Field = this.fieldsByPath[fieldPath];\n    // if we can't find the field we're looking for, find parent fields and populate their children\n    const pathSeparator: string = this.pathSeparator;\n    let originalPath: string = fieldPath;\n    // strip beginning path separator from path\n    if (originalPath != null && originalPath.indexOf(pathSeparator) === 0) {\n      originalPath = originalPath.substring(1);\n    }\n    if (field == null && (originalPath.indexOf(pathSeparator) !== -1)) {\n      let currentParentPath = '';\n      while (originalPath.indexOf(pathSeparator) !== -1) {\n        const currentPathSection: string = originalPath.substr(0, originalPath.indexOf(pathSeparator));\n        currentParentPath += pathSeparator + currentPathSection;\n        const parentField: Field = this.fieldsByPath[currentParentPath];\n        if (parentField == null) {\n          if (originalPath.indexOf(pathSeparator) !== -1) {\n            originalPath = originalPath.substr(originalPath.indexOf(pathSeparator) + 1);\n            continue;\n          } else {\n            break;\n          }\n          // https://github.com/atlasmap/atlasmap/issues/1128\n          // throw new Error('Could not populate parent field with path \\''\n          //  + currentParentPath + '\\' (for: ' + fieldPath + ')');\n        }\n        this.populateChildren(parentField);\n        if (originalPath.indexOf(pathSeparator) !== -1) {\n          originalPath = originalPath.substr(originalPath.indexOf(pathSeparator) + 1);\n        }\n      }\n      field = this.fieldsByPath[fieldPath];\n    }\n    return field;\n  }\n\n  getTerminalFields(): Field[] {\n    return [].concat(this.terminalFields);\n  }\n\n  initializeFromFields(): void {\n    if (this.type === DocumentType.JAVA) {\n      this.prepareComplexFields();\n    }\n\n    Field.alphabetizeFields(this.fields);\n\n    for (const field of this.fields) {\n      this.populateFieldParentPaths(field, null, 0);\n      this.populateFieldData(field);\n    }\n\n    this.fieldPaths.sort();\n    this.initialized = true;\n  }\n\n  updateField(field: Field, oldPath: string): void {\n    Field.alphabetizeFields(this.fields);\n    if (!field.parentField || this.isPropertyOrConstant) {\n      this.populateFieldParentPaths(field, null, 0);\n    } else {\n      const pathSeparator: string = this.pathSeparator;\n      this.populateFieldParentPaths(field, field.parentField.path + pathSeparator,\n        field.parentField.fieldDepth + 1);\n    }\n    if (oldPath != null && this.fieldsByPath[oldPath] != null) {\n      delete (this.fieldsByPath[oldPath]);\n    }\n    DataMapperUtil.removeItemFromArray(field.path, this.fieldPaths);\n    this.populateFieldData(field);\n    this.fieldPaths.sort();\n  }\n\n  addField(field: Field): void {\n    if (!field.parentField || this.isPropertyOrConstant) {\n      this.fields.push(field);\n      Field.alphabetizeFields(this.fields);\n      this.populateFieldParentPaths(field, null, 0);\n    } else {\n      this.populateChildren(field.parentField);\n      field.parentField.children.push(field);\n      Field.alphabetizeFields(field.parentField.children);\n      const pathSeparator: string = this.pathSeparator;\n      this.populateFieldParentPaths(field, field.parentField.path + pathSeparator,\n        field.parentField.fieldDepth + 1);\n    }\n    this.populateFieldData(field);\n    this.fieldPaths.sort();\n  }\n\n  /**\n   * Return true if the passed field is terminal or children are detected, false otherwise.\n   * @param field - target field\n   */\n  populateChildren(field: Field): boolean {\n\n    // populate complex fields\n    if (field.isTerminal() || (field.children.length > 0)) {\n      return true;\n    }\n\n    let cachedField = this.getComplexField(field.classIdentifier);\n    if (cachedField == null) {\n      return false;\n    }\n\n    // copy cached field children\n    cachedField = cachedField.copy();\n    const pathSeparator: string = this.pathSeparator;\n    for (let childField of cachedField.children) {\n      childField = childField.copy();\n      childField.parentField = field;\n      this.populateFieldParentPaths(childField, field.path + pathSeparator, field.fieldDepth + 1);\n      this.populateFieldData(childField);\n      field.children.push(childField);\n    }\n\n    if (field.children.length > 0) {\n      this.fieldPaths.sort();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Clear all fields in this document.\n   */\n  clearFields(): void {\n    this.initialized = false;\n    this.fields = [];\n    this.allFields = [];\n    this.terminalFields = [];\n    this.fieldPaths = [];\n    this.namespaces = [];\n    this.fieldsByPath = {};\n    this.complexFieldsByClassIdentifier = {};\n    this.enumFieldsByClassIdentifier = {};\n  }\n\n  /**\n   * Remove the specified field from this document definition.\n   *\n   * @param field\n   */\n  removeField(field: Field): void {\n    if (field == null) {\n      return;\n    }\n    DataMapperUtil.removeItemFromArray(field, this.fields);\n    DataMapperUtil.removeItemFromArray(field, this.allFields);\n    DataMapperUtil.removeItemFromArray(field, this.terminalFields);\n    DataMapperUtil.removeItemFromArray(field.path, this.fieldPaths);\n    delete (this.fieldsByPath[field.path]);\n    if (field.parentField != null) {\n      DataMapperUtil.removeItemFromArray(field, field.parentField.children);\n    }\n  }\n\n  updateFromMappings(mappingDefinition: MappingDefinition): void {\n\n    if (mappingDefinition === null) {\n      return;\n    }\n\n    for (const field of this.allFields) {\n      field.partOfMapping = false;\n      field.hasUnmappedChildren = false;\n      field.partOfTransformation = false;\n    }\n\n    // FIXME: some of this work is happening N times for N source/target docs, should only happen once.\n    for (const mapping of mappingDefinition.getAllMappings(true)) {\n      const mappingIsActive: boolean = (mapping === mappingDefinition.activeMapping);\n\n      for (const field of mapping.getAllFields()) {\n        let parentField = field;\n        const partOfTransformation = mapping.getMappedFieldForField(field).actions.length > 0;\n        while (parentField != null) {\n          parentField.partOfMapping = true;\n          parentField.partOfTransformation = parentField.partOfTransformation || partOfTransformation;\n          parentField = parentField.parentField;\n        }\n      }\n    }\n    for (const field of this.allFields) {\n      field.hasUnmappedChildren = Field.fieldHasUnmappedChild(field);\n    }\n  }\n\n  private populateFieldParentPaths(field: Field, parentPath: string, depth: number): void {\n    if (parentPath == null) {\n      parentPath = this.pathSeparator;\n    }\n    field.path = parentPath + field.getNameWithNamespace();\n    if (field.isCollection) {\n      field.path += field.isArray ? (this.LEFT_BRACKET + this.RIGHT_BRACKET) : '<>';\n    }\n    if (field.isAttribute) {\n      field.path = parentPath += '@' + field.name;\n    }\n    if (field.serviceObject) {\n      field.serviceObject.path = field.path;\n    }\n    field.fieldDepth = depth;\n    const pathSeparator: string = this.pathSeparator;\n    for (const childField of field.children) {\n      childField.parentField = field;\n      this.populateFieldParentPaths(childField, field.path + pathSeparator, depth + 1);\n    }\n  }\n\n  private populateFieldData(field: Field): void {\n    field.docDef = this;\n    this.fieldPaths.push(field.path);\n    this.allFields.push(field);\n    this.fieldsByPath[field.path] = field;\n    if (field.enumeration) {\n      this.enumFieldsByClassIdentifier[field.classIdentifier] = field;\n    }\n    if (field.isTerminal()) {\n      this.terminalFields.push(field);\n    } else {\n      for (const childField of field.children) {\n        this.populateFieldData(childField);\n      }\n    }\n  }\n\n  private prepareComplexFields(): void {\n    const fields: Field[] = this.fields;\n\n    // build complex field cache\n    this.discoverComplexFields(fields);\n\n    for (const key in this.complexFieldsByClassIdentifier) {\n      if (!this.complexFieldsByClassIdentifier.hasOwnProperty(key)) {\n        continue;\n      }\n      const cachedField: Field = this.complexFieldsByClassIdentifier[key];\n      // remove children more than one level deep in cached fields\n      for (const childField of cachedField.children) {\n        childField.children = [];\n      }\n      // alphebatize complex field's childrein\n      Field.alphabetizeFields(cachedField.children);\n    }\n  }\n\n  private discoverComplexFields(fields: Field[]): void {\n    for (const field of fields) {\n      if (field.type !== 'COMPLEX') {\n        continue;\n      }\n      if (field.serviceObject.status === 'SUPPORTED') {\n        this.complexFieldsByClassIdentifier[field.classIdentifier] = field.copy();\n      }\n      if (field.children) {\n        this.discoverComplexFields(field.children);\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PropertyFieldEditComponent.html":{"url":"components/PropertyFieldEditComponent.html","title":"component - PropertyFieldEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PropertyFieldEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                property-field-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./property-field-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                docDef\n                            \n                            \n                                field\n                            \n                            \n                                fieldMode\n                            \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                isClosing\n                            \n                            \n                                modalWindowComponent\n                            \n                            \n                                valueType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getField\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                nameExistsOnCreation\n                            \n                            \n                                valueTypeSelectionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getField\n                        \n                        \n                    \n                \n            \n            \n                \ngetField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Field\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(field: Field, docDef: DocumentDefinition, mwc: ModalWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docDef\n                                    \n                                                DocumentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mwc\n                                    \n                                                ModalWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            nameExistsOnCreation\n                        \n                        \n                    \n                \n            \n            \n                \nnameExistsOnCreation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:77\n                \n            \n\n\n            \n                \n                    Return true and disable the save button if the candidate name already exists on creation, return false\nand enable the save button otherwise.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nvalueTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                    \n                        \n                            Default value : new Field()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('name')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isClosing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalWindowComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { DocumentType, FieldMode } from '../common/config.types';\n\nimport { ConfigModel } from '../models/config.model';\nimport { DocumentDefinition } from '../models/document-definition.model';\nimport { Field } from '../models/field.model';\nimport { ModalWindowComponent, ModalWindowValidator } from './modal-window.component';\n\n@Component({\n  selector: 'property-field-edit',\n  templateUrl: './property-field-edit.component.html',\n})\n\nexport class PropertyFieldEditComponent implements ModalWindowValidator {\n  field: Field = new Field();\n  fieldMode: FieldMode;\n  valueType: any = 'STRING';\n  docDef: DocumentDefinition;\n  modalWindowComponent: ModalWindowComponent;\n  isClosing: boolean;\n  @ViewChild('name') private focusEl: ElementRef;\n\n  initialize(field: Field, docDef: DocumentDefinition, mwc: ModalWindowComponent): void {\n    if (field != null) {\n      this.valueType = field.type;\n      this.fieldMode = FieldMode.EDIT;\n    } else { this.fieldMode = FieldMode.CREATE; }\n\n    this.field = field == null ? new Field() : field.copy();\n    this.docDef = docDef;\n    this.modalWindowComponent = mwc;\n    this.isClosing = false;\n  }\n\n  valueTypeSelectionChanged(event: any): void {\n    this.valueType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  getField(): Field {\n    this.field.displayName = this.field.name;\n    this.field.path = this.field.name;\n    this.field.type = this.valueType;\n    this.field.userCreated = true;\n    this.field.docDef = this.docDef;\n    return this.field;\n  }\n\n  isDataValid(): boolean {\n    return ConfigModel.getConfig().isRequiredFieldValid(this.field.name, 'Name');\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n  /**\n   * Return true and disable the save button if the candidate name already exists on creation, return false\n   * and enable the save button otherwise.\n   */\n  nameExistsOnCreation(): boolean {\n    if (this.isClosing) {\n      return false;\n    }\n    if (this.fieldMode === FieldMode.CREATE && this.docDef != null &&\n        this.docDef.fieldExists(this.getField(), DocumentType.PROPERTY)) {\n      this.modalWindowComponent.confirmButtonDisabled = true;\n      return true;\n    }\n    this.modalWindowComponent.confirmButtonDisabled = false;\n    return false;\n  }\n}\n\n    \n\n    \n        \n  \n    Name:\n    \n    \n      Property name already exists, please select a unique name.\n    \n  \n  \n    Value:\n    \n     0)\" class=\"text-info\">\n      A property value must be specified.\n    \n  \n  \n    Value Type:\n    \n      ANY\n      Big Integer\n      Boolean\n      Byte\n      ByteArray\n      Char\n      Complex\n      Decimal\n      Double\n      Float\n      Integer\n      Long\n      Short\n      String\n      Time\n      Date\n      DateTime\n      DateTZ\n      TimeTZ\n      DateTimeTZ\n      Unsigned Byte\n      Unsigned Integer\n      Unsigned Long\n      Unsigned Short\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Name:              Property name already exists, please select a unique name.            Value:         0)\" class=\"text-info\">      A property value must be specified.            Value Type:          ANY      Big Integer      Boolean      Byte      ByteArray      Char      Complex      Decimal      Double      Float      Integer      Long      Short      String      Time      Date      DateTime      DateTZ      TimeTZ      DateTimeTZ      Unsigned Byte      Unsigned Integer      Unsigned Long      Unsigned Short      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'PropertyFieldEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TemplateEditComponent.html":{"url":"components/TemplateEditComponent.html","title":"component - TemplateEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TemplateEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/template-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                template-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./template-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                templateText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitialFocusElement\n                            \n                            \n                                isDataValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/template-edit.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/template-edit.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('template')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/template-edit.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templateText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/template-edit.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { ModalWindowValidator } from './modal-window.component';\n\n@Component({\n  selector: 'template-edit',\n  templateUrl: './template-edit.component.html',\n})\n\nexport class TemplateEditComponent implements ModalWindowValidator {\n  templateText: string = null;\n  @ViewChild('template') private focusEl: ElementRef;\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'TemplateEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TextNode.html":{"url":"classes/TextNode.html","title":"class - TextNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TextNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ExpressionNode\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                PREFIX\n                            \n                            \n                                    Public\n                                str\n                            \n                            \n                                    Protected\n                                    Static\n                                sequence\n                            \n                            \n                                    Protected\n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toHTML\n                            \n                            \n                                toText\n                            \n                            \n                                getUuid\n                            \n                            \n                                    Abstract\n                                toHTML\n                            \n                            \n                                    Abstract\n                                toText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(str: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        str\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PREFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'expression-text-'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            str\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            sequence\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                            \n                                \n                                    Inherited from         ExpressionNode\n\n                                \n                            \n                        \n                            \n                                    Defined in         ExpressionNode:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            uuid\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         ExpressionNode\n\n                                \n                            \n                        \n                            \n                                    Defined in         ExpressionNode:27\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \ntoHTML()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \ntoText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetUuid()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toHTML()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toText()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { MappedField, MappingModel } from './mapping.model';\nimport { Subject } from 'rxjs';\n\nexport class ExpressionUpdatedEvent {\n  constructor(public node?: ExpressionNode, public offset?: number) {}\n}\n\nexport abstract class ExpressionNode {\n  protected static sequence = 0;\n  protected uuid;\n\n  constructor(prefix: string) {\n    this.uuid = prefix + ExpressionNode.sequence++;\n  }\n\n  getUuid() {\n    return this.uuid;\n  }\n\n  abstract toText(): string;\n  abstract toHTML(): string;\n}\n\nexport class TextNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-text-';\n\n  constructor(public str: string) {\n    super(TextNode.PREFIX);\n  }\n\n  toText(): string {\n    return this.str;\n  }\n\n  toHTML(): string {\n    return `${this.str.replace(/ /g, '&nbsp;')}`;\n  }\n\n}\n\nexport class FieldNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-field-';\n\n  constructor(private mapping: MappingModel, public field?: MappedField, private index?: number) {\n    super(FieldNode.PREFIX);\n    if (!field) {\n      this.field = mapping.getMappedFieldForIndex((index + 1).toString(), true);\n    }\n    if (!index) {\n      this.index = this.mapping.getIndexForMappedField(this.field) - 1;\n    }\n  }\n\n  toText(): string {\n    return '${' + this.index + '}';\n  }\n\n  toHTML(): string {\n    if (this.field) {\n      return `${this.field.field.name}`;\n    } else {\n      return `N/A`;\n    }\n  }\n\n}\n\nexport class ExpressionModel {\n  expressionUpdatedSource = new Subject();\n  expressionUpdated$ = this.expressionUpdatedSource.asObservable();\n\n  private _nodes: ExpressionNode[] = [];\n  private textCache = '';\n  private htmlCache = '';\n\n  constructor(private mapping: MappingModel, private cfg: ConfigModel) {}\n\n  generateInitialExpression() {\n    this.mapping.getUserMappedFields(true).forEach(f => this.appendFieldNode(f));\n  }\n\n  get nodes(): ReadonlyArray {\n    return this._nodes;\n  }\n\n  getLastNodeIndex() {\n    return this._nodes.length - 1;\n  }\n\n  getLastNode() {\n    return this._nodes[this.getLastNodeIndex()];\n  }\n\n  getNode(nodeId?: string): any {\n    if (!nodeId) {\n      return this.getLastNode();\n    }\n    return this._nodes.find(n => n.getUuid() === nodeId);\n  }\n\n  setConfigModel(cfg: ConfigModel) {\n    this.cfg = cfg;\n  }\n\n  /**\n   * Clear all text from the specified TextNode offset range or from the '@' to the end\n   * of the text node if no node ID is specified.\n   *\n   * Return the new UUID position indicator string or null.\n   *\n   * @param nodeId\n   * @param startOffset\n   * @param endOffset\n   */\n  clearText(nodeId?: string, startOffset?: number, endOffset?: number): TextNode {\n    let targetNode: TextNode;\n    let targetNodeIndex = 0;\n    if (!nodeId) {\n      const lastNode = this.getLastNode();\n      if (!(lastNode instanceof TextNode)) {\n        return null;\n      }\n      const keyPos = lastNode.str.indexOf('@');\n      targetNodeIndex = this._nodes.indexOf(lastNode);\n      targetNode = lastNode;\n      targetNode.str = targetNode.str.substring(0, keyPos);\n    } else {\n      const node = this._nodes.find(n => n.getUuid() === nodeId);\n      if (!(node instanceof TextNode) || !endOffset) {\n        return null;\n      }\n      targetNode = node;\n      targetNodeIndex = this._nodes.indexOf(targetNode);\n      const cleanStr = targetNode.str.replace(targetNode.str.substring(startOffset, endOffset), '');\n      targetNode.str = cleanStr;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n    return targetNode;\n  }\n\n  /**\n   * Insert text into expression at specified position. If nodeId is not specified,\n   * it will be added to the end of expression. It parses the string\n   * and insert a set of TextNode & FieldNode if it contains field reference like ${0},\n   * otherwise just one TextNode.\n   * This emits ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   * @param str string to insert\n   * @param nodeId target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertText(str: string, nodeId?: string, offset?: number) {\n    this.insertNodes(this.createNodesFromText(str), nodeId, offset);\n  }\n\n  /**\n   * Insert an array of ExpressionNodes at the specified position. If insertPosition is\n   * not specified the nodes will be appended to the end of the expression.\n   * This emits an ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   *\n   * @param newNodes an array of ExpressionNode to add\n   * @param insertPosition target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertNodes(newNodes: ExpressionNode[], insertPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!insertPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        this._nodes.push(...newNodes);\n      } else if (last instanceof TextNode && newNodes[0] instanceof TextNode) {\n        const lastTextNode = last as TextNode;\n        (last as TextNode).str += (newNodes[0] as TextNode).str;\n        newNodes.splice(0, 1, last);\n        this._nodes.splice(this.getLastNodeIndex(), 1, ...newNodes);\n      } else if (last instanceof FieldNode && newNodes[0] instanceof FieldNode) {\n        this._nodes.splice(this.getLastNodeIndex(), 0, new TextNode(' + '), ...newNodes);\n      } else {\n        this._nodes.push(...newNodes);\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    const updatedEvent = new ExpressionUpdatedEvent();\n    const targetNode = this._nodes.find(n => n.getUuid() === insertPosition);\n    const targetNodeIndex = this._nodes.indexOf(targetNode);\n\n    if (targetNode instanceof TextNode) {\n      if (offset === undefined || offset === null || offset  0) {\n        if (newNodes[0] instanceof TextNode) {\n          targetNode.str = pre + (newNodes[0] as TextNode).str;\n          newNodes.splice(0, 1, targetNode);\n        } else {\n          targetNode.str = pre;\n          newNodes.splice(0, 0, targetNode);\n        }\n      }\n      if (post.length > 0) {\n        const lastNewNodeIndex = newNodes.length - 1;\n        if (newNodes[lastNewNodeIndex] instanceof TextNode) {\n          let mergedTextNode: TextNode;\n          if (pre.length > 0) {\n            mergedTextNode = newNodes[lastNewNodeIndex] as TextNode;\n            mergedTextNode.str += post;\n          } else {\n            mergedTextNode = targetNode;\n            mergedTextNode.str = (newNodes[lastNewNodeIndex]as TextNode).str + post;\n          }\n          newNodes.splice(lastNewNodeIndex, 1, mergedTextNode);\n        } else {\n          if (pre.length > 0) {\n            newNodes.push(new TextNode(post));\n          } else {\n            targetNode.str = post;\n            newNodes.push(targetNode);\n          }\n        }\n      }\n      this._nodes.splice(targetNodeIndex, 1, ...newNodes);\n      const lastAddedIndex = targetNodeIndex + newNodes.length - 1;\n      if (this._nodes[lastAddedIndex] instanceof FieldNode\n          && this.nodes[lastAddedIndex + 1] instanceof FieldNode) {\n        // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n        const space = new TextNode(' + ');\n        this._nodes.splice(lastAddedIndex + 1, 0, space);\n        updatedEvent.node = space;\n        updatedEvent.offset = 1;\n      } else if (this._nodes[lastAddedIndex] instanceof FieldNode) {\n        updatedEvent.node = this._nodes[lastAddedIndex + 1];\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = this._nodes[lastAddedIndex];\n        updatedEvent.offset = (this._nodes[lastAddedIndex] as TextNode).str.length - post.length;\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next(updatedEvent);\n      return;\n    }\n\n    // targetNode is a FieldNode - insert the text before it if offset is 0, otherwise after it\n    if (offset !== 0 && newNodes[0] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      newNodes.splice(0, 0, new TextNode(' + '));\n    }\n    const nextNodeIndex = offset === 0 ? targetNodeIndex : targetNodeIndex + 1;\n    const nextNode = this._nodes[nextNodeIndex];\n    if (nextNode instanceof TextNode && newNodes[newNodes.length - 1] instanceof TextNode) {\n      updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      nextNode.str = (newNodes[newNodes.length - 1] as TextNode).str + (nextNode as TextNode).str;\n      newNodes.pop();\n      this._nodes.splice(nextNodeIndex, 1, ...newNodes);\n      updatedEvent.node = nextNode;\n    } else if (nextNode instanceof FieldNode && newNodes[newNodes.length - 1] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      const space = new TextNode(' + ');\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes, space);\n      updatedEvent.node = space;\n      updatedEvent.offset = 1;\n    } else {\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes);\n      if (nextNode instanceof TextNode) {\n        updatedEvent.node = nextNode;\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = newNodes[newNodes.length - 1];\n        updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  removeToken(lastFieldRefRemoved: (removed: MappedField) => void, tokenPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!tokenPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        return;\n      }\n      if (last instanceof FieldNode) {\n        const removed = this._nodes.pop() as FieldNode;\n        if (!this._nodes.find(n => n instanceof FieldNode && n.field === removed.field)) {\n          lastFieldRefRemoved(removed.field);\n        }\n      } else if (last instanceof TextNode) {\n        if (last.str.length > 0) {\n          last.str = last.str.substring(0, last.str.length - 1);\n        } else {\n          this._nodes.pop();\n        }\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    let updatedEvent = new ExpressionUpdatedEvent();\n    let targetNode = this._nodes.find(n => n.getUuid() === tokenPosition);\n    let targetNodeIndex = this._nodes.indexOf(targetNode);\n    if (!targetNode || offset === -1) {\n      if (targetNodeIndex  n instanceof FieldNode && n.field === removed.field)) {\n        lastFieldRefRemoved(removed.field);\n      }\n      if (this._nodes.length > targetNodeIndex) {\n        if (this._nodes[targetNodeIndex - 1] instanceof TextNode\n            && this._nodes[targetNodeIndex] instanceof TextNode) {\n          const newOffset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n          (this._nodes[targetNodeIndex - 1] as TextNode).str\n              += (this._nodes[targetNodeIndex] as TextNode).str;\n          this._nodes.splice(targetNodeIndex, 1);\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = newOffset;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof FieldNode\n            && this._nodes[targetNodeIndex] instanceof FieldNode) {\n          const glue = new TextNode(' + ');\n          this._nodes.splice(targetNodeIndex, 0, glue);\n          updatedEvent.node = glue;\n          updatedEvent.offset = 3;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n        } else if (this._nodes[targetNodeIndex] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex];\n          updatedEvent.offset = 0;\n        }\n      } else {\n        // end of line\n        updatedEvent = undefined;\n      }\n    } else {\n      const targetString = (targetNode as TextNode).str;\n      (targetNode as TextNode).str = offset === 0 ? targetString.substr(1)\n        : targetString.substring(0, offset) + targetString.substring(offset + 1);\n      if ((targetNode as TextNode).str.length === 0) {\n        this.cfg.errorService.info('At least one space is required between field references.', null);\n        return;\n      }\n      updatedEvent.node = targetNode;\n      updatedEvent.offset = offset;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  /**\n   * Replace the content of the last text node with a substring terminating at the\n   * specified index.\n   *\n   * @param index\n   */\n  clearToEnd(index: number): void {\n    const last = this.getLastNode();\n    if (!(last instanceof TextNode)) {\n      return;\n    }\n    last.str = last.str.substring(0, index);\n  }\n\n  /**\n   * Reflect mapped source fields to the field references in the expression.\n   * Selected source fields are inserted into or appended to the expression,\n   * and unselected source fields are removed from expression.\n   *\n   * @param mapping Corresponding MappingModel object\n   */\n  updateFieldReference(mapping: MappingModel, insertPosition?: string, offset?: number) {\n    const mappedFields = mapping.getUserMappedFields(true);\n    const toAdd: MappedField[] = [];\n    const toRemove: MappedField[] = [];\n    let fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n\n    // Remove the field from the expression if unmapped.\n    for (const node of fieldNodes) {\n      if (mappedFields.includes(node.field)) {\n        continue;\n      }\n      const index = this._nodes.indexOf(node);\n      this._nodes.splice(index, 1);\n      if (this._nodes.length > index && this._nodes[index - 1] instanceof TextNode\n          && this._nodes[index] instanceof TextNode) {\n        (this._nodes[index - 1] as TextNode).str += (this._nodes[index] as TextNode).str;\n        this._nodes.splice(index, 1);\n      }\n    }\n\n    // Add the specified field into the expression - append if no insert position is specified.\n    fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n    for (const mfield of mappedFields) {\n      if (!fieldNodes.find(n => n.field === mfield)) {\n        if (insertPosition) {\n          this.insertNodes([new FieldNode(this.mapping, mfield)], insertPosition, offset);\n        } else {\n          this.appendFieldNode(mfield);\n        }\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  clear() {\n    this._nodes = [];\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  toText() {\n    return this.textCache;\n  }\n\n  toHTML() {\n    return this.htmlCache;\n  }\n\n  private updateCache() {\n    let answer = '';\n    this._nodes.forEach(node => answer += node.toText());\n    this.textCache = answer;\n    answer = '';\n    this._nodes.forEach(node => answer += node.toHTML());\n    this.htmlCache = answer;\n  }\n\n  private createNodesFromText(text: string): ExpressionNode[] {\n    const answer = [];\n    let position = -1;\n    let fn = null;\n\n    while ((position = text.search(/\\$\\{[0-9]+\\}/)) !== -1 ) {\n      if (position !== 0) {\n        answer.push(new TextNode(text.substring(0, position)));\n      }\n      const index = parseInt(text.substring(position + 2, text.indexOf('}')), 10);\n      fn = new FieldNode(this.mapping, null, index);\n      if (fn.field === null) {\n        this.cfg.errorService.error('Unable to map expression index to field node.', index);\n      } else {\n        answer.push(fn);\n      }\n      text = text.substring(text.indexOf('}') + 1);\n    }\n    if (text.length > 0) {\n      answer.push(new TextNode(text));\n    }\n    return answer;\n  }\n\n  private appendFieldNode(mfield: MappedField) {\n    const lastNode = this._nodes.pop();\n    if (lastNode instanceof FieldNode) {\n        this._nodes.push(lastNode, new TextNode(' + '));\n    } else if (lastNode instanceof TextNode) {\n      if (lastNode.str.length === 0) {\n        this._nodes.push(new TextNode(' + '));\n      } else {\n        this._nodes.push(lastNode);\n      }\n    }\n    this._nodes.push(new FieldNode(this.mapping, mfield));\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ToErrorIconClassPipe.html":{"url":"pipes/ToErrorIconClassPipe.html","title":"pipe - ToErrorIconClassPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ToErrorIconClassPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/common/to-error-icon-class.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        toErrorIconClass\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: ErrorInfo[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/to-error-icon-class.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { ErrorInfo, ErrorLevel } from '../models/error.model';\n\n@Pipe({ name: 'toErrorIconClass' })\nexport class ToErrorIconClassPipe implements PipeTransform {\n\n  transform(value: ErrorInfo[]): string {\n    if (value.some(e => e.level >= ErrorLevel.ERROR)) {\n      return 'pficon pficon-error-circle-o';\n    } else if (value.some(e => e.level === ErrorLevel.WARN)) {\n      return 'pficon pficon-warning-triangle-o';\n    } else if (value.some(e => e.level === ErrorLevel.INFO)) {\n      return 'pficon pficon-info';\n    } else {\n      return '';\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                toolbar\n            \n\n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expressionComponent\n                            \n                            \n                                    Private\n                                fileData\n                            \n                            \n                                    Private\n                                mappingsFileName\n                            \n                            \n                                    Private\n                                reader\n                            \n                            \n                                targetSupportsTemplate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                conditionalMappingExpressionEnabled\n                            \n                            \n                                    Private\n                                editTemplate\n                            \n                            \n                                getCSSClass\n                            \n                            \n                                getEditorSettingsCSSClass\n                            \n                            \n                                getFileSuffix\n                            \n                            \n                                handleExportClick\n                            \n                            \n                                handleExportMapping\n                            \n                            \n                                handleExportMappingCancel\n                            \n                            \n                                handleMappingsInstanceName\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                processImportedFile\n                            \n                            \n                                    Async\n                                processMappingsCatalog\n                            \n                            \n                                    Async\n                                readFile\n                            \n                            \n                                    Private\n                                resetAll\n                            \n                            \n                                toolbarButtonClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            conditionalMappingExpressionEnabled\n                        \n                        \n                    \n                \n            \n            \n                \nconditionalMappingExpressionEnabled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:290\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            editTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editTemplate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetCSSClass(action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEditorSettingsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetEditorSettingsCSSClass(open: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    open\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFileSuffix\n                        \n                        \n                    \n                \n            \n            \n                \ngetFileSuffix()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleExportClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleExportClick(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:242\n                \n            \n\n\n            \n                \n                    The user has clicked in the export file text wudget.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleExportMapping\n                        \n                        \n                    \n                \n            \n            \n                \nhandleExportMapping(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:275\n                \n            \n\n\n            \n                \n                    The user has requested their current mappings be exported.  Use the mapping management\nservice to establish the file content and to push it down to the server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleExportMappingCancel\n                        \n                        \n                    \n                \n            \n            \n                \nhandleExportMappingCancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:286\n                \n            \n\n\n            \n                \n                    Cancel button - Export > Current Mapping\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMappingsInstanceName\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMappingsInstanceName(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:257\n                \n            \n\n\n            \n                \n                    The user has specified an AtlasMap mappings catalog file name into which the current live mappings and\nsupport documents will be exported.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processImportedFile\n                        \n                        \n                    \n                \n            \n            \n                \nprocessImportedFile(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:63\n                \n            \n\n\n            \n                \n                    The user has imported a file (mapping catalog or Java archive).  Process accordingly.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            processMappingsCatalog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processMappingsCatalog(selectedFile: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:93\n                \n            \n\n\n            \n                \n                    A user has selected a compressed mappings catalog (ZIP) file to be imported into the canvas.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedFile\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            readFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(fileContent: Blob)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:47\n                \n            \n\n\n            \n                \n                    Perform an asynchronous read of a local file, returning a byte array for the file content.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileContent\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:199\n                \n            \n\n\n            \n                \n                    Establish a modal window popup and if confirmed remove all documents and imported JARs from\nthe server and reinitialize the DM.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toolbarButtonClicked\n                        \n                        \n                    \n                \n            \n            \n                \ntoolbarButtonClicked(action: string, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expressionComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExpressionComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('expressionComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fileData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mappingsFileName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            reader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FileReader\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetSupportsTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, ViewChild } from '@angular/core';\n\nimport { InspectionType } from '../common/config.types';\nimport { ConfigModel } from '../models/config.model';\nimport { ModalWindowComponent } from './modal-window.component';\nimport { TemplateEditComponent } from './template-edit.component';\nimport { ExpressionComponent } from './expression.component';\nimport { TransitionMode } from '../models/transition.model';\n\n@Component({\n  selector: 'toolbar',\n  templateUrl: './toolbar.component.html',\n})\n\nexport class ToolbarComponent implements OnInit {\n  @Input() cfg: ConfigModel;\n  @Input() modalWindow: ModalWindowComponent;\n\n  @ViewChild('expressionComponent') expressionComponent: ExpressionComponent;\n\n  targetSupportsTemplate = false;\n\n  private fileData: any;\n  private mappingsFileName: string;\n  private reader: FileReader;\n\n  /**\n   * Perform an asynchronous read of a local file, returning a byte array for the file content.\n   *\n   * @param fileContent\n   */\n  async readFile(fileContent: Blob): Promise {\n    return new Promise((resolve, reject) => {\n      this.reader.onload = (event: any) => {\n        const arrayBuffer: any = this.reader.result;\n        const bytes = new Uint8Array(arrayBuffer);\n        resolve(bytes);\n      };\n      this.reader.readAsArrayBuffer(fileContent);\n    });\n  }\n\n  /**\n   * The user has imported a file (mapping catalog or Java archive).  Process accordingly.\n   *\n   * @param event\n   */\n  processImportedFile(event) {\n    const userFile = event.target.files[0];\n    const userFileComps = userFile.name.split('.');\n    const userFileSuffix: string = userFileComps[userFileComps.length - 1].toUpperCase();\n\n    if (userFileSuffix === 'ADM') {\n        this.cfg.errorService.resetAll();\n\n        // Clear out current user documents from the runtime service before processing the imported ADM.\n        this.cfg.fileService.resetAll().toPromise().then( async(result: boolean) => {\n          await this.processMappingsCatalog(userFile);\n        }).catch((error: any) => {\n          if (error.status === 0) {\n            this.cfg.errorService.error('Fatal network error: Could not connect to AtlasMap design runtime service.', error);\n          } else {\n            this.cfg.errorService.error('Could not reset document definitions before import.', error);\n          }\n        });\n    } else if (userFileSuffix === 'JAR') {\n      this.cfg.documentService.processDocument(event.target.files[0], InspectionType.JAVA_CLASS, false);\n    }\n\n    event.srcElement.value = null;\n  }\n\n  /**\n   * A user has selected a compressed mappings catalog (ZIP) file to be imported into the canvas.\n   *\n   * @param selectedFile\n   */\n  async processMappingsCatalog(selectedFile: any) {\n    this.cfg.initializationService.updateLoadingStatus('Importing AtlasMap Catalog');\n    await this.cfg.fileService.importADMCatalog(selectedFile);\n  }\n\n  getFileSuffix() {\n    return '.adm,.jar';\n  }\n\n  getCSSClass(action: string) {\n    if (this.cfg.mappings !== null) {\n      if ('showDetails' === action) {\n        return 'fa fa-exchange link' + (this.cfg.mappings.activeMapping ? ' selected' : '');\n      } else if ('editTemplate' === action) {\n          return 'fa fa-file-text-o link' + (this.cfg.mappings.templateExists() ? ' selected' : '');\n      }\n    }\n    if ('showLines' === action) {\n      return 'fa fa-share-alt link' + (this.cfg.showLinesAlways ? ' selected' : '');\n    } else if ('showMappingTable' === action) {\n      return 'fa fa-table link' + (this.cfg.showMappingTable ? ' selected' : '');\n    } else if ('showNamespaceTable' === action) {\n      return 'fa fa-code link' + (this.cfg.showNamespaceTable ? ' selected' : '');\n    } else if ('importMappings' === action) {\n      return 'pficon pficon-import link';\n    } else if ('exportMappings' === action) {\n      return 'pficon pficon-export link';\n    } else if ('enableExpression' === action) {\n      return (this.cfg.mappings && this.cfg.mappings.activeMapping\n          && this.cfg.mappings.activeMapping.transition\n          && this.cfg.mappings.activeMapping.transition.enableExpression ? ' selected' : '');\n    }\n  }\n\n  getEditorSettingsCSSClass(open: boolean) {\n    return 'fa fa-cog link ' + (open ? ' selected' : '');\n  }\n\n  toolbarButtonClicked(action: string, event: any): void {\n    event.preventDefault();\n    if ('showDetails' === action) {\n      if (this.cfg.mappings.activeMapping == null) {\n        this.cfg.mappingService.addNewMapping(null, false);\n      } else {\n        this.cfg.mappingService.deselectMapping();\n      }\n    } else if ('editTemplate' === action) {\n      this.editTemplate();\n    } else if ('showLines' === action) {\n      this.cfg.showLinesAlways = !this.cfg.showLinesAlways;\n    } else if ('showTypes' === action) {\n      this.cfg.showTypes = !this.cfg.showTypes;\n    } else if ('showMappedFields' === action) {\n      this.cfg.showMappedFields = !this.cfg.showMappedFields;\n    } else if ('showUnmappedFields' === action) {\n      this.cfg.showUnmappedFields = !this.cfg.showUnmappedFields;\n    } else if ('addMapping' === action) {\n      this.cfg.mappingService.addNewMapping(null, false);\n    } else if ('showMappingTable' === action) {\n      this.cfg.showMappingTable = !this.cfg.showMappingTable;\n      if (this.cfg.showMappingTable) {\n        this.cfg.showNamespaceTable = false;\n      }\n    } else if ('showNamespaceTable' === action) {\n      this.cfg.showNamespaceTable = !this.cfg.showNamespaceTable;\n      if (this.cfg.showNamespaceTable) {\n        this.cfg.showMappingTable = false;\n      }\n    } else if ('showMappingPreview' === action) {\n      this.cfg.showMappingPreview = !this.cfg.showMappingPreview;\n    } else if ('resetAll' === action) {\n      this.resetAll();\n    } else if ('enableExpression') {\n      if (this.cfg.mappings && this.cfg.mappings.activeMapping && this.cfg.mappings.activeMapping\n          && this.cfg.mappings.activeMapping.transition) {\n        if (this.cfg.mappings.activeMapping.transition.mode === TransitionMode.ONE_TO_MANY) {\n          this.cfg.errorService.warn(\n            `Cannot enable conditional mapping when multiple target fields are selected.\n             Please select only one target field and try again.`, null);\n        } else {\n          this.cfg.mappings.activeMapping.transition.enableExpression\n            = !this.cfg.mappings.activeMapping.transition.enableExpression;\n        }\n      } else {\n        this.cfg.errorService.info('Please select a mapping first.', null);\n      }\n    }\n    // Use the initialization service to trigger the observable updateFromConfig method\n    // in the parent data-mapper-app class.  This avoids materializing the lineMachine object\n    // post-check.\n    this.cfg.initializationService.systemInitializedSource.next();\n  }\n\n  ngOnInit() {\n    this.mappingsFileName = '';\n    this.fileData = null;\n    this.reader = new FileReader();\n    // Disable template until runtime supports it - https://github.com/atlasmap/atlasmap/issues/329\n    // const targetDoc: DocumentDefinition = this.cfg.targetDocs[0];\n    // this.targetSupportsTemplate = targetDoc && (targetDoc.type == DocumentType.XML || targetDoc.type == DocumentType.JSON);\n  }\n\n  /**\n   * Establish a modal window popup and if confirmed remove all documents and imported JARs from\n   * the server and reinitialize the DM.\n   */\n  private resetAll(): void {\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Reset';\n    this.modalWindow.headerText = 'Reset All Mappings and Imports?';\n    this.modalWindow.message = 'Are you sure you want to reset all mappings and clear all imported documents?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      this.cfg.errorService.resetAll();\n      this.cfg.fileService.resetAll().toPromise().then( async(result: boolean) => {\n        await this.cfg.initializationService.initialize();\n      }).catch((error: any) => {\n        if (error.status === 0) {\n          this.cfg.errorService.error('Fatal network error: Could not connect to AtlasMap design runtime service.', error);\n        } else {\n          this.cfg.errorService.error('Could not reset mapping definitions.', error);\n        }\n      });\n    };\n    this.modalWindow.show();\n  }\n\n  private editTemplate(): void {\n    const self: ToolbarComponent = this;\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Save';\n    this.modalWindow.headerText = this.cfg.mappings.templateExists() ? 'Edit Template' : 'Add Template';\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      const templateComponent: TemplateEditComponent = mw.nestedComponent as TemplateEditComponent;\n      templateComponent.templateText = this.cfg.mappings.templateText;\n    };\n    this.modalWindow.nestedComponentType = TemplateEditComponent;\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      const templateComponent: TemplateEditComponent = mw.nestedComponent as TemplateEditComponent;\n      this.cfg.mappings.templateText = templateComponent.templateText;\n      self.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  /**\n   * The user has clicked in the export file text wudget.\n   *\n   * @param event\n   */\n  handleExportClick(event) {\n    if (event.preventDefault) {\n        event.preventDefault();\n    }\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * The user has specified an AtlasMap mappings catalog file name into which the current live mappings and\n   * support documents will be exported.\n   *\n   * @param event\n   */\n  handleMappingsInstanceName(event) {\n      let filename = event.target.value;\n      if (filename !== null && filename.length > 0) {\n\n        // Tack on a .adm suffix if one wasn't already specified.\n        if (filename.split('.').pop() !== 'adm') {\n          filename = filename.concat('.adm');\n        }\n        this.mappingsFileName = filename;\n      }\n    }\n\n  /**\n   * The user has requested their current mappings be exported.  Use the mapping management\n   * service to establish the file content and to push it down to the server.\n   *\n   * @param event\n   */\n  handleExportMapping(event) {\n    let fileName = this.mappingsFileName;\n    if (this.mappingsFileName.length === 0) {\n        fileName = 'atlasmap-mapping.adm';\n    }\n    this.cfg.fileService.exportMappingsCatalog(fileName);\n  }\n\n  /**\n   * Cancel button - Export > Current Mapping\n   */\n  handleExportMappingCancel(): void {\n    this.mappingsFileName = '';\n  }\n\n  conditionalMappingExpressionEnabled(): boolean {\n    return (this.cfg.mappings && this.cfg.mappings.activeMapping &&\n      this.cfg.mappings.activeMapping.transition &&\n      this.cfg.mappings.activeMapping.transition.enableExpression);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n\n    f(x)\n    \n\n    \n      \n    \n\n    |\n\n    \n      \n        \n      \n    \n\n    \n      \n      \n        \n          \n            Export mappings\n              \n                OK\n                Cancel\n            \n          \n        \n      \n    \n\n    |\n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n      \n\n      \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Types\n            \n          \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Lines\n            \n          \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Mapped Fields\n            \n          \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Unmapped Fields\n            \n          \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Mapping Preview\n            \n          \n          \n        \n        \n        \n          \n            \n              \n                Reset All\n              \n            \n          \n\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      f(x)                      |                                                                          Export mappings                              OK                Cancel                                            |                                                                                                                                                            Show Types                                                                                                                                                                Show Lines                                                                                                                                                                Show Mapped Fields                                                                                                                                                                Show Unmapped Fields                                                                                                                                                                Show Mapping Preview                                                                                                            Reset All                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransitionDelimiterModel.html":{"url":"classes/TransitionDelimiterModel.html","title":"class - TransitionDelimiterModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransitionDelimiterModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualDelimiter\n                            \n                            \n                                delimiter\n                            \n                            \n                                prettyName\n                            \n                            \n                                serializedValue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(delimiter: TransitionDelimiter, serializedValue: string, prettyName: string, actualDelimiter)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        delimiter\n                                                  \n                                                        \n                                                                        TransitionDelimiter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serializedValue\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prettyName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actualDelimiter\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actualDelimiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delimiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionDelimiter\n\n                        \n                    \n                    \n                        \n                            Default value : TransitionDelimiter.SPACE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prettyName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serializedValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ExpressionModel } from './expression.model';\nimport { FieldAction } from './field-action.model';\n\nexport enum TransitionMode { ONE_TO_ONE, ONE_TO_MANY, ENUM, MANY_TO_ONE, FOR_EACH }\nexport enum TransitionDelimiter {\n  NONE, AMPERSAND, AT_SIGN, BACKSLASH, COLON, COMMA, DASH, EQUAL, HASH,\n  MULTI_SPACE, PERIOD, PIPE, SEMICOLON, SLASH, SPACE, UNDERSCORE, USER_DEFINED\n}\n\nexport class TransitionDelimiterModel {\n  delimiter: TransitionDelimiter = TransitionDelimiter.SPACE;\n  serializedValue: string = null;\n  prettyName: string = null;\n  actualDelimiter = '';\n\n  constructor(\n    delimiter: TransitionDelimiter, serializedValue: string, prettyName: string, actualDelimiter) {\n    this.delimiter = delimiter;\n    this.serializedValue = serializedValue;\n    this.prettyName = prettyName;\n    this.actualDelimiter = actualDelimiter;\n  }\n}\n\nexport class TransitionModel {\n  static delimiterModels: TransitionDelimiterModel[] = [];\n\n  mode: TransitionMode = TransitionMode.ONE_TO_ONE;\n  delimiter: TransitionDelimiter = TransitionDelimiter.SPACE;\n  userDelimiter = '';\n  lookupTableName: string = null;\n  expression: ExpressionModel;\n  enableExpression = false;\n  // TODO Support multiplicity transformations other than Concatenate and Split\n  // https://github.com/atlasmap/atlasmap/issues/912\n  transitionFieldAction: FieldAction;\n\n  constructor() {\n    TransitionModel.initialize();\n  }\n\n  static initialize() {\n    if (TransitionModel.delimiterModels.length === 0) {\n      const models: TransitionDelimiterModel[] = [];\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.NONE, null, '[None]', ''));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.AMPERSAND, 'Ampersand', 'Ampersand [&]', '\\&'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.AT_SIGN, 'AtSign', 'At Sign [@]', '\\@'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.BACKSLASH, 'Backslash', 'Backslash [\\\\]', '\\\\'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.COLON, 'Colon', 'Colon [:]', '\\:'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.COMMA, 'Comma', 'Comma [,]', '\\,'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.DASH, 'Dash', 'Dash [-]', '\\-'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.EQUAL, 'Equal', 'Equal [=]', '\\='));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.HASH, 'Hash', 'Hash [#]', '\\#'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.MULTI_SPACE, 'MultiSpace', 'Multi Spaces', '  '));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.PERIOD, 'Period', 'Period [.]', '\\.'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.PIPE, 'Pipe', 'Pipe [|]', '\\|'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SEMICOLON, 'Semicolon', 'Semicolon [;]', '\\;'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SLASH, 'Slash', 'Slash [/]', '\\/'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SPACE, 'Space', 'Space [ ]', ' '));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.UNDERSCORE, 'Underscore', 'Underscore [_]', '\\_'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.USER_DEFINED, 'User defined', 'User defined', ''));\n      TransitionModel.delimiterModels = models;\n    }\n  }\n\n  /**\n   * Translate a mapping mode number into a string.\n   * @param mode\n   */\n  static getMappingModeName(mode: TransitionMode): string {\n    let actionName: string;\n\n    switch (mode) {\n      case TransitionMode.ONE_TO_ONE: {\n        actionName = 'One to One';\n        break;\n      }\n      case TransitionMode.MANY_TO_ONE: {\n        actionName = 'Many to One';\n        break;\n      }\n      case TransitionMode.ONE_TO_MANY: {\n        actionName = 'One to Many';\n        break;\n      }\n      case TransitionMode.ENUM: {\n        actionName = 'ENUM';\n        break;\n      }\n      case TransitionMode.FOR_EACH: {\n        actionName = 'For Each';\n        break;\n      }\n      default: {\n         actionName = '';\n         break;\n      }\n    }\n    return actionName;\n  }\n\n  static getTransitionDelimiterPrettyName(delimiter: TransitionDelimiter): string {\n    for (const m of TransitionModel.delimiterModels) {\n      if (m.delimiter === delimiter) {\n        return m.prettyName;\n      }\n    }\n    return null;\n  }\n\n  static getTransitionDelimiterFromActual(actualDelimiter: string): TransitionDelimiter {\n    for (const m of TransitionModel.delimiterModels) {\n      if (m.actualDelimiter === actualDelimiter) {\n        return m.delimiter;\n      }\n    }\n    return TransitionDelimiter.USER_DEFINED;\n  }\n\n  getSerializedDelimeter(): string {\n    if (this.delimiter === TransitionDelimiter.USER_DEFINED) {\n      return this.userDelimiter;\n    }\n    for (const m of TransitionModel.delimiterModels) {\n      if (m.delimiter === this.delimiter) {\n        return m.serializedValue;\n      }\n    }\n    return null;\n  }\n\n  getActualDelimiter(): string {\n    if (this.delimiter === TransitionDelimiter.USER_DEFINED) {\n      return this.userDelimiter;\n    }\n    for (const m of TransitionModel.delimiterModels) {\n      if (m.delimiter === this.delimiter) {\n        return m.actualDelimiter;\n      }\n    }\n    return null;\n  }\n\n  setSerializedDelimeterFromSerializedValue(value: string): void {\n    for (const m of TransitionModel.delimiterModels) {\n      if (m.serializedValue === value) {\n        this.delimiter = m.delimiter;\n      }\n    }\n  }\n\n  getPrettyName() {\n    const delimiterDesc: string = TransitionModel.getTransitionDelimiterPrettyName(this.delimiter);\n    if (this.mode === TransitionMode.ONE_TO_MANY) {\n      return TransitionModel.getMappingModeName(this.mode) + ' (' + delimiterDesc + ')';\n    } else if (this.mode === TransitionMode.MANY_TO_ONE) {\n      return TransitionModel.getMappingModeName(this.mode) + ' (' + delimiterDesc + ')';\n    } else if (this.mode === TransitionMode.ENUM) {\n      return 'Enum (table: ' + this.lookupTableName + ')';\n    }\n    return TransitionModel.getMappingModeName(this.mode);\n  }\n\n  isOneToManyMode(): boolean {\n    return this.mode === TransitionMode.ONE_TO_MANY;\n  }\n\n  isOneToOneMode(): boolean {\n    return this.mode === TransitionMode.ONE_TO_ONE;\n  }\n\n  isManyToOneMode(): boolean {\n    return this.mode === TransitionMode.MANY_TO_ONE;\n  }\n\n  isForEachMode(): boolean {\n    return this.mode === TransitionMode.FOR_EACH;\n  }\n\n  isEnumerationMode(): boolean {\n    return this.mode === TransitionMode.ENUM;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransitionModel.html":{"url":"classes/TransitionModel.html","title":"class - TransitionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransitionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delimiter\n                            \n                            \n                                    Static\n                                delimiterModels\n                            \n                            \n                                enableExpression\n                            \n                            \n                                expression\n                            \n                            \n                                lookupTableName\n                            \n                            \n                                mode\n                            \n                            \n                                transitionFieldAction\n                            \n                            \n                                userDelimiter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActualDelimiter\n                            \n                            \n                                    Static\n                                getMappingModeName\n                            \n                            \n                                getPrettyName\n                            \n                            \n                                getSerializedDelimeter\n                            \n                            \n                                    Static\n                                getTransitionDelimiterFromActual\n                            \n                            \n                                    Static\n                                getTransitionDelimiterPrettyName\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                isEnumerationMode\n                            \n                            \n                                isForEachMode\n                            \n                            \n                                isManyToOneMode\n                            \n                            \n                                isOneToManyMode\n                            \n                            \n                                isOneToOneMode\n                            \n                            \n                                setSerializedDelimeterFromSerializedValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:51\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delimiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionDelimiter\n\n                        \n                    \n                    \n                        \n                            Default value : TransitionDelimiter.SPACE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            delimiterModels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionDelimiterModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableExpression\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expression\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExpressionModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lookupTableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionMode\n\n                        \n                    \n                    \n                        \n                            Default value : TransitionMode.ONE_TO_ONE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transitionFieldAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldAction\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userDelimiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:45\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActualDelimiter\n                        \n                        \n                    \n                \n            \n            \n                \ngetActualDelimiter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getMappingModeName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMappingModeName(mode: TransitionMode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:85\n                \n            \n\n\n            \n                \n                    Translate a mapping mode number into a string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mode\n                                    \n                                                TransitionMode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPrettyName\n                        \n                        \n                    \n                \n            \n            \n                \ngetPrettyName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSerializedDelimeter\n                        \n                        \n                    \n                \n            \n            \n                \ngetSerializedDelimeter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getTransitionDelimiterFromActual\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTransitionDelimiterFromActual(actualDelimiter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actualDelimiter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TransitionDelimiter\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getTransitionDelimiterPrettyName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTransitionDelimiterPrettyName(delimiter: TransitionDelimiter)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    delimiter\n                                    \n                                                TransitionDelimiter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnumerationMode\n                        \n                        \n                    \n                \n            \n            \n                \nisEnumerationMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isForEachMode\n                        \n                        \n                    \n                \n            \n            \n                \nisForEachMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isManyToOneMode\n                        \n                        \n                    \n                \n            \n            \n                \nisManyToOneMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isOneToManyMode\n                        \n                        \n                    \n                \n            \n            \n                \nisOneToManyMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isOneToOneMode\n                        \n                        \n                    \n                \n            \n            \n                \nisOneToOneMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSerializedDelimeterFromSerializedValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetSerializedDelimeterFromSerializedValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExpressionModel } from './expression.model';\nimport { FieldAction } from './field-action.model';\n\nexport enum TransitionMode { ONE_TO_ONE, ONE_TO_MANY, ENUM, MANY_TO_ONE, FOR_EACH }\nexport enum TransitionDelimiter {\n  NONE, AMPERSAND, AT_SIGN, BACKSLASH, COLON, COMMA, DASH, EQUAL, HASH,\n  MULTI_SPACE, PERIOD, PIPE, SEMICOLON, SLASH, SPACE, UNDERSCORE, USER_DEFINED\n}\n\nexport class TransitionDelimiterModel {\n  delimiter: TransitionDelimiter = TransitionDelimiter.SPACE;\n  serializedValue: string = null;\n  prettyName: string = null;\n  actualDelimiter = '';\n\n  constructor(\n    delimiter: TransitionDelimiter, serializedValue: string, prettyName: string, actualDelimiter) {\n    this.delimiter = delimiter;\n    this.serializedValue = serializedValue;\n    this.prettyName = prettyName;\n    this.actualDelimiter = actualDelimiter;\n  }\n}\n\nexport class TransitionModel {\n  static delimiterModels: TransitionDelimiterModel[] = [];\n\n  mode: TransitionMode = TransitionMode.ONE_TO_ONE;\n  delimiter: TransitionDelimiter = TransitionDelimiter.SPACE;\n  userDelimiter = '';\n  lookupTableName: string = null;\n  expression: ExpressionModel;\n  enableExpression = false;\n  // TODO Support multiplicity transformations other than Concatenate and Split\n  // https://github.com/atlasmap/atlasmap/issues/912\n  transitionFieldAction: FieldAction;\n\n  constructor() {\n    TransitionModel.initialize();\n  }\n\n  static initialize() {\n    if (TransitionModel.delimiterModels.length === 0) {\n      const models: TransitionDelimiterModel[] = [];\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.NONE, null, '[None]', ''));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.AMPERSAND, 'Ampersand', 'Ampersand [&]', '\\&'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.AT_SIGN, 'AtSign', 'At Sign [@]', '\\@'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.BACKSLASH, 'Backslash', 'Backslash [\\\\]', '\\\\'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.COLON, 'Colon', 'Colon [:]', '\\:'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.COMMA, 'Comma', 'Comma [,]', '\\,'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.DASH, 'Dash', 'Dash [-]', '\\-'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.EQUAL, 'Equal', 'Equal [=]', '\\='));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.HASH, 'Hash', 'Hash [#]', '\\#'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.MULTI_SPACE, 'MultiSpace', 'Multi Spaces', '  '));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.PERIOD, 'Period', 'Period [.]', '\\.'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.PIPE, 'Pipe', 'Pipe [|]', '\\|'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SEMICOLON, 'Semicolon', 'Semicolon [;]', '\\;'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SLASH, 'Slash', 'Slash [/]', '\\/'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SPACE, 'Space', 'Space [ ]', ' '));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.UNDERSCORE, 'Underscore', 'Underscore [_]', '\\_'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.USER_DEFINED, 'User defined', 'User defined', ''));\n      TransitionModel.delimiterModels = models;\n    }\n  }\n\n  /**\n   * Translate a mapping mode number into a string.\n   * @param mode\n   */\n  static getMappingModeName(mode: TransitionMode): string {\n    let actionName: string;\n\n    switch (mode) {\n      case TransitionMode.ONE_TO_ONE: {\n        actionName = 'One to One';\n        break;\n      }\n      case TransitionMode.MANY_TO_ONE: {\n        actionName = 'Many to One';\n        break;\n      }\n      case TransitionMode.ONE_TO_MANY: {\n        actionName = 'One to Many';\n        break;\n      }\n      case TransitionMode.ENUM: {\n        actionName = 'ENUM';\n        break;\n      }\n      case TransitionMode.FOR_EACH: {\n        actionName = 'For Each';\n        break;\n      }\n      default: {\n         actionName = '';\n         break;\n      }\n    }\n    return actionName;\n  }\n\n  static getTransitionDelimiterPrettyName(delimiter: TransitionDelimiter): string {\n    for (const m of TransitionModel.delimiterModels) {\n      if (m.delimiter === delimiter) {\n        return m.prettyName;\n      }\n    }\n    return null;\n  }\n\n  static getTransitionDelimiterFromActual(actualDelimiter: string): TransitionDelimiter {\n    for (const m of TransitionModel.delimiterModels) {\n      if (m.actualDelimiter === actualDelimiter) {\n        return m.delimiter;\n      }\n    }\n    return TransitionDelimiter.USER_DEFINED;\n  }\n\n  getSerializedDelimeter(): string {\n    if (this.delimiter === TransitionDelimiter.USER_DEFINED) {\n      return this.userDelimiter;\n    }\n    for (const m of TransitionModel.delimiterModels) {\n      if (m.delimiter === this.delimiter) {\n        return m.serializedValue;\n      }\n    }\n    return null;\n  }\n\n  getActualDelimiter(): string {\n    if (this.delimiter === TransitionDelimiter.USER_DEFINED) {\n      return this.userDelimiter;\n    }\n    for (const m of TransitionModel.delimiterModels) {\n      if (m.delimiter === this.delimiter) {\n        return m.actualDelimiter;\n      }\n    }\n    return null;\n  }\n\n  setSerializedDelimeterFromSerializedValue(value: string): void {\n    for (const m of TransitionModel.delimiterModels) {\n      if (m.serializedValue === value) {\n        this.delimiter = m.delimiter;\n      }\n    }\n  }\n\n  getPrettyName() {\n    const delimiterDesc: string = TransitionModel.getTransitionDelimiterPrettyName(this.delimiter);\n    if (this.mode === TransitionMode.ONE_TO_MANY) {\n      return TransitionModel.getMappingModeName(this.mode) + ' (' + delimiterDesc + ')';\n    } else if (this.mode === TransitionMode.MANY_TO_ONE) {\n      return TransitionModel.getMappingModeName(this.mode) + ' (' + delimiterDesc + ')';\n    } else if (this.mode === TransitionMode.ENUM) {\n      return 'Enum (table: ' + this.lookupTableName + ')';\n    }\n    return TransitionModel.getMappingModeName(this.mode);\n  }\n\n  isOneToManyMode(): boolean {\n    return this.mode === TransitionMode.ONE_TO_MANY;\n  }\n\n  isOneToOneMode(): boolean {\n    return this.mode === TransitionMode.ONE_TO_ONE;\n  }\n\n  isManyToOneMode(): boolean {\n    return this.mode === TransitionMode.MANY_TO_ONE;\n  }\n\n  isForEachMode(): boolean {\n    return this.mode === TransitionMode.FOR_EACH;\n  }\n\n  isEnumerationMode(): boolean {\n    return this.mode === TransitionMode.ENUM;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransitionSelectionComponent.html":{"url":"components/TransitionSelectionComponent.html","title":"component - TransitionSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TransitionSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                transition-selection\n            \n\n\n\n\n            \n                templateUrl\n                ./transition-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delimiters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isUserDelimiter\n                            \n                            \n                                modeIsEnum\n                            \n                            \n                                modeIsSupported\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showLookupTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                mapping\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:35\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserDelimiter\n                        \n                        \n                    \n                \n            \n            \n                \nisUserDelimiter(delimiterModel: TransitionDelimiterModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    delimiterModel\n                                    \n                                                TransitionDelimiterModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            modeIsEnum\n                        \n                        \n                    \n                \n            \n            \n                \nmodeIsEnum()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            modeIsSupported\n                        \n                        \n                    \n                \n            \n            \n                \nmodeIsSupported(delimiterModel: TransitionDelimiterModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    delimiterModel\n                                    \n                                                TransitionDelimiterModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showLookupTable\n                        \n                        \n                    \n                \n            \n            \n                \nshowLookupTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delimiters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionDelimiterModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { TransitionDelimiter, TransitionModel, TransitionDelimiterModel } from '../../models/transition.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { MappingModel } from '../../models/mapping.model';\nimport { ModalWindowComponent } from '../modal-window.component';\nimport { LookupTableComponent } from './lookup-table.component';\n\n@Component({\n  selector: 'transition-selection',\n  templateUrl: './transition-selection.component.html'\n})\n\nexport class TransitionSelectionComponent implements OnInit {\n  @Input() cfg: ConfigModel;\n  @Input() modalWindow: ModalWindowComponent;\n  @Input() mapping: MappingModel;\n\n  delimiters: TransitionDelimiterModel[];\n\n  constructor() {\n    TransitionModel.initialize();\n    this.delimiters = TransitionModel.delimiterModels;\n  }\n\n  ngOnInit(): void {\n    const that = this;\n\n    // $(document).ready( function() {\n    jQuery(function() {\n      // Invoke the combobox so it supersedes the stock select.\n      // $('select#separator').combobox({clearIfNoMatch: false});\n\n      $('select#separator').on('change', function() {\n\n        // Check the combobox select.\n        const optionSelected = $(this).find('option:selected');\n        const selectedValue: any = optionSelected.val();\n\n        if (selectedValue) {\n          that.mapping.transition.delimiter = parseInt(selectedValue, 10);\n          that.cfg.mappingService.notifyMappingUpdated();\n          return;\n        }\n        const inputValue: any = $(this).val();\n\n        if (inputValue) {\n          that.mapping.transition.delimiter = TransitionDelimiter.USER_DEFINED;\n          that.mapping.transition.userDelimiter = inputValue;\n          that.cfg.mappingService.notifyMappingUpdated();\n          return;\n        }\n      });\n\n      // Replace the user input when focus is lost.\n      $('.combobox').on('blur', function() {\n\n        if (that.mapping.transition.delimiter === TransitionDelimiter.USER_DEFINED) {\n          $(this).find('option:selected').val(that.mapping.transition.userDelimiter);\n          $(this).val(that.mapping.transition.userDelimiter).trigger('input');\n        }\n      });\n\n      // Check the combobox input text field.\n      /* NOTE: re-enable this function for non-standard delimiters with combobox\n      $('.combobox').on('input', function() {\n\n        const inputValue: any = $(this).val();\n\n        if (inputValue) {\n          if (inputValue.length > 1) {\n            that.cfg.errorService.error('The separator delimiter must be one character in length.', null);\n            return;\n          }\n          that.fieldPair.transition.delimiter = TransitionDelimiter.USER_DEFINED;\n          that.fieldPair.transition.userDelimiter = inputValue;\n          that.cfg.mappingService.updateMappedField(that.fieldPair, false, false);\n        }\n      });\n      */\n    });\n\n  }\n\n  modeIsEnum(): boolean {\n    return this.mapping.transition.isEnumerationMode();\n  }\n\n  showLookupTable(): void {\n    const mapping: MappingModel = this.cfg.mappings.activeMapping;\n    this.cfg.errorService.clearMappingErrors();\n\n    if (!mapping.isFullyMapped()) {\n      this.cfg.errorService.mappingError('Please select source and target fields before mapping values.', null);\n      return;\n    }\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Finish';\n    this.modalWindow.headerText = 'Map Enumeration Values';\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      const c: LookupTableComponent = mw.nestedComponent as LookupTableComponent;\n      c.initialize(this.cfg, this.mapping);\n    };\n    this.modalWindow.nestedComponentType = LookupTableComponent;\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      const c: LookupTableComponent = mw.nestedComponent as LookupTableComponent;\n      c.saveTable();\n      this.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  modeIsSupported(delimiterModel: TransitionDelimiterModel): boolean {\n    if (delimiterModel.delimiter === TransitionDelimiter.NONE) {\n      return false;\n    } else if (delimiterModel.delimiter === TransitionDelimiter.MULTI_SPACE) {\n      return this.mapping.transition.isOneToManyMode();\n    }\n    return true;\n  }\n\n  isUserDelimiter(delimiterModel: TransitionDelimiterModel) {\n    return (delimiterModel.delimiter === TransitionDelimiter.USER_DEFINED);\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ getMappedValueCount() }} values mapped\n    \n  \n\n  \n    Separator:\n      \n        \n          \n            {{ mapping.transition.userDelimiter }}\n            {{ delimiter.prettyName }}\n          \n        \n      \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ getMappedValueCount() }} values mapped            Separator:                                    {{ mapping.transition.userDelimiter }}            {{ delimiter.prettyName }}                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'TransitionSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/atlasmap-navbar.component.ts\n            \n            component\n            AtlasmapNavbarComponent\n            \n                41 %\n                (14/34)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts\n            \n            class\n            DataMapperUtil\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/common/focus.directive.ts\n            \n            directive\n            FocusDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/common/to-error-icon-class.pipe.ts\n            \n            pipe\n            ToErrorIconClassPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/class-name.component.ts\n            \n            component\n            ClassNameComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/collapsable-header.component.ts\n            \n            component\n            CollapsableHeaderComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/constant-field-edit.component.ts\n            \n            component\n            ConstantFieldEditComponent\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/data-mapper-app.component.ts\n            \n            component\n            DataMapperAppComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/data-mapper-error.component.ts\n            \n            component\n            DataMapperErrorComponent\n            \n                30 %\n                (6/20)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts\n            \n            component\n            DataMapperAppExampleHostComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/document-definition.component.ts\n            \n            component\n            DocumentDefinitionComponent\n            \n                14 %\n                (7/48)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/document-field-detail.component.ts\n            \n            component\n            DocumentFieldDetailComponent\n            \n                3 %\n                (1/27)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/expression.component.ts\n            \n            component\n            ExpressionComponent\n            \n                12 %\n                (5/40)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/field-edit.component.ts\n            \n            component\n            FieldEditComponent\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/line-machine.component.ts\n            \n            component\n            LineMachineComponent\n            \n                6 %\n                (2/31)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/line-machine.component.ts\n            \n            class\n            LineModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts\n            \n            component\n            LookupTableComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/lookup-table.component.ts\n            \n            class\n            LookupTableData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/mapping-detail.component.ts\n            \n            component\n            MappingDetailComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action-argument.component.ts\n            \n            component\n            MappingFieldActionArgumentComponent\n            \n                43 %\n                (7/16)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-action.component.ts\n            \n            component\n            MappingFieldActionComponent\n            \n                23 %\n                (3/13)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-container.component.ts\n            \n            component\n            MappingFieldContainerComponent\n            \n                3 %\n                (1/29)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/mapping-field-detail.component.ts\n            \n            component\n            MappingFieldDetailComponent\n            \n                11 %\n                (2/18)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list-field.component.ts\n            \n            component\n            MappingListFieldComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/mapping-list.component.ts\n            \n            component\n            MappingListComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection-section.component.ts\n            \n            component\n            MappingSelectionSectionComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/mapping-selection.component.ts\n            \n            component\n            MappingSelectionComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping/transition-selection.component.ts\n            \n            component\n            TransitionSelectionComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts\n            \n            component\n            ModalErrorWindowComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal-error-window.component.ts\n            \n            interface\n            ModalErrorWindowValidator\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts\n            \n            component\n            EmptyModalBodyComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts\n            \n            component\n            ModalWindowComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal-window.component.ts\n            \n            interface\n            ModalWindowValidator\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/namespace-edit.component.ts\n            \n            component\n            NamespaceEditComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/namespace-list.component.ts\n            \n            component\n            NamespaceListComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/property-field-edit.component.ts\n            \n            component\n            PropertyFieldEditComponent\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/template-edit.component.ts\n            \n            component\n            TemplateEditComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                34 %\n                (8/23)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            alertModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            bsDropdownModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            httpClientXsrfModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            loggerModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            tooltipModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            typeaheadModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/config.model.ts\n            \n            class\n            AdmRedrawMappingLinesEvent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/config.model.ts\n            \n            class\n            ConfigModel\n            \n                4 %\n                (2/49)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/config.model.ts\n            \n            class\n            DataMapperInitializationModel\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/config.model.ts\n            \n            class\n            DocumentInitializationModel\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts\n            \n            class\n            DocumentDefinition\n            \n                7 %\n                (4/54)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts\n            \n            class\n            NamespaceModel\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts\n            \n            class\n            PaddingField\n            \n                0 %\n                (0/48)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/error.model.ts\n            \n            class\n            ErrorInfo\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/examples.ts\n            \n            class\n            Examples\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            ExpressionModel\n            \n                20 %\n                (5/24)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            ExpressionNode\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            ExpressionUpdatedEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            FieldNode\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            TextNode\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n            \n            class\n            FieldAction\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n            \n            class\n            FieldActionArgument\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n            \n            class\n            FieldActionArgumentValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n            \n            class\n            FieldActionDefinition\n            \n                35 %\n                (6/17)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field.model.ts\n            \n            class\n            EnumValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field.model.ts\n            \n            class\n            Field\n            \n                0 %\n                (0/47)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts\n            \n            class\n            LookupTable\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts\n            \n            class\n            LookupTableEntry\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts\n            \n            class\n            MappingDefinition\n            \n                6 %\n                (2/30)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n            \n            class\n            MappedField\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n            \n            class\n            MappedFieldParsingData\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n            \n            class\n            MappingModel\n            \n                11 %\n                (5/43)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n            \n            class\n            TransitionDelimiterModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n            \n            class\n            TransitionModel\n            \n                4 %\n                (1/23)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts\n            \n            injectable\n            ApiHttpXsrfTokenExtractor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts\n            \n            interceptor\n            ApiXsrfInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/document-management.service.ts\n            \n            injectable\n            DocumentManagementService\n            \n                23 %\n                (7/30)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts\n            \n            injectable\n            ErrorHandlerService\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/field-action.service.ts\n            \n            injectable\n            FieldActionService\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/file-management.service.ts\n            \n            injectable\n            FileManagementService\n            \n                52 %\n                (9/17)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/initialization.service.ts\n            \n            injectable\n            InitializationService\n            \n                23 %\n                (5/21)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/mapping-management.service.ts\n            \n            injectable\n            MappingManagementService\n            \n                28 %\n                (10/35)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/mapping-serializer.service.ts\n            \n            class\n            MappingSerializer\n            \n                8 %\n                (2/23)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.trace.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            bootstrap : ^4.1.2\n        \n            chart.js : ^2.5.0\n        \n            classlist.js : ^1.1.20150312\n        \n            core-js : ^2.5.5\n        \n            font-awesome : ^4.7.0\n        \n            jquery : ^3.3.0\n        \n            jquery-match-height : ^0.7.2\n        \n            mkdirp : ^0.5.1\n        \n            moment : ^2.20.1\n        \n            ncp : ^2.0.0\n        \n            ngx-bootstrap : ^3.0.1\n        \n            opn-cli : ^3.1.0\n        \n            patternfly-bootstrap-combobox : ^1.1.6\n        \n            patternfly-ng : ^4.0.0\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ^0.8.26\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CollectionType   (src/.../config.types.ts)\n                        \n                        \n                            DocumentType   (src/.../config.types.ts)\n                        \n                        \n                            ErrorLevel   (src/.../error.model.ts)\n                        \n                        \n                            FieldMode   (src/.../config.types.ts)\n                        \n                        \n                            InspectionType   (src/.../config.types.ts)\n                        \n                        \n                            Multiplicity   (src/.../field-action.model.ts)\n                        \n                        \n                            TransitionDelimiter   (src/.../transition.model.ts)\n                        \n                        \n                            TransitionMode   (src/.../transition.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/lib/atlasmap-data-mapper/common/config.types.ts\n    \n        \n            \n                \n                    \n                        \n                        CollectionType\n                    \n                \n                        \n                            \n                                 ARRAY\n                            \n                        \n                        \n                            \n                                Value : ARRAY\n                            \n                        \n                        \n                            \n                                 LIST\n                            \n                        \n                        \n                            \n                                Value : LIST\n                            \n                        \n                        \n                            \n                                 MAP\n                            \n                        \n                        \n                            \n                                Value : MAP\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : NONE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DocumentType\n                    \n                \n                        \n                            \n                                 JAVA\n                            \n                        \n                        \n                            \n                                Value : JAVA\n                            \n                        \n                        \n                            \n                                 JAVA_ARCHIVE\n                            \n                        \n                        \n                            \n                                Value : JAR\n                            \n                        \n                        \n                            \n                                 XML\n                            \n                        \n                        \n                            \n                                Value : XML\n                            \n                        \n                        \n                            \n                                 XSD\n                            \n                        \n                        \n                            \n                                Value : XSD\n                            \n                        \n                        \n                            \n                                 JSON\n                            \n                        \n                        \n                            \n                                Value : JSON\n                            \n                        \n                        \n                            \n                                 CORE\n                            \n                        \n                        \n                            \n                                Value : Core\n                            \n                        \n                        \n                            \n                                 CSV\n                            \n                        \n                        \n                            \n                                Value : CSV\n                            \n                        \n                        \n                            \n                                 CONSTANT\n                            \n                        \n                        \n                            \n                                Value : Constants\n                            \n                        \n                        \n                            \n                                 PROPERTY\n                            \n                        \n                        \n                            \n                                Value : Property\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FieldMode\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                 EDIT\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        InspectionType\n                    \n                \n                        \n                            \n                                 JAVA_CLASS\n                            \n                        \n                        \n                            \n                                Value : JAVA_CLASS\n                            \n                        \n                        \n                            \n                                 SCHEMA\n                            \n                        \n                        \n                            \n                                Value : SCHEMA\n                            \n                        \n                        \n                            \n                                 INSTANCE\n                            \n                        \n                        \n                            \n                                Value : INSTANCE\n                            \n                        \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : UNKNOWN\n                            \n                        \n            \n        \n\n    src/app/lib/atlasmap-data-mapper/models/error.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorLevel\n                    \n                \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 VALIDATION_ERROR\n                            \n                        \n                        \n                            \n                                 MAPPING_ERROR\n                            \n                        \n            \n        \n\n    src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Multiplicity\n                    \n                \n                        \n                            \n                                 ONE_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : ONE_TO_ONE\n                            \n                        \n                        \n                            \n                                 ONE_TO_MANY\n                            \n                        \n                        \n                            \n                                Value : ONE_TO_MANY\n                            \n                        \n                        \n                            \n                                 MANY_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : MANY_TO_ONE\n                            \n                        \n                        \n                            \n                                 ZERO_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : ZERO_TO_ONE\n                            \n                        \n            \n        \n\n    src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TransitionDelimiter\n                    \n                \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                 AMPERSAND\n                            \n                        \n                        \n                            \n                                 AT_SIGN\n                            \n                        \n                        \n                            \n                                 BACKSLASH\n                            \n                        \n                        \n                            \n                                 COLON\n                            \n                        \n                        \n                            \n                                 COMMA\n                            \n                        \n                        \n                            \n                                 DASH\n                            \n                        \n                        \n                            \n                                 EQUAL\n                            \n                        \n                        \n                            \n                                 HASH\n                            \n                        \n                        \n                            \n                                 MULTI_SPACE\n                            \n                        \n                        \n                            \n                                 PERIOD\n                            \n                        \n                        \n                            \n                                 PIPE\n                            \n                        \n                        \n                            \n                                 SEMICOLON\n                            \n                        \n                        \n                            \n                                 SLASH\n                            \n                        \n                        \n                            \n                                 SPACE\n                            \n                        \n                        \n                            \n                                 UNDERSCORE\n                            \n                        \n                        \n                            \n                                 USER_DEFINED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TransitionMode\n                    \n                \n                        \n                            \n                                 ONE_TO_ONE\n                            \n                        \n                        \n                            \n                                 ONE_TO_MANY\n                            \n                        \n                        \n                            \n                                 ENUM\n                            \n                        \n                        \n                            \n                                 MANY_TO_ONE\n                            \n                        \n                        \n                            \n                                 FOR_EACH\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAtlasMap Data Mapper UI\n\n\n\n\n\nThe AtlasMap is a data mapping solution with interactive web based user interface, that simplifies configuring integrations between Java, XML, and JSON data sources. You can design your data mapping on the AtlasMap Data Mapper UI canvas, and then run that data mapping via runtime engine. AtlasMap Data Mapper UI is primarily designed to work within the Syndesis UI.\nAtlasMap Documentation\nAll developer related documentation can be found at AtlasMap Documentation\nThe shortest path to run standalone AtlasMap\n\nCheckout AtlasMap repo from GitHub\n$ git clone https://github.com/atlasmap/atlasmap ${ATLASMAP}\nBuild AtlasMap runtime\n$ cd ${ATLASMAP}\n$ ./mvnw clean installor you can skip tests to get the build little bit faster\n$ ./mvnw clean install -DskipTests\nRun AtlasMap standalone\n$ cd ${ATLASMAP}/standalone\n$ ../mvnw -Pitests spring-boot:run\n\nThen AtlasMap UI is available at http://127.0.0.1:8585/ by default.\nLive update for UI development\nWhile standalone AtlasMap is running by following above, you can also run an another AtlasMap UI instance at different port by yarn start. This enables live update for UI code so you can see the outcome of your UI code change without build&restart manually.\n\nInstall Yarn\n\nInstall Data Mapper UI's dependencies\n$ cd ${ATLASMAP}/ui\n$ yarn install\nStart Data Mapper UI\n$ yarn start\n\nThe yarn start command will attempt to automatically open your browser window, but if it doesn't, open it directly with this URL: http://localhost:3000.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n            Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        DataMapperModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExampleAppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataMapperModule\n\n\n\ncluster_DataMapperModule_declarations\n\n\n\ncluster_DataMapperModule_exports\n\n\n\ncluster_DataMapperModule_providers\n\n\n\ncluster_ExampleAppModule\n\n\n\ncluster_ExampleAppModule_declarations\n\n\n\ncluster_ExampleAppModule_bootstrap\n\n\n\n\nClassNameComponent\n\nClassNameComponent\n\n\n\nDataMapperModule\n\nDataMapperModule\n\nDataMapperModule -->\n\nClassNameComponent->DataMapperModule\n\n\n\n\n\nCollapsableHeaderComponent\n\nCollapsableHeaderComponent\n\nDataMapperModule -->\n\nCollapsableHeaderComponent->DataMapperModule\n\n\n\n\n\nConstantFieldEditComponent\n\nConstantFieldEditComponent\n\nDataMapperModule -->\n\nConstantFieldEditComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppComponent\n\nDataMapperAppComponent\n\nDataMapperModule -->\n\nDataMapperAppComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppExampleHostComponent\n\nDataMapperAppExampleHostComponent\n\nDataMapperModule -->\n\nDataMapperAppExampleHostComponent->DataMapperModule\n\n\n\n\n\nDataMapperErrorComponent\n\nDataMapperErrorComponent\n\nDataMapperModule -->\n\nDataMapperErrorComponent->DataMapperModule\n\n\n\n\n\nDocumentDefinitionComponent\n\nDocumentDefinitionComponent\n\nDataMapperModule -->\n\nDocumentDefinitionComponent->DataMapperModule\n\n\n\n\n\nDocumentFieldDetailComponent\n\nDocumentFieldDetailComponent\n\nDataMapperModule -->\n\nDocumentFieldDetailComponent->DataMapperModule\n\n\n\n\n\nEmptyModalBodyComponent\n\nEmptyModalBodyComponent\n\nDataMapperModule -->\n\nEmptyModalBodyComponent->DataMapperModule\n\n\n\n\n\nExpressionComponent\n\nExpressionComponent\n\nDataMapperModule -->\n\nExpressionComponent->DataMapperModule\n\n\n\n\n\nFieldEditComponent\n\nFieldEditComponent\n\nDataMapperModule -->\n\nFieldEditComponent->DataMapperModule\n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nDataMapperModule -->\n\nFocusDirective->DataMapperModule\n\n\n\n\n\nLineMachineComponent\n\nLineMachineComponent\n\nDataMapperModule -->\n\nLineMachineComponent->DataMapperModule\n\n\n\n\n\nLookupTableComponent\n\nLookupTableComponent\n\nDataMapperModule -->\n\nLookupTableComponent->DataMapperModule\n\n\n\n\n\nMappingDetailComponent\n\nMappingDetailComponent\n\nDataMapperModule -->\n\nMappingDetailComponent->DataMapperModule\n\n\n\n\n\nMappingFieldActionArgumentComponent\n\nMappingFieldActionArgumentComponent\n\nDataMapperModule -->\n\nMappingFieldActionArgumentComponent->DataMapperModule\n\n\n\n\n\nMappingFieldActionComponent\n\nMappingFieldActionComponent\n\nDataMapperModule -->\n\nMappingFieldActionComponent->DataMapperModule\n\n\n\n\n\nMappingFieldContainerComponent\n\nMappingFieldContainerComponent\n\nDataMapperModule -->\n\nMappingFieldContainerComponent->DataMapperModule\n\n\n\n\n\nMappingFieldDetailComponent\n\nMappingFieldDetailComponent\n\nDataMapperModule -->\n\nMappingFieldDetailComponent->DataMapperModule\n\n\n\n\n\nMappingListComponent\n\nMappingListComponent\n\nDataMapperModule -->\n\nMappingListComponent->DataMapperModule\n\n\n\n\n\nMappingListFieldComponent\n\nMappingListFieldComponent\n\nDataMapperModule -->\n\nMappingListFieldComponent->DataMapperModule\n\n\n\n\n\nMappingSelectionComponent\n\nMappingSelectionComponent\n\nDataMapperModule -->\n\nMappingSelectionComponent->DataMapperModule\n\n\n\n\n\nMappingSelectionSectionComponent\n\nMappingSelectionSectionComponent\n\nDataMapperModule -->\n\nMappingSelectionSectionComponent->DataMapperModule\n\n\n\n\n\nModalErrorWindowComponent\n\nModalErrorWindowComponent\n\nDataMapperModule -->\n\nModalErrorWindowComponent->DataMapperModule\n\n\n\n\n\nModalWindowComponent\n\nModalWindowComponent\n\nDataMapperModule -->\n\nModalWindowComponent->DataMapperModule\n\n\n\n\n\nNamespaceEditComponent\n\nNamespaceEditComponent\n\nDataMapperModule -->\n\nNamespaceEditComponent->DataMapperModule\n\n\n\n\n\nNamespaceListComponent\n\nNamespaceListComponent\n\nDataMapperModule -->\n\nNamespaceListComponent->DataMapperModule\n\n\n\n\n\nPropertyFieldEditComponent\n\nPropertyFieldEditComponent\n\nDataMapperModule -->\n\nPropertyFieldEditComponent->DataMapperModule\n\n\n\n\n\nTemplateEditComponent\n\nTemplateEditComponent\n\nDataMapperModule -->\n\nTemplateEditComponent->DataMapperModule\n\n\n\n\n\nToErrorIconClassPipe\n\nToErrorIconClassPipe\n\nDataMapperModule -->\n\nToErrorIconClassPipe->DataMapperModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nDataMapperModule -->\n\nToolbarComponent->DataMapperModule\n\n\n\n\n\nTransitionSelectionComponent\n\nTransitionSelectionComponent\n\nDataMapperModule -->\n\nTransitionSelectionComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppComponent \n\nDataMapperAppComponent \n\nDataMapperAppComponent  -->\n\nDataMapperModule->DataMapperAppComponent \n\n\n\n\n\nDataMapperAppExampleHostComponent \n\nDataMapperAppExampleHostComponent \n\nDataMapperAppExampleHostComponent  -->\n\nDataMapperModule->DataMapperAppExampleHostComponent \n\n\n\nDataMapperAppExampleHostComponent  -->\n\nDataMapperModule->DataMapperAppExampleHostComponent \n\n\n\n\n\nModalErrorWindowComponent \n\nModalErrorWindowComponent \n\nModalErrorWindowComponent  -->\n\nDataMapperModule->ModalErrorWindowComponent \n\n\n\n\n\nModalWindowComponent \n\nModalWindowComponent \n\nModalWindowComponent  -->\n\nDataMapperModule->ModalWindowComponent \n\n\n\n\n\nExampleAppModule\n\nExampleAppModule\n\nExampleAppModule -->\n\nDataMapperModule->ExampleAppModule\n\n\n\n\n\nDocumentManagementService\n\nDocumentManagementService\n\nDataMapperModule -->\n\nDocumentManagementService->DataMapperModule\n\n\n\n\n\nErrorHandlerService\n\nErrorHandlerService\n\nDataMapperModule -->\n\nErrorHandlerService->DataMapperModule\n\n\n\n\n\nFieldActionService\n\nFieldActionService\n\nDataMapperModule -->\n\nFieldActionService->DataMapperModule\n\n\n\n\n\nFileManagementService\n\nFileManagementService\n\nDataMapperModule -->\n\nFileManagementService->DataMapperModule\n\n\n\n\n\nInitializationService\n\nInitializationService\n\nDataMapperModule -->\n\nInitializationService->DataMapperModule\n\n\n\n\n\nMappingManagementService\n\nMappingManagementService\n\nDataMapperModule -->\n\nMappingManagementService->DataMapperModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nExampleAppModule -->\n\nAppComponent->ExampleAppModule\n\n\n\n\n\nAtlasmapNavbarComponent\n\nAtlasmapNavbarComponent\n\nExampleAppModule -->\n\nAtlasmapNavbarComponent->ExampleAppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nExampleAppModule->AppComponent \n\n\n\n\n\nAtlasmapNavbarComponent \n\nAtlasmapNavbarComponent \n\nAtlasmapNavbarComponent  -->\n\nExampleAppModule->AtlasmapNavbarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    32 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    32 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            alertModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            bsDropdownModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            environment   (src/.../environment.dev.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.trace.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            httpClientXsrfModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            loggerModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            tooltipModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            typeaheadModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            alertModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : AlertModule.forRoot()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bsDropdownModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : BsDropdownModule.forRoot()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpClientXsrfModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : HttpClientXsrfModule.withOptions(environment.xsrf)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggerModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : LoggerModule.forRoot(environment.ngxLoggerConfig)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tooltipModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : TooltipModule.forRoot()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeaheadModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : TypeaheadModule.forRoot()\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.dev.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  ngxLoggerConfig: {\n    level: NgxLoggerLevel.DEBUG,\n    disableConsoleLogging: false\n  },\n  xsrf: {\n    headerName: 'ATLASMAP-XSRF-TOKEN',\n    cookieName: 'ATLASMAP-XSRF-COOKIE',\n    defaultTokenValue: 'awesome',\n  },\n  backendUrls: {\n    atlasServiceUrl: 'http://localhost:8585/v2/atlas/',\n    javaInspectionServiceUrl: 'http://localhost:8585/v2/atlas/java/',\n    xmlInspectionServiceUrl: 'http://localhost:8585/v2/atlas/xml/',\n    jsonInspectionServiceUrl: 'http://localhost:8585/v2/atlas/json/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  ngxLoggerConfig: {\n    level: NgxLoggerLevel.OFF,\n    disableConsoleLogging: true\n  },\n  xsrf: {\n    headerName: 'ATLASMAP-XSRF-TOKEN',\n    cookieName: 'ATLASMAP-XSRF-COOKIE',\n    defaultTokenValue: 'awesome',\n  },\n  backendUrls: {\n    atlasServiceUrl: 'http://localhost:8585/v2/atlas/',\n    javaInspectionServiceUrl: 'http://localhost:8585/v2/atlas/java/',\n    xmlInspectionServiceUrl: 'http://localhost:8585/v2/atlas/xml/',\n    jsonInspectionServiceUrl: 'http://localhost:8585/v2/atlas/json/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.trace.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  ngxLoggerConfig: {\n    level: NgxLoggerLevel.TRACE,\n    disableConsoleLogging: false\n  },\n  xsrf: {\n    headerName: 'ATLASMAP-XSRF-TOKEN',\n    cookieName: 'ATLASMAP-XSRF-COOKIE',\n    defaultTokenValue: 'awesome',\n  },\n  backendUrls: {\n    atlasServiceUrl: 'http://localhost:8585/v2/atlas/',\n    javaInspectionServiceUrl: 'http://localhost:8585/v2/atlas/java/',\n    xmlInspectionServiceUrl: 'http://localhost:8585/v2/atlas/xml/',\n    jsonInspectionServiceUrl: 'http://localhost:8585/v2/atlas/json/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  ngxLoggerConfig: {\n    level: NgxLoggerLevel.INFO,\n    disableConsoleLogging: true\n  },\n  xsrf: {\n    headerName: 'ATLASMAP-XSRF-TOKEN',\n    cookieName: 'ATLASMAP-XSRF-COOKIE',\n    defaultTokenValue: 'awesome',\n  },\n  backendUrls: {\n    atlasServiceUrl: '/v2/atlas/',\n    javaInspectionServiceUrl: '/v2/atlas/java/',\n    xmlInspectionServiceUrl: '/v2/atlas/xml/',\n    jsonInspectionServiceUrl: '/v2/atlas/json/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
