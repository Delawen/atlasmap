var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AdmRedrawMappingLinesEvent.html",[0,0.195,1,2.492]],["body/classes/AdmRedrawMappingLinesEvent.html",[0,0.333,1,3.226,2,0.917,3,0.097,4,0.097,5,0.084,6,0.136,7,0.08,8,2.642,9,2.086,10,3.445,11,4.038,12,4.038,13,4.038,14,0.125,15,0.504,16,4.666,17,0.236,18,0.014,19,0.125,20,3.668,21,0.419,22,3.226,23,2.876,24,2.164,25,3.226,26,1.943,27,2.454,28,2.728,29,0.364,30,1.926,31,3.413,32,0.917,33,2.004,34,1.765,35,1.687,36,2.874,37,2.454,38,3.727,39,3.038,40,2.454,41,3.51,42,2.454,43,0.884,44,1.137,45,2.477,46,3.321,47,4.316,48,1.615,49,3.321,50,2.642,51,2.642,52,2.874,53,2.642,54,0.195,55,3.98,56,2.876,57,2.876,58,2.164,59,1.009,60,2.642,61,2.642,62,2.876,63,3.708,64,2.876,65,2.876,66,2.876,67,2.876,68,0.544,69,2.876,70,2.876,71,2.876,72,2.876,73,2.876,74,2.876,75,1.615,76,2.876,77,2.164,78,2.876,79,3.445,80,1.224,81,2.642,82,2.642,83,2.642,84,2.454,85,2.642,86,2.876,87,2.876,88,2.047,89,2.876,90,2.876,91,2.876,92,2.876,93,2.876,94,2.876,95,2.876,96,2.876,97,2.876,98,2.164,99,2.642,100,2.642,101,2.454,102,2.876,103,1.081,104,2.876,105,1.287,106,2.642,107,2.876,108,2.642,109,2.876,110,2.642,111,2.876,112,2.642,113,3.51,114,1.85,115,0.198,116,2.446,117,0.895,118,2.642,119,2.642,120,2.642,121,2.642,122,4.038,123,0.921,124,2.087,125,2.876,126,2.876,127,2.876,128,2.876,129,2.876,130,2.876,131,2.876,132,2.876,133,0.588,134,1.112,135,1.27,136,2.876,137,1.687,138,2.298,139,2.642,140,2.454,141,2.876,142,2.642,143,2.642,144,2.876,145,2.298,146,2.642,147,2.642,148,2.876,149,2.876,150,0.576,151,2.876,152,2.876,153,2.298,154,2.876,155,2.876,156,2.876,157,2.876,158,2.876,159,2.876,160,1.615,161,2.876,162,2.876,163,2.876,164,2.298,165,2.876,166,2.876,167,2.876,168,2.876,169,2.298,170,2.876,171,2.642,172,2.876,173,2.876,174,2.642,175,0.405,176,4.038,177,2.876,178,0.412,179,1.548,180,2.876,181,2.862,182,5.059,183,2.876,184,2.876,185,2.642,186,2.876,187,2.642,188,2.876,189,2.876,190,2.876,191,2.642,192,2.876,193,0.808,194,2.874,195,2.876,196,2.876,197,5.059,198,2.876,199,5.328,200,2.876,201,2.876,202,2.876,203,2.876,204,2.876,205,2.876,206,4.038,207,2.876,208,2.876,209,2.876,210,2.876,211,4.038,212,2.876,213,2.876,214,2.876,215,2.876,216,2.876,217,2.876,218,5.525,219,4.666,220,2.454,221,4.038,222,2.164,223,2.876,224,4.285,225,2.876,226,4.666,227,2.642,228,4.038,229,2.876,230,2.876,231,2.876,232,4.038,233,2.876,234,2.876,235,2.876,236,2.876,237,2.876,238,4.038,239,4.038,240,2.876,241,4.316,242,4.038,243,4.038,244,2.876,245,2.876,246,1.687,247,2.047,248,2.164,249,2.454,250,2.642,251,1.485,252,2.876,253,2.728,254,3.708,255,4.533,256,2.876,257,2.876,258,1.765,259,2.876,260,2.454,261,2.047,262,1.615,263,0.766,264,0.766,265,1.943,266,2.876,267,2.876,268,2.876,269,2.876,270,2.876,271,4.666,272,4.666,273,2.876,274,2.876,275,2.876,276,2.876,277,3.445,278,2.876,279,2.876,280,2.642,281,2.876,282,2.298,283,2.876,284,2.876,285,2.876,286,2.876,287,0.006,288,0.009,289,0.006]],["title/injectables/ApiHttpXsrfTokenExtractor.html",[290,2.006,291,2.661]],["body/injectables/ApiHttpXsrfTokenExtractor.html",[0,0.328,3,0.144,4,0.144,5,0.124,6,0.191,7,0.112,9,2.21,14,0.186,15,0.567,18,0.014,19,0.228,21,0.407,26,2.891,32,1.031,54,0.202,58,3.219,68,0.446,115,0.294,123,0.713,133,1.209,134,1.408,175,0.376,193,0.753,287,0.009,288,0.011,289,0.009,290,3.647,291,4.474,292,3.651,293,5.67,294,4.279,295,6.29,296,5.67,297,6.29,298,5.428,299,5.207,300,6.36,301,5.817,302,4.816,303,6.557,304,3.217,305,0.805,306,0.692,307,5.817,308,0.63,309,6.557,310,5.457,311,0.514,312,3.325,313,5.457,314,0.808,315,4.747,316,5.817,317,5.817,318,6.29,319,5.244,320,3.418,321,3.946,322,1.822,323,0.808,324,1.671,325,6.29,326,4.816,327,3.93,328,3.219,329,4.747,330,5.244,331,5.244,332,3.651,333,4.747,334,4.747,335,3.93,336,3.93,337,4.747,338,4.747,339,2.402,340,4.747,341,4.747,342,4.747,343,4.279,344,2.752,345,3.651,346,4.747,347,5.817,348,4.747,349,4.279,350,4.747,351,4.747,352,3.93,353,4.747,354,4.747]],["title/interceptors/ApiXsrfInterceptor.html",[327,2.864,332,2.661]],["body/interceptors/ApiXsrfInterceptor.html",[0,0.326,3,0.143,4,0.143,5,0.123,6,0.191,7,0.112,9,2.189,14,0.184,15,0.563,17,0.247,18,0.014,19,0.226,21,0.405,26,2.862,32,0.833,54,0.201,58,3.188,68,0.36,115,0.388,123,0.706,133,1.205,134,1.404,175,0.359,193,0.75,287,0.009,288,0.011,289,0.009,290,3.631,291,3.615,293,5.646,294,4.237,295,6.263,296,5.646,297,6.263,298,5.41,299,5.185,300,6.3,301,4.7,302,3.891,303,6.263,304,2.599,305,0.803,306,0.69,307,4.7,308,0.626,309,4.7,311,0.509,312,3.311,314,0.8,315,4.7,316,5.782,317,6.535,318,6.831,319,5.212,320,3.385,321,4.248,322,1.804,323,0.8,324,1.661,325,6.263,326,5.41,327,4.787,328,3.922,329,5.782,330,5.646,331,5.646,332,4.447,333,5.782,334,6.263,335,3.891,336,3.891,337,4.7,338,4.7,339,2.379,340,4.7,341,4.7,342,4.7,343,4.237,344,2.725,345,3.615,346,4.7,347,5.782,348,4.7,349,4.237,350,4.7,351,4.7,352,3.891,353,4.7,354,4.7,355,5.403,356,6.647,357,5.403,358,0.618,359,0.618,360,5.403]],["title/components/AppComponent.html",[361,0.182,362,0.83]],["body/components/AppComponent.html",[0,0.329,3,0.145,4,0.145,5,0.125,7,0.113,18,0.014,21,0.295,29,0.805,32,1.033,54,0.165,115,0.391,263,1.143,264,1.143,287,0.009,288,0.011,289,0.009,314,0.811,361,0.332,362,1.575,363,1.559,364,1.32,365,1.32,366,4.762,367,1.228,368,1.71,369,1.518,370,1.746,371,5.829,372,1.684,373,1.185,374,1.616,375,1.559,376,1.143,377,1.819,378,1.32,379,1.32,380,1.185,381,1.32,382,1.143,383,1.32,384,1.143,385,1.32,386,1.32,387,1.143,388,0.682,389,1.866,390,1.143,391,1.32,392,1.143,393,1.161,394,1.185,395,1.32,396,1.143,397,1.32,398,1.143,399,1.32,400,1.102,401,1.819,402,1.102,403,1.273,404,1.633,405,1.32,406,1.185,407,1.32,408,1.143,409,1.143,410,1.102,411,1.32,412,1.102,413,1.185,414,1.32,415,1.143,416,1.143,417,1.062,418,1.32,419,1.143,420,1.32,421,1.143,422,1.32,423,1.143,424,1.143,425,1.616,426,1.143,427,1.062,428,1.32,429,1.143,430,1.32,431,1.143,432,1.504,433,1.32,434,1.143,435,1.075,436,1.062,437,1.616,438,1.102,439,1.143,440,1.616,441,1.143,442,1.143,443,1.143,444,1.143,445,1.32,446,1.143,447,1.228,448,1.273,449,1.102,450,1.273,451,1.32]],["title/components/ClassNameComponent.html",[361,0.182,382,0.83]],["body/components/ClassNameComponent.html",[0,0.393,3,0.113,4,0.113,5,0.097,6,0.214,7,0.127,14,0.145,15,0.484,17,0.362,18,0.014,19,0.274,21,0.398,29,0.769,30,1.595,31,3.112,32,0.88,47,2.852,48,1.877,54,0.129,59,0.533,68,0.381,105,1.608,115,0.436,116,2.316,117,0.887,123,0.841,133,1.032,134,1.202,150,0.638,175,0.321,178,0.574,194,4.203,227,4.11,246,2.625,263,0.89,264,0.89,287,0.007,288,0.01,289,0.007,299,4.11,305,0.746,306,0.641,308,0.538,311,0.695,312,2.625,314,0.631,323,0.631,324,1.426,358,0.736,359,0.736,361,0.295,362,0.89,363,1.328,364,1.028,365,1.028,367,0.956,368,1.689,369,1.148,370,1.028,372,1.328,373,0.922,374,1.376,375,1.328,376,0.89,377,1.657,378,1.028,379,1.028,380,0.922,381,1.028,382,1.434,383,1.028,384,0.89,385,1.028,386,1.028,387,0.89,388,0.678,389,1.728,390,0.89,391,1.028,392,0.89,393,0.989,394,0.922,395,1.028,396,0.89,397,1.028,398,0.89,399,1.028,400,0.858,401,1.657,402,0.858,403,0.991,404,1.487,405,1.028,406,0.922,407,1.028,408,0.89,409,0.89,410,0.858,411,1.028,412,0.858,413,0.922,414,1.028,415,0.89,416,0.89,417,0.827,418,1.028,419,0.89,420,1.028,421,0.89,422,1.028,423,0.89,424,0.89,425,1.376,426,0.89,427,1.248,428,1.028,429,0.89,430,1.028,431,0.89,432,1.281,433,1.028,434,0.89,435,0.915,436,0.827,437,1.376,438,0.858,439,0.89,440,1.376,441,0.89,442,0.89,443,0.89,444,0.89,445,1.028,446,0.89,447,0.956,448,0.991,449,0.858,450,0.991,451,1.028,452,7.031,453,3.708,454,2.716,455,1.281,456,5.708,457,4.031,458,6.435,459,6.435,460,6.435,461,5.708,462,2.901,463,3.024,464,2.901,465,4.965,466,5.978,467,5.708,468,5.708,469,4.263,470,1.77,471,4.263,472,2.681,473,4.11,474,5.598,475,4.263,476,4.263,477,4.965,478,4.263,479,4.263,480,4.263,481,4.263,482,1.727,483,5.708,484,4.263,485,4.263,486,4.263,487,4.263,488,1.96,489,2.258,490,1.659,491,1.659,492,1.371,493,2.852,494,4.263,495,4.263,496,2.67,497,4.263,498,3.07,499,5.389,500,3.024,501,2.135,502,3.024,503,5.708]],["title/components/CollapsableHeaderComponent.html",[361,0.182,384,0.83]],["body/components/CollapsableHeaderComponent.html",[0,0.313,3,0.134,4,0.134,5,0.115,6,0.2,7,0.123,14,0.172,17,0.292,18,0.014,19,0.249,21,0.272,29,0.793,32,0.982,54,0.152,59,0.797,68,0.465,115,0.395,175,0.251,178,0.51,263,1.053,264,1.053,287,0.008,288,0.011,289,0.008,305,0.525,306,0.451,308,0.6,311,0.6,314,0.747,331,4.994,358,0.577,359,0.577,361,0.319,362,1.053,363,1.481,364,1.216,365,1.216,367,1.132,368,1.704,369,1.281,370,1.216,372,1.481,373,1.092,374,1.535,375,1.481,376,1.053,377,1.767,378,1.216,379,1.216,380,1.092,381,1.216,382,1.053,383,1.216,384,1.53,385,1.822,386,1.216,387,1.053,388,0.672,389,1.822,390,1.053,391,1.216,392,1.053,393,1.103,394,1.092,395,1.216,396,1.053,397,1.216,398,1.053,399,1.216,400,1.015,401,1.767,402,1.015,403,1.173,404,1.586,405,1.216,406,1.092,407,1.216,408,1.053,409,1.053,410,1.015,411,1.216,412,1.015,413,1.092,414,1.216,415,1.053,416,1.053,417,0.978,418,1.216,419,1.053,420,1.216,421,1.053,422,1.216,423,1.053,424,1.053,425,1.535,426,1.053,427,0.978,428,1.216,429,1.053,430,1.216,431,1.053,432,1.429,433,1.216,434,1.053,435,1.021,436,0.978,437,1.535,438,1.015,439,1.053,440,1.535,441,1.053,442,1.053,443,1.053,444,1.053,445,1.216,446,1.053,447,1.132,448,1.173,449,1.015,450,1.173,451,1.216,455,1.429,470,1.564,504,3.062,505,5.443,506,4.388,507,6.368,508,5.748,509,4.994,510,2.383,511,6.071,512,6.575,513,5.044,514,5.044,515,5.044,516,4.994,517,3.519,518,5.044,519,1.683,520,6.979,521,4.388,522,3.554,523,4.388,524,3.955,525,3.16]],["title/components/ConstantFieldEditComponent.html",[361,0.182,387,0.83]],["body/components/ConstantFieldEditComponent.html",[0,0.264,3,0.103,4,0.103,5,0.089,6,0.21,7,0.125,14,0.133,15,0.455,17,0.356,18,0.014,19,0.269,21,0.387,29,0.754,30,1.459,31,3.031,32,0.828,45,1.876,48,1.717,54,0.118,59,0.921,68,0.442,98,3.17,103,0.988,115,0.375,117,0.858,123,0.51,133,0.986,135,1.149,150,0.521,169,2.443,175,0.387,178,0.531,194,4.107,263,1.588,264,0.814,287,0.007,288,0.009,289,0.007,305,0.56,306,0.681,308,0.506,311,0.677,314,0.577,323,0.577,324,1.343,358,0.615,359,0.615,361,0.281,362,0.814,363,1.25,364,0.94,365,0.94,367,0.875,368,1.681,369,1.081,370,0.94,372,1.25,373,0.844,374,1.295,375,1.25,376,0.814,377,1.597,378,0.94,379,0.94,380,0.844,381,0.94,382,0.814,383,0.94,384,0.814,385,0.94,386,0.94,387,1.383,388,0.712,389,1.675,390,0.814,391,0.94,392,0.814,393,0.931,394,0.844,395,0.94,396,0.814,397,0.94,398,0.814,399,0.94,400,0.785,401,1.597,402,0.785,403,0.907,404,1.434,405,0.94,406,0.844,407,0.94,408,0.814,409,0.814,410,0.785,411,0.94,412,0.785,413,0.844,414,0.94,415,0.814,416,0.814,417,0.756,418,0.94,419,0.814,420,0.94,421,0.814,422,0.94,423,0.814,424,0.814,425,1.295,426,0.814,427,0.756,428,0.94,429,0.814,430,0.94,431,0.814,432,1.206,433,0.94,434,0.814,435,0.862,436,0.756,437,1.295,438,1.549,439,0.814,440,1.295,441,0.814,442,0.814,443,0.814,444,0.814,445,0.94,446,0.814,447,0.875,448,0.907,449,0.785,450,0.907,451,0.94,454,2.594,455,1.206,457,3.851,462,2.796,463,2.847,464,2.796,466,5.762,470,1.209,472,2.599,473,3.869,482,1.58,488,1.793,489,2.066,490,1.518,491,1.518,492,1.255,493,4.113,496,2.443,498,2.808,502,3.509,526,6.912,527,2.443,528,2.71,529,3.595,530,5.632,531,5.347,532,4.82,533,5.195,534,4.213,535,3.392,536,3.9,537,5.762,538,3.058,539,3.9,540,3.9,541,4.213,542,4.15,543,5.195,544,4.432,545,4.674,546,2.01,547,4.213,548,3.392,549,3.058,550,3.058,551,2.808,552,4.674,553,3.058,554,3.058,555,3.058,556,2.808,557,4.82,558,3.058,559,5.347,560,3.392,561,4.674,562,2.71,563,2.808,564,4.674,565,4.674,566,2.808,567,6.147,568,2.808,569,3.058,570,3.058,571,3.058,572,3.058,573,3.9,574,3.9,575,3.392,576,4.674,577,4.674,578,4.008,579,3.187,580,4.213,581,4.213,582,3.595,583,2.999,584,2.999,585,2.847,586,3.697,587,3.697,588,4.213,589,3.595,590,4.213,591,4.213,592,4.213,593,4.213,594,5.879]],["title/components/DataMapperAppComponent.html",[361,0.182,390,0.83]],["body/components/DataMapperAppComponent.html",[0,0.223,3,0.081,4,0.081,5,0.103,6,0.21,7,0.128,14,0.105,15,0.384,17,0.347,18,0.014,19,0.268,21,0.419,29,0.764,32,0.7,54,0.093,59,0.745,60,4.569,61,3.882,68,0.205,105,0.769,115,0.321,123,0.705,133,1.064,150,0.384,174,4.285,175,0.153,178,0.508,263,0.947,264,0.947,287,0.005,288,0.008,289,0.005,305,0.561,306,0.482,308,0.428,311,0.561,312,1.415,314,0.456,322,1.028,323,0.456,324,1.134,339,1.355,358,0.352,359,0.352,361,0.247,362,0.642,363,1.056,364,1.094,365,0.742,367,0.691,368,1.655,369,0.913,370,0.742,372,1.056,373,0.666,374,1.094,375,1.056,376,0.642,377,1.434,378,0.742,379,0.742,380,0.666,381,0.742,382,0.642,383,0.742,384,0.642,385,0.742,386,0.742,387,0.642,388,0.636,389,1.53,390,1.242,391,0.742,392,0.642,393,1.428,394,0.666,395,0.742,396,1.385,397,0.742,398,1.385,399,0.742,400,0.619,401,1.434,402,0.619,403,0.716,404,1.288,405,0.742,406,0.666,407,0.742,408,0.642,409,1.433,410,1.197,411,0.742,412,0.619,413,0.666,414,0.742,415,1.433,416,0.642,417,0.597,418,0.742,419,0.642,420,0.742,421,0.642,422,0.742,423,0.642,424,0.642,425,1.094,426,0.642,427,0.597,428,0.742,429,0.642,430,0.742,431,0.642,432,1.018,433,0.742,434,0.642,435,1.064,436,1.154,437,1.094,438,1.197,439,0.642,440,1.3,441,0.642,442,0.642,443,0.642,444,1.433,445,0.742,446,0.642,447,0.691,448,0.716,449,0.619,450,0.716,451,0.742,455,1.018,482,2.854,488,1.415,491,1.766,492,1.46,500,2.404,519,1.3,524,2.414,528,3,585,1.631,595,4.539,596,6.211,597,2.678,598,2.479,599,2.856,600,4.539,601,4.539,602,4.539,603,4.539,604,4.539,605,5.391,606,4.539,607,2.087,608,3.51,609,4.69,610,4.69,611,5.391,612,5.391,613,5.391,614,5.391,615,4.666,616,3.607,617,3.009,618,5.391,619,3.321,620,2.736,621,5.176,622,2.678,623,3.743,624,4.539,625,3.078,626,3.078,627,3.078,628,3.078,629,3.078,630,4.539,631,3.078,632,4.539,633,3.078,634,4.539,635,3.078,636,3.078,637,3.078,638,3.361,639,4.539,640,3.078,641,3.078,642,4.539,643,3.078,644,4.539,645,3.078,646,4.539,647,3.078,648,3.078,649,4.539,650,3.078,651,3.078,652,3.078,653,2.678,654,2.414,655,2.678,656,2.414,657,1.552,658,2.414,659,1.816,660,3.078,661,3.078,662,3.078,663,3.078,664,3.078,665,3.078,666,3.078,667,2.404,668,2.059,669,1.552,670,3.078,671,3.078,672,3.078,673,0.757,674,3.078,675,3.078,676,3.078,677,3.078,678,3.078,679,2.217,680,3.078,681,1.152,682,3.078,683,3.078,684,3.036,685,3.078,686,3.078,687,3.078,688,3.078,689,3.078,690,3.948,691,2.678,692,0.742,693,2.217,694,1.552,695,3.078,696,2.414,697,2.414,698,2.414,699,2.217,700,3.882,701,2.217,702,4.593,703,2.217,704,3.268,705,2.059,706,2.217,707,2.217,708,1.928,709,2.217,710,2.217,711,1.631,712,1.928,713,2.217,714,2.217,715,2.217,716,2.217,717,3.268,718,2.217,719,2.217,720,2.217,721,2.217,722,2.217,723,2.217,724,1.928,725,2.059,726,2.217,727,2.217,728,2.217,729,2.217,730,3.078,731,3.078,732,3.078,733,3.078,734,3.078,735,3.078,736,3.078,737,3.078,738,3.078,739,3.078,740,3.078,741,3.078,742,3.078,743,3.078,744,5.391,745,4.539,746,3.078,747,3.078,748,7.193,749,4.666,750,1.816,751,6.257,752,4.69,753,3.078,754,6.345,755,3.078,756,3.078,757,3.078,758,3.882,759,3.078,760,4.539,761,2.736,762,3.078,763,3.078,764,3.078,765,5.176,766,4.539,767,5.391,768,3.948,769,5.391,770,3.078,771,3.078,772,3.078,773,3.078,774,3.078,775,8.075,776,6.865,777,4.975,778,3.607,779,2.678,780,5.519,781,3.078,782,6.345,783,2.594,784,5.391,785,3.078,786,3.078,787,3.078,788,3.078,789,3.078,790,4.539,791,4.539,792,4.539,793,3.078,794,4.539,795,3.078,796,3.078,797,3.078,798,3.078,799,3.078,800,3.078,801,3.078,802,3.078,803,6.638,804,3.078,805,3.078,806,3.078,807,6.345,808,6.345,809,1.816,810,3.078,811,3.078,812,3.51,813,3.078,814,2.678,815,3.078,816,5.391,817,4.539,818,3.078,819,4.539,820,3.078,821,5.95,822,2.678,823,3.948,824,1.718,825,4.539,826,3.078,827,3.078,828,3.078,829,2.678,830,3.078,831,5.95,832,4.539,833,5.95,834,4.539,835,5.95,836,3.948,837,4.539,838,3.948,839,5.95,840,5.95,841,3.559,842,4.539,843,2.678,844,3.078,845,3.078,846,2.678,847,5.391,848,3.078,849,1.816,850,3.078,851,3.078]],["title/components/DataMapperAppExampleHostComponent.html",[361,0.182,392,0.83]],["body/components/DataMapperAppExampleHostComponent.html",[0,0.328,3,0.122,4,0.122,5,0.105,6,0.187,7,0.123,14,0.157,15,0.509,17,0.275,18,0.014,19,0.227,21,0.424,26,2.438,27,3.078,29,0.787,32,0.925,33,2.6,34,2.214,35,2.116,36,3.729,37,3.078,38,3.761,39,3.943,40,3.078,41,4.445,42,3.078,54,0.139,59,0.751,63,3.313,75,2.026,79,3.078,80,1.536,81,3.313,82,4.323,83,3.313,84,3.078,85,3.313,88,3.351,98,3.542,99,3.313,100,3.313,101,3.078,105,1.15,106,3.313,108,3.313,110,3.313,112,3.313,115,0.382,123,0.785,140,4.016,150,0.39,178,0.368,193,0.479,261,2.568,263,0.96,264,0.96,287,0.008,288,0.01,289,0.008,308,0.566,311,0.434,314,0.681,323,0.681,324,1.5,358,0.527,359,0.527,361,0.306,362,0.96,363,1.396,364,1.109,365,1.109,367,1.032,368,1.696,369,1.208,370,1.109,372,1.554,373,0.996,374,1.447,375,1.396,376,0.96,377,1.708,378,1.109,379,1.109,380,0.996,381,1.109,382,0.96,383,1.109,384,0.96,385,1.109,386,1.109,387,0.96,388,0.659,389,1.771,390,1.478,391,1.109,392,1.478,393,1.363,394,1.661,395,1.109,396,0.96,397,1.109,398,0.96,399,1.109,400,0.926,401,1.708,402,0.926,403,1.07,404,1.533,405,1.109,406,0.996,407,1.109,408,0.96,409,0.96,410,0.926,411,1.109,412,0.926,413,0.996,414,1.109,415,0.96,416,0.96,417,0.892,418,1.109,419,0.96,420,1.109,421,0.96,422,1.109,423,0.96,424,0.96,425,1.447,426,0.96,427,0.892,428,1.109,429,0.96,430,1.109,431,0.96,432,1.347,433,1.109,434,0.96,435,0.963,436,0.892,437,1.447,438,0.926,439,0.96,440,1.447,441,0.96,442,0.96,443,0.96,444,0.96,445,1.109,446,0.96,447,1.032,448,1.07,449,0.926,450,1.07,451,1.109,463,3.752,482,1.864,488,2.116,598,3.073,599,2.438,620,3.257,694,2.32,852,6.161,853,4.002,854,4.323,855,6.004,856,6.683,857,4.601,858,6.004,859,4.601,860,6.004,861,4.601,862,3.608,863,3.313,864,4.601,865,2.026,866,4.002,867,2.715,868,4.601,869,6.004,870,4.601,871,3.608,872,2.882,873,4.601,874,4.601,875,4.601,876,4.601,877,4.601,878,4.601,879,4.601,880,4.601,881,4.601,882,4.601,883,4.601,884,4.601,885,4.601,886,4.601,887,3.608,888,4.601,889,4.601,890,4.601,891,4.601,892,4.601,893,4.601,894,4.601,895,4.601,896,2.882,897,3.608,898,4.002,899,4.601,900,4.601,901,4.002,902,4.601,903,4.601,904,4.601]],["title/components/DataMapperErrorComponent.html",[361,0.182,396,0.83]],["body/components/DataMapperErrorComponent.html",[0,0.244,3,0.093,4,0.093,5,0.08,6,0.214,7,0.128,14,0.119,15,0.422,17,0.345,18,0.014,19,0.274,21,0.374,29,0.736,32,0.768,33,2.257,34,1.684,35,1.61,43,1.917,44,1.086,54,0.106,59,0.624,103,0.949,115,0.374,117,0.57,123,0.758,133,1.261,134,1.084,150,0.638,153,3.633,175,0.364,178,0.603,181,3.511,251,1.437,263,0.731,264,0.731,287,0.006,288,0.008,289,0.006,304,3.841,305,0.695,306,0.597,308,0.47,311,0.725,312,1.61,314,0.518,322,1.169,323,0.518,324,1.245,358,0.664,359,0.664,361,0.266,362,0.731,363,1.159,364,0.844,365,0.844,367,0.786,368,1.669,369,1.002,370,0.844,372,1.159,373,0.758,374,1.201,375,1.159,376,0.731,377,1.523,378,0.844,379,0.844,380,0.758,381,0.844,382,0.731,383,0.844,384,0.731,385,0.844,386,0.844,387,0.731,388,0.618,389,1.61,390,0.731,391,0.844,392,0.731,393,1.419,394,0.758,395,0.844,396,1.319,397,0.844,398,0.731,399,0.844,400,0.704,401,1.523,402,0.704,403,0.814,404,1.665,405,0.844,406,0.758,407,0.844,408,0.731,409,0.731,410,0.704,411,0.844,412,0.704,413,0.758,414,0.844,415,0.731,416,0.731,417,0.679,418,0.844,419,0.731,420,0.844,421,0.731,422,0.844,423,0.731,424,0.731,425,1.201,426,0.731,427,0.679,428,0.844,429,0.731,430,0.844,431,0.731,432,1.118,433,0.844,434,0.731,435,1.294,436,1.225,437,1.201,438,0.704,439,0.731,440,1.201,441,0.731,442,0.731,443,0.731,444,0.731,445,0.844,446,0.731,447,0.786,448,0.814,449,0.704,450,0.814,451,0.844,455,1.118,470,2.152,491,1.362,492,1.126,499,4.955,510,1.864,517,3.499,519,1.398,546,1.864,596,6.329,598,2.667,599,3.073,616,3.88,619,3.526,620,2.906,638,3.073,667,1.855,673,0.584,838,5.496,905,3.045,906,4.982,907,5.045,908,4.077,909,5.045,910,5.8,911,5.8,912,6.319,913,4.227,914,6.319,915,6.319,916,5.496,917,4.55,918,4.982,919,4.982,920,4.982,921,6.319,922,3.501,923,3.501,924,3.501,925,4.982,926,3.501,927,3.501,928,5.496,929,2.559,930,5.496,931,4.227,932,3.501,933,4.334,934,5.441,935,3.501,936,3.501,937,4.982,938,3.501,939,2.745,940,4.982,941,3.501,942,6.319,943,2.559,944,6.319,945,4.982,946,4.982,947,3.907,948,4.982,949,4.982,950,2.939,951,5.496,952,4.982,953,3.501,954,2.939,955,4.982,956,4.982,957,3.588,958,3.501,959,3.501,960,3.501,961,3.907,962,3.501,963,3.501,964,3.501,965,3.501,966,3.501,967,3.501,968,1.213,969,1.855,970,4.334,971,3.501,972,2.065,973,3.045,974,3.501,975,6.319,976,2.342,977,3.939,978,3.501,979,1.418,980,2.193,981,2.342,982,3.501,983,3.501,984,2.745,985,5.8,986,3.045,987,3.045,988,3.045,989,3.501,990,3.501,991,3.501,992,3.501,993,3.501,994,3.501,995,3.501,996,3.501,997,4.334,998,4.982,999,4.982]],["title/classes/DataMapperInitializationModel.html",[0,0.195,55,2.661]],["body/classes/DataMapperInitializationModel.html",[0,0.318,1,2.026,2,0.808,3,0.086,4,0.086,5,0.074,6,0.215,7,0.126,8,2.328,9,1.31,10,2.163,11,2.535,12,2.535,13,2.535,14,0.11,15,0.47,16,2.535,17,0.358,18,0.014,19,0.275,21,0.409,22,2.947,23,2.535,24,1.908,25,2.947,26,1.713,27,2.163,28,2.493,29,0.321,30,1.76,31,3.364,32,0.855,33,1.831,34,1.556,35,1.487,36,2.626,37,2.163,38,3.475,39,2.776,40,2.163,41,3.272,42,2.163,43,0.78,44,1.003,45,2.264,46,3.096,47,4.075,48,1.423,49,3.096,50,2.328,51,2.328,52,2.626,53,2.328,54,0.184,55,4.075,56,4.349,57,3.689,58,3.272,59,1.018,60,3.994,61,3.388,62,4.349,63,4.386,64,2.535,65,2.535,66,4.349,67,4.349,68,0.55,69,4.349,70,4.349,71,4.349,72,4.349,73,4.349,74,4.349,75,1.423,76,2.535,77,1.908,78,4.349,79,4.075,80,1.079,81,2.328,82,2.328,83,2.328,84,2.163,85,2.328,86,4.349,87,2.535,88,1.805,89,2.535,90,2.535,91,4.349,92,4.349,93,4.349,94,4.349,95,4.349,96,4.349,97,4.349,98,1.908,99,2.328,100,2.328,101,2.163,102,4.349,103,1.066,104,4.349,105,1.522,106,2.328,107,2.535,108,2.328,109,2.535,110,2.328,111,2.535,112,2.328,113,3.272,114,1.63,115,0.174,116,2.33,117,0.876,118,2.328,119,2.328,120,2.328,121,2.328,122,3.689,123,0.883,124,2.011,125,2.535,126,2.535,127,2.535,128,2.535,129,2.535,130,2.535,131,2.535,132,2.535,133,0.518,134,1.036,135,1.209,136,2.535,137,1.487,138,2.026,139,2.328,140,2.163,141,2.535,142,2.328,143,2.328,144,2.535,145,2.026,146,2.328,147,2.328,148,2.535,149,2.535,150,0.548,151,2.535,152,2.535,153,2.026,154,2.535,155,2.535,156,2.535,157,2.535,158,2.535,159,2.535,160,1.423,161,2.535,162,2.535,163,2.535,164,2.026,165,2.535,166,2.535,167,2.535,168,2.535,169,2.026,170,2.535,171,2.328,172,2.535,173,2.535,174,2.328,175,0.4,176,3.689,177,2.535,178,0.377,179,1.365,180,2.535,181,2.668,182,4.776,183,2.535,184,2.535,185,2.328,186,2.535,187,2.328,188,2.535,189,2.535,190,2.535,191,2.328,192,2.535,193,0.789,194,2.626,195,2.535,196,2.535,197,4.776,198,2.535,199,5.076,200,2.535,201,2.535,202,2.535,203,2.535,204,2.535,205,2.535,206,3.689,207,2.535,208,2.535,209,2.535,210,2.535,211,3.689,212,2.535,213,2.535,214,2.535,215,2.535,216,2.535,217,2.535,218,5.297,219,4.349,220,2.163,221,3.689,222,1.908,223,2.535,224,3.994,225,2.535,226,4.349,227,2.328,228,3.689,229,2.535,230,2.535,231,2.535,232,3.689,233,2.535,234,2.535,235,2.535,236,2.535,237,2.535,238,3.689,239,3.689,240,2.535,241,4.075,242,3.689,243,3.689,244,2.535,245,2.535,246,1.487,247,1.805,248,1.908,249,2.163,250,2.328,251,1.357,252,2.535,253,2.493,254,3.388,255,4.367,256,2.535,257,2.535,258,1.556,259,2.535,260,2.163,261,1.805,262,1.423,263,0.675,264,0.675,265,1.713,266,2.535,267,2.535,268,2.535,269,2.535,270,2.535,271,4.349,272,4.349,273,2.535,274,2.535,275,2.535,276,2.535,277,3.148,278,2.535,279,2.535,280,2.328,281,2.535,282,2.026,283,2.535,284,2.535,285,2.535,286,2.535,287,0.005,288,0.008,289,0.005,305,0.809,306,0.695,1000,4.705,1001,1.357,1002,3.233,1003,3.233,1004,3.233,1005,3.233,1006,3.233,1007,3.233,1008,3.233,1009,3.233,1010,3.233,1011,3.233,1012,3.233,1013,3.233,1014,3.233,1015,3.233,1016,3.233,1017,3.233,1018,3.233,1019,3.233,1020,3.233,1021,3.233,1022,3.233,1023,3.233,1024,3.233]],["title/modules/DataMapperModule.html",[1025,2.661,1026,2.661]],["body/modules/DataMapperModule.html",[0,0.163,3,0.088,4,0.088,5,0.109,6,0.127,7,0.075,18,0.014,19,0.113,21,0.45,22,3.007,24,2.832,25,2.083,26,1.761,27,2.224,28,1.761,30,1.796,31,1.403,33,2.854,34,2.31,35,2.208,36,4.093,37,3.212,38,4.1,39,4.327,40,3.212,41,4.327,42,3.212,45,1.599,46,1.855,48,1.464,49,4.017,50,2.394,51,2.394,52,4.017,53,2.394,54,0.242,59,0.416,103,0.473,113,1.961,123,0.435,124,1.385,175,0.166,193,0.71,262,1.464,287,0.006,288,0.008,289,0.006,291,3.77,308,0.313,311,0.313,314,0.492,319,3.765,320,2.083,323,0.492,332,3.77,339,1.464,373,0.72,382,1.502,384,1.423,387,1.502,388,0.596,390,1.605,392,1.639,393,1.069,394,0.72,396,1.423,398,1.423,400,1.372,402,1.448,406,1.476,408,1.502,409,1.423,412,1.448,415,1.423,416,1.423,417,0.645,419,1.423,421,1.423,423,1.423,424,1.423,426,1.423,427,0.645,429,1.502,431,1.423,432,0.746,434,1.423,435,0.904,436,1.478,438,1.533,439,1.502,441,1.423,442,1.502,443,1.502,444,1.423,446,1.423,449,1.372,489,1.761,492,1.544,501,1.796,505,2.394,653,2.892,654,2.607,656,2.607,657,3.545,658,4.839,684,2.224,693,2.394,694,1.676,696,2.607,697,2.607,698,2.607,699,2.394,700,4.058,701,2.394,702,4.704,703,2.394,704,3.457,705,2.224,706,2.394,707,2.394,708,2.083,709,2.394,710,2.394,711,1.761,712,2.083,713,2.394,714,2.394,715,2.394,716,2.394,717,3.457,718,2.394,719,2.394,720,2.394,721,2.394,722,2.394,723,2.394,724,2.083,725,2.224,726,2.394,727,2.394,728,2.394,729,2.394,854,4.713,862,3.765,954,1.961,1025,3.212,1026,5.675,1027,2.224,1028,2.083,1029,4.419,1030,4.444,1031,4.419,1032,2.892,1033,2.892,1034,2.892,1035,2.892,1036,4.562,1037,3.765,1038,3.457,1039,2.607,1040,4.801,1041,4.801,1042,5.635,1043,5.635,1044,3.325,1045,2.892,1046,5.368,1047,6.116,1048,4.801,1049,3.325,1050,4.801,1051,2.394,1052,3.325,1053,4.176,1054,3.325,1055,4.801,1056,4.176,1057,4.801,1058,2.892,1059,4.801,1060,3.325,1061,3.325,1062,3.325,1063,3.325,1064,3.325,1065,3.325,1066,5.635,1067,5.635,1068,3.325,1069,3.325,1070,4.713,1071,3.325,1072,3.325,1073,3.325,1074,7.691,1075,2.892,1076,4.801,1077,3.325,1078,3.325,1079,3.325,1080,3.325,1081,3.457,1082,4.801,1083,3.325,1084,2.607,1085,3.325,1086,3.325,1087,3.325,1088,4.176,1089,2.892,1090,2.394,1091,2.892,1092,2.607,1093,3.325,1094,3.325,1095,3.325,1096,3.325,1097,4.801,1098,4.801,1099,2.607,1100,0.925,1101,1.197,1102,2.892,1103,3.325,1104,3.325,1105,3.325,1106,2.224,1107,3.325,1108,3.765,1109,2.892,1110,3.765,1111,2.892,1112,3.765,1113,2.892,1114,3.765,1115,2.892,1116,3.765,1117,2.892,1118,3.765,1119,2.892,1120,3.325,1121,2.607,1122,4.176,1123,4.801,1124,3.765]],["title/classes/DataMapperUtil.html",[0,0.195,1125,1.751]],["body/classes/DataMapperUtil.html",[0,0.212,2,1.078,3,0.114,4,0.152,5,0.18,6,0.209,7,0.123,9,1.747,14,0.22,15,0.487,17,0.359,18,0.014,19,0.267,21,0.233,54,0.13,59,0.72,68,0.552,75,2.532,80,2.62,115,0.43,117,0.658,124,2.398,135,1.29,150,0.487,175,0.387,193,0.674,251,2.075,287,0.007,288,0.01,289,0.007,305,0.599,306,0.514,308,0.542,311,0.723,344,3.627,345,3.848,358,0.878,359,0.878,393,1.371,470,1.784,501,2.152,579,2.075,673,1.079,692,1.04,749,3.382,783,2.767,822,3.394,957,4.143,1001,1.991,1125,2.532,1126,6.884,1127,3.106,1128,6.473,1129,6.473,1130,5.753,1131,5.526,1132,5.753,1133,5.004,1134,5.753,1135,5.753,1136,5.753,1137,5.753,1138,5.753,1139,5.753,1140,4.313,1141,5.753,1142,4.313,1143,4.313,1144,5.753,1145,4.313,1146,4.313,1147,3.382,1148,4.313,1149,5.753,1150,5.753,1151,4.313,1152,3.106,1153,4.313,1154,2.407,1155,5.753,1156,6.155,1157,4.313,1158,3.848,1159,5.004,1160,5.004,1161,2.687,1162,5.631,1163,5.18,1164,4.313,1165,4.313,1166,5.631,1167,5.753,1168,5.415,1169,4.313,1170,4.511,1171,4.313,1172,5.753,1173,4.313,1174,3.751,1175,2.885,1176,4.313,1177,4.313,1178,4.313,1179,3.751,1180,2.885,1181,3.751,1182,5.753,1183,4.313,1184,5.753,1185,5.753,1186,5.004,1187,5.004,1188,7.193,1189,5.753,1190,5.641,1191,7.193,1192,4.313,1193,5.004,1194,5.004,1195,5.753,1196,5.004,1197,5.753,1198,5.753,1199,4.511,1200,4.313,1201,4.313,1202,4.313,1203,4.313,1204,4.661,1205,4.661,1206,5.753,1207,5.753,1208,4.313,1209,5.753,1210,4.313,1211,4.313,1212,4.313,1213,4.313,1214,3.382,1215,4.313,1216,1.747,1217,4.313,1218,4.313,1219,4.313,1220,6.473,1221,4.313,1222,5.753,1223,4.313,1224,3.382]],["title/components/DocumentFieldDetailComponent.html",[361,0.182,400,0.8]],["body/components/DocumentFieldDetailComponent.html",[0,0.203,3,0.11,4,0.072,5,0.114,6,0.212,7,0.126,14,0.093,15,0.351,17,0.348,18,0.014,19,0.272,21,0.383,29,0.69,32,1.017,45,1.313,48,1.201,54,0.082,59,0.916,68,0.494,103,0.388,105,0.682,115,0.403,117,0.797,123,0.656,133,0.804,134,0.937,150,0.576,175,0.396,178,0.609,179,1.151,193,0.792,251,0.787,255,1.709,263,1.047,264,1.047,282,1.709,287,0.005,288,0.008,289,0.008,305,0.284,306,0.244,308,0.473,311,0.726,314,0.404,323,0.404,343,2.139,358,0.812,359,0.812,361,0.23,362,0.569,363,0.964,364,0.658,365,0.658,367,0.612,368,1.639,369,0.834,370,0.658,371,2.373,372,0.964,373,0.59,374,1,375,0.964,376,0.569,377,1.351,378,0.658,379,0.658,380,0.59,381,0.658,382,0.569,383,0.658,384,0.569,385,0.658,386,0.658,387,1.376,388,0.707,389,1.453,390,0.569,391,0.658,392,0.569,393,0.718,394,0.59,395,0.658,396,0.569,397,0.658,398,0.569,399,0.658,400,1.401,401,1.351,402,0.549,403,0.635,404,1.213,405,0.658,406,0.59,407,0.658,408,1.376,409,1.169,410,0.549,411,0.658,412,0.549,413,0.59,414,0.658,415,0.569,416,0.569,417,0.529,418,0.658,419,0.569,420,0.658,421,0.569,422,0.658,423,0.569,424,0.569,425,1,426,0.569,427,0.804,428,0.658,429,0.569,430,0.658,431,0.569,432,0.93,433,0.658,434,0.569,435,0.665,436,0.529,437,1,438,1.327,439,0.569,440,1,441,0.569,442,1.376,443,0.569,444,0.569,445,0.658,446,0.569,447,0.612,448,0.635,449,0.549,450,0.635,451,0.658,455,0.93,470,2.319,472,1.876,482,1.68,488,1.255,490,1.062,491,1.062,492,0.878,502,1.445,508,4.393,509,3.252,510,1.551,516,3.252,517,3.51,519,1.453,521,2.373,522,4.302,523,2.373,524,2.139,525,1.709,528,2.529,542,1.709,562,2.529,566,1.965,568,2.986,569,3.252,572,4.393,615,3.933,617,2.799,654,2.139,667,1.445,673,0.836,690,3.607,691,2.373,692,0.658,694,1.376,749,3.252,751,2.373,752,2.373,761,1.255,824,2.314,841,4.393,865,1.201,871,3.252,896,2.598,931,1.825,976,1.825,977,1.61,1051,1.965,1070,3.612,1225,6.973,1226,1.825,1227,2.986,1228,2.986,1229,5.016,1230,5.016,1231,4.363,1232,3.607,1233,3.607,1234,4.147,1235,3.607,1236,5.603,1237,5.603,1238,4.147,1239,5.603,1240,5.603,1241,5.603,1242,5.603,1243,5.603,1244,5.603,1245,3.607,1246,4.147,1247,3.607,1248,3.252,1249,2.441,1250,2.728,1251,4.874,1252,4.147,1253,3.607,1254,2.373,1255,2.728,1256,2.139,1257,2.373,1258,3.607,1259,2.728,1260,3.607,1261,4.874,1262,2.728,1263,4.147,1264,2.728,1265,3.607,1266,2.373,1267,2.728,1268,2.728,1269,2.728,1270,4.147,1271,2.728,1272,2.728,1273,2.728,1274,2.728,1275,2.728,1276,2.728,1277,4.363,1278,2.728,1279,2.728,1280,4.147,1281,2.598,1282,4.147,1283,4.147,1284,5.603,1285,4.147,1286,4.147,1287,4.147,1288,2.728,1289,4.147,1290,2.728,1291,3.607,1292,2.373,1293,2.657,1294,4.147,1295,2.139,1296,4.147,1297,2.728,1298,2.728,1299,2.728,1300,1.445,1301,1.825,1302,2.728,1303,2.728,1304,2.728,1305,2.728,1306,6.596,1307,2.728,1308,3.607,1309,2.373,1310,2.728,1311,2.728,1312,2.728,1313,4.363,1314,2.728,1315,2.373,1316,2.373,1317,2.728,1318,2.728,1319,2.373,1320,2.728,1321,2.373,1322,2.728,1323,2.728,1324,2.728,1325,2.139,1326,2.373,1327,2.373,1328,2.373,1329,2.373,1330,4.725,1331,5.016,1332,5.52,1333,3.252,1334,4.035,1335,4.147,1336,2.728,1337,2.728,1338,4.147,1339,4.147,1340,4.147,1341,2.728,1342,2.598,1343,2.728,1344,2.728,1345,2.728,1346,2.373,1347,1.825,1348,3.607,1349,5.016,1350,2.139,1351,2.373,1352,2.728,1353,5.603,1354,4.147,1355,2.728,1356,5.016,1357,2.373,1358,2.728,1359,2.728,1360,4.57,1361,2.728,1362,2.373,1363,2.373,1364,1.825,1365,2.139,1366,2.728,1367,4.874,1368,4.363,1369,2.728,1370,2.728,1371,2.728,1372,2.728,1373,2.728,1374,2.728,1375,1.445,1376,1.825,1377,1.709,1378,1.825,1379,2.728,1380,5.016,1381,2.728,1382,2.986,1383,3.607,1384,2.774,1385,2.774,1386,5.242,1387,4.147,1388,5.242,1389,2.728,1390,3.355,1391,1.825,1392,3.355,1393,4.147,1394,4.245,1395,2.728,1396,3.607,1397,4.147,1398,2.728,1399,4.147,1400,2.728,1401,2.728,1402,2.728,1403,1.825,1404,2.774,1405,5.603,1406,2.728,1407,2.728,1408,2.728,1409,2.728,1410,2.728,1411,3.607,1412,2.774,1413,2.543,1414,2.728,1415,1.965,1416,1.825,1417,1.825,1418,2.728,1419,2.728,1420,2.728,1421,2.728,1422,2.728,1423,2.373,1424,2.728,1425,2.728,1426,2.598,1427,5.603]],["title/classes/DocumentInitializationModel.html",[0,0.195,113,2.347]],["body/classes/DocumentInitializationModel.html",[0,0.327,1,2.182,2,0.87,3,0.092,4,0.092,5,0.079,6,0.205,7,0.121,8,2.508,9,2.342,10,2.33,11,2.731,12,2.731,13,2.731,14,0.118,15,0.49,16,2.731,17,0.358,18,0.014,19,0.262,21,0.415,22,3.109,23,2.731,24,2.055,25,3.109,26,1.845,27,2.33,28,2.629,29,0.345,30,1.857,31,3.393,32,0.891,33,1.931,34,1.675,35,1.601,36,2.77,37,2.33,38,3.623,39,2.928,40,2.33,41,3.412,42,2.33,43,0.84,44,1.08,45,2.782,46,3.866,47,4.769,48,1.533,49,3.227,50,2.508,51,2.508,52,2.77,53,2.508,54,0.19,55,3.869,56,2.731,57,2.731,58,2.055,59,1.003,60,2.508,61,2.508,62,2.731,63,3.574,64,2.731,65,2.731,66,2.731,67,2.731,68,0.549,69,2.731,70,2.731,71,2.731,72,2.731,73,2.731,74,2.731,75,1.533,76,2.731,77,2.055,78,2.731,79,3.32,80,1.162,81,2.508,82,2.508,83,2.508,84,2.33,85,2.508,86,2.731,87,2.731,88,1.944,89,2.731,90,2.731,91,2.731,92,2.731,93,2.731,94,2.731,95,2.731,96,2.731,97,2.731,98,2.055,99,2.508,100,2.508,101,2.33,102,2.731,103,1.082,104,2.731,105,1.24,106,2.508,107,2.731,108,2.508,109,2.731,110,2.508,111,2.731,112,2.508,113,3.719,114,2.916,115,0.312,116,2.566,117,0.894,118,4.164,119,4.164,120,4.164,121,4.164,122,4.943,123,0.905,124,2.056,125,2.731,126,2.731,127,2.731,128,2.731,129,2.731,130,2.731,131,2.731,132,2.731,133,0.558,134,1.081,135,1.245,136,2.731,137,1.601,138,2.182,139,2.508,140,2.33,141,2.731,142,2.508,143,2.508,144,2.731,145,2.182,146,2.508,147,2.508,148,2.731,149,2.731,150,0.565,151,2.731,152,2.731,153,2.182,154,2.731,155,2.731,156,2.731,157,2.731,158,2.731,159,2.731,160,1.533,161,2.731,162,2.731,163,2.731,164,2.182,165,2.731,166,2.731,167,2.731,168,2.731,169,2.182,170,2.731,171,2.508,172,2.731,173,2.731,174,2.508,175,0.403,176,3.892,177,2.731,178,0.397,179,1.47,180,2.731,181,2.782,182,4.943,183,2.731,184,2.731,185,2.508,186,2.731,187,2.508,188,2.731,189,2.731,190,2.731,191,2.508,192,2.731,193,0.801,194,2.77,195,2.731,196,2.731,197,4.943,198,2.731,199,5.225,200,2.731,201,2.731,202,2.731,203,2.731,204,2.731,205,2.731,206,3.892,207,2.731,208,2.731,209,2.731,210,2.731,211,3.892,212,2.731,213,2.731,214,2.731,215,2.731,216,2.731,217,2.731,218,5.432,219,4.535,220,2.33,221,3.892,222,2.055,223,2.731,224,4.164,225,2.731,226,4.535,227,2.508,228,3.892,229,2.731,230,2.731,231,2.731,232,3.892,233,2.731,234,2.731,235,2.731,236,2.731,237,2.731,238,3.892,239,3.892,240,2.731,241,4.217,242,3.892,243,3.892,244,2.731,245,2.731,246,1.601,247,1.944,248,2.055,249,2.33,250,2.508,251,1.431,252,2.731,253,2.629,254,3.574,255,4.466,256,2.731,257,2.731,258,1.675,259,2.731,260,2.33,261,1.944,262,1.533,263,0.727,264,0.727,265,1.845,266,2.731,267,2.731,268,2.731,269,2.731,270,2.731,271,4.535,272,4.535,273,2.731,274,2.731,275,2.731,276,2.731,277,3.32,278,2.731,279,2.731,280,2.508,281,2.731,282,2.182,283,2.731,284,2.731,285,2.731,286,2.731,287,0.006,288,0.008,289,0.006,305,0.363,306,0.311,1428,3.482,1429,3.482,1430,3.482,1431,3.482,1432,3.482,1433,3.482,1434,3.482,1435,3.482,1436,3.482,1437,3.482,1438,3.482,1439,3.482]],["title/components/EmptyModalBodyComponent.html",[361,0.182,402,0.8]],["body/components/EmptyModalBodyComponent.html",[0,0.311,3,0.11,4,0.148,5,0.094,6,0.168,7,0.114,14,0.141,17,0.257,18,0.014,19,0.191,21,0.383,29,0.764,32,0.864,43,1.53,44,1.286,54,0.192,59,0.952,68,0.277,103,0.902,115,0.342,117,0.778,123,0.732,133,1.138,134,0.775,150,0.62,175,0.316,178,0.586,181,1.995,193,0.661,262,1.826,263,0.866,264,0.866,287,0.007,288,0.009,289,0.007,304,1.995,308,0.528,311,0.528,314,0.614,322,1.384,323,0.614,324,1.586,344,2.091,361,0.325,362,0.866,363,1.303,364,1,365,1,367,0.931,368,1.688,369,1.127,370,1,372,1.303,373,0.898,374,1.351,375,1.303,376,0.866,377,1.639,378,1,379,1,380,0.898,381,1,382,0.866,383,1,384,0.866,385,1,386,1,387,0.866,388,0.644,389,1.712,390,0.866,391,1,392,0.866,393,0.971,394,0.898,395,1,396,0.866,397,1,398,0.866,399,1,400,0.834,401,1.639,402,1.428,403,1.476,404,1.668,405,1,406,0.898,407,1,408,0.866,409,0.866,410,0.834,411,1,412,0.834,413,0.898,414,1,415,0.866,416,0.866,417,0.804,418,1,419,0.866,420,1,421,0.866,422,1,423,0.866,424,0.866,425,1.351,426,0.866,427,0.804,428,1,429,0.866,430,1,431,0.866,432,1.257,433,1,434,0.866,435,1.018,436,1.231,437,1.351,438,1.127,439,0.866,440,1.351,441,0.866,442,0.866,443,0.866,444,0.866,445,1,446,0.866,447,0.931,448,0.965,449,0.834,450,0.965,451,1,454,2.996,455,0.931,462,2.996,464,2.996,472,2.543,492,1.334,517,2.091,519,1.834,599,2.969,607,1.907,608,2.447,616,2.775,619,2.315,623,3.306,638,3.362,667,3.601,668,2.775,669,2.826,750,2.447,865,1.826,908,2.969,972,3.306,1216,1.68,1293,2.969,1300,2.197,1440,3.744,1441,2.598,1442,4.035,1443,4.147,1444,3.608,1445,4.547,1446,4.976,1447,4.394,1448,2.969,1449,3.252,1450,2.197,1451,2.775,1452,2.775,1453,3.252,1454,3.252,1455,3.744,1456,3.252,1457,3.252,1458,2.091,1459,2.775,1460,2.775,1461,3.252,1462,3.749,1463,2.775,1464,2.775,1465,2.775,1466,2.775,1467,3.252,1468,3.252,1469,3.252,1470,3.252,1471,3.252,1472,4.976,1473,4.394,1474,3.252,1475,3.252,1476,3.252,1477,3.252,1478,3.252,1479,4.394,1480,4.246,1481,3.252,1482,3.252,1483,3.252,1484,4.394,1485,3.252,1486,4.976,1487,4.976,1488,3.252,1489,3.252,1490,3.252,1491,3.252,1492,3.252,1493,4.394,1494,3.252,1495,4.394,1496,3.252,1497,4.394,1498,3.252,1499,3.252,1500,3.252,1501,3.252,1502,3.252,1503,3.252,1504,3.252,1505,2.775,1506,3.749,1507,2.775,1508,3.252,1509,3.252,1510,2.775,1511,3.252,1512,3.252,1513,4.394,1514,4.394,1515,3.252,1516,3.252,1517,3.252,1518,3.252,1519,3.252,1520,2.775,1521,2.987,1522,3.252,1523,2.775]],["title/classes/EnumValue.html",[0,0.195,1524,3.119]],["body/classes/EnumValue.html",[0,0.268,2,0.999,3,0.106,4,0.106,5,0.091,6,0.165,7,0.097,14,0.136,15,0.463,17,0.285,18,0.014,19,0.186,21,0.295,30,1.496,31,2.307,32,0.616,45,1.924,48,1.761,54,0.165,59,1.015,68,0.546,75,1.761,103,1.053,105,0.999,115,0.378,116,1.44,117,0.901,124,2.087,133,0.641,135,1.021,137,1.839,145,3.425,150,0.693,164,2.505,169,2.505,175,0.413,178,0.438,193,0.835,194,2.232,253,2.119,287,0.007,288,0.009,289,0.007,306,0.358,388,0.701,427,0.776,493,4.842,501,1.496,511,3.479,582,3.657,673,1.038,681,2.772,708,4.194,1001,1.577,1161,2.424,1348,3.479,1364,2.675,1377,2.505,1386,3.479,1388,3.479,1524,4.884,1525,3.479,1526,6.229,1527,3.999,1528,3.999,1529,3.999,1530,3.999,1531,3.479,1532,2.675,1533,3.479,1534,3.479,1535,3.479,1536,3.999,1537,3.479,1538,3.999,1539,2.359,1540,3.999,1541,3.999,1542,3.999,1543,3.999,1544,3.999,1545,3.136,1546,3.136,1547,3.999,1548,3.479,1549,3.479,1550,5.418,1551,4.755,1552,3.999,1553,3.999,1554,3.999,1555,5.25,1556,3.136,1557,3.999,1558,3.999,1559,3.479,1560,6.561,1561,3.999,1562,3.999,1563,5.467,1564,3.999,1565,3.999,1566,5.467,1567,1.496,1568,3.999,1569,3.999,1570,2.88,1571,3.999,1572,3.479,1573,3.999,1574,2.359,1575,3.999,1576,3.999,1577,3.999,1578,3.136,1579,3.999,1580,5.335,1581,3.999,1582,3.999,1583,3.999,1584,3.999,1585,5.467,1586,3.999,1587,4.755,1588,3.3,1589,3.999,1590,6.229,1591,5.467,1592,6.444,1593,3.999,1594,3.999,1595,3.999,1596,3.479,1597,4.287,1598,5.467,1599,4.287,1600,4.755,1601,3.999,1602,5.467,1603,3.999,1604,5.418,1605,3.999,1606,3.999,1607,5.467,1608,3.999,1609,3.999,1610,3.999,1611,1.556,1612,3.479,1613,3.136,1614,3.999,1615,3.999,1616,3.999,1617,3.999,1618,3.999,1619,3.999,1620,3.999,1621,3.999,1622,5.467,1623,3.999,1624,3.937,1625,3.999,1626,3.999,1627,3.999,1628,3.999,1629,3.999,1630,3.999,1631,5.467,1632,3.479,1633,3.999,1634,3.479,1635,3.999,1636,5.467,1637,3.479,1638,3.999,1639,4.755]],["title/injectables/ErrorHandlerService.html",[33,1.548,290,2.006]],["body/injectables/ErrorHandlerService.html",[0,0.15,3,0.081,4,0.081,5,0.07,6,0.21,7,0.123,9,2.684,14,0.104,15,0.383,17,0.339,18,0.014,19,0.27,21,0.342,29,0.773,33,2.579,43,1.967,44,0.95,54,0.093,58,2.668,59,0.383,68,0.505,80,1.982,103,0.436,114,2.994,115,0.379,117,0.518,123,0.4,124,1.551,133,1.258,135,1.005,150,0.26,175,0.374,178,0.621,181,2.587,193,0.471,251,2.029,258,2.176,287,0.005,288,0.008,289,0.005,290,2.281,292,2.05,304,3.188,305,0.56,306,0.642,308,0.426,311,0.726,314,0.454,322,1.023,323,0.454,358,0.805,359,0.805,388,0.619,404,1.523,427,0.877,435,1.235,470,1.403,501,2.632,544,3.026,638,2.848,673,0.511,705,3.026,711,1.623,822,4.67,871,4.966,896,4.151,908,4.42,913,3.972,928,3.934,929,2.96,950,2.668,968,2.195,972,4.044,979,1.241,984,2.403,1100,1.958,1101,1.103,1174,3.934,1309,3.934,1319,5.164,1413,3.084,1417,3.026,1448,4.049,1455,1.808,1599,3.547,1640,6.886,1641,2.665,1642,3.934,1643,6.255,1644,2.614,1645,3.002,1646,5.164,1647,6.627,1648,4.523,1649,3.934,1650,3.934,1651,4.523,1652,2.011,1653,2.711,1654,5.508,1655,5.937,1656,4.523,1657,4.523,1658,4.523,1659,5.173,1660,4.523,1661,4.523,1662,5.937,1663,4.523,1664,6.627,1665,4.523,1666,4.523,1667,5.377,1668,5.377,1669,5.377,1670,4.523,1671,5.937,1672,5.937,1673,5.937,1674,5.937,1675,4.523,1676,4.523,1677,4.523,1678,4.523,1679,4.523,1680,4.523,1681,5.164,1682,5.937,1683,3.064,1684,3.064,1685,1.909,1686,5.377,1687,3.064,1688,4.523,1689,3.064,1690,4.523,1691,3.064,1692,3.064,1693,4.523,1694,3.064,1695,4.56,1696,3.064,1697,3.547,1698,4.523,1699,4.523,1700,3.547,1701,4.655,1702,4.523,1703,4.523,1704,4.523,1705,2.565,1706,3.064,1707,2.776,1708,4.523,1709,5.517,1710,3.064,1711,4.523,1712,3.064,1713,4.236,1714,4.523,1715,3.064,1716,4.523,1717,6.332,1718,3.064,1719,5.164,1720,4.523,1721,4.523,1722,4.523,1723,3.064,1724,4.523,1725,3.064,1726,4.523,1727,4.523,1728,4.523,1729,3.064,1730,3.547,1731,6.627,1732,4.523,1733,3.026,1734,3.026,1735,3.064,1736,3.064,1737,3.064,1738,3.064,1739,5.153,1740,3.064,1741,4.523,1742,5.164,1743,3.026,1744,3.064,1745,3.064,1746,4.523,1747,4.523,1748,3.064,1749,3.064,1750,2.665,1751,3.064,1752,3.064,1753,3.064,1754,3.547,1755,1.808,1756,5.937,1757,2.665,1758,6.627,1759,3.064,1760,2.665,1761,3.064,1762,6.627,1763,3.064,1764,5.937,1765,3.064,1766,3.064,1767,3.064,1768,6.332,1769,4.523,1770,3.872,1771,3.934,1772,3.064,1773,2.665,1774,4.523,1775,3.064,1776,3.064,1777,3.064,1778,4.523,1779,3.064,1780,1.349,1781,3.064,1782,3.064,1783,3.064]],["title/classes/ErrorInfo.html",[0,0.195,43,0.959]],["body/classes/ErrorInfo.html",[0,0.265,2,1.347,3,0.19,4,0.143,5,0.123,6,0.218,7,0.128,14,0.183,15,0.562,17,0.378,18,0.014,19,0.279,21,0.291,29,0.764,43,1.6,54,0.227,68,0.5,105,1.347,115,0.291,124,2.074,133,1.258,175,0.269,287,0.009,288,0.011,289,0.009,305,0.561,306,0.482,358,0.617,359,0.617,388,0.653,435,1.064,673,1.107,822,4.428,896,4.158,943,2.688,968,2.492,1001,1.555,1100,2.001,1161,2.799,1248,5.205,1458,3.627,1613,4.227,1643,5.205,1645,2.913,1652,2.691,1705,2.691,1707,2.913,1709,5.64,1784,4.227,1785,7.192,1786,7.192,1787,6.637,1788,7.192,1789,6.637,1790,6.637,1791,5.39,1792,5.39,1793,2.799,1794,5.39,1795,5.39,1796,5.39,1797,5.39,1798,5.39,1799,5.39,1800,5.39,1801,5.39,1802,3.377,1803,3.627,1804,5.774,1805,5.774,1806,5.774,1807,5.205,1808,6.637,1809,5.39,1810,5.39]],["title/modules/ExampleAppModule.html",[1025,2.661,1811,2.864]],["body/modules/ExampleAppModule.html",[0,0.273,3,0.147,4,0.147,5,0.154,7,0.087,18,0.014,21,0.436,54,0.168,262,2.451,287,0.009,288,0.011,289,0.009,314,0.824,320,3.488,339,2.451,362,1.723,369,1.12,373,1.205,380,1.787,684,3.725,693,4.009,694,2.807,696,4.366,697,4.366,698,4.366,699,4.009,700,5.254,701,4.009,702,5.356,703,4.009,704,4.875,705,3.725,706,4.009,707,4.009,708,3.488,709,4.009,710,4.009,711,2.949,712,3.488,713,4.009,714,4.009,715,4.009,716,4.009,717,4.875,718,4.009,719,4.009,720,4.009,721,4.009,722,4.009,723,4.009,724,3.488,725,3.725,726,4.009,727,4.009,728,4.009,729,4.009,854,4.875,862,4.366,954,3.285,1025,3.725,1026,5.204,1027,3.725,1028,3.488,1029,5.721,1030,5.254,1031,4.366,1037,5.309,1038,4.009,1045,4.843,1046,5.889,1051,4.009,1053,5.889,1056,5.889,1058,4.843,1121,5.309,1301,3.725,1811,5.946,1812,4.843,1813,4.843,1814,5.567,1815,4.843,1816,5.567,1817,5.567,1818,6.77,1819,5.567,1820,5.567,1821,5.567,1822,5.567,1823,5.567,1824,5.567,1825,5.567]],["title/classes/Examples.html",[0,0.195,863,2.864]],["body/classes/Examples.html",[0,0.302,2,1.536,3,0.163,4,0.163,5,0.14,6,0.19,7,0.112,14,0.209,15,0.608,18,0.014,19,0.209,54,0.186,84,5.091,124,2.195,261,4.008,287,0.01,288,0.012,289,0.01,305,0.64,306,0.55,863,5.172,1826,5.348,1827,6.248,1828,7.182,1829,7.182,1830,7.182,1831,5.172,1832,7.182,1833,8.09,1834,8.09,1835,6.248,1836,8.09,1837,7.182,1838,5.632,1839,6.148]],["title/classes/ExpressionNode.html",[0,0.195,1840,2.492]],["body/classes/ExpressionNode.html",[0,0.286,2,0.631,3,0.067,4,0.142,5,0.058,6,0.17,7,0.1,14,0.241,15,0.331,17,0.246,18,0.014,19,0.209,21,0.314,29,0.577,33,0.982,34,1.215,35,1.161,43,0.609,54,0.176,68,0.528,80,2.363,103,0.359,105,0.631,114,1.273,115,0.136,123,0.625,124,1.678,133,1.063,134,0.73,135,1.323,150,0.544,175,0.391,178,0.313,179,1.066,193,0.832,246,1.161,251,2.041,258,1.88,287,0.004,288,0.007,289,0.004,305,0.263,306,0.226,308,0.368,311,0.45,322,0.843,323,0.374,358,0.289,359,0.289,388,0.577,410,0.508,501,1.462,519,0.942,546,1.462,562,1.97,607,1.797,659,2.305,669,1.273,673,1.321,681,1.788,692,1.969,711,1.338,761,2.951,778,4.926,783,1.215,809,1.49,812,1.49,865,1.72,867,1.49,872,2.448,929,1.583,968,0.875,969,1.338,979,1.583,1001,2.005,1100,1.619,1154,3.581,1161,0.982,1175,1.689,1180,2.614,1216,2.179,1249,1.023,1413,1.066,1426,1.582,1448,2.07,1539,3.174,1567,0.945,1574,2.305,1611,2.094,1644,1.112,1645,1.583,1652,0.945,1653,1.97,1685,1.649,1705,0.945,1707,1.583,1733,1.689,1734,3.198,1755,3.174,1780,1.72,1793,2.394,1802,1.582,1840,4.263,1841,1.689,1842,4.431,1843,3.198,1844,3.874,1845,4.621,1846,4.621,1847,4.621,1848,2.814,1849,3.907,1850,3.874,1851,2.525,1852,2.525,1853,2.525,1854,2.525,1855,1.818,1856,4.02,1857,5.355,1858,5.649,1859,1.818,1860,5.06,1861,2.614,1862,2.814,1863,4.387,1864,1.818,1865,1.818,1866,1.818,1867,1.818,1868,4.874,1869,1.818,1870,1.818,1871,1.409,1872,1.818,1873,1.818,1874,1.818,1875,1.818,1876,1.49,1877,1.818,1878,1.818,1879,1.818,1880,1.818,1881,1.818,1882,1.818,1883,1.818,1884,1.818,1885,1.818,1886,2.814,1887,1.818,1888,2.814,1889,1.818,1890,3.442,1891,1.818,1892,1.818,1893,1.818,1894,4.901,1895,4.19,1896,4.19,1897,3.874,1898,1.818,1899,1.818,1900,3.912,1901,1.818,1902,2.814,1903,3.874,1904,1.818,1905,5.402,1906,5.007,1907,4.431,1908,5.06,1909,3.442,1910,1.818,1911,1.818,1912,4.19,1913,1.818,1914,3.442,1915,2.814,1916,1.818,1917,4.774,1918,4.19,1919,5.243,1920,1.818,1921,3.442,1922,1.818,1923,2.814,1924,2.814,1925,3.874,1926,2.814,1927,2.448,1928,2.814,1929,4.19,1930,2.614,1931,2.614,1932,1.818,1933,1.818,1934,1.818,1935,4.774,1936,2.814,1937,4.621,1938,1.818,1939,3.442,1940,4.612,1941,2.814,1942,4.431,1943,1.818,1944,5.175,1945,3.874,1946,2.814,1947,2.814,1948,2.448,1949,3.442,1950,2.814,1951,2.814,1952,1.818,1953,2.814,1954,2.814,1955,3.874,1956,2.814,1957,2.814,1958,3.198,1959,1.818,1960,1.818,1961,1.818,1962,1.818,1963,1.818,1964,3.442,1965,1.818,1966,4.19,1967,1.818,1968,4.431,1969,3.174,1970,4.431,1971,3.442,1972,2.198,1973,3.198,1974,3.442,1975,1.818,1976,5.175,1977,5.175,1978,4.431,1979,3.442,1980,1.818,1981,4.621,1982,1.818,1983,4.431,1984,1.818,1985,1.818,1986,3.442,1987,1.818,1988,3.442,1989,3.442,1990,3.442,1991,1.818,1992,1.818,1993,2.814,1994,2.814,1995,2.814,1996,1.818,1997,1.818,1998,5.243,1999,2.814,2000,1.818,2001,1.818,2002,1.818,2003,1.818,2004,1.97,2005,1.49,2006,2.181,2007,1.689,2008,1.818,2009,1.818,2010,1.818,2011,1.818,2012,1.818,2013,1.582,2014,1.818,2015,2.07,2016,1.818,2017,1.818,2018,1.818,2019,2.814,2020,1.689,2021,1.818,2022,1.818,2023,2.814,2024,3.874,2025,3.874,2026,1.818,2027,1.818,2028,3.442,2029,1.818,2030,2.814,2031,2.814,2032,1.818,2033,4.774,2034,2.814,2035,1.818,2036,1.818,2037,1.818,2038,2.814,2039,1.818,2040,2.814,2041,1.818,2042,1.818,2043,1.338,2044,1.818,2045,1.818,2046,1.689,2047,1.273,2048,1.818,2049,1.818,2050,1.818,2051,1.818,2052,1.818,2053,2.814,2054,1.818,2055,2.814]],["title/classes/ExpressionUpdatedEvent.html",[0,0.195,1856,2.492]],["body/classes/ExpressionUpdatedEvent.html",[0,0.287,2,0.638,3,0.068,4,0.143,5,0.058,6,0.143,7,0.084,14,0.241,15,0.334,17,0.268,18,0.014,19,0.164,21,0.315,29,0.58,33,0.993,34,1.228,35,1.174,43,0.615,54,0.177,68,0.522,80,2.369,103,0.363,105,0.638,114,1.287,115,0.138,123,0.629,124,1.388,133,1.067,134,0.736,135,1.326,150,0.546,175,0.391,178,0.316,179,1.077,193,0.833,246,1.174,251,2.047,258,1.895,287,0.004,288,0.007,289,0.004,322,0.852,323,0.378,358,0.292,359,0.669,388,0.578,410,0.514,501,1.474,519,0.95,546,1.474,562,1.987,607,2.842,659,2.325,669,1.287,673,1.319,681,1.8,692,1.97,711,1.352,761,2.962,778,4.937,783,1.228,809,1.506,812,1.506,865,1.735,867,1.506,872,2.468,929,1.596,968,0.884,969,1.352,979,1.596,1001,2.078,1100,1.627,1154,3.595,1161,0.993,1175,1.707,1180,2.636,1216,2.192,1249,1.034,1413,1.077,1426,1.599,1448,2.087,1539,2.325,1567,0.955,1574,2.325,1611,2.106,1644,1.124,1645,1.596,1652,0.955,1653,1.987,1685,1.663,1695,2.837,1705,0.955,1707,1.596,1733,1.707,1734,3.219,1755,3.192,1780,1.735,1793,2.405,1802,1.599,1840,4.446,1841,1.707,1842,2.837,1843,1.707,1844,1.838,1845,3.465,1846,3.897,1847,3.897,1848,1.838,1850,3.465,1855,1.838,1856,4.168,1857,5.491,1858,5.731,1859,1.838,1860,5.065,1861,2.636,1862,2.837,1863,4.396,1864,1.838,1865,1.838,1866,1.838,1867,1.838,1868,4.881,1869,1.838,1870,1.838,1871,1.424,1872,1.838,1873,1.838,1874,1.838,1875,1.838,1876,1.506,1877,1.838,1878,1.838,1879,1.838,1880,1.838,1881,1.838,1882,1.838,1883,1.838,1884,1.838,1885,1.838,1886,2.837,1887,1.838,1888,2.837,1889,1.838,1890,3.465,1891,1.838,1892,1.838,1893,1.838,1894,4.917,1895,4.211,1896,4.211,1897,3.897,1898,1.838,1899,1.838,1900,3.925,1901,1.838,1902,2.837,1903,3.897,1904,1.838,1905,5.412,1906,5.022,1907,4.451,1908,5.065,1909,3.465,1910,1.838,1911,1.838,1912,4.211,1913,1.838,1914,3.465,1915,2.837,1916,1.838,1917,4.791,1918,4.211,1919,5.255,1920,1.838,1921,3.465,1922,1.838,1923,2.837,1924,2.837,1925,3.897,1926,2.837,1927,2.468,1928,2.837,1929,4.211,1930,2.636,1931,2.636,1932,1.838,1933,1.838,1934,1.838,1935,4.791,1936,2.837,1937,4.639,1938,1.838,1939,3.465,1940,4.623,1941,2.837,1942,4.451,1943,1.838,1944,5.188,1945,3.897,1946,2.837,1947,2.837,1948,2.468,1949,3.465,1950,2.837,1951,2.837,1952,1.838,1953,2.837,1954,2.837,1955,3.897,1956,2.837,1957,2.837,1958,3.219,1959,1.838,1960,1.838,1961,1.838,1962,1.838,1963,1.838,1964,3.465,1965,1.838,1966,4.211,1967,1.838,1968,4.451,1969,3.192,1970,4.451,1971,3.465,1972,2.213,1973,3.219,1974,3.465,1975,1.838,1976,5.188,1977,5.188,1978,4.451,1979,3.465,1980,1.838,1981,4.639,1982,1.838,1983,4.451,1984,1.838,1985,1.838,1986,3.465,1987,1.838,1988,3.465,1989,3.465,1990,3.465,1991,1.838,1992,1.838,1993,2.837,1994,2.837,1995,2.837,1996,1.838,1997,1.838,1998,5.255,1999,2.837,2000,1.838,2001,1.838,2002,1.838,2003,1.838,2004,1.987,2005,1.506,2006,2.199,2007,1.707,2008,1.838,2009,1.838,2010,1.838,2011,1.838,2012,1.838,2013,1.599,2014,1.838,2015,2.087,2016,1.838,2017,1.838,2018,1.838,2019,2.837,2020,1.707,2021,1.838,2022,1.838,2023,2.837,2024,3.897,2025,3.897,2026,1.838,2027,1.838,2028,3.465,2029,1.838,2030,2.837,2031,2.837,2032,1.838,2033,4.791,2034,2.837,2035,1.838,2036,1.838,2037,1.838,2038,2.837,2039,1.838,2040,2.837,2041,1.838,2042,1.838,2043,1.352,2044,1.838,2045,1.838,2046,1.707,2047,1.287,2048,1.838,2049,1.838,2050,1.838,2051,1.838,2052,1.838,2053,2.837,2054,1.838,2055,2.837,2056,2.552,2057,2.552,2058,3.94]],["title/classes/FieldAction.html",[0,0.195,2059,1.679]],["body/classes/FieldAction.html",[0,0.356,2,1.226,3,0.13,4,0.13,5,0.112,6,0.206,7,0.121,14,0.167,15,0.53,17,0.357,18,0.014,19,0.261,54,0.226,68,0.552,115,0.433,117,0.561,124,1.987,135,1.356,150,0.668,175,0.373,178,0.552,179,2.07,193,0.781,287,0.008,288,0.011,289,0.008,305,0.717,306,0.697,308,0.59,311,0.649,328,2.894,339,2.16,358,0.788,359,0.788,388,0.416,519,1.183,546,1.835,578,2.738,579,2.36,583,2.738,584,2.738,585,2.599,586,2.738,587,2.738,673,1.25,692,1.183,849,2.894,1161,2.435,1216,2.534,1375,3.971,1532,4.186,1588,2.599,1697,4.906,1803,2.474,2059,3.235,2060,4.88,2061,3.073,2062,4.961,2063,6.257,2064,6.257,2065,4.596,2066,4.905,2067,4.06,2068,4.905,2069,4.905,2070,4.506,2071,4.905,2072,4.506,2073,4.905,2074,5.225,2075,4.506,2076,4.905,2077,3.845,2078,3.691,2079,3.315,2080,3.691,2081,3.691,2082,3.691,2083,4.186,2084,3.533,2085,3.073,2086,3.073,2087,2.894,2088,3.533,2089,2.738,2090,3.533,2091,3.533,2092,3.533,2093,3.919,2094,2.894,2095,3.533,2096,4.506,2097,3.533,2098,3.533,2099,4.506,2100,3.533,2101,3.691,2102,3.533,2103,3.315,2104,3.533,2105,3.533,2106,3.533,2107,4.506,2108,3.533,2109,3.533,2110,4.506,2111,3.533,2112,3.533,2113,3.533,2114,3.533]],["title/classes/FieldActionArgument.html",[0,0.195,2077,2.22]],["body/classes/FieldActionArgument.html",[0,0.361,2,1.27,3,0.135,4,0.135,5,0.116,6,0.201,7,0.118,14,0.173,15,0.542,17,0.359,18,0.014,19,0.25,54,0.229,68,0.548,115,0.423,117,0.582,124,1.466,135,1.416,150,0.684,175,0.377,178,0.512,179,2.145,193,0.789,287,0.009,288,0.011,289,0.009,305,0.789,306,0.702,328,2.999,339,2.238,388,0.431,519,1.225,546,1.902,578,2.837,579,2.445,583,2.837,584,2.837,585,2.693,586,2.837,587,2.837,673,1.263,692,1.225,849,2.999,1161,2.725,1216,2.592,1375,3.39,1532,4.918,1588,2.693,1803,2.563,2059,3.102,2060,4.746,2061,3.184,2062,3.66,2065,4.47,2067,3.71,2070,3.66,2072,3.66,2074,4.608,2075,3.66,2077,4.103,2078,4.337,2079,3.39,2080,3.775,2081,3.775,2082,3.775,2083,4.281,2084,3.66,2085,3.184,2086,3.184,2087,2.999,2088,3.66,2089,2.837,2090,3.66,2091,3.66,2092,3.66,2093,4.009,2094,2.999,2095,3.66,2096,4.608,2097,3.66,2098,3.66,2099,4.608,2100,3.66,2101,3.775,2102,3.66,2103,3.39,2104,3.66,2105,3.66,2106,3.66,2107,4.608,2108,3.66,2109,3.66,2110,4.608,2111,3.66,2112,3.66,2113,3.66,2114,3.66,2115,5.083,2116,5.083,2117,5.083,2118,5.083]],["title/classes/FieldActionArgumentValue.html",[0,0.195,2065,2.347]],["body/classes/FieldActionArgumentValue.html",[0,0.364,2,1.298,3,0.138,4,0.138,5,0.118,6,0.187,7,0.11,14,0.177,15,0.55,17,0.324,18,0.014,19,0.221,54,0.23,68,0.548,115,0.425,117,0.594,124,1.498,135,1.384,150,0.681,175,0.38,178,0.52,179,2.192,193,0.794,287,0.009,288,0.011,289,0.009,305,0.737,306,0.706,328,3.065,339,2.287,388,0.44,519,1.252,546,1.944,578,2.899,579,2.499,583,2.899,584,2.899,585,2.752,586,2.899,587,2.899,673,1.271,692,1.252,849,3.065,1161,2.524,1216,2.628,1375,3.437,1532,4.34,1588,2.752,1803,2.62,2059,3.127,2060,4.431,2061,3.254,2062,3.741,2065,4.588,2067,3.747,2070,3.741,2072,3.741,2074,4.672,2075,3.741,2077,3.948,2078,3.827,2079,3.437,2080,3.827,2081,3.827,2082,3.827,2083,4.34,2084,3.741,2085,3.254,2086,3.254,2087,3.065,2088,3.741,2089,2.899,2090,3.741,2091,3.741,2092,3.741,2093,4.064,2094,3.065,2095,3.741,2096,4.672,2097,3.741,2098,3.741,2099,4.672,2100,3.741,2101,3.827,2102,3.741,2103,3.437,2104,3.741,2105,3.741,2106,3.741,2107,4.672,2108,3.741,2109,3.741,2110,4.672,2111,3.741,2112,3.741,2113,3.741,2114,3.741,2119,5.195,2120,5.195]],["title/classes/FieldActionDefinition.html",[0,0.195,2067,2.107]],["body/classes/FieldActionDefinition.html",[0,0.353,2,1.196,3,0.127,4,0.127,5,0.109,6,0.213,7,0.125,14,0.163,15,0.522,17,0.366,18,0.014,19,0.272,54,0.225,68,0.55,115,0.431,117,0.705,124,1.38,135,1.39,150,0.656,175,0.371,178,0.545,179,2.019,193,0.775,287,0.008,288,0.01,289,0.008,305,0.793,306,0.702,308,0.58,311,0.58,328,4.017,339,2.106,358,0.705,359,0.705,388,0.405,417,0.928,519,1.154,546,1.79,578,2.67,579,2.302,583,2.67,584,2.67,585,2.535,586,2.67,587,2.67,673,1.24,692,1.154,849,4.017,1161,2.649,1216,2.912,1375,3.262,1532,4.809,1588,2.535,1803,2.413,2059,3.213,2060,5.041,2061,2.997,2062,3.445,2065,4.388,2067,3.808,2070,3.445,2072,3.445,2074,4.434,2075,3.445,2077,4.151,2078,3.633,2079,3.808,2080,3.633,2081,3.633,2082,3.633,2083,4.119,2084,4.903,2085,4.265,2086,4.265,2087,3.633,2088,4.434,2089,2.67,2090,3.445,2091,3.445,2092,3.445,2093,3.857,2094,2.823,2095,3.445,2096,4.434,2097,3.445,2098,3.445,2099,4.434,2100,4.434,2101,3.633,2102,3.445,2103,3.262,2104,3.445,2105,3.445,2106,3.445,2107,4.434,2108,3.445,2109,3.445,2110,4.434,2111,3.445,2112,3.445,2113,3.445,2114,3.445,2121,6.158,2122,6.158,2123,4.785,2124,4.785,2125,4.785,2126,4.785,2127,4.785,2128,4.785,2129,4.785,2130,4.785,2131,4.785,2132,4.785]],["title/injectables/FieldActionService.html",[49,2.22,290,2.006]],["body/injectables/FieldActionService.html",[0,0.131,3,0.07,4,0.187,5,0.061,6,0.204,7,0.12,9,1.648,14,0.091,15,0.532,17,0.364,18,0.014,19,0.261,21,0.38,22,3.466,24,1.571,25,3.466,29,0.786,33,2.153,35,1.224,43,0.642,44,0.826,49,2.271,54,0.08,59,0.922,68,0.515,80,1.359,88,3.088,103,1.091,105,1.017,115,0.392,116,2.679,117,0.884,123,0.646,133,1.297,134,0.923,135,1.174,140,2.723,150,0.598,153,2.55,160,1.792,175,0.407,178,0.326,193,0.816,251,2.098,253,3.158,265,3.158,287,0.004,288,0.011,289,0.004,290,2.052,292,1.781,298,3.558,302,1.917,305,0.621,306,0.533,308,0.384,311,0.694,312,1.872,314,0.394,320,1.668,321,2.915,322,0.889,323,0.394,326,1.917,352,3.984,358,0.807,359,0.807,369,0.536,388,0.691,417,1.428,435,0.792,490,1.036,499,3.191,546,2.07,578,1.486,579,1.281,583,1.486,584,1.486,585,1.41,586,1.486,587,1.486,589,3.988,673,0.679,692,1.191,712,2.55,758,2.931,783,1.958,968,0.923,980,2.55,1001,0.768,1100,2.107,1101,0.958,1131,3.558,1147,3.191,1163,2.931,1204,1.917,1205,1.917,1214,4.338,1249,2.8,1325,4.338,1375,1.41,1376,3.701,1442,1.917,1567,1.848,1611,2.831,1624,3.558,1645,1.648,1652,0.996,1695,1.917,1701,3.191,1705,0.996,1707,1.648,1754,2.088,1780,1.792,1863,3.264,1972,1.224,2004,2.052,2047,2.052,2067,4.246,2077,2.271,2079,4.041,2087,3.517,2089,2.271,2133,6.718,2134,2.316,2135,4.161,2136,4.941,2137,4.07,2138,4.07,2139,4.07,2140,5.532,2141,5.532,2142,4.07,2143,5.532,2144,4.07,2145,4.07,2146,4.07,2147,4.07,2148,4.07,2149,5.532,2150,2.662,2151,4.812,2152,2.662,2153,4.07,2154,2.662,2155,4.07,2156,5.705,2157,5.532,2158,4.07,2159,4.07,2160,2.723,2161,4.07,2162,6.54,2163,2.662,2164,4.624,2165,5.532,2166,5.532,2167,4.07,2168,6.744,2169,2.662,2170,3.191,2171,2.662,2172,2.662,2173,4.07,2174,2.662,2175,5.532,2176,2.662,2177,4.07,2178,2.662,2179,3.874,2180,4.07,2181,2.662,2182,3.191,2183,4.07,2184,2.662,2185,2.723,2186,4.07,2187,6.744,2188,2.662,2189,5.185,2190,5.532,2191,6.744,2192,4.07,2193,2.662,2194,5.532,2195,2.662,2196,3.54,2197,3.54,2198,4.07,2199,2.662,2200,2.662,2201,4.298,2202,4.812,2203,4.812,2204,4.812,2205,3.54,2206,2.662,2207,2.662,2208,1.668,2209,1.343,2210,4.07,2211,4.07,2212,2.662,2213,2.662,2214,4.07,2215,4.07,2216,4.07,2217,5.532,2218,4.07,2219,2.662,2220,4.07,2221,3.54,2222,4.07,2223,2.662,2224,4.07,2225,5.532,2226,2.662,2227,2.931,2228,3.54,2229,3.191,2230,2.931,2231,2.662,2232,2.662,2233,2.662,2234,2.662,2235,2.662,2236,2.316,2237,2.316,2238,2.662,2239,4.07,2240,2.662,2241,2.662,2242,3.191,2243,2.088,2244,2.662,2245,2.088,2246,2.088,2247,1.917,2248,2.662,2249,2.662,2250,2.662,2251,3.191,2252,4.941,2253,2.662,2254,2.662,2255,4.07,2256,2.662,2257,2.662,2258,2.662,2259,2.316,2260,2.662,2261,2.662,2262,2.662,2263,2.316,2264,2.316,2265,2.316,2266,2.316,2267,2.662,2268,2.316,2269,2.316,2270,2.662,2271,4.07,2272,2.662,2273,4.07,2274,2.662,2275,4.07,2276,3.54,2277,2.316,2278,2.662,2279,2.662,2280,2.662,2281,2.662,2282,2.662,2283,2.662,2284,2.662,2285,2.662,2286,2.662,2287,2.662,2288,2.662,2289,2.662,2290,2.662,2291,2.662,2292,2.662,2293,2.662,2294,4.07,2295,2.662,2296,2.662,2297,2.662,2298,2.662,2299,2.662,2300,2.662,2301,2.662,2302,2.662,2303,2.662,2304,2.662,2305,2.662,2306,4.07,2307,2.662,2308,2.662,2309,4.07,2310,2.662,2311,6.285,2312,4.941,2313,2.662,2314,2.662,2315,2.662,2316,2.662,2317,4.07,2318,2.662,2319,2.662,2320,3.305,2321,2.662,2322,2.316,2323,4.07,2324,4.941,2325,4.07,2326,5.532,2327,6.285,2328,2.662,2329,2.662,2330,4.07,2331,2.662,2332,2.662,2333,2.662,2334,2.662,2335,2.662,2336,2.662,2337,2.662]],["title/components/FieldEditComponent.html",[361,0.182,408,0.83]],["body/components/FieldEditComponent.html",[0,0.226,3,0.083,4,0.083,5,0.072,6,0.214,7,0.127,10,2.106,14,0.107,15,0.391,17,0.366,18,0.014,19,0.275,21,0.373,29,0.717,30,1.178,31,2.824,32,0.711,45,1.515,48,1.386,54,0.095,59,0.865,68,0.497,103,0.855,105,1.365,115,0.411,116,1.966,117,0.791,123,0.714,133,0.876,134,1.021,135,1.124,150,0.645,175,0.3,178,0.604,193,0.766,194,3.859,263,0.657,264,0.657,282,2.891,287,0.005,288,0.008,289,0.005,305,0.776,306,0.681,308,0.435,311,0.693,312,2.122,314,0.466,321,3.223,322,1.051,323,0.466,324,1.153,336,2.267,358,0.791,359,0.791,361,0.25,362,0.657,363,1.073,364,0.759,365,0.759,367,0.706,368,1.657,369,0.928,370,0.759,372,1.073,373,0.681,374,1.113,375,1.608,376,0.657,377,1.45,378,0.759,379,0.759,380,0.681,381,0.759,382,0.657,383,0.759,384,0.657,385,0.759,386,0.759,387,0.657,388,0.7,389,1.544,390,0.657,391,0.759,392,0.657,393,0.8,394,0.681,395,0.759,396,0.657,397,0.759,398,0.657,399,0.759,400,0.634,401,1.45,402,0.634,403,0.732,404,1.302,405,0.759,406,0.681,407,0.759,408,1.255,409,0.657,410,0.634,411,0.759,412,0.634,413,0.681,414,0.759,415,0.657,416,0.657,417,0.611,418,0.759,419,0.657,420,0.759,421,0.657,422,0.759,423,0.657,424,0.657,425,1.113,426,0.657,427,0.611,428,0.759,429,0.657,430,0.759,431,0.657,432,1.035,433,0.759,434,0.657,435,0.74,436,0.611,437,1.113,438,0.634,439,0.657,440,1.773,441,0.657,442,0.657,443,0.657,444,0.657,445,0.759,446,0.657,447,0.706,448,0.732,449,0.634,450,0.732,451,0.759,454,2.305,455,1.035,457,3.422,462,2.539,463,2.445,464,2.539,465,4.014,470,1.986,472,2.396,473,3.323,474,5.57,477,4.014,482,1.275,488,1.448,489,1.668,490,1.225,491,1.225,492,1.013,493,2.106,496,1.972,498,3.934,527,1.972,528,2.327,529,3.087,532,4.283,533,4.717,534,3.619,538,2.469,547,3.619,549,2.469,550,2.469,551,2.267,552,4.014,553,2.469,554,2.469,555,2.469,556,2.267,557,4.283,562,2.327,563,2.267,566,2.267,568,2.267,570,4.283,571,2.469,578,3.357,579,2.894,580,3.619,581,3.619,582,3.087,583,2.575,584,2.575,585,2.445,586,3.357,587,3.357,588,3.619,589,3.087,590,3.619,591,3.619,592,3.619,593,3.619,594,5.56,681,1.178,692,0.759,777,2.469,812,1.858,824,1.757,872,1.972,943,1.275,1346,4.014,1364,3.654,1376,2.106,1531,4.752,1546,4.283,1567,1.178,1580,4.332,1587,6.293,1604,6.168,1639,4.014,1685,1.948,1713,3.654,1972,2.122,2170,2.469,2338,7.04,2339,4.752,2340,5.463,2341,5.463,2342,5.463,2343,3.934,2344,5.463,2345,4.615,2346,4.615,2347,4.615,2348,4.615,2349,4.014,2350,4.615,2351,3.149,2352,4.615,2353,3.149,2354,3.149,2355,3.149,2356,4.615,2357,3.149,2358,3.149,2359,3.149,2360,4.615,2361,3.149,2362,3.149,2363,3.149,2364,3.149,2365,3.149,2366,3.149,2367,3.149,2368,4.442,2369,3.149,2370,2.739,2371,2.739,2372,3.149,2373,3.149,2374,6.015,2375,3.149,2376,5.463,2377,6.015,2378,3.149,2379,5.463,2380,4.752,2381,6.015,2382,6.015,2383,3.149,2384,6.015,2385,4.014,2386,3.149,2387,2.739,2388,3.149,2389,4.615,2390,3.149,2391,3.149,2392,3.149,2393,2.267,2394,5.463,2395,2.267,2396,2.469,2397,3.149,2398,3.149,2399,3.149,2400,5.463,2401,5.463,2402,4.615,2403,2.739,2404,3.149,2405,2.739,2406,4.615,2407,3.149,2408,3.149,2409,3.149,2410,3.149,2411,3.149,2412,3.149,2413,3.149,2414,4.615,2415,3.149,2416,2.739,2417,2.739,2418,2.739,2419,2.739,2420,4.615,2421,2.739,2422,2.739]],["title/classes/FieldNode.html",[0,0.195,1868,2.492]],["body/classes/FieldNode.html",[0,0.282,2,0.616,3,0.065,4,0.141,5,0.056,6,0.161,7,0.095,14,0.246,15,0.325,17,0.279,18,0.014,19,0.235,21,0.31,29,0.604,33,0.959,34,1.186,35,1.133,43,0.594,54,0.174,68,0.528,80,2.348,103,0.35,105,0.616,114,1.243,115,0.133,123,0.615,124,1.834,133,1.055,134,0.717,135,1.314,150,0.539,175,0.39,178,0.307,179,1.04,193,0.83,246,1.133,251,2.029,258,1.845,287,0.004,288,0.006,289,0.004,305,0.399,306,0.343,308,0.361,311,0.542,322,0.823,323,0.365,358,0.282,359,0.539,388,0.621,410,0.496,501,1.435,519,0.925,546,1.435,562,1.934,607,2.442,659,2.262,669,1.243,673,1.318,681,1.761,692,1.965,711,1.306,761,2.925,778,4.901,783,1.186,809,1.454,812,1.454,865,1.688,867,1.454,872,2.402,929,1.553,968,0.854,969,1.306,979,1.553,1001,2.061,1100,1.77,1154,3.55,1161,0.959,1175,1.649,1180,2.565,1216,2.151,1249,0.998,1413,1.04,1426,1.544,1448,2.031,1539,3.133,1567,0.922,1574,2.262,1611,2.067,1644,1.085,1645,1.553,1652,0.922,1653,1.934,1685,1.618,1695,2.761,1705,0.922,1707,1.553,1733,1.649,1734,3.149,1755,3.133,1780,1.688,1793,2.629,1802,1.544,1840,4.589,1841,1.649,1842,4.388,1843,3.149,1844,3.825,1845,4.58,1846,4.973,1847,4.973,1848,1.775,1850,4.144,1855,1.775,1856,3.984,1857,5.329,1858,5.631,1859,1.775,1860,5.048,1861,3.149,1862,3.825,1863,4.405,1864,1.775,1865,1.775,1866,1.775,1867,1.775,1868,4.879,1869,1.775,1870,1.775,1871,1.375,1872,1.775,1873,1.775,1874,1.775,1875,1.775,1876,1.454,1877,1.775,1878,1.775,1879,1.775,1880,1.775,1881,1.775,1882,1.775,1883,1.775,1884,1.775,1885,1.775,1886,2.761,1887,1.775,1888,2.761,1889,1.775,1890,3.39,1891,1.775,1892,1.775,1893,1.775,1894,4.865,1895,4.144,1896,4.144,1897,3.825,1898,1.775,1899,1.775,1900,3.88,1901,1.775,1902,2.761,1903,3.825,1904,1.775,1905,5.377,1906,4.973,1907,4.388,1908,5.048,1909,3.39,1910,1.775,1911,1.775,1912,4.144,1913,1.775,1914,3.39,1915,2.761,1916,1.775,1917,4.736,1918,4.144,1919,5.214,1920,1.775,1921,3.39,1922,1.775,1923,2.761,1924,2.761,1925,3.825,1926,2.761,1927,2.402,1928,2.761,1929,4.144,1930,2.565,1931,2.565,1932,1.775,1933,1.775,1934,1.775,1935,4.736,1936,2.761,1937,4.58,1938,1.775,1939,3.39,1940,4.589,1941,2.761,1942,4.388,1943,1.775,1944,5.145,1945,3.825,1946,2.761,1947,2.761,1948,2.402,1949,3.39,1950,2.761,1951,2.761,1952,1.775,1953,2.761,1954,2.761,1955,3.825,1956,2.761,1957,2.761,1958,3.149,1959,1.775,1960,1.775,1961,1.775,1962,1.775,1963,1.775,1964,3.39,1965,1.775,1966,4.144,1967,1.775,1968,4.388,1969,3.133,1970,4.388,1971,3.39,1972,2.164,1973,3.149,1974,3.39,1975,1.775,1976,5.145,1977,5.145,1978,4.388,1979,3.39,1980,1.775,1981,4.58,1982,1.775,1983,4.388,1984,1.775,1985,1.775,1986,3.39,1987,1.775,1988,3.39,1989,3.39,1990,3.39,1991,1.775,1992,1.775,1993,2.761,1994,2.761,1995,2.761,1996,1.775,1997,1.775,1998,5.214,1999,2.761,2000,1.775,2001,1.775,2002,1.775,2003,1.775,2004,1.934,2005,1.454,2006,2.14,2007,1.649,2008,1.775,2009,1.775,2010,1.775,2011,1.775,2012,1.775,2013,1.544,2014,1.775,2015,2.031,2016,1.775,2017,1.775,2018,1.775,2019,2.761,2020,1.649,2021,1.775,2022,1.775,2023,2.761,2024,3.825,2025,3.825,2026,1.775,2027,1.775,2028,3.39,2029,1.775,2030,2.761,2031,2.761,2032,1.775,2033,4.736,2034,2.761,2035,1.775,2036,1.775,2037,1.775,2038,2.761,2039,1.775,2040,2.761,2041,1.775,2042,1.775,2043,1.306,2044,1.775,2045,1.775,2046,1.649,2047,1.243,2048,1.775,2049,1.775,2050,1.775,2051,1.775,2052,1.775,2053,2.761,2054,1.775,2055,2.761,2423,2.465,2424,3.835,2425,2.465,2426,5.005,2427,2.144,2428,2.144,2429,2.465,2430,2.465,2431,2.144,2432,2.144,2433,2.144]],["title/injectables/FileManagementService.html",[52,2.22,290,2.006]],["body/injectables/FileManagementService.html",[0,0.172,3,0.058,4,0.093,5,0.176,6,0.199,7,0.122,9,1.422,14,0.075,15,0.297,17,0.362,18,0.014,19,0.263,21,0.38,22,3.128,24,1.3,25,2.742,29,0.677,32,0.34,36,1.23,38,1.381,43,1.469,44,0.683,46,1.23,48,0.97,52,1.96,54,0.184,59,0.276,68,0.531,80,1.82,88,4.206,101,2.349,103,0.622,105,0.551,115,0.352,117,0.402,123,0.653,133,1.2,134,1.019,135,1.425,137,3.358,138,2.2,150,0.536,160,3.493,175,0.375,178,0.351,179,1.847,193,0.812,222,1.3,246,1.013,251,1.44,255,1.381,260,2.349,261,1.23,262,2.198,265,1.167,287,0.006,288,0.006,289,0.004,290,1.771,292,1.474,298,3.152,302,3.152,305,0.229,306,0.391,308,0.331,311,0.673,314,0.326,320,1.381,321,4.498,322,0.736,323,0.326,326,4.556,335,5.307,344,1.771,345,1.474,352,4.915,358,0.724,359,0.724,369,1.345,393,0.382,427,0.681,435,1.245,470,0.683,501,1.314,542,2.2,579,1.689,673,1.055,679,3.927,761,1.013,783,3.044,865,0.97,930,3.808,931,1.474,943,2.894,954,1.3,961,2.754,968,0.764,976,2.349,979,2.814,1125,0.97,1131,4.696,1156,2.754,1158,2.349,1160,4.743,1161,2.656,1163,4.184,1166,3.055,1179,1.917,1181,1.917,1190,2.754,1193,1.917,1196,1.917,1199,3.432,1204,1.587,1205,3.152,1214,3.915,1248,2.754,1455,2.946,1458,3.191,1642,3.055,1645,2.814,1646,3.055,1649,3.055,1652,0.824,1700,3.915,1705,0.824,1707,2.814,1713,3.34,1730,2.754,1750,3.055,1754,1.728,1755,3.733,1780,2.558,1831,3.152,2004,3.503,2046,4.566,2047,3.503,2103,2.319,2151,4.343,2201,5.054,2202,5.301,2203,6.135,2204,6.288,2205,4.743,2227,5.002,2228,5.672,2229,5.242,2230,5.65,2236,3.055,2237,3.055,2242,5.352,2243,5.113,2245,3.432,2246,3.432,2247,3.595,2259,5.504,2263,4.343,2264,4.743,2265,3.808,2266,5.504,2268,5.937,2269,3.808,2276,6.288,2277,5.054,2387,3.055,2434,6.555,2435,1.917,2436,3.511,2437,3.055,2438,3.055,2439,4.377,2440,5.453,2441,3.511,2442,3.511,2443,4.993,2444,4.993,2445,4.993,2446,4.993,2447,4.993,2448,3.511,2449,3.511,2450,4.993,2451,4.993,2452,3.511,2453,3.511,2454,2.204,2455,3.511,2456,3.511,2457,2.204,2458,5.937,2459,6.803,2460,5.301,2461,5.146,2462,4.343,2463,4.743,2464,5.453,2465,6.095,2466,5.301,2467,5.504,2468,3.511,2469,2.204,2470,2.204,2471,2.204,2472,6.521,2473,5.815,2474,5.301,2475,6.521,2476,2.204,2477,2.204,2478,2.204,2479,3.511,2480,2.204,2481,3.511,2482,2.204,2483,3.808,2484,3.511,2485,3.511,2486,3.511,2487,3.511,2488,3.511,2489,3.511,2490,3.055,2491,3.511,2492,2.204,2493,3.915,2494,3.511,2495,2.204,2496,3.511,2497,2.204,2498,3.055,2499,4.343,2500,3.055,2501,4.377,2502,4.377,2503,3.511,2504,2.204,2505,3.511,2506,3.511,2507,3.511,2508,3.511,2509,3.511,2510,2.204,2511,2.204,2512,2.204,2513,2.204,2514,2.204,2515,2.204,2516,2.204,2517,2.204,2518,2.204,2519,1.111,2520,1.111,2521,2.204,2522,2.204,2523,3.511,2524,2.204,2525,3.511,2526,2.204,2527,6.095,2528,6.095,2529,2.754,2530,2.204,2531,4.377,2532,1.728,2533,2.204,2534,2.204,2535,4.377,2536,6.095,2537,6.095,2538,4.377,2539,5.453,2540,3.511,2541,2.204,2542,5.81,2543,3.511,2544,4.993,2545,4.377,2546,3.055,2547,3.511,2548,3.511,2549,2.204,2550,3.511,2551,2.204,2552,3.511,2553,4.993,2554,4.993,2555,4.993,2556,4.377,2557,3.511,2558,2.204,2559,3.511,2560,2.204,2561,3.511,2562,2.204,2563,3.511,2564,2.204,2565,2.204,2566,2.204,2567,3.511,2568,5.453,2569,4.377,2570,4.993,2571,2.204,2572,1.917,2573,4.343,2574,2.204,2575,2.204,2576,6.095,2577,6.095,2578,4.377,2579,2.204,2580,2.204,2581,2.204,2582,1.917,2583,2.204,2584,2.204,2585,2.204,2586,2.204,2587,4.377,2588,2.204,2589,2.204,2590,1.917,2591,2.204,2592,2.204,2593,2.204,2594,2.204,2595,2.204,2596,2.204,2597,3.511,2598,2.204,2599,2.204,2600,1.917,2601,2.204,2602,2.204,2603,2.204,2604,2.204,2605,3.808,2606,4.377,2607,4.993,2608,3.511,2609,3.511,2610,1.917,2611,2.204,2612,2.204,2613,2.204,2614,2.204,2615,2.204,2616,1.917,2617,1.917,2618,2.204,2619,3.511,2620,2.204,2621,2.204,2622,2.204,2623,2.204,2624,2.204,2625,2.204,2626,3.511,2627,3.511,2628,2.204,2629,2.204,2630,2.204,2631,2.204,2632,2.204,2633,2.204,2634,2.204,2635,2.204,2636,1.917]],["title/directives/FocusDirective.html",[376,0.83,449,0.8]],["body/directives/FocusDirective.html",[0,0.292,3,0.158,4,0.158,5,0.136,6,0.21,7,0.123,14,0.203,15,0.597,17,0.323,18,0.014,19,0.264,21,0.321,54,0.18,59,0.883,103,0.847,105,1.489,115,0.321,117,0.807,133,1.204,178,0.477,287,0.01,288,0.012,289,0.01,305,0.621,306,0.533,308,0.665,311,0.562,314,0.882,324,1.762,358,0.682,359,0.682,367,1.337,368,1.419,376,1.472,448,1.386,449,1.419,450,1.843,472,3.006,510,2.638,519,1.7,865,2.623,2637,5.184,2638,7.511,2639,7.511,2640,7.764,2641,5.959,2642,7.052,2643,5.959,2644,5.959,2645,5.959,2646,7.052,2647,5.959]],["title/classes/LineModel.html",[0,0.195,2648,3.119]],["body/classes/LineModel.html",[0,0.252,1,3.213,2,0.912,3,0.097,4,0.097,5,0.083,6,0.195,7,0.115,9,1.478,14,0.124,15,0.435,17,0.331,18,0.014,19,0.246,21,0.398,54,0.155,59,0.904,68,0.535,103,0.519,116,1.846,117,0.679,123,0.67,133,1.158,134,0.682,135,0.682,150,0.662,160,2.258,175,0.394,178,0.626,193,0.844,247,2.036,248,2.152,251,1.479,258,1.755,261,2.036,287,0.006,288,0.01,289,0.006,305,0.38,306,0.459,314,0.54,322,1.218,323,0.54,324,0.912,339,1.606,361,0.235,368,0.734,375,1.193,388,0.674,398,1.343,400,1.032,409,1.07,410,1.508,435,0.585,455,0.819,470,1.591,472,1.919,488,1.677,490,1.419,501,1.919,517,1.839,519,1.635,598,2.359,599,2.717,607,1.677,608,2.152,609,3.173,610,3.173,619,2.036,620,1.677,623,3.026,638,2.717,655,4.462,656,2.86,658,2.86,667,2.717,668,2.44,669,1.839,681,1.365,692,0.879,750,2.152,809,2.152,824,2.036,841,2.86,843,3.173,865,1.606,943,1.478,950,2.152,976,2.44,977,3.5,1001,1.711,1051,2.627,1100,1.887,1101,1.313,1249,2.078,1251,4.462,1253,4.462,1277,5.598,1301,2.44,1350,2.86,1364,3.968,1365,4.022,1367,4.462,1368,3.173,1376,2.44,1378,2.44,1462,2.44,1567,2.408,1611,1.419,1927,2.285,1969,2.152,2320,4.833,2636,3.173,2648,5.878,2649,6.415,2650,3.173,2651,6.436,2652,7.597,2653,7.375,2654,6.436,2655,6.781,2656,7.752,2657,3.648,2658,3.648,2659,5.932,2660,5.932,2661,5.932,2662,3.648,2663,3.648,2664,3.648,2665,3.648,2666,3.648,2667,3.648,2668,3.173,2669,3.648,2670,3.648,2671,3.648,2672,3.648,2673,3.648,2674,3.648,2675,3.648,2676,5.129,2677,3.648,2678,3.648,2679,3.648,2680,3.648,2681,3.648,2682,3.648,2683,3.648,2684,3.648,2685,3.648,2686,3.648,2687,3.648,2688,3.648,2689,3.648,2690,5.129,2691,3.648,2692,3.648,2693,3.648,2694,3.648,2695,3.648,2696,3.648,2697,3.648,2698,3.648,2699,3.648,2700,5.129,2701,3.648,2702,3.173,2703,3.648,2704,5.129,2705,3.648,2706,3.648,2707,3.648,2708,3.648,2709,5.129,2710,3.648,2711,5.932,2712,3.648,2713,3.648,2714,3.648,2715,3.648,2716,5.129,2717,3.648,2718,3.648,2719,3.648,2720,5.129,2721,3.648,2722,3.648,2723,5.932,2724,3.648,2725,6.436,2726,3.648,2727,3.648,2728,3.648,2729,3.648,2730,3.648,2731,3.648,2732,3.648,2733,3.648,2734,3.648,2735,5.932,2736,3.648,2737,5.129,2738,3.648,2739,5.129,2740,3.648,2741,3.648,2742,5.932,2743,3.648,2744,3.648,2745,2.86,2746,4.652,2747,6.436,2748,4.705,2749,3.648,2750,3.648,2751,3.648,2752,5.129,2753,3.173,2754,3.173,2755,3.648,2756,3.648,2757,3.648,2758,3.648,2759,3.648,2760,3.648,2761,3.648,2762,6.781,2763,3.648,2764,5.932,2765,3.648,2766,2.86,2767,3.648,2768,3.648,2769,3.173,2770,3.648,2771,3.648,2772,5.129,2773,3.648,2774,3.648,2775,3.648,2776,6.436,2777,2.86,2778,2.86,2779,3.648,2780,3.648,2781,3.648,2782,5.129,2783,3.648,2784,3.648,2785,3.173,2786,3.648,2787,3.648,2788,3.648,2789,3.648,2790,5.932,2791,3.648,2792,5.129,2793,3.173,2794,5.932,2795,3.648,2796,3.173,2797,3.648,2798,3.648]],["title/classes/LookupTable.html",[0,0.195,2799,2.107]],["body/classes/LookupTable.html",[0,0.315,2,1.279,3,0.135,4,0.135,5,0.117,6,0.212,7,0.125,14,0.174,15,0.544,17,0.348,18,0.014,19,0.271,54,0.194,68,0.553,105,1.756,115,0.409,117,0.804,135,1.201,150,0.434,175,0.386,178,0.41,193,0.732,287,0.013,288,0.011,289,0.009,305,0.533,306,0.458,308,0.606,311,0.662,358,0.586,359,0.586,413,1.108,673,0.853,692,1.234,849,3.792,1588,3.405,2086,4.026,2529,5.779,2532,5.953,2799,3.405,2800,6.291,2801,4.014,2802,5.51,2803,5.51,2804,6.427,2805,6.411,2806,6.411,2807,6.427,2808,4.926,2809,5.118,2810,5.118,2811,5.118,2812,5.591,2813,6.411,2814,5.118,2815,6.604,2816,5.118,2817,5.118,2818,4.628,2819,4.452,2820,5.591,2821,5.591,2822,5.591,2823,5.591,2824,4.452,2825,4.452,2826,4.452,2827,4.452,2828,4.452,2829,4.452,2830,4.452,2831,4.452,2832,5.591,2833,5.591,2834,5.591,2835,6.112,2836,4.452,2837,2.462,2838,4.452,2839,4.452,2840,4.452,2841,6.112,2842,4.452,2843,4.452]],["title/components/LookupTableComponent.html",[361,0.182,412,0.8]],["body/components/LookupTableComponent.html",[0,0.315,3,0.112,4,0.112,5,0.097,6,0.205,7,0.126,14,0.144,15,0.482,17,0.337,18,0.014,19,0.26,21,0.406,29,0.812,32,0.878,43,1.024,44,1.317,54,0.172,59,0.531,68,0.477,103,0.604,115,0.37,117,0.486,123,0.897,134,0.793,135,1.064,150,0.482,175,0.284,178,0.55,193,0.828,263,0.886,264,0.886,277,3.809,287,0.007,288,0.01,289,0.007,308,0.537,311,0.647,314,0.629,323,0.629,324,1.423,358,0.486,359,0.486,361,0.294,362,0.886,363,1.324,364,1.024,365,1.024,367,0.953,368,1.689,369,1.145,370,1.024,372,1.324,373,0.919,374,1.373,375,1.324,376,0.886,377,1.654,378,1.024,379,1.024,380,0.919,381,1.024,382,0.886,383,1.024,384,0.886,385,1.024,386,1.024,387,0.886,388,0.669,389,1.725,390,0.886,391,1.024,392,0.886,393,0.986,394,0.919,395,1.024,396,0.886,397,1.024,398,0.886,399,1.024,400,0.854,401,1.654,402,0.854,403,0.988,404,1.485,405,1.024,406,0.919,407,1.024,408,0.886,409,0.886,410,0.854,411,1.024,412,1.381,413,1.594,414,1.024,415,0.886,416,0.886,417,0.823,418,1.024,419,0.886,420,1.024,421,0.886,422,1.024,423,0.886,424,0.886,425,1.373,426,0.886,427,0.823,428,1.024,429,0.886,430,1.024,431,0.886,432,1.277,433,1.024,434,0.886,435,0.913,436,0.823,437,1.373,438,0.854,439,0.886,440,1.373,441,0.886,442,0.886,443,0.886,444,0.886,445,1.024,446,0.886,447,0.953,448,0.988,449,0.854,450,0.988,451,1.024,454,2.71,455,1.277,462,2.896,463,3.016,464,2.896,472,2.403,482,1.72,490,1.652,491,1.652,492,1.366,500,3.402,504,3.137,694,2.141,939,5.036,1090,5.578,1100,2.049,1101,1.528,1216,1.72,1249,2.306,1293,3.402,1300,2.249,1567,1.589,1652,1.589,1653,2.141,1705,1.589,1707,1.72,1780,1.869,1803,2.141,2006,2.37,2047,2.141,2320,2.841,2799,3.402,2808,4.299,2818,4.625,2837,3.544,2844,3.33,2845,4.952,2846,5.587,2847,5.969,2848,4.246,2849,4.952,2850,4.246,2851,4.246,2852,4.246,2853,5.305,2854,4.246,2855,4.246,2856,4.952,2857,4.246,2858,4.246,2859,2.841,2860,2.841,2861,3.694,2862,3.694,2863,3.694,2864,3.694,2865,3.694,2866,3.694,2867,3.694,2868,3.694,2869,4.952,2870,3.694,2871,3.33,2872,3.058,2873,3.694,2874,3.694,2875,3.694,2876,3.694,2877,3.694,2878,3.694,2879,3.694,2880,3.694,2881,3.694,2882,3.694,2883,3.694,2884,3.694,2885,3.694,2886,3.694,2887,3.694,2888,4.952,2889,3.694,2890,3.694,2891,3.694,2892,3.694,2893,3.694,2894,3.694,2895,3.694,2896,5.693,2897,5.693]],["title/classes/LookupTableData.html",[0,0.195,2853,2.864]],["body/classes/LookupTableData.html",[0,0.317,2,1.289,3,0.137,4,0.137,5,0.117,6,0.196,7,0.118,14,0.175,15,0.547,17,0.338,18,0.014,19,0.24,21,0.425,29,0.77,43,1.244,44,1.6,54,0.195,59,0.646,68,0.531,103,0.733,123,0.844,135,1.207,150,0.547,175,0.322,178,0.517,193,0.851,277,4.321,287,0.009,288,0.011,289,0.009,314,0.764,323,0.764,324,1.289,361,0.296,368,1.038,388,0.597,412,1.038,413,1.526,454,2.726,455,1.157,462,2.177,464,2.177,472,2.416,490,2.007,491,2.007,492,1.659,500,3.735,504,2.993,694,2.601,939,5.529,1090,5.322,1100,1.962,1101,1.857,1216,2.089,1249,2.616,1293,3.422,1300,2.733,1567,1.93,1652,1.93,1653,2.601,1705,1.93,1707,2.089,1780,2.271,1803,2.601,2006,2.879,2047,2.601,2320,3.451,2799,3.422,2808,4.629,2818,5.078,2837,3.392,2844,4.045,2845,4.487,2846,4.487,2847,4.487,2849,4.487,2853,5.591,2856,4.487,2859,3.451,2860,3.451,2861,6.134,2862,6.134,2863,6.134,2864,4.487,2865,4.487,2866,4.487,2867,4.487,2868,4.487,2869,5.618,2870,4.487,2871,4.045,2872,3.715,2873,4.487,2874,4.487,2875,4.487,2876,4.487,2877,4.487,2878,4.487,2879,4.487,2880,4.487,2881,4.487,2882,4.487,2883,4.487,2884,4.487,2885,4.487,2886,4.487,2887,4.487,2888,5.618,2889,4.487,2890,4.487,2891,4.487,2892,4.487,2893,4.487,2894,4.487,2895,4.487,2898,5.158,2899,5.158,2900,5.158]],["title/classes/LookupTableEntry.html",[0,0.195,2808,2.492]],["body/classes/LookupTableEntry.html",[0,0.319,2,1.3,3,0.138,4,0.138,5,0.119,6,0.209,7,0.123,14,0.177,15,0.55,17,0.349,18,0.014,19,0.265,54,0.196,68,0.553,105,1.3,115,0.382,117,0.595,135,1.213,150,0.441,175,0.388,178,0.52,193,0.737,287,0.013,288,0.011,289,0.009,305,0.676,306,0.581,308,0.612,311,0.612,358,0.595,359,0.595,413,1.126,673,0.867,692,1.254,849,4.374,1588,3.44,2086,4.644,2461,3.747,2529,5.092,2532,5.982,2799,2.756,2800,6.188,2801,4.08,2802,4.08,2803,4.08,2805,4.526,2806,4.526,2808,4.874,2812,4.526,2813,5.649,2815,6.768,2818,5.338,2819,6.448,2820,5.649,2821,5.649,2822,5.649,2823,5.649,2824,5.649,2825,4.526,2826,4.526,2827,4.526,2828,4.526,2829,4.526,2830,4.526,2831,4.526,2832,5.649,2833,5.649,2834,5.649,2835,6.158,2836,4.526,2837,2.503,2838,4.526,2839,4.526,2840,4.526,2841,6.158,2842,4.526,2843,4.526,2901,6.494,2902,5.203,2903,5.203,2904,5.203,2905,5.203,2906,5.203,2907,5.203]],["title/classes/LookupTableUtil.html",[0,0.195,2908,3.119]],["body/classes/LookupTableUtil.html",[0,0.247,2,1.258,3,0.133,4,0.133,5,0.115,6,0.194,7,0.114,9,2.038,14,0.171,17,0.319,18,0.014,19,0.237,21,0.407,28,4.336,30,1.883,54,0.152,68,0.504,115,0.376,124,2.338,133,1.118,135,0.94,150,0.664,175,0.347,178,0.558,193,0.825,287,0.008,288,0.011,289,0.008,308,0.599,311,0.657,358,0.798,359,0.798,388,0.64,490,1.958,692,1.533,1099,3.946,1100,2.18,1101,1.812,1127,3.624,1365,5.744,1567,1.883,1948,3.984,2748,5.351,2769,6.371,2799,4.002,2837,3.769,2859,3.367,2860,3.367,2908,4.987,2909,6.371,2910,5.532,2911,6.359,2912,6.359,2913,6.359,2914,6.359,2915,5.744,2916,5.033,2917,6.359,2918,5.033,2919,6.359,2920,5.033,2921,2.969,2922,3.367,2923,5.033,2924,3.946,2925,7.554,2926,5.033,2927,5.033,2928,7.325,2929,7.554,2930,6.972,2931,6.359,2932,6.359,2933,5.033,2934,5.033,2935,5.033,2936,5.033,2937,6.359,2938,5.033,2939,5.033,2940,6.972,2941,6.972,2942,5.033,2943,5.033,2944,5.033,2945,6.359,2946,5.033]],["title/classes/MappedField.html",[0,0.195,1793,1.548]],["body/classes/MappedField.html",[0,0.284,2,0.87,3,0.092,4,0.153,5,0.079,6,0.193,7,0.115,14,0.197,15,0.42,17,0.305,18,0.014,19,0.248,21,0.374,29,0.687,30,1.302,32,0.536,54,0.175,59,0.892,68,0.53,75,1.532,80,2.104,103,0.947,105,0.87,115,0.34,116,2.74,117,0.92,123,0.648,124,1.667,134,0.65,135,1.245,150,0.683,160,2.545,175,0.415,178,0.505,193,0.859,249,3.868,251,1.997,253,1.844,287,0.01,288,0.008,289,0.006,305,0.517,306,0.444,308,0.468,311,0.594,312,1.601,323,0.515,358,0.568,359,0.568,388,0.704,393,0.86,417,0.675,447,0.781,501,1.856,502,1.844,546,1.856,562,1.755,607,1.601,673,1.282,681,2.847,692,1.606,758,3.573,929,1.41,943,2.01,969,1.844,1001,1.667,1100,1.38,1125,1.532,1152,2.506,1330,2.729,1377,2.18,1378,2.329,1413,1.469,1539,2.053,1545,2.729,1555,3.89,1556,2.729,1567,1.856,1570,2.506,1574,2.053,1611,2.25,1624,4.163,1644,1.532,1685,2.44,1793,3.24,1871,1.942,1908,2.18,1940,2.18,2013,2.18,2015,3.985,2059,3.008,2103,1.844,2135,3.411,2182,2.729,2185,2.329,2209,1.755,2251,2.729,2519,1.755,2520,1.755,2745,2.729,2748,2.329,2766,2.729,2777,2.729,2778,2.729,2947,2.729,2948,5.029,2949,5.482,2950,4.316,2951,4.961,2952,3.481,2953,3.481,2954,4.798,2955,3.481,2956,3.481,2957,3.481,2958,3.89,2959,3.481,2960,4.316,2961,3.481,2962,2.729,2963,3.411,2964,3.028,2965,3.319,2966,3.028,2967,3.028,2968,3.028,2969,3.028,2970,3.028,2971,3.028,2972,3.028,2973,3.028,2974,3.028,2975,3.028,2976,3.573,2977,2.729,2978,3.89,2979,4.798,2980,2.729,2981,3.028,2982,3.028,2983,3.028,2984,3.028,2985,3.028,2986,3.028,2987,3.028,2988,2.506,2989,2.506,2990,3.028,2991,4.316,2992,5.029,2993,5.029,2994,3.028,2995,3.028,2996,3.028,2997,3.028,2998,3.028,2999,2.729,3000,3.028,3001,3.028,3002,2.729,3003,5.029,3004,3.028,3005,3.028,3006,3.028,3007,5.029,3008,4.316,3009,3.028,3010,5.029,3011,5.029,3012,3.028,3013,3.028,3014,3.028,3015,3.028,3016,2.506,3017,3.028,3018,3.028,3019,3.028,3020,3.028,3021,5.029,3022,3.028,3023,3.028,3024,3.028,3025,2.729,3026,2.729,3027,3.028,3028,4.316,3029,4.316,3030,3.028,3031,3.028,3032,3.028,3033,3.028,3034,3.028,3035,3.028,3036,3.028,3037,3.028,3038,4.316,3039,4.316,3040,3.89,3041,3.028,3042,3.028,3043,3.028,3044,4.316,3045,4.316,3046,2.729,3047,3.028,3048,3.028,3049,3.028,3050,3.028,3051,3.028,3052,3.028,3053,3.028,3054,2.729,3055,3.028,3056,3.028,3057,3.028,3058,3.028,3059,2.729,3060,3.028]],["title/classes/MappedFieldParsingData.html",[0,0.195,2954,2.864]],["body/classes/MappedFieldParsingData.html",[0,0.281,2,0.853,3,0.09,4,0.151,5,0.078,6,0.203,7,0.12,14,0.195,15,0.414,17,0.332,18,0.014,19,0.261,21,0.371,29,0.682,30,1.277,32,0.526,54,0.173,59,0.937,68,0.541,75,1.502,80,2.085,103,0.94,105,0.853,115,0.264,116,2.609,117,0.911,123,0.639,124,0.984,134,0.638,135,1.167,150,0.694,160,2.517,175,0.414,178,0.458,193,0.858,249,3.825,251,1.984,253,1.808,287,0.01,288,0.008,289,0.006,305,0.789,306,0.678,312,1.569,323,0.505,388,0.701,393,0.848,447,0.766,501,1.83,502,1.808,546,1.83,562,1.721,607,1.569,673,1.277,681,2.836,692,1.594,758,3.523,929,1.382,943,1.981,969,1.808,1001,1.649,1100,1.361,1125,1.502,1152,2.457,1330,2.676,1377,2.138,1378,2.283,1413,1.44,1539,2.013,1545,4.484,1555,3.836,1556,2.676,1567,1.83,1570,2.457,1574,2.013,1611,2.225,1624,4.118,1644,1.502,1685,2.413,1793,3.223,1871,1.904,1908,2.138,1940,2.138,2013,2.138,2015,3.91,2059,2.79,2103,1.808,2135,2.013,2182,2.676,2185,2.283,2209,1.721,2251,2.676,2519,1.721,2520,1.721,2745,2.676,2748,2.283,2766,2.676,2777,2.676,2778,2.676,2947,2.676,2948,2.968,2949,2.968,2954,4.497,2958,2.676,2960,2.968,2962,2.676,2963,3.373,2964,2.968,2965,3.272,2966,4.974,2967,4.974,2968,4.974,2969,4.974,2970,4.974,2971,4.974,2972,4.974,2973,4.974,2974,4.974,2975,4.974,2976,3.523,2977,2.676,2978,3.836,2979,4.761,2980,2.676,2981,2.968,2982,2.968,2983,2.968,2984,2.968,2985,2.968,2986,2.968,2987,2.968,2988,2.457,2989,2.457,2990,2.968,2991,4.255,2992,4.974,2993,4.974,2994,2.968,2995,2.968,2996,2.968,2997,2.968,2998,2.968,2999,2.676,3000,2.968,3001,2.968,3002,2.676,3003,4.974,3004,2.968,3005,2.968,3006,2.968,3007,4.974,3008,4.255,3009,2.968,3010,4.974,3011,4.974,3012,2.968,3013,2.968,3014,2.968,3015,2.968,3016,2.457,3017,2.968,3018,2.968,3019,2.968,3020,2.968,3021,4.974,3022,2.968,3023,2.968,3024,2.968,3025,2.676,3026,2.676,3027,2.968,3028,4.255,3029,4.255,3030,2.968,3031,2.968,3032,2.968,3033,2.968,3034,2.968,3035,2.968,3036,2.968,3037,2.968,3038,4.255,3039,4.255,3040,3.836,3041,2.968,3042,2.968,3043,2.968,3044,4.255,3045,4.255,3046,2.676,3047,2.968,3048,2.968,3049,2.968,3050,2.968,3051,2.968,3052,2.968,3053,2.968,3054,2.676,3055,2.968,3056,2.968,3057,2.968,3058,2.968,3059,2.676,3060,2.968,3061,3.412,3062,3.412,3063,3.412,3064,3.412,3065,3.412,3066,3.412,3067,3.412,3068,3.412,3069,3.412,3070,3.412,3071,3.412]],["title/classes/MappingDefinition.html",[0,0.195,28,2.107]],["body/classes/MappingDefinition.html",[0,0.209,2,1.063,3,0.113,4,0.113,5,0.097,6,0.217,7,0.127,14,0.145,15,0.483,17,0.373,18,0.014,19,0.278,21,0.386,28,3.02,29,0.565,30,1.592,31,2.713,54,0.129,68,0.546,105,1.606,115,0.432,117,0.861,133,1.243,138,2.665,150,0.648,160,3.368,175,0.386,178,0.515,193,0.815,253,3.638,287,0.007,288,0.01,289,0.007,305,0.797,306,0.684,308,0.537,311,0.73,358,0.861,359,0.861,388,0.607,393,0.737,489,2.254,490,1.655,1100,2.238,1125,1.873,1567,1.592,1588,2.254,1802,2.665,1871,2.374,2493,5.041,2519,2.145,2520,2.145,2746,5.041,2748,3.814,2799,4.298,2802,4.47,2803,5.385,2837,3.445,2859,2.846,2860,2.846,2988,3.064,2989,3.064,3059,3.336,3072,7.126,3073,3.336,3074,6.429,3075,7.161,3076,6.429,3077,6.429,3078,5.592,3079,5.7,3080,5.7,3081,5.7,3082,5.7,3083,5.7,3084,6.868,3085,4.959,3086,5.7,3087,6.868,3088,5.7,3089,3.701,3090,3.701,3091,4.254,3092,3.701,3093,4.254,3094,5.7,3095,3.701,3096,3.701,3097,5.7,3098,4.254,3099,5.7,3100,4.254,3101,5.7,3102,4.254,3103,5.7,3104,5.7,3105,3.701,3106,5.7,3107,4.254,3108,4.254,3109,5.7,3110,4.254,3111,5.7,3112,4.254,3113,4.254,3114,5.7,3115,4.254,3116,4.254,3117,4.254,3118,6.868,3119,4.254,3120,4.254,3121,4.254,3122,4.254,3123,4.254,3124,4.254,3125,4.254,3126,4.254,3127,4.254,3128,4.254,3129,5.7,3130,4.254,3131,4.959,3132,5.7,3133,4.254,3134,4.254]],["title/components/MappingDetailComponent.html",[361,0.182,415,0.83]],["body/components/MappingDetailComponent.html",[0,0.278,3,0.112,4,0.112,5,0.096,6,0.207,7,0.124,14,0.144,15,0.48,17,0.337,18,0.014,19,0.263,21,0.412,29,0.816,32,0.874,54,0.128,59,0.528,68,0.378,115,0.385,123,0.837,133,1.179,134,1.197,137,1.941,175,0.21,178,0.612,193,0.766,263,0.881,264,0.881,287,0.007,288,0.01,289,0.007,308,0.534,311,0.673,314,0.625,322,1.409,323,0.625,324,1.417,358,0.649,359,0.649,361,0.293,362,0.881,363,1.319,364,1.018,365,1.018,367,0.947,368,1.688,369,1.141,370,1.018,372,1.319,373,0.914,374,1.367,375,1.319,376,0.881,377,1.651,378,1.018,379,1.018,380,0.914,381,1.018,382,0.881,383,1.018,384,1.429,385,1.018,386,1.018,387,0.881,388,0.684,389,1.722,390,0.881,391,1.018,392,0.881,393,0.983,394,0.914,395,1.018,396,0.881,397,1.018,398,0.881,399,1.018,400,0.849,401,1.651,402,0.849,403,0.982,404,1.482,405,1.018,406,0.914,407,1.018,408,0.881,409,0.881,410,0.849,411,1.018,412,0.849,413,1.227,414,1.018,415,1.491,416,0.881,417,0.819,418,1.018,419,0.881,420,1.018,421,0.881,422,1.018,423,0.881,424,0.881,425,1.367,426,0.881,427,0.819,428,1.018,429,1.568,430,1.018,431,0.881,432,1.272,433,1.018,434,0.881,435,0.909,436,0.819,437,1.367,438,1.537,439,0.881,440,1.367,441,0.881,442,0.881,443,0.881,444,0.881,445,1.018,446,0.881,447,0.947,448,0.982,449,0.849,450,0.982,451,1.018,455,1.272,470,1.309,482,1.71,488,1.941,490,1.643,491,1.643,492,1.358,504,3.167,505,3.04,510,2.122,517,3.229,519,1.544,598,2.945,599,3.392,617,3.574,619,3.821,620,3.148,638,3.392,657,3.977,694,2.86,824,3.165,977,2.491,1075,3.672,1088,3.672,1100,1.782,1101,1.52,1226,2.824,1227,4.084,1228,4.084,1256,3.31,1292,3.672,1295,3.31,1382,3.04,1384,3.794,1385,3.794,1390,3.794,1391,2.824,1392,4.58,1394,3.794,1396,3.672,1403,2.824,1404,3.794,1412,3.794,1413,2.703,1415,3.04,1416,2.824,1417,2.824,2746,3.31,3085,4.933,3131,4.933,3135,6.404,3136,6.404,3137,7.354,3138,4.933,3139,4.222,3140,3.31,3141,4.222,3142,5.671,3143,4.222,3144,5.671,3145,4.222,3146,4.222,3147,5.671,3148,4.222,3149,4.222,3150,4.222,3151,4.222,3152,4.222,3153,3.672,3154,4.222,3155,4.222,3156,4.222,3157,3.672,3158,4.222,3159,4.222,3160,4.222,3161,4.222,3162,4.222,3163,4.222,3164,4.222,3165,4.222,3166,4.222,3167,4.222,3168,4.222]],["title/components/MappingFieldActionArgumentComponent.html",[361,0.182,416,0.83]],["body/components/MappingFieldActionArgumentComponent.html",[0,0.224,3,0.082,4,0.082,5,0.071,6,0.21,7,0.125,9,1.258,14,0.217,15,0.387,17,0.361,18,0.014,19,0.269,21,0.371,29,0.765,32,0.704,43,1.307,44,0.963,54,0.094,59,0.748,68,0.511,77,3.525,80,2.126,103,0.77,105,1.354,115,0.401,117,0.62,123,0.708,133,0.869,134,1.013,150,0.459,175,0.378,178,0.566,193,0.736,251,2.037,263,0.648,264,0.648,287,0.005,288,0.008,289,0.005,305,0.564,306,0.632,308,0.431,311,0.691,314,0.46,323,0.46,339,2.631,358,0.808,359,0.808,361,0.292,362,0.648,363,1.063,364,0.749,365,0.749,367,0.697,368,1.656,369,0.919,370,0.749,372,1.063,373,0.672,374,1.101,375,1.063,376,0.648,377,1.441,378,0.749,379,0.749,380,0.672,381,0.749,382,0.648,383,0.749,384,0.648,385,0.749,386,0.749,387,0.648,388,0.704,389,1.535,390,0.648,391,0.749,392,0.648,393,0.939,394,0.672,395,0.749,396,0.648,397,0.749,398,0.648,399,0.749,400,0.625,401,1.441,402,0.625,403,0.722,404,1.293,405,0.749,406,0.672,407,0.749,408,0.648,409,0.648,410,0.625,411,0.749,412,0.625,413,0.672,414,0.749,415,0.648,416,1.247,417,1.602,418,0.749,419,0.648,420,0.749,421,0.648,422,0.749,423,0.648,424,0.648,425,1.101,426,0.648,427,0.602,428,0.749,429,0.648,430,0.749,431,0.648,432,1.341,433,0.749,434,0.648,435,0.733,436,0.602,437,1.101,438,0.625,439,0.648,440,1.101,441,0.648,442,0.648,443,0.648,444,0.648,445,0.749,446,0.648,447,0.697,448,0.722,449,0.625,450,0.722,451,0.749,455,1.025,470,1.853,501,1.709,502,2.42,504,3.212,510,1.709,519,1.831,525,4.313,544,3.998,546,1.709,657,3.999,673,0.996,725,3.056,761,3.062,768,3.974,777,3.582,783,2.198,822,2.695,824,1.733,929,1.85,943,2.697,968,1.076,979,1.258,981,2.078,1001,2.114,1101,1.118,1106,3.056,1125,1.367,1186,3.974,1249,1.85,1316,3.974,1416,2.078,1458,2.304,1597,2.435,1644,2.631,1645,1.85,1652,1.162,1654,3.974,1701,4.686,1705,1.162,1707,1.85,1719,3.974,1793,2.591,1807,3.582,1900,2.695,1927,2.862,1930,3.998,2004,2.304,2005,2.695,2043,1.645,2059,2.905,2065,3.525,2077,4.023,2078,3.525,2094,1.832,2101,4.52,2135,2.695,2160,3.056,2164,3.056,2208,1.946,2209,1.566,2519,1.566,2520,1.566,2922,2.078,2963,1.832,3169,2.702,3170,4.568,3171,5.419,3172,4.714,3173,4.568,3174,4.568,3175,5.976,3176,4.568,3177,4.568,3178,3.582,3179,5.198,3180,4.568,3181,4.568,3182,4.568,3183,7.063,3184,6.884,3185,7.063,3186,4.568,3187,3.106,3188,3.106,3189,3.106,3190,3.106,3191,3.106,3192,3.106,3193,4.568,3194,3.106,3195,4.568,3196,3.106,3197,5.976,3198,3.29,3199,5.398,3200,3.582,3201,3.106,3202,3.974,3203,4.568,3204,3.106,3205,4.568,3206,3.106,3207,4.568,3208,4.568,3209,4.568,3210,4.568,3211,3.582,3212,4.568,3213,4.568,3214,3.106,3215,3.582,3216,4.568,3217,4.568,3218,3.106,3219,4.568,3220,4.823,3221,3.106,3222,4.568,3223,4.568,3224,3.106,3225,4.568,3226,3.106,3227,4.568,3228,4.568,3229,5.419,3230,3.974,3231,5.419,3232,3.106,3233,2.078,3234,2.435,3235,3.106,3236,2.435,3237,4.686,3238,2.702,3239,3.974,3240,4.568,3241,2.695,3242,3.106,3243,4.568,3244,3.106,3245,3.106,3246,4.568,3247,3.106,3248,3.106,3249,3.106,3250,2.435,3251,3.106,3252,3.106,3253,3.106,3254,3.106,3255,2.702,3256,3.106,3257,3.106,3258,3.106,3259,2.702,3260,3.106,3261,2.435,3262,2.435,3263,4.568,3264,2.435,3265,3.106,3266,2.702,3267,3.106,3268,4.568,3269,3.106,3270,3.106,3271,3.106,3272,3.106,3273,3.106,3274,3.106,3275,3.106,3276,3.106,3277,2.702,3278,4.568,3279,6.659,3280,4.568,3281,3.974]],["title/components/MappingFieldActionComponent.html",[361,0.182,419,0.83]],["body/components/MappingFieldActionComponent.html",[0,0.272,3,0.108,4,0.108,5,0.093,6,0.209,7,0.125,14,0.248,15,0.469,17,0.341,18,0.014,19,0.267,21,0.38,29,0.806,32,0.853,54,0.123,68,0.419,77,3.709,80,2.251,115,0.392,116,2.263,117,0.833,123,0.822,134,1.175,137,2.544,175,0.336,178,0.503,193,0.735,251,1.596,263,0.85,264,0.85,265,2.157,287,0.007,288,0.009,289,0.007,305,0.576,306,0.364,308,0.521,311,0.686,314,0.603,323,0.603,358,0.719,359,0.719,361,0.288,362,0.85,363,1.287,364,0.981,365,0.981,367,0.913,368,1.685,369,1.113,370,0.981,372,1.287,373,0.881,374,1.334,375,1.287,376,0.85,377,1.626,378,0.981,379,0.981,380,0.881,381,0.981,382,0.85,383,0.981,384,0.85,385,0.981,386,0.981,387,0.85,388,0.708,389,1.701,390,0.85,391,0.981,392,0.85,393,1.089,394,0.881,395,0.981,396,0.85,397,0.981,398,0.85,399,0.981,400,0.819,401,1.626,402,0.819,403,0.947,404,1.46,405,0.981,406,0.881,407,0.981,408,0.85,409,0.85,410,0.819,411,0.981,412,0.819,413,0.881,414,0.981,415,0.85,416,0.85,417,1.558,418,0.981,419,1.408,420,0.981,421,0.85,422,0.981,423,0.85,424,0.85,425,1.334,426,0.85,427,0.789,428,0.981,429,0.85,430,0.981,431,0.85,432,1.513,433,0.981,434,0.85,435,0.887,436,0.789,437,1.334,438,0.819,439,0.85,440,1.334,441,0.85,442,0.85,443,0.85,444,0.85,445,0.981,446,0.85,447,0.913,448,0.947,449,0.819,450,0.947,451,0.981,455,1.242,470,1.716,504,3.199,510,2.07,519,1.701,525,3.938,657,3.982,673,1.176,681,1.523,761,2.544,887,4.339,1001,1.813,1100,1.749,1101,1.465,1125,1.792,1249,1.649,1281,2.55,1413,2.335,1644,2.436,1793,2.831,2059,3.141,2067,3.573,2078,3.264,2079,2.157,2085,3.938,2087,3.264,2089,2.272,2093,2.55,2094,2.402,2101,3.264,2135,3.264,2160,3.702,2208,2.55,2209,2.053,2519,2.053,2520,2.053,2950,4.813,2958,4.339,3178,4.929,3179,5.867,3198,3.985,3199,4.929,3200,4.339,3238,3.541,3241,2.402,3261,3.192,3262,3.192,3264,3.192,3266,3.541,3282,3.541,3283,5.533,3284,6.745,3285,4.813,3286,6.745,3287,4.813,3288,4.071,3289,4.071,3290,4.071,3291,4.071,3292,4.071,3293,4.813,3294,4.071,3295,4.071,3296,4.071,3297,4.813,3298,4.071,3299,4.813,3300,4.071,3301,4.813,3302,4.813,3303,4.071,3304,4.339,3305,3.985,3306,4.071,3307,4.071,3308,4.813,3309,4.071,3310,4.071,3311,3.541,3312,3.541,3313,3.541,3314,3.541,3315,3.541,3316,3.192,3317,3.541,3318,3.541,3319,3.541,3320,3.541,3321,3.541,3322,3.541,3323,4.813]],["title/components/MappingFieldContainerComponent.html",[361,0.182,421,0.83]],["body/components/MappingFieldContainerComponent.html",[0,0.218,3,0.079,4,0.155,5,0.068,6,0.216,7,0.127,14,0.102,15,0.376,17,0.361,18,0.014,19,0.277,21,0.377,29,0.775,32,0.684,54,0.09,59,0.874,68,0.515,103,0.967,105,1.324,115,0.41,116,1.907,117,0.863,123,0.692,133,1.23,134,0.99,150,0.576,175,0.389,178,0.618,193,0.462,247,1.667,248,1.763,261,2.956,263,0.624,264,0.624,287,0.005,288,0.007,289,0.005,305,0.684,306,0.625,308,0.418,311,0.74,314,0.442,321,3.125,322,0.997,323,0.442,324,1.109,358,0.843,359,0.843,361,0.243,362,0.624,363,1.033,364,0.72,365,0.72,367,0.67,368,1.651,369,0.893,370,0.72,372,1.033,373,0.647,374,1.07,375,1.033,376,0.624,377,1.414,378,0.72,379,0.72,380,0.647,381,0.72,382,0.624,383,0.72,384,0.624,385,0.72,386,0.72,387,0.624,388,0.702,389,1.511,390,0.624,391,0.72,392,0.624,393,0.918,394,0.647,395,0.72,396,0.624,397,0.72,398,0.624,399,0.72,400,0.601,401,1.414,402,0.601,403,0.695,404,1.269,405,0.72,406,0.647,407,0.72,408,0.624,409,0.624,410,0.601,411,0.72,412,0.601,413,0.647,414,0.72,415,0.624,416,0.624,417,0.579,418,0.72,419,0.624,420,0.72,421,1.224,422,0.72,423,0.624,424,0.624,425,1.07,426,0.624,427,0.579,428,0.72,429,0.624,430,0.72,431,0.624,432,0.996,433,0.72,434,0.624,435,0.712,436,0.579,437,1.07,438,1.18,439,0.624,440,1.07,441,0.624,442,0.624,443,0.624,444,0.624,445,0.72,446,0.624,447,0.67,448,0.695,449,0.601,450,0.695,451,0.72,455,0.996,470,2.213,490,1.163,491,1.163,492,0.961,504,3.303,510,1.661,517,2.671,519,1.583,522,3.273,598,2.436,617,2.956,620,2.697,657,4.112,673,1.095,679,2.151,724,1.872,765,2.599,779,2.599,907,4.608,951,2.599,986,3.862,987,2.599,988,2.599,1001,1.28,1100,1.474,1101,1.075,1125,1.315,1231,4.608,1232,3.862,1233,3.862,1235,4.608,1245,3.862,1247,3.862,1258,3.862,1260,3.862,1261,5.101,1265,3.862,1291,3.862,1308,2.599,1313,4.608,1326,3.862,1327,2.599,1328,2.599,1329,2.599,1332,4.608,1333,4.154,1334,3.815,1342,1.872,1347,1.999,1423,2.599,1611,2.282,1659,2.151,1685,1.874,1793,2.903,1900,3.46,2015,1.583,2339,4.608,2370,2.599,2371,2.599,2403,2.599,2519,1.507,2520,1.507,2600,2.599,2921,1.763,2922,1.999,2976,2.151,3016,3.197,3153,2.599,3241,1.763,3259,2.599,3305,5.23,3324,2.599,3325,4.439,3326,4.439,3327,5.297,3328,5.297,3329,4.154,3330,4.608,3331,5.864,3332,5.864,3333,5.864,3334,4.439,3335,4.439,3336,5.864,3337,5.864,3338,5.864,3339,5.864,3340,4.439,3341,3.862,3342,3.862,3343,4.439,3344,4.439,3345,2.988,3346,2.988,3347,2.988,3348,2.988,3349,2.988,3350,2.988,3351,2.988,3352,2.988,3353,5.864,3354,2.988,3355,2.988,3356,6.567,3357,2.988,3358,4.439,3359,2.988,3360,2.988,3361,2.988,3362,4.439,3363,2.988,3364,2.988,3365,2.988,3366,4.439,3367,2.988,3368,2.988,3369,2.988,3370,4.439,3371,2.988,3372,5.864,3373,2.988,3374,4.439,3375,2.988,3376,2.988,3377,2.988,3378,2.988,3379,2.988,3380,2.988,3381,2.988,3382,2.988,3383,4.154,3384,2.988,3385,4.439,3386,2.988,3387,2.343,3388,2.343,3389,4.439,3390,4.439,3391,4.439,3392,5.297,3393,2.988,3394,4.439,3395,2.988,3396,2.988,3397,2.343,3398,2.988,3399,2.988,3400,2.988,3401,4.439,3402,4.439,3403,2.988,3404,2.988,3405,2.988,3406,2.988,3407,2.988,3408,5.297,3409,2.599,3410,2.988,3411,2.988,3412,2.988,3413,2.988,3414,2.988,3415,3.862,3416,2.988,3417,4.439,3418,4.439,3419,2.599,3420,2.988,3421,5.297,3422,4.608,3423,2.343,3424,2.151,3425,2.151,3426,2.988,3427,2.988,3428,2.343,3429,2.988,3430,2.599,3431,2.599]],["title/components/MappingFieldDetailComponent.html",[361,0.182,423,0.83]],["body/components/MappingFieldDetailComponent.html",[0,0.243,3,0.092,4,0.092,5,0.079,6,0.211,7,0.125,10,3.86,14,0.256,15,0.419,17,0.339,18,0.014,19,0.272,21,0.359,29,0.783,32,0.763,43,0.836,44,1.075,54,0.105,59,0.434,68,0.485,103,0.703,115,0.359,116,2.077,117,0.815,123,0.754,133,1.188,134,1.078,135,0.648,137,2.276,150,0.661,175,0.383,178,0.593,193,0.693,251,1.427,263,0.724,264,0.724,287,0.006,288,0.008,289,0.006,306,0.663,308,0.466,311,0.717,314,0.513,323,0.513,324,1.236,358,0.566,359,0.566,361,0.264,362,0.724,363,1.151,364,0.836,365,0.836,367,0.778,368,1.668,369,0.996,370,0.836,372,1.151,373,0.75,374,1.193,375,1.151,376,0.724,377,1.517,378,0.836,379,0.836,380,0.75,381,0.836,382,0.724,383,0.836,384,0.724,385,0.836,386,0.836,387,0.724,388,0.705,389,1.604,390,0.724,391,0.836,392,0.724,393,0.857,394,0.75,395,0.836,396,0.724,397,0.836,398,0.724,399,0.836,400,0.698,401,1.517,402,0.698,403,0.807,404,1.362,405,0.836,406,0.75,407,0.836,408,0.724,409,0.724,410,0.698,411,0.836,412,0.698,413,0.75,414,0.836,415,0.724,416,0.724,417,1.341,418,0.836,419,0.724,420,0.836,421,0.724,422,0.836,423,1.313,424,0.724,425,1.193,426,0.724,427,0.672,428,0.836,429,0.724,430,0.836,431,0.724,432,1.11,433,0.836,434,0.724,435,0.794,436,0.672,437,1.193,438,0.698,439,0.724,440,1.193,441,0.724,442,0.724,443,0.724,444,0.724,445,0.836,446,0.724,447,0.778,448,0.807,449,0.698,450,0.807,451,0.836,455,1.11,470,1.535,500,1.837,501,1.851,504,3.23,510,1.851,519,1.604,522,3.511,598,2.653,620,2.893,657,4.022,673,1.109,681,1.851,692,0.836,712,2.172,943,2.004,968,1.202,981,2.32,1100,1.605,1101,1.248,1106,3.31,1158,3.31,1226,2.32,1227,3.563,1228,3.563,1249,2.337,1254,3.017,1256,2.719,1266,3.017,1295,2.719,1342,2.172,1644,3.045,1645,1.405,1652,1.297,1653,1.749,1685,3.127,1705,1.297,1707,1.405,1730,3.88,1780,1.527,1793,3.103,1843,3.31,1969,3.404,2004,1.749,2005,2.046,2006,1.935,2015,1.837,2059,2.435,2135,2.046,2160,4.451,2208,2.172,2209,1.749,2418,3.017,2419,3.017,2421,3.017,2422,3.017,2976,3.563,3016,3.563,3054,4.524,3140,2.719,3237,4.934,3241,2.919,3304,2.719,3305,2.497,3341,4.304,3387,2.719,3388,2.719,3409,3.017,3415,3.017,3430,3.017,3431,3.017,3432,6.653,3433,5.77,3434,6.292,3435,6.292,3436,5.473,3437,6.017,3438,5.473,3439,5.473,3440,4.948,3441,6.292,3442,6.292,3443,3.468,3444,3.468,3445,3.468,3446,3.017,3447,3.468,3448,3.468,3449,3.468,3450,3.468,3451,3.468,3452,4.948,3453,3.468,3454,4.948,3455,4.948,3456,3.88,3457,5.77,3458,4.155,3459,4.304,3460,4.948,3461,4.948,3462,4.948,3463,4.948,3464,4.948,3465,3.468,3466,3.468,3467,4.948,3468,4.948,3469,4.948,3470,4.304,3471,3.468,3472,3.017,3473,3.468,3474,5.019,3475,3.468,3476,5.77,3477,3.468,3478,4.304,3479,3.468,3480,3.468,3481,6.292,3482,3.468,3483,3.468,3484,5.77,3485,3.468,3486,3.468,3487,3.468,3488,3.468,3489,3.468,3490,3.468,3491,3.468,3492,3.017,3493,3.468,3494,4.304,3495,4.304,3496,4.948,3497,3.468]],["title/components/MappingListComponent.html",[361,0.182,424,0.83]],["body/components/MappingListComponent.html",[0,0.239,3,0.09,4,0.09,5,0.077,6,0.214,7,0.127,14,0.224,15,0.412,17,0.353,18,0.014,19,0.274,21,0.37,29,0.797,32,0.749,43,1.5,44,1.049,54,0.102,59,0.779,68,0.525,103,0.809,115,0.403,116,2.048,117,0.843,123,0.744,133,1.226,134,1.063,135,1.063,150,0.581,160,2.901,175,0.392,178,0.59,193,0.714,246,2.617,247,2.713,248,2.868,263,0.706,264,0.706,287,0.006,288,0.008,289,0.01,305,0.648,306,0.556,308,0.458,311,0.742,314,0.501,322,1.129,323,0.501,324,1.215,358,0.809,359,0.809,361,0.26,362,0.706,363,1.131,364,0.815,365,0.815,367,0.759,368,1.666,369,0.978,370,0.815,372,1.131,373,0.732,374,1.172,375,1.131,376,0.706,377,1.5,378,0.815,379,0.815,380,0.732,381,0.815,382,0.706,383,0.815,384,0.706,385,0.815,386,0.815,387,0.706,388,0.648,389,1.589,390,0.706,391,0.815,392,0.706,393,0.842,394,0.732,395,0.815,396,0.706,397,0.815,398,0.706,399,0.815,400,0.681,401,1.5,402,0.681,403,0.787,404,1.346,405,0.815,406,0.732,407,0.815,408,0.706,409,0.706,410,0.681,411,0.815,412,0.681,413,0.732,414,0.815,415,0.706,416,0.706,417,0.656,418,0.815,419,0.706,420,0.815,421,0.706,422,0.815,423,0.706,424,1.298,425,1.172,426,0.706,427,1.103,428,0.815,429,0.706,430,0.815,431,0.706,432,1.091,433,0.815,434,0.706,435,0.779,436,0.656,437,1.172,438,0.681,439,0.706,440,1.172,441,0.706,442,0.706,443,0.706,444,0.706,445,0.815,446,0.706,447,0.759,448,0.787,449,0.681,450,0.787,451,0.815,455,1.091,490,1.316,504,3.277,510,1.819,519,1.172,522,2.713,598,2.617,599,3.014,619,3.472,620,2.86,638,3.014,673,0.564,692,0.815,908,1.792,909,4.95,950,1.996,970,4.228,973,2.942,977,2.868,984,2.652,1001,1.641,1081,5.825,1100,2.229,1101,1.218,1168,2.652,1170,2.652,1360,5.089,1377,2.119,1426,3.045,1567,1.265,1652,1.265,1653,1.706,1705,1.265,1713,2.263,1739,2.263,1742,2.942,1771,2.942,1773,2.942,1793,2.42,1972,1.555,2043,1.792,2979,2.436,3138,4.228,3241,1.996,3329,5.167,3383,5.542,3428,5.167,3498,2.652,3499,4.228,3500,4.95,3501,4.95,3502,5.69,3503,4.861,3504,5.411,3505,4.861,3506,4.861,3507,6.22,3508,6.22,3509,5.411,3510,5.411,3511,4.861,3512,5.411,3513,4.861,3514,5.411,3515,2.942,3516,4.861,3517,3.383,3518,3.383,3519,4.861,3520,3.383,3521,4.861,3522,3.383,3523,3.383,3524,3.383,3525,3.383,3526,3.383,3527,4.861,3528,3.383,3529,3.383,3530,2.942,3531,4.228,3532,3.383,3533,3.383,3534,4.861,3535,3.383,3536,4.861,3537,3.383,3538,3.383,3539,2.942,3540,2.942,3541,3.383,3542,2.942,3543,2.942,3544,3.383,3545,3.383,3546,3.383,3547,6.502,3548,4.95,3549,2.942,3550,2.652,3551,3.383,3552,4.228,3553,4.228,3554,4.95,3555,4.861,3556,3.383,3557,2.942,3558,2.942,3559,2.942,3560,2.942,3561,4.861,3562,5.69,3563,3.383,3564,3.383,3565,3.383,3566,3.383,3567,3.383,3568,3.383,3569,3.383,3570,3.383,3571,3.383,3572,3.383,3573,3.383,3574,4.861]],["title/components/MappingListFieldComponent.html",[361,0.182,426,0.83]],["body/components/MappingListFieldComponent.html",[0,0.294,3,0.121,4,0.121,5,0.105,6,0.208,7,0.125,14,0.156,17,0.324,18,0.014,19,0.265,21,0.36,29,0.802,32,0.924,54,0.139,59,0.574,68,0.472,103,0.852,115,0.36,116,2.402,117,0.862,123,0.872,134,1.247,150,0.659,175,0.382,263,0.958,264,0.958,287,0.008,288,0.01,289,0.008,308,0.565,311,0.667,314,0.679,323,0.679,361,0.306,362,0.958,363,1.394,364,1.106,365,1.106,367,1.03,368,1.696,369,1.206,370,1.106,372,1.394,373,0.993,374,1.445,375,1.394,376,0.958,377,1.706,378,1.106,379,1.106,380,0.993,381,1.106,382,0.958,383,1.106,384,0.958,385,1.106,386,1.106,387,0.958,388,0.672,389,1.77,390,0.958,391,1.106,392,0.958,393,1.038,394,0.993,395,1.106,396,0.958,397,1.106,398,0.958,399,1.106,400,0.923,401,1.706,402,0.923,403,1.067,404,1.531,405,1.106,406,0.993,407,1.106,408,0.958,409,0.958,410,0.923,411,1.106,412,0.923,413,0.993,414,1.106,415,0.958,416,0.958,417,0.89,418,1.106,419,0.958,420,1.106,421,0.958,422,1.106,423,0.958,424,0.958,425,1.445,426,1.477,427,1.575,428,1.106,429,0.958,430,1.106,431,0.958,432,1.345,433,1.106,434,0.958,435,0.961,436,0.89,437,1.445,438,0.923,439,0.958,440,1.445,441,0.958,442,0.958,443,0.958,444,0.958,445,1.106,446,0.958,447,1.03,448,1.067,449,0.923,450,1.067,451,1.106,455,1.345,500,2.431,504,3.186,510,2.242,519,1.77,522,3.949,673,0.999,1081,5.664,1101,1.652,1342,2.874,1793,2.93,3237,5.233,3305,3.304,3387,3.598,3388,3.598,3436,6.155,3437,6.766,3438,6.549,3439,6.155,3474,5.805,3478,5.213,3492,3.991,3575,3.991,3576,5.993,3577,6.674,3578,4.588,3579,4.588,3580,4.588,3581,4.588,3582,4.588,3583,4.588,3584,4.588,3585,4.588,3586,4.588]],["title/components/MappingSelectionComponent.html",[361,0.182,429,0.83]],["body/components/MappingSelectionComponent.html",[0,0.273,3,0.108,4,0.167,5,0.093,6,0.212,7,0.126,14,0.23,15,0.471,17,0.347,18,0.014,19,0.271,21,0.393,29,0.801,32,0.857,54,0.124,59,0.847,68,0.471,75,3.113,103,0.961,115,0.381,117,0.809,123,0.824,133,1.169,134,1.179,135,1.039,150,0.599,160,2.777,175,0.352,178,0.445,193,0.736,263,0.855,264,0.855,287,0.007,288,0.009,289,0.007,305,0.579,306,0.497,308,0.524,311,0.703,314,0.607,323,0.607,324,1.389,358,0.636,359,0.636,361,0.289,362,0.855,363,1.293,364,0.988,365,0.988,367,0.92,368,1.686,369,1.118,370,0.988,372,1.293,373,0.887,374,1.34,375,1.293,376,0.855,377,1.631,378,0.988,379,0.988,380,0.887,381,0.988,382,0.855,383,0.988,384,0.855,385,0.988,386,0.988,387,0.855,388,0.665,389,1.705,390,0.855,391,0.988,392,0.855,393,0.963,394,0.887,395,0.988,396,0.855,397,0.988,398,0.855,399,0.988,400,0.825,401,1.631,402,0.825,403,0.953,404,1.464,405,0.988,406,0.887,407,0.988,408,0.855,409,0.855,410,0.825,411,0.988,412,0.825,413,0.887,414,0.988,415,0.855,416,0.855,417,0.795,418,0.988,419,0.855,420,0.988,421,0.855,422,0.988,423,0.855,424,0.855,425,1.34,426,0.855,427,0.795,428,0.988,429,1.521,430,0.988,431,1.623,432,1.586,433,0.988,434,0.855,435,0.891,436,0.795,437,1.34,438,1.361,439,0.855,440,1.34,441,0.855,442,0.855,443,0.855,444,0.855,445,0.988,446,0.855,447,0.92,448,0.953,449,0.825,450,0.953,451,0.988,454,2.662,455,1.247,462,2.855,464,2.855,472,2.36,482,1.66,490,1.595,491,1.595,492,1.318,504,3.241,617,3.52,657,4.035,692,1.631,694,3.411,1001,1.182,1089,3.565,1100,1.967,1101,1.475,1216,1.66,1224,3.214,1293,3.342,1300,2.171,1363,5.487,1382,2.951,1611,2.163,1685,2.346,1972,1.885,3342,4.835,3587,3.214,3588,4.835,3589,6.308,3590,6.308,3591,5.884,3592,4.835,3593,6.764,3594,6.764,3595,4.099,3596,4.835,3597,5.884,3598,4.099,3599,4.099,3600,4.099,3601,4.099,3602,4.099,3603,5.559,3604,4.099,3605,3.565,3606,4.099,3607,4.099,3608,5.559,3609,3.565,3610,4.099,3611,4.099,3612,4.099,3613,4.099,3614,4.099,3615,4.099,3616,5.559,3617,4.099,3618,3.565,3619,4.359,3620,4.359,3621,3.565,3622,4.099,3623,4.099,3624,4.099,3625,6.308,3626,4.099,3627,5.559,3628,6.764]],["title/components/MappingSelectionSectionComponent.html",[361,0.182,431,0.83]],["body/components/MappingSelectionSectionComponent.html",[0,0.275,3,0.11,4,0.149,5,0.095,6,0.21,7,0.125,14,0.231,17,0.343,18,0.014,19,0.268,21,0.303,29,0.818,32,0.865,54,0.126,59,0.976,68,0.514,75,3.223,103,0.967,115,0.395,116,2.02,117,0.838,150,0.352,175,0.354,178,0.333,193,0.584,247,2.319,248,2.452,263,0.867,264,0.867,287,0.007,288,0.009,289,0.007,305,0.662,306,0.568,308,0.529,311,0.641,314,0.615,358,0.727,359,0.727,361,0.325,362,0.867,363,1.305,364,1.002,365,1.002,367,0.932,368,1.687,369,1.129,370,1.002,372,1.305,373,0.899,374,1.353,375,1.305,376,0.867,377,1.64,378,1.002,379,1.002,380,0.899,381,1.002,382,0.867,383,1.002,384,0.867,385,1.002,386,1.002,387,0.867,388,0.645,389,1.713,390,0.867,391,1.002,392,0.867,393,0.972,394,0.899,395,1.002,396,0.867,397,1.002,398,0.867,399,1.002,400,0.836,401,1.64,402,0.836,403,0.967,404,1.472,405,1.002,406,0.899,407,1.002,408,0.867,409,0.867,410,0.836,411,1.002,412,0.836,413,0.899,414,1.002,415,0.867,416,0.867,417,0.806,418,1.002,419,0.867,420,1.002,421,0.867,422,1.002,423,0.867,424,0.867,425,1.353,426,0.867,427,0.806,428,1.002,429,0.867,430,1.002,431,1.42,432,1.828,433,1.002,434,0.867,435,0.9,436,0.806,437,1.353,438,0.836,439,0.867,440,1.353,441,0.867,442,0.867,443,0.867,444,0.867,445,1.002,446,0.867,447,0.932,448,0.967,449,0.836,450,0.967,451,1.002,455,1.259,470,1.289,504,3.209,509,4.4,510,2.099,516,4.4,517,3.203,519,1.835,657,3.996,673,0.935,692,1.765,1001,1.832,1100,2.037,1101,1.496,1224,3.258,1249,2.573,1360,4.898,1362,3.615,1455,3.31,1611,1.617,3397,4.4,3592,4.881,3596,4.881,3597,5.917,3618,3.615,3619,4.4,3620,4.4,3621,3.615,3629,3.615,3630,5.611,3631,6.802,3632,5.611,3633,6.352,3634,7.104,3635,6.352,3636,6.352,3637,6.352,3638,4.155,3639,4.155,3640,4.155,3641,4.155,3642,4.155,3643,4.155,3644,4.155,3645,4.155,3646,4.155,3647,5.611,3648,4.155,3649,4.155,3650,4.155,3651,4.155,3652,4.155,3653,4.155,3654,4.155,3655,4.155,3656,4.155,3657,5.611,3658,6.802,3659,5.611,3660,6.802]],["title/classes/MappingUtil.html",[0,0.195,3661,3.119]],["body/classes/MappingUtil.html",[0,0.201,2,1.021,3,0.108,4,0.108,5,0.093,6,0.197,7,0.116,9,2.247,14,0.139,17,0.356,18,0.014,19,0.248,21,0.393,29,0.624,30,1.529,31,3.074,32,0.855,43,1.518,44,1.267,54,0.123,59,0.694,68,0.518,75,2.773,103,0.96,114,2.06,115,0.393,116,2.432,117,0.773,123,1.033,124,2.328,133,1.083,134,1.416,135,1.036,137,1.879,150,0.674,160,2.773,175,0.204,178,0.583,193,0.817,241,3.711,254,5.086,255,4.868,280,2.942,287,0.007,288,0.009,289,0.007,308,0.523,311,0.686,323,0.605,358,0.833,359,0.833,388,0.658,417,1.221,489,2.165,490,1.59,673,0.925,681,1.529,692,1.756,968,1.416,979,2.736,1001,1.178,1100,2.026,1101,1.471,1127,2.942,1161,1.59,1375,2.165,1413,1.724,1458,2.797,1546,4.938,1567,2.356,1644,2.773,1645,2.736,1652,1.529,1705,1.529,1707,2.736,1780,2.442,1793,2.748,1871,2.28,1948,3.475,2015,3.336,2047,3.406,2079,2.165,2087,3.273,2089,3.096,2135,2.411,2164,2.733,2208,2.56,2209,2.06,2227,4.864,2416,3.554,2871,5.297,2872,4.864,2910,4.825,2965,2.733,2979,5.086,2980,3.204,2988,2.942,2989,2.942,3470,5.876,3472,3.554,3494,3.554,3495,3.554,3619,3.204,3620,5.297,3661,4.35,3662,6.481,3663,5.547,3664,5.547,3665,5.547,3666,5.547,3667,5.547,3668,5.547,3669,4.086,3670,4.086,3671,4.086,3672,5.547,3673,5.547,3674,4.086,3675,4.086,3676,4.086,3677,4.086,3678,4.086,3679,4.086,3680,4.086,3681,4.086,3682,4.086,3683,5.547,3684,4.086,3685,5.547,3686,4.086,3687,5.547,3688,6.298,3689,5.547,3690,4.086,3691,5.547,3692,4.086,3693,6.298,3694,4.086,3695,5.547,3696,5.547,3697,5.547,3698,4.086,3699,5.547,3700,4.086,3701,4.086,3702,6.755,3703,2.942,3704,4.086,3705,5.547,3706,5.547,3707,4.086,3708,5.547,3709,6.755,3710,4.086,3711,4.086,3712,5.547,3713,4.086,3714,4.086,3715,4.086,3716,4.086,3717,4.086,3718,5.547,3719,4.086,3720,4.086,3721,6.755,3722,4.825,3723,4.086,3724,4.086,3725,5.547,3726,4.086,3727,4.086,3728,4.086,3729,4.086,3730,4.086,3731,4.086,3732,4.086,3733,4.086,3734,3.554,3735,4.086,3736,4.086,3737,4.086,3738,4.086,3739,4.086,3740,4.086,3741,4.086,3742,5.547,3743,4.086]],["title/components/ModalErrorDetailComponent.html",[361,0.182,434,0.83]],["body/components/ModalErrorDetailComponent.html",[0,0.302,3,0.127,4,0.127,5,0.109,6,0.205,7,0.124,14,0.163,17,0.312,18,0.014,19,0.259,21,0.367,29,0.786,32,0.95,33,2.651,34,2.305,35,2.203,43,1.951,44,1.486,54,0.145,115,0.388,153,4.268,175,0.339,178,0.384,263,1,264,1,287,0.008,288,0.01,289,0.008,308,0.581,311,0.678,314,0.71,358,0.548,359,0.548,361,0.312,362,1,363,1.434,364,1.155,365,1.155,367,1.075,368,1.7,369,1.24,370,1.155,372,1.434,373,1.037,374,1.486,375,1.434,376,1,377,1.734,378,1.155,379,1.155,380,1.037,381,1.155,382,1,383,1.155,384,1,385,1.155,386,1.155,387,1,388,0.665,389,1.794,390,1,391,1.155,392,1,393,1.068,394,1.037,395,1.155,396,1,397,1.155,398,1,399,1.155,400,0.964,401,1.734,402,0.964,403,1.115,404,1.699,405,1.155,406,1.037,407,1.155,408,1,409,1,410,0.964,411,1.155,412,0.964,413,1.037,414,1.155,415,1,416,1,417,0.929,418,1.155,419,1,420,1.155,421,1,422,1.155,423,1,424,1,425,1.486,426,1,427,0.929,428,1.155,429,1,430,1.155,431,1,432,1.383,433,1.155,434,1.501,435,1.314,436,0.929,437,1.486,438,0.964,439,1,440,1.486,441,1,442,1,443,1,444,1,445,1.155,446,1,447,1.075,448,1.115,449,0.964,450,1.115,451,1.155,455,1.383,510,2.306,519,1.643,908,3.61,913,4.812,916,6.257,917,5.18,968,1.661,979,1.941,980,3.002,981,3.206,997,5.361,1226,3.206,1227,4.438,1228,4.438,1257,4.168,1440,4.571,1743,4.558,1757,4.168,1760,5.361,1770,4.907,3140,3.757,3446,4.168,3744,6.163,3745,4.792,3746,4.792,3747,4.792,3748,6.163,3749,4.792,3750,4.792,3751,6.163]],["title/components/ModalErrorWindowComponent.html",[361,0.182,436,0.771]],["body/components/ModalErrorWindowComponent.html",[0,0.262,3,0.102,4,0.102,5,0.088,6,0.216,7,0.128,14,0.132,15,0.452,17,0.352,18,0.014,19,0.277,21,0.33,29,0.77,32,0.823,43,1.853,44,1.199,54,0.161,59,0.936,68,0.44,103,0.759,105,0.966,115,0.374,117,0.7,123,0.8,134,1.143,137,2.456,150,0.559,175,0.305,178,0.622,181,3.175,262,2.905,263,0.807,264,0.807,287,0.007,288,0.009,289,0.007,304,2.569,305,0.765,306,0.657,308,0.503,311,0.716,312,1.778,314,0.572,323,0.572,324,1.335,344,2.693,358,0.611,359,0.611,361,0.28,362,0.807,363,1.242,364,0.932,365,0.932,367,0.867,368,1.68,369,1.075,370,0.932,372,1.242,373,0.837,374,1.288,375,1.242,376,0.807,377,1.591,378,0.932,379,0.932,380,0.837,381,0.932,382,0.807,383,0.932,384,0.807,385,0.932,386,0.932,387,0.807,388,0.634,389,1.67,390,0.807,391,0.932,392,0.807,393,0.925,394,0.837,395,0.932,396,0.807,397,0.932,398,0.807,399,0.932,400,0.778,401,1.591,402,0.778,403,0.899,404,1.619,405,0.932,406,0.837,407,0.932,408,0.807,409,0.807,410,0.778,411,0.932,412,0.778,413,0.837,414,0.932,415,0.807,416,0.807,417,0.75,418,0.932,419,0.807,420,0.932,421,0.807,422,0.932,423,0.807,424,0.807,425,1.288,426,0.807,427,0.75,428,0.932,429,0.807,430,0.932,431,0.807,432,1.198,433,0.932,434,0.807,435,1.326,436,1.28,437,1.288,438,0.778,439,0.807,440,1.288,441,0.807,442,0.807,443,0.807,444,0.807,445,0.932,446,0.807,447,0.867,448,0.899,449,0.778,450,0.899,451,0.932,455,1.198,462,1.631,464,1.631,472,1.998,482,1.566,598,2.814,607,2.456,608,3.894,620,3.035,622,3.363,623,4.086,659,2.281,667,2.829,673,0.89,750,2.281,908,3.889,913,4.415,917,4.753,934,4.188,950,3.151,968,1.34,969,2.048,972,3.61,979,1.566,980,2.422,1293,3.242,1300,2.048,1440,4.824,1441,2.422,1444,3.363,1445,4.094,1450,2.048,1451,3.573,1452,4.634,1458,3.086,1459,4.094,1460,4.094,1463,4.094,1464,4.094,1465,3.573,1466,4.094,1480,3.573,1505,4.415,1506,3.573,1507,2.586,1510,3.573,1520,3.573,1523,3.573,1743,3.573,1770,3.846,3752,6.025,3753,5.741,3754,5.341,3755,5.741,3756,5.341,3757,3.363,3758,3.866,3759,3.866,3760,3.866,3761,3.866,3762,3.363,3763,4.646,3764,3.866,3765,3.866,3766,3.363,3767,4.646,3768,3.866,3769,3.866,3770,3.866,3771,3.866,3772,3.866,3773,3.866,3774,3.866,3775,4.406,3776,3.866,3777,3.866,3778,4.646,3779,3.363,3780,3.363,3781,5.341,3782,5.341]],["title/interfaces/ModalErrorWindowValidator.html",[1450,2.107,3775,2.864]],["body/interfaces/ModalErrorWindowValidator.html",[0,0.264,3,0.143,4,0.143,5,0.123,6,0.19,7,0.112,14,0.183,18,0.014,19,0.226,21,0.388,29,0.534,43,1.858,44,1.67,54,0.2,59,0.964,68,0.359,103,0.943,117,0.823,123,0.867,134,1.006,137,2.477,150,0.562,175,0.358,178,0.617,181,2.591,262,2.371,287,0.009,288,0.011,289,0.009,304,2.591,308,0.625,311,0.625,312,2.477,314,0.797,323,0.797,324,1.346,344,2.716,361,0.304,368,1.084,404,1.436,435,1.236,436,1.044,455,1.208,462,3.167,464,3.167,472,2.69,598,3.051,608,3.177,620,2.477,623,3.914,659,3.177,667,3.514,673,1.106,750,3.177,908,3.809,913,3.603,917,3.878,934,4.223,950,3.177,968,1.866,969,2.853,972,4.242,979,2.181,980,3.374,1293,3.514,1300,2.853,1440,4.242,1441,3.374,1445,4.438,1450,2.853,1451,3.603,1452,3.603,1458,2.716,1459,3.603,1460,3.603,1463,3.603,1464,3.603,1465,3.603,1466,3.603,1480,4.438,1505,3.603,1506,4.438,1507,3.603,1510,4.438,1523,4.438,1743,4.438,1770,4.777,3752,4.685,3753,4.685,3755,4.685,3763,4.685,3767,4.685,3775,5.177,3778,5.771,3779,4.685,3780,4.685,3783,3.878,3784,5.386,3785,5.386]],["title/components/ModalWindowComponent.html",[361,0.182,438,0.8]],["body/components/ModalWindowComponent.html",[0,0.279,3,0.089,4,0.128,5,0.077,6,0.217,7,0.128,14,0.115,15,0.411,17,0.368,18,0.014,19,0.279,21,0.355,29,0.73,32,0.748,43,1.498,44,1.047,54,0.172,59,0.957,68,0.379,103,0.808,105,0.843,115,0.37,117,0.753,123,0.743,133,1.254,134,1.062,150,0.598,175,0.283,178,0.622,181,2.99,193,0.592,262,2.736,263,0.704,264,0.704,287,0.006,288,0.008,289,0.006,304,2.335,305,0.753,306,0.646,308,0.457,311,0.681,314,0.5,322,1.127,323,0.5,324,1.42,344,2.448,358,0.65,359,0.65,361,0.301,362,0.704,363,1.129,364,0.814,365,0.814,367,0.757,368,1.667,369,0.977,370,0.814,372,1.322,373,0.731,374,1.17,375,1.129,376,0.704,377,1.498,378,0.814,379,0.814,380,0.731,381,0.814,382,0.704,383,0.814,384,0.704,385,0.814,386,0.814,387,0.704,388,0.612,389,1.587,390,0.704,391,0.814,392,0.704,393,0.841,394,0.731,395,0.814,396,0.704,397,0.814,398,0.704,399,0.814,400,0.679,401,1.498,402,1.144,403,1.129,404,1.617,405,0.814,406,0.731,407,0.814,408,0.704,409,0.704,410,0.679,411,0.814,412,0.679,413,0.731,414,0.814,415,0.704,416,0.704,417,0.655,418,0.814,419,0.704,420,0.814,421,0.704,422,0.814,423,0.704,424,0.704,425,1.17,426,0.704,427,0.655,428,0.814,429,0.704,430,0.814,431,0.704,432,1.089,433,0.814,434,0.704,435,0.911,436,1.205,437,1.17,438,1.25,439,0.704,440,1.17,441,0.704,442,0.704,443,0.704,444,0.704,445,0.814,446,0.704,447,0.757,448,0.785,449,0.679,450,0.785,451,0.814,454,2.779,455,1.089,462,2.048,464,2.048,470,1.047,472,2.126,482,1.367,492,1.086,510,1.816,517,2.866,519,1.743,599,3.011,607,2.614,608,3.884,616,3.802,619,3.468,623,3.884,638,3.488,667,3.292,668,2.258,669,2.448,750,1.992,865,1.486,908,3.292,972,2.864,1216,1.367,1293,3.011,1300,1.788,1440,4.843,1441,2.115,1442,2.431,1445,4.405,1446,5.375,1447,4.457,1448,3.011,1449,2.647,1450,1.788,1451,3.247,1452,4.405,1453,4.457,1454,4.457,1455,4.044,1456,4.457,1457,4.457,1458,3.32,1459,3.802,1460,3.802,1461,5.163,1462,3.802,1463,3.802,1464,3.802,1465,3.247,1466,3.802,1467,4.457,1468,4.457,1469,4.457,1470,4.457,1471,4.873,1472,4.457,1473,3.806,1474,2.647,1475,2.647,1476,2.647,1477,2.647,1478,2.647,1479,3.806,1480,3.802,1481,2.647,1482,2.647,1483,2.647,1484,3.806,1485,2.647,1486,4.457,1487,4.457,1488,4.873,1489,2.647,1490,2.647,1491,2.647,1492,2.647,1493,3.806,1494,2.647,1495,3.806,1496,2.647,1497,3.806,1498,2.647,1499,2.647,1500,2.647,1501,2.647,1502,2.647,1503,3.806,1504,2.647,1505,4.158,1506,3.247,1507,2.258,1508,2.647,1509,2.647,1510,2.258,1511,2.647,1512,2.647,1513,3.806,1514,3.806,1515,3.806,1516,3.806,1517,2.647,1518,2.647,1519,2.647,1520,3.802,1521,2.431,1522,2.647,1523,2.258,3757,2.936,3762,2.936,3766,2.936,3786,4.854,3787,4.854,3788,3.376,3789,4.854,3790,3.376,3791,3.376,3792,3.376,3793,3.376,3794,3.376,3795,3.376,3796,3.376,3797,3.376,3798,3.376,3799,3.376,3800,3.376,3801,3.376,3802,3.376,3803,3.376,3804,3.376,3805,3.376,3806,3.376,3807,3.376,3808,3.376,3809,3.376,3810,3.376,3811,3.376,3812,3.376,3813,3.376]],["title/interfaces/ModalWindowValidator.html",[454,1.679,1450,2.107]],["body/interfaces/ModalWindowValidator.html",[0,0.298,3,0.124,4,0.161,5,0.107,6,0.178,7,0.105,14,0.159,17,0.278,18,0.014,19,0.207,21,0.399,43,1.625,44,1.453,54,0.204,59,0.978,68,0.312,103,0.958,117,0.816,123,0.794,133,1.185,134,0.876,150,0.641,175,0.336,178,0.606,181,2.254,193,0.702,262,2.063,287,0.008,288,0.01,289,0.008,304,2.254,308,0.573,311,0.573,314,0.694,322,1.564,323,0.694,324,1.518,344,2.363,361,0.327,368,1.222,372,1.09,402,1.222,403,1.09,404,1.544,435,0.751,436,1.178,438,0.943,454,3.119,455,1.051,462,3.119,464,3.119,472,2.669,492,1.507,517,2.363,519,1.884,599,3.219,607,2.155,608,2.765,616,3.135,619,2.615,623,3.584,638,3.571,667,3.779,668,3.135,669,3.064,750,2.765,865,2.063,908,3.219,972,3.584,1216,1.898,1293,3.219,1300,2.483,1440,3.977,1441,2.936,1442,3.375,1445,4.772,1446,5.286,1447,4.764,1448,3.219,1449,3.675,1450,2.483,1451,3.135,1452,3.135,1453,3.675,1454,3.675,1455,3.977,1456,3.675,1457,3.675,1458,2.363,1459,3.135,1460,3.135,1461,3.675,1462,4.064,1463,3.135,1464,3.135,1465,3.135,1466,3.135,1467,3.675,1468,3.675,1469,3.675,1470,3.675,1471,3.675,1472,5.286,1473,4.764,1474,3.675,1475,3.675,1476,3.675,1477,3.675,1478,3.675,1479,4.764,1480,4.51,1481,3.675,1482,3.675,1483,3.675,1484,4.764,1485,3.675,1486,5.286,1487,5.286,1488,3.675,1489,3.675,1490,3.675,1491,3.675,1492,3.675,1493,4.764,1494,3.675,1495,4.764,1496,3.675,1497,4.764,1498,3.675,1499,3.675,1500,3.675,1501,3.675,1502,3.675,1503,3.675,1504,3.675,1505,3.135,1506,4.064,1507,3.135,1508,3.675,1509,3.675,1510,3.135,1511,3.675,1512,3.675,1513,4.764,1514,4.764,1515,3.675,1516,3.675,1517,3.675,1518,3.675,1519,3.675,1520,3.135,1521,3.375,1522,3.675,1523,3.135,3783,3.375,3814,4.686,3815,4.686]],["title/components/NamespaceEditComponent.html",[361,0.182,439,0.83]],["body/components/NamespaceEditComponent.html",[0,0.294,3,0.122,4,0.122,5,0.105,6,0.206,7,0.124,14,0.156,15,0.508,17,0.336,18,0.014,19,0.261,21,0.382,29,0.78,30,1.719,32,0.925,54,0.139,59,0.575,103,0.853,115,0.382,117,0.764,123,0.873,133,1.071,135,1.248,150,0.389,175,0.299,178,0.567,193,0.625,263,0.959,264,0.959,287,0.008,288,0.01,289,0.008,305,0.625,306,0.536,308,0.565,311,0.667,312,2.113,314,0.68,323,0.68,324,1.499,358,0.526,359,0.526,361,0.306,362,0.959,363,1.395,364,1.108,365,1.108,367,1.031,368,1.696,369,1.207,370,1.108,372,1.395,373,0.994,374,1.446,375,1.395,376,0.959,377,1.707,378,1.108,379,1.108,380,0.994,381,1.108,382,0.959,383,1.108,384,0.959,385,1.108,386,1.108,387,0.959,388,0.659,389,1.771,390,0.959,391,1.108,392,0.959,393,1.039,394,0.994,395,1.108,396,0.959,397,1.108,398,0.959,399,1.108,400,0.924,401,1.707,402,0.924,403,1.069,404,1.532,405,1.108,406,0.994,407,1.108,408,0.959,409,0.959,410,0.924,411,1.108,412,0.924,413,0.994,414,1.108,415,0.959,416,0.959,417,0.891,418,1.108,419,0.959,420,1.108,421,0.959,422,1.108,423,0.959,424,0.959,425,1.446,426,0.959,427,0.891,428,1.108,429,0.959,430,1.108,431,0.959,432,1.346,433,1.108,434,0.959,435,0.962,436,0.891,437,1.446,438,0.924,439,1.477,440,1.95,441,0.959,442,0.959,443,0.959,444,0.959,445,1.108,446,0.959,447,1.031,448,1.069,449,0.924,450,1.069,451,1.108,454,2.818,455,1.346,457,4.183,462,2.988,463,3.178,464,2.988,472,2.748,482,1.861,488,2.113,489,2.434,491,1.788,492,1.478,496,2.878,527,2.878,528,3.025,529,4.013,551,3.309,1611,2.334,1972,2.113,2343,5.098,2349,3.997,2368,5.04,2393,4.809,2395,3.309,3703,5.288,3816,6.768,3817,6.678,3818,7.079,3819,4.595,3820,5.998,3821,4.595,3822,5.998,3823,4.595,3824,4.595,3825,3.997,3826,4.595,3827,4.595,3828,3.997,3829,3.997,3830,4.595,3831,6.678,3832,4.595,3833,3.997,3834,7.079,3835,4.595,3836,4.595,3837,5.218]],["title/components/NamespaceListComponent.html",[361,0.182,441,0.83]],["body/components/NamespaceListComponent.html",[0,0.234,3,0.087,4,0.087,5,0.075,6,0.211,7,0.125,14,0.222,15,0.404,17,0.345,18,0.014,19,0.271,21,0.367,29,0.726,30,1.233,32,0.735,54,0.1,59,0.769,68,0.52,103,0.967,115,0.395,117,0.703,123,0.733,133,1.22,134,1.048,135,0.616,150,0.656,175,0.388,178,0.595,193,0.73,263,0.688,264,0.688,287,0.006,288,0.008,289,0.009,305,0.64,306,0.55,308,0.45,311,0.724,314,0.488,323,0.488,358,0.778,359,0.778,361,0.257,362,0.688,363,1.11,364,0.795,365,0.795,367,0.74,368,1.663,369,0.96,370,0.795,372,1.11,373,0.713,374,1.15,375,1.11,376,0.688,377,1.482,378,0.795,379,0.795,380,0.713,381,0.795,382,0.688,383,0.795,384,0.688,385,0.795,386,0.795,387,0.688,388,0.608,389,1.573,390,0.688,391,0.795,392,0.688,393,0.972,394,0.713,395,0.795,396,0.688,397,0.795,398,0.688,399,0.795,400,0.663,401,1.482,402,0.663,403,0.767,404,1.33,405,0.795,406,0.713,407,0.795,408,0.688,409,0.688,410,0.663,411,0.795,412,0.663,413,0.713,414,0.795,415,0.688,416,0.688,417,0.639,418,0.795,419,0.688,420,0.795,421,0.688,422,0.795,423,0.688,424,0.688,425,1.15,426,0.688,427,1.087,428,0.795,429,0.688,430,0.795,431,0.688,432,1.071,433,0.795,434,0.688,435,0.765,436,0.639,437,1.15,438,1.411,439,1.464,440,1.815,441,1.283,442,0.688,443,0.688,444,0.688,445,0.795,446,0.688,447,0.74,448,0.767,449,0.663,450,0.767,451,0.795,455,1.071,470,2.109,489,1.746,491,1.283,492,1.06,504,3.236,510,1.785,519,1.352,522,2.663,528,1.662,542,2.065,617,3.13,673,0.55,692,0.795,950,1.945,1001,1.617,1070,2.374,1084,6.264,1125,1.451,1168,2.585,1170,2.585,1334,3.436,1360,5.05,1384,3.192,1385,3.192,1390,3.192,1391,2.205,1392,3.752,1394,3.192,1403,2.205,1404,3.192,1412,3.192,1413,2.367,1415,2.374,1416,2.205,1417,2.205,1611,1.857,1685,1.391,1713,2.205,1739,2.205,2043,1.746,2343,4.697,2368,5.068,2393,3.436,2395,5.352,2396,3.741,2519,1.662,2520,1.662,3241,1.945,3329,5.115,3383,5.499,3428,5.115,3498,2.585,3499,4.15,3500,4.878,3501,4.878,3504,5.347,3509,5.347,3510,5.347,3512,5.347,3514,5.347,3515,2.867,3530,2.867,3531,4.15,3539,2.867,3540,2.867,3542,2.867,3543,2.867,3547,6.465,3548,4.878,3549,2.867,3550,2.585,3552,4.15,3553,4.15,3554,4.878,3557,4.878,3558,2.867,3559,2.867,3560,2.867,3703,4.426,3828,4.15,3829,2.867,3833,4.15,3837,4.15,3838,5.608,3839,4.771,3840,4.771,3841,6.147,3842,6.147,3843,4.771,3844,4.771,3845,4.771,3846,3.296,3847,4.771,3848,3.296,3849,3.296,3850,4.771,3851,3.296,3852,3.296,3853,3.296,3854,3.296,3855,4.771,3856,3.296,3857,4.771,3858,3.296,3859,3.296,3860,3.296,3861,4.771,3862,3.296,3863,3.296,3864,3.296,3865,3.296,3866,6.523,3867,6.147,3868,5.608,3869,3.296,3870,4.771,3871,3.296,3872,3.296,3873,3.296,3874,3.296,3875,3.296,3876,3.296,3877,3.296,3878,3.296,3879,3.296,3880,3.296,3881,3.296,3882,3.296,3883,3.296,3884,3.296,3885,3.296,3886,3.296,3887,3.296,3888,4.771,3889,4.771,3890,4.771,3891,4.771,3892,4.771]],["title/classes/NamespaceModel.html",[0,0.195,2368,2.492]],["body/classes/NamespaceModel.html",[0,0.253,2,0.715,3,0.076,4,0.076,5,0.065,6,0.193,7,0.113,9,1.158,14,0.097,15,0.364,17,0.338,18,0.014,19,0.244,21,0.332,28,2.734,29,0.426,30,1.07,31,1.207,32,0.795,45,2.959,46,2.88,48,1.259,54,0.156,58,1.687,59,0.953,68,0.546,75,2.272,79,1.913,80,1.723,103,1.021,113,2.535,114,1.442,115,0.348,116,1.547,117,0.807,118,2.059,119,2.059,120,2.059,121,2.059,124,1.933,133,1.106,135,0.964,145,1.791,150,0.688,164,1.791,169,1.791,175,0.401,178,0.592,179,1.207,193,0.843,224,2.059,241,1.913,251,1.655,253,3.04,258,1.376,287,0.005,288,0.007,289,0.005,305,0.673,306,0.578,308,0.405,311,0.541,323,0.423,358,0.327,359,0.327,388,0.707,393,0.495,502,1.515,544,1.913,546,1.607,558,2.242,563,2.059,582,3.839,673,1.15,681,2.688,692,1.732,708,4.198,865,1.259,929,1.158,1001,0.825,1099,2.242,1125,1.259,1152,2.059,1325,2.242,1364,4.115,1375,2.276,1377,4.047,1378,1.913,1383,3.737,1413,1.813,1533,3.737,1534,2.487,1537,4.991,1548,3.737,1549,2.487,1550,5.35,1551,4.489,1559,2.487,1560,4.991,1567,1.931,1570,3.094,1572,3.737,1580,3.094,1588,2.276,1592,4.489,1596,2.487,1611,1.672,1612,3.737,1613,2.242,1632,2.487,1634,4.991,1637,2.487,1645,1.158,1659,2.059,1700,2.242,1755,2.535,1861,1.913,1972,1.315,2320,1.913,2322,2.487,2343,2.059,2368,4.835,2380,2.487,2385,3.737,2393,4.132,2395,4.132,2396,3.369,2493,3.369,2500,2.487,2519,1.442,2520,1.442,2753,2.487,2796,2.487,2872,3.094,2962,2.242,2965,1.913,2977,2.242,2978,3.369,2999,2.242,3002,2.242,3046,2.242,3073,2.242,3089,2.487,3090,2.487,3092,2.487,3095,2.487,3096,2.487,3105,2.487,3301,2.487,3316,4.047,3703,4.429,3722,5.35,3893,6.346,3894,5.161,3895,5.161,3896,5.161,3897,5.161,3898,4.296,3899,5.738,3900,5.738,3901,2.86,3902,2.86,3903,2.86,3904,2.86,3905,5.161,3906,2.86,3907,4.296,3908,2.86,3909,4.296,3910,2.86,3911,2.86,3912,2.86,3913,2.86,3914,2.86,3915,2.86,3916,2.86,3917,2.86,3918,2.86,3919,2.86,3920,2.86,3921,2.86,3922,2.86,3923,7.296,3924,2.86,3925,2.86,3926,2.86,3927,2.86,3928,2.86,3929,2.86,3930,2.86,3931,4.296,3932,2.86,3933,2.86,3934,2.86,3935,2.86,3936,2.86,3937,5.161,3938,2.86,3939,2.86,3940,4.296,3941,2.86,3942,2.86,3943,4.296,3944,2.86,3945,2.86,3946,2.86,3947,2.86,3948,2.86,3949,2.86,3950,2.86,3951,4.296,3952,2.86,3953,2.86,3954,6.461,3955,6.151,3956,2.86,3957,2.487,3958,6.461,3959,2.86,3960,5.161,3961,4.296,3962,2.86,3963,2.86,3964,4.296,3965,2.86,3966,2.86,3967,2.86,3968,2.86,3969,2.86,3970,2.86,3971,2.86,3972,5.161,3973,5.738,3974,6.151,3975,5.161,3976,5.738,3977,4.296,3978,2.86,3979,5.161,3980,4.296,3981,4.296,3982,4.296,3983,4.296,3984,5.161,3985,2.86,3986,2.86,3987,2.86,3988,2.86,3989,2.86,3990,2.86,3991,2.86,3992,2.86,3993,5.738,3994,2.86,3995,4.296,3996,2.86,3997,4.296,3998,2.86,3999,4.296,4000,4.296,4001,4.296,4002,4.296,4003,2.86,4004,2.86,4005,5.738,4006,4.296,4007,2.86,4008,4.296,4009,2.86,4010,5.738,4011,4.296,4012,2.86,4013,2.86,4014,4.296,4015,2.86,4016,2.86,4017,2.242,4018,2.86,4019,2.86,4020,2.86,4021,2.86,4022,2.86,4023,2.86,4024,2.86,4025,2.86,4026,2.86,4027,4.296,4028,2.86,4029,2.86,4030,5.161,4031,2.86,4032,2.86,4033,2.86,4034,2.86,4035,2.86,4036,2.86,4037,2.86,4038,2.86,4039,2.86,4040,2.86,4041,2.86,4042,2.86,4043,2.86,4044,2.86,4045,2.86,4046,2.487,4047,2.86,4048,2.86,4049,2.86,4050,2.86,4051,2.86,4052,2.86,4053,2.86,4054,2.86,4055,2.86,4056,2.86,4057,2.86,4058,2.86,4059,2.86,4060,2.86]],["title/components/PropertyFieldEditComponent.html",[361,0.182,442,0.83]],["body/components/PropertyFieldEditComponent.html",[0,0.262,3,0.162,4,0.103,5,0.088,6,0.21,7,0.125,14,0.132,15,0.453,17,0.356,18,0.014,19,0.268,21,0.387,29,0.753,30,1.449,31,3.024,32,0.824,45,1.863,48,1.705,54,0.117,59,0.897,68,0.44,80,1.785,98,3.155,103,0.985,115,0.428,117,0.856,123,0.506,133,0.982,135,1.144,150,0.519,164,2.426,175,0.383,178,0.529,194,4.099,263,0.808,264,1.586,287,0.007,288,0.009,289,0.007,305,0.557,306,0.669,308,0.504,311,0.675,314,0.573,323,0.573,324,1.336,358,0.612,359,0.612,361,0.28,362,0.808,363,1.244,364,0.934,365,0.934,367,0.869,368,1.68,369,1.076,370,0.934,372,1.244,373,0.838,374,1.289,375,1.244,376,0.808,377,1.592,378,0.934,379,0.934,380,0.838,381,0.934,382,0.808,383,0.934,384,0.808,385,0.934,386,0.934,387,0.808,388,0.711,389,1.671,390,0.808,391,0.934,392,0.808,393,0.926,394,0.838,395,0.934,396,0.808,397,0.934,398,0.808,399,0.934,400,0.779,401,1.592,402,0.779,403,0.901,404,1.429,405,0.934,406,0.838,407,0.934,408,0.808,409,0.808,410,0.779,411,0.934,412,0.779,413,0.838,414,0.934,415,0.808,416,0.808,417,0.751,418,0.934,419,0.808,420,0.934,421,0.808,422,0.934,423,0.808,424,0.808,425,1.289,426,0.808,427,0.751,428,0.934,429,0.808,430,0.934,431,0.808,432,1.2,433,0.934,434,0.808,435,0.857,436,0.751,437,1.289,438,1.547,439,0.808,440,1.289,441,0.808,442,1.378,443,0.808,444,0.808,445,0.934,446,0.808,447,0.869,448,0.901,449,0.779,450,0.901,451,0.934,454,2.585,455,1.2,457,3.837,462,2.787,463,2.833,464,2.787,470,1.201,472,2.593,473,3.851,482,1.569,488,1.781,489,2.052,490,1.507,491,1.507,492,1.246,493,4.097,496,2.426,498,2.789,502,3.499,527,2.426,528,2.696,529,3.577,530,5.62,531,5.328,532,4.803,533,5.179,534,4.193,535,3.369,537,5.745,538,3.037,541,4.193,542,4.137,543,5.179,544,4.419,545,4.651,546,2.001,547,4.193,548,3.369,549,3.037,550,3.037,551,2.789,553,3.037,554,3.037,555,3.037,556,2.789,557,4.803,558,3.037,559,5.328,560,3.369,561,4.651,562,2.696,563,2.789,564,3.369,565,4.651,566,2.789,568,3.851,569,3.037,570,3.037,571,3.037,572,3.037,575,3.369,576,4.651,577,4.651,578,4,579,3.177,580,4.193,581,4.193,582,3.577,583,2.984,584,2.984,585,2.833,586,3.686,587,3.686,588,4.193,589,3.577,590,4.193,591,4.193,592,4.193,593,4.193,594,5.869,673,0.892,824,2.984,2189,4.651,2417,3.369,3250,4.193,4061,6.905,4062,6.605,4063,3.873,4064,3.873,4065,3.873,4066,5.347,4067,5.347,4068,5.347]],["title/components/TemplateEditComponent.html",[361,0.182,443,0.83]],["body/components/TemplateEditComponent.html",[0,0.314,3,0.134,4,0.134,5,0.116,6,0.2,7,0.123,14,0.173,15,0.542,17,0.293,18,0.014,19,0.25,21,0.345,29,0.794,32,0.986,54,0.153,68,0.426,103,0.722,115,0.378,117,0.732,133,1.123,150,0.542,175,0.319,263,1.06,264,1.06,287,0.009,288,0.011,289,0.009,305,0.529,306,0.454,308,0.603,311,0.603,314,0.752,324,1.598,361,0.321,362,1.06,363,1.488,364,1.225,365,1.225,367,1.14,368,1.704,369,1.287,370,1.225,372,1.799,373,1.099,374,1.542,375,1.488,376,1.06,377,1.772,378,1.225,379,1.225,380,1.099,381,1.225,382,1.06,383,1.225,384,1.06,385,1.225,386,1.225,387,1.06,388,0.673,389,1.826,390,1.06,391,1.225,392,1.06,393,1.108,394,1.099,395,1.225,396,1.06,397,1.225,398,1.06,399,1.225,400,1.022,401,1.772,402,1.022,403,1.181,404,1.59,405,1.225,406,1.099,407,1.225,408,1.06,409,1.06,410,1.022,411,1.225,412,1.022,413,1.099,414,1.225,415,1.06,416,1.06,417,0.985,418,1.225,419,1.06,420,1.225,421,1.06,422,1.225,423,1.06,424,1.06,425,1.542,426,1.06,427,0.985,428,1.225,429,1.06,430,1.225,431,1.06,432,1.435,433,1.225,434,1.06,435,1.026,436,0.985,437,1.542,438,1.022,439,1.06,440,1.542,441,1.06,442,1.06,443,1.534,444,1.06,445,1.225,446,1.06,447,1.14,448,1.181,449,1.022,450,1.181,451,1.225,454,2.955,455,1.435,457,4.386,462,3.102,464,3.102,472,2.834,482,2.057,488,2.336,491,1.976,492,1.634,496,3.182,527,3.182,528,3.225,529,4.279,556,3.658,3078,6.09,3825,4.418,4069,6.589,4070,6.396,4071,5.079,4072,5.079]],["title/classes/TextNode.html",[0,0.195,1860,2.492]],["body/classes/TextNode.html",[0,0.283,2,0.619,3,0.066,4,0.141,5,0.056,6,0.162,7,0.095,14,0.24,15,0.326,17,0.279,18,0.014,19,0.235,21,0.311,29,0.572,33,0.963,34,1.191,35,1.138,43,0.597,54,0.174,68,0.533,80,2.351,103,0.352,105,0.619,114,1.248,115,0.134,123,0.617,124,1.837,133,1.056,134,0.719,135,1.316,150,0.54,175,0.39,178,0.308,179,1.045,193,0.83,246,1.138,251,2.031,258,1.851,287,0.004,288,0.006,289,0.004,305,0.401,306,0.344,308,0.363,311,0.543,322,0.826,323,0.367,358,0.283,359,0.283,388,0.573,410,0.498,501,1.44,519,0.928,546,1.44,562,1.94,607,2.448,659,2.27,669,1.248,673,1.318,681,1.766,692,1.966,711,1.312,761,3.029,778,4.905,783,1.191,809,1.461,812,1.461,865,1.694,867,1.461,872,2.411,929,1.559,968,0.858,969,1.312,979,1.559,1001,1.994,1100,1.604,1154,3.556,1161,0.963,1175,1.656,1180,3.858,1216,2.156,1249,1.003,1413,1.045,1426,1.551,1448,2.039,1539,3.141,1567,0.926,1574,2.27,1611,2.072,1644,1.09,1645,1.559,1652,0.926,1653,1.94,1685,1.624,1705,0.926,1707,1.559,1733,1.656,1734,3.158,1755,3.141,1780,1.694,1793,2.375,1802,1.551,1840,4.593,1841,1.656,1842,4.396,1843,3.158,1844,3.834,1845,4.588,1846,4.98,1847,4.98,1848,1.783,1850,4.152,1855,1.783,1856,3.991,1857,5.334,1858,5.634,1859,1.783,1860,5.06,1861,3.158,1862,3.834,1863,4.409,1864,1.783,1865,1.783,1866,1.783,1867,1.783,1868,4.86,1869,1.783,1870,1.783,1871,1.382,1872,1.783,1873,1.783,1874,1.783,1875,1.783,1876,1.461,1877,1.783,1878,1.783,1879,1.783,1880,1.783,1881,1.783,1882,1.783,1883,1.783,1884,1.783,1885,1.783,1886,2.771,1887,1.783,1888,2.771,1889,1.783,1890,3.399,1891,1.783,1892,1.783,1893,1.783,1894,4.872,1895,4.152,1896,4.152,1897,3.834,1898,1.783,1899,1.783,1900,3.886,1901,1.783,1902,2.771,1903,3.834,1904,1.783,1905,5.382,1906,4.98,1907,4.396,1908,5.051,1909,3.399,1910,1.783,1911,1.783,1912,4.152,1913,1.783,1914,3.399,1915,2.771,1916,1.783,1917,4.743,1918,4.152,1919,5.22,1920,1.783,1921,3.399,1922,1.783,1923,2.771,1924,2.771,1925,3.834,1926,2.771,1927,2.411,1928,2.771,1929,4.152,1930,2.574,1931,2.574,1932,1.783,1933,1.783,1934,1.783,1935,4.743,1936,2.771,1937,4.588,1938,1.783,1939,3.399,1940,4.593,1941,2.771,1942,4.396,1943,1.783,1944,5.151,1945,3.834,1946,2.771,1947,2.771,1948,2.411,1949,3.399,1950,2.771,1951,2.771,1952,1.783,1953,2.771,1954,2.771,1955,3.834,1956,2.771,1957,2.771,1958,3.158,1959,1.783,1960,1.783,1961,1.783,1962,1.783,1963,1.783,1964,3.399,1965,1.783,1966,4.152,1967,1.783,1968,4.396,1969,3.141,1970,4.396,1971,3.399,1972,2.171,1973,3.158,1974,3.399,1975,1.783,1976,5.151,1977,5.151,1978,4.396,1979,3.399,1980,1.783,1981,4.588,1982,1.783,1983,4.396,1984,1.783,1985,1.783,1986,3.399,1987,1.783,1988,3.399,1989,3.399,1990,3.399,1991,1.783,1992,1.783,1993,2.771,1994,2.771,1995,2.771,1996,1.783,1997,1.783,1998,5.22,1999,2.771,2000,1.783,2001,1.783,2002,1.783,2003,1.783,2004,1.94,2005,1.461,2006,2.148,2007,1.656,2008,1.783,2009,1.783,2010,1.783,2011,1.783,2012,1.783,2013,1.551,2014,1.783,2015,2.039,2016,1.783,2017,1.783,2018,1.783,2019,2.771,2020,1.656,2021,1.783,2022,1.783,2023,2.771,2024,3.834,2025,3.834,2026,1.783,2027,1.783,2028,3.399,2029,1.783,2030,2.771,2031,2.771,2032,1.783,2033,4.743,2034,2.771,2035,1.783,2036,1.783,2037,1.783,2038,2.771,2039,1.783,2040,2.771,2041,1.783,2042,1.783,2043,1.312,2044,1.783,2045,1.783,2046,1.656,2047,1.248,2048,1.783,2049,1.783,2050,1.783,2051,1.783,2052,1.783,2053,2.771,2054,1.783,2055,2.771,2426,5.016,2427,2.153,2428,2.153,2431,2.153,2432,2.153,2433,2.153,4073,2.476,4074,3.848,4075,2.476,4076,2.476,4077,2.476]],["title/pipes/ToErrorIconClassPipe.html",[1036,2.661,4078,2.347]],["body/pipes/ToErrorIconClassPipe.html",[0,0.294,3,0.187,4,0.158,5,0.136,6,0.187,7,0.11,17,0.274,18,0.014,19,0.203,21,0.381,43,1.874,44,1.855,54,0.181,68,0.471,115,0.406,175,0.387,287,0.01,288,0.012,289,0.01,306,0.535,308,0.564,311,0.564,314,0.886,324,1.494,358,0.684,359,0.684,367,1.342,435,1.206,933,5.203,968,2.073,979,2.422,980,3.747,981,4.001,1036,4.728,1106,4.728,1342,4.427,1357,5.203,1743,5.033,4078,4.169,4079,5.981,4080,6.147,4081,5.203,4082,7.067,4083,5.981,4084,7.067,4085,5.981,4086,7.067,4087,7.523,4088,6.994,4089,5.981]],["title/components/ToolbarComponent.html",[361,0.182,444,0.83]],["body/components/ToolbarComponent.html",[0,0.236,3,0.067,4,0.067,5,0.171,6,0.208,7,0.124,14,0.087,15,0.333,17,0.341,18,0.014,19,0.266,21,0.376,29,0.756,31,1.073,32,0.74,43,1.302,44,0.789,46,1.419,48,1.12,54,0.201,59,0.805,68,0.48,80,1.603,88,3.444,103,0.362,115,0.398,117,0.668,123,0.628,133,1.222,134,0.897,135,0.897,137,2.959,142,2.83,143,2.83,145,1.593,146,1.832,147,1.832,150,0.495,160,3.376,175,0.359,178,0.596,181,3.352,185,1.832,193,0.71,222,2.318,251,1.78,258,3.281,260,4.129,262,2.832,263,0.531,264,0.531,265,2.082,282,1.593,287,0.004,288,0.007,289,0.004,304,2.598,305,0.265,306,0.227,308,0.37,311,0.708,314,0.377,321,1.501,323,0.377,324,0.982,328,1.501,335,3.889,339,2.114,344,1.981,345,2.629,358,0.78,359,0.78,361,0.22,362,0.531,363,0.914,364,0.613,365,0.613,367,0.571,368,1.629,369,1.337,370,0.613,372,1.358,373,0.55,374,0.947,375,0.914,376,0.531,377,1.302,378,0.613,379,0.613,380,0.55,381,0.613,382,0.531,383,0.613,384,0.531,385,0.613,386,0.613,387,0.531,388,0.563,389,1.408,390,0.531,391,0.613,392,0.531,393,0.832,394,0.55,395,0.613,396,0.531,397,0.613,398,0.531,399,0.613,400,0.512,401,1.302,402,0.512,403,0.592,404,1.438,405,0.613,406,1.392,407,0.613,408,0.531,409,0.531,410,0.512,411,0.613,412,0.512,413,0.55,414,0.613,415,0.531,416,0.531,417,1.517,418,0.613,419,0.531,420,0.613,421,0.531,422,0.613,423,0.531,424,0.531,425,0.947,426,0.531,427,0.493,428,0.613,429,0.531,430,0.613,431,0.531,432,0.882,433,0.613,434,0.531,435,1.066,436,0.493,437,0.947,438,1.337,439,0.531,440,0.947,441,0.531,442,0.531,443,1.343,444,1.218,445,0.613,446,0.531,447,0.571,448,0.592,449,0.512,450,0.592,451,0.613,455,0.882,470,2.232,482,1.03,488,1.17,492,0.818,501,1.47,502,1.347,508,3.081,510,1.47,519,1.158,522,4.018,525,2.462,528,1.283,541,1.994,542,1.593,543,3.081,579,1.89,598,2.208,615,1.994,617,2.68,620,2.484,621,2.212,673,0.901,681,2.021,761,2.208,783,2.598,867,2.318,896,2.462,929,1.03,943,2.872,954,1.501,968,0.881,976,3.613,977,2.833,979,2.188,1070,1.832,1121,1.994,1131,5.017,1133,3.418,1156,3.765,1158,2.629,1159,3.418,1161,2.272,1162,5.369,1163,2.83,1190,3.765,1199,3.081,1204,1.832,1205,1.832,1249,2.763,1281,2.462,1333,3.765,1334,2.83,1342,1.593,1347,1.702,1350,3.081,1351,3.418,1382,1.832,1384,3.212,1385,3.212,1390,3.212,1391,1.702,1392,3.613,1394,2.629,1403,1.702,1404,3.212,1411,2.212,1412,3.212,1413,1.658,1415,2.83,1416,2.629,1417,2.629,1458,2.421,1462,2.629,1520,3.613,1521,2.83,1580,1.832,1644,1.73,1645,2.188,1652,0.952,1681,5.079,1685,1.073,1705,0.952,1707,2.188,1739,4.446,1780,1.12,1831,1.832,1958,1.702,2004,2.724,2020,2.629,2047,2.724,2156,3.081,2164,1.702,2227,3.889,2230,3.889,2242,3.081,2243,3.081,2245,3.081,2246,3.081,2247,2.83,2459,5.597,2460,5.369,2466,3.418,2467,4.177,2473,4.698,2474,3.418,2483,3.418,2490,3.418,2498,4.698,2499,5.781,2546,2.212,2572,2.212,2573,4.698,2590,2.212,2605,3.418,2610,4.177,2616,2.212,2617,3.418,2668,3.418,2785,4.177,2837,1.224,2921,1.501,2922,1.702,3157,4.177,3255,2.212,3591,2.212,3734,3.418,4088,4.698,4090,2.212,4091,3.929,4092,3.929,4093,4.802,4094,4.802,4095,5.839,4096,5.401,4097,6.172,4098,3.929,4099,5.401,4100,3.929,4101,3.929,4102,5.401,4103,3.929,4104,3.929,4105,3.929,4106,3.929,4107,2.543,4108,2.543,4109,2.543,4110,5.401,4111,5.401,4112,2.543,4113,2.543,4114,3.929,4115,2.543,4116,3.929,4117,2.543,4118,3.418,4119,2.543,4120,3.929,4121,2.543,4122,3.929,4123,3.929,4124,2.543,4125,3.929,4126,3.418,4127,2.543,4128,3.929,4129,2.543,4130,3.418,4131,2.543,4132,3.929,4133,2.543,4134,3.929,4135,3.929,4136,3.929,4137,2.543,4138,3.418,4139,3.929,4140,3.929,4141,2.543,4142,3.929,4143,2.543,4144,3.929,4145,3.929,4146,3.929,4147,2.543,4148,3.929,4149,2.543,4150,2.543,4151,2.543,4152,2.543,4153,2.543,4154,2.543,4155,2.543,4156,2.543,4157,2.543,4158,2.543,4159,2.543,4160,2.543,4161,2.543,4162,2.543,4163,2.543,4164,2.543,4165,2.543,4166,2.543,4167,4.802,4168,2.543,4169,2.543,4170,4.802,4171,2.543,4172,3.929,4173,3.929,4174,2.543,4175,2.543,4176,2.543,4177,2.543,4178,2.543,4179,2.543,4180,3.929,4181,2.543,4182,3.929,4183,3.929,4184,2.543,4185,2.543,4186,5.839,4187,5.839,4188,2.543,4189,2.543,4190,3.081,4191,3.929,4192,3.929,4193,2.543,4194,2.543,4195,3.929,4196,2.543,4197,3.929,4198,2.543,4199,2.543,4200,2.543,4201,2.543,4202,2.543,4203,2.543,4204,2.543,4205,2.543,4206,2.543,4207,5.401,4208,2.543,4209,2.543,4210,2.543,4211,2.543,4212,2.543,4213,3.929,4214,2.543,4215,2.543,4216,3.929,4217,2.543,4218,2.543,4219,3.929,4220,3.929,4221,3.929,4222,2.543,4223,2.543,4224,2.543,4225,2.543,4226,2.543,4227,2.543,4228,2.543,4229,2.543,4230,3.929]],["title/classes/TransitionDelimiterModel.html",[0,0.195,3220,2.661]],["body/classes/TransitionDelimiterModel.html",[0,0.285,2,1.095,3,0.116,4,0.116,5,0.1,6,0.197,7,0.116,14,0.149,15,0.492,17,0.331,18,0.014,19,0.258,21,0.314,29,0.434,54,0.21,59,0.548,68,0.541,105,1.63,115,0.236,117,0.827,124,1.882,150,0.63,175,0.392,193,0.456,251,1.264,287,0.007,288,0.01,289,0.007,305,0.753,306,0.621,358,0.501,359,0.501,388,0.371,463,2.321,500,3.08,673,0.73,897,5.449,929,2.815,943,2.355,957,5.207,1001,1.264,1124,3.436,1154,3.641,1803,3.748,1863,2.585,1876,3.43,1972,3.418,2059,2.453,2080,3.43,2081,3.43,2082,3.43,2179,6.039,2209,2.209,2837,2.108,2915,3.436,2921,3.849,2924,5.116,2963,2.585,3215,3.436,3220,4.649,3233,5.073,3234,3.436,3236,3.436,3423,5.116,3424,4.698,3425,4.698,3458,3.155,4078,3.849,4190,3.436,4231,3.155,4232,6.597,4233,5.947,4234,6.597,4235,6.597,4236,4.381,4237,5.813,4238,5.675,4239,4.381,4240,4.381,4241,4.381,4242,3.811,4243,4.558,4244,5.116,4245,3.436,4246,5.116,4247,5.116,4248,5.116,4249,5.116,4250,5.116,4251,5.116,4252,3.436,4253,5.116,4254,5.116,4255,5.116,4256,5.116,4257,3.436,4258,3.811,4259,3.811,4260,3.811,4261,3.811,4262,3.811,4263,3.811,4264,3.811,4265,3.811,4266,5.057,4267,7.106,4268,3.811,4269,3.811,4270,3.811,4271,3.811,4272,3.811,4273,3.811,4274,3.811,4275,3.811,4276,3.811,4277,3.811,4278,3.811,4279,3.811,4280,3.811,4281,3.811,4282,3.811,4283,3.811,4284,3.811,4285,3.811,4286,3.811,4287,3.811,4288,5.057,4289,3.811,4290,3.811,4291,3.811,4292,5.057,4293,5.057,4294,3.811,4295,6.045,4296,3.811,4297,3.811,4298,6.699,4299,5.675,4300,3.811,4301,3.811,4302,3.811,4303,3.811,4304,3.811,4305,3.811]],["title/classes/TransitionModel.html",[0,0.195,2963,2.347]],["body/classes/TransitionModel.html",[0,0.271,2,1.012,3,0.107,4,0.107,5,0.092,6,0.215,7,0.126,14,0.138,15,0.467,17,0.346,18,0.014,19,0.277,21,0.297,29,0.546,54,0.203,59,0.69,68,0.53,105,1.681,115,0.218,117,0.888,124,2.212,150,0.596,175,0.386,178,0.324,193,0.422,251,1.168,287,0.007,288,0.009,289,0.007,305,0.774,306,0.65,308,0.519,311,0.713,358,0.463,359,0.463,388,0.343,463,3.565,500,2.92,673,0.675,897,5.931,929,2.726,943,2.233,957,5.07,1001,1.59,1124,3.174,1154,3.498,1803,3.663,1863,3.698,1876,3.698,1972,3.34,2059,2.645,2080,3.252,2081,3.252,2082,3.252,2179,5.931,2209,2.041,2837,1.948,2915,4.915,2921,4.285,2924,4.915,2963,3.252,3215,4.323,3220,4.502,3233,4.71,3234,3.174,3236,3.174,3423,5.277,3424,4.514,3425,4.514,3458,2.915,4078,3.698,4190,4.915,4231,2.915,4232,5.452,4233,5.696,4234,5.452,4235,5.452,4238,5.452,4242,3.521,4243,4.323,4244,4.915,4245,3.174,4246,4.915,4247,4.915,4248,4.915,4249,4.915,4250,4.915,4251,4.915,4252,3.174,4253,4.915,4254,4.915,4255,4.915,4256,4.915,4257,3.174,4258,3.521,4259,3.521,4260,3.521,4261,3.521,4262,5.452,4263,5.452,4264,5.452,4265,3.521,4266,4.795,4267,7.042,4268,3.521,4269,3.521,4270,3.521,4271,3.521,4272,3.521,4273,3.521,4274,3.521,4275,3.521,4276,3.521,4277,3.521,4278,3.521,4279,3.521,4280,3.521,4281,3.521,4282,3.521,4283,3.521,4284,3.521,4285,3.521,4286,3.521,4287,3.521,4288,4.795,4289,3.521,4290,4.795,4291,3.521,4292,4.795,4293,4.795,4294,5.854,4295,5.854,4296,3.521,4297,3.521,4298,6.58,4299,5.452,4300,3.521,4301,5.854,4302,5.854,4303,5.854,4304,5.854,4305,5.854,4306,5.512,4307,5.512,4308,4.048,4309,4.048,4310,4.048,4311,4.048,4312,4.048,4313,4.048,4314,4.048,4315,4.048,4316,4.048,4317,4.048,4318,4.048,4319,4.048,4320,4.048,4321,4.048,4322,4.048]],["title/components/TransitionSelectionComponent.html",[361,0.182,446,0.83]],["body/components/TransitionSelectionComponent.html",[0,0.246,3,0.094,4,0.133,5,0.08,6,0.206,7,0.123,14,0.198,15,0.425,17,0.328,18,0.014,19,0.262,21,0.407,29,0.793,32,0.773,43,0.852,44,1.095,54,0.107,59,0.73,68,0.389,77,3.439,80,1.674,98,2.084,103,0.713,115,0.361,117,0.667,123,0.762,134,1.089,150,0.425,175,0.38,178,0.537,193,0.82,246,1.625,251,1.019,263,0.737,264,0.737,265,1.871,287,0.006,288,0.008,289,0.006,296,2.77,305,0.522,306,0.316,308,0.473,311,0.675,314,0.523,323,0.523,324,1.253,358,0.574,359,0.574,361,0.267,362,0.737,363,1.166,364,0.852,365,0.852,367,0.793,368,1.67,369,1.009,370,0.852,372,1.166,373,0.765,374,1.209,375,1.166,376,0.737,377,1.53,378,0.852,379,0.852,380,0.765,381,0.852,382,0.737,383,0.852,384,0.737,385,0.852,386,0.852,387,0.737,388,0.674,389,1.615,390,0.737,391,0.852,392,0.737,393,1.01,394,0.765,395,0.852,396,0.737,397,0.852,398,0.737,399,0.852,400,0.711,401,1.53,402,0.711,403,0.822,404,1.373,405,0.852,406,0.765,407,0.852,408,0.737,409,0.737,410,0.711,411,0.852,412,1.44,413,1.085,414,0.852,415,0.737,416,0.737,417,1.495,418,0.852,419,0.737,420,0.852,421,0.737,422,0.852,423,0.737,424,0.737,425,1.209,426,0.737,427,0.685,428,0.852,429,0.737,430,0.852,431,0.737,432,1.562,433,0.852,434,0.737,435,0.804,436,0.685,437,1.209,438,1.4,439,0.737,440,1.209,441,0.737,442,0.737,443,0.737,444,0.737,445,0.852,446,1.324,447,1.503,448,0.822,449,0.711,450,1.166,451,0.852,455,1.125,470,1.555,491,1.375,492,1.136,504,3.148,510,1.876,519,1.726,525,3.652,598,2.68,617,3.253,620,2.917,669,1.781,673,1.117,681,1.876,692,0.852,694,2.528,761,2.68,824,3.253,867,2.084,887,4.571,929,1.431,943,1.431,968,1.224,977,2.084,979,1.431,1001,1.83,1091,3.073,1092,6.094,1100,1.765,1101,1.272,1125,1.555,1249,1.431,1281,2.213,1384,2.363,1385,2.363,1390,2.363,1391,2.363,1392,3.354,1394,3.354,1403,2.363,1404,2.363,1412,2.363,1455,3.953,1535,3.073,1611,1.375,1644,2.207,1645,1.431,1652,1.322,1653,1.781,1705,1.322,1707,1.431,1780,1.555,2004,1.781,2005,2.084,2006,1.972,2007,2.363,2059,2.678,2067,3.361,2078,4.106,2079,3.088,2085,3.652,2089,1.972,2093,2.213,2094,2.084,2101,2.958,2164,3.354,2185,2.363,2196,4.362,2197,4.362,2208,2.213,2209,1.781,2519,1.781,2520,1.781,2799,2.656,2837,2.412,2859,2.363,2860,2.363,2921,2.084,2922,2.363,3172,3.073,3178,4.571,3198,3.611,3199,4.571,3200,3.932,3233,2.363,3239,3.073,3241,2.084,3250,2.77,3261,2.77,3262,2.77,3264,2.77,3277,5.07,3281,4.362,3285,4.362,3287,4.362,3293,4.362,3297,3.073,3299,3.073,3302,4.362,3304,3.932,3308,4.362,3311,3.073,3312,3.073,3313,3.073,3314,3.073,3315,3.073,3316,2.77,3317,3.073,3318,3.073,3319,3.073,3320,3.073,3321,3.073,3322,3.073,3323,4.362,3419,3.073,3422,5.07,3424,2.544,3425,3.611,3459,3.073,3587,2.77,3588,4.362,3605,3.073,3609,3.073,3957,3.073,4233,2.77,4323,6.96,4324,6.345,4325,6.345,4326,6.345,4327,3.533,4328,3.533,4329,3.533,4330,3.533,4331,3.533,4332,3.533,4333,3.533,4334,3.533,4335,3.533,4336,3.533,4337,3.533,4338,3.533,4339,3.533,4340,5.519,4341,3.533,4342,3.533,4343,3.533,4344,3.533,4345,3.533,4346,5.014,4347,3.533,4348,5.829,4349,3.533,4350,5.014,4351,6.96,4352,5.014,4353,3.533,4354,3.533,4355,3.533,4356,3.533,4357,3.533,4358,3.533,4359,3.533,4360,3.533,4361,3.533,4362,3.073,4363,3.533,4364,3.533,4365,3.533,4366,3.533,4367,5.014,4368,3.533,4369,3.533,4370,3.533,4371,3.533,4372,3.533,4373,3.533,4374,3.533,4375,3.533,4376,5.014]],["title/coverage.html",[4377,4.738]],["body/coverage.html",[0,0.407,1,2.29,5,0.083,6,0.225,7,0.132,8,4.639,17,0.167,18,0.014,26,3.413,28,1.937,31,1.543,33,1.423,36,2.04,39,2.157,41,2.157,43,0.881,49,2.04,52,2.04,55,2.446,113,2.157,123,0.478,135,0.683,287,0.006,288,0.009,289,0.006,290,3.645,291,2.446,293,4.028,294,4.028,327,2.633,332,2.446,361,0.38,362,0.763,366,3.18,376,0.763,380,0.791,382,0.763,384,0.763,387,0.763,388,0.625,390,0.763,392,0.763,393,1.116,394,0.791,396,0.763,398,0.763,400,0.736,402,0.736,406,0.791,408,0.763,409,0.763,412,0.736,415,0.763,416,0.763,417,0.709,419,0.763,421,0.763,423,0.763,424,0.763,426,0.763,427,0.709,429,0.763,431,0.763,432,0.82,434,0.763,435,1.033,436,0.709,438,0.736,439,0.763,441,0.763,442,0.763,443,0.763,444,0.763,446,0.763,449,0.736,452,3.18,453,3.18,454,1.543,504,3.188,505,2.633,506,3.18,526,3.18,527,4.252,596,4.028,597,3.18,657,3.645,673,1.406,809,2.157,814,3.18,852,3.18,853,3.18,863,2.633,905,3.18,1036,2.446,1038,5.068,1039,5.519,1081,3.699,1084,2.867,1090,3.699,1092,2.867,1100,1.017,1102,3.18,1106,2.446,1108,2.867,1110,2.867,1112,2.867,1114,2.867,1116,2.867,1118,2.867,1125,1.609,1126,3.18,1127,4.277,1225,4.469,1226,4.31,1440,4.152,1441,4.252,1450,2.721,1524,2.867,1525,4.469,1640,3.18,1641,3.18,1709,2.867,1784,2.867,1793,1.423,1826,3.18,1840,2.29,1841,4.54,1856,2.29,1860,2.29,1868,2.29,1876,2.157,2043,2.721,2059,1.543,2060,4.036,2061,4.036,2065,2.157,2067,1.937,2077,2.04,2133,3.18,2134,3.18,2338,3.18,2368,2.29,2434,3.18,2435,5.166,2637,3.18,2648,2.867,2649,4.469,2650,4.469,2793,3.18,2799,1.937,2800,4.028,2801,4.028,2808,2.29,2837,2.471,2844,4.028,2853,2.633,2908,2.867,2909,3.18,2947,4.657,2954,2.633,2963,2.157,2965,2.446,3072,3.18,3073,5.051,3169,3.18,3220,2.446,3282,3.18,3324,3.18,3498,4.028,3575,3.18,3587,4.028,3629,3.18,3661,2.867,3662,4.469,3775,2.633,3816,3.18,3893,5.166,4061,3.18,4069,3.18,4078,2.157,4080,3.18,4081,3.18,4090,3.18,4231,3.699,4377,3.18,4378,2.867,4379,3.656,4380,7.755,4381,3.656,4382,3.656,4383,3.656,4384,3.656,4385,3.656,4386,3.656,4387,6.442,4388,5.604,4389,5.137,4390,5.137,4391,5.137,4392,3.656,4393,5.137,4394,3.656,4395,3.656,4396,5.939,4397,5.939,4398,3.656,4399,3.656,4400,3.656,4401,3.656,4402,3.656,4403,5.939,4404,3.656,4405,3.656,4406,3.656,4407,3.656,4408,3.656,4409,3.656,4410,3.656,4411,3.656,4412,5.137,4413,3.656,4414,3.656,4415,3.656,4416,6.442,4417,3.656,4418,6.787,4419,3.656,4420,3.656,4421,5.137,4422,3.656,4423,3.656,4424,3.656,4425,7.6,4426,3.18,4427,3.656,4428,3.656,4429,3.656,4430,3.656,4431,3.656,4432,6.787,4433,3.656,4434,3.656,4435,3.656,4436,3.656,4437,3.656,4438,3.656,4439,3.656,4440,3.656,4441,3.656,4442,3.656,4443,4.469,4444,5.137,4445,3.656,4446,5.137,4447,3.656,4448,3.656,4449,3.656,4450,3.656,4451,3.656,4452,3.656,4453,3.656,4454,3.656,4455,3.656,4456,3.656,4457,3.656,4458,3.656,4459,3.656,4460,3.656,4461,3.656,4462,3.656,4463,3.18,4464,3.18,4465,3.18,4466,3.18,4467,3.656]],["title/dependencies.html",[299,2.386,1028,3]],["body/dependencies.html",[18,0.014,24,3.668,287,0.01,288,0.012,289,0.01,322,2.075,829,5.408,836,5.408,1028,3.895,1030,5.505,1376,4.159,1650,5.408,1827,5.408,1838,4.875,4340,5.408,4468,6.217,4469,6.217,4470,6.217,4471,6.217,4472,6.217,4473,6.217,4474,6.217,4475,6.217,4476,6.217,4477,6.217,4478,5.408,4479,6.217,4480,7.23,4481,6.217,4482,6.217,4483,6.217,4484,6.217,4485,6.217,4486,6.217,4487,6.217,4488,6.217,4489,6.217,4490,6.217,4491,6.217,4492,7.23,4493,6.217,4494,6.217,4495,6.217,4496,6.217,4497,6.217]],["title/miscellaneous/enumerations.html",[4498,2.386,4499,4.166]],["body/miscellaneous/enumerations.html",[3,0.176,6,0.199,7,0.117,14,0.184,18,0.014,29,0.659,45,3.198,46,3.71,47,4.447,171,3.891,220,4.447,222,3.922,246,3.057,263,1.128,264,1.387,287,0.009,288,0.011,289,0.009,306,0.761,388,0.563,427,1.289,435,1.066,500,3.814,501,2.487,528,2.725,530,5.212,822,4.432,896,4.164,943,2.692,968,2.304,1154,3.016,1643,5.212,1652,2.487,1697,4.237,1705,2.487,1784,4.237,1803,3.352,1804,5.782,1805,5.782,1806,5.782,1807,5.212,1831,3.891,1838,5.212,2060,3.385,2061,4.164,2079,3.521,2080,4.432,2081,4.432,2082,4.432,2083,4.447,2103,3.521,2461,4.787,2463,5.782,2921,3.922,3233,4.447,4078,3.188,4231,3.891,4243,5.212,4244,4.237,4245,4.237,4246,4.237,4247,4.237,4248,4.237,4249,4.237,4250,4.237,4251,4.237,4252,4.237,4253,4.237,4254,4.237,4255,4.237,4256,4.237,4257,4.237,4498,3.891,4499,4.7,4500,7.512,4501,7.2,4502,5.403,4503,6.647,4504,5.403,4505,5.403,4506,6.647,4507,6.647,4508,6.647,4509,6.647]],["title/index.html",[14,0.113,4510,2.882,4511,2.882]],["body/index.html",[7,0.127,18,0.014,29,0.727,75,2.482,138,5.137,220,3.772,222,3.327,247,3.147,287,0.009,288,0.011,289,0.009,304,2.713,305,0.587,336,4.06,369,1.678,393,1.352,679,4.913,684,3.772,724,3.532,823,4.905,898,6.381,931,3.772,943,2.284,947,4.421,1028,3.532,1301,3.772,1347,4.564,1450,2.987,1578,4.421,1969,3.327,2103,2.987,2170,4.421,2229,4.421,2230,4.913,2247,4.06,2405,4.905,2438,4.905,2461,4.06,3211,4.421,3330,6.631,3456,4.421,4017,4.421,4046,5.935,4118,5.935,4130,5.935,4138,4.905,4378,5.752,4512,5.639,4513,5.639,4514,5.639,4515,5.639,4516,5.639,4517,5.639,4518,5.639,4519,7.623,4520,5.639,4521,5.639,4522,5.639,4523,5.639,4524,5.639,4525,5.639,4526,5.639,4527,5.639,4528,5.639,4529,5.639,4530,5.639,4531,5.639,4532,5.639,4533,5.639,4534,7.336,4535,7.336,4536,6.822,4537,5.639,4538,5.639,4539,5.639,4540,5.639,4541,5.639,4542,5.639,4543,7.623,4544,5.639,4545,5.639,4546,5.639,4547,5.639,4548,5.639,4549,5.639,4550,5.639,4551,5.639,4552,5.639,4553,4.905,4554,5.639,4555,7.806,4556,5.639,4557,5.639,4558,5.639,4559,5.639,4560,5.639,4561,5.639,4562,5.639,4563,5.639,4564,5.639,4565,5.639]],["title/license.html",[702,2.216,4510,2.882,4511,2.882]],["body/license.html",[0,0.171,4,0.203,5,0.166,9,1.41,18,0.01,19,0.118,21,0.188,32,0.536,77,2.053,88,1.942,115,0.312,139,2.506,250,2.506,265,1.844,287,0.008,288,0.008,289,0.006,339,3.311,394,0.753,470,1.079,512,3.028,546,2.591,589,2.329,681,1.302,684,4.457,692,0.839,693,5.583,699,2.506,700,5.34,701,4.538,702,5.529,703,4.163,704,4.163,705,3.868,706,2.506,707,2.506,708,3.622,709,2.506,710,4.538,711,3.339,712,3.622,713,4.163,714,4.163,715,4.538,716,3.573,717,4.163,718,3.573,719,4.163,720,5.583,721,3.573,722,3.573,723,3.573,724,2.18,725,2.329,726,2.506,727,2.506,728,4.163,729,2.506,761,2.898,780,4.316,783,1.674,812,2.053,822,4.574,866,3.028,901,3.028,929,1.41,931,2.329,947,5.714,954,2.053,961,2.729,1122,3.028,1147,5.224,1158,2.329,1161,2.695,1187,3.028,1194,3.028,1281,2.18,1315,3.028,1321,5.029,1347,3.868,1375,2.628,1448,2.628,1578,2.729,1597,2.729,1599,2.729,1600,3.028,1659,2.506,1685,2.094,1739,2.329,1835,3.028,1900,2.053,1931,3.319,1973,2.329,2156,2.729,2160,2.329,2185,3.868,2221,3.028,2437,6.45,2458,5.029,2462,3.028,2582,3.028,2702,3.028,2754,3.028,3025,3.89,3026,3.89,3040,3.89,3198,3.573,3202,3.028,3211,2.729,3230,4.316,3397,2.729,3456,4.533,3458,4.538,3550,2.729,3783,2.506,4017,6.489,4126,3.028,4362,3.028,4378,4.533,4426,3.028,4553,3.028,4566,3.481,4567,3.481,4568,3.481,4569,7.415,4570,6.302,4571,6.662,4572,7.86,4573,7.522,4574,3.481,4575,3.481,4576,7.522,4577,6.926,4578,7.522,4579,4.961,4580,3.481,4581,6.662,4582,3.481,4583,3.481,4584,3.481,4585,6.302,4586,3.481,4587,3.481,4588,6.302,4589,3.481,4590,5.781,4591,4.961,4592,4.961,4593,3.481,4594,7.979,4595,6.302,4596,4.961,4597,3.481,4598,4.961,4599,3.481,4600,3.481,4601,3.481,4602,3.481,4603,3.481,4604,3.481,4605,5.781,4606,3.481,4607,4.961,4608,3.481,4609,3.481,4610,6.926,4611,6.302,4612,3.481,4613,3.481,4614,3.481,4615,3.481,4616,3.481,4617,3.481,4618,5.781,4619,3.481,4620,7.415,4621,3.481,4622,4.961,4623,3.481,4624,7.979,4625,8.011,4626,3.481,4627,3.481,4628,3.481,4629,3.481,4630,3.481,4631,4.961,4632,5.781,4633,3.481,4634,3.481,4635,3.481,4636,3.481,4637,6.302,4638,6.662,4639,3.481,4640,4.961,4641,6.302,4642,4.961,4643,3.481,4644,6.662,4645,4.961,4646,3.481,4647,3.481,4648,5.781,4649,3.481,4650,3.481,4651,3.481,4652,3.481,4653,4.961,4654,3.481,4655,3.481,4656,3.481,4657,5.781,4658,3.481,4659,3.481,4660,5.781,4661,3.481,4662,3.481,4663,3.481,4664,7.522,4665,3.481,4666,3.481,4667,4.961,4668,5.781,4669,4.961,4670,4.961,4671,4.961,4672,4.961,4673,4.961,4674,5.781,4675,4.961,4676,4.961,4677,4.961,4678,4.961,4679,3.481,4680,4.961,4681,3.481,4682,6.662,4683,7.128,4684,4.961,4685,4.961,4686,4.961,4687,3.481,4688,4.961,4689,3.481,4690,3.481,4691,3.481,4692,5.781,4693,3.481,4694,3.481,4695,4.961,4696,4.961,4697,3.481,4698,3.481,4699,3.481,4700,3.481,4701,3.481,4702,3.481,4703,3.481,4704,4.961,4705,3.481,4706,3.481,4707,3.481,4708,3.481,4709,3.481,4710,3.481,4711,3.481,4712,3.481,4713,3.481,4714,3.481,4715,3.481,4716,3.481,4717,7.287,4718,3.481,4719,3.481,4720,3.481,4721,3.481,4722,6.302,4723,4.961,4724,6.302,4725,3.481,4726,3.481,4727,3.481,4728,3.481,4729,3.481,4730,3.481,4731,4.961,4732,4.961,4733,3.481,4734,3.481,4735,4.961,4736,3.481,4737,3.481,4738,6.662,4739,3.481,4740,3.481,4741,3.481,4742,3.481,4743,3.481,4744,3.481,4745,5.781,4746,3.481,4747,3.481,4748,3.481,4749,3.481,4750,3.481,4751,3.481,4752,3.481,4753,3.481,4754,4.961,4755,3.481,4756,3.481,4757,3.481,4758,3.481,4759,3.481,4760,3.481,4761,3.481,4762,3.481,4763,3.481,4764,6.302,4765,4.961,4766,4.961,4767,3.481,4768,3.481,4769,3.481,4770,3.481,4771,3.481,4772,3.481,4773,3.481,4774,3.481,4775,4.961,4776,3.481,4777,3.481,4778,3.481,4779,6.662,4780,3.481,4781,3.481,4782,3.481,4783,3.481,4784,3.481,4785,3.481,4786,3.481,4787,3.481,4788,6.662,4789,3.481,4790,3.481,4791,3.481,4792,3.481,4793,3.481,4794,3.481,4795,3.481,4796,3.481,4797,3.481,4798,3.481,4799,3.481,4800,3.481,4801,3.481,4802,3.481,4803,5.781,4804,3.481,4805,3.481,4806,3.481,4807,3.481,4808,4.961,4809,3.481,4810,3.481,4811,3.481,4812,3.481,4813,3.481,4814,3.481,4815,3.481,4816,3.481,4817,3.481,4818,3.481,4819,3.481,4820,3.481,4821,3.481,4822,3.481,4823,4.961,4824,3.481,4825,3.481,4826,4.961,4827,4.961,4828,3.481,4829,3.481,4830,3.481,4831,3.481,4832,3.481,4833,3.481,4834,3.481,4835,3.481,4836,3.481,4837,3.481,4838,3.481]],["title/modules.html",[1027,3.644]],["body/modules.html",[18,0.013,287,0.011,288,0.013,289,0.011,846,6.469,1026,4.369,1027,4.369,1281,4.659,1301,4.976,1811,4.703,4839,7.437]],["title/overview.html",[4840,4.738]],["body/overview.html",[2,1.243,18,0.014,33,2.699,36,3.87,39,4.092,41,4.092,49,3.87,52,3.87,262,2.19,287,0.008,288,0.011,289,0.008,292,3.329,362,1.631,363,1.157,373,1.077,376,1.038,380,1.691,382,1.447,384,1.447,387,1.447,390,1.631,392,1.666,396,1.447,398,1.447,400,1.395,402,1.395,406,1.501,408,1.447,409,1.447,412,1.395,415,1.447,416,1.447,419,1.447,421,1.447,423,1.447,424,1.447,426,1.447,429,1.447,431,1.447,434,1.447,436,1.515,438,1.572,439,1.447,441,1.447,442,1.447,443,1.447,444,1.447,446,1.447,449,1.395,692,1.522,854,3.583,954,2.936,1025,3.329,1026,5.728,1027,3.329,1028,3.117,1029,3.902,1030,3.583,1031,3.902,1032,4.328,1033,4.328,1034,4.328,1035,4.328,1036,4.64,1037,4.951,1811,5.793,1812,4.328,1813,4.328,1815,4.328,2043,3.345,3783,3.583,4078,2.936,4388,4.328,4443,4.328,4840,4.328,4841,4.976]],["title/miscellaneous/variables.html",[4498,2.386,4842,4.166]],["body/miscellaneous/variables.html",[6,0.139,7,0.082,14,0.179,17,0.372,18,0.014,26,4.237,59,0.958,103,1.012,187,3.795,191,3.795,287,0.009,288,0.011,289,0.009,300,5.839,305,0.845,306,0.726,330,6.429,349,5.839,369,1.609,1038,3.795,1039,6.205,1047,6.789,1108,5.132,1109,4.584,1110,5.132,1111,4.584,1112,5.132,1113,4.584,1114,5.132,1115,4.584,1116,5.132,1117,4.584,1118,5.132,1119,4.584,1161,2.898,1645,3.016,4463,4.584,4464,4.584,4465,4.584,4466,4.584,4478,6.477,4498,3.795,4842,4.584,4843,7.805,4844,5.27,4845,5.27,4846,5.27,4847,5.27,4848,7.446,4849,7.446,4850,7.446,4851,7.446,4852,7.446,4853,7.446,4854,7.446,4855,7.446,4856,7.12,4857,7.446,4858,7.12,4859,7.446,4860,7.12,4861,7.446,4862,7.12,4863,5.27,4864,5.27,4865,5.27,4866,5.27,4867,5.27,4868,5.27]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":673,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["0.5.1",{"_index":4484,"title":{},"body":{"dependencies.html":{}}}],["0.7.2",{"_index":4482,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":4497,"title":{},"body":{"dependencies.html":{}}}],["0.9.2017.07.28",{"_index":57,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["0/1",{"_index":4380,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":4404,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":4432,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":4412,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":4430,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":4413,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":4398,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":4438,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":4434,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":4390,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":4417,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":4415,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":4393,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4418,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":4419,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":4409,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4397,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":4387,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":4441,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":4416,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":4396,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":4403,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":753,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["1",{"_index":692,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{},"overview.html":{}}}],["1).tostring",{"_index":1871,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{}}}],["1.1.20150312",{"_index":4475,"title":{},"body":{"dependencies.html":{}}}],["1.1.6",{"_index":4493,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":1830,"title":{},"body":{"classes/Examples.html":{}}}],["1/13",{"_index":4414,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":4389,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":4442,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":4427,"title":{},"body":{"coverage.html":{}}}],["1/27",{"_index":4402,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":4444,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":4459,"title":{},"body":{"coverage.html":{}}}],["1/49",{"_index":4437,"title":{},"body":{"coverage.html":{}}}],["1/50",{"_index":4433,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":669,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["10/18",{"_index":4452,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":750,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["1000000",{"_index":2989,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{}}}],["1000000).tostring",{"_index":2831,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["10px",{"_index":805,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["11",{"_index":4410,"title":{},"body":{"coverage.html":{}}}],["11/51",{"_index":4401,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":786,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["13/40",{"_index":4457,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":4421,"title":{},"body":{"coverage.html":{}}}],["14/20",{"_index":4448,"title":{},"body":{"coverage.html":{}}}],["14/34",{"_index":4384,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":4439,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":4407,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":787,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["1].touppercase",{"_index":4169,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["1px",{"_index":834,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["2",{"_index":2043,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"classes/TextNode.html":{},"coverage.html":{},"overview.html":{}}}],["2.0",{"_index":704,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["2.0.0",{"_index":4487,"title":{},"body":{"dependencies.html":{}}}],["2.20.1",{"_index":4485,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":4473,"title":{},"body":{"dependencies.html":{}}}],["2.5.5",{"_index":4477,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1836,"title":{},"body":{"classes/Examples.html":{}}}],["2/12",{"_index":4408,"title":{},"body":{"coverage.html":{}}}],["2/18",{"_index":4411,"title":{},"body":{"coverage.html":{}}}],["2/31",{"_index":4395,"title":{},"body":{"coverage.html":{}}}],["2/48",{"_index":4429,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":4462,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":4435,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1141,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["2004",{"_index":4567,"title":{},"body":{"license.html":{}}}],["2017",{"_index":1045,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["2019",{"_index":695,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["204",{"_index":1139,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["21",{"_index":4400,"title":{},"body":{"coverage.html":{}}}],["23",{"_index":4446,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":4458,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":2776,"title":{},"body":{"classes/LineModel.html":{}}}],["28",{"_index":4391,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":809,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["3.1.0",{"_index":4491,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":4481,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":64,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["30).tostring",{"_index":1421,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["300",{"_index":1507,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["30000",{"_index":63,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["32",{"_index":4456,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":4443,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["34",{"_index":4841,"title":{},"body":{"overview.html":{}}}],["35",{"_index":4405,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":4449,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":4423,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":4428,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":1827,"title":{},"body":{"classes/Examples.html":{},"dependencies.html":{}}}],["4.1.2",{"_index":4471,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":4479,"title":{},"body":{"dependencies.html":{}}}],["4/27",{"_index":4461,"title":{},"body":{"coverage.html":{}}}],["4/53",{"_index":4431,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":842,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["41",{"_index":4383,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":2793,"title":{},"body":{"classes/LineModel.html":{},"coverage.html":{}}}],["5.2.0",{"_index":4488,"title":{},"body":{"dependencies.html":{}}}],["5/21",{"_index":4454,"title":{},"body":{"coverage.html":{}}}],["5/24",{"_index":4436,"title":{},"body":{"coverage.html":{}}}],["5/32",{"_index":4440,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":4426,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["500",{"_index":990,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["54px",{"_index":837,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["55",{"_index":4451,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":819,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["6",{"_index":4394,"title":{},"body":{"coverage.html":{}}}],["6.2.2",{"_index":4495,"title":{},"body":{"dependencies.html":{}}}],["6/21",{"_index":4392,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":4385,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":4388,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["7.2.15",{"_index":4470,"title":{},"body":{"dependencies.html":{}}}],["7/11",{"_index":4386,"title":{},"body":{"coverage.html":{}}}],["7/19",{"_index":4450,"title":{},"body":{"coverage.html":{}}}],["7/20",{"_index":4406,"title":{},"body":{"coverage.html":{}}}],["7/30",{"_index":4447,"title":{},"body":{"coverage.html":{}}}],["7/47",{"_index":4422,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":814,"title":{},"body":{"components/DataMapperAppComponent.html":{},"coverage.html":{}}}],["8px",{"_index":835,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["9",{"_index":812,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"license.html":{}}}],["9/24",{"_index":4424,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":4288,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["_cfg",{"_index":2439,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["_identifier",{"_index":1785,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["_issource",{"_index":3910,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["_lmcinstance",{"_index":16,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["_nodes",{"_index":1880,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["_showmappingpreview",{"_index":148,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["_type",{"_index":3921,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["a:hover",{"_index":790,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["above",{"_index":1578,"title":{},"body":{"classes/EnumValue.html":{},"index.html":{},"license.html":{}}}],["abstract",{"_index":1845,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["accept",{"_index":2205,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["acceptance",{"_index":4806,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":4803,"title":{},"body":{"license.html":{}}}],["acceptinput",{"_index":3173,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acceptinput(event",{"_index":3193,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["access",{"_index":2623,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["accessing",{"_index":2538,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["accessors",{"_index":1248,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/ErrorInfo.html":{},"injectables/FileManagementService.html":{}}}],["accordingly",{"_index":4135,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["acp",{"_index":3231,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acp.length",{"_index":3247,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acp[0].value",{"_index":3248,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acp[1].value",{"_index":3249,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acpv",{"_index":3243,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["acpv.push(argument",{"_index":3245,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["act",{"_index":4812,"title":{},"body":{"license.html":{}}}],["acting",{"_index":4583,"title":{},"body":{"license.html":{}}}],["action",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["action's",{"_index":2155,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action'},{'name",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.argumentvalues",{"_index":2093,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.argumentvalues.length",{"_index":2094,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.argumentvalues.values",{"_index":3319,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.argumentvalues[argvalindex].value",{"_index":3268,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["action.component",{"_index":1086,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["action.component.html",{"_index":3283,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts",{"_index":3282,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"coverage.html":{}}}],["action.component.ts:29",{"_index":3288,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:30",{"_index":3290,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:31",{"_index":3289,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:32",{"_index":3291,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:33",{"_index":3303,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:35",{"_index":3296,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:39",{"_index":3298,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:43",{"_index":3292,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:47",{"_index":3295,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:56",{"_index":3300,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.component.ts:66",{"_index":3294,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["action.definition",{"_index":2090,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["action.model",{"_index":2209,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.model.ts",{"_index":2061,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["action.model.ts:101",{"_index":2076,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:18",{"_index":2115,"title":{},"body":{"classes/FieldActionArgument.html":{}}}],["action.model.ts:19",{"_index":2117,"title":{},"body":{"classes/FieldActionArgument.html":{}}}],["action.model.ts:20",{"_index":2118,"title":{},"body":{"classes/FieldActionArgument.html":{}}}],["action.model.ts:21",{"_index":2116,"title":{},"body":{"classes/FieldActionArgument.html":{}}}],["action.model.ts:25",{"_index":2119,"title":{},"body":{"classes/FieldActionArgumentValue.html":{}}}],["action.model.ts:26",{"_index":2120,"title":{},"body":{"classes/FieldActionArgumentValue.html":{}}}],["action.model.ts:37",{"_index":2127,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:38",{"_index":2124,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:39",{"_index":2123,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:40",{"_index":2125,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:41",{"_index":2129,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:42",{"_index":2130,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:43",{"_index":2126,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:44",{"_index":2128,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:46",{"_index":2132,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:65",{"_index":2131,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["action.model.ts:77",{"_index":2069,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:78",{"_index":2068,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:79",{"_index":2066,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:81",{"_index":2071,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.model.ts:88",{"_index":2073,"title":{},"body":{"classes/FieldAction.html":{}}}],["action.multiplicity",{"_index":2239,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.name",{"_index":2089,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionComponent.html":{},"classes/MappingUtil.html":{},"components/TransitionSelectionComponent.html":{}}}],["action.service",{"_index":51,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["action.service.ts",{"_index":2134,"title":{},"body":{"injectables/FieldActionService.html":{},"coverage.html":{}}}],["action.service.ts:115",{"_index":2178,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:137",{"_index":2181,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:145",{"_index":2172,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:172",{"_index":2174,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:205",{"_index":2195,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:245",{"_index":2154,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:267",{"_index":2184,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:282",{"_index":2163,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:29",{"_index":2200,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:30",{"_index":2199,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:307",{"_index":2169,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:342",{"_index":2188,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:354",{"_index":2193,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:360",{"_index":2171,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:37",{"_index":2207,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:38",{"_index":2206,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:40",{"_index":2152,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.service.ts:47",{"_index":2176,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.setargumentvalue(arg.name",{"_index":2099,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["action.sourcetype",{"_index":2326,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["action.targettype",{"_index":2330,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actionconfigparamselectionchanged",{"_index":3174,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["actionconfigparamselectionchanged(event",{"_index":3195,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["actionconfigparamval",{"_index":3280,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["actionconfigs",{"_index":2260,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actionconfigs.push(fieldactionconfig",{"_index":2274,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondef",{"_index":2255,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondef.name",{"_index":2256,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondefinition",{"_index":3470,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{}}}],["actiondefinition.populatefieldaction(action",{"_index":3472,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{}}}],["actiondetail",{"_index":2175,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.actionschema",{"_index":2292,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.actionschema.properties[key",{"_index":2295,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.custom",{"_index":2283,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.method",{"_index":2289,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.multiplicity",{"_index":2290,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.name",{"_index":2281,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.sourcetype",{"_index":2285,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actiondetail.targettype",{"_index":2287,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actionindex",{"_index":3183,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["actionname",{"_index":2179,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["actions",{"_index":2135,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{}}}],["actions.concat(arr",{"_index":2254,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["actionsexistforfield",{"_index":3284,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["active",{"_index":950,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/LineModel.html":{},"components/MappingListComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/NamespaceListComponent.html":{}}}],["activemapping",{"_index":2746,"title":{},"body":{"classes/LineModel.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{}}}],["activemapping.islookupmode",{"_index":3154,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["acts",{"_index":4786,"title":{},"body":{"license.html":{}}}],["actual",{"_index":2583,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["actual_component",{"_index":451,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["actualdelimiter",{"_index":4232,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["add",{"_index":1685,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/NamespaceListComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["adddocument(docinitmodel",{"_index":192,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["adddocuments(docmodels",{"_index":231,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["added",{"_index":1733,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["addeditnamespace",{"_index":3839,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["addeditnamespace(ns",{"_index":3847,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["addendum",{"_index":4737,"title":{},"body":{"license.html":{}}}],["adderror",{"_index":1670,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["adderror(...errors",{"_index":1744,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["adderror(errors",{"_index":1683,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["addfield(field",{"_index":2999,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["adding",{"_index":340,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["additional",{"_index":4738,"title":{},"body":{"license.html":{}}}],["additions",{"_index":4639,"title":{},"body":{"license.html":{}}}],["addline(l",{"_index":2719,"title":{},"body":{"classes/LineModel.html":{}}}],["addlinefromparams(sourcex",{"_index":2710,"title":{},"body":{"classes/LineModel.html":{}}}],["addmappedfield(mappedfield",{"_index":3014,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["addmapping",{"_index":3591,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/ToolbarComponent.html":{}}}],["addtable",{"_index":3079,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["addtable(table",{"_index":3097,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["addtransformation",{"_index":3434,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["adjust",{"_index":1359,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["adm",{"_index":335,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["adm,.jar",{"_index":4179,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["admhttptimeout",{"_index":62,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["admredrawmappinglinesevent",{"_index":1,"title":{"classes/AdmRedrawMappingLinesEvent.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/LineModel.html":{},"coverage.html":{}}}],["advised",{"_index":4801,"title":{},"body":{"license.html":{}}}],["aftercontentchecked",{"_index":2638,"title":{},"body":{"directives/FocusDirective.html":{}}}],["afterviewinit",{"_index":1447,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["against",{"_index":4696,"title":{},"body":{"license.html":{}}}],["aggregatebuffer",{"_index":2568,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["agree",{"_index":4815,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":714,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["agreement",{"_index":4751,"title":{},"body":{"license.html":{}}}],["alertmodule",{"_index":1059,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["alertmodule.forroot",{"_index":1117,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["alertmoduleforroot",{"_index":1116,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alias",{"_index":2393,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["align",{"_index":789,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["align:center",{"_index":762,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["align:left",{"_index":851,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["align:middle",{"_index":774,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["align:text",{"_index":766,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["alleging",{"_index":4701,"title":{},"body":{"license.html":{}}}],["allfields",{"_index":3924,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["allowdrop",{"_index":1232,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["allowdrop(event",{"_index":1258,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["alone",{"_index":901,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"license.html":{}}}],["along",{"_index":4729,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":4736,"title":{},"body":{"license.html":{}}}],["alphabetizefields(fields",{"_index":1561,"title":{},"body":{"classes/EnumValue.html":{}}}],["alphebatize",{"_index":4053,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["already",{"_index":502,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["alt",{"_index":4185,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["ampersand",{"_index":4244,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["and(b",{"_index":4713,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":4719,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":4725,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":4809,"title":{},"body":{"license.html":{}}}],["angle",{"_index":523,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["angular",{"_index":297,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["angular/animations",{"_index":4469,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1049,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["angular/common/http",{"_index":320,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["angular/core",{"_index":314,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"modules/ExampleAppModule.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["angular/forms",{"_index":1058,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["angular/platform",{"_index":1051,"title":{},"body":{"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"modules/ExampleAppModule.html":{},"classes/LineModel.html":{}}}],["angular/router",{"_index":1820,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["angular2",{"_index":2752,"title":{},"body":{"classes/LineModel.html":{}}}],["annotations",{"_index":1835,"title":{},"body":{"classes/Examples.html":{},"license.html":{}}}],["another",{"_index":4552,"title":{},"body":{"index.html":{}}}],["answer",{"_index":2033,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["answer.push(fn",{"_index":2048,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["answer.push(new",{"_index":2040,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["any_date",{"_index":2331,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["apache",{"_index":701,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["apihttpxsrftokenextractor",{"_index":291,"title":{"injectables/ApiHttpXsrfTokenExtractor.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{},"coverage.html":{}}}],["apixsrfinterceptor",{"_index":332,"title":{"interceptors/ApiXsrfInterceptor.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{},"coverage.html":{}}}],["app",{"_index":4203,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["app.component",{"_index":862,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["app.component.css",{"_index":605,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.html",{"_index":606,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts",{"_index":597,"title":{},"body":{"components/DataMapperAppComponent.html":{},"coverage.html":{}}}],["app.component.ts:41",{"_index":640,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:42",{"_index":635,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:43",{"_index":645,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:44",{"_index":647,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:45",{"_index":631,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:46",{"_index":633,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:47",{"_index":643,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:48",{"_index":650,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:50",{"_index":641,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:51",{"_index":636,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:52",{"_index":637,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:54",{"_index":648,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:55",{"_index":624,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:57",{"_index":629,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:59",{"_index":625,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:63",{"_index":627,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:80",{"_index":626,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.component.ts:85",{"_index":628,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["app.module.ts",{"_index":1817,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["app/constant",{"_index":1304,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["app/data",{"_index":861,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["app/field",{"_index":1305,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["app/line",{"_index":1302,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["app/namespace",{"_index":3864,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["app/property",{"_index":1303,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["app/template",{"_index":4155,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["appcomponent",{"_index":362,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1194,"title":{},"body":{"classes/DataMapperUtil.html":{},"license.html":{}}}],["append",{"_index":1939,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["appended",{"_index":1936,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["appendfieldnode(mfield",{"_index":2052,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["appendix",{"_index":4622,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":712,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldDetailComponent.html":{},"license.html":{}}}],["application",{"_index":1806,"title":{},"body":{"classes/ErrorInfo.html":{},"miscellaneous/enumerations.html":{}}}],["application/json",{"_index":2202,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["application/octet",{"_index":2203,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["applied",{"_index":2165,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["applies",{"_index":4687,"title":{},"body":{"license.html":{}}}],["appliestofield",{"_index":2137,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["appliestofield(action",{"_index":2153,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["appliestosourcefield",{"_index":2138,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["appliestosourcefield(action",{"_index":2161,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["appliestotargetfield",{"_index":2139,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["appliestotargetfield(action",{"_index":2167,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["apply",{"_index":4823,"title":{},"body":{"license.html":{}}}],["appropriate",{"_index":4830,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":4773,"title":{},"body":{"license.html":{}}}],["archive",{"_index":4134,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["archives",{"_index":4837,"title":{},"body":{"license.html":{}}}],["area",{"_index":2600,"title":{},"body":{"injectables/FileManagementService.html":{},"components/MappingFieldContainerComponent.html":{}}}],["arg",{"_index":2095,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["argconfig",{"_index":3184,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argconfig.values",{"_index":3244,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argconfig.values[argvalindex",{"_index":3272,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argconfigname",{"_index":3217,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument",{"_index":2101,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["argument'},{'name",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["argument.component",{"_index":1087,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["argument.component.html",{"_index":3170,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts",{"_index":3169,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"coverage.html":{}}}],["argument.component.ts:102",{"_index":3196,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:137",{"_index":3206,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:151",{"_index":3214,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:155",{"_index":3224,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:162",{"_index":3221,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:31",{"_index":3187,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:32",{"_index":3188,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:33",{"_index":3190,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:34",{"_index":3189,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:35",{"_index":3191,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:36",{"_index":3192,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:38",{"_index":3232,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:39",{"_index":3186,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:46",{"_index":3218,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:53",{"_index":3201,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:63",{"_index":3194,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:72",{"_index":3204,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.component.ts:85",{"_index":3226,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argument.name",{"_index":2102,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["argumentdefinition",{"_index":2297,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentdefinition.name",{"_index":2298,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentdefinition.serviceobject",{"_index":2303,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentdefinition.type",{"_index":2299,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentdefinition.values",{"_index":2301,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["argumentname",{"_index":2074,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["arguments",{"_index":2085,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["argumentvalues",{"_index":2062,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["argval",{"_index":3299,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["argvalindex",{"_index":3185,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["argvalue",{"_index":2107,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["argvalue.name",{"_index":2109,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["arising",{"_index":4791,"title":{},"body":{"license.html":{}}}],["array",{"_index":501,"title":{},"body":{"components/ClassNameComponent.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["arraybuffer",{"_index":2546,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["arrays",{"_index":2580,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["arrow",{"_index":521,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["asserted",{"_index":4821,"title":{},"body":{"license.html":{}}}],["associated",{"_index":2702,"title":{},"body":{"classes/LineModel.html":{},"license.html":{}}}],["assume",{"_index":4776,"title":{},"body":{"license.html":{}}}],["assumes",{"_index":1698,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["async",{"_index":1131,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["async(result",{"_index":2615,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["async(value",{"_index":2602,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["asynchronous",{"_index":1159,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/ToolbarComponent.html":{}}}],["asynchronously",{"_index":1166,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["at_sign",{"_index":4245,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["atlas",{"_index":219,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["atlasmap",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["atlasmapcatalogname",{"_index":2548,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["atlasmapnavbar",{"_index":776,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["atlasmapnavbarcomponent",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["atlasmapping",{"_index":2506,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["atlasmap}/standalone",{"_index":4545,"title":{},"body":{"index.html":{}}}],["atlasmap}/ui",{"_index":4561,"title":{},"body":{"index.html":{}}}],["atlasserviceurl",{"_index":4855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["atsign",{"_index":4271,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["attach",{"_index":4824,"title":{},"body":{"license.html":{}}}],["attached",{"_index":4621,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":4563,"title":{},"body":{"index.html":{}}}],["attempting",{"_index":3228,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["attribute",{"_index":2377,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["attributes",{"_index":3261,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["attributes.getnameditem('actionindex').value",{"_index":3266,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["attributes.getnameditem('argvalindex').value",{"_index":3265,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["attributes.getnameditem('value').value",{"_index":3264,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["attribution",{"_index":4722,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":4579,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":4618,"title":{},"body":{"license.html":{}}}],["autocreate",{"_index":2813,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["automatically",{"_index":2405,"title":{},"body":{"components/FieldEditComponent.html":{},"index.html":{}}}],["available",{"_index":931,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/FileManagementService.html":{},"index.html":{},"license.html":{}}}],["avoid",{"_index":342,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["avoids",{"_index":4204,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["await",{"_index":2573,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["awesome",{"_index":4478,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["back",{"_index":3462,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["backend",{"_index":2236,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["backendurls",{"_index":4854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["background",{"_index":791,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["backslash",{"_index":4246,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["bad",{"_index":2392,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["bar",{"_index":100,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["base",{"_index":873,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["base.component.css",{"_index":730,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["based",{"_index":3211,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"index.html":{},"license.html":{}}}],["basejavainspectionserviceurl",{"_index":67,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["basejsoninspectionserviceurl",{"_index":70,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["basemappingserviceurl",{"_index":71,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["baseurl",{"_index":2542,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["basexmlinspectionserviceurl",{"_index":69,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["basis",{"_index":718,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["before",{"_index":867,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["begin",{"_index":3426,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["beginning",{"_index":1152,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["behalf",{"_index":4644,"title":{},"body":{"license.html":{}}}],["below",{"_index":4623,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":4604,"title":{},"body":{"license.html":{}}}],["better",{"_index":1752,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["between",{"_index":1969,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{},"index.html":{}}}],["big",{"_index":577,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["binary",{"_index":1160,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["binbuffer",{"_index":2593,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["bind",{"_index":4636,"title":{},"body":{"license.html":{}}}],["bit",{"_index":4541,"title":{},"body":{"index.html":{}}}],["black",{"_index":785,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["blob",{"_index":1190,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["blob([compress",{"_index":2596,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["blob([filebin",{"_index":2613,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["blob([value",{"_index":2603,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["block",{"_index":782,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["body",{"_index":1442,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"injectables/FieldActionService.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["body'},{'name",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["body.actiondetails",{"_index":2270,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["body.actiondetails.actiondetail",{"_index":2271,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["body.actiondetails.actiondetail.length",{"_index":2272,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["body.stringmap.stringmapentry",{"_index":2530,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["boilerplate",{"_index":4825,"title":{},"body":{"license.html":{}}}],["bolt",{"_index":1355,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["boolean",{"_index":117,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["boot:run",{"_index":4548,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":1030,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":833,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["bottom",{"_index":767,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["box",{"_index":831,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["brackets",{"_index":4827,"title":{},"body":{"license.html":{}}}],["break",{"_index":1972,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/NamespaceEditComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["browse",{"_index":4839,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1301,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"modules/ExampleAppModule.html":{},"classes/LineModel.html":{},"index.html":{},"modules.html":{}}}],["browser/animations",{"_index":1052,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["browseranimationsmodule",{"_index":1050,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["browsermodule",{"_index":1818,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["bsdropdownmodule",{"_index":1060,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":1113,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["bsdropdownmoduleforroot",{"_index":1112,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["buffer",{"_index":2475,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["bug",{"_index":1329,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["build",{"_index":4046,"title":{},"body":{"classes/NamespaceModel.html":{},"index.html":{}}}],["build&restart",{"_index":4558,"title":{},"body":{"index.html":{}}}],["button",{"_index":543,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["buttonclicked",{"_index":3786,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["buttonclicked(okclicked",{"_index":1515,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["buttontext",{"_index":3752,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["byte",{"_index":579,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/DataMapperUtil.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["bytearray",{"_index":580,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["bytes",{"_index":4159,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["c",{"_index":694,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"modules/ExampleAppModule.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["c.cfg",{"_index":3160,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["c.getfielddetailcomponent(field",{"_index":1381,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["c.getselectedmapping",{"_index":3165,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["c.initcfg.basejavainspectionserviceurl",{"_index":876,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.basejsoninspectionserviceurl",{"_index":880,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.basemappingserviceurl",{"_index":882,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.basexmlinspectionserviceurl",{"_index":878,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.classpath",{"_index":895,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.classpathfetchtimeoutinmilliseconds",{"_index":894,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.disablemappingpreviewmode",{"_index":899,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.disablenavbar",{"_index":902,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.pompayload",{"_index":892,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.xsrfcookiename",{"_index":885,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.xsrfdefaulttokenvalue",{"_index":886,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initcfg.xsrfheadername",{"_index":884,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["c.initialize(this.cfg",{"_index":4374,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["c.mappings",{"_index":3162,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["c.modalwindow",{"_index":3163,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["c.nativeelement.attributes['sourcevalue'].value",{"_index":2893,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["c.nativeelement.selectedoptions",{"_index":2889,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["c.parentcomponent",{"_index":3612,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["c.savetable",{"_index":4375,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["c.selected",{"_index":3616,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["c.selectedfield",{"_index":3159,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["cache",{"_index":4047,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cached",{"_index":3995,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cachedfield",{"_index":3993,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cachedfield.children",{"_index":3997,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cachedfield.copy",{"_index":3996,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["call",{"_index":82,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["calls",{"_index":875,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["camel",{"_index":1185,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["camelcasestring",{"_index":1188,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["camelcasestring.charat(0).touppercase",{"_index":1219,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["camelcasestring.indexof",{"_index":1217,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["can't",{"_index":3952,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cancel",{"_index":1520,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["cancelbuttonhandler",{"_index":1457,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["candidate",{"_index":2189,"title":{},"body":{"injectables/FieldActionService.html":{},"components/PropertyFieldEditComponent.html":{}}}],["candidatetype",{"_index":2191,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["canvas",{"_index":4138,"title":{},"body":{"components/ToolbarComponent.html":{},"index.html":{}}}],["capture",{"_index":1148,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["caret",{"_index":1929,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["carry",{"_index":4715,"title":{},"body":{"license.html":{}}}],["case",{"_index":957,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["catalog",{"_index":2459,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["catalog.adm",{"_index":2549,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["catalogname",{"_index":2540,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["catch",{"_index":2607,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["catch((error",{"_index":2242,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["catheaders",{"_index":2544,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["cause",{"_index":4592,"title":{},"body":{"license.html":{}}}],["cd",{"_index":4534,"title":{},"body":{"index.html":{}}}],["cfg",{"_index":134,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceListComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["cfg(cfg",{"_index":2524,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["cfg.constantdoc",{"_index":3700,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.errorservice.adderror(new",{"_index":2871,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappingUtil.html":{}}}],["cfg.fieldactionservice.getactiondefinitionforname(action.argumentvalues[0].value",{"_index":3739,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.fieldactionservice.getactiondefinitionforname(action.name",{"_index":3740,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.getalldocs",{"_index":3692,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.getdocs(issource",{"_index":256,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["cfg.getdocurimap(cfg",{"_index":3688,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.getfirstxmldoc(false).name",{"_index":3888,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["cfg.mappings.gettablebyname(mapping.transition.lookuptablename",{"_index":2870,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["cfg.mappings.mappings",{"_index":3690,"title":{},"body":{"classes/MappingUtil.html":{}}}],["cfg.mappings.mappings.length",{"_index":3574,"title":{},"body":{"components/MappingListComponent.html":{}}}],["cfg.propertydoc",{"_index":3698,"title":{},"body":{"classes/MappingUtil.html":{}}}],["change",{"_index":2170,"title":{},"body":{"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"index.html":{}}}],["changed",{"_index":3202,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"license.html":{}}}],["changedetectorref",{"_index":623,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["channel",{"_index":1662,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["char",{"_index":581,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["character",{"_index":4362,"title":{},"body":{"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["characterencoding",{"_index":3928,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["charge",{"_index":4674,"title":{},"body":{"license.html":{}}}],["chart.js",{"_index":4472,"title":{},"body":{"dependencies.html":{}}}],["check",{"_index":2164,"title":{},"body":{"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/MappingUtil.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["checkfieldeligibiltyforlinedrawing(field",{"_index":2797,"title":{},"body":{"classes/LineModel.html":{}}}],["checkiconenabled",{"_index":3171,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["checkout",{"_index":4528,"title":{},"body":{"index.html":{}}}],["child",{"_index":1311,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["childfield",{"_index":1550,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["childfield.children",{"_index":4052,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["childfield.copy",{"_index":3998,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["childfield.hasunmappedchildren",{"_index":1552,"title":{},"body":{"classes/EnumValue.html":{}}}],["childfield.parentfield",{"_index":3999,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["childrein",{"_index":4054,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["children",{"_index":1537,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["choose",{"_index":4804,"title":{},"body":{"license.html":{}}}],["circle",{"_index":1357,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["claim",{"_index":4698,"title":{},"body":{"license.html":{}}}],["claims",{"_index":4688,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"license.html":{}}}],["class.pipe",{"_index":1107,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["class.pipe.ts",{"_index":4081,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{}}}],["class.pipe.ts:7",{"_index":4085,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["class=\"text",{"_index":4068,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"overview.html":{}}}],["classidentifier",{"_index":1530,"title":{},"body":{"classes/EnumValue.html":{}}}],["classlist.js",{"_index":4474,"title":{},"body":{"dependencies.html":{}}}],["classname",{"_index":225,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["classnameblacklist",{"_index":92,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["classnamecomponent",{"_index":382,"title":{"components/ClassNameComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classpath",{"_index":79,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["classpathfetchtimeoutinmilliseconds",{"_index":78,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["clean",{"_index":4536,"title":{},"body":{"index.html":{}}}],["cleanstr",{"_index":1915,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["clear",{"_index":258,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["clearactiondefinitions",{"_index":2140,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["clearallerrors",{"_index":1671,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["cleardocs",{"_index":266,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["cleared",{"_index":1655,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["clearfielderrors",{"_index":1672,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["clearfields",{"_index":4004,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["clearformerrors",{"_index":1673,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["clearlines",{"_index":2724,"title":{},"body":{"classes/LineModel.html":{}}}],["clearmappings",{"_index":4095,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["clearpreviewerrors",{"_index":1674,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["cleartext(nodeid",{"_index":1904,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["cleartimeout(this.mouseeventtimer",{"_index":991,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["cleartoend(index",{"_index":2009,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["clearvalidationerrors",{"_index":1675,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["clearvalidationerrors(mapping",{"_index":1693,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["cli",{"_index":4490,"title":{},"body":{"dependencies.html":{}}}],["click",{"_index":1283,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["clicked",{"_index":1521,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["clone",{"_index":4532,"title":{},"body":{"index.html":{}}}],["close",{"_index":1505,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["closeclicked",{"_index":3787,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["closeclicked(event",{"_index":1503,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["closed",{"_index":1666,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["cluster_datamappermodule",{"_index":1032,"title":{},"body":{"modules/DataMapperModule.html":{},"overview.html":{}}}],["cluster_datamappermodule_declarations",{"_index":1033,"title":{},"body":{"modules/DataMapperModule.html":{},"overview.html":{}}}],["cluster_datamappermodule_exports",{"_index":1034,"title":{},"body":{"modules/DataMapperModule.html":{},"overview.html":{}}}],["cluster_datamappermodule_providers",{"_index":1035,"title":{},"body":{"modules/DataMapperModule.html":{},"overview.html":{}}}],["cluster_exampleappmodule",{"_index":1812,"title":{},"body":{"modules/ExampleAppModule.html":{},"overview.html":{}}}],["cluster_exampleappmodule_bootstrap",{"_index":1815,"title":{},"body":{"modules/ExampleAppModule.html":{},"overview.html":{}}}],["cluster_exampleappmodule_declarations",{"_index":1813,"title":{},"body":{"modules/ExampleAppModule.html":{},"overview.html":{}}}],["cluster_exampleappmodule_imports",{"_index":1814,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["clz",{"_index":1356,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["code",{"_index":1347,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{},"license.html":{}}}],["cog",{"_index":4193,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["col",{"_index":807,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["collapsable",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["collapsableheadercomponent",{"_index":384,"title":{"components/CollapsableHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["collapsed",{"_index":511,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"classes/EnumValue.html":{}}}],["collection",{"_index":499,"title":{},"body":{"components/ClassNameComponent.html":{},"components/DataMapperErrorComponent.html":{},"injectables/FieldActionService.html":{}}}],["collectionclassname",{"_index":122,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["collectiontype",{"_index":47,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/enumerations.html":{}}}],["collectiontype.none",{"_index":227,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["collectiontypeselectionchanged",{"_index":461,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["collectiontypeselectionchanged(event",{"_index":468,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["colon",{"_index":4247,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":784,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["color:#0088ce",{"_index":793,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["color:crimson",{"_index":763,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["color:rgb(54,54,54",{"_index":797,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["com.fasterxml.jackson.core",{"_index":1833,"title":{},"body":{"classes/Examples.html":{}}}],["combination",{"_index":4693,"title":{},"body":{"license.html":{}}}],["combobox",{"_index":4340,"title":{},"body":{"components/TransitionSelectionComponent.html":{},"dependencies.html":{}}}],["combobox').on('blur",{"_index":4355,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["combobox').on('input",{"_index":4359,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["coming",{"_index":1310,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["comma",{"_index":4248,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["command",{"_index":4562,"title":{},"body":{"index.html":{}}}],["comment",{"_index":4831,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":4799,"title":{},"body":{"license.html":{}}}],["commit",{"_index":2505,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["common",{"_index":4587,"title":{},"body":{"license.html":{}}}],["common/config.types",{"_index":48,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["common/data",{"_index":2519,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["common/focus.directive",{"_index":1093,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["common/to",{"_index":1105,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["commonmodule",{"_index":1048,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["communication",{"_index":4648,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":4615,"title":{},"body":{"license.html":{}}}],["complete",{"_index":1777,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["completed",{"_index":1665,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["complex",{"_index":582,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["complexfieldsbyclassidentifier",{"_index":3926,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["compliance",{"_index":706,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["complies",{"_index":4743,"title":{},"body":{"license.html":{}}}],["component",{"_index":361,"title":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["componentfactory",{"_index":1491,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["componentfactoryresolver",{"_index":1446,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["componentloaded",{"_index":1467,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["components",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"overview.html":{}}}],["components/app/constant",{"_index":1078,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/app/data",{"_index":1066,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/app/field",{"_index":1079,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/app/line",{"_index":1071,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/app/namespace",{"_index":1080,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/app/property",{"_index":1077,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/app/template",{"_index":1069,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/data",{"_index":1064,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/document/class",{"_index":1072,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/document/document",{"_index":1076,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/mapping",{"_index":1074,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/modal/modal",{"_index":1067,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/toolbar/expression.component",{"_index":1094,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["components/toolbar/toolbar.component",{"_index":1068,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["compound",{"_index":1286,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["compress",{"_index":2464,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["compressed",{"_index":2474,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["compressedbuffer",{"_index":2502,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["computer",{"_index":4796,"title":{},"body":{"license.html":{}}}],["concat(issource",{"_index":237,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["concat(targetvalues",{"_index":2880,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["concat(this.allfields",{"_index":3936,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["concat(this.cfg.getfirstxmldoc(false).namespaces",{"_index":3884,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["concat(this.cfg.mappings.getallmappings(true",{"_index":3555,"title":{},"body":{"components/MappingListComponent.html":{}}}],["concat(this.mappings",{"_index":3128,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["concat(this.terminalfields",{"_index":3969,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["condition",{"_index":1714,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["conditional",{"_index":3412,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["conditionalmappingexpressionenabled",{"_index":4096,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["conditions",{"_index":720,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["config",{"_index":140,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{}}}],["configmodel",{"_index":123,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["configmodel.cfg",{"_index":176,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["configmodel.errorservice.isrequiredfieldvalid(this.namespace.alias",{"_index":3835,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["configmodel.errorservice.isrequiredfieldvalid(this.namespace.uri",{"_index":3836,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["configmodel.getconfig",{"_index":312,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/NamespaceEditComponent.html":{}}}],["configmodel.getconfig().errorservice.isrequiredfieldvalid(this.field.name",{"_index":2417,"title":{},"body":{"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["configmodel.getconfig().errorservice.isrequiredfieldvalid(this.field.value",{"_index":573,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["configs",{"_index":2250,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["configselectionchanged",{"_index":3285,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["configselectionchanged(event",{"_index":3293,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["configuration",{"_index":77,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["configuring",{"_index":4517,"title":{},"body":{"index.html":{}}}],["confirmbuttondisabled",{"_index":1460,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["confirmbuttontext",{"_index":1461,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["confirmed",{"_index":4111,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["connect",{"_index":2246,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["consequential",{"_index":4790,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":4811,"title":{},"body":{"license.html":{}}}],["console",{"_index":1753,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["console.log(\"copied",{"_index":1609,"title":{},"body":{"classes/EnumValue.html":{}}}],["conspicuously",{"_index":4661,"title":{},"body":{"license.html":{}}}],["const",{"_index":193,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["constant",{"_index":263,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["constantcomponent",{"_index":1397,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["constantcomponent.getfield",{"_index":1407,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["constantcomponent.initialize(self.field",{"_index":1398,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["constantdoc",{"_index":158,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["constantfield",{"_index":3708,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.displayname",{"_index":3713,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.name",{"_index":3714,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.path",{"_index":3715,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.type",{"_index":3711,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.usercreated",{"_index":3716,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfield.value",{"_index":3709,"title":{},"body":{"classes/MappingUtil.html":{}}}],["constantfieldeditcomponent",{"_index":387,"title":{"components/ConstantFieldEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["constants",{"_index":171,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/enumerations.html":{}}}],["constitutes",{"_index":4702,"title":{},"body":{"license.html":{}}}],["constrain",{"_index":3395,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["constructor",{"_index":105,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["constructor(componentfactoryresolver",{"_index":3788,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["constructor(delimiter",{"_index":4236,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["constructor(detector",{"_index":622,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/ModalErrorWindowComponent.html":{}}}],["constructor(elementref",{"_index":2641,"title":{},"body":{"directives/FocusDirective.html":{}}}],["constructor(errorservice",{"_index":2150,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["constructor(init",{"_index":1787,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["constructor(initializationservice",{"_index":857,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["constructor(logger",{"_index":2454,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["constructor(mapping",{"_index":2423,"title":{},"body":{"classes/FieldNode.html":{}}}],["constructor(node",{"_index":2056,"title":{},"body":{"classes/ExpressionUpdatedEvent.html":{}}}],["constructor(prefix",{"_index":1848,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["constructor(private",{"_index":865,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["constructor(public",{"_index":659,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"classes/TextNode.html":{}}}],["constructor(sanitizer",{"_index":1250,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["constructor(str",{"_index":4073,"title":{},"body":{"classes/TextNode.html":{}}}],["construed",{"_index":4739,"title":{},"body":{"license.html":{}}}],["consumers",{"_index":1096,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["contained",{"_index":4727,"title":{},"body":{"license.html":{}}}],["container",{"_index":3325,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container'},{'name",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["container.component",{"_index":1085,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["container.component.html",{"_index":3326,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts",{"_index":3324,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:114",{"_index":3352,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:118",{"_index":3349,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:128",{"_index":3354,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:149",{"_index":3351,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:155",{"_index":3350,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:179",{"_index":3375,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:183",{"_index":3360,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:187",{"_index":3371,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:194",{"_index":3364,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:203",{"_index":3361,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:207",{"_index":3355,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:211",{"_index":3369,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:33",{"_index":3345,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:34",{"_index":3346,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:35",{"_index":3347,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:36",{"_index":3348,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:38",{"_index":3378,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:40",{"_index":3379,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:41",{"_index":3377,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:42",{"_index":3381,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:43",{"_index":3376,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:44",{"_index":3380,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:45",{"_index":3344,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:53",{"_index":3368,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:57",{"_index":3367,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:60",{"_index":3357,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:64",{"_index":3365,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:68",{"_index":3359,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:72",{"_index":3363,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["container.component.ts:88",{"_index":3373,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["contains",{"_index":1921,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["content",{"_index":783,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["contentchanged",{"_index":3175,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["contents",{"_index":250,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"license.html":{}}}],["context",{"_index":3677,"title":{},"body":{"classes/MappingUtil.html":{}}}],["continue",{"_index":1567,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["contract",{"_index":4596,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":4638,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":4692,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":4745,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":4664,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":4703,"title":{},"body":{"license.html":{}}}],["control",{"_index":4585,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":4586,"title":{},"body":{"license.html":{}}}],["conversion",{"_index":3229,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["conversions",{"_index":4616,"title":{},"body":{"license.html":{}}}],["convert",{"_index":1184,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["cookie",{"_index":4852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cookiename",{"_index":4851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cookies",{"_index":303,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["copies",{"_index":1600,"title":{},"body":{"classes/EnumValue.html":{},"license.html":{}}}],["copy",{"_index":708,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"classes/EnumValue.html":{},"modules/ExampleAppModule.html":{},"classes/NamespaceModel.html":{},"license.html":{}}}],["copy.children",{"_index":1606,"title":{},"body":{"classes/EnumValue.html":{}}}],["copy.children.push(childfield.copy",{"_index":1608,"title":{},"body":{"classes/EnumValue.html":{}}}],["copy.docdef",{"_index":1605,"title":{},"body":{"classes/EnumValue.html":{}}}],["copy.parentfield",{"_index":1603,"title":{},"body":{"classes/EnumValue.html":{}}}],["copy.serviceobject",{"_index":1601,"title":{},"body":{"classes/EnumValue.html":{}}}],["copyfrom",{"_index":3898,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["copyfrom(that",{"_index":1612,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["copyright",{"_index":693,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["core",{"_index":1838,"title":{},"body":{"classes/Examples.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["correctly",{"_index":3394,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["corresponding",{"_index":2013,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["couldn't",{"_index":3398,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["counter",{"_index":2841,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["counterclaim",{"_index":4699,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":4377,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1697,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/FieldAction.html":{},"miscellaneous/enumerations.html":{}}}],["create(definition",{"_index":2070,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["created",{"_index":1663,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["createdbyuser",{"_index":3894,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["createformerrorchannel",{"_index":1664,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["createlinestyle(l",{"_index":2751,"title":{},"body":{"classes/LineModel.html":{}}}],["createnodesfromtext(text",{"_index":2037,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["creation",{"_index":545,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["cross",{"_index":4697,"title":{},"body":{"license.html":{}}}],["css",{"_index":2756,"title":{},"body":{"classes/LineModel.html":{}}}],["cssclass",{"_index":1360,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/NamespaceListComponent.html":{}}}],["csv",{"_index":4507,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ctrl/cmd",{"_index":1285,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["current",{"_index":137,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/FileManagementService.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["currentdraggedfield",{"_index":149,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["currentparentpath",{"_index":3960,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["currentpathsection",{"_index":3961,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["cursor:pointer",{"_index":794,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["custom",{"_index":11,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["custom_elements_schema",{"_index":1042,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["customaction",{"_index":3738,"title":{},"body":{"classes/MappingUtil.html":{}}}],["customary",{"_index":4760,"title":{},"body":{"license.html":{}}}],["d",{"_index":277,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["d.id",{"_index":279,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["d.push(tabledata",{"_index":2884,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["d.sourceenumvalue",{"_index":2896,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["damages",{"_index":4788,"title":{},"body":{"license.html":{}}}],["dash",{"_index":4249,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["data",{"_index":7,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["databind",{"_index":1837,"title":{},"body":{"classes/Examples.html":{}}}],["dataisvalid",{"_index":3834,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["datamapperappcomponent",{"_index":390,"title":{"components/DataMapperAppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datamapperappexamplehostcomponent",{"_index":392,"title":{"components/DataMapperAppExampleHostComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datamapperbody",{"_index":746,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["datamapperbodyhidden",{"_index":742,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["datamappercomponent",{"_index":856,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["datamappereditcomponent",{"_index":821,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["datamappererrorcomponent",{"_index":396,"title":{"components/DataMapperErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datamapperinitializationmodel",{"_index":55,"title":{"classes/DataMapperInitializationModel.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{}}}],["datamapperloadingmessage",{"_index":754,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["datamappermodule",{"_index":1026,"title":{"modules/DataMapperModule.html":{}},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"modules.html":{},"overview.html":{}}}],["datamappermodule.withinterceptor",{"_index":1825,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["datamapperui",{"_index":775,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["datamapperutil",{"_index":1125,"title":{"classes/DataMapperUtil.html":{}},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["datamapperutil.http_status_no_content",{"_index":2535,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["datamapperutil.readbinaryfile(mappingsfilename",{"_index":2612,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["datamapperutil.removeitemfromarray(action",{"_index":2985,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["datamapperutil.removeitemfromarray(field",{"_index":4010,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["datamapperutil.removeitemfromarray(field.path",{"_index":3983,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["datamapperutil.removeitemfromarray(m",{"_index":3134,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["datamapperutil.removeitemfromarray(mappedfield",{"_index":3017,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["datamapperutil.removeitemfromarray(mappedfields.find(mf",{"_index":3004,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["datamapperutil.removeitemfromarray(ns",{"_index":3883,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["datamapperutil.str2bytes(aggregatebuffer",{"_index":2594,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["datamapperutil.todisplayable",{"_index":3302,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["datamapperutil.todisplayable(argconfigname",{"_index":3273,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["datamapperutil.writefile(filecontent",{"_index":2604,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["datamapperversion",{"_index":56,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["datasource",{"_index":2339,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["date",{"_index":589,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"license.html":{}}}],["date().gettime",{"_index":2829,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["date_time",{"_index":2332,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["date_time_tz",{"_index":2333,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["datetime",{"_index":590,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["datetimetz",{"_index":593,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["datetz",{"_index":591,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["ddd",{"_index":792,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["debug",{"_index":1804,"title":{},"body":{"classes/ErrorInfo.html":{},"miscellaneous/enumerations.html":{}}}],["decimal",{"_index":583,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["declarations",{"_index":1029,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}],["decoration",{"_index":788,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["decoration:none",{"_index":795,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["decorators",{"_index":482,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["deep",{"_index":4051,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["default",{"_index":305,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaulttokenvalue",{"_index":4853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defend",{"_index":4817,"title":{},"body":{"license.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["definition",{"_index":1375,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"license.html":{}}}],["definition'},{'name",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["definition.component",{"_index":656,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"classes/LineModel.html":{}}}],["definition.component.ts",{"_index":4399,"title":{},"body":{"coverage.html":{}}}],["definition.model",{"_index":30,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["definition.model.ts",{"_index":3073,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["definition.model.ts:108",{"_index":3110,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:24",{"_index":3902,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:25",{"_index":3091,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:26",{"_index":3090,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:27",{"_index":3089,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:28",{"_index":3092,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:29",{"_index":3096,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:30",{"_index":3901,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:31",{"_index":3093,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:32",{"_index":3095,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:33",{"_index":3088,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:39",{"_index":3113,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:41",{"_index":3904,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:43",{"_index":3098,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:49",{"_index":3105,"title":{},"body":{"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["definition.model.ts:53",{"_index":3107,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:55",{"_index":3903,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["definition.model.ts:58",{"_index":3108,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:70",{"_index":3112,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:82",{"_index":3102,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.model.ts:98",{"_index":3100,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["definition.name",{"_index":2106,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["definitions",{"_index":265,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["definitions.length",{"_index":2307,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["deflate",{"_index":2516,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["deflate(binbuffer",{"_index":2595,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["defnames",{"_index":2309,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["defnames.push(name",{"_index":2313,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["defnames.sort",{"_index":2315,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["defsbyname",{"_index":2308,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["defsbyname[name",{"_index":2312,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["delete",{"_index":2493,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["deliberate",{"_index":4783,"title":{},"body":{"license.html":{}}}],["delimiter",{"_index":4233,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["delimiter.prettyname",{"_index":3281,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["delimitermodel",{"_index":3222,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["delimitermodel.delimiter",{"_index":3276,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["delimitermodels",{"_index":4262,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["delimiters",{"_index":3172,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["delta",{"_index":1222,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["deltas",{"_index":2741,"title":{},"body":{"classes/LineModel.html":{}}}],["depend",{"_index":1322,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["dependencies",{"_index":1028,"title":{"dependencies.html":{}},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depth",{"_index":4030,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["derivative",{"_index":4624,"title":{},"body":{"license.html":{}}}],["derived",{"_index":4626,"title":{},"body":{"license.html":{}}}],["describing",{"_index":2582,"title":{},"body":{"injectables/FileManagementService.html":{},"license.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTableUtil.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"license.html":{}}}],["design",{"_index":2247,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["designated",{"_index":4663,"title":{},"body":{"license.html":{}}}],["designed",{"_index":4522,"title":{},"body":{"index.html":{}}}],["desire",{"_index":2390,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["detail",{"_index":1227,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ModalErrorDetailComponent.html":{}}}],["detail'},{'name",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["detail.component",{"_index":658,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"classes/LineModel.html":{}}}],["detail.component.css",{"_index":734,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["detail.component.html",{"_index":1228,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ModalErrorDetailComponent.html":{}}}],["detail.component.ts",{"_index":1226,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ModalErrorDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:100",{"_index":3453,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:105",{"_index":1273,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:117",{"_index":3465,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:118",{"_index":1267,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:122",{"_index":3466,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:123",{"_index":1278,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:127",{"_index":3451,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:130",{"_index":1274,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:131",{"_index":3450,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:141",{"_index":1268,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:158",{"_index":1269,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:171",{"_index":1288,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:177",{"_index":1275,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:188",{"_index":1279,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:197",{"_index":1271,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:216",{"_index":1264,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:25",{"_index":3745,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["detail.component.ts:26",{"_index":3746,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["detail.component.ts:261",{"_index":1290,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:28",{"_index":3747,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["detail.component.ts:280",{"_index":1276,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:285",{"_index":1272,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:289",{"_index":1299,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:31",{"_index":3443,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:32",{"_index":3446,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/ModalErrorDetailComponent.html":{}}}],["detail.component.ts:33",{"_index":3444,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:34",{"_index":3445,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:35",{"_index":3139,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:36",{"_index":3140,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ModalErrorDetailComponent.html":{}}}],["detail.component.ts:37",{"_index":1254,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:38",{"_index":1255,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:39",{"_index":1256,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:40",{"_index":1257,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/ModalErrorDetailComponent.html":{}}}],["detail.component.ts:41",{"_index":3146,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:42",{"_index":1297,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:43",{"_index":1295,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:45",{"_index":1252,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:49",{"_index":1292,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{}}}],["detail.component.ts:51",{"_index":3447,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:53",{"_index":3141,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:57",{"_index":3143,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:64",{"_index":3449,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:66",{"_index":1262,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:71",{"_index":3448,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["detail.component.ts:73",{"_index":3145,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["detail.component.ts:74",{"_index":1259,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["detail.component.ts:88",{"_index":1266,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["detail/collapsable",{"_index":505,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"modules/DataMapperModule.html":{},"components/MappingDetailComponent.html":{},"coverage.html":{}}}],["detail/data",{"_index":733,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["detail/lookup",{"_index":1090,"title":{},"body":{"modules/DataMapperModule.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"coverage.html":{}}}],["detail/mapping",{"_index":657,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"coverage.html":{}}}],["detail/transition",{"_index":1092,"title":{},"body":{"modules/DataMapperModule.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["details",{"_index":3153,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["detected",{"_index":3991,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["detector",{"_index":608,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["determine",{"_index":1927,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/TextNode.html":{}}}],["determining",{"_index":4772,"title":{},"body":{"license.html":{}}}],["dev",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["developer",{"_index":4524,"title":{},"body":{"index.html":{}}}],["development",{"_index":4550,"title":{},"body":{"index.html":{}}}],["diagnostic",{"_index":1721,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["diff",{"_index":3327,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["different",{"_index":4553,"title":{},"body":{"index.html":{},"license.html":{}}}],["differing",{"_index":3251,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["direct",{"_index":4590,"title":{},"body":{"license.html":{}}}],["direction",{"_index":4593,"title":{},"body":{"license.html":{}}}],["directive",{"_index":376,"title":{"directives/FocusDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":448,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["directly",{"_index":4564,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1197,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["disable",{"_index":541,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["disableconsolelogging",{"_index":4850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disablemappingpreviewmode",{"_index":97,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disablenavbar",{"_index":102,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disableprivateonlyfields",{"_index":93,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disableprotectedonlyfields",{"_index":94,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disablepublicgettersetterfields",{"_index":96,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disablepubliconlyfields",{"_index":95,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["disarm",{"_index":955,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["discard",{"_index":1565,"title":{},"body":{"classes/EnumValue.html":{}}}],["disclaimer",{"_index":4763,"title":{},"body":{"license.html":{}}}],["discovercomplexfields(fields",{"_index":4056,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["discussing",{"_index":4658,"title":{},"body":{"license.html":{}}}],["dismiss",{"_index":3767,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["dismissall",{"_index":3753,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["display",{"_index":780,"title":{},"body":{"components/DataMapperAppComponent.html":{},"license.html":{}}}],["displayablestring",{"_index":1218,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["displayed",{"_index":3208,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["displayfieldsearchbox",{"_index":3331,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["displayindex",{"_index":3435,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["displayname",{"_index":1531,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{}}}],["displayparentobject",{"_index":3436,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["displaytransitionselection",{"_index":3332,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["distribute",{"_index":4682,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":717,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["distribution",{"_index":4571,"title":{},"body":{"license.html":{}}}],["dm",{"_index":2490,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["doc",{"_index":255,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"classes/MappingUtil.html":{}}}],["doc.addfield(constantfield",{"_index":3717,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.addfield(mappedfield.field",{"_index":3733,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.getfield(mappedfield.parseddata.parsedpath",{"_index":3707,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.getfield(parentpath",{"_index":3732,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.id",{"_index":3693,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.initialized",{"_index":286,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["doc.inspectionresult",{"_index":275,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["doc.inspectionsource",{"_index":2586,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["doc.inspectiontype",{"_index":2587,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["doc.name",{"_index":3694,"title":{},"body":{"classes/MappingUtil.html":{}}}],["doc.type",{"_index":272,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["doccount",{"_index":2578,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["docdef",{"_index":194,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["docdef.description",{"_index":203,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.fields[0",{"_index":2378,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["docdef.id",{"_index":197,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.initmodel",{"_index":195,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.inspectionresult",{"_index":213,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.inspectionsource",{"_index":211,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.inspectiontype",{"_index":209,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.issource",{"_index":205,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.name",{"_index":201,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.selectedroot",{"_index":215,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.showfields",{"_index":207,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.type",{"_index":199,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.type.tolowercase",{"_index":223,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdef.uri",{"_index":218,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdefcomponent",{"_index":2788,"title":{},"body":{"classes/LineModel.html":{}}}],["docdefcomponent.getdocdefelementposition(field.docdef",{"_index":2791,"title":{},"body":{"classes/LineModel.html":{}}}],["docdefcomponent.getfielddetailcomponentposition(parentfield",{"_index":2795,"title":{},"body":{"classes/LineModel.html":{}}}],["docdefin",{"_index":815,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["docdefinput",{"_index":609,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/LineModel.html":{}}}],["docdefout",{"_index":820,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["docdefoutput",{"_index":610,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/LineModel.html":{}}}],["docdefs",{"_index":232,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docdefs.push(this.adddocument(docmodel",{"_index":235,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel",{"_index":196,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.collectionclassname",{"_index":228,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.collectiontype",{"_index":226,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.description",{"_index":204,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.id",{"_index":198,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.inspectionresult",{"_index":214,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.inspectionsource",{"_index":212,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.inspectiontype",{"_index":210,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.issource",{"_index":206,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.name",{"_index":202,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.selectedroot",{"_index":216,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.showfields",{"_index":208,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docinitmodel.type",{"_index":200,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docmap",{"_index":254,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/MappingUtil.html":{}}}],["docmap[doc.uri",{"_index":257,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docmap[mappedfield.parseddata.parseddocuri",{"_index":3701,"title":{},"body":{"classes/MappingUtil.html":{}}}],["docmodel",{"_index":233,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docmodels",{"_index":234,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["docs",{"_index":241,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{}}}],["document",{"_index":32,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["document).ready",{"_index":4337,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["document.component.css",{"_index":732,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["document/data",{"_index":731,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["document/document",{"_index":655,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/LineModel.html":{}}}],["documentation",{"_index":4378,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentdefinition",{"_index":31,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["documentdefinitioncomponent",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documentfielddetailcomponent",{"_index":400,"title":{"components/DocumentFieldDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documentid",{"_index":280,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/MappingUtil.html":{}}}],["documentinitializationmodel",{"_index":113,"title":{"classes/DocumentInitializationModel.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["documentmanagementservice",{"_index":36,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["documentmanagementservice.generateexportblockdata(doc.inspectionsource",{"_index":2592,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["documentmanagementservice.generateexportmappings(this.jsonbuffer[0",{"_index":2575,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["documentmanagementservice.generateexportmetastr(doc",{"_index":2591,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["documents",{"_index":260,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["documentsareloaded",{"_index":285,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["documentservice",{"_index":151,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["documenttype",{"_index":45,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"miscellaneous/enumerations.html":{}}}],["documenttype.constant",{"_index":169,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["documenttype.java",{"_index":224,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["documenttype.java_archive",{"_index":221,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["documenttype.json",{"_index":4217,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["documenttype.property",{"_index":164,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["documenttype.xml",{"_index":282,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/FieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["documenttype.xsd",{"_index":217,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["doesn't",{"_index":336,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/FieldEditComponent.html":{},"index.html":{}}}],["dofetchfieldactions",{"_index":2141,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["dom",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["domsanitizer",{"_index":1251,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["don't",{"_index":2754,"title":{},"body":{"classes/LineModel.html":{},"license.html":{}}}],["dormant",{"_index":2661,"title":{},"body":{"classes/LineModel.html":{}}}],["double",{"_index":584,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["down",{"_index":525,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["download",{"_index":3388,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["downloads",{"_index":1196,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["drag",{"_index":1308,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["dragenter/dragleave/dragover",{"_index":1318,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["dragenterleave",{"_index":1233,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["dragenterleave(event",{"_index":1260,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["dragged",{"_index":1324,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["draggedmappedfield",{"_index":3372,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["draghover",{"_index":1366,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["drawcurrentline(x",{"_index":2729,"title":{},"body":{"classes/LineModel.html":{}}}],["drawing",{"_index":680,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["drawingline",{"_index":2670,"title":{},"body":{"classes/LineModel.html":{}}}],["drawline(event",{"_index":2726,"title":{},"body":{"classes/LineModel.html":{}}}],["drawlinesformapping(m",{"_index":2760,"title":{},"body":{"classes/LineModel.html":{}}}],["drop",{"_index":3399,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["dropdown",{"_index":777,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/FieldEditComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["dropdown:hover",{"_index":798,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["droppedfield",{"_index":1335,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["droppedmappedfield",{"_index":3408,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["dskiptests",{"_index":4544,"title":{},"body":{"index.html":{}}}],["dupe",{"_index":1564,"title":{},"body":{"classes/EnumValue.html":{}}}],["during",{"_index":1317,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["dynamic",{"_index":1120,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["dynamically",{"_index":1475,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["e",{"_index":939,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["e.identifier",{"_index":1783,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["e.level",{"_index":1743,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["e.mapping",{"_index":1742,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingListComponent.html":{}}}],["e.message",{"_index":1760,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ModalErrorDetailComponent.html":{}}}],["e.name",{"_index":2878,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["e.scope",{"_index":984,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MappingListComponent.html":{}}}],["e.sourcevalue",{"_index":2892,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["e.targetvalue",{"_index":2894,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["e.type",{"_index":1771,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingListComponent.html":{}}}],["each",{"_index":3458,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"license.html":{}}}],["easier",{"_index":4835,"title":{},"body":{"license.html":{}}}],["edit",{"_index":528,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["edit'},{'name",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["edit.component",{"_index":1070,"title":{},"body":{"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["edit.component.html",{"_index":529,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["edit.component.ts",{"_index":527,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:108",{"_index":2353,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:112",{"_index":2363,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:116",{"_index":2361,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:120",{"_index":2351,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:140",{"_index":2354,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:158",{"_index":2359,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:162",{"_index":2355,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:27",{"_index":4072,"title":{},"body":{"components/TemplateEditComponent.html":{}}}],["edit.component.ts:28",{"_index":4071,"title":{},"body":{"components/TemplateEditComponent.html":{}}}],["edit.component.ts:29",{"_index":3824,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:30",{"_index":3825,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["edit.component.ts:31",{"_index":3823,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:32",{"_index":550,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:33",{"_index":551,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:34",{"_index":556,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["edit.component.ts:35",{"_index":549,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:36",{"_index":555,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:37",{"_index":554,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:38",{"_index":553,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:39",{"_index":2367,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:40",{"_index":538,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:41",{"_index":2369,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:42",{"_index":2365,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:43",{"_index":2364,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:44",{"_index":2366,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:45",{"_index":2349,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:50",{"_index":3821,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:52",{"_index":548,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:53",{"_index":2358,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:56",{"_index":535,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:57",{"_index":3819,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["edit.component.ts:65",{"_index":4064,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:66",{"_index":539,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["edit.component.ts:69",{"_index":4063,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:70",{"_index":536,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["edit.component.ts:77",{"_index":4065,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["edit.component.ts:78",{"_index":540,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["edit.component.ts:93",{"_index":2357,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edit.component.ts:97",{"_index":2362,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["edited",{"_index":3455,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["editfield",{"_index":1234,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["editfield(event",{"_index":1263,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["editmode",{"_index":2340,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["editorial",{"_index":4627,"title":{},"body":{"license.html":{}}}],["edittemplate",{"_index":4097,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["el",{"_index":1368,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["el.offsetheight",{"_index":2763,"title":{},"body":{"classes/LineModel.html":{}}}],["el.offsetleft",{"_index":1370,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["el.offsetparent",{"_index":1372,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["el.offsettop",{"_index":1371,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["elaborations",{"_index":4629,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":4645,"title":{},"body":{"license.html":{}}}],["elem",{"_index":907,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["element",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["elementref",{"_index":472,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["elements",{"_index":686,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["emits",{"_index":1923,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["emitupdatedevent",{"_index":1676,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["emitupdatedevent(scope",{"_index":1704,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["empty",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["emptymodalbodycomponent",{"_index":402,"title":{"components/EmptyModalBodyComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["enable",{"_index":98,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["enableexpression",{"_index":4190,"title":{},"body":{"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["enables",{"_index":4556,"title":{},"body":{"index.html":{}}}],["encapsulation",{"_index":600,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["enclosed",{"_index":4826,"title":{},"body":{"license.html":{}}}],["end",{"_index":1900,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"classes/TextNode.html":{},"license.html":{}}}],["enddrag",{"_index":1235,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["enddrag(event",{"_index":1265,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["endoffset",{"_index":1903,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["engine",{"_index":4520,"title":{},"body":{"index.html":{}}}],["entering",{"_index":1261,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["entities",{"_index":4584,"title":{},"body":{"license.html":{}}}],["entity",{"_index":4578,"title":{},"body":{"license.html":{}}}],["entries",{"_index":2529,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["entry",{"_index":2532,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["entry.sourcevalue",{"_index":2835,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["entry.targetvalue",{"_index":2843,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["entrycomponents",{"_index":1040,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["enum",{"_index":1803,"title":{},"body":{"classes/ErrorInfo.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["enumeration",{"_index":1535,"title":{},"body":{"classes/EnumValue.html":{},"components/TransitionSelectionComponent.html":{}}}],["enumerations",{"_index":4499,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumfieldsbyclassidentifier",{"_index":3927,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["enumvalue",{"_index":1524,"title":{"classes/EnumValue.html":{}},"body":{"classes/EnumValue.html":{},"coverage.html":{}}}],["enumvalues",{"_index":1536,"title":{},"body":{"classes/EnumValue.html":{}}}],["environment",{"_index":26,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.backendurls.atlasserviceurl",{"_index":883,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["environment.backendurls.javainspectionserviceurl",{"_index":877,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["environment.backendurls.jsoninspectionserviceurl",{"_index":881,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["environment.backendurls.xmlinspectionserviceurl",{"_index":879,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["environment.xsrf",{"_index":106,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["environment.xsrf.cookiename",{"_index":110,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["environment.xsrf.defaulttokenvalue",{"_index":112,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["environment.xsrf.headername",{"_index":108,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["environments/environment",{"_index":27,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["equal",{"_index":4250,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["equivalent",{"_index":1198,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["error",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["error'},{'name",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["error('could",{"_index":3966,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["error.component",{"_index":653,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{}}}],["error.component.html",{"_index":906,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts",{"_index":905,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"coverage.html":{}}}],["error.component.ts:102",{"_index":953,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:112",{"_index":960,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:122",{"_index":927,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:130",{"_index":932,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:32",{"_index":922,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:33",{"_index":923,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:35",{"_index":966,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:36",{"_index":962,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:38",{"_index":963,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:39",{"_index":967,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:40",{"_index":964,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:41",{"_index":965,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:43",{"_index":959,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:50",{"_index":958,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:59",{"_index":924,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:64",{"_index":926,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:68",{"_index":936,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:72",{"_index":935,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:76",{"_index":938,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.component.ts:87",{"_index":941,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["error.identifier",{"_index":3749,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["error.message",{"_index":1754,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["error.model",{"_index":1855,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["error.object",{"_index":1746,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["error.object.message",{"_index":1747,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["error.scope",{"_index":1757,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ModalErrorDetailComponent.html":{}}}],["error.status",{"_index":2243,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["error.statustext",{"_index":2606,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["error1",{"_index":2608,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["errorhandlerservice",{"_index":33,"title":{"injectables/ErrorHandlerService.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"components/ModalErrorDetailComponent.html":{},"classes/TextNode.html":{},"coverage.html":{},"overview.html":{}}}],["errorhandlerservice.filterwith(this.errors",{"_index":975,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["erroridentifiercounter",{"_index":1786,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["errorinfo",{"_index":43,"title":{"classes/ErrorInfo.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["errorinfo({message",{"_index":1780,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["errorinfo.erroridentifiercounter",{"_index":1810,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["errorinfo.erroridentifiercounter.tostring",{"_index":1809,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["errorlevel",{"_index":968,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["errorlevel.error",{"_index":979,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["errorlevel.info",{"_index":981,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ModalErrorDetailComponent.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["errorlevel.warn",{"_index":980,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/FieldActionService.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["errormessage",{"_index":1778,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["erroroccurred",{"_index":3922,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["errorpanel",{"_index":611,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["errors",{"_index":908,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MappingListComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["errors.filter(e",{"_index":1741,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errors.foreach(e",{"_index":3570,"title":{},"body":{"components/MappingListComponent.html":{}}}],["errors.foreach(error",{"_index":1745,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errors.length",{"_index":1740,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errorscope",{"_index":1705,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["errorscope.application",{"_index":2227,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"classes/MappingUtil.html":{},"components/ToolbarComponent.html":{}}}],["errorscope.field",{"_index":1654,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["errorscope.form",{"_index":1756,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errorscope.mapping",{"_index":1653,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["errorservice",{"_index":153,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"components/ModalErrorDetailComponent.html":{}}}],["errorservicerequired",{"_index":912,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["errorsubscription",{"_index":909,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingListComponent.html":{}}}],["errortype",{"_index":1652,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["errortype.internal",{"_index":2047,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["errortype.preview",{"_index":1772,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["errortype.user",{"_index":2005,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["errortype.validation",{"_index":1773,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingListComponent.html":{}}}],["errorupdatedsource",{"_index":1667,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["erros",{"_index":1727,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["escaped",{"_index":891,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["establish",{"_index":2460,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["established",{"_index":503,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["establishing",{"_index":2564,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["even",{"_index":3550,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"license.html":{}}}],["event",{"_index":470,"title":{},"body":{"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["event's",{"_index":1314,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["event._lmcinstance",{"_index":2684,"title":{},"body":{"classes/LineModel.html":{}}}],["event.ctrlkey",{"_index":1338,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["event.currenttarget",{"_index":3400,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["event.datatransfer.setdata('text",{"_index":1327,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["event.item['field",{"_index":2403,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["event.metakey",{"_index":1339,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["event.offsety.tostring",{"_index":2728,"title":{},"body":{"classes/LineModel.html":{}}}],["event.preventdefault",{"_index":1333,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{}}}],["event.srcelement.value",{"_index":4176,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["event.stoppropagation",{"_index":1334,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["event.target",{"_index":2705,"title":{},"body":{"classes/LineModel.html":{}}}],["event.target.files[0",{"_index":4164,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["event.target.selectedoptions",{"_index":3260,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["event.target.selectedoptions.item(0).attributes",{"_index":3262,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["event.target.selectedoptions.item(0).attributes.getnameditem('value').value",{"_index":498,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["event.target.value",{"_index":3255,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/ToolbarComponent.html":{}}}],["event.target.value.length",{"_index":3256,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["event['clienty",{"_index":3402,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["event['pagey",{"_index":3401,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["events",{"_index":12,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["everytime",{"_index":1656,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["evt",{"_index":3405,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["evt.preventdefault",{"_index":3407,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["evt.stoppropagation",{"_index":3406,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["evt1",{"_index":951,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["evt1.preventdefault",{"_index":988,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["evt1.stoppropagation",{"_index":987,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["evt1['clienty",{"_index":3390,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["evt1['pagey",{"_index":3389,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["example",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"license.html":{}}}],["exampleappmodule",{"_index":1811,"title":{"modules/ExampleAppModule.html":{}},"body":{"modules/ExampleAppModule.html":{},"modules.html":{},"overview.html":{}}}],["examples",{"_index":863,"title":{"classes/Examples.html":{}},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/Examples.html":{},"coverage.html":{}}}],["examples.pom",{"_index":893,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["except",{"_index":705,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["exchange",{"_index":4181,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["excludebyidentifier",{"_index":1677,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["excludebyidentifier(errors",{"_index":1708,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["excluding",{"_index":4660,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":4673,"title":{},"body":{"license.html":{}}}],["executed",{"_index":4752,"title":{},"body":{"license.html":{}}}],["executesearch",{"_index":2345,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["executesearch(filter",{"_index":2350,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["exercise",{"_index":4778,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":4606,"title":{},"body":{"license.html":{}}}],["exist",{"_index":2387,"title":{},"body":{"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{}}}],["existing",{"_index":3680,"title":{},"body":{"classes/MappingUtil.html":{}}}],["exists",{"_index":544,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["expand",{"_index":1577,"title":{},"body":{"classes/EnumValue.html":{}}}],["expandtoroot",{"_index":1579,"title":{},"body":{"classes/EnumValue.html":{}}}],["explicitly",{"_index":4746,"title":{},"body":{"license.html":{}}}],["export",{"_index":54,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["exportblockdata",{"_index":2577,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["exported",{"_index":2498,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["exportmappings",{"_index":4189,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["exportmappingscatalog",{"_index":2441,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["exportmappingscatalog(mappingsfilename",{"_index":2456,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["exportmeta",{"_index":2576,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["exports",{"_index":1031,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}],["express",{"_index":722,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["expression",{"_index":1863,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["expression'},{'name",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["expression.component",{"_index":4156,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["expression.model",{"_index":4242,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["expressioncomponent",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["expressionmodel",{"_index":1876,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{}}}],["expressionnode",{"_index":1840,"title":{"classes/ExpressionNode.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["expressionnode.sequence",{"_index":1859,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:27",{"_index":2427,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:28",{"_index":2428,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:34",{"_index":2431,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:38",{"_index":2433,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnode:39",{"_index":2432,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionnodes",{"_index":1934,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressions",{"_index":3413,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["expressionupdated",{"_index":1878,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["expressionupdatedevent",{"_index":1856,"title":{"classes/ExpressionUpdatedEvent.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["expressionupdatedsource",{"_index":1877,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["extends",{"_index":1861,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["extractdisplaypath",{"_index":1130,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["extractdisplaypath(path",{"_index":1143,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["extracted",{"_index":2485,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["extractfieldactiondefinition",{"_index":2142,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["extractfieldactiondefinition(actiondetail",{"_index":2173,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["extractor",{"_index":301,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["f",{"_index":2991,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["f(x",{"_index":4230,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["f.field",{"_index":2995,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["f.field.enumeration",{"_index":2998,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["f.field.isincollection",{"_index":2994,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fa",{"_index":522,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["fade",{"_index":1464,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["failure",{"_index":4797,"title":{},"body":{"license.html":{}}}],["fake",{"_index":2388,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fakenamespace",{"_index":2397,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fakenamespace.alias",{"_index":2398,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["false",{"_index":59,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/variables.html":{}}}],["faster",{"_index":4542,"title":{},"body":{"index.html":{}}}],["fatal",{"_index":2605,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["fee",{"_index":4805,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":302,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["fetchedactionconfigs.foreach(action",{"_index":2238,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fetchedactionconfigs.length",{"_index":2233,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fetchfieldactions",{"_index":2143,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fetching",{"_index":76,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["field",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["field's",{"_index":3301,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"classes/NamespaceModel.html":{}}}],["field'},{'name",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["field.alphabetizefields(cachedfield.children",{"_index":4055,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.alphabetizefields(field.parentfield.children",{"_index":3988,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.alphabetizefields(fields",{"_index":3039,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["field.alphabetizefields(this.fields",{"_index":3972,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.children",{"_index":1551,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.children.length",{"_index":1572,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.children.push(childfield",{"_index":4003,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.component",{"_index":1083,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["field.component.html",{"_index":3576,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts",{"_index":3575,"title":{},"body":{"components/MappingListFieldComponent.html":{},"coverage.html":{}}}],["field.component.ts:28",{"_index":3581,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:29",{"_index":3580,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:30",{"_index":3579,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:31",{"_index":3578,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:33",{"_index":3585,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:37",{"_index":3583,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:44",{"_index":3582,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.component.ts:52",{"_index":3584,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["field.copy",{"_index":563,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["field.docdef",{"_index":1378,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["field.docdef.showfields",{"_index":2789,"title":{},"body":{"classes/LineModel.html":{}}}],["field.docdef.type",{"_index":3941,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.enumeration",{"_index":4042,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.fielddepth",{"_index":4001,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.fieldhasunmappedchild(childfield",{"_index":1553,"title":{},"body":{"classes/EnumValue.html":{}}}],["field.fieldhasunmappedchild(field",{"_index":4028,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.getfieldlabel(cfg.showtypes",{"_index":1427,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["field.getfieldlabel(configmodel.getconfig().showtypes",{"_index":2409,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["field.getnamewithnamespace",{"_index":4031,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.hasunmappedchildren",{"_index":4014,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.isarray",{"_index":4033,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.isattribute",{"_index":4036,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.iscollection",{"_index":4032,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.isparentfield",{"_index":2408,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["field.issource",{"_index":3056,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["field.isterminal",{"_index":1548,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.model",{"_index":2962,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["field.name",{"_index":3940,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield",{"_index":3979,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield.children",{"_index":4012,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield.children.push(field",{"_index":3987,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield.fielddepth",{"_index":3981,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.parentfield.path",{"_index":3980,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.partofmapping",{"_index":1549,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["field.partoftransformation",{"_index":4015,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.path",{"_index":1377,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingListComponent.html":{},"classes/NamespaceModel.html":{}}}],["field.path.tolowercase().includes(filter",{"_index":3565,"title":{},"body":{"components/MappingListComponent.html":{}}}],["field.serviceobject",{"_index":4037,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.serviceobject.path",{"_index":4038,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.serviceobject.status",{"_index":4057,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["field.type",{"_index":558,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{}}}],["field.uuidcounter",{"_index":1576,"title":{},"body":{"classes/EnumValue.html":{}}}],["field.uuidcounter.tostring",{"_index":1575,"title":{},"body":{"classes/EnumValue.html":{}}}],["field.visibleincurrentdocumentsearch",{"_index":2798,"title":{},"body":{"classes/LineModel.html":{}}}],["fieldaction",{"_index":2059,"title":{"classes/FieldAction.html":{}},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["fieldactionargument",{"_index":2077,"title":{"classes/FieldActionArgument.html":{}},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"coverage.html":{}}}],["fieldactionargumentvalue",{"_index":2065,"title":{"classes/FieldActionArgumentValue.html":{}},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"coverage.html":{}}}],["fieldactionconfig",{"_index":2273,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactionconfig.name",{"_index":2310,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition",{"_index":2067,"title":{"classes/FieldActionDefinition.html":{}},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["fieldactiondefinition.arguments.push(argumentdefinition",{"_index":2304,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.arguments[0",{"_index":3320,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["fieldactiondefinition.arguments[0].values",{"_index":3321,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["fieldactiondefinition.arguments[0].values.length",{"_index":3322,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["fieldactiondefinition.iscustom",{"_index":2282,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.method",{"_index":2288,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.multiplicity",{"_index":2215,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.name",{"_index":2217,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.populatefieldaction(action",{"_index":3314,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["fieldactiondefinition.serviceobject",{"_index":2291,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.sourcetype",{"_index":2284,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactiondefinition.targettype",{"_index":2286,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactions",{"_index":2261,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldactionservice",{"_index":49,"title":{"injectables/FieldActionService.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"coverage.html":{},"overview.html":{}}}],["fieldcomponent",{"_index":1399,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldcomponent.getfield",{"_index":1408,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldcomponent.initialize(self.field",{"_index":1402,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldcomponent.issource",{"_index":1400,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldcomponents",{"_index":1229,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fielddepth",{"_index":1538,"title":{},"body":{"classes/EnumValue.html":{}}}],["fielddescription",{"_index":1717,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["fielddetail",{"_index":1361,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fielddetailelement",{"_index":1230,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fielddocdefname",{"_index":828,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["fieldeditcomponent",{"_index":408,"title":{"components/FieldEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fieldexists(targetfield",{"_index":3938,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["fieldhasunmappedchild(field",{"_index":1547,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldisconstant",{"_index":2973,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldisproperty",{"_index":2972,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldmappingpair",{"_index":2166,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["fieldmode",{"_index":530,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"miscellaneous/enumerations.html":{}}}],["fieldmode.create",{"_index":561,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["fieldmode.edit",{"_index":560,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["fieldname",{"_index":3620,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{}}}],["fieldname.indexof",{"_index":3725,"title":{},"body":{"classes/MappingUtil.html":{}}}],["fieldname.split(':')[0",{"_index":3726,"title":{},"body":{"classes/MappingUtil.html":{}}}],["fieldname.split(':')[1",{"_index":3727,"title":{},"body":{"classes/MappingUtil.html":{}}}],["fieldnameblacklist",{"_index":91,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["fieldnames",{"_index":1563,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldnames.push(field.name",{"_index":1568,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldnames.sort",{"_index":1569,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldnode",{"_index":1868,"title":{"classes/FieldNode.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["fieldnode(this.mapping",{"_index":2028,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fieldnodes",{"_index":1970,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fieldnodes.find(n",{"_index":2026,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fieldpairmatchessearch",{"_index":3503,"title":{},"body":{"components/MappingListComponent.html":{}}}],["fieldpairmatchessearch(mapping",{"_index":3516,"title":{},"body":{"components/MappingListComponent.html":{}}}],["fieldpath",{"_index":1560,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["fieldpaths",{"_index":2978,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["fieldpaths.push(path",{"_index":2982,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldpaths.sort",{"_index":2983,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldpos",{"_index":2794,"title":{},"body":{"classes/LineModel.html":{}}}],["fields",{"_index":681,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["fields.length",{"_index":1570,"title":{},"body":{"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["fields.push(field",{"_index":3948,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["fields.push(fieldsbyname[name",{"_index":1571,"title":{},"body":{"classes/EnumValue.html":{}}}],["fields.push(mappedfield.field",{"_index":3036,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fields[fields.length",{"_index":3034,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldsbyname",{"_index":1562,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldsbyname[field.name",{"_index":1566,"title":{},"body":{"classes/EnumValue.html":{}}}],["fieldsbypath",{"_index":2977,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["fieldsbypath[path",{"_index":2981,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["fieldshouldbevisible",{"_index":1236,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["fieldtype",{"_index":2341,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fieldtypeselectionchanged",{"_index":2346,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fieldtypeselectionchanged(event",{"_index":2352,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["fieldwidth",{"_index":1144,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["fifty",{"_index":4599,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"license.html":{}}}],["filebin",{"_index":2609,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["filebody",{"_index":1207,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["filecontent",{"_index":1199,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["filed",{"_index":4707,"title":{},"body":{"license.html":{}}}],["filedata",{"_index":4093,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filemanagementservice",{"_index":52,"title":{"injectables/FileManagementService.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["filename",{"_index":1162,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/ToolbarComponent.html":{}}}],["filename.concat('.adm",{"_index":4227,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filename.length",{"_index":4222,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filename.split('.').pop",{"_index":4226,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["filereader",{"_index":2610,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["files",{"_index":2458,"title":{},"body":{"injectables/FileManagementService.html":{},"license.html":{}}}],["files.gz",{"_index":2541,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["fileservice",{"_index":154,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["filter",{"_index":1713,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["filtering",{"_index":89,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["filterwith",{"_index":1678,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["filterwith(errors",{"_index":1711,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["find",{"_index":2872,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{}}}],["findmappingfiles",{"_index":2442,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["findmappingfiles(filter",{"_index":2468,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["findmappingsforfield",{"_index":3080,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["findmappingsforfield(field",{"_index":3099,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["finish",{"_index":4373,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["firefox",{"_index":1328,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["first",{"_index":1624,"title":{},"body":{"classes/EnumValue.html":{},"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["first.parentfield",{"_index":1625,"title":{},"body":{"classes/EnumValue.html":{}}}],["first.parentfield.getcollectionparentfield",{"_index":1626,"title":{},"body":{"classes/EnumValue.html":{}}}],["fitness",{"_index":4768,"title":{},"body":{"license.html":{}}}],["fits",{"_index":1146,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["fixed",{"_index":838,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{}}}],["fixme",{"_index":4016,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["flags",{"_index":90,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["float",{"_index":585,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["float:left",{"_index":816,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["fn",{"_index":2038,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fn.field",{"_index":2045,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["fname",{"_index":1191,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["focus",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["focusdirective",{"_index":449,"title":{"directives/FocusDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["focusel",{"_index":457,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["following",{"_index":3456,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"index.html":{},"license.html":{}}}],["font",{"_index":829,"title":{},"body":{"components/DataMapperAppComponent.html":{},"dependencies.html":{}}}],["foo.bar",{"_index":1828,"title":{},"body":{"classes/Examples.html":{}}}],["for_each",{"_index":4243,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["forkjoin",{"_index":2518,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["forkjoin(operations).topromise().then((data",{"_index":2631,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["form",{"_index":822,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/DataMapperUtil.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"components/MappingFieldActionArgumentComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["format",{"_index":2462,"title":{},"body":{"injectables/FileManagementService.html":{},"license.html":{}}}],["formattedfield",{"_index":2410,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["formattedfield['displayname'].tolowercase().indexof(filter.tolowercase",{"_index":2411,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["formattedfields",{"_index":2406,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["formattedfields.length",{"_index":2413,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["formattedfields.push(formattedfield",{"_index":2412,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["formerrors",{"_index":1668,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["formerrorupdatedsource",{"_index":1669,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["formsmodule",{"_index":1056,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["found",{"_index":4526,"title":{},"body":{"index.html":{}}}],["foundfields",{"_index":3943,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["foundfields.length",{"_index":3945,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["foundselectedmapping",{"_index":2747,"title":{},"body":{"classes/LineModel.html":{}}}],["free",{"_index":4676,"title":{},"body":{"license.html":{}}}],["frequently",{"_index":1660,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["fromjson",{"_index":2901,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["fromjson(json",{"_index":2824,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["full",{"_index":930,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/FileManagementService.html":{}}}],["function",{"_index":1455,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/TransitionSelectionComponent.html":{}}}],["g",{"_index":1867,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["generated",{"_index":3025,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"license.html":{}}}],["generateinitialexpression",{"_index":1883,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["generating",{"_index":1720,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["generically",{"_index":2190,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["geometry",{"_index":2686,"title":{},"body":{"classes/LineModel.html":{}}}],["getactionconfigparamvalues",{"_index":3176,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getactionconfigparamvalues(argconfig",{"_index":3203,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getactionconfigparamvdefault",{"_index":3177,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getactionconfigparamvdefault(argconfig",{"_index":3205,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getactionconfigs",{"_index":3286,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["getactiondefinitionforname",{"_index":2144,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactiondefinitionforname(actionname",{"_index":2177,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactionsappliestofield",{"_index":2145,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactionsappliestofield(mapping",{"_index":2180,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactualfield",{"_index":2146,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getactualfield(mapping",{"_index":2183,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["getaddbuttonlabel",{"_index":3333,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getalldocs",{"_index":283,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getallfields",{"_index":3046,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["getallmappedfields",{"_index":3048,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getallmappings",{"_index":3081,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["getallmappings(includeactivemapping",{"_index":3101,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["getargumentforname",{"_index":2121,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["getargumentforname(name",{"_index":2100,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["getargumentvalue",{"_index":2063,"title":{},"body":{"classes/FieldAction.html":{}}}],["getargumentvalue(argumentname",{"_index":2072,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["getcfg",{"_index":2512,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getclass",{"_index":3631,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getcollectionparentfield",{"_index":1619,"title":{},"body":{"classes/EnumValue.html":{}}}],["getcollectiontype",{"_index":1628,"title":{},"body":{"classes/EnumValue.html":{}}}],["getcomplexfield(classidentifier",{"_index":3932,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getconfig",{"_index":174,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getcssclass",{"_index":508,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["getcssclass(action",{"_index":4114,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["getcurrentadmcatalog",{"_index":2443,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getcurrentmappingcatalog",{"_index":2444,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getcurrentmappingjson",{"_index":2445,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getdisplayname",{"_index":3334,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getdisplayname(model",{"_index":3356,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getdocbyid",{"_index":3663,"title":{},"body":{"classes/MappingUtil.html":{}}}],["getdocbyid(documentid",{"_index":3669,"title":{},"body":{"classes/MappingUtil.html":{}}}],["getdocforidentifier(documentid",{"_index":276,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getdocs(issource",{"_index":240,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getdocswithoutpropertydoc(issource",{"_index":236,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getdocurimap(cfg",{"_index":252,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["geteditorsettingscssclass",{"_index":4098,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["geteditorsettingscssclass(open",{"_index":4116,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["getelementposition",{"_index":1237,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getentryforsource",{"_index":2804,"title":{},"body":{"classes/LookupTable.html":{}}}],["getentryforsource(sourcevalue",{"_index":2812,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["getenumfield(classidentifier",{"_index":3934,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["geterrors",{"_index":913,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["geterrors().length",{"_index":3782,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["getfield",{"_index":533,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["getfield(fieldpath",{"_index":1559,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["getfielddetailcomponent",{"_index":1238,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getfielddetailcomponent(field",{"_index":1270,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getfieldid",{"_index":1239,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getfieldlabel(showtypes",{"_index":1630,"title":{},"body":{"classes/EnumValue.html":{}}}],["getfieldnames(fields",{"_index":1557,"title":{},"body":{"classes/EnumValue.html":{}}}],["getfieldnames(issource",{"_index":3037,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getfieldpath",{"_index":3437,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["getfieldpaths(fields",{"_index":1554,"title":{},"body":{"classes/EnumValue.html":{}}}],["getfieldpaths(issource",{"_index":3042,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getfields(fieldpaths",{"_index":3946,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getfields(issource",{"_index":3035,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getfieldtypeicon",{"_index":1240,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getfilesuffix",{"_index":4099,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["getfirstcollectionfield(issource",{"_index":2990,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getfirsterror",{"_index":914,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getfirsterror().message",{"_index":998,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getfirstmappingforlookuptable",{"_index":2911,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["getfirstmappingforlookuptable(mappingdefinition",{"_index":2914,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["getfirstwarning",{"_index":915,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getfirstwarning().message",{"_index":999,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["getfirstxmldoc(issource",{"_index":281,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["getformattedoutputpath",{"_index":3592,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["getformattedoutputpath(path",{"_index":3596,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["getformattedoutputpath(selectedfield.path",{"_index":3628,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["getformattedoutputpath(sourcefield.field.path",{"_index":3658,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getformattedoutputpath(targetfield.field.path",{"_index":3660,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getidentifier",{"_index":1800,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["getindexformappedfield(mappedfield",{"_index":3023,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getinfos",{"_index":916,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorDetailComponent.html":{}}}],["getinitialfocuselement",{"_index":462,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["getinputoutputkey",{"_index":2805,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["getitemscssclass",{"_index":3504,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["getjsonbuf",{"_index":2446,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getlabel",{"_index":3178,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["getlabel(actionconfig.name",{"_index":3323,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["getlabel(argconfig.name",{"_index":3279,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getlabel(argconfigname",{"_index":3213,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["getlastmappedfield(issource",{"_index":3033,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getlastnode",{"_index":1891,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["getlastnodeindex",{"_index":1889,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["getmappedfieldactions",{"_index":3179,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["getmappedfieldforfield(field",{"_index":3019,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getmappedfieldforindex(index",{"_index":3020,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getmappedfields",{"_index":3505,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappedfields(issource",{"_index":3032,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getmappedfields(mapping",{"_index":3519,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappedtarget(field",{"_index":3055,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getmappedvaluecount",{"_index":4323,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["getmappingclass",{"_index":1241,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getmappingcssclass",{"_index":3506,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappingcssclass(mapping",{"_index":3521,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappingid",{"_index":2447,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["getmappingmodename",{"_index":4306,"title":{},"body":{"classes/TransitionModel.html":{}}}],["getmappingmodename(mode",{"_index":4290,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["getmappingrowscssclass",{"_index":3507,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmappings",{"_index":3508,"title":{},"body":{"components/MappingListComponent.html":{}}}],["getmultiplicityactionconfigs",{"_index":4324,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["getname(showtypes",{"_index":3949,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getnamespacecssclass",{"_index":3840,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getnamespacecssclass(namespace",{"_index":3850,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getnamespaceforalias(alias",{"_index":3950,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getnamespaces",{"_index":3841,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getnamespaces().length",{"_index":3892,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getnamewithnamespace",{"_index":1586,"title":{},"body":{"classes/EnumValue.html":{}}}],["getnode(nodeid",{"_index":1893,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["getpaneliconcssclass",{"_index":3335,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getpaneliconcssclass(model",{"_index":3358,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getparentobjectname",{"_index":3438,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["getparenttoggleclass",{"_index":1242,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getprettylabel",{"_index":3899,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getprettyname",{"_index":4294,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["getrowscssclass",{"_index":3842,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["getrowtitlecssclass",{"_index":3509,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["getscreenposforfield(field",{"_index":2787,"title":{},"body":{"classes/LineModel.html":{}}}],["getsearchiconcssclass",{"_index":3510,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["getsearchplaceholder",{"_index":3336,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["getselected",{"_index":1298,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getselectedmapping",{"_index":3593,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["getselectedmappingcomponent",{"_index":3594,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["getsourceiconcssclass",{"_index":3439,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["getsourcetargetlabeltext",{"_index":3632,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getsourcetargetlabeltext(false",{"_index":3659,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getsourcetargetlabeltext(issource",{"_index":3647,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getsourcetargetlabeltext(true",{"_index":3657,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["getspacerwidth",{"_index":1243,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["gettablebyname",{"_index":3082,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettablebyname(name",{"_index":3104,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettablebysourcetarget",{"_index":3083,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettablebysourcetarget(sourceidentifier",{"_index":3106,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettables",{"_index":3084,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["gettargetfieldfromline(selectedlineattrs",{"_index":2688,"title":{},"body":{"classes/LineModel.html":{}}}],["getterminalfields",{"_index":3968,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getting",{"_index":4510,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettitle",{"_index":3137,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["gettoken",{"_index":309,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["gettopfieldtypelabel",{"_index":3337,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["gettransformationclass",{"_index":1244,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["getunqualifiednamespace",{"_index":3900,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["getuserfieldcount(field",{"_index":3006,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getusermappedfields(issource",{"_index":3027,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["getuuid",{"_index":1844,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["getwarnings",{"_index":917,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["getwarnings().length",{"_index":3781,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["git",{"_index":4531,"title":{},"body":{"index.html":{}}}],["github",{"_index":4530,"title":{},"body":{"index.html":{}}}],["give",{"_index":4711,"title":{},"body":{"license.html":{}}}],["global",{"_index":1319,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["global/mapping",{"_index":1726,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["glue",{"_index":1968,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["go",{"_index":1974,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["goodwill",{"_index":4794,"title":{},"body":{"license.html":{}}}],["google",{"_index":4512,"title":{},"body":{"index.html":{}}}],["governing",{"_index":727,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["gradient",{"_index":2660,"title":{},"body":{"classes/LineModel.html":{}}}],["grant",{"_index":4668,"title":{},"body":{"license.html":{}}}],["granted",{"_index":4607,"title":{},"body":{"license.html":{}}}],["granting",{"_index":4580,"title":{},"body":{"license.html":{}}}],["grants",{"_index":4670,"title":{},"body":{"license.html":{}}}],["grossly",{"_index":4784,"title":{},"body":{"license.html":{}}}],["group",{"_index":823,"title":{},"body":{"components/DataMapperAppComponent.html":{},"index.html":{}}}],["grouped",{"_index":1651,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["gzip",{"_index":2465,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["half",{"_index":948,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["hand",{"_index":3454,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["handle",{"_index":942,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlealertclick",{"_index":3744,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["handlealertclick(error",{"_index":3748,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["handlealertclose",{"_index":918,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlealertclose(e",{"_index":937,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handled",{"_index":2220,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["handledocumentfieldmouseover(component",{"_index":2732,"title":{},"body":{"classes/LineModel.html":{}}}],["handleerror",{"_index":2448,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["handleerror(message",{"_index":2479,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["handleexportclick",{"_index":4100,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handleexportclick(event",{"_index":4120,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handleexportmapping",{"_index":4101,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handleexportmapping(event",{"_index":4123,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handleexportmappingcancel",{"_index":4102,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handlelineclick(event",{"_index":2703,"title":{},"body":{"classes/LineModel.html":{}}}],["handlemappingsinstancename",{"_index":4103,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handlemappingsinstancename(event",{"_index":4128,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handlemouseclick",{"_index":509,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["handlemouseclick(event",{"_index":516,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["handlemouseenter",{"_index":919,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlemouseenter(evt1",{"_index":940,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlemouseleave",{"_index":920,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlemouseleave(evt1",{"_index":952,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["handlemouseover",{"_index":1245,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["handlemouseover(event",{"_index":1287,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["handlemouseover(evt1",{"_index":3362,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["handleonblur",{"_index":2347,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["handleonblur(event",{"_index":2356,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["handler.service",{"_index":35,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"components/ModalErrorDetailComponent.html":{},"classes/TextNode.html":{}}}],["handler.service.ts",{"_index":1641,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:104",{"_index":1725,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:115",{"_index":1687,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:123",{"_index":1692,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:131",{"_index":1694,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:140",{"_index":1689,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:148",{"_index":1691,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:158",{"_index":1729,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:167",{"_index":1696,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:182",{"_index":1718,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:192",{"_index":1706,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:202",{"_index":1710,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:39",{"_index":1735,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:40",{"_index":1737,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:41",{"_index":1736,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:42",{"_index":1738,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:50",{"_index":1712,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:64",{"_index":1684,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:83",{"_index":1715,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handler.service.ts:91",{"_index":1723,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["handleredrawmappinglinesevent(event",{"_index":2682,"title":{},"body":{"classes/LineModel.html":{}}}],["handles",{"_index":1642,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{}}}],["handling",{"_index":1948,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LookupTableUtil.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{}}}],["happen",{"_index":4020,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["happening",{"_index":4018,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["happens",{"_index":1699,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["harmless",{"_index":4819,"title":{},"body":{"license.html":{}}}],["hasfieldactions",{"_index":3043,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["hasfocus",{"_index":2639,"title":{},"body":{"directives/FocusDirective.html":{}}}],["hash",{"_index":4251,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["hasjavadocuments",{"_index":270,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["hasmappedfield(issource",{"_index":3009,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["hassourcedoc",{"_index":612,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["hastargetdoc",{"_index":613,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["hastransformation",{"_index":3052,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["hasunmappedchildren",{"_index":1540,"title":{},"body":{"classes/EnumValue.html":{}}}],["hat",{"_index":697,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["hdd",{"_index":3387,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["header",{"_index":331,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/CollapsableHeaderComponent.html":{}}}],["header'},{'name",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["header.component",{"_index":1075,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingDetailComponent.html":{}}}],["header.component.html",{"_index":507,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["header.component.ts",{"_index":506,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:25",{"_index":514,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["header.component.ts:26",{"_index":513,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["header.component.ts:28",{"_index":518,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["header.component.ts:32",{"_index":515,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["headername",{"_index":349,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":352,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["headertext",{"_index":1452,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["height",{"_index":836,"title":{},"body":{"components/DataMapperAppComponent.html":{},"dependencies.html":{}}}],["height:0px",{"_index":745,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["height:100",{"_index":748,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["height:12px",{"_index":772,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["height:calc(100",{"_index":804,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["hello",{"_index":3779,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["here",{"_index":13,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["hereby",{"_index":4669,"title":{},"body":{"license.html":{}}}],["herein",{"_index":4749,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":840,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["hold",{"_index":4818,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3457,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["host",{"_index":855,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["host'},{'name",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["host.component",{"_index":1065,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["host.component.ts",{"_index":853,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"coverage.html":{}}}],["host.component.ts:38",{"_index":858,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["host.component.ts:42",{"_index":859,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["html",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["htmlcache",{"_index":1882,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["http",{"_index":298,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["http://127.0.0.1:8585",{"_index":4549,"title":{},"body":{"index.html":{}}}],["http://localhost:3000",{"_index":4565,"title":{},"body":{"index.html":{}}}],["http://localhost:8585/v2/atlas",{"_index":4856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8585/v2/atlas/java",{"_index":4858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8585/v2/atlas/json",{"_index":4862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:8585/v2/atlas/xml",{"_index":4860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://stackoverflow.com/questions/40811809/add",{"_index":1474,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["http://www.apache.org/licenses",{"_index":4568,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":709,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["http://www.w3schools.com/howto/howto_css_modals.asp",{"_index":1449,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["http_interceptors",{"_index":1055,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["http_status_no_content",{"_index":1128,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["http_status_ok",{"_index":1129,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["httpclient",{"_index":2151,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["httpclientmodule",{"_index":1053,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["httpclientxsrfmodule",{"_index":1054,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["httpclientxsrfmodule.withoptions(environment.xsrf",{"_index":1115,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["httpclientxsrfmoduleforroot",{"_index":1114,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpevent",{"_index":315,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httphandler",{"_index":317,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httpheaders",{"_index":2201,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["httpinterceptor",{"_index":316,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httprequest",{"_index":318,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httprequest.clone",{"_index":351,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httprequest.headers.has(headername",{"_index":350,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["httprequest.headers.set(headername",{"_index":353,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["https://github.com/atlasmap/atlasmap",{"_index":4533,"title":{},"body":{"index.html":{}}}],["https://github.com/atlasmap/atlasmap/issues/1128",{"_index":3965,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["https://github.com/atlasmap/atlasmap/issues/329",{"_index":4212,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["httpxsrftokenextractor",{"_index":319,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"modules/DataMapperModule.html":{}}}],["human",{"_index":1186,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["i.link:hover",{"_index":796,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["i.message",{"_index":997,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorDetailComponent.html":{}}}],["icon",{"_index":1106,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{}}}],["id",{"_index":114,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["identification",{"_index":4836,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":1709,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"coverage.html":{}}}],["identify",{"_index":3259,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["identifying",{"_index":4829,"title":{},"body":{"license.html":{}}}],["ignore",{"_index":1307,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["ignoring",{"_index":2240,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["ii",{"_index":4597,"title":{},"body":{"license.html":{}}}],["iii",{"_index":4603,"title":{},"body":{"license.html":{}}}],["img",{"_index":771,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["implements",{"_index":324,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["implied",{"_index":723,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["import",{"_index":21,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["import/export",{"_index":101,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{}}}],["importadmcatalog",{"_index":2449,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["importadmcatalog(mappingsfilename",{"_index":2481,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["imported",{"_index":2499,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["importmappings",{"_index":4188,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["imports",{"_index":1121,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"components/ToolbarComponent.html":{}}}],["improving",{"_index":4659,"title":{},"body":{"license.html":{}}}],["inability",{"_index":4792,"title":{},"body":{"license.html":{}}}],["inc",{"_index":698,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["incidental",{"_index":4789,"title":{},"body":{"license.html":{}}}],["include",{"_index":4632,"title":{},"body":{"license.html":{}}}],["includeactivemapping",{"_index":3103,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["included",{"_index":3026,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"license.html":{}}}],["includepath",{"_index":1631,"title":{},"body":{"classes/EnumValue.html":{}}}],["includes",{"_index":4726,"title":{},"body":{"license.html":{}}}],["including",{"_index":2437,"title":{},"body":{"injectables/FileManagementService.html":{},"license.html":{}}}],["inclusion",{"_index":4642,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":4667,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":4820,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":4816,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":4807,"title":{},"body":{"license.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexing",{"_index":3411,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["indexselectionchanged",{"_index":3440,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["indexselectionchanged(event",{"_index":3452,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["indicated",{"_index":4619,"title":{},"body":{"license.html":{}}}],["indicator",{"_index":1901,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["indices",{"_index":3460,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["indirect",{"_index":4591,"title":{},"body":{"license.html":{}}}],["individual",{"_index":4605,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["information",{"_index":866,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"license.html":{}}}],["informational",{"_index":4734,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":4691,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4704,"title":{},"body":{"license.html":{}}}],["ingoring",{"_index":2219,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["inherit",{"_index":2383,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["inherited",{"_index":2426,"title":{},"body":{"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["init",{"_index":1790,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["initcfg",{"_index":136,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["initialfocuselement",{"_index":1497,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["initialfocuselement.nativeelement.focus",{"_index":1499,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["initialization",{"_index":4201,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["initializationerroroccurred",{"_index":66,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["initializationservice",{"_index":41,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{},"overview.html":{}}}],["initializationstatuschangedsubscription",{"_index":614,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["initialize",{"_index":463,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["initialize(cfg",{"_index":2849,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["initialize(field",{"_index":473,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["initialize(namespace",{"_index":3820,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["initialized",{"_index":58,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/NamespaceModel.html":{}}}],["initializefromfields",{"_index":3970,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["initializing",{"_index":868,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["initmodel",{"_index":3920,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["injectable",{"_index":290,"title":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"coverage.html":{}}}],["injectables",{"_index":292,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"overview.html":{}}}],["inline",{"_index":781,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["input",{"_index":519,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceListComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["inputclassidentifier",{"_index":2928,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["inputfield",{"_index":2769,"title":{},"body":{"classes/LineModel.html":{},"classes/LookupTableUtil.html":{}}}],["inputfield.classidentifier",{"_index":2931,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["inputfieldpos",{"_index":2772,"title":{},"body":{"classes/LineModel.html":{}}}],["inputfieldpos.y",{"_index":2775,"title":{},"body":{"classes/LineModel.html":{}}}],["inputid",{"_index":3328,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["inputs",{"_index":510,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"directives/FocusDirective.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["inputvalue",{"_index":4351,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["inputvalue.length",{"_index":4360,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["insert",{"_index":1919,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["insertbeforemappedfield",{"_index":3353,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["inserted",{"_index":2011,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["insertion",{"_index":3486,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["insertionindex",{"_index":3481,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["insertnodes(newnodes",{"_index":1938,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["insertposition",{"_index":1935,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["inserttext(str",{"_index":1932,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["inside",{"_index":1476,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["inspection",{"_index":87,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["inspectionresult",{"_index":120,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["inspectionsource",{"_index":119,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["inspectiontype",{"_index":46,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["inspectiontype.instance",{"_index":2588,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["inspectiontype.java_class",{"_index":2590,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["inspectiontype.schema",{"_index":2589,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["install",{"_index":4543,"title":{},"body":{"index.html":{}}}],["installor",{"_index":4537,"title":{},"body":{"index.html":{}}}],["instance",{"_index":2103,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["instance.definition",{"_index":2104,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["instance.name",{"_index":2105,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["instance/schema/mappings",{"_index":2584,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["instanceof",{"_index":1908,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["instant",{"_index":1647,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["instead",{"_index":307,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["institute",{"_index":4694,"title":{},"body":{"license.html":{}}}],["instr",{"_index":1176,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["int8array(reader.result",{"_index":1211,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["integer",{"_index":578,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["integrations",{"_index":4518,"title":{},"body":{"index.html":{}}}],["intentionally",{"_index":4640,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":4514,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":356,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{}}}],["intercept(httprequest",{"_index":333,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["interceptor",{"_index":327,"title":{"interceptors/ApiXsrfInterceptor.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":355,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{}}}],["interface",{"_index":1450,"title":{"interfaces/ModalErrorWindowValidator.html":{},"interfaces/ModalWindowValidator.html":{}},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":3783,"title":{},"body":{"interfaces/ModalErrorWindowValidator.html":{},"interfaces/ModalWindowValidator.html":{},"license.html":{},"overview.html":{}}}],["internal",{"_index":1807,"title":{},"body":{"classes/ErrorInfo.html":{},"components/MappingFieldActionArgumentComponent.html":{},"miscellaneous/enumerations.html":{}}}],["invalidate",{"_index":3311,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["invoke",{"_index":4339,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["io.atlasmap.java.v2",{"_index":128,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["io.atlasmap.json.v2",{"_index":130,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["io.atlasmap.json.v2.jsonfield",{"_index":2415,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["io.atlasmap.v2",{"_index":126,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["io.atlasmap.xml.v2",{"_index":132,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["io.atlasmap.xml.v2.xmlfield",{"_index":2416,"title":{},"body":{"components/FieldEditComponent.html":{},"classes/MappingUtil.html":{}}}],["iokey",{"_index":3124,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["irrevocable",{"_index":4677,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":3577,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["isactivemapping",{"_index":3511,"title":{},"body":{"components/MappingListComponent.html":{}}}],["isactivemapping(mapping",{"_index":3527,"title":{},"body":{"components/MappingListComponent.html":{}}}],["isadd",{"_index":474,"title":{},"body":{"components/ClassNameComponent.html":{},"components/FieldEditComponent.html":{}}}],["isaddbuttonvisible",{"_index":3338,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["isarray",{"_index":1542,"title":{},"body":{"classes/EnumValue.html":{}}}],["isattribute",{"_index":1543,"title":{},"body":{"classes/EnumValue.html":{}}}],["isclasspathresolutionneeded",{"_index":273,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["isclosing",{"_index":531,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["iscollection",{"_index":1541,"title":{},"body":{"classes/EnumValue.html":{}}}],["isconstant",{"_index":1388,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{}}}],["iscustom",{"_index":2084,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["isdatavalid",{"_index":464,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["isdebugenabled",{"_index":186,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["isdragdroptarget",{"_index":1231,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["iseditmode",{"_index":3868,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["isempty",{"_index":3012,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["isenumerationmode",{"_index":4305,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["isfieldmapped(field",{"_index":3050,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["isfieldsexist(fields",{"_index":3942,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["isforeachmode",{"_index":4304,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["isfullymapped",{"_index":3013,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["isincollection",{"_index":1621,"title":{},"body":{"classes/EnumValue.html":{}}}],["isindexarg",{"_index":3287,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["isindexarg(argval",{"_index":3297,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["isinitialized",{"_index":2136,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["isinnestedcollection",{"_index":1623,"title":{},"body":{"classes/EnumValue.html":{}}}],["islookupmode",{"_index":2996,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["ismanytoonemode",{"_index":4303,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["ismappingstale",{"_index":3664,"title":{},"body":{"classes/MappingUtil.html":{}}}],["ismappingstale(mapping",{"_index":3671,"title":{},"body":{"classes/MappingUtil.html":{}}}],["isn't",{"_index":1316,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["isoddrow",{"_index":3633,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["isonetomanymode",{"_index":4301,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["isonetoonemode",{"_index":4302,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["isopen",{"_index":910,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["ispadfield",{"_index":2949,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["isparentfield",{"_index":1589,"title":{},"body":{"classes/EnumValue.html":{}}}],["ispartialcomponent",{"_index":3339,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["isprimitive",{"_index":1544,"title":{},"body":{"classes/EnumValue.html":{}}}],["isproperty",{"_index":1386,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{}}}],["ispropertyorconstant",{"_index":1637,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["isrequiredfieldvalid",{"_index":1679,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["isrequiredfieldvalid(value",{"_index":1716,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["isselectedmapping",{"_index":2764,"title":{},"body":{"classes/LineModel.html":{}}}],["issource",{"_index":116,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{}}}],["isstringfield",{"_index":1593,"title":{},"body":{"classes/EnumValue.html":{}}}],["issue",{"_index":4654,"title":{},"body":{"license.html":{}}}],["istarget",{"_index":3895,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["isterminal",{"_index":1594,"title":{},"body":{"classes/EnumValue.html":{}}}],["istraceenabled",{"_index":189,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["istransformcapable",{"_index":3441,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["isuserdelimiter",{"_index":3180,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["isuserdelimiter(delimitermodel",{"_index":3219,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["isxml",{"_index":2342,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["it's",{"_index":1309,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["item",{"_index":1170,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["itemisdocument",{"_index":3340,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["itemisdocument(model",{"_index":3366,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["itemrow",{"_index":3865,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["items",{"_index":1168,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["items.length",{"_index":1202,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["itemwasremoved",{"_index":1203,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["jackson",{"_index":1834,"title":{},"body":{"classes/Examples.html":{}}}],["january",{"_index":4566,"title":{},"body":{"license.html":{}}}],["jar",{"_index":1831,"title":{},"body":{"classes/Examples.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["jars",{"_index":4144,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["java",{"_index":222,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["java_archive",{"_index":4505,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["java_class",{"_index":4508,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["javainspectionserviceurl",{"_index":4857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["javaservicespackageprefix",{"_index":127,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["jquery",{"_index":4480,"title":{},"body":{"dependencies.html":{}}}],["jquery(function",{"_index":4338,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["js",{"_index":4476,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":2461,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/LookupTableEntry.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["json.sourcetype",{"_index":2826,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["json.sourcevalue",{"_index":2825,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["json.stringify(actiondetail",{"_index":2280,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["json.stringify(body",{"_index":2269,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["json.stringify(data",{"_index":2633,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["json.stringify(res",{"_index":2554,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["json.targettype",{"_index":2828,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["json.targetvalue",{"_index":2827,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["jsonbuffer",{"_index":2440,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["jsonheaders",{"_index":2627,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["jsoninspectionserviceurl",{"_index":4861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jsonservicespackageprefix",{"_index":129,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["kept",{"_index":2507,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["key",{"_index":253,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["keypos",{"_index":1909,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["kind",{"_index":721,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["knowing",{"_index":1323,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["l",{"_index":2711,"title":{},"body":{"classes/LineModel.html":{}}}],["l.sourcex",{"_index":2712,"title":{},"body":{"classes/LineModel.html":{}}}],["l.sourcey",{"_index":2713,"title":{},"body":{"classes/LineModel.html":{}}}],["l.stroke",{"_index":2716,"title":{},"body":{"classes/LineModel.html":{}}}],["l.style",{"_index":2757,"title":{},"body":{"classes/LineModel.html":{}}}],["l.targetfield",{"_index":2717,"title":{},"body":{"classes/LineModel.html":{}}}],["l.targetx",{"_index":2714,"title":{},"body":{"classes/LineModel.html":{}}}],["l.targety",{"_index":2715,"title":{},"body":{"classes/LineModel.html":{}}}],["label",{"_index":768,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["language",{"_index":726,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["last",{"_index":1940,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["last.str",{"_index":1994,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["last.str.length",{"_index":1993,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["last.str.substring(0",{"_index":1995,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastaddedindex",{"_index":1965,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastfieldrefremoved(removed.field",{"_index":1992,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastfieldrefremoved(targetfieldnode.field",{"_index":1997,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastnewnodeindex",{"_index":1952,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastnode",{"_index":1907,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastnode.str.indexof",{"_index":1910,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastnode.str.length",{"_index":2054,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["lastseparator",{"_index":3721,"title":{},"body":{"classes/MappingUtil.html":{}}}],["lasttextnode",{"_index":1943,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["latest",{"_index":1924,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["law",{"_index":713,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["lawsuit",{"_index":4700,"title":{},"body":{"license.html":{}}}],["leaf",{"_index":1150,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["leaf.length",{"_index":1223,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["leaf.substr(0",{"_index":1221,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["leave",{"_index":2391,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["left",{"_index":752,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["left:0",{"_index":757,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["left_bracket",{"_index":3916,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["legal",{"_index":4581,"title":{},"body":{"license.html":{}}}],["legend",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"overview.html":{}}}],["legible",{"_index":3216,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["length",{"_index":4363,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["level",{"_index":1645,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/variables.html":{}}}],["liability",{"_index":4779,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4787,"title":{},"body":{"license.html":{}}}],["lib/atlasmap",{"_index":1822,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["libraries",{"_index":2559,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["library",{"_index":2494,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["libs",{"_index":2560,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["licensable",{"_index":4689,"title":{},"body":{"license.html":{}}}],["license",{"_index":702,"title":{"license.html":{}},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["license.you",{"_index":4741,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":699,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["licenses",{"_index":4705,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":4576,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":4766,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":729,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["limited",{"_index":4611,"title":{},"body":{"license.html":{}}}],["line",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["line.sourcex",{"_index":2692,"title":{},"body":{"classes/LineModel.html":{}}}],["line.sourcey",{"_index":2694,"title":{},"body":{"classes/LineModel.html":{}}}],["line.targetfield",{"_index":2699,"title":{},"body":{"classes/LineModel.html":{}}}],["line.targetx",{"_index":2696,"title":{},"body":{"classes/LineModel.html":{}}}],["line.targety",{"_index":2698,"title":{},"body":{"classes/LineModel.html":{}}}],["line:hover",{"_index":845,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["linebeingformed",{"_index":2669,"title":{},"body":{"classes/LineModel.html":{}}}],["linemachine",{"_index":615,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["linemachinecomponent",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["linemachineelement",{"_index":2673,"title":{},"body":{"classes/LineModel.html":{}}}],["linemachineheight",{"_index":2762,"title":{},"body":{"classes/LineModel.html":{}}}],["linemodel",{"_index":2648,"title":{"classes/LineModel.html":{}},"body":{"classes/LineModel.html":{},"coverage.html":{}}}],["lines",{"_index":2668,"title":{},"body":{"classes/LineModel.html":{},"components/ToolbarComponent.html":{}}}],["link",{"_index":1739,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["list",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["list'},{'name",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["list.component",{"_index":1082,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["list.component.css",{"_index":736,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["list.component.html",{"_index":3499,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts",{"_index":3498,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"coverage.html":{}}}],["list.component.ts:103",{"_index":3517,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:104",{"_index":3863,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:109",{"_index":3854,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:114",{"_index":3856,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:124",{"_index":3528,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:128",{"_index":3532,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:134",{"_index":3858,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:145",{"_index":3537,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:148",{"_index":3859,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:31",{"_index":3515,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:32",{"_index":3846,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:33",{"_index":3541,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:34",{"_index":3540,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:35",{"_index":3543,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:36",{"_index":3542,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:37",{"_index":3539,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:39",{"_index":3530,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["list.component.ts:47",{"_index":3529,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:48",{"_index":3860,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:53",{"_index":3518,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:55",{"_index":3862,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:57",{"_index":3533,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:59",{"_index":3849,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:63",{"_index":3853,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:64",{"_index":3522,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:67",{"_index":3852,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:71",{"_index":3851,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:73",{"_index":3535,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:75",{"_index":3848,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["list.component.ts:77",{"_index":3525,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:81",{"_index":3523,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:85",{"_index":3524,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:89",{"_index":3520,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:93",{"_index":3538,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list.component.ts:98",{"_index":3526,"title":{},"body":{"components/MappingListComponent.html":{}}}],["list/data",{"_index":735,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["list/mapping",{"_index":1081,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"coverage.html":{}}}],["list/namespace",{"_index":1084,"title":{},"body":{"modules/DataMapperModule.html":{},"components/NamespaceListComponent.html":{},"coverage.html":{}}}],["lists",{"_index":4652,"title":{},"body":{"license.html":{}}}],["literal",{"_index":3094,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["litigation",{"_index":4695,"title":{},"body":{"license.html":{}}}],["little",{"_index":4540,"title":{},"body":{"index.html":{}}}],["live",{"_index":4130,"title":{},"body":{"components/ToolbarComponent.html":{},"index.html":{}}}],["lmcinstance",{"_index":2683,"title":{},"body":{"classes/LineModel.html":{}}}],["lmcinstance.redrawlinesformappings",{"_index":2685,"title":{},"body":{"classes/LineModel.html":{}}}],["load",{"_index":2249,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["loadcomponent",{"_index":1488,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["loading",{"_index":61,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["loadingstatus",{"_index":60,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["local",{"_index":345,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["locale",{"_index":3929,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["location",{"_index":3837,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{}}}],["locationuri",{"_index":3896,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["logger",{"_index":25,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["loggermodule",{"_index":1063,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["loggermodule.forroot(environment.ngxloggerconfig",{"_index":1119,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["loggermoduleforroot",{"_index":1118,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["long",{"_index":586,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["looking",{"_index":3953,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["lookup",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["lookuptable",{"_index":2799,"title":{"classes/LookupTable.html":{}},"body":{"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["lookuptablecomponent",{"_index":412,"title":{"components/LookupTableComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lookuptabledata",{"_index":2853,"title":{"classes/LookupTableData.html":{}},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"coverage.html":{}}}],["lookuptableentry",{"_index":2808,"title":{"classes/LookupTableEntry.html":{}},"body":{"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"coverage.html":{}}}],["lookuptablename",{"_index":2915,"title":{},"body":{"classes/LookupTableUtil.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["lookuptableutil",{"_index":2908,"title":{"classes/LookupTableUtil.html":{}},"body":{"classes/LookupTableUtil.html":{},"coverage.html":{}}}],["lookuptableutil.getfirstmappingforlookuptable(mappingdefinition",{"_index":2942,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["lookuptableutil.populatemappinglookuptable(mappingdefinition",{"_index":2946,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["loss",{"_index":4793,"title":{},"body":{"license.html":{}}}],["losses",{"_index":4800,"title":{},"body":{"license.html":{}}}],["lost",{"_index":4354,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["m",{"_index":2748,"title":{},"body":{"classes/LineModel.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{}}}],["m.getfields(false).length",{"_index":2927,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m.getfields(false)[0",{"_index":2944,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m.getfields(true).length",{"_index":2926,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m.getfields(true)[0",{"_index":2930,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m.isfieldmapped(field",{"_index":3059,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{}}}],["m.sourcefields",{"_index":2768,"title":{},"body":{"classes/LineModel.html":{}}}],["m.sourcefields.length",{"_index":2765,"title":{},"body":{"classes/LineModel.html":{}}}],["m.sourcefields[0].field.name",{"_index":3060,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["m.targetfields",{"_index":2778,"title":{},"body":{"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["m.targetfields.length",{"_index":2766,"title":{},"body":{"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["m.transition.lookuptablename",{"_index":2925,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m.transition.mode",{"_index":2923,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["m1",{"_index":1284,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["machine",{"_index":843,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/LineModel.html":{}}}],["machine'},{'name",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["machine.component",{"_index":654,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["machine.component.html",{"_index":2667,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts",{"_index":2650,"title":{},"body":{"classes/LineModel.html":{},"coverage.html":{}}}],["machine.component.ts:29",{"_index":2657,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:30",{"_index":2658,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:31",{"_index":2665,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:32",{"_index":2666,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:33",{"_index":2662,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:34",{"_index":2663,"title":{},"body":{"classes/LineModel.html":{}}}],["machine.component.ts:35",{"_index":2664,"title":{},"body":{"classes/LineModel.html":{}}}],["made",{"_index":3198,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["mailing",{"_index":4651,"title":{},"body":{"license.html":{}}}],["make",{"_index":1597,"title":{},"body":{"classes/EnumValue.html":{},"components/MappingFieldActionArgumentComponent.html":{},"license.html":{}}}],["making",{"_index":4609,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":4798,"title":{},"body":{"license.html":{}}}],["manage",{"_index":1703,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["managed",{"_index":4656,"title":{},"body":{"license.html":{}}}],["management",{"_index":4126,"title":{},"body":{"components/ToolbarComponent.html":{},"license.html":{}}}],["management.service",{"_index":38,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{}}}],["management.service.ts",{"_index":2435,"title":{},"body":{"injectables/FileManagementService.html":{},"coverage.html":{}}}],["management.service.ts:109",{"_index":2470,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:139",{"_index":2495,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:160",{"_index":2492,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:184",{"_index":2504,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:208",{"_index":2497,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:235",{"_index":2457,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:34",{"_index":2510,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:340",{"_index":2482,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:36",{"_index":2511,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:386",{"_index":2477,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:39",{"_index":2455,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:413",{"_index":2476,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:43",{"_index":2513,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:448",{"_index":2478,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:452",{"_index":2480,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:47",{"_index":2515,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:54",{"_index":2469,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["management.service.ts:82",{"_index":2471,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["manipulation",{"_index":2436,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["manner",{"_index":2222,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["manually",{"_index":4559,"title":{},"body":{"index.html":{}}}],["many",{"_index":4292,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["many_to_one",{"_index":2082,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["map",{"_index":246,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingListComponent.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["mapped",{"_index":1644,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["mappedfield",{"_index":1793,"title":{"classes/MappedField.html":{}},"body":{"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["mappedfield.actions",{"_index":3735,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.actions.length",{"_index":3045,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedfield.actions.push(action",{"_index":3741,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field",{"_index":2979,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{}}}],["mappedfield.field.displayname",{"_index":3728,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field.isattribute",{"_index":3729,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field.issource",{"_index":3488,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["mappedfield.field.name",{"_index":3495,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{}}}],["mappedfield.field.namespacealias",{"_index":3730,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field.parentfield",{"_index":3731,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field.path",{"_index":2980,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingUtil.html":{}}}],["mappedfield.field.serviceobject.jsontype",{"_index":3719,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.field.type",{"_index":3494,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{}}}],["mappedfield.field.usercreated",{"_index":3720,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.ispadfield",{"_index":3008,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedfield.parseddata.fieldisconstant",{"_index":3699,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.fieldisproperty",{"_index":3697,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedactions",{"_index":3737,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedactions.length",{"_index":3736,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parseddocid",{"_index":3705,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parseddocuri",{"_index":3704,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedindex",{"_index":3743,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedname",{"_index":3702,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedpath",{"_index":3718,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedvalue",{"_index":3710,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.parsedvaluetype",{"_index":3712,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfield.parseddata.usercreated",{"_index":3706,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfieldindex",{"_index":3696,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mappedfieldparsingdata",{"_index":2954,"title":{"classes/MappedFieldParsingData.html":{}},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"coverage.html":{}}}],["mappedfields",{"_index":2015,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{}}}],["mappedfields.includes(node.field",{"_index":2021,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["mappedfields.length",{"_index":2976,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["mappedfields[+index",{"_index":3022,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedfields[0].field.isincollection",{"_index":3421,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["mappedinputfield",{"_index":2767,"title":{},"body":{"classes/LineModel.html":{}}}],["mappedinputfield.field",{"_index":2770,"title":{},"body":{"classes/LineModel.html":{}}}],["mappedoutputfield",{"_index":2777,"title":{},"body":{"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedoutputfield.field",{"_index":2779,"title":{},"body":{"classes/LineModel.html":{}}}],["mappedoutputfield.field.docdef",{"_index":3057,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mappedoutputfield.field.path",{"_index":3058,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mapper",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"index.html":{}}}],["mapper'},{'name",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["mapper.module",{"_index":1823,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["mapper.module.ts",{"_index":1039,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapper.module.ts:171",{"_index":1044,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["mapper/common/config.types.ts",{"_index":4504,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mapper/common/data",{"_index":1126,"title":{},"body":{"classes/DataMapperUtil.html":{},"coverage.html":{}}}],["mapper/common/focus.directive.ts",{"_index":2637,"title":{},"body":{"directives/FocusDirective.html":{},"coverage.html":{}}}],["mapper/common/focus.directive.ts:14",{"_index":2644,"title":{},"body":{"directives/FocusDirective.html":{}}}],["mapper/common/focus.directive.ts:8",{"_index":2643,"title":{},"body":{"directives/FocusDirective.html":{}}}],["mapper/common/focus.directive.ts:9",{"_index":2642,"title":{},"body":{"directives/FocusDirective.html":{}}}],["mapper/common/to",{"_index":4080,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{}}}],["mapper/components/app/constant",{"_index":526,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"coverage.html":{}}}],["mapper/components/app/data",{"_index":596,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"coverage.html":{}}}],["mapper/components/app/field",{"_index":2338,"title":{},"body":{"components/FieldEditComponent.html":{},"coverage.html":{}}}],["mapper/components/app/line",{"_index":2649,"title":{},"body":{"classes/LineModel.html":{},"coverage.html":{}}}],["mapper/components/app/namespace",{"_index":3816,"title":{},"body":{"components/NamespaceEditComponent.html":{},"coverage.html":{}}}],["mapper/components/app/property",{"_index":4061,"title":{},"body":{"components/PropertyFieldEditComponent.html":{},"coverage.html":{}}}],["mapper/components/app/template",{"_index":4069,"title":{},"body":{"components/TemplateEditComponent.html":{},"coverage.html":{}}}],["mapper/components/data",{"_index":852,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"coverage.html":{}}}],["mapper/components/document/class",{"_index":452,"title":{},"body":{"components/ClassNameComponent.html":{},"coverage.html":{}}}],["mapper/components/document/document",{"_index":1225,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"coverage.html":{}}}],["mapper/components/mapping",{"_index":504,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/NamespaceListComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["mapper/components/modal/modal",{"_index":1440,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"coverage.html":{}}}],["mapper/components/toolbar/expression.component.ts",{"_index":4420,"title":{},"body":{"coverage.html":{}}}],["mapper/components/toolbar/toolbar.component.ts",{"_index":4090,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:100",{"_index":4137,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:105",{"_index":4119,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:109",{"_index":4115,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:134",{"_index":4117,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:138",{"_index":4147,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:183",{"_index":4131,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:195",{"_index":4109,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:211",{"_index":4143,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:239",{"_index":4113,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:262",{"_index":4121,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:277",{"_index":4129,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:295",{"_index":4124,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:306",{"_index":4127,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:310",{"_index":4112,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:32",{"_index":4107,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:33",{"_index":4108,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:35",{"_index":4149,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:37",{"_index":4153,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:39",{"_index":4150,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:40",{"_index":4151,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:41",{"_index":4152,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:48",{"_index":4141,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/components/toolbar/toolbar.component.ts:64",{"_index":4133,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["mapper/data",{"_index":1038,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapper/models/config.model.ts",{"_index":8,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{}}}],["mapper/models/config.model.ts:316",{"_index":20,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{}}}],["mapper/models/config.model.ts:33",{"_index":1010,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:34",{"_index":1019,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:35",{"_index":1020,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:36",{"_index":1002,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:37",{"_index":1018,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:39",{"_index":1003,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:40",{"_index":1006,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:41",{"_index":1004,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:42",{"_index":1005,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:44",{"_index":1024,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:45",{"_index":1022,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:46",{"_index":1023,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:49",{"_index":1009,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:51",{"_index":1021,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:53",{"_index":1008,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:56",{"_index":1017,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:57",{"_index":1007,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:58",{"_index":1013,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:59",{"_index":1014,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:60",{"_index":1016,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:61",{"_index":1015,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:63",{"_index":1011,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:66",{"_index":1012,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:68",{"_index":1000,"title":{},"body":{"classes/DataMapperInitializationModel.html":{}}}],["mapper/models/config.model.ts:81",{"_index":1431,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:82",{"_index":1439,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:83",{"_index":1436,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:84",{"_index":1430,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:85",{"_index":1435,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:86",{"_index":1438,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:87",{"_index":1434,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:88",{"_index":1433,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:89",{"_index":1432,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:90",{"_index":1437,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:91",{"_index":1429,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/config.model.ts:92",{"_index":1428,"title":{},"body":{"classes/DocumentInitializationModel.html":{}}}],["mapper/models/document",{"_index":3893,"title":{},"body":{"classes/NamespaceModel.html":{},"coverage.html":{}}}],["mapper/models/error.model.ts",{"_index":1784,"title":{},"body":{"classes/ErrorInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mapper/models/error.model.ts:42",{"_index":1792,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:43",{"_index":1791,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:45",{"_index":1797,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:46",{"_index":1795,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:47",{"_index":1798,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:48",{"_index":1799,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:49",{"_index":1796,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:50",{"_index":1794,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:51",{"_index":1789,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/error.model.ts:59",{"_index":1801,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["mapper/models/examples.ts",{"_index":1826,"title":{},"body":{"classes/Examples.html":{},"coverage.html":{}}}],["mapper/models/examples.ts:18",{"_index":1839,"title":{},"body":{"classes/Examples.html":{}}}],["mapper/models/expression.model.ts",{"_index":1841,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["mapper/models/expression.model.ts:22",{"_index":2057,"title":{},"body":{"classes/ExpressionUpdatedEvent.html":{}}}],["mapper/models/expression.model.ts:23",{"_index":2058,"title":{},"body":{"classes/ExpressionUpdatedEvent.html":{}}}],["mapper/models/expression.model.ts:27",{"_index":1851,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:28",{"_index":1849,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:34",{"_index":1852,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:38",{"_index":1854,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:39",{"_index":1853,"title":{},"body":{"classes/ExpressionNode.html":{}}}],["mapper/models/expression.model.ts:44",{"_index":4074,"title":{},"body":{"classes/TextNode.html":{}}}],["mapper/models/expression.model.ts:46",{"_index":4075,"title":{},"body":{"classes/TextNode.html":{}}}],["mapper/models/expression.model.ts:50",{"_index":4077,"title":{},"body":{"classes/TextNode.html":{}}}],["mapper/models/expression.model.ts:54",{"_index":4076,"title":{},"body":{"classes/TextNode.html":{}}}],["mapper/models/expression.model.ts:62",{"_index":2424,"title":{},"body":{"classes/FieldNode.html":{}}}],["mapper/models/expression.model.ts:64",{"_index":2425,"title":{},"body":{"classes/FieldNode.html":{}}}],["mapper/models/expression.model.ts:71",{"_index":2430,"title":{},"body":{"classes/FieldNode.html":{}}}],["mapper/models/expression.model.ts:75",{"_index":2429,"title":{},"body":{"classes/FieldNode.html":{}}}],["mapper/models/field",{"_index":2060,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mapper/models/field.model.ts",{"_index":1525,"title":{},"body":{"classes/EnumValue.html":{},"coverage.html":{}}}],["mapper/models/field.model.ts:21",{"_index":1527,"title":{},"body":{"classes/EnumValue.html":{}}}],["mapper/models/field.model.ts:22",{"_index":1528,"title":{},"body":{"classes/EnumValue.html":{}}}],["mapper/models/lookup",{"_index":2800,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"coverage.html":{}}}],["mapper/models/mapping",{"_index":3072,"title":{},"body":{"classes/MappingDefinition.html":{},"coverage.html":{}}}],["mapper/models/mapping.model.ts",{"_index":2947,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"coverage.html":{}}}],["mapper/models/mapping.model.ts:25",{"_index":3067,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:26",{"_index":3068,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:27",{"_index":3069,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:28",{"_index":3064,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:29",{"_index":3065,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:30",{"_index":3066,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:31",{"_index":3062,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:32",{"_index":3061,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:33",{"_index":3070,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:34",{"_index":3063,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:35",{"_index":3071,"title":{},"body":{"classes/MappedFieldParsingData.html":{}}}],["mapper/models/mapping.model.ts:39",{"_index":2955,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:40",{"_index":2953,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:41",{"_index":2952,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:43",{"_index":2961,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:65",{"_index":2956,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:69",{"_index":2957,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/mapping.model.ts:73",{"_index":2959,"title":{},"body":{"classes/MappedField.html":{}}}],["mapper/models/transition.model.ts",{"_index":4231,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["mapper/models/transition.model.ts:122",{"_index":4316,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:137",{"_index":4321,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:141",{"_index":4322,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:145",{"_index":4320,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:149",{"_index":4319,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:153",{"_index":4318,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:33",{"_index":4239,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["mapper/models/transition.model.ts:34",{"_index":4241,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["mapper/models/transition.model.ts:35",{"_index":4240,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["mapper/models/transition.model.ts:36",{"_index":4237,"title":{},"body":{"classes/TransitionDelimiterModel.html":{}}}],["mapper/models/transition.model.ts:48",{"_index":4309,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:50",{"_index":4313,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:51",{"_index":4308,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:52",{"_index":4314,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:53",{"_index":4312,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:54",{"_index":4311,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:55",{"_index":4310,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:56",{"_index":4307,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:62",{"_index":4317,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/models/transition.model.ts:90",{"_index":4315,"title":{},"body":{"classes/TransitionModel.html":{}}}],["mapper/services/api",{"_index":293,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"coverage.html":{}}}],["mapper/services/document",{"_index":4445,"title":{},"body":{"coverage.html":{}}}],["mapper/services/error",{"_index":1640,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"coverage.html":{}}}],["mapper/services/field",{"_index":2133,"title":{},"body":{"injectables/FieldActionService.html":{},"coverage.html":{}}}],["mapper/services/file",{"_index":2434,"title":{},"body":{"injectables/FileManagementService.html":{},"coverage.html":{}}}],["mapper/services/initialization.service.ts",{"_index":4453,"title":{},"body":{"coverage.html":{}}}],["mapper/services/mapping",{"_index":4455,"title":{},"body":{"coverage.html":{}}}],["mapper/utils/lookup",{"_index":2909,"title":{},"body":{"classes/LookupTableUtil.html":{},"coverage.html":{}}}],["mapper/utils/mapping",{"_index":3662,"title":{},"body":{"classes/MappingUtil.html":{},"coverage.html":{}}}],["mapping",{"_index":29,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["mapping.adm",{"_index":2572,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["mapping.getallfields",{"_index":4024,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mapping.getallmappedfields",{"_index":3564,"title":{},"body":{"components/MappingListComponent.html":{}}}],["mapping.getfields(false)[0",{"_index":2864,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["mapping.getfields(issource",{"_index":2321,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["mapping.getfields(true)[0",{"_index":2874,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["mapping.getindexformappedfield(mappedfield",{"_index":3496,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["mapping.getmappedfieldforfield(field).actions.length",{"_index":4025,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mapping.getmappedfieldforindex((index",{"_index":1870,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["mapping.getmappedfields(issource",{"_index":3695,"title":{},"body":{"classes/MappingUtil.html":{}}}],["mapping.getusermappedfields(issource",{"_index":3556,"title":{},"body":{"components/MappingListComponent.html":{}}}],["mapping.getusermappedfields(true",{"_index":2016,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["mapping.isfullymapped",{"_index":4372,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["mapping.model",{"_index":1802,"title":{},"body":{"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappingDefinition.html":{},"classes/TextNode.html":{}}}],["mapping.sourcefields.length",{"_index":3654,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["mapping.targetfields.length",{"_index":3655,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["mapping.transition.getprettyname",{"_index":3562,"title":{},"body":{"components/MappingListComponent.html":{}}}],["mapping.transition.userdelimiter",{"_index":4376,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["mapping/gz",{"_index":2543,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping/json",{"_index":2561,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping/reset",{"_index":2551,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping/resetlibs",{"_index":2558,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mapping/zip",{"_index":2550,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappingchanged",{"_index":2736,"title":{},"body":{"classes/LineModel.html":{}}}],["mappingdefinition",{"_index":28,"title":{"classes/MappingDefinition.html":{}},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["mappingdefinition.activemapping",{"_index":4023,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mappingdefinition.addtable(table",{"_index":2936,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["mappingdefinition.getallmappings(true",{"_index":4021,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mappingdefinition.gettablebysourcetarget(inputclassidentifier",{"_index":2933,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["mappingdefinition.gettables",{"_index":2939,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["mappingdefinition.mappings",{"_index":2945,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["mappingdetailcomponent",{"_index":415,"title":{"components/MappingDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfieldactionargumentcomponent",{"_index":416,"title":{"components/MappingFieldActionArgumentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfieldactioncomponent",{"_index":419,"title":{"components/MappingFieldActionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfieldcontainercomponent",{"_index":421,"title":{"components/MappingFieldContainerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfielddetailcomponent",{"_index":423,"title":{"components/MappingFieldDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingfilenames",{"_index":2531,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappingfilenames.push(entry.name",{"_index":2533,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappingfiles",{"_index":159,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["mappinginitialized",{"_index":104,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["mappingisactive",{"_index":4022,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["mappinglistcomponent",{"_index":424,"title":{"components/MappingListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappinglistfieldcomponent",{"_index":426,"title":{"components/MappingListFieldComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingmanagementservice",{"_index":39,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"coverage.html":{},"overview.html":{}}}],["mappingmodel",{"_index":1100,"title":{},"body":{"modules/DataMapperModule.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["mappingname",{"_index":2626,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappings",{"_index":160,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/ToolbarComponent.html":{}}}],["mappings.push(this.activemapping",{"_index":3130,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["mappingselectioncomponent",{"_index":429,"title":{"components/MappingSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingselectionrequiredsubscription",{"_index":3135,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["mappingselectionsection",{"_index":3650,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["mappingselectionsectioncomponent",{"_index":431,"title":{"components/MappingSelectionSectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mappingserializer",{"_index":1102,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{}}}],["mappingservice",{"_index":152,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["mappingservicespackageprefix",{"_index":125,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["mappingsfilename",{"_index":2467,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["mappingsfilename.length",{"_index":2571,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["mappingsforfield",{"_index":3131,"title":{},"body":{"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{}}}],["mappingsforfield.push(m",{"_index":3133,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["mappingupdatedsubscription",{"_index":2675,"title":{},"body":{"classes/LineModel.html":{}}}],["mappingutil",{"_index":3661,"title":{"classes/MappingUtil.html":{}},"body":{"classes/MappingUtil.html":{},"coverage.html":{}}}],["mappingutil.updatemappedfieldsfromdocuments(mapping",{"_index":3691,"title":{},"body":{"classes/MappingUtil.html":{}}}],["margin",{"_index":751,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["margin:0px",{"_index":800,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["margin:auto",{"_index":827,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["marked",{"_index":4662,"title":{},"body":{"license.html":{}}}],["marks",{"_index":4757,"title":{},"body":{"license.html":{}}}],["master",{"_index":2491,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["match",{"_index":1376,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"dependencies.html":{}}}],["matches",{"_index":2159,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["matchesdate",{"_index":2147,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["matchesdate(candidatetype",{"_index":2186,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["matchesnumeric",{"_index":2148,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["matchesnumeric(candidatetype",{"_index":2192,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["matching",{"_index":288,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materializing",{"_index":4205,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["math.floor((math.random",{"_index":2988,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{}}}],["math.floor(math.random",{"_index":2830,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["maven",{"_index":81,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["max",{"_index":3485,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["max_path_width",{"_index":1220,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["maybe",{"_index":1751,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["md",{"_index":808,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["mean",{"_index":4573,"title":{},"body":{"license.html":{}}}],["means",{"_index":1931,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"license.html":{}}}],["mechanical",{"_index":4613,"title":{},"body":{"license.html":{}}}],["media",{"_index":4617,"title":{},"body":{"license.html":{}}}],["medium",{"_index":4709,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4710,"title":{},"body":{"license.html":{}}}],["menu",{"_index":3200,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["menus",{"_index":3318,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["merchantability",{"_index":4767,"title":{},"body":{"license.html":{}}}],["merely",{"_index":4635,"title":{},"body":{"license.html":{}}}],["mergedtextnode",{"_index":1955,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["mergedtextnode.str",{"_index":1957,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["message",{"_index":1458,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/ErrorInfo.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["messed",{"_index":687,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["meta",{"_index":2581,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["metadata",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["method",{"_index":328,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/ToolbarComponent.html":{}}}],["methods",{"_index":308,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/FieldAction.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["mf.field",{"_index":3005,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["mfield",{"_index":2025,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["min",{"_index":802,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["minimal",{"_index":2508,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["misaligned",{"_index":689,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["miscellaneous",{"_index":4498,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":2218,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["mkdirp",{"_index":4483,"title":{},"body":{"dependencies.html":{}}}],["modal",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["modal.component.css",{"_index":738,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["modal//modal",{"_index":4154,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["modal/data",{"_index":737,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["modal/modal",{"_index":491,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["modalerrordetailcomponent",{"_index":434,"title":{"components/ModalErrorDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalerrorsubject",{"_index":1469,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["modalerrorsubscription",{"_index":1470,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["modalerrorwindow",{"_index":616,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["modalerrorwindowcomponent",{"_index":436,"title":{"components/ModalErrorWindowComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalerrorwindowvalidator",{"_index":3775,"title":{"interfaces/ModalErrorWindowValidator.html":{}},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"coverage.html":{}}}],["modalwindow",{"_index":617,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["modalwindowcomponent",{"_index":438,"title":{"components/ModalWindowComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["modalwindowvalidator",{"_index":454,"title":{"interfaces/ModalWindowValidator.html":{}},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"coverage.html":{}}}],["mode",{"_index":897,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["modeisenum",{"_index":4325,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["modeissupported",{"_index":3181,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["modeissupported(delimitermodel",{"_index":3223,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["model",{"_index":261,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/Examples.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/MappingFieldContainerComponent.html":{}}}],["model.displayname",{"_index":3386,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["model.field",{"_index":3385,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["model['field'].docdef",{"_index":3493,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["model['field'].docdef.name",{"_index":2418,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["model['field'].path",{"_index":2419,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["model[\\'field\\'].docdef",{"_index":3497,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["model[\\'field\\'].docdef.name",{"_index":2421,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["model[\\'field\\'].path",{"_index":2422,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["models",{"_index":4266,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["models.push(new",{"_index":4267,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["models/config.model",{"_index":323,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["models/document",{"_index":489,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"modules/DataMapperModule.html":{},"components/FieldEditComponent.html":{},"classes/MappingDefinition.html":{},"classes/MappingUtil.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["models/error.model",{"_index":44,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["models/examples",{"_index":864,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["models/field",{"_index":2208,"title":{},"body":{"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"components/TransitionSelectionComponent.html":{}}}],["models/field.model",{"_index":490,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/PropertyFieldEditComponent.html":{}}}],["models/lookup",{"_index":2859,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/TransitionSelectionComponent.html":{}}}],["models/mapping",{"_index":1099,"title":{},"body":{"modules/DataMapperModule.html":{},"classes/LookupTableUtil.html":{},"classes/NamespaceModel.html":{}}}],["models/mapping.model",{"_index":1101,"title":{},"body":{"modules/DataMapperModule.html":{},"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/TransitionSelectionComponent.html":{}}}],["models/transition.model",{"_index":2922,"title":{},"body":{"classes/LookupTableUtil.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["modifications",{"_index":4610,"title":{},"body":{"license.html":{}}}],["modified",{"_index":4714,"title":{},"body":{"license.html":{}}}],["modify",{"_index":4735,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":4740,"title":{},"body":{"license.html":{}}}],["module",{"_index":1025,"title":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}],["module.id",{"_index":603,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["moduleid",{"_index":602,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["modules",{"_index":1027,"title":{"modules.html":{}},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":1047,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["moment",{"_index":1650,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"dependencies.html":{}}}],["more",{"_index":1659,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingFieldContainerComponent.html":{},"classes/NamespaceModel.html":{},"license.html":{}}}],["mostly",{"_index":1658,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["mouse",{"_index":1282,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["mouseevent",{"_index":517,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["mouseeventtimer",{"_index":911,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["mousing",{"_index":944,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["movement",{"_index":3396,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["much",{"_index":1149,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["multi",{"_index":1124,"title":{},"body":{"modules/DataMapperModule.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["multi_space",{"_index":4252,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["multiple",{"_index":3212,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["multiplicity",{"_index":2079,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionComponent.html":{},"classes/MappingUtil.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["multiplicity.many_to_one",{"_index":2197,"title":{},"body":{"injectables/FieldActionService.html":{},"components/TransitionSelectionComponent.html":{}}}],["multiplicity.one_to_many",{"_index":2196,"title":{},"body":{"injectables/FieldActionService.html":{},"components/TransitionSelectionComponent.html":{}}}],["multiplicity.one_to_one",{"_index":2087,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionComponent.html":{},"classes/MappingUtil.html":{}}}],["multiplicity.one_to_one).length",{"_index":3306,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["multiplicity.zero_to_one",{"_index":2198,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["multispace",{"_index":4280,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["mvnw",{"_index":4535,"title":{},"body":{"index.html":{}}}],["mw",{"_index":1392,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["mw.nestedcomponent",{"_index":1394,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["mwc",{"_index":537,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["mytarget",{"_index":1466,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["mytargetchangessubscription",{"_index":1468,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["n",{"_index":1755,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["n.field",{"_index":1990,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["n.getuuid",{"_index":1897,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["n/a",{"_index":1875,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["n\\sourceidentifier",{"_index":2839,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["n\\targetidentifier",{"_index":2840,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["n\\tentry",{"_index":2842,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["name",{"_index":115,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["name'},{'name",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["name.component",{"_index":1073,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["name.component.html",{"_index":456,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts",{"_index":453,"title":{},"body":{"components/ClassNameComponent.html":{},"coverage.html":{}}}],["name.component.ts:31",{"_index":480,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:32",{"_index":484,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:33",{"_index":485,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:34",{"_index":487,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:35",{"_index":486,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:36",{"_index":481,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:37",{"_index":467,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:42",{"_index":475,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:47",{"_index":478,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:50",{"_index":476,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:54",{"_index":471,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:58",{"_index":479,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["name.component.ts:62",{"_index":469,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["namednodemap",{"_index":2689,"title":{},"body":{"classes/LineModel.html":{}}}],["nameexistsoncreation",{"_index":4062,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["nameonly",{"_index":3597,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["names",{"_index":3040,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"license.html":{}}}],["names.push(field.name",{"_index":3041,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["namespace",{"_index":440,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["namespace.alias",{"_index":3889,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespace.copy",{"_index":3827,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["namespace.istarget",{"_index":3828,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{}}}],["namespace.locationuri",{"_index":3891,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespace.uri",{"_index":3890,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacealias",{"_index":1546,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/MappingUtil.html":{}}}],["namespacecomponent",{"_index":3870,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacecomponent.initialize(ns",{"_index":3871,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacecomponent.namespace",{"_index":3873,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespaceeditcomponent",{"_index":439,"title":{"components/NamespaceEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["namespacefound",{"_index":2394,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["namespacelistcomponent",{"_index":441,"title":{"components/NamespaceListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["namespacematchessearch",{"_index":3843,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacematchessearch(ns",{"_index":3855,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["namespacemodel",{"_index":2368,"title":{"classes/NamespaceModel.html":{}},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["namespacemodel.getunqualifiednamespace",{"_index":2380,"title":{},"body":{"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{}}}],["namespacemodel.unqualifiednamespace",{"_index":3905,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["namespaces",{"_index":2343,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["namespaceselectionchanged",{"_index":2348,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["namespaceselectionchanged(event",{"_index":2360,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["navbar'},{'name",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["navbar.component",{"_index":1821,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["navbar.component.ts",{"_index":4382,"title":{},"body":{"coverage.html":{}}}],["navigation",{"_index":99,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["nbsp",{"_index":1426,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingListComponent.html":{},"classes/TextNode.html":{}}}],["ncp",{"_index":4486,"title":{},"body":{"dependencies.html":{}}}],["necessarily",{"_index":4690,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":925,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["need",{"_index":343,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["need/use",{"_index":337,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["needed",{"_index":3317,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["needs",{"_index":928,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["negligence",{"_index":4782,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":4785,"title":{},"body":{"license.html":{}}}],["nestedcomponent",{"_index":1459,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["nestedcomponentinitializedcallback",{"_index":1454,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["nestedcomponenttype",{"_index":1453,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["network",{"_index":2245,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["new",{"_index":135,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["newargvalue",{"_index":2110,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["newargvalue.name",{"_index":2111,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["newargvalue.value",{"_index":2112,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["newfield",{"_index":1405,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["newlines",{"_index":889,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["newnamespace",{"_index":3872,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["newnodes",{"_index":1937,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.length",{"_index":1953,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.pop",{"_index":1985,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.push(new",{"_index":1961,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.push(targetnode",{"_index":1963,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.splice(0",{"_index":1945,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes.splice(lastnewnodeindex",{"_index":1960,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes[0",{"_index":1942,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes[lastnewnodeindex",{"_index":1954,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes[lastnewnodeindex]as",{"_index":1959,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newnodes[newnodes.length",{"_index":1983,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["newoffset",{"_index":1999,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["next",{"_index":334,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["next.handle(httprequest",{"_index":354,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["nextnode",{"_index":1981,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["nextnode.str",{"_index":1984,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["nextnodeindex",{"_index":1980,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["ng",{"_index":4494,"title":{},"body":{"dependencies.html":{}}}],["ngaftercontentchecked",{"_index":2640,"title":{},"body":{"directives/FocusDirective.html":{}}}],["ngafterviewinit",{"_index":1471,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["ngif",{"_index":1477,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["ngmodule",{"_index":1046,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["ngondestroy",{"_index":619,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingListComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["ngoninit",{"_index":620,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["ngx",{"_index":24,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"dependencies.html":{}}}],["ngxlogger",{"_index":22,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["ngxloggerconfig",{"_index":4849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxloggerlevel",{"_index":23,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["ngxloggerlevel.debug",{"_index":187,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/variables.html":{}}}],["ngxloggerlevel.info",{"_index":4864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxloggerlevel.off",{"_index":4863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxloggerlevel.trace",{"_index":191,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/variables.html":{}}}],["ngxloggerlevel.trace].includes(this.logger.getconfigsnapshot().level",{"_index":188,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["node",{"_index":1857,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["node.tohtml",{"_index":2036,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["node.totext",{"_index":2035,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["nodeid",{"_index":1894,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["nodes",{"_index":1886,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["non",{"_index":2185,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["none",{"_index":500,"title":{},"body":{"components/ClassNameComponent.html":{},"components/DataMapperAppComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["normally",{"_index":4733,"title":{},"body":{"license.html":{}}}],["note",{"_index":887,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["nothing",{"_index":4748,"title":{},"body":{"license.html":{}}}],["notice",{"_index":4620,"title":{},"body":{"license.html":{}}}],["notices",{"_index":4717,"title":{},"body":{"license.html":{}}}],["notified",{"_index":1732,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["notwithstanding",{"_index":4747,"title":{},"body":{"license.html":{}}}],["ns",{"_index":2395,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["ns.alias",{"_index":2396,"title":{},"body":{"components/FieldEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["ns.alias.tolowercase().includes(filter",{"_index":3878,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.copyfrom(newnamespace",{"_index":3874,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.createdbyuser",{"_index":3869,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.getprettylabel",{"_index":2420,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["ns.istarget",{"_index":3829,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{}}}],["ns.locationuri",{"_index":3881,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.locationuri.tolowercase().includes(filter",{"_index":3882,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.uri",{"_index":3879,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["ns.uri.tolowercase().includes(filter",{"_index":3880,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["null",{"_index":150,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["null).length",{"_index":978,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["number",{"_index":1001,"title":{},"body":{"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["number'].indexof(arg.type",{"_index":2098,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["number'].indexof(selectedtype",{"_index":2335,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["number(event.target.value",{"_index":3482,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["numeric",{"_index":2194,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["numerical",{"_index":3463,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["numerics",{"_index":2097,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["o",{"_index":1342,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{}}}],["object",{"_index":1161,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object(s",{"_index":1686,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["object.assign",{"_index":1763,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["object.assign(copy",{"_index":1596,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["object.assign(this",{"_index":1613,"title":{},"body":{"classes/EnumValue.html":{},"classes/ErrorInfo.html":{},"classes/NamespaceModel.html":{}}}],["object.keys(actiondetail.actionschema.properties",{"_index":2293,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["object.keys(multiplicity).foreach(m",{"_index":2336,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["object.keys(this.actions).foreach(multiplicity",{"_index":2305,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["object.values(this.actions).foreach(arr",{"_index":2253,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["obligations",{"_index":4808,"title":{},"body":{"license.html":{}}}],["observable",{"_index":321,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{}}}],["observable((observer",{"_index":2259,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["observable.create((observer",{"_index":2371,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["observer",{"_index":1731,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["observer.complete",{"_index":2276,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["observer.error(error",{"_index":2277,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["observer.next('no",{"_index":2632,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["observer.next(actionconfigs",{"_index":2275,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["observer.next(body",{"_index":2547,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["observer.next(data",{"_index":2634,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["observer.next(mappingfilenames",{"_index":2534,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["observer.next(this.cfg.mappingservice.executefieldsearch(this.cfg",{"_index":3382,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["observer.next(this.executesearch(observer.outervalue",{"_index":2372,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["observer.next(true",{"_index":2555,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["obtain",{"_index":707,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["occurred",{"_index":2537,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["octet",{"_index":2611,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["odd",{"_index":3653,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["offer",{"_index":4685,"title":{},"body":{"license.html":{}}}],["offset",{"_index":1858,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["ok",{"_index":1462,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["okbuttonhandler",{"_index":1456,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["okclicked",{"_index":1516,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["oldparentfield",{"_index":2402,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["oldpath",{"_index":1383,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/NamespaceModel.html":{}}}],["oldselecteditem",{"_index":3613,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["oldselecteditem.selected",{"_index":3615,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["once",{"_index":1700,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{}}}],["ondestroy",{"_index":599,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingListComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["one",{"_index":929,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["one_to_many",{"_index":2081,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["one_to_one",{"_index":2080,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["oninit",{"_index":598,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["open",{"_index":4118,"title":{},"body":{"components/ToolbarComponent.html":{},"index.html":{}}}],["operation",{"_index":2628,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["operations",{"_index":2625,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["operations.push(operation",{"_index":2630,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["opn",{"_index":4489,"title":{},"body":{"dependencies.html":{}}}],["option",{"_index":2389,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["optional",{"_index":359,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["optionselected",{"_index":4344,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["optionselected.val",{"_index":4347,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["order",{"_index":3464,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["ordinal",{"_index":1526,"title":{},"body":{"classes/EnumValue.html":{}}}],["origin",{"_index":4761,"title":{},"body":{"license.html":{}}}],["original",{"_index":3230,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"license.html":{}}}],["originalpath",{"_index":3955,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["originalpath.indexof(pathseparator",{"_index":3958,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["originalpath.substr(0",{"_index":3962,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["originalpath.substr(originalpath.indexof(pathseparator",{"_index":3964,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["originalpath.substring(1",{"_index":3959,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["otherwise",{"_index":546,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"license.html":{}}}],["out",{"_index":954,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"license.html":{},"overview.html":{}}}],["outcome",{"_index":4557,"title":{},"body":{"index.html":{}}}],["output",{"_index":2781,"title":{},"body":{"classes/LineModel.html":{}}}],["outputclassidentifier",{"_index":2929,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["outputfield",{"_index":1365,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{},"classes/LookupTableUtil.html":{}}}],["outputfield.classidentifier",{"_index":2932,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["outputfieldpos",{"_index":2782,"title":{},"body":{"classes/LineModel.html":{}}}],["outputfieldpos.y",{"_index":2784,"title":{},"body":{"classes/LineModel.html":{}}}],["outputnumber",{"_index":3634,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["outputselects",{"_index":2846,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["outstanding",{"_index":4601,"title":{},"body":{"license.html":{}}}],["over",{"_index":945,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["overflow",{"_index":839,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["overhead",{"_index":2509,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["override",{"_index":295,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["overview",{"_index":4840,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":4577,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":4598,"title":{},"body":{"license.html":{}}}],["package",{"_index":299,"title":{"dependencies.html":{}},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{}}}],["padding",{"_index":758,"title":{},"body":{"components/DataMapperAppComponent.html":{},"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["padding:0",{"_index":813,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["padding:0px",{"_index":810,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["paddingfield",{"_index":2965,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"coverage.html":{}}}],["padfield",{"_index":3915,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["page",{"_index":4834,"title":{},"body":{"license.html":{}}}],["pair",{"_index":2182,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["pako",{"_index":2517,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["panel",{"_index":249,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["panels",{"_index":2700,"title":{},"body":{"classes/LineModel.html":{}}}],["param",{"_index":251,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["parameter",{"_index":3197,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["parameters",{"_index":358,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["parent",{"_index":1580,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{},"components/ToolbarComponent.html":{}}}],["parent.collapsed",{"_index":1581,"title":{},"body":{"classes/EnumValue.html":{}}}],["parent.docdef",{"_index":1583,"title":{},"body":{"classes/EnumValue.html":{}}}],["parent.docdef.showfields",{"_index":1584,"title":{},"body":{"classes/EnumValue.html":{}}}],["parent.iscollection",{"_index":1620,"title":{},"body":{"classes/EnumValue.html":{}}}],["parent.ispropertyorconstant",{"_index":1582,"title":{},"body":{"classes/EnumValue.html":{}}}],["parent.parentfield",{"_index":1585,"title":{},"body":{"classes/EnumValue.html":{}}}],["parentcomponent",{"_index":3635,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["parentfield",{"_index":1364,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"classes/NamespaceModel.html":{}}}],["parentfield.parentfield",{"_index":2796,"title":{},"body":{"classes/LineModel.html":{},"classes/NamespaceModel.html":{}}}],["parentfield.partofmapping",{"_index":4026,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["parentfield.partoftransformation",{"_index":4027,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["parentfieldname",{"_index":2344,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["parentobjectname",{"_index":3432,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["parentpath",{"_index":3722,"title":{},"body":{"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{}}}],["parentselectionchanged",{"_index":465,"title":{},"body":{"components/ClassNameComponent.html":{},"components/FieldEditComponent.html":{}}}],["parentselectionchanged(event",{"_index":477,"title":{},"body":{"components/ClassNameComponent.html":{},"components/FieldEditComponent.html":{}}}],["parsed",{"_index":2091,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["parsedactions",{"_index":2975,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parseddata",{"_index":2948,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parseddocid",{"_index":2969,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parseddocs",{"_index":3074,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["parseddocuri",{"_index":2970,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedindex",{"_index":2971,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedname",{"_index":2966,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedpath",{"_index":2967,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedvalue",{"_index":2968,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parsedvaluetype",{"_index":2974,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["parseint(selectedvalue",{"_index":4349,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["parseint(text.substring(position",{"_index":2042,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["parses",{"_index":1920,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["part",{"_index":4724,"title":{},"body":{"license.html":{}}}],["partial",{"_index":1788,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["particular",{"_index":4769,"title":{},"body":{"license.html":{}}}],["partofmapping",{"_index":1348,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/EnumValue.html":{}}}],["partofmappingicon",{"_index":1353,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["partofmappingiconhidden",{"_index":1354,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["partoftransformation",{"_index":1533,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["party",{"_index":4732,"title":{},"body":{"license.html":{}}}],["passed",{"_index":3989,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["patent",{"_index":4683,"title":{},"body":{"license.html":{}}}],["path",{"_index":75,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"index.html":{}}}],["path.lastindexof",{"_index":3619,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{}}}],["path.replace",{"_index":3618,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["path.substr(0",{"_index":1224,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["path.substr(path.lastindexof",{"_index":3621,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["path.substring(0",{"_index":3723,"title":{},"body":{"classes/MappingUtil.html":{}}}],["path.substring(lastseparator",{"_index":3724,"title":{},"body":{"classes/MappingUtil.html":{}}}],["paths",{"_index":1555,"title":{},"body":{"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["paths.push(field.name",{"_index":1558,"title":{},"body":{"classes/EnumValue.html":{}}}],["paths.push(field.path",{"_index":1556,"title":{},"body":{"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["pathseparator",{"_index":3923,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["patternfly",{"_index":4492,"title":{},"body":{"dependencies.html":{}}}],["peer",{"_index":4468,"title":{},"body":{"dependencies.html":{}}}],["percent",{"_index":4600,"title":{},"body":{"license.html":{}}}],["perform",{"_index":1158,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldDetailComponent.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["performance",{"_index":2487,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["period",{"_index":4253,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["permission",{"_index":4755,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":728,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["perpetual",{"_index":4671,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":4723,"title":{},"body":{"license.html":{}}}],["pficon",{"_index":4088,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{}}}],["pipe",{"_index":4078,"title":{"pipes/ToErrorIconClassPipe.html":{}},"body":{"pipes/ToErrorIconClassPipe.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["pipe(map((res",{"_index":2629,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["pipe(timeout(this.cfg.initcfg.admhttptimeout",{"_index":2539,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["pipes",{"_index":4079,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["pipetransform",{"_index":4086,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["pitests",{"_index":4546,"title":{},"body":{"index.html":{}}}],["place",{"_index":10,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/FieldEditComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["places",{"_index":4728,"title":{},"body":{"license.html":{}}}],["please",{"_index":3250,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["pointers",{"_index":1598,"title":{},"body":{"classes/EnumValue.html":{}}}],["polished",{"_index":1749,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["pom",{"_index":84,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/Examples.html":{}}}],["pompayload",{"_index":86,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["populate",{"_index":3316,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"classes/NamespaceModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["populatechildren(field",{"_index":3992,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["populatefieldaction",{"_index":2122,"title":{},"body":{"classes/FieldActionDefinition.html":{}}}],["populatefieldaction(action",{"_index":2088,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["populatefielddata(field",{"_index":4039,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["populatefieldparentpaths(field",{"_index":4029,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["populatemappinglookuptable",{"_index":2912,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["populatemappinglookuptable(mappingdefinition",{"_index":2917,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["popup",{"_index":4110,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["port",{"_index":4554,"title":{},"body":{"index.html":{}}}],["pos",{"_index":2790,"title":{},"body":{"classes/LineModel.html":{}}}],["pos['y",{"_index":2792,"title":{},"body":{"classes/LineModel.html":{}}}],["position",{"_index":778,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["position:absolute",{"_index":755,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["position:relative",{"_index":744,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["possibility",{"_index":4802,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1151,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["post",{"_index":1958,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["post.length",{"_index":1951,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["power",{"_index":4589,"title":{},"body":{"license.html":{}}}],["pre",{"_index":1950,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["pre.length",{"_index":1956,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["predefines",{"_index":3315,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["preferred",{"_index":4608,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":1850,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["preloadedfieldactionmetadata",{"_index":162,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["preloadedmappingjson",{"_index":161,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["prepare",{"_index":4679,"title":{},"body":{"license.html":{}}}],["preparecomplexfields",{"_index":4045,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["present",{"_index":2092,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["prettyname",{"_index":4234,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["preview",{"_index":896,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["previous",{"_index":3054,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldDetailComponent.html":{}}}],["previously",{"_index":3312,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["primarily",{"_index":4521,"title":{},"body":{"index.html":{}}}],["printed",{"_index":4833,"title":{},"body":{"license.html":{}}}],["private",{"_index":133,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["process",{"_index":3734,"title":{},"body":{"classes/MappingUtil.html":{},"components/ToolbarComponent.html":{}}}],["processimportedfile",{"_index":4104,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["processimportedfile(event",{"_index":4132,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["processing",{"_index":4171,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["processmappingscatalog",{"_index":4105,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["processmappingscatalog(selectedfile",{"_index":4136,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["product",{"_index":4758,"title":{},"body":{"license.html":{}}}],["production",{"_index":4848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prominent",{"_index":4716,"title":{},"body":{"license.html":{}}}],["promise",{"_index":1163,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["promise((resolve",{"_index":1204,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["promise(async(resolve",{"_index":2567,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["properties",{"_index":15,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["property",{"_index":264,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["propertycomponent",{"_index":1393,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["propertycomponent.getfield",{"_index":1406,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["propertycomponent.initialize(self.field",{"_index":1395,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["propertydoc",{"_index":157,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["propertyeditfieldcomponent",{"_index":847,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["propertyfieldeditcomponent",{"_index":442,"title":{"components/PropertyFieldEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["propertyobject",{"_index":2294,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["propertyobject.const",{"_index":2296,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["propertyobject.enum",{"_index":2302,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["propertyobject.type",{"_index":2300,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["protected",{"_index":1842,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["provide",{"_index":1122,"title":{},"body":{"modules/DataMapperModule.html":{},"license.html":{}}}],["provided",{"_index":1147,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"license.html":{}}}],["providers",{"_index":854,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}],["provides",{"_index":4765,"title":{},"body":{"license.html":{}}}],["public",{"_index":607,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{}}}],["publicly",{"_index":4680,"title":{},"body":{"license.html":{}}}],["pull",{"_index":3199,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["purpose",{"_index":4657,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":4588,"title":{},"body":{"license.html":{}}}],["push",{"_index":2483,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["pushed",{"_index":2484,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["put",{"_index":1928,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["px",{"_index":1423,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["querylist",{"_index":1293,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["quotes",{"_index":888,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["range",{"_index":1899,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["re",{"_index":3459,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["reactiveformsmodule",{"_index":1057,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["read",{"_index":344,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"classes/DataMapperUtil.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/FileManagementService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["readable",{"_index":1187,"title":{},"body":{"classes/DataMapperUtil.html":{},"license.html":{}}}],["readbinaryfile",{"_index":1132,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["readbinaryfile(filename",{"_index":1155,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["reader",{"_index":1156,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["reader.onload",{"_index":1206,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["reader.readasarraybuffer(filename",{"_index":1212,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["reader.readastext(filename",{"_index":1210,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["reader.result",{"_index":1208,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["readfile",{"_index":1133,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/ToolbarComponent.html":{}}}],["readfile(filecontent",{"_index":4140,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["readfile(filename",{"_index":1164,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["readonly",{"_index":1862,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["readonlyarray",{"_index":1887,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["reason",{"_index":4822,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":4759,"title":{},"body":{"license.html":{}}}],["reasons",{"_index":2488,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["received",{"_index":4665,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":4712,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":4832,"title":{},"body":{"license.html":{}}}],["red",{"_index":696,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{}}}],["redistributing",{"_index":4775,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":4708,"title":{},"body":{"license.html":{}}}],["redrawlinesformappings",{"_index":2738,"title":{},"body":{"classes/LineModel.html":{}}}],["redrawn",{"_index":682,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["reference",{"_index":1922,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["references",{"_index":872,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["refers",{"_index":3678,"title":{},"body":{"classes/MappingUtil.html":{}}}],["reflect",{"_index":2010,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["regarding",{"_index":4753,"title":{},"body":{"license.html":{}}}],["reinitialize",{"_index":4145,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["reject",{"_index":1205,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["reject(`could",{"_index":2248,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["reject(`fatal",{"_index":2244,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["related",{"_index":4525,"title":{},"body":{"index.html":{}}}],["relative",{"_index":779,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["remain",{"_index":4633,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":1153,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["remova",{"_index":1688,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["remove",{"_index":1413,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionComponent.html":{},"classes/MappingUtil.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["removeaction",{"_index":2950,"title":{},"body":{"classes/MappedField.html":{},"components/MappingFieldActionComponent.html":{}}}],["removeaction(action",{"_index":2958,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionComponent.html":{}}}],["removed",{"_index":1734,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["removed.field",{"_index":1991,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["removeerror",{"_index":1680,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["removeerror(identifier",{"_index":1722,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["removefield",{"_index":1246,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["removefield(event",{"_index":1289,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["removefield(field",{"_index":3002,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/NamespaceModel.html":{}}}],["removeitemfromarray",{"_index":1134,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["removeitemfromarray(item",{"_index":1167,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["removemappedfield",{"_index":3341,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["removemappedfield(mappedfield",{"_index":3016,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["removemapping",{"_index":3085,"title":{},"body":{"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{}}}],["removemapping(event",{"_index":3142,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["removemapping(m",{"_index":3109,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["removenamespace",{"_index":3844,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["removenamespace(ns",{"_index":3857,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["removestalemappings",{"_index":3665,"title":{},"body":{"classes/MappingUtil.html":{}}}],["removestalemappings(cfg",{"_index":3675,"title":{},"body":{"classes/MappingUtil.html":{}}}],["removetablebyname",{"_index":3086,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["removetablebyname(name",{"_index":3111,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["removetoken(lastfieldrefremoved",{"_index":1987,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["replace",{"_index":2007,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["replaced",{"_index":4828,"title":{},"body":{"license.html":{}}}],["repo",{"_index":4529,"title":{},"body":{"index.html":{}}}],["represent",{"_index":4630,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":4650,"title":{},"body":{"license.html":{}}}],["representing",{"_index":3207,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["reproduce",{"_index":4678,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":4762,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":4570,"title":{},"body":{"license.html":{}}}],["request",{"_index":326,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["requested",{"_index":4125,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["requests",{"_index":341,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["required",{"_index":711,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"injectables/ErrorHandlerService.html":{},"modules/ExampleAppModule.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"license.html":{}}}],["requires",{"_index":1947,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["res",{"_index":2556,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["reset",{"_index":262,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"modules/ExampleAppModule.html":{},"injectables/FileManagementService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["resetall",{"_index":1681,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ToolbarComponent.html":{}}}],["resetlibs",{"_index":2450,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["resetmappings",{"_index":2451,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["resetting",{"_index":2557,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["resolve",{"_index":83,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["resolve(bytes",{"_index":4161,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["resolve(false",{"_index":2237,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["resolve(filebody",{"_index":1209,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["resolve(true",{"_index":1214,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["respective",{"_index":2157,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["response",{"_index":2268,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["responsetype",{"_index":2545,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["responsibility",{"_index":4814,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":4771,"title":{},"body":{"license.html":{}}}],["restart",{"_index":2489,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["result",{"_index":287,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.push(fieldsbypath[name",{"_index":2984,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["resultfields",{"_index":3029,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["resultfields.push(mappedfield",{"_index":3030,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["resultfields.shift",{"_index":3031,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["resulting",{"_index":4612,"title":{},"body":{"license.html":{}}}],["results",{"_index":289,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":4720,"title":{},"body":{"license.html":{}}}],["retrieve",{"_index":2472,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["return",{"_index":175,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["returned",{"_index":2235,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["returnedcomponent",{"_index":1380,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["returning",{"_index":4142,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["returns",{"_index":311,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/FieldAction.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["revisions",{"_index":4628,"title":{},"body":{"license.html":{}}}],["revisit",{"_index":1702,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["right",{"_index":524,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["right:3px",{"_index":770,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["right_bracket",{"_index":3918,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["rights",{"_index":4810,"title":{},"body":{"license.html":{}}}],["risks",{"_index":4777,"title":{},"body":{"license.html":{}}}],["root",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["root'},{'name",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["routermodule",{"_index":1819,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["routermodule.forroot",{"_index":1824,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["routines",{"_index":2910,"title":{},"body":{"classes/LookupTableUtil.html":{},"classes/MappingUtil.html":{}}}],["row",{"_index":799,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["row.maindisplay",{"_index":803,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["row.modalwindow",{"_index":801,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["rows",{"_index":3553,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["rowtitles",{"_index":3552,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["royalty",{"_index":4675,"title":{},"body":{"license.html":{}}}],["run",{"_index":4519,"title":{},"body":{"index.html":{}}}],["running",{"_index":4551,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":2230,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["rxjs",{"_index":322,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":2522,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["safestyle",{"_index":1277,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["same",{"_index":1599,"title":{},"body":{"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"license.html":{}}}],["samenameddefs",{"_index":2311,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["samenameddefs.push(fieldactionconfig",{"_index":2314,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["sanitizer",{"_index":1253,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["save",{"_index":542,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/FileManagementService.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["saveas",{"_index":1200,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["saveas(filecontent",{"_index":1213,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["saver",{"_index":1201,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["savetable",{"_index":2847,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["saving",{"_index":2501,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["schema",{"_index":2463,"title":{},"body":{"injectables/FileManagementService.html":{},"miscellaneous/enumerations.html":{}}}],["schemas",{"_index":1041,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["scope",{"_index":1707,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/MappingUtil.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["scoped",{"_index":1690,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["screen",{"_index":741,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["scroll",{"_index":2740,"title":{},"body":{"classes/LineModel.html":{}}}],["search",{"_index":3428,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["search(searchfilter",{"_index":3531,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchboxicon",{"_index":3558,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchfilter",{"_index":3329,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchmode",{"_index":3500,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchresults",{"_index":3501,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchresultsvisible",{"_index":3512,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["searchshown",{"_index":3548,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["second",{"_index":949,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["seconds",{"_index":65,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["section",{"_index":3397,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"license.html":{}}}],["section'},{'name",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["section.component",{"_index":1089,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingSelectionComponent.html":{}}}],["section.component.html",{"_index":3630,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts",{"_index":3629,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{},"coverage.html":{}}}],["section.component.ts:27",{"_index":3640,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:28",{"_index":3639,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:29",{"_index":3643,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:30",{"_index":3642,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:31",{"_index":3644,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:32",{"_index":3641,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:33",{"_index":3638,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:35",{"_index":3645,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:46",{"_index":3648,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:53",{"_index":3646,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["section.component.ts:64",{"_index":3649,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["sectioncomponents",{"_index":3589,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["sections",{"_index":4574,"title":{},"body":{"license.html":{}}}],["see",{"_index":724,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"components/MappingFieldContainerComponent.html":{},"index.html":{},"license.html":{}}}],["select",{"_index":824,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["select#separator').combobox({clearifnomatch",{"_index":4342,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["select#separator').on('change",{"_index":4343,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selecte",{"_index":2404,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["selected",{"_index":1249,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selected.targetvalue",{"_index":2883,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedactionindex",{"_index":3309,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["selectedactionname",{"_index":3308,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selectedargvalname",{"_index":3263,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["selectedcallback",{"_index":3636,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["selectedelement",{"_index":2704,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedelement.nodename",{"_index":2706,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedfield",{"_index":1363,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingSelectionComponent.html":{}}}],["selectedfield.issource",{"_index":3627,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selectedfieldissource",{"_index":3637,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["selectedfile",{"_index":4139,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["selectedicon",{"_index":3559,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["selectedlineattrs",{"_index":2687,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedlineattrs[1].nodevalue",{"_index":2691,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedlineattrs[2].nodevalue",{"_index":2693,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedlineattrs[3].nodevalue",{"_index":2695,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedlineattrs[4].nodevalue",{"_index":2697,"title":{},"body":{"classes/LineModel.html":{}}}],["selectedmappingcomponent",{"_index":3590,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selectedmappingselectionsection",{"_index":3651,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["selectednamespace",{"_index":3838,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["selectedoptions",{"_index":2888,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedoptions.length",{"_index":2890,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedoptions[0].label",{"_index":2891,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedroot",{"_index":121,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["selectedsourcefield",{"_index":2162,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["selectedsourcefield.type",{"_index":2324,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["selectedtargetenumvalue",{"_index":2863,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["selectedtargetfield",{"_index":2168,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["selectedtargetfield.type",{"_index":2327,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["selectedtype",{"_index":2187,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["selectedvalue",{"_index":4346,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["selection'},{'name",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component",{"_index":1088,"title":{},"body":{"modules/DataMapperModule.html":{},"components/MappingDetailComponent.html":{}}}],["selection.component.html",{"_index":3588,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts",{"_index":3587,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:101",{"_index":4333,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:105",{"_index":4330,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:117",{"_index":4335,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:141",{"_index":4331,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:156",{"_index":4329,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:180",{"_index":4332,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:32",{"_index":3607,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:33",{"_index":3606,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:34",{"_index":3610,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:35",{"_index":3605,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:36",{"_index":4328,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:37",{"_index":3609,"title":{},"body":{"components/MappingSelectionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:38",{"_index":4327,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:39",{"_index":3611,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:40",{"_index":4336,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:41",{"_index":3602,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:42",{"_index":4334,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["selection.component.ts:45",{"_index":3599,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:49",{"_index":3604,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:57",{"_index":3598,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:65",{"_index":3595,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:70",{"_index":3600,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selection.component.ts:74",{"_index":3601,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selectionchanged",{"_index":3342,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{}}}],["selectionchanged(c",{"_index":3603,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["selectionchanged(event",{"_index":3370,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["selectmapping",{"_index":3138,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/MappingListComponent.html":{}}}],["selectmapping(field",{"_index":3144,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["selectmapping(mapping",{"_index":3534,"title":{},"body":{"components/MappingListComponent.html":{}}}],["selectnamespace",{"_index":3845,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["selectnamespace(ns",{"_index":3861,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["selector",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["self",{"_index":1382,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ToolbarComponent.html":{}}}],["self.cfg",{"_index":3161,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["self.cfg.mappingservice.notifymappingupdated",{"_index":1411,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["self.cfg.mappingservice.removefieldfromallmappings(self.field",{"_index":1418,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.cfg.mappingservice.selectmapping(mapping",{"_index":3166,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["self.cfg.mappingservice.selectmapping(null",{"_index":3168,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["self.field.copyfrom(newfield",{"_index":1409,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.field.docdef.removefield(self.field",{"_index":1419,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.field.docdef.updatefield(self.field",{"_index":1410,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.field.issource",{"_index":1401,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["self.getselectedmappingcomponent",{"_index":3614,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["self.selectedmappingcomponent",{"_index":3617,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["sell",{"_index":4686,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1280,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["semicolon",{"_index":4254,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["send",{"_index":2618,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["sent",{"_index":4649,"title":{},"body":{"license.html":{}}}],["separable",{"_index":4634,"title":{},"body":{"license.html":{}}}],["separate",{"_index":961,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"injectables/FileManagementService.html":{},"license.html":{}}}],["separately",{"_index":2486,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["separator",{"_index":3957,"title":{},"body":{"classes/NamespaceModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["sequence",{"_index":1843,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{}}}],["sequential",{"_index":3210,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["serializedvalue",{"_index":4235,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["serializer",{"_index":1104,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["serializer.ts",{"_index":4460,"title":{},"body":{"coverage.html":{}}}],["server",{"_index":2473,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["service",{"_index":88,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["serviceobject",{"_index":1532,"title":{},"body":{"classes/EnumValue.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["services",{"_index":869,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["services/api",{"_index":1097,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["services/document",{"_index":37,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/error",{"_index":34,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/ModalErrorDetailComponent.html":{},"classes/TextNode.html":{}}}],["services/field",{"_index":50,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/file",{"_index":53,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/initialization.service",{"_index":42,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/mapping",{"_index":40,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DocumentInitializationModel.html":{}}}],["services/types",{"_index":1095,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["set",{"_index":179,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{}}}],["setargumentvalue",{"_index":2064,"title":{},"body":{"classes/FieldAction.html":{}}}],["setargumentvalue(argumentname",{"_index":2075,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["setbinaryfiletoservice",{"_index":2452,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["setbinaryfiletoservice(compressedbuffer",{"_index":2496,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["setcfg(cfg",{"_index":2514,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["setconfig(cfg",{"_index":177,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["setconfigmodel(cfg",{"_index":1898,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["seterrors",{"_index":3754,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["seterrors(errors",{"_index":3763,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["setlinebeingformed(l",{"_index":2722,"title":{},"body":{"classes/LineModel.html":{}}}],["setmappingtoservice",{"_index":2453,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["setmappingtoservice(jsonbuffer",{"_index":2503,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["settimeout",{"_index":667,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["shall",{"_index":4572,"title":{},"body":{"license.html":{}}}],["share",{"_index":4184,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["shares",{"_index":4602,"title":{},"body":{"license.html":{}}}],["short",{"_index":587,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["shortest",{"_index":4527,"title":{},"body":{"index.html":{}}}],["show",{"_index":181,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{}}}],["showactiveerrors",{"_index":921,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["showdetails",{"_index":4180,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["showfields",{"_index":118,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/NamespaceModel.html":{}}}],["showlines",{"_index":4183,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["showlinesalways",{"_index":144,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["showlookuptable",{"_index":4326,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["showmappedfields",{"_index":146,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["showmappingdetailtray",{"_index":141,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["showmappingpreview",{"_index":185,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["showmappingpreview(show",{"_index":180,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["showmappingtable",{"_index":142,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["shownamespacetable",{"_index":143,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["showtypes",{"_index":145,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"classes/NamespaceModel.html":{},"components/ToolbarComponent.html":{}}}],["showunmappedfields",{"_index":147,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"components/ToolbarComponent.html":{}}}],["sign",{"_index":4272,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["signal",{"_index":2755,"title":{},"body":{"classes/LineModel.html":{}}}],["simplifies",{"_index":4516,"title":{},"body":{"index.html":{}}}],["simply",{"_index":3227,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["sizing",{"_index":832,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["skip",{"_index":4538,"title":{},"body":{"index.html":{}}}],["skipped",{"_index":85,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["slash",{"_index":4255,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["software",{"_index":716,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["sole",{"_index":4813,"title":{},"body":{"license.html":{}}}],["solely",{"_index":4770,"title":{},"body":{"license.html":{}}}],["solution",{"_index":4513,"title":{},"body":{"index.html":{}}}],["something",{"_index":3254,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["somethingtoshow",{"_index":3755,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["somewhere",{"_index":1320,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["sort",{"_index":3461,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["sortedactiondefinitions",{"_index":2306,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["sortedactiondefinitions.push(fieldactiondefinition",{"_index":2316,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["sortfieldactiondefinitions",{"_index":2149,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["sortmappedfieldsbypath",{"_index":2951,"title":{},"body":{"classes/MappedField.html":{}}}],["sortmappedfieldsbypath(mappedfields",{"_index":2960,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"modules/ExampleAppModule.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["source/target",{"_index":1325,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/FieldActionService.html":{},"classes/NamespaceModel.html":{}}}],["source/target/mapping",{"_index":259,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["sourcedocmap",{"_index":3687,"title":{},"body":{"classes/MappingUtil.html":{}}}],["sourcedocs",{"_index":155,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["sourceenumvalue",{"_index":2861,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["sourcefield",{"_index":2873,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["sourcefield.enumvalues",{"_index":2875,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["sourcefieldpaths",{"_index":3672,"title":{},"body":{"classes/MappingUtil.html":{}}}],["sourcefields",{"_index":2986,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["sourceiconcssclass",{"_index":3433,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["sourceidentifier",{"_index":2802,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappingDefinition.html":{}}}],["sources",{"_index":247,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/LineModel.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"index.html":{}}}],["sourcesheader",{"_index":3136,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["sourcetype",{"_index":2086,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["sourcevalue",{"_index":2815,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["sourcex",{"_index":2651,"title":{},"body":{"classes/LineModel.html":{}}}],["sourcey",{"_index":2652,"title":{},"body":{"classes/LineModel.html":{}}}],["space",{"_index":1154,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["spaces",{"_index":4281,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["special",{"_index":2221,"title":{},"body":{"injectables/FieldActionService.html":{},"license.html":{}}}],["specific",{"_index":725,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"components/MappingFieldActionArgumentComponent.html":{},"license.html":{}}}],["specified",{"_index":80,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["specify",{"_index":3257,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["specifying",{"_index":1724,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["spinner",{"_index":764,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["split",{"_index":1174,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/ErrorHandlerService.html":{}}}],["splitbystring",{"_index":1135,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["splitbystring(instr",{"_index":1171,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["splitmarker",{"_index":1172,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["spring",{"_index":4547,"title":{},"body":{"index.html":{}}}],["src",{"_index":1610,"title":{},"body":{"classes/EnumValue.html":{}}}],["src/.../config.types.ts",{"_index":4500,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../data",{"_index":4843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.dev.ts",{"_index":4844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":4845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.trace.ts",{"_index":4846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":4847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error.model.ts",{"_index":4501,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../field",{"_index":4502,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../transition.model.ts",{"_index":4503,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.ts",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/atlasmap",{"_index":4381,"title":{},"body":{"coverage.html":{}}}],["src/app/example",{"_index":1816,"title":{},"body":{"modules/ExampleAppModule.html":{}}}],["src/app/lib/atlasmap",{"_index":6,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.dev.ts",{"_index":4463,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":4464,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.trace.ts",{"_index":4465,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":4466,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stand",{"_index":900,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["standalone",{"_index":898,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"index.html":{}}}],["standard",{"_index":4358,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["start",{"_index":3330,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"index.html":{}}}],["startdrag",{"_index":1247,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["startdrag(event",{"_index":1291,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["started",{"_index":4511,"title":{"index.html":{},"license.html":{}},"body":{}}],["startoffset",{"_index":1902,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["state",{"_index":139,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"license.html":{}}}],["stated",{"_index":4684,"title":{},"body":{"license.html":{}}}],["statement",{"_index":4742,"title":{},"body":{"license.html":{}}}],["statements",{"_index":4379,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":124,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"classes/DataMapperUtil.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingUtil.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["stating",{"_index":4718,"title":{},"body":{"license.html":{}}}],["stay",{"_index":946,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["stock",{"_index":296,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/TransitionSelectionComponent.html":{}}}],["stoppage",{"_index":4795,"title":{},"body":{"license.html":{}}}],["storage",{"_index":346,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["store",{"_index":871,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{}}}],["store.find(e",{"_index":1759,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["store.unshift(error",{"_index":1761,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["stored",{"_index":1649,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{}}}],["storeerrors",{"_index":3513,"title":{},"body":{"components/MappingListComponent.html":{}}}],["storeerrors(errors",{"_index":3536,"title":{},"body":{"components/MappingListComponent.html":{}}}],["str",{"_index":1180,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["str2bytes",{"_index":1136,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["str2bytes(str",{"_index":1177,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["stream",{"_index":2204,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["string",{"_index":68,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["strip",{"_index":3956,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["stroke",{"_index":2653,"title":{},"body":{"classes/LineModel.html":{}}}],["style",{"_index":2654,"title":{},"body":{"classes/LineModel.html":{}}}],["style:italic",{"_index":830,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["styles",{"_index":595,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["styleurls",{"_index":604,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["subject",{"_index":1448,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{},"license.html":{}}}],["sublicense",{"_index":4681,"title":{},"body":{"license.html":{}}}],["submission",{"_index":4744,"title":{},"body":{"license.html":{}}}],["submit",{"_index":4643,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":4641,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1682,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["subscribe(observer",{"_index":1728,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["subscriber",{"_index":1926,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["subscription",{"_index":638,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingListComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["subsequently",{"_index":4666,"title":{},"body":{"license.html":{}}}],["substring",{"_index":1175,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["such",{"_index":4594,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":4224,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["super",{"_index":3911,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["super(fieldnode.prefix",{"_index":1869,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["super(textnode.prefix",{"_index":1864,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["supersede",{"_index":4750,"title":{},"body":{"license.html":{}}}],["supersedes",{"_index":4341,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["support",{"_index":1281,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{},"modules.html":{}}}],["supported",{"_index":4058,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["supports",{"_index":4211,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["supposed",{"_index":1661,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["sure",{"_index":1416,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["svg",{"_index":846,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules.html":{}}}],["svgstyle",{"_index":2671,"title":{},"body":{"classes/LineModel.html":{}}}],["switch",{"_index":4291,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["switched",{"_index":1657,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["syndesis",{"_index":4523,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":1973,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"license.html":{}}}],["system",{"_index":903,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["systeminitializedsubscription",{"_index":618,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["systems",{"_index":4653,"title":{},"body":{"license.html":{}}}],["t",{"_index":2938,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["t.name",{"_index":2943,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["t.sourceidentifier",{"_index":2940,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["t.targetidentifier",{"_index":2941,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["table",{"_index":2837,"title":{},"body":{"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["table.component",{"_index":1091,"title":{},"body":{"modules/DataMapperModule.html":{},"components/TransitionSelectionComponent.html":{}}}],["table.component.html",{"_index":2845,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["table.component.ts",{"_index":2844,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"coverage.html":{}}}],["table.component.ts:28",{"_index":2899,"title":{},"body":{"classes/LookupTableData.html":{}}}],["table.component.ts:29",{"_index":2900,"title":{},"body":{"classes/LookupTableData.html":{}}}],["table.component.ts:30",{"_index":2898,"title":{},"body":{"classes/LookupTableData.html":{}}}],["table.component.ts:39",{"_index":2855,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:41",{"_index":2858,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:42",{"_index":2854,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:44",{"_index":2857,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:46",{"_index":2850,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:75",{"_index":2851,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:79",{"_index":2848,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.component.ts:83",{"_index":2852,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["table.entries",{"_index":4370,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["table.entries.length",{"_index":4371,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["table.getinputoutputkey",{"_index":3125,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["table.model",{"_index":2860,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableUtil.html":{},"classes/MappingDefinition.html":{},"components/TransitionSelectionComponent.html":{}}}],["table.model.ts",{"_index":2801,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"coverage.html":{}}}],["table.model.ts:18",{"_index":2903,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:19",{"_index":2902,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:20",{"_index":2905,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:21",{"_index":2904,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:23",{"_index":2907,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:32",{"_index":2906,"title":{},"body":{"classes/LookupTableEntry.html":{}}}],["table.model.ts:41",{"_index":2810,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:42",{"_index":2809,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:43",{"_index":2811,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:44",{"_index":2807,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:50",{"_index":2816,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:54",{"_index":2814,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.model.ts:69",{"_index":2817,"title":{},"body":{"classes/LookupTable.html":{}}}],["table.name",{"_index":2937,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["table.sourceidentifier",{"_index":2934,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["table.targetidentifier",{"_index":2935,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["tabledata",{"_index":2876,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["tabledata.selectedtargetenumvalue",{"_index":2882,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["tabledata.sourceenumvalue",{"_index":2877,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["tabledata.targetenumvalues",{"_index":2879,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["tablename",{"_index":4367,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["tables",{"_index":3075,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["tables.push(table",{"_index":3123,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["tablesbyname",{"_index":3076,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["tablesbysourcetargetkey",{"_index":3077,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":4467,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":890,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["tack",{"_index":4223,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["target",{"_index":1611,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["target'.includes(filter",{"_index":3877,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["targetdoc",{"_index":4213,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["targetdoc.type",{"_index":4216,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["targetdocmap",{"_index":3689,"title":{},"body":{"classes/MappingUtil.html":{}}}],["targetdocs",{"_index":156,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["targetenabled",{"_index":3817,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["targetenumvalue",{"_index":2897,"title":{},"body":{"components/LookupTableComponent.html":{}}}],["targetenumvalues",{"_index":2862,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetfield",{"_index":2320,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/NamespaceModel.html":{}}}],["targetfield.enumvalues",{"_index":2867,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetfield.name",{"_index":2322,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/NamespaceModel.html":{}}}],["targetfielddocdeftype",{"_index":3937,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["targetfieldnode.field",{"_index":1996,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetfields",{"_index":2987,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["targetidentifier",{"_index":2803,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappingDefinition.html":{}}}],["targetindex",{"_index":3484,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["targetnode",{"_index":1905,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetnode.str",{"_index":1912,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetnode.str.replace(targetnode.str.substring(startoffset",{"_index":1916,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetnode.str.substring(0",{"_index":1913,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetnodeindex",{"_index":1906,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targets",{"_index":248,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"classes/LineModel.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["targetsourcepaths",{"_index":3673,"title":{},"body":{"classes/MappingUtil.html":{}}}],["targetstring",{"_index":2000,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetstring.substr(1",{"_index":2001,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetstring.substring(0",{"_index":2002,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetstring.substring(offset",{"_index":2003,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["targetsupportstemplate",{"_index":4094,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["targettoggled",{"_index":3818,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["targettype",{"_index":849,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["targetvalue",{"_index":2818,"title":{},"body":{"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{}}}],["targetvalues",{"_index":2865,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetvalues.push",{"_index":2866,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetvalues.push(e.name",{"_index":2868,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["targetx",{"_index":2655,"title":{},"body":{"classes/LineModel.html":{}}}],["targety",{"_index":2656,"title":{},"body":{"classes/LineModel.html":{}}}],["template",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["templatecomponent",{"_index":4219,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["templatecomponent.templatetext",{"_index":4220,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["templateeditcomponent",{"_index":443,"title":{"components/TemplateEditComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["templateexists",{"_index":3087,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["templatetext",{"_index":3078,"title":{},"body":{"classes/MappingDefinition.html":{},"components/TemplateEditComponent.html":{}}}],["templateurl",{"_index":455,"title":{},"body":{"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["terminal",{"_index":3990,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["terminalfields",{"_index":3925,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["terminate",{"_index":4706,"title":{},"body":{"license.html":{}}}],["terminating",{"_index":2008,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["terms",{"_index":4569,"title":{},"body":{"license.html":{}}}],["test",{"_index":1832,"title":{},"body":{"classes/Examples.html":{}}}],["test.model",{"_index":1829,"title":{},"body":{"classes/Examples.html":{}}}],["tests",{"_index":4539,"title":{},"body":{"index.html":{}}}],["text",{"_index":761,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"license.html":{}}}],["text.indexof",{"_index":2044,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["text.length",{"_index":2050,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["text.search(/\\$\\{[0",{"_index":2039,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["text.substring(text.indexof",{"_index":2049,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textarea",{"_index":826,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["textcache",{"_index":1881,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textinput",{"_index":3278,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["textnode",{"_index":1860,"title":{"classes/TextNode.html":{}},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"coverage.html":{}}}],["textnode(post",{"_index":1962,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textnode(text",{"_index":2051,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textnode(text.substring(0",{"_index":2041,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textnode).str",{"_index":1944,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["textnode).str.length",{"_index":1978,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["that.cfg.errorservice.error('the",{"_index":4361,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.cfg.mappingservice.notifymappingupdated",{"_index":4350,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.cfg.mappingservice.updatemappedfield(that.fieldpair",{"_index":4366,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.children",{"_index":1617,"title":{},"body":{"classes/EnumValue.html":{}}}],["that.docdef",{"_index":1616,"title":{},"body":{"classes/EnumValue.html":{}}}],["that.fieldpair.transition.delimiter",{"_index":4364,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.fieldpair.transition.userdelimiter",{"_index":4365,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.mapping.transition.delimiter",{"_index":4348,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.mapping.transition.userdelimiter",{"_index":4353,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["that.parentfield",{"_index":1615,"title":{},"body":{"classes/EnumValue.html":{}}}],["that.serviceobject",{"_index":1614,"title":{},"body":{"classes/EnumValue.html":{}}}],["themselves",{"_index":683,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["then((fetchedactionconfigs",{"_index":2232,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["then(async(result",{"_index":2599,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["theory",{"_index":4780,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":4637,"title":{},"body":{"license.html":{}}}],["they've",{"_index":3253,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["third",{"_index":4731,"title":{},"body":{"license.html":{}}}],["this).find('option:selected",{"_index":4345,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this).find('option:selected').val(that.mapping.transition.userdelimiter",{"_index":4356,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this).val",{"_index":4352,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this).val(that.mapping.transition.userdelimiter).trigger('input",{"_index":4357,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this._cfg",{"_index":2523,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this._cfg.logger",{"_index":2525,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this._identifier",{"_index":1808,"title":{},"body":{"classes/ErrorInfo.html":{}}}],["this._issource",{"_index":3914,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this._nodes",{"_index":1888,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.filter(n",{"_index":2019,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.find(n",{"_index":1896,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.foreach(node",{"_index":2034,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.indexof(lastnode",{"_index":1911,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.indexof(node",{"_index":2022,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.indexof(targetnode",{"_index":1914,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.length",{"_index":1890,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.pop",{"_index":1989,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.push(...newnodes",{"_index":1941,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.push(lastnode",{"_index":2053,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.push(new",{"_index":2055,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(index",{"_index":2023,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(lastaddedindex",{"_index":1975,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(nextnodeindex",{"_index":1986,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(targetnodeindex",{"_index":1964,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes.splice(this.getlastnodeindex",{"_index":1946,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[index",{"_index":2024,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[lastaddedindex",{"_index":1966,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[nextnodeindex",{"_index":1982,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[targetnodeindex",{"_index":1998,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._nodes[this.getlastnodeindex",{"_index":1892,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this._showmappingpreview",{"_index":182,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this._type",{"_index":3931,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.action",{"_index":3239,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.actionconfigparamselectionchanged(event",{"_index":3242,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.actions",{"_index":2251,"title":{},"body":{"injectables/FieldActionService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.actions[action.multiplicity].push(action",{"_index":2241,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.actions[fieldactiondefinition.multiplicity].push(fieldactiondefinition",{"_index":2223,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.actions[m",{"_index":2337,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.actions[multiplicity",{"_index":2252,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.actions[multiplicity].filter(d",{"_index":2257,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.activemapping",{"_index":3129,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.actualdelimiter",{"_index":4261,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.adderror(new",{"_index":1779,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.addline(l",{"_index":2718,"title":{},"body":{"classes/LineModel.html":{}}}],["this.addlinefromparams('0",{"_index":2786,"title":{},"body":{"classes/LineModel.html":{}}}],["this.alias",{"_index":3907,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.allfields",{"_index":4005,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.allfields.push(field",{"_index":4041,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.alphabetizefields(field.children",{"_index":1573,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.appendfieldnode(f",{"_index":1885,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.appendfieldnode(mfield",{"_index":2029,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.appliestofield(d",{"_index":2258,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.appliestosourcefield(action",{"_index":2318,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.appliestotargetfield(action",{"_index":2319,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.arguments",{"_index":2096,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.argumentvalues",{"_index":2108,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.argumentvalues.push(newargvalue",{"_index":2113,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.buttonclicked(false",{"_index":1504,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cancelbuttonhandler",{"_index":1514,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cancelbuttonhandler(this",{"_index":1522,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cfg",{"_index":969,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"classes/TextNode.html":{}}}],["this.cfg.cleardocs",{"_index":2616,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.currentdraggedfield",{"_index":1313,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["this.cfg.currentdraggedfield.issource",{"_index":1331,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.currentdraggedfield.selected",{"_index":1336,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.documentservice.processdocument(event.target.files[0",{"_index":4175,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.errorservice.adderror(new",{"_index":2004,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.errorservice.clearallerrors",{"_index":3780,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.cfg.errorservice.clearfielderrors",{"_index":3246,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.cfg.errorservice.clearformerrors",{"_index":1517,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cfg.errorservice.clearvalidationerrors",{"_index":3164,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.errorservice.createformerrorchannel",{"_index":1501,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.cfg.errorservice.isrequiredfieldvalid(this.userclassname",{"_index":495,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["this.cfg.errorservice.resetall",{"_index":4170,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.errorservice.subscribe(errors",{"_index":3545,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.cfg.fieldactionservice.getactiondefinitionforname(selectedactionname",{"_index":3313,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.fieldactionservice.getactionsappliestofield(this.mapping",{"_index":3304,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.fileservice.exportmappingscatalog(filename",{"_index":4229,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.fileservice.importadmcatalog(selectedfile",{"_index":4178,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.fileservice.resetlibs().topromise().then",{"_index":4173,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.fileservice.resetmappings().topromise().then",{"_index":4172,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.getalldocs",{"_index":2585,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.getfirstxmldoc(false).namespaces",{"_index":3867,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.cfg.getfirstxmldoc(false).namespaces.push(newnamespace",{"_index":3875,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.cfg.initcfg.basemappingserviceurl",{"_index":2228,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["this.cfg.initcfg.initialized",{"_index":2636,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/LineModel.html":{}}}],["this.cfg.initcfg.xsrfdefaulttokenvalue",{"_index":325,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["this.cfg.initcfg.xsrfheadername",{"_index":347,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["this.cfg.initializationservice.initialize",{"_index":2617,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.initializationservice.systeminitializedsource.next",{"_index":4206,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.initializationservice.updateloadingstatus('importing",{"_index":4177,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.isdebugenabled",{"_index":2278,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.istraceenabled",{"_index":2266,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["this.cfg.logger.debug(`deserializing",{"_index":2279,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.logger.trace('field",{"_index":2262,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.logger.trace('mapping",{"_index":2527,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.logger.trace('set",{"_index":2565,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.logger.trace(`field",{"_index":2267,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.logger.trace(`mapping",{"_index":2528,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.logger.trace(`set",{"_index":2566,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappingfiles",{"_index":2624,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappingfiles.length",{"_index":2635,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappingfiles[0",{"_index":2619,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappings",{"_index":976,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.activemapping",{"_index":977,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/MappingListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.mappings.activemapping.getfields(this.field.issource()).includes(this.field",{"_index":1425,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.mappings.activemapping.islookupmode",{"_index":3152,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappings.activemapping.transition",{"_index":4191,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.activemapping.transition.enableexpression",{"_index":4192,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.findmappingsforfield(field",{"_index":3158,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappings.getallmappings(true",{"_index":3566,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.cfg.mappings.gettablebyname(tablename",{"_index":4369,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this.cfg.mappings.mappings",{"_index":2745,"title":{},"body":{"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.cfg.mappings.name",{"_index":2620,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.cfg.mappings.removetablebyname(activemapping.transition.lookuptablename",{"_index":3155,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappings.templateexists",{"_index":4182,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappings.templatetext",{"_index":4221,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappingservice",{"_index":2226,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.mappingservice.addnewmapping(null",{"_index":4196,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappingservice.addnewmapping(this.selectedfield",{"_index":3622,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.cfg.mappingservice.addplaceholders(insertionindex",{"_index":3487,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.fieldselected(event.item['field",{"_index":3429,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.cfg.mappingservice.fieldselected(targetfield",{"_index":2708,"title":{},"body":{"classes/LineModel.html":{}}}],["this.cfg.mappingservice.fieldselected(this.cfg.currentdraggedfield",{"_index":1337,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.fieldselected(this.field",{"_index":1340,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.mappingselectionrequired$.subscribe((field",{"_index":3149,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappingservice.mappingupdated$.subscribe",{"_index":2677,"title":{},"body":{"classes/LineModel.html":{}}}],["this.cfg.mappingservice.movemappedfieldto(this.mapping",{"_index":3409,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["this.cfg.mappingservice.notifymappingupdated",{"_index":3241,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.cfg.mappingservice.removeallmappings",{"_index":4218,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappingservice.removemapping(activemapping",{"_index":3156,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.cfg.mappingservice.selectmapping(mapping",{"_index":3551,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.cfg.mappingservice.toggleexpressionmode",{"_index":4200,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.mappingservice.updatemappedfield(this.mapping",{"_index":3431,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["this.cfg.preloadedfieldactionmetadata",{"_index":2210,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.preloadedfieldactionmetadata.actiondetails",{"_index":2212,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.preloadedfieldactionmetadata.actiondetails.actiondetail",{"_index":2213,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.cfg.showlinesalways",{"_index":2785,"title":{},"body":{"classes/LineModel.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.showmappedfields",{"_index":1350,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.showmappingdetailtray",{"_index":3157,"title":{},"body":{"components/MappingDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.showmappingpreview",{"_index":4197,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.showmappingtable",{"_index":4186,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.shownamespacetable",{"_index":4187,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.showtypes",{"_index":4195,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.cfg.showunmappedfields",{"_index":1351,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.cfg.targetdocs[0",{"_index":4214,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.checkfieldeligibiltyforlinedrawing(inputfield",{"_index":2771,"title":{},"body":{"classes/LineModel.html":{}}}],["this.checkfieldeligibiltyforlinedrawing(outputfield",{"_index":2780,"title":{},"body":{"classes/LineModel.html":{}}}],["this.checkiconenabled",{"_index":3240,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.children",{"_index":1607,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.children.push(childfield.copy",{"_index":1618,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.classidentifier",{"_index":3912,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.clearactiondefinitions",{"_index":2211,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.clearallerrors",{"_index":1767,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.clearlines",{"_index":2739,"title":{},"body":{"classes/LineModel.html":{}}}],["this.clearmappings",{"_index":4198,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.close",{"_index":1523,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.collapsed",{"_index":520,"title":{},"body":{"components/CollapsableHeaderComponent.html":{}}}],["this.complexfieldsbyclassidentifier",{"_index":4008,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.complexfieldsbyclassidentifier.hasownproperty(key",{"_index":4049,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.complexfieldsbyclassidentifier[classidentifier",{"_index":3933,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.complexfieldsbyclassidentifier[field.classidentifier",{"_index":4059,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.complexfieldsbyclassidentifier[key",{"_index":4050,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.nestedcomponenttype",{"_index":1492,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.componentloaded",{"_index":1479,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.confirmbuttondisabled",{"_index":1508,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.confirmbuttontext",{"_index":1509,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.constantdoc.clearfields",{"_index":268,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc.issource",{"_index":172,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc.name",{"_index":170,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc.showfields",{"_index":173,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc.type",{"_index":168,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc].concat(docs",{"_index":244,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.constantdoc].concat(this.sourcedocs).concat(this.targetdocs",{"_index":284,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.createlinestyle(l",{"_index":2720,"title":{},"body":{"classes/LineModel.html":{}}}],["this.data",{"_index":2885,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.datasource",{"_index":2370,"title":{},"body":{"components/FieldEditComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["this.delimiter",{"_index":4258,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.delimiters",{"_index":3235,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.detector.detectchanges",{"_index":668,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/EmptyModalBodyComponent.html":{},"classes/LineModel.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.diff",{"_index":3391,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.discovercomplexfields(field.children",{"_index":4060,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.discovercomplexfields(fields",{"_index":4048,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.displayname",{"_index":3913,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.docdef",{"_index":493,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"classes/EnumValue.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.docdef.fieldexists(this.getfield",{"_index":575,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.docdef.getallfields",{"_index":2407,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.docdef.ispropertyorconstant",{"_index":1638,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.docdef.issource",{"_index":1627,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.docdef.type",{"_index":1639,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{}}}],["this.docdefinput",{"_index":2774,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefinput.handlescroll(null",{"_index":2743,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefinput.setlinemachine(this",{"_index":2679,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefoutput",{"_index":2742,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefoutput.getfielddetailcomponentposition(component.field).y",{"_index":2733,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefoutput.handlescroll(null",{"_index":2744,"title":{},"body":{"classes/LineModel.html":{}}}],["this.docdefoutput.setlinemachine(this",{"_index":2680,"title":{},"body":{"classes/LineModel.html":{}}}],["this.dofetchfieldactions().topromise",{"_index":2231,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.drawcurrentline('100",{"_index":2734,"title":{},"body":{"classes/LineModel.html":{}}}],["this.drawcurrentline(event.offsetx.tostring",{"_index":2727,"title":{},"body":{"classes/LineModel.html":{}}}],["this.drawingline",{"_index":2725,"title":{},"body":{"classes/LineModel.html":{}}}],["this.drawlinesformapping(activemapping",{"_index":2750,"title":{},"body":{"classes/LineModel.html":{}}}],["this.drawlinesformapping(m",{"_index":2749,"title":{},"body":{"classes/LineModel.html":{}}}],["this.editmode",{"_index":2373,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.edittemplate",{"_index":4194,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.elem",{"_index":986,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["this.elem.onmouseup",{"_index":3404,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.elem.style.position",{"_index":3403,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.elem.style['top",{"_index":3393,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.elementref.nativeelement.focus",{"_index":2647,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.emitupdatedevent",{"_index":1762,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.emitupdatedevent(errorscope.form",{"_index":1774,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.enablecheck",{"_index":3270,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.entries",{"_index":2834,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.entries.length",{"_index":2838,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.entries.push(entry",{"_index":2836,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.enumeration",{"_index":1595,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.enumfieldsbyclassidentifier",{"_index":4009,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.enumfieldsbyclassidentifier[classidentifier",{"_index":3935,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.enumfieldsbyclassidentifier[field.classidentifier",{"_index":4043,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.errors",{"_index":972,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.errors.filter(e",{"_index":1770,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.errors.length",{"_index":3778,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["this.errorservice",{"_index":974,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.errorservice.removeerror(e.identifier",{"_index":983,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.errorservice.removeerror(error.identifier",{"_index":3750,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["this.errorservice.subscribe((errors",{"_index":971,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.errorsubscription",{"_index":970,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingListComponent.html":{}}}],["this.errorsubscription.unsubscribe",{"_index":973,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/MappingListComponent.html":{}}}],["this.errorupdatedsource.next(this.errors",{"_index":1782,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.errorupdatedsource.subscribe(observer",{"_index":1775,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.excludebyidentifier(this.errors",{"_index":1766,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.excludebyidentifier(this.formerrors",{"_index":1765,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.expressionupdatedsource.asobservable",{"_index":1879,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.expressionupdatedsource.next",{"_index":1918,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.expressionupdatedsource.next(updatedevent",{"_index":1979,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.extractfieldactiondefinition(actiondetail",{"_index":2214,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.fade",{"_index":1506,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.field",{"_index":562,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{}}}],["this.field.collapsed",{"_index":1374,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.displayname",{"_index":566,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.docdef",{"_index":572,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.docdef.type",{"_index":1345,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.enumeration",{"_index":1341,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.field",{"_index":1873,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.field.field.name",{"_index":1874,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.field.fielddepth",{"_index":1420,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.hasunmappedchildren",{"_index":1358,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.isattribute",{"_index":1346,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{}}}],["this.field.iscollection",{"_index":1343,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.isconstant",{"_index":1389,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.isproperty",{"_index":1387,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.ispropertyorconstant",{"_index":1414,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.issource",{"_index":1330,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.field.isterminal",{"_index":1306,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.name",{"_index":568,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.name.length",{"_index":1424,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.namespacealias",{"_index":2382,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.field.parentfield",{"_index":2374,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.field.partofmapping",{"_index":1349,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.partoftransformation",{"_index":1352,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.field.path",{"_index":569,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.serviceobject.jsontype",{"_index":2414,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.field.type",{"_index":570,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.usercreated",{"_index":571,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.field.value",{"_index":567,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["this.fieldcomponents.toarray",{"_index":1379,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.fielddetailelement.nativeelement",{"_index":1369,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.fieldmode",{"_index":559,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.fieldpairmatchessearch(mapping",{"_index":3567,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.fieldpaths",{"_index":3984,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldpaths.push(field.path",{"_index":4040,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldpaths.sort",{"_index":3976,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fields",{"_index":3973,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fields.push(field",{"_index":3985,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath",{"_index":4007,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath[currentparentpath",{"_index":3963,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath[field.path",{"_index":4011,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath[fieldpath",{"_index":3951,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldsbypath[oldpath",{"_index":3982,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.fieldtype",{"_index":2376,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.filedata",{"_index":4208,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.focus",{"_index":2645,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.focusel",{"_index":496,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{}}}],["this.formerrors",{"_index":1758,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.formerrorupdatedsource",{"_index":1768,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.formerrorupdatedsource.closed",{"_index":1764,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.formerrorupdatedsource.complete",{"_index":1769,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.formerrorupdatedsource.next(this.formerrors",{"_index":1781,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.formerrorupdatedsource.subscribe",{"_index":1776,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["this.getactualfield(mapping",{"_index":2317,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.getalldocs",{"_index":271,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.getallfields",{"_index":3939,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.getallmappedfields",{"_index":3044,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getargumentvalue(argumentname).value",{"_index":2114,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{}}}],["this.getcollectionparentfield",{"_index":1622,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.getcomplexfield(field.classidentifier",{"_index":3994,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.getconfig().initcfg.loadingstatus",{"_index":666,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.getconfig().initializationservice.initializationstatuschanged$.subscribe",{"_index":664,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.getconfig().initializationservice.systeminitialized$.subscribe",{"_index":661,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.getconfig().sourcedocs",{"_index":671,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.getconfig().sourcedocs.length",{"_index":672,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.getconfig().targetdocs",{"_index":675,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.getconfig().targetdocs.length",{"_index":676,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.getcurrentadmcatalog().subscribe",{"_index":2601,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getcurrentmappingjson().topromise().then((result",{"_index":2621,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getdocs(issource",{"_index":278,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.getdocswithoutpropertydoc(issource",{"_index":242,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.geterrors()[0",{"_index":995,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.getfield(fieldpath",{"_index":3947,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.getfields(field.getfieldpaths(fields",{"_index":3944,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.getfields(issource",{"_index":3038,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getfields(true).concat(this.getfields(false",{"_index":3047,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getjsonbuf",{"_index":2574,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getlastnode",{"_index":1895,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.getmappedfieldactions()[actionindex",{"_index":3271,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.getmappedfieldactions()[selectedactionindex",{"_index":3310,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["this.getmappedfieldforfield(field",{"_index":3051,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(field.issource",{"_index":3003,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(field.issource()).push(mappedfield",{"_index":3001,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(field.issource()).unshift(mappedfield",{"_index":3000,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(issource",{"_index":3021,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(issource).push(mappedfield",{"_index":3015,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(mappedfield.field.issource",{"_index":3018,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(mappedfield.field.issource()).indexof(mappedfield",{"_index":3024,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappedfields(true).concat(this.getmappedfields(false",{"_index":3049,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.getmappingid",{"_index":2562,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getmappingid()).topromise",{"_index":2598,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getmappingid()).topromise().then",{"_index":2614,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.getnamewithnamespace",{"_index":1633,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.getparentobjectname",{"_index":3491,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.getscreenposforfield(inputfield",{"_index":2773,"title":{},"body":{"classes/LineModel.html":{}}}],["this.getscreenposforfield(outputfield",{"_index":2783,"title":{},"body":{"classes/LineModel.html":{}}}],["this.getselectedmappingcomponent().mapping",{"_index":3624,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.getsourceiconcssclass",{"_index":3490,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.gettargetfieldfromline(selectedelement.attributes",{"_index":2707,"title":{},"body":{"classes/LineModel.html":{}}}],["this.getwarnings()[0",{"_index":996,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.handleerror('error",{"_index":2536,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.hasfocus",{"_index":2646,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.hassourcedoc",{"_index":670,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.hastargetdoc",{"_index":674,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.headers",{"_index":2264,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["this.headertext",{"_index":1511,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.htmlcache",{"_index":2031,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.http.delete(url",{"_index":2552,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.http.get(url",{"_index":2263,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["this.http.put(url",{"_index":2563,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.initcfg.classpath",{"_index":274,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.initializationservice.cfg",{"_index":870,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["this.initializationservice.initialize",{"_index":904,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["this.initializationstatuschangedsubscription",{"_index":663,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.initializationstatuschangedsubscription.unsubscribe",{"_index":678,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.initialized",{"_index":3977,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.inputid",{"_index":3384,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.insertnodes([new",{"_index":2027,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.insertnodes(this.createnodesfromtext(str",{"_index":1933,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.isarray",{"_index":1629,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.isclosing",{"_index":565,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.iscollection",{"_index":1590,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.isdragdroptarget",{"_index":1332,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["this.isinitialized",{"_index":2225,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.isoddrow",{"_index":3652,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["this.isopen",{"_index":982,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.isprimitive",{"_index":1591,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.isproperty",{"_index":1635,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.ispropertyorconstant",{"_index":1634,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["this.issource",{"_index":3305,"title":{},"body":{"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.issource)[0",{"_index":3471,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.istarget",{"_index":3908,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.isxml",{"_index":2375,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.jsonbuffer",{"_index":2622,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.left_bracket",{"_index":4034,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.linebeingformed",{"_index":2723,"title":{},"body":{"classes/LineModel.html":{}}}],["this.linebeingformed.targetx",{"_index":2730,"title":{},"body":{"classes/LineModel.html":{}}}],["this.linebeingformed.targety",{"_index":2731,"title":{},"body":{"classes/LineModel.html":{}}}],["this.linemachine",{"_index":690,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["this.linemachine.handledocumentfieldmouseover(this",{"_index":1373,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.linemachine.redrawlinesformappings",{"_index":691,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["this.linemachineelement.nativeelement",{"_index":2761,"title":{},"body":{"classes/LineModel.html":{}}}],["this.lines",{"_index":2690,"title":{},"body":{"classes/LineModel.html":{}}}],["this.lines.push(l",{"_index":2721,"title":{},"body":{"classes/LineModel.html":{}}}],["this.loadcomponent",{"_index":1483,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.loadingstatus",{"_index":665,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.logger",{"_index":2526,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.logger.debug('no",{"_index":2234,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.logger.debug(`field",{"_index":2216,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.logger.getconfigsnapshot().level",{"_index":190,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.lookuptablename",{"_index":4300,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.mappedfield",{"_index":3237,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.actions",{"_index":3238,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{}}}],["this.mappedfield.actions.push(action",{"_index":3473,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.actions[actionindex",{"_index":3267,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.mappedfield.field",{"_index":3474,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.field.docdef",{"_index":3478,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.field.docdef.getname(configmodel.getconfig().showtypes",{"_index":3492,"title":{},"body":{"components/MappingFieldDetailComponent.html":{},"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.field.getfieldlabel(configmodel.getconfig().showtypes",{"_index":3586,"title":{},"body":{"components/MappingListFieldComponent.html":{}}}],["this.mappedfield.field.name",{"_index":3477,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.field.name.length",{"_index":3469,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.field.path",{"_index":3475,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.ispadfield",{"_index":3468,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mappedfield.parseddata.usercreated",{"_index":3258,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.mappedfield.removeaction(action",{"_index":3307,"title":{},"body":{"components/MappingFieldActionComponent.html":{}}}],["this.mapping",{"_index":2006,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingFieldDetailComponent.html":{},"classes/TextNode.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.mapping.getindexformappedfield(insertbeforemappedfield",{"_index":3410,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.getindexformappedfield(this.field",{"_index":1872,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.mapping.getmappedfields(mappedfield.issource",{"_index":3483,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mapping.getmappedfields(this.issource",{"_index":3420,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.getmappedfields(this.issource).length",{"_index":3480,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.mapping.getusermappedfields(true).foreach(f",{"_index":1884,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.mapping.removemappedfield(mappedfield",{"_index":3430,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["this.mapping.transition",{"_index":3414,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.transition.enableexpression",{"_index":3415,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{}}}],["this.mapping.transition.expression.updatefieldreference(this.mapping",{"_index":3416,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.transition.isenumerationmode",{"_index":3419,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.mapping.transition.ismanytoonemode",{"_index":3418,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.transition.isonetomanymode",{"_index":3417,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.mapping.transition.lookuptablename",{"_index":4368,"title":{},"body":{"components/TransitionSelectionComponent.html":{}}}],["this.mapping.transition.mode",{"_index":3422,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.mappingchanged",{"_index":2678,"title":{},"body":{"classes/LineModel.html":{}}}],["this.mappingfiles",{"_index":269,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.mappings",{"_index":3132,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.mappingselectionrequiredsubscription",{"_index":3148,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.mappingselectionrequiredsubscription.unsubscribe",{"_index":3151,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.mappingservice.disablemappingpreview",{"_index":184,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.mappingservice.enablemappingpreview",{"_index":183,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.mappingsfilename",{"_index":4207,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.mappingsfilename.length",{"_index":4228,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.mappingupdatedsubscription",{"_index":2676,"title":{},"body":{"classes/LineModel.html":{}}}],["this.mappingupdatedsubscription.unsubscribe",{"_index":2681,"title":{},"body":{"classes/LineModel.html":{}}}],["this.matchesdate(action.sourcetype",{"_index":2323,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.matchesdate(action.targettype",{"_index":2328,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.matchesnumeric(action.sourcetype",{"_index":2325,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.matchesnumeric(action.targettype",{"_index":2329,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.message",{"_index":1510,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorsubject",{"_index":1486,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorsubject.closed",{"_index":1500,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorsubject.complete",{"_index":1487,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorsubject.subscribe((errors",{"_index":1502,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorsubscription",{"_index":1484,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorsubscription.unsubscribe",{"_index":1485,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.modalerrorwindow.reset",{"_index":992,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.modalerrorwindow.seterrors(errorhandlerservice.filterwith(this.errors",{"_index":993,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.modalerrorwindow.show",{"_index":994,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.modalwindow",{"_index":1396,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{}}}],["this.modalwindow.cancelbuttonhandler",{"_index":3167,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.modalwindow.close",{"_index":3623,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.modalwindow.confirmbuttontext",{"_index":1385,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.headertext",{"_index":1390,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.message",{"_index":1415,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.modalwindow.nestedcomponentinitializedcallback",{"_index":1391,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.nestedcomponenttype",{"_index":1403,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.okbuttonhandler",{"_index":1404,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.reset",{"_index":1384,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindow.show",{"_index":1412,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["this.modalwindowcomponent",{"_index":564,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.modalwindowcomponent.confirmbuttondisabled",{"_index":576,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.modalwindowcomponent.visible",{"_index":574,"title":{},"body":{"components/ConstantFieldEditComponent.html":{}}}],["this.mode",{"_index":4298,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.mouseeventtimer",{"_index":985,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.mytarget",{"_index":1481,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytarget.changes.subscribe(changes",{"_index":1478,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytarget.toarray().length",{"_index":1482,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytarget.toarray()[0",{"_index":1489,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytargetchangessubscription",{"_index":1472,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.mytargetchangessubscription.unsubscribe",{"_index":1473,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.name",{"_index":1588,"title":{},"body":{"classes/EnumValue.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappingDefinition.html":{},"classes/NamespaceModel.html":{}}}],["this.namespace",{"_index":3826,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["this.namespace.alias",{"_index":3832,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["this.namespace.istarget",{"_index":3831,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["this.namespacealias",{"_index":1587,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{}}}],["this.namespacematchessearch(ns",{"_index":3885,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.namespaces",{"_index":2385,"title":{},"body":{"components/FieldEditComponent.html":{},"classes/NamespaceModel.html":{}}}],["this.namespaces.push(fakenamespace",{"_index":2399,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.nestedcomponent",{"_index":1493,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponent.getinitialfocuselement",{"_index":1498,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponent.isdatavalid",{"_index":1518,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponentinitializedcallback",{"_index":1495,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponentinitializedcallback(this",{"_index":1496,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nestedcomponenttype",{"_index":1512,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.nodes[lastaddedindex",{"_index":1967,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.okbuttonhandler",{"_index":1513,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.okbuttonhandler(this",{"_index":1519,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.outputselects.toarray",{"_index":2887,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.parentfield",{"_index":1604,"title":{},"body":{"classes/EnumValue.html":{},"components/FieldEditComponent.html":{}}}],["this.parentfield.name",{"_index":2401,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.parentfield.namespacealias",{"_index":2384,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.parentfieldname",{"_index":2400,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["this.parentobjectname",{"_index":3476,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.parentobjectname.length",{"_index":3479,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.path",{"_index":1632,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["this.pathseparator",{"_index":3954,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatechildren(field.parentfield",{"_index":3986,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatechildren(parentfield",{"_index":3967,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatefielddata(childfield",{"_index":4002,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatefielddata(field",{"_index":3975,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatefieldparentpaths(childfield",{"_index":4000,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.populatefieldparentpaths(field",{"_index":3974,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.preparecomplexfields",{"_index":3971,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.prettyname",{"_index":4260,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.processmappingscatalog(userfile",{"_index":4174,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.propertydoc",{"_index":243,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.clearfields",{"_index":267,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.issource",{"_index":166,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.name",{"_index":165,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.showfields",{"_index":167,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.propertydoc.type",{"_index":163,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.reader",{"_index":4209,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.reader.onload",{"_index":4157,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.reader.readasarraybuffer(filecontent",{"_index":4162,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.reader.result",{"_index":4158,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.redrawlinesformappings",{"_index":2709,"title":{},"body":{"classes/LineModel.html":{}}}],["this.resetall",{"_index":4199,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.right_bracket",{"_index":4035,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.sanitizer.bypasssecuritytruststyle('display:inline",{"_index":1422,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["this.sanitizer.bypasssecuritytruststyle('stroke",{"_index":2758,"title":{},"body":{"classes/LineModel.html":{}}}],["this.search(this.searchfilter",{"_index":3557,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchfilter",{"_index":3383,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchfilter.tolowercase",{"_index":3560,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchmode",{"_index":3547,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchresults",{"_index":3554,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchresults.length",{"_index":3549,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["this.searchresults.push(mapping",{"_index":3568,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.searchresults.push(ns",{"_index":3886,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.sectioncomponents.toarray",{"_index":3626,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.selected",{"_index":1362,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingSelectionSectionComponent.html":{}}}],["this.selectedcallback(this",{"_index":3656,"title":{},"body":{"components/MappingSelectionSectionComponent.html":{}}}],["this.selectedmappingcomponent",{"_index":3625,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["this.selectednamespace",{"_index":3866,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.selectmapping(field",{"_index":3150,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["this.selectnamespace",{"_index":3887,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["this.serializedvalue",{"_index":4259,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.serviceobject",{"_index":1602,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.setbinaryfiletoservice(filecontent",{"_index":2597,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["this.setlinebeingformed(null",{"_index":2737,"title":{},"body":{"classes/LineModel.html":{}}}],["this.showactiveerrors",{"_index":989,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["this.sortfieldactiondefinitions",{"_index":2224,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["this.sourcedocs",{"_index":238,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.sourcedocs.push(docdef",{"_index":229,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.sourcefields",{"_index":2992,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.sourcefields.concat(this.targetfields",{"_index":2997,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.sourcefields.length",{"_index":3010,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.sourceiconcssclass",{"_index":3489,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.sourceidentifier",{"_index":2832,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.sourcetype",{"_index":2821,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.sourcevalue",{"_index":2820,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.start",{"_index":3392,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["this.storeerrors(errors",{"_index":3546,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.storeerrors(this.cfg.errorservice.geterrors",{"_index":3544,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.str",{"_index":1865,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.str.replace",{"_index":1866,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.systeminitializedsubscription",{"_index":660,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.systeminitializedsubscription.unsubscribe",{"_index":677,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.table",{"_index":2869,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.table.entries",{"_index":2886,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.table.entries.push(e",{"_index":2895,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.table.getentryforsource(tabledata.sourceenumvalue",{"_index":2881,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["this.tables.push(table",{"_index":3117,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tables[this.tables.indexof(table",{"_index":3126,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname",{"_index":3120,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname.hasownproperty(key",{"_index":3121,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname[key",{"_index":3122,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname[name",{"_index":3118,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbyname[table.name",{"_index":3116,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbysourcetargetkey[iokey",{"_index":3127,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbysourcetargetkey[key",{"_index":3119,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.tablesbysourcetargetkey[table.getinputoutputkey",{"_index":3115,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.targetdocs",{"_index":239,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.targetdocs.push(docdef",{"_index":230,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.targetenabled",{"_index":3830,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["this.targetfields",{"_index":2993,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.targetfields.length",{"_index":3011,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["this.targetidentifier",{"_index":2833,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.targetsupportstemplate",{"_index":4215,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.targettype",{"_index":2823,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.targetvalue",{"_index":2822,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["this.templatetext",{"_index":3114,"title":{},"body":{"classes/MappingDefinition.html":{}}}],["this.terminalfields",{"_index":4006,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.terminalfields.push(field",{"_index":4044,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.textcache",{"_index":2030,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.tokenextractor.gettoken",{"_index":348,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["this.transitionfieldaction",{"_index":4296,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.transitionfieldaction.name",{"_index":4297,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["this.type",{"_index":1592,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["this.updatecache",{"_index":1917,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["this.updatefromconfig",{"_index":662,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["this.updatetemplatevalues",{"_index":3467,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["this.uri",{"_index":3909,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["this.userclassname",{"_index":494,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["this.usercollectiontype",{"_index":497,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["this.uuid",{"_index":1574,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["this.validateactionconfigparamselection(action.argumentvalues",{"_index":3269,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["this.validationerrors",{"_index":3569,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.validationerrors.get(e.mapping).push(e",{"_index":3573,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.validationerrors.has(e.mapping",{"_index":3571,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.validationerrors.set(e.mapping",{"_index":3572,"title":{},"body":{"components/MappingListComponent.html":{}}}],["this.value",{"_index":1636,"title":{},"body":{"classes/EnumValue.html":{}}}],["this.valuetype",{"_index":557,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["this.visible",{"_index":1480,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["this.xsrfcookiename",{"_index":109,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.xsrfdefaulttokenvalue",{"_index":111,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.xsrfheadername",{"_index":107,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["this.yoffset).tostring",{"_index":2735,"title":{},"body":{"classes/LineModel.html":{}}}],["those",{"_index":1321,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"license.html":{}}}],["through",{"_index":4575,"title":{},"body":{"license.html":{}}}],["throw",{"_index":2753,"title":{},"body":{"classes/LineModel.html":{},"classes/NamespaceModel.html":{}}}],["time",{"_index":588,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["time'].indexof(selectedtype",{"_index":2334,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["timeout",{"_index":2521,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["timer",{"_index":956,"title":{},"body":{"components/DataMapperErrorComponent.html":{}}}],["times",{"_index":4019,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["timetz",{"_index":592,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["title",{"_index":512,"title":{},"body":{"components/CollapsableHeaderComponent.html":{},"license.html":{}}}],["tns",{"_index":3833,"title":{},"body":{"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{}}}],["tns'.includes(filter",{"_index":3876,"title":{},"body":{"components/NamespaceListComponent.html":{}}}],["toadd",{"_index":2017,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["todisplayable",{"_index":1137,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["todisplayable(camelcasestring",{"_index":1182,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["todo",{"_index":1748,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["toerroriconclass",{"_index":4082,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["toerroriconclasspipe",{"_index":1036,"title":{"pipes/ToErrorIconClassPipe.html":{}},"body":{"modules/DataMapperModule.html":{},"pipes/ToErrorIconClassPipe.html":{},"coverage.html":{},"overview.html":{}}}],["togglesearch",{"_index":3514,"title":{},"body":{"components/MappingListComponent.html":{},"components/NamespaceListComponent.html":{}}}],["tohtml",{"_index":1846,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["tojson",{"_index":2819,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["token",{"_index":300,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"miscellaneous/variables.html":{}}}],["tokenposition",{"_index":1988,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["toolbar",{"_index":4091,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":445,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["toolbar.component.css",{"_index":740,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["toolbar.component.html",{"_index":4092,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar/data",{"_index":739,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["toolbar/toolbar.component",{"_index":652,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["toolbarbuttonclicked",{"_index":4106,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarbuttonclicked(action",{"_index":4146,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcomponent",{"_index":444,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tooltipmodule",{"_index":1061,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["tooltipmodule.forroot",{"_index":1111,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["tooltipmoduleforroot",{"_index":1110,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":769,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["top:0",{"_index":756,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["top:10px",{"_index":806,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["top:20",{"_index":759,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["top:6",{"_index":844,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["topromise().then((body",{"_index":2265,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{}}}],["topromise().then((res",{"_index":2553,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["toremove",{"_index":2018,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["tort",{"_index":4781,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":2806,"title":{},"body":{"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{}}}],["totext",{"_index":1847,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["tracking",{"_index":4655,"title":{},"body":{"license.html":{}}}],["trade",{"_index":4756,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4721,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":4754,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1315,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"license.html":{}}}],["transform",{"_index":4083,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["transform(value",{"_index":4084,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["transformation",{"_index":2160,"title":{},"body":{"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldDetailComponent.html":{},"license.html":{}}}],["transformations",{"_index":2158,"title":{},"body":{"injectables/FieldActionService.html":{}}}],["transition",{"_index":447,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["transition.model",{"_index":2964,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["transitiondelimiter",{"_index":3233,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["transitiondelimiter.none",{"_index":3274,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["transitiondelimiter.space",{"_index":4238,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimiter.user_defined",{"_index":3277,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["transitiondelimiter.user_defined].includes(delimitermodel.delimiter",{"_index":3275,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["transitiondelimitermodel",{"_index":3220,"title":{"classes/TransitionDelimiterModel.html":{}},"body":{"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{}}}],["transitiondelimitermodel(transitiondelimiter.ampersand",{"_index":4269,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.at_sign",{"_index":4270,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.backslash",{"_index":4273,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.colon",{"_index":4274,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.comma",{"_index":4275,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.dash",{"_index":4276,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.equal",{"_index":4277,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.hash",{"_index":4278,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.multi_space",{"_index":4279,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.none",{"_index":4268,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.period",{"_index":4282,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.pipe",{"_index":4283,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.semicolon",{"_index":4284,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.slash",{"_index":4285,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.space",{"_index":4286,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.underscore",{"_index":4287,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitiondelimitermodel(transitiondelimiter.user_defined",{"_index":4289,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionfieldaction",{"_index":4264,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionfieldactionname",{"_index":4295,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmode",{"_index":2921,"title":{},"body":{"classes/LookupTableUtil.html":{},"components/MappingFieldContainerComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["transitionmode.enum",{"_index":2924,"title":{},"body":{"classes/LookupTableUtil.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmode.for_each",{"_index":4293,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmode.many_to_one",{"_index":3424,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["transitionmode.one_to_many",{"_index":3425,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["transitionmode.one_to_one",{"_index":3423,"title":{},"body":{"components/MappingFieldContainerComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmodel",{"_index":2963,"title":{"classes/TransitionModel.html":{}},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"coverage.html":{}}}],["transitionmodel.delimitermodels",{"_index":3236,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmodel.delimitermodels.length",{"_index":4265,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmodel.getmappingmodename(this.mode",{"_index":4299,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionmodel.initialize",{"_index":3234,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["transitionname",{"_index":3561,"title":{},"body":{"components/MappingListComponent.html":{}}}],["transitionname.tolowercase().includes(filter",{"_index":3563,"title":{},"body":{"components/MappingListComponent.html":{}}}],["transitionselectioncomponent",{"_index":446,"title":{"components/TransitionSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["translate",{"_index":3215,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["translation",{"_index":4614,"title":{},"body":{"license.html":{}}}],["tree",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["triangle",{"_index":4089,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["trigger",{"_index":4202,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["true",{"_index":103,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":2570,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["turn",{"_index":1179,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["two",{"_index":2579,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["type",{"_index":17,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type(type",{"_index":3930,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["typeaheadmodule",{"_index":1062,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["typeaheadmodule.forroot",{"_index":1109,"title":{},"body":{"modules/DataMapperModule.html":{},"miscellaneous/variables.html":{}}}],["typeaheadmoduleforroot",{"_index":1108,"title":{},"body":{"modules/DataMapperModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1215,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["types",{"_index":2156,"title":{},"body":{"injectables/FieldActionService.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["typing",{"_index":3427,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["ui",{"_index":138,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"injectables/FileManagementService.html":{},"classes/MappingDefinition.html":{},"index.html":{}}}],["ui's",{"_index":4560,"title":{},"body":{"index.html":{}}}],["uint8array",{"_index":1181,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["uint8array(arraybuffer",{"_index":4160,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["ul",{"_index":1344,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["un",{"_index":3679,"title":{},"body":{"classes/MappingUtil.html":{}}}],["unable",{"_index":2046,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"classes/TextNode.html":{}}}],["undefined",{"_index":1216,"title":{},"body":{"classes/DataMapperUtil.html":{},"components/EmptyModalBodyComponent.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/FieldNode.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"classes/TextNode.html":{}}}],["under",{"_index":700,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["underscore",{"_index":4256,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["union",{"_index":4582,"title":{},"body":{"license.html":{}}}],["unique",{"_index":4067,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["units",{"_index":3252,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["unknown",{"_index":4509,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unless",{"_index":710,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["unmapped",{"_index":2020,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{}}}],["unqualified",{"_index":3906,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["unqualifiednamespace",{"_index":3897,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["unqualifiedns",{"_index":2379,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["unqualifiedns.alias",{"_index":2381,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["unqualifiedns].concat(this.docdef.namespaces",{"_index":2386,"title":{},"body":{"components/FieldEditComponent.html":{}}}],["unselected",{"_index":2012,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["unsigned",{"_index":594,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["until",{"_index":4210,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["up",{"_index":688,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["update",{"_index":679,"title":{},"body":{"components/DataMapperAppComponent.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldContainerComponent.html":{},"index.html":{}}}],["updatecache",{"_index":2032,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updated",{"_index":1730,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{},"components/MappingFieldDetailComponent.html":{}}}],["updatedevent",{"_index":1949,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updatedevent.node",{"_index":1976,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updatedevent.offset",{"_index":1977,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updatedocumentnamespacesfrommappings",{"_index":3666,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatedocumentnamespacesfrommappings(cfg",{"_index":3681,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatefield(field",{"_index":3978,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["updatefieldreference(mapping",{"_index":2014,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["updatefromconfig",{"_index":621,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/ToolbarComponent.html":{}}}],["updatefrommappings(mappingdefinition",{"_index":4013,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["updatelookuptables",{"_index":2913,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["updatelookuptables(mappingdefinition",{"_index":2919,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["updatemappedfieldsfromdocuments",{"_index":3667,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatemappedfieldsfromdocuments(mapping",{"_index":3683,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatemappingsfromdocuments",{"_index":3668,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatemappingsfromdocuments(cfg",{"_index":3685,"title":{},"body":{"classes/MappingUtil.html":{}}}],["updatesearchfilter",{"_index":3343,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["updatesearchfilter(value",{"_index":3374,"title":{},"body":{"components/MappingFieldContainerComponent.html":{}}}],["updatetemplatevalues",{"_index":3442,"title":{},"body":{"components/MappingFieldDetailComponent.html":{}}}],["uri",{"_index":3703,"title":{},"body":{"classes/MappingUtil.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{}}}],["uri:documentdefinition",{"_index":245,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["url",{"_index":2229,"title":{},"body":{"injectables/FieldActionService.html":{},"injectables/FileManagementService.html":{},"index.html":{}}}],["url(#line",{"_index":2659,"title":{},"body":{"classes/LineModel.html":{}}}],["urls",{"_index":874,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["use",{"_index":339,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"classes/LineModel.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/ToolbarComponent.html":{},"license.html":{}}}],["useclass",{"_index":1123,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["used",{"_index":1701,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FieldActionService.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["user",{"_index":943,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"classes/ErrorInfo.html":{},"components/FieldEditComponent.html":{},"injectables/FileManagementService.html":{},"classes/LineModel.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["user's",{"_index":1195,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["user_defined",{"_index":4257,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"miscellaneous/enumerations.html":{}}}],["userclassname",{"_index":458,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["usercollectionclassname",{"_index":459,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["usercollectiontype",{"_index":460,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["usercreated",{"_index":1545,"title":{},"body":{"classes/EnumValue.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["userdelimiter",{"_index":4263,"title":{},"body":{"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{}}}],["userexport",{"_index":2569,"title":{},"body":{"injectables/FileManagementService.html":{}}}],["userfieldcount",{"_index":3007,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["userfile",{"_index":4163,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["userfile.name.split",{"_index":4166,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["userfilecomps",{"_index":4165,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["userfilecomps[userfilecomps.length",{"_index":4168,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["userfilesuffix",{"_index":4167,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["using",{"_index":4774,"title":{},"body":{"license.html":{}}}],["util",{"_index":2520,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["util.ts",{"_index":1127,"title":{},"body":{"classes/DataMapperUtil.html":{},"classes/LookupTableUtil.html":{},"classes/MappingUtil.html":{},"coverage.html":{}}}],["util.ts:101",{"_index":1157,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:118",{"_index":1192,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:130",{"_index":1183,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:152",{"_index":1145,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:167",{"_index":3676,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:188",{"_index":3674,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:20",{"_index":1142,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:204",{"_index":3682,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:21",{"_index":1140,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:23",{"_index":1169,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:231",{"_index":3670,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:28",{"_index":2918,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["util.ts:29",{"_index":3686,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:44",{"_index":3684,"title":{},"body":{"classes/MappingUtil.html":{}}}],["util.ts:46",{"_index":1173,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:60",{"_index":2920,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["util.ts:71",{"_index":1178,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:85",{"_index":1165,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["util.ts:86",{"_index":2916,"title":{},"body":{"classes/LookupTableUtil.html":{}}}],["utils/mapping",{"_index":1103,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["uuid",{"_index":1539,"title":{},"body":{"classes/EnumValue.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/TextNode.html":{}}}],["uuidcounter",{"_index":1529,"title":{},"body":{"classes/EnumValue.html":{}}}],["v2/atlas",{"_index":4865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2/atlas/java",{"_index":4866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2/atlas/json",{"_index":4868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2/atlas/xml",{"_index":4867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":1719,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"components/MappingFieldActionArgumentComponent.html":{}}}],["validateactionconfigparamselection",{"_index":3182,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["validateactionconfigparamselection(acp",{"_index":3225,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["validation",{"_index":1643,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"miscellaneous/enumerations.html":{}}}],["validationerrors",{"_index":3502,"title":{},"body":{"components/MappingListComponent.html":{}}}],["value",{"_index":306,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ErrorInfo.html":{},"classes/Examples.html":{},"classes/ExpressionNode.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"classes/LookupTableEntry.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"classes/TextNode.html":{},"pipes/ToErrorIconClassPipe.html":{},"components/ToolbarComponent.html":{},"classes/TransitionDelimiterModel.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.some(e",{"_index":4087,"title":{},"body":{"pipes/ToErrorIconClassPipe.html":{}}}],["valued",{"_index":3209,"title":{},"body":{"components/MappingFieldActionArgumentComponent.html":{}}}],["valueexistsoncreation",{"_index":466,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{}}}],["values",{"_index":2078,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["valuetype",{"_index":532,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["valuetypeselectionchanged",{"_index":534,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["valuetypeselectionchanged(event",{"_index":547,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{},"components/PropertyFieldEditComponent.html":{}}}],["var",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["variable",{"_index":4425,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":4842,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":4646,"title":{},"body":{"license.html":{}}}],["verify",{"_index":2701,"title":{},"body":{"classes/LineModel.html":{}}}],["version",{"_index":703,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["vertical",{"_index":765,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["via",{"_index":2438,"title":{},"body":{"injectables/FileManagementService.html":{},"index.html":{}}}],["viewchild",{"_index":488,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/FieldEditComponent.html":{},"classes/LineModel.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceEditComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["viewchild('class",{"_index":483,"title":{},"body":{"components/ClassNameComponent.html":{}}}],["viewchild('datamappercomponent",{"_index":860,"title":{},"body":{"components/DataMapperAppExampleHostComponent.html":{}}}],["viewchild('docdefinput",{"_index":630,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('docdefoutput",{"_index":632,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('errorpanel",{"_index":634,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('expressioncomponent",{"_index":4148,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["viewchild('fielddetailelement",{"_index":1296,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["viewchild('linemachine",{"_index":639,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('linemachineelement",{"_index":2672,"title":{},"body":{"classes/LineModel.html":{}}}],["viewchild('mappingdetailcomponent",{"_index":642,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('modalerrorwindow",{"_index":644,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('modalwindow",{"_index":646,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('name",{"_index":4066,"title":{},"body":{"components/PropertyFieldEditComponent.html":{}}}],["viewchild('namespace",{"_index":3822,"title":{},"body":{"components/NamespaceEditComponent.html":{}}}],["viewchild('sourcesheader",{"_index":3147,"title":{},"body":{"components/MappingDetailComponent.html":{}}}],["viewchild('template",{"_index":4070,"title":{},"body":{"components/TemplateEditComponent.html":{}}}],["viewchild('toolbarcomponent",{"_index":649,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewchild('value",{"_index":552,"title":{},"body":{"components/ConstantFieldEditComponent.html":{},"components/FieldEditComponent.html":{}}}],["viewchildren",{"_index":1300,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingSelectionComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewchildren('dyn_target",{"_index":1465,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewchildren('fielddetail",{"_index":1294,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["viewchildren('mappingsection",{"_index":3608,"title":{},"body":{"components/MappingSelectionComponent.html":{}}}],["viewchildren('outputselect",{"_index":2856,"title":{},"body":{"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{}}}],["viewcontainerref",{"_index":1445,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewcontainerref.clear",{"_index":1490,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewcontainerref.createcomponent(componentfactory).instance",{"_index":1494,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["viewencapsulation",{"_index":651,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["viewencapsulation.none",{"_index":601,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["visibility:hidden",{"_index":743,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["visibility:visible",{"_index":747,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["visible",{"_index":1463,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["visibleincurrentdocumentsearch",{"_index":1534,"title":{},"body":{"classes/EnumValue.html":{},"classes/NamespaceModel.html":{}}}],["void",{"_index":178,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"classes/DataMapperInitializationModel.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/DocumentInitializationModel.html":{},"components/EmptyModalBodyComponent.html":{},"classes/EnumValue.html":{},"injectables/ErrorHandlerService.html":{},"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"injectables/FieldActionService.html":{},"components/FieldEditComponent.html":{},"classes/FieldNode.html":{},"injectables/FileManagementService.html":{},"directives/FocusDirective.html":{},"classes/LineModel.html":{},"classes/LookupTable.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"classes/LookupTableEntry.html":{},"classes/LookupTableUtil.html":{},"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{},"classes/MappingDefinition.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"classes/MappingUtil.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"classes/NamespaceModel.html":{},"components/PropertyFieldEditComponent.html":{},"classes/TextNode.html":{},"components/ToolbarComponent.html":{},"classes/TransitionModel.html":{},"components/TransitionSelectionComponent.html":{}}}],["w.message",{"_index":3751,"title":{},"body":{"components/ModalErrorDetailComponent.html":{}}}],["walk",{"_index":3053,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["want",{"_index":1417,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/MappingDetailComponent.html":{},"components/NamespaceListComponent.html":{},"components/ToolbarComponent.html":{}}}],["warn",{"_index":1805,"title":{},"body":{"classes/ErrorInfo.html":{},"miscellaneous/enumerations.html":{}}}],["warning",{"_index":933,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"pipes/ToErrorIconClassPipe.html":{}}}],["warnings",{"_index":934,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{}}}],["warranties",{"_index":719,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["warranty",{"_index":4764,"title":{},"body":{"license.html":{}}}],["wasn't",{"_index":4225,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["way",{"_index":1750,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{}}}],["we'll",{"_index":338,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["we're",{"_index":2500,"title":{},"body":{"injectables/FileManagementService.html":{},"classes/NamespaceModel.html":{}}}],["web",{"_index":4515,"title":{},"body":{"index.html":{}}}],["well",{"_index":1646,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"injectables/FileManagementService.html":{}}}],["wherever",{"_index":4730,"title":{},"body":{"license.html":{}}}],["whether",{"_index":4595,"title":{},"body":{"license.html":{}}}],["who's",{"_index":1312,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{}}}],["whole",{"_index":4631,"title":{},"body":{"license.html":{}}}],["widget",{"_index":1930,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"components/MappingFieldActionArgumentComponent.html":{},"classes/TextNode.html":{}}}],["width",{"_index":749,"title":{},"body":{"components/DataMapperAppComponent.html":{},"classes/DataMapperUtil.html":{},"components/DocumentFieldDetailComponent.html":{}}}],["width:10",{"_index":818,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:100",{"_index":760,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:105px",{"_index":848,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:12px",{"_index":773,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:20px",{"_index":850,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:30",{"_index":811,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:300px",{"_index":825,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:45",{"_index":817,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["width:4px",{"_index":2759,"title":{},"body":{"classes/LineModel.html":{}}}],["window",{"_index":304,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"components/DataMapperErrorComponent.html":{},"components/EmptyModalBodyComponent.html":{},"injectables/ErrorHandlerService.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["window'},{'name",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"components/ClassNameComponent.html":{},"components/CollapsableHeaderComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperAppExampleHostComponent.html":{},"components/DataMapperErrorComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldActionArgumentComponent.html":{},"components/MappingFieldActionComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingFieldDetailComponent.html":{},"components/MappingListComponent.html":{},"components/MappingListFieldComponent.html":{},"components/MappingSelectionComponent.html":{},"components/MappingSelectionSectionComponent.html":{},"components/ModalErrorDetailComponent.html":{},"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["window.component",{"_index":492,"title":{},"body":{"components/ClassNameComponent.html":{},"components/ConstantFieldEditComponent.html":{},"components/DataMapperAppComponent.html":{},"components/DataMapperErrorComponent.html":{},"modules/DataMapperModule.html":{},"components/DocumentFieldDetailComponent.html":{},"components/EmptyModalBodyComponent.html":{},"components/FieldEditComponent.html":{},"components/LookupTableComponent.html":{},"classes/LookupTableData.html":{},"components/MappingDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{},"components/MappingSelectionComponent.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"components/NamespaceEditComponent.html":{},"components/NamespaceListComponent.html":{},"components/PropertyFieldEditComponent.html":{},"components/TemplateEditComponent.html":{},"components/ToolbarComponent.html":{},"components/TransitionSelectionComponent.html":{}}}],["window.component.html",{"_index":1451,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{}}}],["window.component.ts",{"_index":1441,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{},"interfaces/ModalErrorWindowValidator.html":{},"components/ModalWindowComponent.html":{},"interfaces/ModalWindowValidator.html":{},"coverage.html":{}}}],["window.component.ts:111",{"_index":3799,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:132",{"_index":3798,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:133",{"_index":3797,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:141",{"_index":3803,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:148",{"_index":3802,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:160",{"_index":3796,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:25",{"_index":3785,"title":{},"body":{"interfaces/ModalErrorWindowValidator.html":{}}}],["window.component.ts:26",{"_index":3784,"title":{},"body":{"interfaces/ModalErrorWindowValidator.html":{}}}],["window.component.ts:29",{"_index":3815,"title":{},"body":{"interfaces/ModalWindowValidator.html":{}}}],["window.component.ts:30",{"_index":3814,"title":{},"body":{"interfaces/ModalWindowValidator.html":{}}}],["window.component.ts:35",{"_index":3768,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:36",{"_index":3774,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:37",{"_index":3776,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:38",{"_index":3769,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:39",{"_index":3773,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:40",{"_index":1444,"title":{},"body":{"components/EmptyModalBodyComponent.html":{},"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:41",{"_index":3777,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:42",{"_index":3772,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:43",{"_index":3771,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:44",{"_index":1443,"title":{},"body":{"components/EmptyModalBodyComponent.html":{}}}],["window.component.ts:45",{"_index":3756,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:47",{"_index":3770,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:49",{"_index":3761,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:53",{"_index":3764,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:56",{"_index":3791,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:57",{"_index":3794,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:58",{"_index":3793,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:59",{"_index":3795,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:60",{"_index":3757,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{}}}],["window.component.ts:61",{"_index":3790,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:62",{"_index":3792,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:64",{"_index":3808,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:65",{"_index":3812,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:66",{"_index":3805,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:67",{"_index":3766,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{}}}],["window.component.ts:68",{"_index":3813,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:69",{"_index":3807,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:70",{"_index":3806,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:71",{"_index":3765,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:72",{"_index":3810,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:74",{"_index":3804,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:75",{"_index":3811,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:76",{"_index":3809,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:77",{"_index":3789,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:79",{"_index":3762,"title":{},"body":{"components/ModalErrorWindowComponent.html":{},"components/ModalWindowComponent.html":{}}}],["window.component.ts:81",{"_index":3800,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.component.ts:83",{"_index":3759,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:87",{"_index":3760,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:91",{"_index":3758,"title":{},"body":{"components/ModalErrorWindowComponent.html":{}}}],["window.component.ts:99",{"_index":3801,"title":{},"body":{"components/ModalWindowComponent.html":{}}}],["window.event",{"_index":1326,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"components/MappingFieldContainerComponent.html":{}}}],["windows",{"_index":1648,"title":{},"body":{"injectables/ErrorHandlerService.html":{}}}],["within",{"_index":947,"title":{},"body":{"components/DataMapperErrorComponent.html":{},"index.html":{},"license.html":{}}}],["withinterceptor",{"_index":1043,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["without",{"_index":684,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"index.html":{},"license.html":{}}}],["won't",{"_index":1971,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["work",{"_index":4017,"title":{},"body":{"classes/NamespaceModel.html":{},"index.html":{},"license.html":{}}}],["worked",{"_index":1925,"title":{},"body":{"classes/ExpressionNode.html":{},"classes/ExpressionUpdatedEvent.html":{},"classes/FieldNode.html":{},"classes/TextNode.html":{}}}],["workingfields",{"_index":3028,"title":{},"body":{"classes/MappedField.html":{},"classes/MappedFieldParsingData.html":{}}}],["works",{"_index":4625,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":4672,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":329,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{}}}],["write",{"_index":1193,"title":{},"body":{"classes/DataMapperUtil.html":{},"injectables/FileManagementService.html":{}}}],["writefile",{"_index":1138,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["writefile(filecontent",{"_index":1189,"title":{},"body":{"classes/DataMapperUtil.html":{}}}],["writing",{"_index":715,"title":{},"body":{"components/DataMapperAppComponent.html":{},"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"license.html":{}}}],["written",{"_index":4647,"title":{},"body":{"license.html":{}}}],["wudget",{"_index":4122,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["x",{"_index":841,"title":{},"body":{"components/DataMapperAppComponent.html":{},"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["x/y",{"_index":685,"title":{},"body":{"components/DataMapperAppComponent.html":{}}}],["x5b",{"_index":3917,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["x5d",{"_index":3919,"title":{},"body":{"classes/NamespaceModel.html":{}}}],["xml",{"_index":220,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["xmlinspectionserviceurl",{"_index":4859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xmlservicespackageprefix",{"_index":131,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["xsd",{"_index":4506,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["xsrf",{"_index":330,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"miscellaneous/variables.html":{}}}],["xsrf.service",{"_index":1098,"title":{},"body":{"modules/DataMapperModule.html":{}}}],["xsrf.service.ts",{"_index":294,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{},"interceptors/ApiXsrfInterceptor.html":{},"coverage.html":{}}}],["xsrf.service.ts:19",{"_index":313,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{}}}],["xsrf.service.ts:20",{"_index":310,"title":{},"body":{"injectables/ApiHttpXsrfTokenExtractor.html":{}}}],["xsrf.service.ts:32",{"_index":360,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{}}}],["xsrf.service.ts:33",{"_index":357,"title":{},"body":{"interceptors/ApiXsrfInterceptor.html":{}}}],["xsrfcookiename",{"_index":73,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["xsrfdefaulttokenvalue",{"_index":74,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["xsrfheadername",{"_index":72,"title":{},"body":{"classes/AdmRedrawMappingLinesEvent.html":{},"classes/DataMapperInitializationModel.html":{},"classes/DocumentInitializationModel.html":{}}}],["y",{"_index":1367,"title":{},"body":{"components/DocumentFieldDetailComponent.html":{},"classes/LineModel.html":{}}}],["yarn",{"_index":4555,"title":{},"body":{"index.html":{}}}],["yes",{"_index":1695,"title":{},"body":{"injectables/ErrorHandlerService.html":{},"classes/ExpressionUpdatedEvent.html":{},"injectables/FieldActionService.html":{},"classes/FieldNode.html":{}}}],["yoffset",{"_index":2674,"title":{},"body":{"classes/LineModel.html":{}}}],["yyyy",{"_index":4838,"title":{},"body":{"license.html":{}}}],["zero_to_one",{"_index":2083,"title":{},"body":{"classes/FieldAction.html":{},"classes/FieldActionArgument.html":{},"classes/FieldActionArgumentValue.html":{},"classes/FieldActionDefinition.html":{},"miscellaneous/enumerations.html":{}}}],["zerobasedindex",{"_index":3742,"title":{},"body":{"classes/MappingUtil.html":{}}}],["zip",{"_index":2466,"title":{},"body":{"injectables/FileManagementService.html":{},"components/ToolbarComponent.html":{}}}],["zone.js",{"_index":4496,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1037,"title":{},"body":{"modules/DataMapperModule.html":{},"modules/ExampleAppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AdmRedrawMappingLinesEvent.html":{"url":"classes/AdmRedrawMappingLinesEvent.html","title":"class - AdmRedrawMappingLinesEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdmRedrawMappingLinesEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/config.model.ts\n        \n\n            \n                Description\n            \n            \n                Place all custom events here.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _lmcInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _lmcInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:316\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NGXLogger, NgxLoggerLevel } from 'ngx-logger';\nimport { environment } from '../../../../environments/environment';\nimport { MappingDefinition } from './mapping-definition.model';\nimport { DocumentDefinition } from './document-definition.model';\n\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { DocumentManagementService } from '../services/document-management.service';\nimport { MappingManagementService } from '../services/mapping-management.service';\nimport { InitializationService } from '../services/initialization.service';\nimport { ErrorInfo } from '../models/error.model';\n\nimport { DocumentType, InspectionType, CollectionType } from '../common/config.types';\nimport { FieldActionService } from '../services/field-action.service';\nimport { FileManagementService } from '../services/file-management.service';\n\nexport class DataMapperInitializationModel {\n  dataMapperVersion = '0.9.2017.07.28';\n  initialized = false;\n  loadingStatus = 'Loading.';\n  admHttpTimeout = 30000;  // 30 seconds\n  initializationErrorOccurred = false;\n\n  baseJavaInspectionServiceUrl: string;\n  baseXMLInspectionServiceUrl: string;\n  baseJSONInspectionServiceUrl: string;\n  baseMappingServiceUrl: string;\n\n  xsrfHeaderName: string;\n  xsrfCookieName: string;\n  xsrfDefaultTokenValue: string;\n\n  /* class path fetching configuration */\n  classPathFetchTimeoutInMilliseconds = 30000;\n  // if classPath is specified, maven call to resolve pom will be skipped\n  pomPayload: string;\n\n  classPath: string;\n\n  /* inspection service filtering flags */\n  fieldNameBlacklist: string[] = [];\n  classNameBlacklist: string[] = [];\n  disablePrivateOnlyFields = false;\n  disableProtectedOnlyFields = false;\n  disablePublicOnlyFields = false;\n  disablePublicGetterSetterFields = false;\n\n  disableMappingPreviewMode = false;\n\n  /* enable the navigation bar and import/export */\n  disableNavbar = true;\n\n  mappingInitialized = false;\n\n  constructor() {\n    if (environment.xsrf) {\n      this.xsrfHeaderName = environment.xsrf.headerName;\n      this.xsrfCookieName = environment.xsrf.cookieName;\n      this.xsrfDefaultTokenValue = environment.xsrf.defaultTokenValue;\n    }\n  }\n\n}\n\nexport class DocumentInitializationModel {\n  id: string;\n  type: DocumentType;\n  name: string;\n  description: string;\n  isSource: boolean;\n  showFields = true;\n  inspectionType: InspectionType;\n  inspectionSource: string;\n  inspectionResult: string;\n  selectedRoot: string;\n  collectionType: CollectionType;\n  collectionClassName: string;\n}\n\nexport class ConfigModel {\n  static mappingServicesPackagePrefix = 'io.atlasmap.v2';\n  static javaServicesPackagePrefix = 'io.atlasmap.java.v2';\n  static jsonServicesPackagePrefix = 'io.atlasmap.json.v2';\n  static xmlServicesPackagePrefix = 'io.atlasmap.xml.v2';\n  private static cfg: ConfigModel = new ConfigModel();\n\n  initCfg: DataMapperInitializationModel = new DataMapperInitializationModel;\n\n  /* current ui state config */\n  showMappingDetailTray = false;\n  showMappingTable = false;\n  showNamespaceTable = false;\n  showLinesAlways = true;\n  showTypes = false;\n  showMappedFields = true;\n  showUnmappedFields = true;\n  _showMappingPreview = false;\n  currentDraggedField: any = null;\n\n  documentService: DocumentManagementService;\n  mappingService: MappingManagementService;\n  errorService: ErrorHandlerService;\n  initializationService: InitializationService;\n  fieldActionService: FieldActionService;\n  fileService: FileManagementService;\n\n  sourceDocs: DocumentDefinition[] = [];\n  targetDocs: DocumentDefinition[] = [];\n  propertyDoc: DocumentDefinition = new DocumentDefinition();\n  constantDoc: DocumentDefinition = new DocumentDefinition();\n  mappingFiles: string[] = [];\n\n  mappings: MappingDefinition = null;\n\n  preloadedMappingJson: string;\n  preloadedFieldActionMetadata: any;\n\n  logger: NGXLogger;\n\n  constructor() {\n    this.propertyDoc.type = DocumentType.PROPERTY;\n    this.propertyDoc.name = 'Properties';\n    this.propertyDoc.isSource = true;\n    this.propertyDoc.showFields = false;\n    this.constantDoc.type = DocumentType.CONSTANT;\n    this.constantDoc.name = 'Constants';\n    this.constantDoc.isSource = true;\n    this.constantDoc.showFields = false;\n  }\n\n  static getConfig(): ConfigModel {\n    return ConfigModel.cfg;\n  }\n\n  static setConfig(cfg: ConfigModel): void {\n    ConfigModel.cfg = cfg;\n  }\n\n  set showMappingPreview(show: boolean) {\n    if (show && !this._showMappingPreview) {\n      this.mappingService.enableMappingPreview();\n    } else if (!show && this._showMappingPreview) {\n      this.mappingService.disableMappingPreview();\n    }\n    this._showMappingPreview = show;\n  }\n\n  get showMappingPreview(): boolean {\n    return this._showMappingPreview;\n  }\n\n  isDebugEnabled(): boolean {\n    return [NgxLoggerLevel.DEBUG, NgxLoggerLevel.TRACE].includes(this.logger.getConfigSnapshot().level);\n  }\n\n  isTraceEnabled(): boolean {\n    return this.logger.getConfigSnapshot().level === NgxLoggerLevel.TRACE;\n  }\n\n  addDocument(docInitModel: DocumentInitializationModel): DocumentDefinition {\n    const docDef: DocumentDefinition = new DocumentDefinition();\n    docDef.initModel = docInitModel;\n    docDef.id = docInitModel.id;\n    docDef.type = docInitModel.type;\n    docDef.name = docInitModel.name;\n    docDef.description = docInitModel.description;\n    docDef.isSource = docInitModel.isSource;\n    docDef.showFields = docInitModel.showFields;\n    docDef.inspectionType = docInitModel.inspectionType;\n    docDef.inspectionSource = docInitModel.inspectionSource;\n    docDef.inspectionResult = docInitModel.inspectionResult;\n    docDef.selectedRoot = docInitModel.selectedRoot;\n\n    if (docDef.type === DocumentType.XSD) {\n      docDef.uri = 'atlas:' + 'xml' + ':' + docDef.id;\n    } else if (docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri = 'atlas:' + 'java' + ':' + docDef.id;\n    } else {\n      docDef.uri = 'atlas:' + docDef.type.toLowerCase() + ':' + docDef.id;\n    }\n\n    if (docDef.type === DocumentType.JAVA || docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri += '?className=' + docDef.inspectionSource;\n      if (docInitModel.collectionType && docInitModel.collectionType !== CollectionType.NONE) {\n        docDef.uri += '&collectionType=' + docInitModel.collectionType;\n        if (docInitModel.collectionClassName) {\n          docDef.uri += '&collectionClassName=' + docInitModel.collectionClassName;\n        }\n      }\n    }\n\n    if (docInitModel.isSource) {\n      this.sourceDocs.push(docDef);\n    } else {\n      this.targetDocs.push(docDef);\n    }\n    return docDef;\n  }\n\n  addDocuments(docModels: DocumentInitializationModel[]): DocumentDefinition[] {\n    const docDefs: DocumentDefinition[] = [];\n    for (const docModel of docModels) {\n      docDefs.push(this.addDocument(docModel));\n    }\n    return docDefs;\n  }\n\n  getDocsWithoutPropertyDoc(isSource: boolean): DocumentDefinition[] {\n    return [].concat(isSource ? this.sourceDocs : this.targetDocs);\n  }\n\n  getDocs(isSource: boolean): DocumentDefinition[] {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    return isSource ? [this.propertyDoc, this.constantDoc].concat(docs) : docs;\n  }\n\n  /**\n   * Return a uri:DocumentDefinition document map for either the sources or targets panel contents.\n   *\n   * @param cfg\n   * @param isSource\n   */\n  getDocUriMap(cfg: ConfigModel, isSource: boolean): {[key: string]: DocumentDefinition} {\n    const docMap: {[key: string]: DocumentDefinition} = {};\n    for (const doc of cfg.getDocs(isSource)) {\n      docMap[doc.uri] = doc;\n    }\n    return docMap;\n  }\n\n  /**\n   * Clear source/target/mapping documents from the model.  Reset constant and property document definitions.\n   */\n  clearDocs(): void {\n    this.sourceDocs = [];\n    this.targetDocs = [];\n    this.propertyDoc.clearFields();\n    this.constantDoc.clearFields();\n    this.mappingFiles = [];\n  }\n\n  hasJavaDocuments(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isClassPathResolutionNeeded(): boolean {\n    if (this.initCfg.classPath) {\n      return false;\n    }\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA && doc.inspectionResult == null) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getDocForIdentifier(documentId: string, isSource: boolean): DocumentDefinition {\n    for (const d of this.getDocs(isSource)) {\n      if (d.id === documentId) {\n        return d;\n      }\n    }\n    return null;\n  }\n\n  getFirstXmlDoc(isSource: boolean) {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    for (const doc of docs) {\n      if (doc.type === DocumentType.XML) {\n        return doc;\n      }\n    }\n    return null;\n  }\n\n  getAllDocs(): DocumentDefinition[] {\n    return [this.propertyDoc, this.constantDoc].concat(this.sourceDocs).concat(this.targetDocs);\n  }\n\n  documentsAreLoaded(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (!doc.initialized) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n}\n\n/**\n * Place all custom events here.\n */\nexport class AdmRedrawMappingLinesEvent {\n  _lmcInstance: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiHttpXsrfTokenExtractor.html":{"url":"injectables/ApiHttpXsrfTokenExtractor.html","title":"injectable - ApiHttpXsrfTokenExtractor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiHttpXsrfTokenExtractor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts\n        \n\n            \n                Description\n            \n            \n                Override the stock @angular HTTP package token extractor to not fetch cookies from\nthe Window document.  Return a default token value instead.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cfg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpXsrfTokenExtractor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ConfigModel } from '../models/config.model';\n\n/**\n * Override the stock @angular HTTP package token extractor to *not* fetch cookies from\n * the Window document.  Return a default token value instead.\n */\n@Injectable()\nexport class ApiHttpXsrfTokenExtractor implements HttpXsrfTokenExtractor {\n  private cfg = ConfigModel.getConfig();\n  getToken(): string {\n    return this.cfg.initCfg.xsrfDefaultTokenValue;\n  }\n}\n\n/**\n * Override the stock @angular HTTP package request interceptor method to wrap the request\n * with default XSRF header name and token value.\n */\n@Injectable()\nexport class ApiXsrfInterceptor implements HttpInterceptor {\n\n  private cfg = ConfigModel.getConfig();\n  intercept(httpRequest: HttpRequest, next: HttpHandler): Observable> {\n    /*\n      ADM doesn't need/use cookies so we'll use the default token value initialized from the environment when\n      adding the XSRF header to HTTP requests.  This will avoid the need to read cookies from local storage.\n    */\n    if (this.cfg.initCfg.xsrfHeaderName) {\n      // const token = this.tokenExtractor.getToken() || this.cfg.initCfg.xsrfDefaultTokenValue;\n      const token = this.cfg.initCfg.xsrfDefaultTokenValue;\n      const headerName = this.cfg.initCfg.xsrfHeaderName;\n\n      if (!httpRequest.headers.has(headerName)) {\n        httpRequest = httpRequest.clone({ headers: httpRequest.headers.set(headerName, token) });\n      }\n    }\n    return next.handle(httpRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ApiXsrfInterceptor.html":{"url":"interceptors/ApiXsrfInterceptor.html","title":"interceptor - ApiXsrfInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ApiXsrfInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts\n        \n\n            \n                Description\n            \n            \n                Override the stock @angular HTTP package request interceptor method to wrap the request\nwith default XSRF header name and token value.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cfg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(httpRequest: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    httpRequest\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts:32\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpXsrfTokenExtractor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ConfigModel } from '../models/config.model';\n\n/**\n * Override the stock @angular HTTP package token extractor to *not* fetch cookies from\n * the Window document.  Return a default token value instead.\n */\n@Injectable()\nexport class ApiHttpXsrfTokenExtractor implements HttpXsrfTokenExtractor {\n  private cfg = ConfigModel.getConfig();\n  getToken(): string {\n    return this.cfg.initCfg.xsrfDefaultTokenValue;\n  }\n}\n\n/**\n * Override the stock @angular HTTP package request interceptor method to wrap the request\n * with default XSRF header name and token value.\n */\n@Injectable()\nexport class ApiXsrfInterceptor implements HttpInterceptor {\n\n  private cfg = ConfigModel.getConfig();\n  intercept(httpRequest: HttpRequest, next: HttpHandler): Observable> {\n    /*\n      ADM doesn't need/use cookies so we'll use the default token value initialized from the environment when\n      adding the XSRF header to HTTP requests.  This will avoid the need to read cookies from local storage.\n    */\n    if (this.cfg.initCfg.xsrfHeaderName) {\n      // const token = this.tokenExtractor.getToken() || this.cfg.initCfg.xsrfDefaultTokenValue;\n      const token = this.cfg.initCfg.xsrfDefaultTokenValue;\n      const headerName = this.cfg.initCfg.xsrfHeaderName;\n\n      if (!httpRequest.headers.has(headerName)) {\n        httpRequest = httpRequest.clone({ headers: httpRequest.headers.set(headerName, token) });\n      }\n    }\n    return next.handle(httpRequest);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atlasmap-dev-root\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'atlasmap-dev-root',\n  template: '',\n})\n\nexport class AppComponent { }\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClassNameComponent.html":{"url":"components/ClassNameComponent.html","title":"component - ClassNameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ClassNameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                class-name\n            \n\n\n\n\n            \n                templateUrl\n                ./class-name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                docDef\n                            \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                isSource\n                            \n                            \n                                userClassName\n                            \n                            \n                                userCollectionClassName\n                            \n                            \n                                userCollectionType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                collectionTypeSelectionChanged\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                parentSelectionChanged\n                            \n                            \n                                valueExistsOnCreation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:37\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            collectionTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncollectionTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(field: Field, docDef: DocumentDefinition, isAdd: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docDef\n                                    \n                                                DocumentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isAdd\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parentSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nparentSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueExistsOnCreation\n                        \n                        \n                    \n                \n            \n            \n                \nvalueExistsOnCreation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('class')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userClassName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userCollectionClassName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userCollectionType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CollectionType.NONE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { DocumentDefinition } from '../../models/document-definition.model';\nimport { Field } from '../../models/field.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { ModalWindowValidator } from '../modal/modal-window.component';\nimport { CollectionType } from '../../common/config.types';\n\n@Component({\n  selector: 'class-name',\n  templateUrl: './class-name.component.html',\n})\n\nexport class ClassNameComponent implements ModalWindowValidator {\n  cfg: ConfigModel = ConfigModel.getConfig();\n  isSource: boolean;\n  userClassName: string = null;\n  userCollectionType = CollectionType.NONE;\n  userCollectionClassName = null;\n  docDef: DocumentDefinition = null;\n  @ViewChild('class') private focusEl: ElementRef;\n\n  constructor() {\n  }\n\n  initialize(field: Field, docDef: DocumentDefinition, isAdd: boolean): void {\n    this.docDef = docDef;\n    this.userClassName = '';\n  }\n\n  parentSelectionChanged(event: any): void {\n  }\n\n  isDataValid(): boolean {\n    return this.cfg.errorService.isRequiredFieldValid(this.userClassName, 'Class name');\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n  valueExistsOnCreation(): boolean {\n    return false;\n  }\n\n  collectionTypeSelectionChanged(event: any) {\n      this.userCollectionType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n}\n\n    \n\n    \n        \n\n  \n    Class package name:\n      \n    \n    Collection Type:\n      \n        NONE\n        ARRAY\n        LIST\n        Map -->\n      \n    \n    Collection class name:\n      \n    \n    \n      Class name has already been established.\n          \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Class package name:              Collection Type:              NONE        ARRAY        LIST        Map -->              Collection class name:                    Class name has already been established.            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ClassNameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CollapsableHeaderComponent.html":{"url":"components/CollapsableHeaderComponent.html","title":"component - CollapsableHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CollapsableHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/collapsable-header.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                collapsable-header\n            \n\n\n\n\n            \n                templateUrl\n                ./collapsable-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCSSClass\n                            \n                            \n                                handleMouseClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                collapsed\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        collapsed\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/collapsable-header.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/collapsable-header.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/collapsable-header.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseClick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/collapsable-header.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'collapsable-header',\n  templateUrl: './collapsable-header.component.html',\n})\n\nexport class CollapsableHeaderComponent {\n  @Input() title: string;\n  @Input() collapsed = false;\n\n  handleMouseClick(event: MouseEvent): void {\n    this.collapsed = !this.collapsed;\n  }\n\n  getCSSClass() {\n    return 'arrow fa fa-angle-' + (this.collapsed ? 'right' : 'down');\n  }\n}\n\n    \n\n    \n        \n  \n    {{ title }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ title }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'CollapsableHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConstantFieldEditComponent.html":{"url":"components/ConstantFieldEditComponent.html","title":"component - ConstantFieldEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConstantFieldEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                constant-field-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./constant-field-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                docDef\n                            \n                            \n                                field\n                            \n                            \n                                fieldMode\n                            \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                isClosing\n                            \n                            \n                                modalWindowComponent\n                            \n                            \n                                valueType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getField\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                valueExistsOnCreation\n                            \n                            \n                                valueTypeSelectionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getField\n                        \n                        \n                    \n                \n            \n            \n                \ngetField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Field\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(field: Field, docDef: DocumentDefinition, mwc: ModalWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docDef\n                                    \n                                                DocumentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mwc\n                                    \n                                                ModalWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueExistsOnCreation\n                        \n                        \n                    \n                \n            \n            \n                \nvalueExistsOnCreation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:78\n                \n            \n\n\n            \n                \n                    Return true and disable the save button if the constant field already exists on creation, return false\nand enable the save button otherwise.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nvalueTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                    \n                        \n                            Default value : new Field()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('value')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isClosing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalWindowComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { DocumentType, FieldMode } from '../../common/config.types';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { DocumentDefinition } from '../../models/document-definition.model';\nimport { Field } from '../../models/field.model';\nimport { ModalWindowComponent, ModalWindowValidator } from '../modal/modal-window.component';\n\n@Component({\n  selector: 'constant-field-edit',\n  templateUrl: './constant-field-edit.component.html',\n})\n\nexport class ConstantFieldEditComponent implements ModalWindowValidator {\n  field: Field = new Field();\n  fieldMode: FieldMode;\n  valueType: any = 'STRING';\n  docDef: DocumentDefinition;\n  modalWindowComponent: ModalWindowComponent;\n  isClosing: boolean;\n  @ViewChild('value') private focusEl: ElementRef;\n\n  initialize(field: Field, docDef: DocumentDefinition, mwc: ModalWindowComponent): void {\n    if (field != null) {\n      this.valueType = field.type;\n      this.fieldMode = FieldMode.EDIT;\n    } else { this.fieldMode = FieldMode.CREATE; }\n\n    this.field = field == null ? new Field() : field.copy();\n    this.docDef = docDef;\n    this.modalWindowComponent = mwc;\n    this.isClosing = false;\n  }\n\n  valueTypeSelectionChanged(event: any): void {\n    this.valueType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  getField(): Field {\n    this.field.displayName = this.field.value;\n    this.field.name = this.field.value;\n    this.field.path = this.field.value;\n    this.field.type = this.valueType;\n    this.field.userCreated = true;\n    this.field.docDef = this.docDef;\n    return this.field;\n  }\n\n  isDataValid(): boolean {\n    return ConfigModel.getConfig().errorService.isRequiredFieldValid(this.field.value, 'Value');\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n  /**\n   * Return true and disable the save button if the constant field already exists on creation, return false\n   * and enable the save button otherwise.\n   */\n  valueExistsOnCreation(): boolean {\n    if (!this.modalWindowComponent || !this.modalWindowComponent.visible) {\n      return false;\n    }\n    if (this.isClosing) {\n      return false;\n    }\n    if (this.fieldMode === FieldMode.CREATE && this.docDef != null &&\n        this.docDef.fieldExists(this.getField(), DocumentType.CONSTANT)) {\n      this.modalWindowComponent.confirmButtonDisabled = true;\n      return true;\n    }\n    this.modalWindowComponent.confirmButtonDisabled = false;\n    return false;\n  }\n}\n\n    \n\n    \n        \n  \n    Value:\n    \n    \n      Constant value already exists.\n    \n  \n  \n    Value Type:\n    \n      Boolean\n      Big Integer\n      Byte\n      ByteArray\n      Char\n      Complex\n      Decimal\n      Double\n      Float\n      Integer\n      Long\n      Short\n      String\n      Time\n      Date\n      DateTime\n      DateTZ\n      TimeTZ\n      DateTimeTZ\n      Unsigned Byte\n      Unsigned Integer\n      Unsigned Long\n      Unsigned Short\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Value:              Constant value already exists.            Value Type:          Boolean      Big Integer      Byte      ByteArray      Char      Complex      Decimal      Double      Float      Integer      Long      Short      String      Time      Date      DateTime      DateTZ      TimeTZ      DateTimeTZ      Unsigned Byte      Unsigned Integer      Unsigned Long      Unsigned Short      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConstantFieldEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataMapperAppComponent.html":{"url":"components/DataMapperAppComponent.html","title":"component - DataMapperAppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataMapperAppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n            \n                moduleId\n                module.id\n            \n\n\n\n\n            \n                selector\n                data-mapper\n            \n\n            \n                styleUrls\n                data-mapper-app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./data-mapper-app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                detector\n                            \n                            \n                                docDefInput\n                            \n                            \n                                docDefOutput\n                            \n                            \n                                errorPanel\n                            \n                            \n                                hasSourceDoc\n                            \n                            \n                                hasTargetDoc\n                            \n                            \n                                    Private\n                                initializationStatusChangedSubscription\n                            \n                            \n                                lineMachine\n                            \n                            \n                                loadingStatus\n                            \n                            \n                                mappingDetailComponent\n                            \n                            \n                                modalErrorWindow\n                            \n                            \n                                modalWindow\n                            \n                            \n                                    Private\n                                systemInitializedSubscription\n                            \n                            \n                                toolbarComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getConfig\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateFromConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(detector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        detector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ConfigModel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateFromConfig\n                        \n                        \n                    \n                \n            \n            \n                \nupdateFromConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            detector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDefInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinitionComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('docDefInput')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDefOutput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinitionComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('docDefOutput')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorPanel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataMapperErrorComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('errorPanel')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasSourceDoc\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasTargetDoc\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initializationStatusChangedSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lineMachine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LineMachineComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('lineMachine')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Loading.'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappingDetailComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingDetailComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('mappingDetailComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalErrorWindow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalErrorWindowComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('modalErrorWindow')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalWindow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('modalWindow')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            systemInitializedSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toolbarComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ToolbarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('toolbarComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, ViewChild, ViewEncapsulation, ChangeDetectorRef } from '@angular/core';\nimport { ConfigModel } from '../../models/config.model';\n\nimport { ToolbarComponent } from '../toolbar/toolbar.component';\nimport { DataMapperErrorComponent } from './data-mapper-error.component';\nimport { LineMachineComponent } from './line-machine.component';\nimport { ModalErrorWindowComponent } from '../modal/modal-error-window.component';\nimport { ModalWindowComponent } from '../modal/modal-window.component';\n\nimport { DocumentDefinitionComponent } from '../document/document-definition.component';\n\nimport { MappingDetailComponent } from '../mapping-detail/mapping-detail.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'data-mapper',\n  moduleId: module.id,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './data-mapper-app.component.html',\n  styleUrls: ['data-mapper-app.component.css'],\n})\n\nexport class DataMapperAppComponent implements OnInit, OnDestroy {\n\n  @ViewChild('lineMachine') lineMachine: LineMachineComponent;\n  @ViewChild('errorPanel') errorPanel: DataMapperErrorComponent;\n  @ViewChild('modalErrorWindow') modalErrorWindow: ModalErrorWindowComponent;\n  @ViewChild('modalWindow') modalWindow: ModalWindowComponent;\n  @ViewChild('docDefInput') docDefInput: DocumentDefinitionComponent;\n  @ViewChild('docDefOutput') docDefOutput: DocumentDefinitionComponent;\n  @ViewChild('mappingDetailComponent') mappingDetailComponent: MappingDetailComponent;\n  @ViewChild('toolbarComponent') toolbarComponent: ToolbarComponent;\n\n  loadingStatus = 'Loading.';\n  hasSourceDoc = false;\n  hasTargetDoc = false;\n\n  private systemInitializedSubscription: Subscription;\n  private initializationStatusChangedSubscription: Subscription;\n\n  constructor(public detector: ChangeDetectorRef) { }\n\n  getConfig(): ConfigModel {\n    return ConfigModel.getConfig();\n  }\n\n  ngOnInit(): void {\n    this.systemInitializedSubscription\n       = this.getConfig().initializationService.systemInitialized$.subscribe(() => {\n      this.updateFromConfig();\n    });\n\n    this.initializationStatusChangedSubscription\n      = this.getConfig().initializationService.initializationStatusChanged$.subscribe(() => {\n      this.loadingStatus = this.getConfig().initCfg.loadingStatus;\n      setTimeout(() => {\n        this.detector.detectChanges();\n      }, 10);\n    });\n    this.hasSourceDoc = this.getConfig().sourceDocs && this.getConfig().sourceDocs.length > 0;\n    this.hasTargetDoc = this.getConfig().targetDocs && this.getConfig().targetDocs.length > 0;\n  }\n\n  ngOnDestroy() {\n    this.systemInitializedSubscription.unsubscribe();\n    this.initializationStatusChangedSubscription.unsubscribe();\n  }\n\n  updateFromConfig(): void {\n    // update the mapping line drawing after our fields have redrawn themselves\n    // without this, the x/y from the field dom elements is messed up / misaligned.\n    if (this.lineMachine != null) {\n      setTimeout(() => {\n        if (this.lineMachine != null) {\n          this.lineMachine.redrawLinesForMappings();\n        }\n      }, 1);\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n\n    \n      \n    \n\n    \n      \n    \n\n    \n      \n      \n    \n\n    \n      \n    \n\n    \n\n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n    \n  \n\n  \n    {{ loadingStatus }}\n    \n  \n\n\n    \n\n    \n                \n                    data-mapper-app.component.css\n                \n                /*\n    Copyright (C) 2019 Red Hat, Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\n@import '../data-mapper-base.component.css';\n@import '../document/data-mapper-document.component.css';\n@import '../mapping-detail/data-mapper-mapping-detail.component.css';\n@import '../mapping-list/data-mapper-mapping-list.component.css';\n@import '../modal/data-mapper-modal.component.css';\n@import '../toolbar/data-mapper-toolbar.component.css';\n\n/* loading screen styles */\n.dataMapperBodyHidden { visibility:hidden; position:relative; height:0px; }\n.dataMapperBody { visibility:visible; height:100%; width: 100%; position:relative; margin-left: 0px; }\n\n.DataMapperLoadingMessage { position:absolute; height:100%; top:0%; left:0%; padding-top:20%; width:100%; text-align:center; }\n.DataMapperLoadingMessage .error { color:crimson; }\n.DataMapperLoadingMessage .spinner { vertical-align:text-bottom; }\n.DataMapperLoadingMessage LABEL { vertical-align:text-top; margin-right:3px; }\n.DataMapperLoadingMessage IMG { height:12px; width:12px; vertical-align:middle; }\n\n.DataMapperUI .atlasmapNavbar { }\n.DataMapperUI .atlasmapNavbar .dropdown { position: relative; display: inline-block; }\n.DataMapperUI .atlasmapNavbar .dropdown-content a {\n  float: none;\n  color: black;\n  padding: 12px 16px;\n  text-decoration: none;\n  display: block;\n  text-align: left;\n}\n\n.DataMapperUI .atlasmapNavbar .dropdown .dropdown-content a:hover { background-color: #ddd; }\n.DataMapperUI .atlasmapNavbar A:hover { color:#0088ce; cursor:pointer; text-decoration:none; background-color: #ddd;}\n.DataMapperUI .atlasmapNavbar I.link:hover { color:rgb(54,54,54); }\n.DataMapperUI .atlasmapNavbar .dropdown:hover .dropdown-content { display: block; }\n\n.DataMapperUI .row { margin:0px; }\n.DataMapperUI .row.modalWindow { min-height:0px; }\n.DataMapperUI .row.mainDisplay { height:calc(100% - 10px); position:relative; padding-top:10px; }\n.DataMapperUI .row.mainDisplay .col-md-3 { padding:0px; height:100%; width:30%; }\n.DataMapperUI .row.mainDisplay .col-md-9 { height:100%; padding:0; width: 70%; }\n.DataMapperUI .row.mainDisplay .col-md-9 .docDefIn { float:left; width:45%; height:100%; }\n.DataMapperUI .row.mainDisplay .col-md-9 .lineMachine { float:left; width:10%; height:100%; margin-left:-5px; margin-right:-5px; }\n.DataMapperUI .row.mainDisplay .col-md-9 .docDefOut { float:left; width:45%; height:100%; }\n\n/* constant-field-edit, field-edit, property-field-edit */\n.DataMapperUI .DataMapperEditComponent INPUT, .DataMapperEditComponent .form-group SELECT { width:300px; }\n.DataMapperUI .DataMapperEditComponent .form-group TEXTAREA { margin:auto; }\n.DataMapperUI .DataMapperEditComponent .fieldDocDefName { font-style:italic; }\n\n/* data-mapper-error */\n.DataMapperUI .DataMapperErrorComponent {\n  display: block;\n  box-sizing: border-box;\n  border: 1px;\n  margin-top: 8px;\n  height: 54px;\n  position: fixed;\n  margin-bottom: 8px;\n  overflow: hidden;\n  overflow-x: hidden;\n  width: 40%;\n}\n\n/* data-mapper-error */\n.DataMapperUI .DataMapperErrorComponent {\n  display: block;\n  box-sizing: border-box;\n  border: 1px;\n  margin-top: 8px;\n  height: 54px;\n  position: fixed;\n  margin-bottom: 8px;\n  overflow: hidden;\n  overflow-x: hidden;\n  width: 40%;\n}\n\n/* line-machine */\n.DataMapperUI .LineMachineComponent { height:100%; margin-top:6%; }\n.DataMapperUI .LineMachineComponent line:hover { cursor:pointer; }\n.DataMapperUI .LineMachineComponent svg { width:100%; height:100%; }\n\n/* namespace-edit */\n.DataMapperUI .PropertyEditFieldComponent LABEL { width:105px; }\n.DataMapperUI .PropertyEditFieldComponent INPUT {  width:300px; }\n.DataMapperUI .PropertyEditFieldComponent .targetType INPUT { width:20px; vertical-align:left; }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                              {{ loadingStatus }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DataMapperAppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataMapperAppExampleHostComponent.html":{"url":"components/DataMapperAppExampleHostComponent.html","title":"component - DataMapperAppExampleHostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataMapperAppExampleHostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                MappingManagementService\n                                ErrorHandlerService\n                                DocumentManagementService\n                \n            \n\n\n            \n                selector\n                data-mapper-example-host\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataMapperComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(initializationService: InitializationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        initializationService\n                                                  \n                                                        \n                                                                        InitializationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataMapperComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DataMapperAppComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dataMapperComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, OnInit, OnDestroy } from '@angular/core';\nimport { ConfigModel } from '../models/config.model';\n\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { DocumentManagementService } from '../services/document-management.service';\nimport { MappingManagementService } from '../services/mapping-management.service';\nimport { InitializationService } from '../services/initialization.service';\n\nimport { DataMapperAppComponent } from './app/data-mapper-app.component';\nimport { environment } from '../../../../environments/environment';\nimport { Examples } from '../models/examples';\n\n@Component({\n  selector: 'data-mapper-example-host',\n  template: '',\n  providers: [MappingManagementService, ErrorHandlerService, DocumentManagementService],\n})\n\nexport class DataMapperAppExampleHostComponent implements OnInit {\n\n  @ViewChild('dataMapperComponent')\n  dataMapperComponent: DataMapperAppComponent;\n\n  constructor(private initializationService: InitializationService) { }\n\n  ngOnInit() {\n    // initialize config information before initializing services\n    const c: ConfigModel = this.initializationService.cfg;\n\n    // store references to our services in our config model\n\n    // initialize base urls for our service calls\n    c.initCfg.baseJavaInspectionServiceUrl = environment.backendUrls.javaInspectionServiceUrl;\n    c.initCfg.baseXMLInspectionServiceUrl = environment.backendUrls.xmlInspectionServiceUrl;\n    c.initCfg.baseJSONInspectionServiceUrl = environment.backendUrls.jsonInspectionServiceUrl;\n    c.initCfg.baseMappingServiceUrl = environment.backendUrls.atlasServiceUrl;\n\n    if (environment.xsrf) {\n      c.initCfg.xsrfHeaderName = environment.xsrf.headerName;\n      c.initCfg.xsrfCookieName = environment.xsrf.cookieName;\n      c.initCfg.xsrfDefaultTokenValue = environment.xsrf.defaultTokenValue;\n    }\n\n    // initialize data for our class path service call\n    // note that quotes, newlines, and tabs are escaped\n    c.initCfg.pomPayload = Examples.pom;\n    c.initCfg.classPathFetchTimeoutInMilliseconds = 30000;\n    // if classPath is specified, maven call to resolve pom will be skipped\n    c.initCfg.classPath = null;\n\n    // enable mapping preview mode for standalone\n    c.initCfg.disableMappingPreviewMode = false;\n\n    // enable the navigation bar and import/export for stand-alone\n    c.initCfg.disableNavbar = false;\n\n    // initialize system\n    this.initializationService.initialize();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DataMapperAppExampleHostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataMapperErrorComponent.html":{"url":"components/DataMapperErrorComponent.html","title":"component - DataMapperErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DataMapperErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                data-mapper-error\n            \n\n\n\n\n            \n                templateUrl\n                ./data-mapper-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                    Private\n                                elem\n                            \n                            \n                                    Private\n                                errors\n                            \n                            \n                                    Private\n                                errorSubscription\n                            \n                            \n                                isOpen\n                            \n                            \n                                    Private\n                                mouseEventTimer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                errorServiceRequired\n                            \n                            \n                                getErrors\n                            \n                            \n                                getFirstError\n                            \n                            \n                                getFirstWarning\n                            \n                            \n                                getInfos\n                            \n                            \n                                getWarnings\n                            \n                            \n                                handleAlertClose\n                            \n                            \n                                handleMouseEnter\n                            \n                            \n                                handleMouseLeave\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                showActiveErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorService\n                            \n                            \n                                modalErrorWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorService\n                    \n                \n                \n                    \n                        Type :         ErrorHandlerService\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalErrorWindow\n                    \n                \n                \n                    \n                        Type :         ModalErrorWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            errorServiceRequired\n                        \n                        \n                    \n                \n            \n            \n                \nerrorServiceRequired()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:59\n                \n            \n\n\n            \n                \n                    Return true if an error window is necessary, false otherwise.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFirstError\n                        \n                        \n                    \n                \n            \n            \n                \ngetFirstError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:122\n                \n            \n\n\n            \n                \n                    The fixed error window only needs to show one error.  The full collection of errors is\navailable from the error modal window.\n\n\n                    \n                        Returns :         ErrorInfo\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFirstWarning\n                        \n                        \n                    \n                \n            \n            \n                \ngetFirstWarning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:130\n                \n            \n\n\n            \n                \n                    The fixed error window only needs to show one warning.  The full collection of warnings is\navailable from the error modal window.\n\n\n                    \n                        Returns :         ErrorInfo\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInfos\n                        \n                        \n                    \n                \n            \n            \n                \ngetInfos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWarnings\n                        \n                        \n                    \n                \n            \n            \n                \ngetWarnings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleAlertClose\n                        \n                        \n                    \n                \n            \n            \n                \nhandleAlertClose(e: ErrorInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                ErrorInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseEnter\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseEnter(evt1: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:87\n                \n            \n\n\n            \n                \n                    Handle the event of a user mousing over the error window.  If they stay within the window\nfor a half-second then the active errors modal will show all of the errors/ warnings.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt1\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseLeave\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseLeave(evt1: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:102\n                \n            \n\n\n            \n                \n                    Handle the event of a user mousing out of the error window.  Disarm the event timer if that case.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt1\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            showActiveErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showActiveErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:112\n                \n            \n\n\n            \n                \n                    Show all errors/ warnings in a separate modal window.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            elem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorInfo[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOpen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mouseEventTimer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnDestroy } from '@angular/core';\n\nimport { ModalErrorWindowComponent } from '../modal/modal-error-window.component';\n\nimport { ErrorInfo, ErrorLevel } from '../../models/error.model';\nimport { ErrorHandlerService } from '../../services/error-handler.service';\nimport { ConfigModel } from '../../models/config.model';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'data-mapper-error',\n  templateUrl: './data-mapper-error.component.html',\n})\n\nexport class DataMapperErrorComponent implements OnInit, OnDestroy {\n  @Input() errorService: ErrorHandlerService;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  isOpen = true;\n  cfg: ConfigModel = null;\n\n  private elem = null;\n  private mouseEventTimer = null;\n  private errors: ErrorInfo[] = [];\n  private errorSubscription: Subscription;\n\n  ngOnInit() {\n    this.cfg = ConfigModel.getConfig();\n    this.errorSubscription = this.errorService.subscribe((errors: ErrorInfo[]) => {\n      this.errors = errors;\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.errorSubscription) {\n      this.errorSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Return true if an error window is necessary, false otherwise.\n   */\n  errorServiceRequired(): boolean {\n    return (this.errorService\n      && (ErrorHandlerService.filterWith(this.errors, this.cfg.mappings ? this.cfg.mappings.activeMapping : null).length > 0));\n  }\n\n  getErrors(): ErrorInfo[] {\n    return ErrorHandlerService.filterWith(this.errors, this.cfg.mappings.activeMapping, ErrorLevel.ERROR);\n  }\n\n  getWarnings(): ErrorInfo[] {\n    return ErrorHandlerService.filterWith(this.errors, this.cfg.mappings.activeMapping, ErrorLevel.WARN);\n  }\n\n  getInfos(): ErrorInfo[] {\n    return ErrorHandlerService.filterWith(this.errors, this.cfg.mappings.activeMapping, ErrorLevel.INFO);\n  }\n\n  handleAlertClose(e: ErrorInfo): void {\n    this.isOpen = true;\n    this.errorService.removeError(e.identifier, e.scope);\n  }\n\n  /**\n   * Handle the event of a user mousing over the error window.  If they stay within the window\n   * for a half-second then the active errors modal will show all of the errors/ warnings.\n   *\n   * @param evt1\n   */\n  handleMouseEnter(evt1: MouseEvent): void {\n    this.mouseEventTimer =  setTimeout(() => {\n        if (this.elem != null) {\n            evt1.stopPropagation();\n            evt1.preventDefault();\n          }\n      this.showActiveErrors();\n    }, 500);\n  }\n\n  /**\n   * Handle the event of a user mousing out of the error window.  Disarm the event timer if that case.\n   *\n   * @param evt1\n   */\n  handleMouseLeave(evt1: MouseEvent): void {\n    if (this.mouseEventTimer) {\n      clearTimeout(this.mouseEventTimer);\n    }\n    this.mouseEventTimer = null;\n  }\n\n  /**\n   * Show all errors/ warnings in a separate modal window.\n   */\n  private showActiveErrors(): void {\n    this.modalErrorWindow.reset();\n    this.modalErrorWindow.setErrors(ErrorHandlerService.filterWith(this.errors, this.cfg.mappings.activeMapping));\n    this.modalErrorWindow.show();\n  }\n\n  /**\n   * The fixed error window only needs to show one error.  The full collection of errors is\n   * available from the error modal window.\n   */\n  getFirstError(): ErrorInfo {\n    return this.getErrors()[0];\n  }\n\n  /**\n   * The fixed error window only needs to show one warning.  The full collection of warnings is\n   * available from the error modal window.\n   */\n  getFirstWarning(): ErrorInfo {\n    return this.getWarnings()[0];\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    {{ i.message }}\n  \n\n  \n    \n    {{ getFirstError().message }}\n  \n\n  \n    \n    {{ getFirstWarning().message }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ i.message }}            {{ getFirstError().message }}            {{ getFirstWarning().message }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DataMapperErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataMapperInitializationModel.html":{"url":"classes/DataMapperInitializationModel.html","title":"class - DataMapperInitializationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataMapperInitializationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/config.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                admHttpTimeout\n                            \n                            \n                                baseJavaInspectionServiceUrl\n                            \n                            \n                                baseJSONInspectionServiceUrl\n                            \n                            \n                                baseMappingServiceUrl\n                            \n                            \n                                baseXMLInspectionServiceUrl\n                            \n                            \n                                classNameBlacklist\n                            \n                            \n                                classPath\n                            \n                            \n                                classPathFetchTimeoutInMilliseconds\n                            \n                            \n                                dataMapperVersion\n                            \n                            \n                                disableMappingPreviewMode\n                            \n                            \n                                disableNavbar\n                            \n                            \n                                disablePrivateOnlyFields\n                            \n                            \n                                disableProtectedOnlyFields\n                            \n                            \n                                disablePublicGetterSetterFields\n                            \n                            \n                                disablePublicOnlyFields\n                            \n                            \n                                fieldNameBlacklist\n                            \n                            \n                                initializationErrorOccurred\n                            \n                            \n                                initialized\n                            \n                            \n                                loadingStatus\n                            \n                            \n                                mappingInitialized\n                            \n                            \n                                pomPayload\n                            \n                            \n                                xsrfCookieName\n                            \n                            \n                                xsrfDefaultTokenValue\n                            \n                            \n                                xsrfHeaderName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:68\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            admHttpTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseJavaInspectionServiceUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseJSONInspectionServiceUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseMappingServiceUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseXMLInspectionServiceUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            classNameBlacklist\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            classPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            classPathFetchTimeoutInMilliseconds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 30000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataMapperVersion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '0.9.2017.07.28'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableMappingPreviewMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableNavbar\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disablePrivateOnlyFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableProtectedOnlyFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disablePublicGetterSetterFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disablePublicOnlyFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldNameBlacklist\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initializationErrorOccurred\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadingStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Loading.'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappingInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pomPayload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xsrfCookieName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xsrfDefaultTokenValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            xsrfHeaderName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NGXLogger, NgxLoggerLevel } from 'ngx-logger';\nimport { environment } from '../../../../environments/environment';\nimport { MappingDefinition } from './mapping-definition.model';\nimport { DocumentDefinition } from './document-definition.model';\n\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { DocumentManagementService } from '../services/document-management.service';\nimport { MappingManagementService } from '../services/mapping-management.service';\nimport { InitializationService } from '../services/initialization.service';\nimport { ErrorInfo } from '../models/error.model';\n\nimport { DocumentType, InspectionType, CollectionType } from '../common/config.types';\nimport { FieldActionService } from '../services/field-action.service';\nimport { FileManagementService } from '../services/file-management.service';\n\nexport class DataMapperInitializationModel {\n  dataMapperVersion = '0.9.2017.07.28';\n  initialized = false;\n  loadingStatus = 'Loading.';\n  admHttpTimeout = 30000;  // 30 seconds\n  initializationErrorOccurred = false;\n\n  baseJavaInspectionServiceUrl: string;\n  baseXMLInspectionServiceUrl: string;\n  baseJSONInspectionServiceUrl: string;\n  baseMappingServiceUrl: string;\n\n  xsrfHeaderName: string;\n  xsrfCookieName: string;\n  xsrfDefaultTokenValue: string;\n\n  /* class path fetching configuration */\n  classPathFetchTimeoutInMilliseconds = 30000;\n  // if classPath is specified, maven call to resolve pom will be skipped\n  pomPayload: string;\n\n  classPath: string;\n\n  /* inspection service filtering flags */\n  fieldNameBlacklist: string[] = [];\n  classNameBlacklist: string[] = [];\n  disablePrivateOnlyFields = false;\n  disableProtectedOnlyFields = false;\n  disablePublicOnlyFields = false;\n  disablePublicGetterSetterFields = false;\n\n  disableMappingPreviewMode = false;\n\n  /* enable the navigation bar and import/export */\n  disableNavbar = true;\n\n  mappingInitialized = false;\n\n  constructor() {\n    if (environment.xsrf) {\n      this.xsrfHeaderName = environment.xsrf.headerName;\n      this.xsrfCookieName = environment.xsrf.cookieName;\n      this.xsrfDefaultTokenValue = environment.xsrf.defaultTokenValue;\n    }\n  }\n\n}\n\nexport class DocumentInitializationModel {\n  id: string;\n  type: DocumentType;\n  name: string;\n  description: string;\n  isSource: boolean;\n  showFields = true;\n  inspectionType: InspectionType;\n  inspectionSource: string;\n  inspectionResult: string;\n  selectedRoot: string;\n  collectionType: CollectionType;\n  collectionClassName: string;\n}\n\nexport class ConfigModel {\n  static mappingServicesPackagePrefix = 'io.atlasmap.v2';\n  static javaServicesPackagePrefix = 'io.atlasmap.java.v2';\n  static jsonServicesPackagePrefix = 'io.atlasmap.json.v2';\n  static xmlServicesPackagePrefix = 'io.atlasmap.xml.v2';\n  private static cfg: ConfigModel = new ConfigModel();\n\n  initCfg: DataMapperInitializationModel = new DataMapperInitializationModel;\n\n  /* current ui state config */\n  showMappingDetailTray = false;\n  showMappingTable = false;\n  showNamespaceTable = false;\n  showLinesAlways = true;\n  showTypes = false;\n  showMappedFields = true;\n  showUnmappedFields = true;\n  _showMappingPreview = false;\n  currentDraggedField: any = null;\n\n  documentService: DocumentManagementService;\n  mappingService: MappingManagementService;\n  errorService: ErrorHandlerService;\n  initializationService: InitializationService;\n  fieldActionService: FieldActionService;\n  fileService: FileManagementService;\n\n  sourceDocs: DocumentDefinition[] = [];\n  targetDocs: DocumentDefinition[] = [];\n  propertyDoc: DocumentDefinition = new DocumentDefinition();\n  constantDoc: DocumentDefinition = new DocumentDefinition();\n  mappingFiles: string[] = [];\n\n  mappings: MappingDefinition = null;\n\n  preloadedMappingJson: string;\n  preloadedFieldActionMetadata: any;\n\n  logger: NGXLogger;\n\n  constructor() {\n    this.propertyDoc.type = DocumentType.PROPERTY;\n    this.propertyDoc.name = 'Properties';\n    this.propertyDoc.isSource = true;\n    this.propertyDoc.showFields = false;\n    this.constantDoc.type = DocumentType.CONSTANT;\n    this.constantDoc.name = 'Constants';\n    this.constantDoc.isSource = true;\n    this.constantDoc.showFields = false;\n  }\n\n  static getConfig(): ConfigModel {\n    return ConfigModel.cfg;\n  }\n\n  static setConfig(cfg: ConfigModel): void {\n    ConfigModel.cfg = cfg;\n  }\n\n  set showMappingPreview(show: boolean) {\n    if (show && !this._showMappingPreview) {\n      this.mappingService.enableMappingPreview();\n    } else if (!show && this._showMappingPreview) {\n      this.mappingService.disableMappingPreview();\n    }\n    this._showMappingPreview = show;\n  }\n\n  get showMappingPreview(): boolean {\n    return this._showMappingPreview;\n  }\n\n  isDebugEnabled(): boolean {\n    return [NgxLoggerLevel.DEBUG, NgxLoggerLevel.TRACE].includes(this.logger.getConfigSnapshot().level);\n  }\n\n  isTraceEnabled(): boolean {\n    return this.logger.getConfigSnapshot().level === NgxLoggerLevel.TRACE;\n  }\n\n  addDocument(docInitModel: DocumentInitializationModel): DocumentDefinition {\n    const docDef: DocumentDefinition = new DocumentDefinition();\n    docDef.initModel = docInitModel;\n    docDef.id = docInitModel.id;\n    docDef.type = docInitModel.type;\n    docDef.name = docInitModel.name;\n    docDef.description = docInitModel.description;\n    docDef.isSource = docInitModel.isSource;\n    docDef.showFields = docInitModel.showFields;\n    docDef.inspectionType = docInitModel.inspectionType;\n    docDef.inspectionSource = docInitModel.inspectionSource;\n    docDef.inspectionResult = docInitModel.inspectionResult;\n    docDef.selectedRoot = docInitModel.selectedRoot;\n\n    if (docDef.type === DocumentType.XSD) {\n      docDef.uri = 'atlas:' + 'xml' + ':' + docDef.id;\n    } else if (docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri = 'atlas:' + 'java' + ':' + docDef.id;\n    } else {\n      docDef.uri = 'atlas:' + docDef.type.toLowerCase() + ':' + docDef.id;\n    }\n\n    if (docDef.type === DocumentType.JAVA || docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri += '?className=' + docDef.inspectionSource;\n      if (docInitModel.collectionType && docInitModel.collectionType !== CollectionType.NONE) {\n        docDef.uri += '&collectionType=' + docInitModel.collectionType;\n        if (docInitModel.collectionClassName) {\n          docDef.uri += '&collectionClassName=' + docInitModel.collectionClassName;\n        }\n      }\n    }\n\n    if (docInitModel.isSource) {\n      this.sourceDocs.push(docDef);\n    } else {\n      this.targetDocs.push(docDef);\n    }\n    return docDef;\n  }\n\n  addDocuments(docModels: DocumentInitializationModel[]): DocumentDefinition[] {\n    const docDefs: DocumentDefinition[] = [];\n    for (const docModel of docModels) {\n      docDefs.push(this.addDocument(docModel));\n    }\n    return docDefs;\n  }\n\n  getDocsWithoutPropertyDoc(isSource: boolean): DocumentDefinition[] {\n    return [].concat(isSource ? this.sourceDocs : this.targetDocs);\n  }\n\n  getDocs(isSource: boolean): DocumentDefinition[] {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    return isSource ? [this.propertyDoc, this.constantDoc].concat(docs) : docs;\n  }\n\n  /**\n   * Return a uri:DocumentDefinition document map for either the sources or targets panel contents.\n   *\n   * @param cfg\n   * @param isSource\n   */\n  getDocUriMap(cfg: ConfigModel, isSource: boolean): {[key: string]: DocumentDefinition} {\n    const docMap: {[key: string]: DocumentDefinition} = {};\n    for (const doc of cfg.getDocs(isSource)) {\n      docMap[doc.uri] = doc;\n    }\n    return docMap;\n  }\n\n  /**\n   * Clear source/target/mapping documents from the model.  Reset constant and property document definitions.\n   */\n  clearDocs(): void {\n    this.sourceDocs = [];\n    this.targetDocs = [];\n    this.propertyDoc.clearFields();\n    this.constantDoc.clearFields();\n    this.mappingFiles = [];\n  }\n\n  hasJavaDocuments(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isClassPathResolutionNeeded(): boolean {\n    if (this.initCfg.classPath) {\n      return false;\n    }\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA && doc.inspectionResult == null) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getDocForIdentifier(documentId: string, isSource: boolean): DocumentDefinition {\n    for (const d of this.getDocs(isSource)) {\n      if (d.id === documentId) {\n        return d;\n      }\n    }\n    return null;\n  }\n\n  getFirstXmlDoc(isSource: boolean) {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    for (const doc of docs) {\n      if (doc.type === DocumentType.XML) {\n        return doc;\n      }\n    }\n    return null;\n  }\n\n  getAllDocs(): DocumentDefinition[] {\n    return [this.propertyDoc, this.constantDoc].concat(this.sourceDocs).concat(this.targetDocs);\n  }\n\n  documentsAreLoaded(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (!doc.initialized) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n}\n\n/**\n * Place all custom events here.\n */\nexport class AdmRedrawMappingLinesEvent {\n  _lmcInstance: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataMapperModule.html":{"url":"modules/DataMapperModule.html","title":"module - DataMapperModule","body":"\n                   \n\n\n\n\n    Modules\n    DataMapperModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataMapperModule\n\n\n\ncluster_DataMapperModule_declarations\n\n\n\ncluster_DataMapperModule_exports\n\n\n\ncluster_DataMapperModule_providers\n\n\n\n\nClassNameComponent\n\nClassNameComponent\n\n\n\nDataMapperModule\n\nDataMapperModule\n\nDataMapperModule -->\n\nClassNameComponent->DataMapperModule\n\n\n\n\n\nCollapsableHeaderComponent\n\nCollapsableHeaderComponent\n\nDataMapperModule -->\n\nCollapsableHeaderComponent->DataMapperModule\n\n\n\n\n\nConstantFieldEditComponent\n\nConstantFieldEditComponent\n\nDataMapperModule -->\n\nConstantFieldEditComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppComponent\n\nDataMapperAppComponent\n\nDataMapperModule -->\n\nDataMapperAppComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppExampleHostComponent\n\nDataMapperAppExampleHostComponent\n\nDataMapperModule -->\n\nDataMapperAppExampleHostComponent->DataMapperModule\n\n\n\n\n\nDataMapperErrorComponent\n\nDataMapperErrorComponent\n\nDataMapperModule -->\n\nDataMapperErrorComponent->DataMapperModule\n\n\n\n\n\nDocumentDefinitionComponent\n\nDocumentDefinitionComponent\n\nDataMapperModule -->\n\nDocumentDefinitionComponent->DataMapperModule\n\n\n\n\n\nDocumentFieldDetailComponent\n\nDocumentFieldDetailComponent\n\nDataMapperModule -->\n\nDocumentFieldDetailComponent->DataMapperModule\n\n\n\n\n\nEmptyModalBodyComponent\n\nEmptyModalBodyComponent\n\nDataMapperModule -->\n\nEmptyModalBodyComponent->DataMapperModule\n\n\n\n\n\nExpressionComponent\n\nExpressionComponent\n\nDataMapperModule -->\n\nExpressionComponent->DataMapperModule\n\n\n\n\n\nFieldEditComponent\n\nFieldEditComponent\n\nDataMapperModule -->\n\nFieldEditComponent->DataMapperModule\n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nDataMapperModule -->\n\nFocusDirective->DataMapperModule\n\n\n\n\n\nLineMachineComponent\n\nLineMachineComponent\n\nDataMapperModule -->\n\nLineMachineComponent->DataMapperModule\n\n\n\n\n\nLookupTableComponent\n\nLookupTableComponent\n\nDataMapperModule -->\n\nLookupTableComponent->DataMapperModule\n\n\n\n\n\nMappingDetailComponent\n\nMappingDetailComponent\n\nDataMapperModule -->\n\nMappingDetailComponent->DataMapperModule\n\n\n\n\n\nMappingFieldActionArgumentComponent\n\nMappingFieldActionArgumentComponent\n\nDataMapperModule -->\n\nMappingFieldActionArgumentComponent->DataMapperModule\n\n\n\n\n\nMappingFieldActionComponent\n\nMappingFieldActionComponent\n\nDataMapperModule -->\n\nMappingFieldActionComponent->DataMapperModule\n\n\n\n\n\nMappingFieldContainerComponent\n\nMappingFieldContainerComponent\n\nDataMapperModule -->\n\nMappingFieldContainerComponent->DataMapperModule\n\n\n\n\n\nMappingFieldDetailComponent\n\nMappingFieldDetailComponent\n\nDataMapperModule -->\n\nMappingFieldDetailComponent->DataMapperModule\n\n\n\n\n\nMappingListComponent\n\nMappingListComponent\n\nDataMapperModule -->\n\nMappingListComponent->DataMapperModule\n\n\n\n\n\nMappingListFieldComponent\n\nMappingListFieldComponent\n\nDataMapperModule -->\n\nMappingListFieldComponent->DataMapperModule\n\n\n\n\n\nMappingSelectionComponent\n\nMappingSelectionComponent\n\nDataMapperModule -->\n\nMappingSelectionComponent->DataMapperModule\n\n\n\n\n\nMappingSelectionSectionComponent\n\nMappingSelectionSectionComponent\n\nDataMapperModule -->\n\nMappingSelectionSectionComponent->DataMapperModule\n\n\n\n\n\nModalErrorDetailComponent\n\nModalErrorDetailComponent\n\nDataMapperModule -->\n\nModalErrorDetailComponent->DataMapperModule\n\n\n\n\n\nModalErrorWindowComponent\n\nModalErrorWindowComponent\n\nDataMapperModule -->\n\nModalErrorWindowComponent->DataMapperModule\n\n\n\n\n\nModalWindowComponent\n\nModalWindowComponent\n\nDataMapperModule -->\n\nModalWindowComponent->DataMapperModule\n\n\n\n\n\nNamespaceEditComponent\n\nNamespaceEditComponent\n\nDataMapperModule -->\n\nNamespaceEditComponent->DataMapperModule\n\n\n\n\n\nNamespaceListComponent\n\nNamespaceListComponent\n\nDataMapperModule -->\n\nNamespaceListComponent->DataMapperModule\n\n\n\n\n\nPropertyFieldEditComponent\n\nPropertyFieldEditComponent\n\nDataMapperModule -->\n\nPropertyFieldEditComponent->DataMapperModule\n\n\n\n\n\nTemplateEditComponent\n\nTemplateEditComponent\n\nDataMapperModule -->\n\nTemplateEditComponent->DataMapperModule\n\n\n\n\n\nToErrorIconClassPipe\n\nToErrorIconClassPipe\n\nDataMapperModule -->\n\nToErrorIconClassPipe->DataMapperModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nDataMapperModule -->\n\nToolbarComponent->DataMapperModule\n\n\n\n\n\nTransitionSelectionComponent\n\nTransitionSelectionComponent\n\nDataMapperModule -->\n\nTransitionSelectionComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppComponent \n\nDataMapperAppComponent \n\nDataMapperAppComponent  -->\n\nDataMapperModule->DataMapperAppComponent \n\n\n\n\n\nDataMapperAppExampleHostComponent \n\nDataMapperAppExampleHostComponent \n\nDataMapperAppExampleHostComponent  -->\n\nDataMapperModule->DataMapperAppExampleHostComponent \n\n\n\nDataMapperAppExampleHostComponent  -->\n\nDataMapperModule->DataMapperAppExampleHostComponent \n\n\n\n\n\nModalErrorWindowComponent \n\nModalErrorWindowComponent \n\nModalErrorWindowComponent  -->\n\nDataMapperModule->ModalErrorWindowComponent \n\n\n\n\n\nModalWindowComponent \n\nModalWindowComponent \n\nModalWindowComponent  -->\n\nDataMapperModule->ModalWindowComponent \n\n\n\n\n\nDocumentManagementService\n\nDocumentManagementService\n\nDataMapperModule -->\n\nDocumentManagementService->DataMapperModule\n\n\n\n\n\nErrorHandlerService\n\nErrorHandlerService\n\nDataMapperModule -->\n\nErrorHandlerService->DataMapperModule\n\n\n\n\n\nFieldActionService\n\nFieldActionService\n\nDataMapperModule -->\n\nFieldActionService->DataMapperModule\n\n\n\n\n\nFileManagementService\n\nFileManagementService\n\nDataMapperModule -->\n\nFileManagementService->DataMapperModule\n\n\n\n\n\nInitializationService\n\nInitializationService\n\nDataMapperModule -->\n\nInitializationService->DataMapperModule\n\n\n\n\n\nMappingManagementService\n\nMappingManagementService\n\nDataMapperModule -->\n\nMappingManagementService->DataMapperModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ClassNameComponent\n                        \n                        \n                            CollapsableHeaderComponent\n                        \n                        \n                            ConstantFieldEditComponent\n                        \n                        \n                            DataMapperAppComponent\n                        \n                        \n                            DataMapperAppExampleHostComponent\n                        \n                        \n                            DataMapperErrorComponent\n                        \n                        \n                            DocumentDefinitionComponent\n                        \n                        \n                            DocumentFieldDetailComponent\n                        \n                        \n                            EmptyModalBodyComponent\n                        \n                        \n                            ExpressionComponent\n                        \n                        \n                            FieldEditComponent\n                        \n                        \n                            FocusDirective\n                        \n                        \n                            LineMachineComponent\n                        \n                        \n                            LookupTableComponent\n                        \n                        \n                            MappingDetailComponent\n                        \n                        \n                            MappingFieldActionArgumentComponent\n                        \n                        \n                            MappingFieldActionComponent\n                        \n                        \n                            MappingFieldContainerComponent\n                        \n                        \n                            MappingFieldDetailComponent\n                        \n                        \n                            MappingListComponent\n                        \n                        \n                            MappingListFieldComponent\n                        \n                        \n                            MappingSelectionComponent\n                        \n                        \n                            MappingSelectionSectionComponent\n                        \n                        \n                            ModalErrorDetailComponent\n                        \n                        \n                            ModalErrorWindowComponent\n                        \n                        \n                            ModalWindowComponent\n                        \n                        \n                            NamespaceEditComponent\n                        \n                        \n                            NamespaceListComponent\n                        \n                        \n                            PropertyFieldEditComponent\n                        \n                        \n                            TemplateEditComponent\n                        \n                        \n                            ToErrorIconClassPipe\n                        \n                        \n                            ToolbarComponent\n                        \n                        \n                            TransitionSelectionComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ClassNameComponent\n                        \n                        \n                            ConstantFieldEditComponent\n                        \n                        \n                            EmptyModalBodyComponent\n                        \n                        \n                            FieldEditComponent\n                        \n                        \n                            LookupTableComponent\n                        \n                        \n                            MappingSelectionComponent\n                        \n                        \n                            NamespaceEditComponent\n                        \n                        \n                            PropertyFieldEditComponent\n                        \n                        \n                            TemplateEditComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DocumentManagementService\n                        \n                        \n                            ErrorHandlerService\n                        \n                        \n                            FieldActionService\n                        \n                        \n                            FileManagementService\n                        \n                        \n                            InitializationService\n                        \n                        \n                            MappingManagementService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DataMapperAppComponent\n                        \n                        \n                            DataMapperAppExampleHostComponent\n                        \n                        \n                            ModalErrorWindowComponent\n                        \n                        \n                            ModalWindowComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            DataMapperAppExampleHostComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            withInterceptor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    withInterceptor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/data-mapper.module.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n    Copyright (C) 2017 Red Hat, Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\nimport { NgModule, ModuleWithProviders, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HttpClientXsrfModule, HttpXsrfTokenExtractor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AlertModule, BsDropdownModule, TooltipModule, TypeaheadModule } from 'ngx-bootstrap';\nimport { LoggerModule, NGXLogger } from 'ngx-logger';\nimport { environment } from '../../../environments/environment';\nimport { DocumentManagementService } from './services/document-management.service';\nimport { MappingManagementService } from './services/mapping-management.service';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { InitializationService } from './services/initialization.service';\n\nimport { DataMapperAppExampleHostComponent } from './components/data-mapper-example-host.component';\nimport { DataMapperAppComponent } from './components/app/data-mapper-app.component';\nimport { DataMapperErrorComponent } from './components/app/data-mapper-error.component';\nimport { ModalWindowComponent, EmptyModalBodyComponent } from './components/modal/modal-window.component';\nimport { ModalErrorWindowComponent } from './components/modal/modal-error-window.component';\nimport { ModalErrorDetailComponent } from './components/modal/modal-error-detail.component';\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\nimport { TemplateEditComponent } from './components/app/template-edit.component';\nimport { LineMachineComponent } from './components/app/line-machine.component';\nimport { ClassNameComponent } from './components/document/class-name.component';\nimport { CollapsableHeaderComponent } from './components/mapping-detail/collapsable-header.component';\nimport { DocumentDefinitionComponent } from './components/document/document-definition.component';\nimport { DocumentFieldDetailComponent } from './components/document/document-field-detail.component';\nimport { PropertyFieldEditComponent } from './components/app/property-field-edit.component';\nimport { ConstantFieldEditComponent } from './components/app/constant-field-edit.component';\nimport { FieldEditComponent } from './components/app/field-edit.component';\nimport { NamespaceEditComponent } from './components/app/namespace-edit.component';\nimport { MappingListComponent } from './components/mapping-list/mapping-list.component';\nimport { MappingListFieldComponent } from './components/mapping-list/mapping-list-field.component';\nimport { NamespaceListComponent } from './components/mapping-list/namespace-list.component';\nimport { MappingDetailComponent } from './components/mapping-detail/mapping-detail.component';\nimport { MappingFieldContainerComponent } from './components/mapping-detail/mapping-field-container.component';\nimport { MappingFieldDetailComponent } from './components/mapping-detail/mapping-field-detail.component';\nimport { MappingFieldActionComponent } from './components/mapping-detail/mapping-field-action.component';\nimport { MappingFieldActionArgumentComponent } from './components/mapping-detail/mapping-field-action-argument.component';\nimport { MappingSelectionComponent } from './components/mapping-detail/mapping-selection.component';\nimport { MappingSelectionSectionComponent } from './components/mapping-detail/mapping-selection-section.component';\nimport { LookupTableComponent } from './components/mapping-detail/lookup-table.component';\nimport { TransitionSelectionComponent } from './components/mapping-detail/transition-selection.component';\nimport { FocusDirective } from './common/focus.directive';\nimport { ExpressionComponent } from './components/toolbar/expression.component';\n\n// export services/types for consumers of this module\nexport { ApiXsrfInterceptor, ApiHttpXsrfTokenExtractor } from './services/api-xsrf.service';\nexport { ErrorHandlerService } from './services/error-handler.service';\nexport { DocumentManagementService } from './services/document-management.service';\nexport { MappingManagementService } from './services/mapping-management.service';\nexport { InitializationService } from './services/initialization.service';\nexport { DocumentDefinition } from './models/document-definition.model';\nexport { MappingDefinition } from './models/mapping-definition.model';\nexport { DocumentType, InspectionType } from './common/config.types';\nexport { ConfigModel, DocumentInitializationModel } from './models/config.model';\nexport { MappingModel } from './models/mapping.model';\nexport { MappingSerializer } from './utils/mapping-serializer';\n\nimport { ToErrorIconClassPipe } from './common/to-error-icon-class.pipe';\nimport { ApiXsrfInterceptor, ApiHttpXsrfTokenExtractor } from './services/api-xsrf.service';\nimport { FieldActionService } from './services/field-action.service';\nimport { FileManagementService } from './services/file-management.service';\n\nexport { DataMapperAppComponent } from './components/app/data-mapper-app.component';\n\nexport const typeaheadModuleForRoot: ModuleWithProviders = TypeaheadModule.forRoot();\nexport const tooltipModuleForRoot: ModuleWithProviders = TooltipModule.forRoot();\nexport const bsDropdownModuleForRoot: ModuleWithProviders = BsDropdownModule.forRoot();\nexport const httpClientXsrfModuleForRoot: ModuleWithProviders = HttpClientXsrfModule.withOptions(environment.xsrf);\nexport const alertModuleForRoot: ModuleWithProviders = AlertModule.forRoot();\nexport const loggerModuleForRoot: ModuleWithProviders = LoggerModule.forRoot(environment.ngxLoggerConfig);\n\n// @dynamic\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    typeaheadModuleForRoot,\n    tooltipModuleForRoot,\n    bsDropdownModuleForRoot,\n    httpClientXsrfModuleForRoot,\n    alertModuleForRoot,\n    loggerModuleForRoot,\n  ],\n  declarations: [\n    DataMapperAppComponent,\n    ClassNameComponent,\n    DocumentDefinitionComponent,\n    MappingDetailComponent,\n    MappingFieldContainerComponent,\n    ModalWindowComponent,\n    ModalErrorWindowComponent,\n    ModalErrorDetailComponent,\n    DataMapperAppExampleHostComponent,\n    MappingFieldActionComponent,\n    MappingFieldActionArgumentComponent,\n    MappingFieldDetailComponent,\n    DocumentFieldDetailComponent,\n    DataMapperErrorComponent,\n    TransitionSelectionComponent,\n    LineMachineComponent,\n    MappingSelectionComponent,\n    MappingSelectionSectionComponent,\n    ToolbarComponent,\n    LookupTableComponent,\n    EmptyModalBodyComponent,\n    FieldEditComponent,\n    NamespaceEditComponent,\n    PropertyFieldEditComponent,\n    ConstantFieldEditComponent,\n    CollapsableHeaderComponent,\n    MappingListComponent,\n    MappingListFieldComponent,\n    NamespaceListComponent,\n    TemplateEditComponent,\n    ExpressionComponent,\n    FocusDirective,\n    ToErrorIconClassPipe\n  ],\n  exports: [\n    DataMapperAppExampleHostComponent,\n    ModalWindowComponent,\n    ModalErrorWindowComponent,\n    DataMapperAppComponent,\n    AlertModule\n  ],\n  providers: [\n    DocumentManagementService,\n    MappingManagementService,\n    ErrorHandlerService,\n    InitializationService,\n    FieldActionService,\n    FileManagementService,\n    NGXLogger,\n  ],\n  entryComponents: [\n    MappingSelectionComponent,\n    LookupTableComponent,\n    EmptyModalBodyComponent,\n    FieldEditComponent,\n    NamespaceEditComponent,\n    PropertyFieldEditComponent,\n    ClassNameComponent,\n    ConstantFieldEditComponent,\n    TemplateEditComponent,\n  ],\n  bootstrap: [DataMapperAppExampleHostComponent],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ]\n})\n\nexport class DataMapperModule {\n  static withInterceptor(): Array {\n    return [\n      { ngModule: DataMapperModule,\n        providers: [\n          DocumentManagementService,\n          MappingManagementService,\n          ErrorHandlerService,\n          FieldActionService,\n          FileManagementService,\n          InitializationService,\n          {\n            provide: HTTP_INTERCEPTORS,\n            useClass: ApiXsrfInterceptor,\n            multi: true\n          },\n        ],\n      },\n      { ngModule: DataMapperModule,\n        providers: [\n          DocumentManagementService,\n          MappingManagementService,\n          ErrorHandlerService,\n          FieldActionService,\n          FileManagementService,\n          InitializationService,\n          {\n            provide: HttpXsrfTokenExtractor,\n            useClass: ApiHttpXsrfTokenExtractor,\n            multi: false\n          },\n        ],\n      }\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataMapperUtil.html":{"url":"classes/DataMapperUtil.html","title":"class - DataMapperUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataMapperUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                HTTP_STATUS_NO_CONTENT\n                            \n                            \n                                    Static\n                                HTTP_STATUS_OK\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                extractDisplayPath\n                            \n                            \n                                    Static\n                                    Async\n                                readBinaryFile\n                            \n                            \n                                    Static\n                                    Async\n                                readFile\n                            \n                            \n                                    Static\n                                removeItemFromArray\n                            \n                            \n                                    Static\n                                splitByString\n                            \n                            \n                                    Static\n                                str2bytes\n                            \n                            \n                                    Static\n                                toDisplayable\n                            \n                            \n                                    Static\n                                    Async\n                                writeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            HTTP_STATUS_NO_CONTENT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 204\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            HTTP_STATUS_OK\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 200\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            extractDisplayPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractDisplayPath(path: string, fieldWidth: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:152\n                \n            \n\n\n            \n                \n                    Return a string path that fits into the width provided.  Capture as much of the leaf\nas possible, then as much of the beginning with the remaining space.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fieldWidth\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            readBinaryFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readBinaryFile(fileName: any, reader: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:101\n                \n            \n\n\n            \n                \n                    Perform an asynchronous binary read of the specified file name with the specified reader object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    fileName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nfile to read\n\n\n                                    \n                                \n                                \n                                    reader\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nreader object\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            readFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(fileName: any, reader: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:85\n                \n            \n\n\n            \n                \n                    Asynchronously read from the specified file and return as a string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reader\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            removeItemFromArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeItemFromArray(item: any, items: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    items\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            splitByString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    splitByString(inStr: string, splitMarker: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:46\n                \n            \n\n\n            \n                \n                    Split a source string by the specified substring into a string array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inStr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    splitMarker\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            str2bytes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    str2bytes(str: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:71\n                \n            \n\n\n            \n                \n                    Turn a string into a byte array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Uint8Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            toDisplayable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toDisplayable(camelCaseString: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:130\n                \n            \n\n\n            \n                \n                    Convert a camel-case string into human-readable form.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camelCaseString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Async\n                            writeFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeFile(fileContent: Blob, fName: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts:118\n                \n            \n\n\n            \n                \n                    Asynchronously write the specified file content (Blob) to the specified file name.  It will appear\nin the user's local Downloads directory (or equivalent).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileContent\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { saveAs } from 'file-saver';\n\nexport class DataMapperUtil {\n\n  static HTTP_STATUS_OK = 200;\n  static HTTP_STATUS_NO_CONTENT = 204;\n\n  static removeItemFromArray(item: any, items: any[]): boolean {\n    if (item == null || items == null || items.length === 0) {\n      return false;\n    }\n    let i = 0;\n    let itemWasRemoved = false;\n    while (i  {\n    return new Promise((resolve, reject) => {\n      reader.onload = (event: any) => {\n        const fileBody = reader.result;\n        resolve(fileBody);\n      };\n      reader.readAsText(fileName);\n    });\n  }\n\n  /**\n   *  Perform an asynchronous binary read of the specified file name with the specified reader object.\n   *\n   * @param fileName - file to read\n   * @param reader - reader object\n   */\n  static async readBinaryFile(fileName: any, reader: any): Promise {\n    return new Promise((resolve, reject) => {\n      reader.onload = (event: any) => {\n        const fileBody = new Int8Array(reader.result);\n        resolve(fileBody);\n      };\n      reader.readAsArrayBuffer(fileName);\n    });\n  }\n\n  /**\n   * Asynchronously write the specified file content (Blob) to the specified file name.  It will appear\n   * in the user's local Downloads directory (or equivalent).\n   *\n   * @param fileContent\n   * @param fName\n   */\n  static async writeFile(fileContent: Blob, fName: any): Promise {\n    return new Promise((resolve, reject) => {\n      saveAs(fileContent, fName);\n      resolve(true);\n    });\n  }\n\n  /**\n   * Convert a camel-case string into human-readable form.\n   *\n   * @param camelCaseString\n   */\n  static toDisplayable(camelCaseString: string): string {\n    if (typeof camelCaseString === 'undefined' || !camelCaseString || camelCaseString.indexOf(' ') >= 0) {\n      return camelCaseString;\n    }\n    let displayableString: string = camelCaseString.charAt(0).toUpperCase();\n    for (let index = 1; index = MAX_PATH_WIDTH) {\n      return leaf.substr(0, MAX_PATH_WIDTH);\n    }\n    const delta = MAX_PATH_WIDTH - leaf.length;\n    return path.substr(0, delta) + '...' + leaf;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentFieldDetailComponent.html":{"url":"components/DocumentFieldDetailComponent.html","title":"component - DocumentFieldDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentFieldDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                document-field-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./document-field-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fieldComponents\n                            \n                            \n                                fieldDetailElement\n                            \n                            \n                                    Private\n                                isDragDropTarget\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allowDrop\n                            \n                            \n                                dragEnterLeave\n                            \n                            \n                                editField\n                            \n                            \n                                endDrag\n                            \n                            \n                                fieldShouldBeVisible\n                            \n                            \n                                getCssClass\n                            \n                            \n                                getElementPosition\n                            \n                            \n                                getFieldDetailComponent\n                            \n                            \n                                getFieldId\n                            \n                            \n                                getFieldTypeIcon\n                            \n                            \n                                getMappingClass\n                            \n                            \n                                getParentToggleClass\n                            \n                            \n                                getSpacerWidth\n                            \n                            \n                                getTransformationClass\n                            \n                            \n                                handleMouseClick\n                            \n                            \n                                handleMouseOver\n                            \n                            \n                                removeField\n                            \n                            \n                                startDrag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                field\n                            \n                            \n                                lineMachine\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    selected\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         Field\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lineMachine\n                    \n                \n                \n                    \n                        Type :         LineMachineComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:40\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allowDrop\n                        \n                        \n                    \n                \n            \n            \n                \nallowDrop(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragEnterLeave\n                        \n                        \n                    \n                \n            \n            \n                \ndragEnterLeave(event: any, entering: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entering\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editField\n                        \n                        \n                    \n                \n            \n            \n                \neditField(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endDrag\n                        \n                        \n                    \n                \n            \n            \n                \nendDrag(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fieldShouldBeVisible\n                        \n                        \n                    \n                \n            \n            \n                \nfieldShouldBeVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCssClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetCssClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getElementPosition\n                        \n                        \n                    \n                \n            \n            \n                \ngetElementPosition()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldDetailComponent\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldDetailComponent(field: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DocumentFieldDetailComponent\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldId\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:285\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldTypeIcon\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldTypeIcon()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappingClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappingClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParentToggleClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetParentToggleClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSpacerWidth\n                        \n                        \n                    \n                \n            \n            \n                \ngetSpacerWidth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:280\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SafeStyle\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTransformationClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetTransformationClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseClick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:188\n                \n            \n\n\n            \n                \n                    Semantic support for a mouse click.\n\nM1 - the field is selected\nCtrl/Cmd-M1 - compound-select\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseOver\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseOver(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeField\n                        \n                        \n                    \n                \n            \n            \n                \nremoveField(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:261\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startDrag\n                        \n                        \n                    \n                \n            \n            \n                \nstartDrag(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldComponents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('fieldDetail')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldDetailElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('fieldDetailElement')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDragDropTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n\n                \n                    \n                        getselected()\n                    \n                \n                            \n                                \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts:289\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, ElementRef, ViewChild, ViewChildren, QueryList } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { DocumentType } from '../../common/config.types';\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\n\nimport { LineMachineComponent } from '../app/line-machine.component';\nimport { ModalWindowComponent } from '../modal/modal-window.component';\n\nimport { PropertyFieldEditComponent } from '../app/property-field-edit.component';\nimport { ConstantFieldEditComponent } from '../app/constant-field-edit.component';\nimport { FieldEditComponent } from '../app/field-edit.component';\n\n@Component({\n  selector: 'document-field-detail',\n  templateUrl: './document-field-detail.component.html',\n})\n\nexport class DocumentFieldDetailComponent {\n  @Input() cfg: ConfigModel;\n  @Input() field: Field;\n  @Input() lineMachine: LineMachineComponent;\n  @Input() modalWindow: ModalWindowComponent;\n\n  @ViewChild('fieldDetailElement') fieldDetailElement: ElementRef;\n  @ViewChildren('fieldDetail') fieldComponents: QueryList;\n\n  private isDragDropTarget = false;\n\n  constructor(private sanitizer: DomSanitizer) { }\n\n  startDrag(event: any): void {\n\n    if (!this.field.isTerminal()) {\n      // ignore drag event, it's coming from a child field who's already set on the drag event\n      return;\n    }\n\n    this.cfg.currentDraggedField = null;\n\n    // event's data transfer store isn't available during dragenter/dragleave/dragover, so we need\n    // to store this info in a global somewhere since those methods depend on knowing if the\n    // dragged field is source/target\n    event = event || window.event;\n    event.dataTransfer.setData('text', '');  // firefox bug\n    this.cfg.currentDraggedField = this.field;\n  }\n\n  dragEnterLeave(event: any, entering: boolean): void {\n    if (!this.field.isTerminal() || (this.field.isSource() === this.cfg.currentDraggedField.isSource())) {\n      this.isDragDropTarget = false;\n      return;\n    }\n    this.isDragDropTarget = entering;\n  }\n\n  allowDrop(event: any): void {\n    if (!this.field.isTerminal() || (this.field.isSource() === this.cfg.currentDraggedField.isSource())) {\n      this.isDragDropTarget = false;\n      return;\n    }\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n    this.isDragDropTarget = true;\n  }\n\n  endDrag(event: MouseEvent): void {\n    this.isDragDropTarget = false;\n    if (!this.field.isTerminal() || (this.field.isSource() === this.cfg.currentDraggedField.isSource())) {\n      return;\n    }\n\n    const droppedField: Field = this.cfg.currentDraggedField;\n    if (droppedField == null) {\n      return;\n    }\n\n    if (!this.cfg.currentDraggedField.selected) {\n      this.cfg.mappingService.fieldSelected(this.cfg.currentDraggedField, event.ctrlKey || event.metaKey);\n    }\n    this.cfg.mappingService.fieldSelected(this.field, false);\n  }\n\n  getFieldTypeIcon(): string {\n    if (this.field.enumeration) {\n      return 'fa fa-file-text-o';\n    }\n    if (this.field.isCollection) {\n      return 'fa fa-list-ul';\n    }\n    if (this.field.docDef.type === DocumentType.XML) {\n      return this.field.isAttribute ? 'fa fa-at' : 'fa fa-code';\n    }\n    return 'fa fa-file-o';\n  }\n\n  fieldShouldBeVisible(): boolean {\n    const partOfMapping: boolean = this.field.partOfMapping;\n    return partOfMapping ? this.cfg.showMappedFields : this.cfg.showUnmappedFields;\n  }\n\n  getTransformationClass(): string {\n    if (!this.field.partOfMapping || !this.field.partOfTransformation) {\n      return 'partOfMappingIcon partOfMappingIconHidden';\n    }\n    return 'partOfMappingIcon fa fa-bolt';\n  }\n\n  getMappingClass(): string {\n    if (!this.field.partOfMapping) {\n      return 'partOfMappingIcon partOfMappingIconHidden';\n    }\n    let clz = 'fa fa-circle';\n    if (!this.field.isTerminal() && this.field.hasUnmappedChildren) {\n      clz = 'fa fa-adjust';\n    }\n    return 'partOfMappingIcon ' + clz;\n  }\n\n  getCssClass(): string {\n    let cssClass = 'fieldDetail';\n    if (this.selected) {\n      cssClass += ' selectedField';\n    }\n    if (!this.field.isTerminal()) {\n      cssClass += ' parentField';\n    }\n    if (!this.field.isSource()) {\n      cssClass += ' outputField';\n    }\n    if (this.isDragDropTarget) {\n      cssClass += ' dragHover';\n    }\n    return cssClass;\n  }\n\n  getElementPosition(): any {\n    let x = 0;\n    let y = 0;\n\n    let el: any = this.fieldDetailElement.nativeElement;\n    while (el != null) {\n      x += el.offsetLeft;\n      y += el.offsetTop;\n      el = el.offsetParent;\n    }\n    return { 'x': x, 'y': y };\n  }\n\n  handleMouseOver(event: MouseEvent): void {\n    if (this.field.isTerminal() && this.lineMachine != null) {\n      this.lineMachine.handleDocumentFieldMouseOver(this, event, this.field.isSource());\n    }\n  }\n\n  getParentToggleClass() {\n    return 'arrow fa fa-angle-' + (this.field.collapsed ? 'right' : 'down');\n  }\n\n  /**\n   * Semantic support for a mouse click.\n   * * M1 - the field is selected\n   * * Ctrl/Cmd-M1 - compound-select\n   *\n   * @param event\n   */\n  handleMouseClick(event: MouseEvent): void {\n    this.cfg.mappingService.fieldSelected(this.field, event.ctrlKey || event.metaKey);\n    if (this.lineMachine != null) {\n      setTimeout(() => {\n        this.lineMachine.redrawLinesForMappings();\n      }, 1);\n    }\n  }\n\n  getFieldDetailComponent(field: Field): DocumentFieldDetailComponent {\n    if (this.field === field) {\n      return this;\n    }\n\n    // Matching name and doc definition is a match\n    if ((this.field.path === field.path) && (this.field.docDef === field.docDef)) {\n      this.field = field;\n      return this;\n    }\n    for (const c of this.fieldComponents.toArray()) {\n      const returnedComponent: DocumentFieldDetailComponent = c.getFieldDetailComponent(field);\n      if (returnedComponent != null) {\n        return returnedComponent;\n      }\n    }\n    return null;\n  }\n\n  editField(event: any): void {\n    event.stopPropagation();\n    const self: DocumentFieldDetailComponent = this;\n    const oldPath: string = this.field.path;\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Save';\n    const isProperty: boolean = this.field.isProperty();\n    const isConstant: boolean = this.field.isConstant();\n    this.modalWindow.headerText = isProperty ? 'Edit Property' : (isConstant ? 'Edit Constant' : 'Edit Field');\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      if (isProperty) {\n        const propertyComponent: PropertyFieldEditComponent = mw.nestedComponent as PropertyFieldEditComponent;\n        propertyComponent.initialize(self.field, this.field.docDef, this.modalWindow);\n      } else if (isConstant) {\n        const constantComponent: ConstantFieldEditComponent = mw.nestedComponent as ConstantFieldEditComponent;\n        constantComponent.initialize(self.field, this.field.docDef, this.modalWindow);\n      } else {\n        const fieldComponent: FieldEditComponent = mw.nestedComponent as FieldEditComponent;\n        fieldComponent.isSource = self.field.isSource();\n        fieldComponent.initialize(self.field, this.field.docDef, false);\n      }\n    };\n    this.modalWindow.nestedComponentType = isProperty ? PropertyFieldEditComponent\n      : (isConstant ? ConstantFieldEditComponent : FieldEditComponent);\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      let newField: Field = null;\n      if (isProperty) {\n        const propertyComponent: PropertyFieldEditComponent = mw.nestedComponent as PropertyFieldEditComponent;\n        newField = propertyComponent.getField();\n      } else if (isConstant) {\n        const constantComponent: ConstantFieldEditComponent = mw.nestedComponent as ConstantFieldEditComponent;\n        newField = constantComponent.getField();\n      } else {\n        const fieldComponent: FieldEditComponent = mw.nestedComponent as FieldEditComponent;\n        newField = fieldComponent.getField();\n      }\n      self.field.copyFrom(newField);\n\n      self.field.docDef.updateField(self.field, oldPath);\n\n      self.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  removeField(event: any): void {\n    event.stopPropagation();\n    const self: DocumentFieldDetailComponent = this;\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Remove';\n    if (this.field.isPropertyOrConstant()) {\n      this.modalWindow.headerText = this.field.isProperty() ? 'Remove Property?' : 'Remove Constant?';\n    } else {\n      this.modalWindow.headerText = 'Remove field?';\n    }\n    this.modalWindow.message = 'Are you sure you want to remove \\'' + this.field.displayName + '\\'?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      self.cfg.mappingService.removeFieldFromAllMappings(self.field);\n      self.field.docDef.removeField(self.field);\n      self.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  getSpacerWidth(): SafeStyle {\n    const width: string = (this.field.fieldDepth * 30).toString();\n    return this.sanitizer.bypassSecurityTrustStyle('display:inline; margin-left:' + width + 'px');\n  }\n\n  getFieldId(): string {\n    return this.field.name && this.field.name.length > 0 ? this.field.name : 'document-root';\n  }\n\n  get selected(): boolean {\n    if (this.cfg.mappings && this.cfg.mappings.activeMapping) {\n      return this.cfg.mappings.activeMapping.getFields(this.field.isSource()).includes(this.field);\n    }\n    return false;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n      \n      &nbsp;\n      \n        \n        \n        \n      \n      \n        \n      \n    \n    &nbsp;\n    \n      {{ field.getFieldLabel(cfg.showTypes, false) }}\n    \n\n    \n      {{ field.getFieldLabel(cfg.showTypes, false) }}\n    \n\n    \n      \n      \n    \n\n    \n      \n      \n    \n\n    \n\n    \n      \n        \n          \n            \n            \n              \n                \n                  \n                    \n                      Preview Results\n                    \n                  \n                \n                \n                  \n                    \n                      \n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n    \n  \n\n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                    {{ field.getFieldLabel(cfg.showTypes, false) }}              {{ field.getFieldLabel(cfg.showTypes, false) }}                                                                                                                                                                                              Preview Results                                                                                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DocumentFieldDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DocumentInitializationModel.html":{"url":"classes/DocumentInitializationModel.html","title":"class - DocumentInitializationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DocumentInitializationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/config.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collectionClassName\n                            \n                            \n                                collectionType\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                inspectionResult\n                            \n                            \n                                inspectionSource\n                            \n                            \n                                inspectionType\n                            \n                            \n                                isSource\n                            \n                            \n                                name\n                            \n                            \n                                selectedRoot\n                            \n                            \n                                showFields\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collectionClassName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collectionType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CollectionType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inspectionResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inspectionSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inspectionType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InspectionType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/config.model.ts:82\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NGXLogger, NgxLoggerLevel } from 'ngx-logger';\nimport { environment } from '../../../../environments/environment';\nimport { MappingDefinition } from './mapping-definition.model';\nimport { DocumentDefinition } from './document-definition.model';\n\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { DocumentManagementService } from '../services/document-management.service';\nimport { MappingManagementService } from '../services/mapping-management.service';\nimport { InitializationService } from '../services/initialization.service';\nimport { ErrorInfo } from '../models/error.model';\n\nimport { DocumentType, InspectionType, CollectionType } from '../common/config.types';\nimport { FieldActionService } from '../services/field-action.service';\nimport { FileManagementService } from '../services/file-management.service';\n\nexport class DataMapperInitializationModel {\n  dataMapperVersion = '0.9.2017.07.28';\n  initialized = false;\n  loadingStatus = 'Loading.';\n  admHttpTimeout = 30000;  // 30 seconds\n  initializationErrorOccurred = false;\n\n  baseJavaInspectionServiceUrl: string;\n  baseXMLInspectionServiceUrl: string;\n  baseJSONInspectionServiceUrl: string;\n  baseMappingServiceUrl: string;\n\n  xsrfHeaderName: string;\n  xsrfCookieName: string;\n  xsrfDefaultTokenValue: string;\n\n  /* class path fetching configuration */\n  classPathFetchTimeoutInMilliseconds = 30000;\n  // if classPath is specified, maven call to resolve pom will be skipped\n  pomPayload: string;\n\n  classPath: string;\n\n  /* inspection service filtering flags */\n  fieldNameBlacklist: string[] = [];\n  classNameBlacklist: string[] = [];\n  disablePrivateOnlyFields = false;\n  disableProtectedOnlyFields = false;\n  disablePublicOnlyFields = false;\n  disablePublicGetterSetterFields = false;\n\n  disableMappingPreviewMode = false;\n\n  /* enable the navigation bar and import/export */\n  disableNavbar = true;\n\n  mappingInitialized = false;\n\n  constructor() {\n    if (environment.xsrf) {\n      this.xsrfHeaderName = environment.xsrf.headerName;\n      this.xsrfCookieName = environment.xsrf.cookieName;\n      this.xsrfDefaultTokenValue = environment.xsrf.defaultTokenValue;\n    }\n  }\n\n}\n\nexport class DocumentInitializationModel {\n  id: string;\n  type: DocumentType;\n  name: string;\n  description: string;\n  isSource: boolean;\n  showFields = true;\n  inspectionType: InspectionType;\n  inspectionSource: string;\n  inspectionResult: string;\n  selectedRoot: string;\n  collectionType: CollectionType;\n  collectionClassName: string;\n}\n\nexport class ConfigModel {\n  static mappingServicesPackagePrefix = 'io.atlasmap.v2';\n  static javaServicesPackagePrefix = 'io.atlasmap.java.v2';\n  static jsonServicesPackagePrefix = 'io.atlasmap.json.v2';\n  static xmlServicesPackagePrefix = 'io.atlasmap.xml.v2';\n  private static cfg: ConfigModel = new ConfigModel();\n\n  initCfg: DataMapperInitializationModel = new DataMapperInitializationModel;\n\n  /* current ui state config */\n  showMappingDetailTray = false;\n  showMappingTable = false;\n  showNamespaceTable = false;\n  showLinesAlways = true;\n  showTypes = false;\n  showMappedFields = true;\n  showUnmappedFields = true;\n  _showMappingPreview = false;\n  currentDraggedField: any = null;\n\n  documentService: DocumentManagementService;\n  mappingService: MappingManagementService;\n  errorService: ErrorHandlerService;\n  initializationService: InitializationService;\n  fieldActionService: FieldActionService;\n  fileService: FileManagementService;\n\n  sourceDocs: DocumentDefinition[] = [];\n  targetDocs: DocumentDefinition[] = [];\n  propertyDoc: DocumentDefinition = new DocumentDefinition();\n  constantDoc: DocumentDefinition = new DocumentDefinition();\n  mappingFiles: string[] = [];\n\n  mappings: MappingDefinition = null;\n\n  preloadedMappingJson: string;\n  preloadedFieldActionMetadata: any;\n\n  logger: NGXLogger;\n\n  constructor() {\n    this.propertyDoc.type = DocumentType.PROPERTY;\n    this.propertyDoc.name = 'Properties';\n    this.propertyDoc.isSource = true;\n    this.propertyDoc.showFields = false;\n    this.constantDoc.type = DocumentType.CONSTANT;\n    this.constantDoc.name = 'Constants';\n    this.constantDoc.isSource = true;\n    this.constantDoc.showFields = false;\n  }\n\n  static getConfig(): ConfigModel {\n    return ConfigModel.cfg;\n  }\n\n  static setConfig(cfg: ConfigModel): void {\n    ConfigModel.cfg = cfg;\n  }\n\n  set showMappingPreview(show: boolean) {\n    if (show && !this._showMappingPreview) {\n      this.mappingService.enableMappingPreview();\n    } else if (!show && this._showMappingPreview) {\n      this.mappingService.disableMappingPreview();\n    }\n    this._showMappingPreview = show;\n  }\n\n  get showMappingPreview(): boolean {\n    return this._showMappingPreview;\n  }\n\n  isDebugEnabled(): boolean {\n    return [NgxLoggerLevel.DEBUG, NgxLoggerLevel.TRACE].includes(this.logger.getConfigSnapshot().level);\n  }\n\n  isTraceEnabled(): boolean {\n    return this.logger.getConfigSnapshot().level === NgxLoggerLevel.TRACE;\n  }\n\n  addDocument(docInitModel: DocumentInitializationModel): DocumentDefinition {\n    const docDef: DocumentDefinition = new DocumentDefinition();\n    docDef.initModel = docInitModel;\n    docDef.id = docInitModel.id;\n    docDef.type = docInitModel.type;\n    docDef.name = docInitModel.name;\n    docDef.description = docInitModel.description;\n    docDef.isSource = docInitModel.isSource;\n    docDef.showFields = docInitModel.showFields;\n    docDef.inspectionType = docInitModel.inspectionType;\n    docDef.inspectionSource = docInitModel.inspectionSource;\n    docDef.inspectionResult = docInitModel.inspectionResult;\n    docDef.selectedRoot = docInitModel.selectedRoot;\n\n    if (docDef.type === DocumentType.XSD) {\n      docDef.uri = 'atlas:' + 'xml' + ':' + docDef.id;\n    } else if (docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri = 'atlas:' + 'java' + ':' + docDef.id;\n    } else {\n      docDef.uri = 'atlas:' + docDef.type.toLowerCase() + ':' + docDef.id;\n    }\n\n    if (docDef.type === DocumentType.JAVA || docDef.type === DocumentType.JAVA_ARCHIVE) {\n      docDef.uri += '?className=' + docDef.inspectionSource;\n      if (docInitModel.collectionType && docInitModel.collectionType !== CollectionType.NONE) {\n        docDef.uri += '&collectionType=' + docInitModel.collectionType;\n        if (docInitModel.collectionClassName) {\n          docDef.uri += '&collectionClassName=' + docInitModel.collectionClassName;\n        }\n      }\n    }\n\n    if (docInitModel.isSource) {\n      this.sourceDocs.push(docDef);\n    } else {\n      this.targetDocs.push(docDef);\n    }\n    return docDef;\n  }\n\n  addDocuments(docModels: DocumentInitializationModel[]): DocumentDefinition[] {\n    const docDefs: DocumentDefinition[] = [];\n    for (const docModel of docModels) {\n      docDefs.push(this.addDocument(docModel));\n    }\n    return docDefs;\n  }\n\n  getDocsWithoutPropertyDoc(isSource: boolean): DocumentDefinition[] {\n    return [].concat(isSource ? this.sourceDocs : this.targetDocs);\n  }\n\n  getDocs(isSource: boolean): DocumentDefinition[] {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    return isSource ? [this.propertyDoc, this.constantDoc].concat(docs) : docs;\n  }\n\n  /**\n   * Return a uri:DocumentDefinition document map for either the sources or targets panel contents.\n   *\n   * @param cfg\n   * @param isSource\n   */\n  getDocUriMap(cfg: ConfigModel, isSource: boolean): {[key: string]: DocumentDefinition} {\n    const docMap: {[key: string]: DocumentDefinition} = {};\n    for (const doc of cfg.getDocs(isSource)) {\n      docMap[doc.uri] = doc;\n    }\n    return docMap;\n  }\n\n  /**\n   * Clear source/target/mapping documents from the model.  Reset constant and property document definitions.\n   */\n  clearDocs(): void {\n    this.sourceDocs = [];\n    this.targetDocs = [];\n    this.propertyDoc.clearFields();\n    this.constantDoc.clearFields();\n    this.mappingFiles = [];\n  }\n\n  hasJavaDocuments(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isClassPathResolutionNeeded(): boolean {\n    if (this.initCfg.classPath) {\n      return false;\n    }\n    for (const doc of this.getAllDocs()) {\n      if (doc.type === DocumentType.JAVA && doc.inspectionResult == null) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getDocForIdentifier(documentId: string, isSource: boolean): DocumentDefinition {\n    for (const d of this.getDocs(isSource)) {\n      if (d.id === documentId) {\n        return d;\n      }\n    }\n    return null;\n  }\n\n  getFirstXmlDoc(isSource: boolean) {\n    const docs: DocumentDefinition[] = this.getDocsWithoutPropertyDoc(isSource);\n    for (const doc of docs) {\n      if (doc.type === DocumentType.XML) {\n        return doc;\n      }\n    }\n    return null;\n  }\n\n  getAllDocs(): DocumentDefinition[] {\n    return [this.propertyDoc, this.constantDoc].concat(this.sourceDocs).concat(this.targetDocs);\n  }\n\n  documentsAreLoaded(): boolean {\n    for (const doc of this.getAllDocs()) {\n      if (!doc.initialized) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n}\n\n/**\n * Place all custom events here.\n */\nexport class AdmRedrawMappingLinesEvent {\n  _lmcInstance: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmptyModalBodyComponent.html":{"url":"components/EmptyModalBodyComponent.html","title":"component - EmptyModalBodyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmptyModalBodyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                empty-modal-body\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitialFocusElement\n                            \n                            \n                                isDataValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  Component, Input, ViewChildren, QueryList, OnDestroy,\n  ViewContainerRef, Type, ComponentFactoryResolver, AfterViewInit, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../../models/config.model';\nimport { Subscription, Subject } from 'rxjs';\nimport { ModalErrorWindowComponent } from './modal-error-window.component';\nimport { ErrorInfo } from '../../models/error.model';\n\n// source: http://www.w3schools.com/howto/howto_css_modals.asp\n\nexport interface ModalWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'empty-modal-body',\n  template: '',\n})\n\nexport class EmptyModalBodyComponent implements ModalWindowValidator {\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n}\n\n@Component({\n  selector: 'modal-window',\n  templateUrl: './modal-window.component.html',\n})\n\nexport class ModalWindowComponent implements AfterViewInit, OnDestroy {\n  @Input() headerText = '';\n  @Input() nestedComponentType: Type;\n  @Input() nestedComponentInitializedCallback: Function;\n  @Input() okButtonHandler: Function;\n  @Input() cancelButtonHandler: Function;\n  @Input() cfg: ConfigModel;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  message: string = null;\n  nestedComponent: ModalWindowValidator;\n  confirmButtonDisabled = false;\n  confirmButtonText = 'OK';\n  visible = false;\n  fade = false;\n  errors: ErrorInfo[] = [];\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  private componentLoaded = false;\n  private myTargetChangesSubscription: Subscription;\n  private modalErrorSubject: Subject;\n  private modalErrorSubscription: Subscription;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, public detector: ChangeDetectorRef) { }\n\n  ngAfterViewInit() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n\n    // from: http://stackoverflow.com/questions/40811809/add-component-dynamically-inside-an-ngif\n    this.myTargetChangesSubscription = this.myTarget.changes.subscribe(changes => {\n      setTimeout(() => {\n        if (!this.componentLoaded && this.visible && this.myTarget && (this.myTarget.toArray().length)) {\n          this.loadComponent();\n        }\n        setTimeout(() => {\n          this.detector.detectChanges();\n        }, 10);\n      }, 10);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n    if (this.modalErrorSubscription) {\n      this.modalErrorSubscription.unsubscribe();\n    }\n    if (this.modalErrorSubject) {\n      this.modalErrorSubject.complete();\n    }\n  }\n\n  loadComponent(): void {\n    const viewContainerRef: ViewContainerRef = this.myTarget.toArray()[0];\n    viewContainerRef.clear();\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.nestedComponentType);\n    this.nestedComponent = viewContainerRef.createComponent(componentFactory).instance as ModalWindowValidator;\n    if (this.nestedComponentInitializedCallback != null) {\n      this.nestedComponentInitializedCallback(this);\n    }\n    const initialFocusElement = this.nestedComponent.getInitialFocusElement();\n    if (initialFocusElement) {\n      initialFocusElement.nativeElement.focus();\n    }\n    if (this.modalErrorSubject && !this.modalErrorSubject.closed) {\n      this.modalErrorSubject.complete();\n    }\n    this.modalErrorSubject = this.cfg.errorService.createFormErrorChannel();\n    this.modalErrorSubscription = this.modalErrorSubject.subscribe((errors: ErrorInfo[]) => {\n      this.errors = errors;\n    });\n  }\n\n  closeClicked(event: MouseEvent): void { this.buttonClicked(false); }\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.modalErrorSubject.complete();\n      this.errors = [];\n      this.visible = false;\n    }, 300);\n  }\n  show(): void {\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.nestedComponentInitializedCallback = null;\n    this.confirmButtonDisabled = false;\n    this.confirmButtonText = 'OK';\n    this.message = '';\n    this.headerText = '';\n    this.componentLoaded = false;\n    this.nestedComponentType = EmptyModalBodyComponent;\n    this.okButtonHandler = null;\n    this.cancelButtonHandler = null;\n  }\n\n  private buttonClicked(okClicked: boolean): void {\n    if (okClicked) {\n      if (this.nestedComponent != null) {\n        this.cfg.errorService.clearFormErrors();\n        if (!(this.nestedComponent.isDataValid())) {\n          return;\n        }\n      }\n      if (this.okButtonHandler) {\n        this.okButtonHandler(this);\n      }\n    } else { // cancel clicked\n      if (this.cancelButtonHandler) {\n        this.cancelButtonHandler(this);\n      }\n    }\n    this.close();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmptyModalBodyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnumValue.html":{"url":"classes/EnumValue.html","title":"class - EnumValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnumValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                ordinal\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ordinal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field.model.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DocumentType } from '../common/config.types';\nimport { DocumentDefinition } from './document-definition.model';\n\nexport class EnumValue {\n  name: string;\n  ordinal: number;\n}\n\nexport class Field {\n  private static uuidCounter = 0;\n\n  name: string = null;\n  classIdentifier: string = null;\n  displayName: string;\n  path: string = null;\n  type: string = null;\n  value: string = null;\n  serviceObject: any = new Object();\n  parentField: Field;\n  partOfMapping = false;\n  partOfTransformation = false;\n  visibleInCurrentDocumentSearch = true;\n  enumeration = false;\n  enumValues: EnumValue[] = [];\n  children: Field[] = [];\n  fieldDepth = 0;\n  uuid: string = null;\n  collapsed = true;\n  hasUnmappedChildren = false;\n  isCollection = false;\n  isArray = false;\n  isAttribute = false;\n  isPrimitive = false;\n  userCreated = false;\n  docDef: DocumentDefinition = null;\n  namespaceAlias: string = null;\n\n  static fieldHasUnmappedChild(field: Field): boolean {\n    if (field == null) {\n      return false;\n    }\n    if (field.isTerminal()) {\n      return (field.partOfMapping === false);\n    }\n    for (const childField of field.children) {\n      if (childField.hasUnmappedChildren || Field.fieldHasUnmappedChild(childField)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  static getFieldPaths(fields: Field[]): string[] {\n    const paths: string[] = [];\n    for (const field of fields) {\n      paths.push(field.path);\n    }\n    return paths;\n  }\n\n  static getFieldNames(fields: Field[]): string[] {\n    const paths: string[] = [];\n    for (const field of fields) {\n      paths.push(field.name);\n    }\n    return paths;\n  }\n\n  static getField(fieldPath: string, fields: Field[]): Field {\n    for (const field of fields) {\n      if (fieldPath === field.path) {\n        return field;\n      }\n    }\n    return null;\n  }\n\n  static alphabetizeFields(fields: Field[]): void {\n    const fieldsByName: { [key: string]: Field; } = {};\n    const fieldNames: string[] = [];\n    for (const field of fields) {\n      // if field is a dupe, discard it\n      if (fieldsByName[field.name] != null) {\n        continue;\n      }\n      fieldsByName[field.name] = field;\n      fieldNames.push(field.name);\n    }\n    fieldNames.sort();\n    fields.length = 0;\n    for (const name of fieldNames) {\n      fields.push(fieldsByName[name]);\n    }\n\n    for (const field of fields) {\n      if (field.children && field.children.length) {\n        this.alphabetizeFields(field.children);\n      }\n    }\n  }\n\n  constructor() {\n    this.uuid = Field.uuidCounter.toString();\n    Field.uuidCounter++;\n  }\n\n  /**\n   * Expand all fields above the current field.\n   */\n  expandToRoot() {\n    let parent: Field = this;\n    while (parent != null) {\n      parent.collapsed = false;\n      if (parent.isPropertyOrConstant) {\n        if (parent.docDef) {\n          parent.docDef.showFields = true;\n        }\n      }\n      parent = parent.parentField;\n    }\n  }\n\n  getNameWithNamespace(): string {\n    if (!this.namespaceAlias) {\n      return this.name;\n    }\n    return this.namespaceAlias + ':' + this.name;\n  }\n\n  isParentField(): boolean {\n    if (this.isCollection && !this.isPrimitive) {\n      return true;\n    }\n    return (this.type === 'COMPLEX');\n  }\n\n  isStringField(): boolean {\n    return (this.type === 'STRING');\n  }\n\n  isTerminal(): boolean {\n    if (this.enumeration) {\n      return true;\n    }\n    if (this.isCollection && !this.isPrimitive) {\n      return false;\n    }\n    return (this.type !== 'COMPLEX');\n  }\n\n  copy(): Field {\n    const copy: Field = new Field();\n    Object.assign(copy, this);\n\n    // make these pointers to the same object, not copies\n    copy.serviceObject = this.serviceObject;\n    copy.parentField = this.parentField;\n    copy.docDef = this.docDef;\n\n    copy.children = [];\n    for (const childField of this.children) {\n      copy.children.push(childField.copy());\n    }\n    // console.log(\"Copied: \" + this.name, { \"src\": this, \"target\": copy });\n    return copy;\n  }\n\n  copyFrom(that: Field): void {\n    Object.assign(this, that);\n\n    // make these pointers to the same object, not copies\n    this.serviceObject = that.serviceObject;\n    this.parentField = that.parentField;\n    this.docDef = that.docDef;\n\n    this.children = [];\n    for (const childField of that.children) {\n      this.children.push(childField.copy());\n    }\n  }\n\n  getCollectionParentField(): Field {\n    let parent: Field = this;\n    while (parent != null) {\n      if (parent.isCollection) {\n        return parent;\n      }\n      parent = parent.parentField;\n    }\n    return null;\n  }\n\n  isInCollection(): boolean {\n    return (this.getCollectionParentField() != null);\n  }\n\n  isInNestedCollection(): boolean {\n    const first = this.getCollectionParentField();\n    return first && first.parentField && first.parentField.getCollectionParentField() ? true : false;\n  }\n\n  isSource(): boolean {\n    return (this.docDef != null) && this.docDef.isSource;\n  }\n\n  getCollectionType(): string {\n    return this.isCollection ? (this.isArray ? 'ARRAY' : 'LIST') : null;\n  }\n\n  getFieldLabel(showTypes: boolean, includePath: boolean): string {\n    let fieldPath = includePath ? this.path : this.getNameWithNamespace();\n    if (showTypes && this.type && !this.isPropertyOrConstant()) {\n      fieldPath += ' (' + this.type + ')';\n    } else if (this.isProperty() && this.value != null) {\n      fieldPath += ' = ' + this.value;\n      if (showTypes && this.type) {\n        fieldPath += ' (' + this.type + ')';\n      }\n    }\n    if (!fieldPath && !this.parentField) {\n      fieldPath = '';\n    }\n    return fieldPath;\n  }\n\n  isPropertyOrConstant(): boolean {\n    return (this.docDef == null) ? false : this.docDef.isPropertyOrConstant;\n  }\n\n  isProperty(): boolean {\n    return (this.docDef == null) ? false : this.docDef.type === DocumentType.PROPERTY;\n  }\n\n  isConstant(): boolean {\n    return (this.docDef == null) ? false : this.docDef.type === DocumentType.CONSTANT;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorHandlerService.html":{"url":"injectables/ErrorHandlerService.html","title":"injectable - ErrorHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts\n        \n\n            \n                Description\n            \n            \n                ErrorHandlerService handles global errors, mapping validation errors, preview errors,\nmapped field level errors as well as instant form validation errors in a modal windows.\nGlobal errors, mapping validation errors, preview errors and mapped field level errors\nare stored in a same array at this moment. We might want to split them when we show\nthem grouped by ErrorType.\nErrors with ErrorScope.MAPPING and ErrorScope.FIELD are cleared\neverytime active mapping is switched. ErrorScope.FIELD errors are mostly\ninstant and cleared more frequently.\nForm validation errors are supposed to be instant. Channel should be created by\ncreateFormErrorChannel() when modal window is initialized, and should be\ncompleted when modal window is closed.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errors\n                            \n                            \n                                    Private\n                                errorUpdatedSource\n                            \n                            \n                                    Private\n                                formErrors\n                            \n                            \n                                    Private\n                                formErrorUpdatedSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addError\n                            \n                            \n                                clearAllErrors\n                            \n                            \n                                clearFieldErrors\n                            \n                            \n                                clearFormErrors\n                            \n                            \n                                clearPreviewErrors\n                            \n                            \n                                clearValidationErrors\n                            \n                            \n                                createFormErrorChannel\n                            \n                            \n                                    Private\n                                emitUpdatedEvent\n                            \n                            \n                                    Private\n                                excludeByIdentifier\n                            \n                            \n                                    Static\n                                filterWith\n                            \n                            \n                                getErrors\n                            \n                            \n                                isRequiredFieldValid\n                            \n                            \n                                removeError\n                            \n                            \n                                resetAll\n                            \n                            \n                                subscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addError\n                        \n                        \n                    \n                \n            \n            \n                \naddError(errors: ErrorInfo[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:64\n                \n            \n\n\n            \n                \n                    Add one or more ErrorInfo object(s) into error store.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        one or more {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearAllErrors\n                        \n                        \n                    \n                \n            \n            \n                \nclearAllErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:115\n                \n            \n\n\n            \n                \n                    Remova all errors except form validation errors.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearFieldErrors\n                        \n                        \n                    \n                \n            \n            \n                \nclearFieldErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:140\n                \n            \n\n\n            \n                \n                    Remove all field scoped errors.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearFormErrors\n                        \n                        \n                    \n                \n            \n            \n                \nclearFormErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:148\n                \n            \n\n\n            \n                \n                    Remove all form validation errors.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearPreviewErrors\n                        \n                        \n                    \n                \n            \n            \n                \nclearPreviewErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:123\n                \n            \n\n\n            \n                \n                    Remove all preview errors.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearValidationErrors\n                        \n                        \n                    \n                \n            \n            \n                \nclearValidationErrors(mapping?: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:131\n                \n            \n\n\n            \n                \n                    Remove all mapping validation errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createFormErrorChannel\n                        \n                        \n                    \n                \n            \n            \n                \ncreateFormErrorChannel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:167\n                \n            \n\n\n            \n                \n                    Create a Subject for form validation error. This ErrorHandlerService assumes only\none form validation happens at once, as it's used in modal window. Revisit this if there\nneeds to be more than one channel and manage a list of Subject.\n\n\n                    \n                        Returns :         Subject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            emitUpdatedEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitUpdatedEvent(scope?: ErrorScope)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scope\n                                    \n                                                ErrorScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            excludeByIdentifier\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    excludeByIdentifier(errors: ErrorInfo[], identifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            filterWith\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filterWith(errors: ErrorInfo[], mapping?: MappingModel, level?: ErrorLevel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:50\n                \n            \n\n\n            \n                \n                    FIlter an array of ErrorInfo with specified condition.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An array of {\n\n                                    \n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    level\n                                    \n                                                ErrorLevel\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:83\n                \n            \n\n\n            \n                \n                    Return all errors in the store.\n\n\n                    \n                    \n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                    \n                        An array of {\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isRequiredFieldValid\n                        \n                        \n                    \n                \n            \n            \n                \nisRequiredFieldValid(value: string, fieldDescription: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:182\n                \n            \n\n\n            \n                \n                    Validate the specified field value in a form, generating a form validation error if not defined.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nA form field to validate\n\n\n                                    \n                                \n                                \n                                    fieldDescription\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nused in error diagnostic\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeError\n                        \n                        \n                    \n                \n            \n            \n                \nremoveError(identifier: string, scope?: ErrorScope)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:91\n                \n            \n\n\n            \n                \n                    Remove one ErrorInfo by specifying ID.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    identifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error ID\n\n                                    \n                                \n                                \n                                    scope\n                                    \n                                                ErrorScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetAll\n                        \n                        \n                    \n                \n            \n            \n                \nresetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:104\n                \n            \n\n\n            \n                \n                    Clear all global/mapping errors as well as form validation erros and its Subject\nif it exists.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \nsubscribe(observer: (errors: ErrorInfo[]) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:158\n                \n            \n\n\n            \n                \n                    Subscribe an error updated event. Observer will be notified\nwhen an error is added or removed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    observer\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Observer\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorInfo[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorUpdatedSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            formErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorInfo[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            formErrorUpdatedSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts:42\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ErrorInfo, ErrorLevel, ErrorScope, ErrorType } from '../models/error.model';\nimport { ConfigModel } from '../models/config.model';\nimport { Subject, Subscription } from 'rxjs';\nimport { MappingModel } from '../models/mapping.model';\n\n/**\n * ErrorHandlerService handles global errors, mapping validation errors, preview errors,\n * mapped field level errors as well as instant form validation errors in a modal windows.\n * Global errors, mapping validation errors, preview errors and mapped field level errors\n * are stored in a same array at this moment. We might want to split them when we show\n * them grouped by {@link ErrorType}.\n * Errors with {@link ErrorScope.MAPPING} and {@link ErrorScope.FIELD} are cleared\n * everytime active mapping is switched. {@link ErrorScope.FIELD} errors are mostly\n * instant and cleared more frequently.\n * Form validation errors are supposed to be instant. Channel should be created by\n * {@link createFormErrorChannel()} when modal window is initialized, and should be\n * completed when modal window is closed.\n */\n@Injectable()\nexport class ErrorHandlerService {\n  private errors: ErrorInfo[] = [];\n  private formErrors: ErrorInfo[] = [];\n  private errorUpdatedSource = new Subject();\n  private formErrorUpdatedSource: Subject;\n\n  /**\n   * FIlter an array of {@link ErrorInfo} with specified condition.\n   * @param errors An array of {@link ErrorInfo} to filter\n   * @param mapping {@link MappingModel} to filter {@link ErrorScope.MAPPING} errors\n   * @param level {@link ErrorLevel} to filter with\n   */\n  static filterWith(errors: ErrorInfo[], mapping?: MappingModel, level?: ErrorLevel): ErrorInfo[] {\n    if (!errors || errors.length === 0) {\n      return [];\n    }\n    return errors.filter(e =>\n      (!e.mapping || (mapping && e.mapping === mapping))\n        && (!level || !e.level || e.level === level)\n    );\n  }\n\n  /**\n   * Add one or more {@link ErrorInfo} object(s) into error store.\n   * @param errors one or more {@link ErrorInfo} object(s)\n   */\n  addError(...errors: ErrorInfo[]): void {\n    errors.forEach(error => {\n      if (error.object && error.object.message) {\n        // TODO show error.object in more polished way... maybe with better error console\n        error.message += ('\\n' + error.object.message);\n      }\n      const store = ErrorScope.FORM === error.scope ? this.formErrors : this.errors;\n      if (store.find(e => e.message === error.message)) {\n        return;\n      }\n      store.unshift(error);\n    });\n    this.emitUpdatedEvent();\n  }\n\n  /**\n   * Return all errors in the store.\n   * @return An array of {@link ErrorInfo}\n   */\n  getErrors(): ErrorInfo[] {\n    return Object.assign([], this.errors);\n  }\n\n  /**\n   * Remove one {@link ErrorInfo} by specifying ID.\n   * @param identifier Error ID\n   */\n  removeError(identifier: string, scope?: ErrorScope): void {\n    if (scope === ErrorScope.FORM && !this.formErrorUpdatedSource.closed) {\n      this.formErrors = this.excludeByIdentifier(this.formErrors, identifier);\n    } else {\n      this.errors = this.excludeByIdentifier(this.errors, identifier);\n    }\n    this.emitUpdatedEvent();\n  }\n\n  /**\n   * Clear all global/mapping errors as well as form validation erros and its Subject\n   * if it exists.\n   */\n  resetAll(): void {\n    this.clearAllErrors();\n    this.formErrors = [];\n    if (this.formErrorUpdatedSource && !this.formErrorUpdatedSource.closed) {\n      this.formErrorUpdatedSource.complete();\n    }\n  }\n\n  /**\n   * Remova all errors except form validation errors.\n   */\n  clearAllErrors() {\n    this.errors = [];\n    this.emitUpdatedEvent();\n  }\n\n  /**\n   * Remove all preview errors.\n   */\n  clearPreviewErrors(): void {\n    this.errors = this.errors.filter(e => e.type !== ErrorType.PREVIEW);\n    this.emitUpdatedEvent();\n  }\n\n  /**\n   * Remove all mapping validation errors.\n   */\n  clearValidationErrors(mapping?: MappingModel): void {\n    this.errors = this.errors.filter(e =>\n      e.type !== ErrorType.VALIDATION && (!mapping || !e.mapping || e.mapping !== mapping));\n    this.emitUpdatedEvent();\n  }\n\n  /**\n   * Remove all field scoped errors.\n   */\n  clearFieldErrors() {\n    this.errors = this.errors.filter(e => e.scope !== ErrorScope.FIELD);\n    this.emitUpdatedEvent();\n  }\n\n  /**\n   * Remove all form validation errors.\n   */\n  clearFormErrors() {\n    this.formErrors = [];\n    this.emitUpdatedEvent(ErrorScope.FORM);\n  }\n\n  /**\n   * Subscribe an error updated event. Observer will be notified\n   * when an error is added or removed.\n   * @param observer Observer\n   */\n  subscribe(observer: (errors: ErrorInfo[]) => void): Subscription {\n    return this.errorUpdatedSource.subscribe(observer);\n  }\n\n  /**\n   * Create a Subject for form validation error. This ErrorHandlerService assumes only\n   * one form validation happens at once, as it's used in modal window. Revisit this if there\n   * needs to be more than one channel and manage a list of {@link Subject}.\n   */\n  createFormErrorChannel(): Subject {\n    if (this.formErrorUpdatedSource && !this.formErrorUpdatedSource.closed) {\n      this.formErrorUpdatedSource.complete();\n    }\n    this.formErrors = [];\n    this.formErrorUpdatedSource = new Subject();\n    this.formErrorUpdatedSource.subscribe({ complete: () => this.formErrors = [] });\n    return this.formErrorUpdatedSource;\n  }\n\n  /**\n   * Validate the specified field value in a form, generating a form validation error if not defined.\n   * @param value - A form field to validate\n   * @param fieldDescription - used in error diagnostic\n   */\n  isRequiredFieldValid(value: string, fieldDescription: string): boolean {\n    if (value == null || '' === value) {\n      const errorMessage: string = fieldDescription + ' is required.';\n      this.addError(new ErrorInfo({message: errorMessage, level: ErrorLevel.ERROR, scope: ErrorScope.FORM}));\n      this.emitUpdatedEvent(ErrorScope.FORM);\n      return false;\n    }\n    return true;\n  }\n\n  private emitUpdatedEvent(scope?: ErrorScope) {\n    if (ErrorScope.FORM === scope) {\n      if (this.formErrorUpdatedSource && !this.formErrorUpdatedSource.closed) {\n        this.formErrorUpdatedSource.next(this.formErrors);\n      }\n    } else {\n      this.errorUpdatedSource.next(this.errors);\n    }\n  }\n\n  private excludeByIdentifier(errors: ErrorInfo[], identifier: string): ErrorInfo[] {\n    return errors.filter(e => e.identifier !== identifier);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorInfo.html":{"url":"classes/ErrorInfo.html","title":"class - ErrorInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/error.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _identifier\n                            \n                            \n                                    Private\n                                    Static\n                                errorIdentifierCounter\n                            \n                            \n                                field\n                            \n                            \n                                level\n                            \n                            \n                                mapping\n                            \n                            \n                                message\n                            \n                            \n                                object\n                            \n                            \n                                scope\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    identifier\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _identifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            errorIdentifierCounter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappedField\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorLevel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            object\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scope\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorScope\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        identifier\n                    \n                \n\n                \n                    \n                        getidentifier()\n                    \n                \n                            \n                                \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/error.model.ts:59\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { MappingModel, MappedField } from './mapping.model';\n\nexport enum ErrorLevel {\n  DEBUG = 'DEBUG',\n  INFO = 'INFO',\n  WARN = 'WARN',\n  ERROR = 'ERROR'\n }\n\nexport enum ErrorScope {\n  APPLICATION = 'APPLICATION',\n  MAPPING = 'MAPPING',\n  FIELD = 'FIELD',\n  FORM = 'FORM'\n}\n\nexport enum ErrorType {\n  INTERNAL = 'INTERNAL',\n  USER = 'USER',\n  VALIDATION = 'VALIDATION',\n  PREVIEW = 'PREVIEW',\n  FORM = 'FORM'\n}\n\nexport class ErrorInfo {\n  private static errorIdentifierCounter = 0;\n  private _identifier: string;\n\n  message: string;\n  level: ErrorLevel;\n  scope: ErrorScope;\n  type: ErrorType;\n  mapping: MappingModel;\n  field: MappedField;\n  object: any;\n\n  constructor(init: Partial) {\n    this._identifier = ErrorInfo.errorIdentifierCounter.toString();\n    ErrorInfo.errorIdentifierCounter++;\n    Object.assign(this, init);\n  }\n\n  get identifier() {\n    return this._identifier;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExampleAppModule.html":{"url":"modules/ExampleAppModule.html","title":"module - ExampleAppModule","body":"\n                   \n\n\n\n\n    Modules\n    ExampleAppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExampleAppModule\n\n\n\ncluster_ExampleAppModule_declarations\n\n\n\ncluster_ExampleAppModule_imports\n\n\n\ncluster_ExampleAppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nExampleAppModule\n\nExampleAppModule\n\nExampleAppModule -->\n\nAppComponent->ExampleAppModule\n\n\n\n\n\nAtlasmapNavbarComponent\n\nAtlasmapNavbarComponent\n\nExampleAppModule -->\n\nAtlasmapNavbarComponent->ExampleAppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nExampleAppModule->AppComponent \n\n\n\n\n\nAtlasmapNavbarComponent \n\nAtlasmapNavbarComponent \n\nAtlasmapNavbarComponent  -->\n\nExampleAppModule->AtlasmapNavbarComponent \n\n\n\n\n\nDataMapperModule\n\nDataMapperModule\n\nExampleAppModule -->\n\nDataMapperModule->ExampleAppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/example-app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AtlasmapNavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataMapperModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AtlasmapNavbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n    Copyright (C) 2017 Red Hat, Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n            http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { AtlasmapNavbarComponent } from './atlasmap-navbar.component';\n\nimport { DataMapperModule } from './lib/atlasmap-data-mapper/data-mapper.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AtlasmapNavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot([]),\n    DataMapperModule.withInterceptor(),\n  ],\n  providers: [],\n  bootstrap: [\n    AppComponent,\n    AtlasmapNavbarComponent,\n  ],\n})\n\nexport class ExampleAppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Examples.html":{"url":"classes/Examples.html","title":"class - Examples","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Examples\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/examples.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                pom\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            pom\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `\n    \n\n        4.0.0\n        foo.bar\n        test.model\n        1.10.0\n        jar\n        Test :: Model\n\n        \n            \n                com.fasterxml.jackson.core\n                jackson-annotations\n                2.8.5\n            \n            \n                com.fasterxml.jackson.core\n                jackson-databind\n                2.8.5\n            \n            \n                com.fasterxml.jackson.core\n                jackson-core\n                2.8.5\n            \n        \n    \n  `\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/examples.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Examples {\n  static pom = `\n    \n\n        4.0.0\n        foo.bar\n        test.model\n        1.10.0\n        jar\n        Test :: Model\n\n        \n            \n                com.fasterxml.jackson.core\n                jackson-annotations\n                2.8.5\n            \n            \n                com.fasterxml.jackson.core\n                jackson-databind\n                2.8.5\n            \n            \n                com.fasterxml.jackson.core\n                jackson-core\n                2.8.5\n            \n        \n    \n  `;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpressionNode.html":{"url":"classes/ExpressionNode.html","title":"class - ExpressionNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpressionNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                sequence\n                            \n                            \n                                    Protected\n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUuid\n                            \n                            \n                                    Abstract\n                                toHTML\n                            \n                            \n                                    Abstract\n                                toText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prefix: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prefix\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            sequence\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            uuid\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetUuid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toHTML()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { MappedField, MappingModel } from './mapping.model';\nimport { Subject } from 'rxjs';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from './error.model';\n\nexport class ExpressionUpdatedEvent {\n  constructor(public node?: ExpressionNode, public offset?: number) {}\n}\n\nexport abstract class ExpressionNode {\n  protected static sequence = 0;\n  protected uuid;\n\n  constructor(prefix: string) {\n    this.uuid = prefix + ExpressionNode.sequence++;\n  }\n\n  getUuid() {\n    return this.uuid;\n  }\n\n  abstract toText(): string;\n  abstract toHTML(): string;\n}\n\nexport class TextNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-text-';\n\n  constructor(public str: string) {\n    super(TextNode.PREFIX);\n  }\n\n  toText(): string {\n    return this.str;\n  }\n\n  toHTML(): string {\n    return `${this.str.replace(/ /g, '&nbsp;')}`;\n  }\n\n}\n\nexport class FieldNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-field-';\n\n  constructor(private mapping: MappingModel, public field?: MappedField, private index?: number) {\n    super(FieldNode.PREFIX);\n    if (!field) {\n      this.field = mapping.getMappedFieldForIndex((index + 1).toString(), true);\n    }\n  }\n\n  toText(): string {\n    return '${' + (this.mapping.getIndexForMappedField(this.field) - 1) + '}';\n  }\n\n  toHTML(): string {\n    if (this.field && this.field.field) {\n      return `${this.field.field.name}`;\n    } else {\n      return `N/A`;\n    }\n  }\n\n}\n\nexport class ExpressionModel {\n  expressionUpdatedSource = new Subject();\n  expressionUpdated$ = this.expressionUpdatedSource.asObservable();\n\n  private _nodes: ExpressionNode[] = [];\n  private textCache = '';\n  private htmlCache = '';\n\n  constructor(private mapping: MappingModel, private cfg: ConfigModel) {}\n\n  generateInitialExpression() {\n    this.mapping.getUserMappedFields(true).forEach(f => this.appendFieldNode(f));\n  }\n\n  get nodes(): ReadonlyArray {\n    return this._nodes;\n  }\n\n  getLastNodeIndex() {\n    return this._nodes.length - 1;\n  }\n\n  getLastNode() {\n    return this._nodes[this.getLastNodeIndex()];\n  }\n\n  getNode(nodeId?: string): any {\n    if (!nodeId) {\n      return this.getLastNode();\n    }\n    return this._nodes.find(n => n.getUuid() === nodeId);\n  }\n\n  setConfigModel(cfg: ConfigModel) {\n    this.cfg = cfg;\n  }\n\n  /**\n   * Clear all text from the specified TextNode offset range or from the '@' to the end\n   * of the text node if no node ID is specified.\n   *\n   * Return the new UUID position indicator string or null.\n   *\n   * @param nodeId\n   * @param startOffset\n   * @param endOffset\n   */\n  clearText(nodeId?: string, startOffset?: number, endOffset?: number): TextNode {\n    let targetNode: TextNode;\n    let targetNodeIndex = 0;\n    if (!nodeId) {\n      const lastNode = this.getLastNode();\n      if (!(lastNode instanceof TextNode)) {\n        return null;\n      }\n      const keyPos = lastNode.str.indexOf('@');\n      if (keyPos !== -1) {\n        targetNodeIndex = this._nodes.indexOf(lastNode);\n        targetNode = lastNode;\n        targetNode.str = targetNode.str.substring(0, keyPos);\n      }\n    } else {\n      const node = this._nodes.find(n => n.getUuid() === nodeId);\n      if (!(node instanceof TextNode) || !endOffset) {\n        return null;\n      }\n      targetNode = node;\n      targetNodeIndex = this._nodes.indexOf(targetNode);\n      const cleanStr = targetNode.str.replace(targetNode.str.substring(startOffset, endOffset), '');\n      targetNode.str = cleanStr;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n    return targetNode;\n  }\n\n  /**\n   * Insert text into expression at specified position. If nodeId is not specified,\n   * it will be added to the end of expression. It parses the string\n   * and insert a set of TextNode & FieldNode if it contains field reference like ${0},\n   * otherwise just one TextNode.\n   * This emits ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   * @param str string to insert\n   * @param nodeId target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertText(str: string, nodeId?: string, offset?: number) {\n    this.insertNodes(this.createNodesFromText(str), nodeId, offset);\n  }\n\n  /**\n   * Insert an array of ExpressionNodes at the specified position. If insertPosition is\n   * not specified the nodes will be appended to the end of the expression.\n   * This emits an ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   *\n   * @param newNodes an array of ExpressionNode to add\n   * @param insertPosition target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertNodes(newNodes: ExpressionNode[], insertPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!insertPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        this._nodes.push(...newNodes);\n      } else if (last instanceof TextNode && newNodes[0] instanceof TextNode) {\n        const lastTextNode = last as TextNode;\n        (last as TextNode).str += (newNodes[0] as TextNode).str;\n        newNodes.splice(0, 1, last);\n        this._nodes.splice(this.getLastNodeIndex(), 1, ...newNodes);\n      } else if (last instanceof FieldNode && newNodes[0] instanceof FieldNode) {\n        this._nodes.splice(this.getLastNodeIndex(), 0, new TextNode(' + '), ...newNodes);\n      } else {\n        this._nodes.push(...newNodes);\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    const updatedEvent = new ExpressionUpdatedEvent();\n    const targetNode = this._nodes.find(n => n.getUuid() === insertPosition);\n    const targetNodeIndex = this._nodes.indexOf(targetNode);\n\n    if (targetNode instanceof TextNode) {\n      if (offset === undefined || offset === null || offset  0) {\n        if (newNodes[0] instanceof TextNode) {\n          targetNode.str = pre + (newNodes[0] as TextNode).str;\n          newNodes.splice(0, 1, targetNode);\n        } else {\n          targetNode.str = pre;\n          newNodes.splice(0, 0, targetNode);\n        }\n      }\n      if (post.length > 0) {\n        const lastNewNodeIndex = newNodes.length - 1;\n        if (newNodes[lastNewNodeIndex] instanceof TextNode) {\n          let mergedTextNode: TextNode;\n          if (pre.length > 0) {\n            mergedTextNode = newNodes[lastNewNodeIndex] as TextNode;\n            mergedTextNode.str += post;\n          } else {\n            mergedTextNode = targetNode;\n            mergedTextNode.str = (newNodes[lastNewNodeIndex]as TextNode).str + post;\n          }\n          newNodes.splice(lastNewNodeIndex, 1, mergedTextNode);\n        } else {\n          if (pre.length > 0) {\n            newNodes.push(new TextNode(post));\n          } else {\n            targetNode.str = post;\n            newNodes.push(targetNode);\n          }\n        }\n      }\n      this._nodes.splice(targetNodeIndex, 1, ...newNodes);\n      const lastAddedIndex = targetNodeIndex + newNodes.length - 1;\n      if (this._nodes[lastAddedIndex] instanceof FieldNode\n          && this.nodes[lastAddedIndex + 1] instanceof FieldNode) {\n        // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n        const space = new TextNode(' + ');\n        this._nodes.splice(lastAddedIndex + 1, 0, space);\n        updatedEvent.node = space;\n        updatedEvent.offset = 1;\n      } else if (this._nodes[lastAddedIndex] instanceof FieldNode) {\n        updatedEvent.node = this._nodes[lastAddedIndex + 1];\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = this._nodes[lastAddedIndex];\n        updatedEvent.offset = (this._nodes[lastAddedIndex] as TextNode).str.length - post.length;\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next(updatedEvent);\n      return;\n    }\n\n    // targetNode is a FieldNode - insert the text before it if offset is 0, otherwise after it\n    if (offset !== 0 && newNodes[0] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      newNodes.splice(0, 0, new TextNode(' + '));\n    }\n    const nextNodeIndex = offset === 0 ? targetNodeIndex : targetNodeIndex + 1;\n    const nextNode = this._nodes[nextNodeIndex];\n    if (nextNode instanceof TextNode && newNodes[newNodes.length - 1] instanceof TextNode) {\n      updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      nextNode.str = (newNodes[newNodes.length - 1] as TextNode).str + (nextNode as TextNode).str;\n      newNodes.pop();\n      this._nodes.splice(nextNodeIndex, 1, ...newNodes);\n      updatedEvent.node = nextNode;\n    } else if (nextNode instanceof FieldNode && newNodes[newNodes.length - 1] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      const space = new TextNode(' + ');\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes, space);\n      updatedEvent.node = space;\n      updatedEvent.offset = 1;\n    } else {\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes);\n      if (nextNode instanceof TextNode) {\n        updatedEvent.node = nextNode;\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = newNodes[newNodes.length - 1];\n        updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  removeToken(lastFieldRefRemoved: (removed: MappedField) => void, tokenPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!tokenPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        return;\n      }\n      if (last instanceof FieldNode) {\n        const removed = this._nodes.pop() as FieldNode;\n        if (!this._nodes.find(n => n instanceof FieldNode && n.field === removed.field)) {\n          lastFieldRefRemoved(removed.field);\n        }\n      } else if (last instanceof TextNode) {\n        if (last.str.length > 0) {\n          last.str = last.str.substring(0, last.str.length - 1);\n        } else {\n          this._nodes.pop();\n        }\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    let updatedEvent = new ExpressionUpdatedEvent();\n    let targetNode = this._nodes.find(n => n.getUuid() === tokenPosition);\n    let targetNodeIndex = this._nodes.indexOf(targetNode);\n    if (!targetNode || offset === -1) {\n      if (targetNodeIndex  n instanceof FieldNode && n.field === targetFieldNode.field)) {\n        lastFieldRefRemoved(targetFieldNode.field);\n      }\n      if (this._nodes.length > targetNodeIndex) {\n        if (this._nodes[targetNodeIndex - 1] instanceof TextNode\n            && this._nodes[targetNodeIndex] instanceof TextNode) {\n          const newOffset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n          (this._nodes[targetNodeIndex - 1] as TextNode).str\n              += (this._nodes[targetNodeIndex] as TextNode).str;\n          this._nodes.splice(targetNodeIndex, 1);\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = newOffset;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof FieldNode\n            && this._nodes[targetNodeIndex] instanceof FieldNode) {\n          const glue = new TextNode(' + ');\n          this._nodes.splice(targetNodeIndex, 0, glue);\n          updatedEvent.node = glue;\n          updatedEvent.offset = 3;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n        } else if (this._nodes[targetNodeIndex] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex];\n          updatedEvent.offset = 0;\n        }\n      } else {\n        // end of line\n        updatedEvent = undefined;\n      }\n    } else {\n      const targetString = (targetNode as TextNode).str;\n      (targetNode as TextNode).str = offset === 0 ? targetString.substr(1)\n        : targetString.substring(0, offset) + targetString.substring(offset + 1);\n      if ((targetNode as TextNode).str.length === 0) {\n        this.cfg.errorService.addError(new ErrorInfo({message: 'At least one space is required between field references.',\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.USER, mapping: this.mapping}));\n        return;\n      }\n      updatedEvent.node = targetNode;\n      updatedEvent.offset = offset;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  /**\n   * Replace the content of the last text node with a substring terminating at the\n   * specified index.\n   *\n   * @param index\n   */\n  clearToEnd(index: number): void {\n    const last = this.getLastNode();\n    if (!(last instanceof TextNode)) {\n      return;\n    }\n    last.str = last.str.substring(0, index);\n  }\n\n  /**\n   * Reflect mapped source fields to the field references in the expression.\n   * Selected source fields are inserted into or appended to the expression,\n   * and unselected source fields are removed from expression.\n   *\n   * @param mapping Corresponding MappingModel object\n   */\n  updateFieldReference(mapping: MappingModel, insertPosition?: string, offset?: number) {\n    const mappedFields = mapping.getUserMappedFields(true);\n    const toAdd: MappedField[] = [];\n    const toRemove: MappedField[] = [];\n    let fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n\n    // Remove the field from the expression if unmapped.\n    for (const node of fieldNodes) {\n      if (mappedFields.includes(node.field)) {\n        continue;\n      }\n      const index = this._nodes.indexOf(node);\n      this._nodes.splice(index, 1);\n      if (this._nodes.length > index && this._nodes[index - 1] instanceof TextNode\n          && this._nodes[index] instanceof TextNode) {\n        (this._nodes[index - 1] as TextNode).str += (this._nodes[index] as TextNode).str;\n        this._nodes.splice(index, 1);\n      }\n    }\n\n    // Add the specified field into the expression - append if no insert position is specified.\n    fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n    for (const mfield of mappedFields) {\n      if (!fieldNodes.find(n => n.field === mfield)) {\n        if (insertPosition) {\n          this.insertNodes([new FieldNode(this.mapping, mfield)], insertPosition, offset);\n        } else {\n          this.appendFieldNode(mfield);\n        }\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  clear() {\n    this._nodes = [];\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  toText() {\n    return this.textCache;\n  }\n\n  toHTML() {\n    return this.htmlCache;\n  }\n\n  private updateCache() {\n    let answer = '';\n    this._nodes.forEach(node => answer += node.toText());\n    this.textCache = answer;\n    answer = '';\n    this._nodes.forEach(node => answer += node.toHTML());\n    this.htmlCache = answer;\n  }\n\n  private createNodesFromText(text: string): ExpressionNode[] {\n    const answer = [];\n    let position = -1;\n    let fn = null;\n\n    while ((position = text.search(/\\$\\{[0-9]+\\}/)) !== -1 ) {\n      if (position !== 0) {\n        answer.push(new TextNode(text.substring(0, position)));\n      }\n      const index = parseInt(text.substring(position + 2, text.indexOf('}')), 10);\n      fn = new FieldNode(this.mapping, null, index);\n      if (fn.field === null) {\n        this.cfg.errorService.addError(new ErrorInfo({message: `Unable to map expression index \"${index}\" to field node.`,\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.INTERNAL, mapping: this.mapping}));\n      } else {\n        answer.push(fn);\n      }\n      text = text.substring(text.indexOf('}') + 1);\n    }\n    if (text.length > 0) {\n      answer.push(new TextNode(text));\n    }\n    return answer;\n  }\n\n  private appendFieldNode(mfield: MappedField) {\n    const lastNode = this._nodes.pop();\n    if (lastNode instanceof FieldNode) {\n        this._nodes.push(lastNode, new TextNode(' + '));\n    } else if (lastNode instanceof TextNode) {\n      if (lastNode.str.length === 0) {\n        this._nodes.push(new TextNode(' + '));\n      } else {\n        this._nodes.push(lastNode);\n      }\n    }\n    this._nodes.push(new FieldNode(this.mapping, mfield));\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExpressionUpdatedEvent.html":{"url":"classes/ExpressionUpdatedEvent.html","title":"class - ExpressionUpdatedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExpressionUpdatedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                node\n                            \n                            \n                                    Public\n                                    Optional\n                                offset\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(node?: ExpressionNode, offset?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        node\n                                                  \n                                                        \n                                                                        ExpressionNode\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        offset\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            node\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExpressionNode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            offset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { MappedField, MappingModel } from './mapping.model';\nimport { Subject } from 'rxjs';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from './error.model';\n\nexport class ExpressionUpdatedEvent {\n  constructor(public node?: ExpressionNode, public offset?: number) {}\n}\n\nexport abstract class ExpressionNode {\n  protected static sequence = 0;\n  protected uuid;\n\n  constructor(prefix: string) {\n    this.uuid = prefix + ExpressionNode.sequence++;\n  }\n\n  getUuid() {\n    return this.uuid;\n  }\n\n  abstract toText(): string;\n  abstract toHTML(): string;\n}\n\nexport class TextNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-text-';\n\n  constructor(public str: string) {\n    super(TextNode.PREFIX);\n  }\n\n  toText(): string {\n    return this.str;\n  }\n\n  toHTML(): string {\n    return `${this.str.replace(/ /g, '&nbsp;')}`;\n  }\n\n}\n\nexport class FieldNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-field-';\n\n  constructor(private mapping: MappingModel, public field?: MappedField, private index?: number) {\n    super(FieldNode.PREFIX);\n    if (!field) {\n      this.field = mapping.getMappedFieldForIndex((index + 1).toString(), true);\n    }\n  }\n\n  toText(): string {\n    return '${' + (this.mapping.getIndexForMappedField(this.field) - 1) + '}';\n  }\n\n  toHTML(): string {\n    if (this.field && this.field.field) {\n      return `${this.field.field.name}`;\n    } else {\n      return `N/A`;\n    }\n  }\n\n}\n\nexport class ExpressionModel {\n  expressionUpdatedSource = new Subject();\n  expressionUpdated$ = this.expressionUpdatedSource.asObservable();\n\n  private _nodes: ExpressionNode[] = [];\n  private textCache = '';\n  private htmlCache = '';\n\n  constructor(private mapping: MappingModel, private cfg: ConfigModel) {}\n\n  generateInitialExpression() {\n    this.mapping.getUserMappedFields(true).forEach(f => this.appendFieldNode(f));\n  }\n\n  get nodes(): ReadonlyArray {\n    return this._nodes;\n  }\n\n  getLastNodeIndex() {\n    return this._nodes.length - 1;\n  }\n\n  getLastNode() {\n    return this._nodes[this.getLastNodeIndex()];\n  }\n\n  getNode(nodeId?: string): any {\n    if (!nodeId) {\n      return this.getLastNode();\n    }\n    return this._nodes.find(n => n.getUuid() === nodeId);\n  }\n\n  setConfigModel(cfg: ConfigModel) {\n    this.cfg = cfg;\n  }\n\n  /**\n   * Clear all text from the specified TextNode offset range or from the '@' to the end\n   * of the text node if no node ID is specified.\n   *\n   * Return the new UUID position indicator string or null.\n   *\n   * @param nodeId\n   * @param startOffset\n   * @param endOffset\n   */\n  clearText(nodeId?: string, startOffset?: number, endOffset?: number): TextNode {\n    let targetNode: TextNode;\n    let targetNodeIndex = 0;\n    if (!nodeId) {\n      const lastNode = this.getLastNode();\n      if (!(lastNode instanceof TextNode)) {\n        return null;\n      }\n      const keyPos = lastNode.str.indexOf('@');\n      if (keyPos !== -1) {\n        targetNodeIndex = this._nodes.indexOf(lastNode);\n        targetNode = lastNode;\n        targetNode.str = targetNode.str.substring(0, keyPos);\n      }\n    } else {\n      const node = this._nodes.find(n => n.getUuid() === nodeId);\n      if (!(node instanceof TextNode) || !endOffset) {\n        return null;\n      }\n      targetNode = node;\n      targetNodeIndex = this._nodes.indexOf(targetNode);\n      const cleanStr = targetNode.str.replace(targetNode.str.substring(startOffset, endOffset), '');\n      targetNode.str = cleanStr;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n    return targetNode;\n  }\n\n  /**\n   * Insert text into expression at specified position. If nodeId is not specified,\n   * it will be added to the end of expression. It parses the string\n   * and insert a set of TextNode & FieldNode if it contains field reference like ${0},\n   * otherwise just one TextNode.\n   * This emits ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   * @param str string to insert\n   * @param nodeId target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertText(str: string, nodeId?: string, offset?: number) {\n    this.insertNodes(this.createNodesFromText(str), nodeId, offset);\n  }\n\n  /**\n   * Insert an array of ExpressionNodes at the specified position. If insertPosition is\n   * not specified the nodes will be appended to the end of the expression.\n   * This emits an ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   *\n   * @param newNodes an array of ExpressionNode to add\n   * @param insertPosition target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertNodes(newNodes: ExpressionNode[], insertPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!insertPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        this._nodes.push(...newNodes);\n      } else if (last instanceof TextNode && newNodes[0] instanceof TextNode) {\n        const lastTextNode = last as TextNode;\n        (last as TextNode).str += (newNodes[0] as TextNode).str;\n        newNodes.splice(0, 1, last);\n        this._nodes.splice(this.getLastNodeIndex(), 1, ...newNodes);\n      } else if (last instanceof FieldNode && newNodes[0] instanceof FieldNode) {\n        this._nodes.splice(this.getLastNodeIndex(), 0, new TextNode(' + '), ...newNodes);\n      } else {\n        this._nodes.push(...newNodes);\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    const updatedEvent = new ExpressionUpdatedEvent();\n    const targetNode = this._nodes.find(n => n.getUuid() === insertPosition);\n    const targetNodeIndex = this._nodes.indexOf(targetNode);\n\n    if (targetNode instanceof TextNode) {\n      if (offset === undefined || offset === null || offset  0) {\n        if (newNodes[0] instanceof TextNode) {\n          targetNode.str = pre + (newNodes[0] as TextNode).str;\n          newNodes.splice(0, 1, targetNode);\n        } else {\n          targetNode.str = pre;\n          newNodes.splice(0, 0, targetNode);\n        }\n      }\n      if (post.length > 0) {\n        const lastNewNodeIndex = newNodes.length - 1;\n        if (newNodes[lastNewNodeIndex] instanceof TextNode) {\n          let mergedTextNode: TextNode;\n          if (pre.length > 0) {\n            mergedTextNode = newNodes[lastNewNodeIndex] as TextNode;\n            mergedTextNode.str += post;\n          } else {\n            mergedTextNode = targetNode;\n            mergedTextNode.str = (newNodes[lastNewNodeIndex]as TextNode).str + post;\n          }\n          newNodes.splice(lastNewNodeIndex, 1, mergedTextNode);\n        } else {\n          if (pre.length > 0) {\n            newNodes.push(new TextNode(post));\n          } else {\n            targetNode.str = post;\n            newNodes.push(targetNode);\n          }\n        }\n      }\n      this._nodes.splice(targetNodeIndex, 1, ...newNodes);\n      const lastAddedIndex = targetNodeIndex + newNodes.length - 1;\n      if (this._nodes[lastAddedIndex] instanceof FieldNode\n          && this.nodes[lastAddedIndex + 1] instanceof FieldNode) {\n        // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n        const space = new TextNode(' + ');\n        this._nodes.splice(lastAddedIndex + 1, 0, space);\n        updatedEvent.node = space;\n        updatedEvent.offset = 1;\n      } else if (this._nodes[lastAddedIndex] instanceof FieldNode) {\n        updatedEvent.node = this._nodes[lastAddedIndex + 1];\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = this._nodes[lastAddedIndex];\n        updatedEvent.offset = (this._nodes[lastAddedIndex] as TextNode).str.length - post.length;\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next(updatedEvent);\n      return;\n    }\n\n    // targetNode is a FieldNode - insert the text before it if offset is 0, otherwise after it\n    if (offset !== 0 && newNodes[0] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      newNodes.splice(0, 0, new TextNode(' + '));\n    }\n    const nextNodeIndex = offset === 0 ? targetNodeIndex : targetNodeIndex + 1;\n    const nextNode = this._nodes[nextNodeIndex];\n    if (nextNode instanceof TextNode && newNodes[newNodes.length - 1] instanceof TextNode) {\n      updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      nextNode.str = (newNodes[newNodes.length - 1] as TextNode).str + (nextNode as TextNode).str;\n      newNodes.pop();\n      this._nodes.splice(nextNodeIndex, 1, ...newNodes);\n      updatedEvent.node = nextNode;\n    } else if (nextNode instanceof FieldNode && newNodes[newNodes.length - 1] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      const space = new TextNode(' + ');\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes, space);\n      updatedEvent.node = space;\n      updatedEvent.offset = 1;\n    } else {\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes);\n      if (nextNode instanceof TextNode) {\n        updatedEvent.node = nextNode;\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = newNodes[newNodes.length - 1];\n        updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  removeToken(lastFieldRefRemoved: (removed: MappedField) => void, tokenPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!tokenPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        return;\n      }\n      if (last instanceof FieldNode) {\n        const removed = this._nodes.pop() as FieldNode;\n        if (!this._nodes.find(n => n instanceof FieldNode && n.field === removed.field)) {\n          lastFieldRefRemoved(removed.field);\n        }\n      } else if (last instanceof TextNode) {\n        if (last.str.length > 0) {\n          last.str = last.str.substring(0, last.str.length - 1);\n        } else {\n          this._nodes.pop();\n        }\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    let updatedEvent = new ExpressionUpdatedEvent();\n    let targetNode = this._nodes.find(n => n.getUuid() === tokenPosition);\n    let targetNodeIndex = this._nodes.indexOf(targetNode);\n    if (!targetNode || offset === -1) {\n      if (targetNodeIndex  n instanceof FieldNode && n.field === targetFieldNode.field)) {\n        lastFieldRefRemoved(targetFieldNode.field);\n      }\n      if (this._nodes.length > targetNodeIndex) {\n        if (this._nodes[targetNodeIndex - 1] instanceof TextNode\n            && this._nodes[targetNodeIndex] instanceof TextNode) {\n          const newOffset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n          (this._nodes[targetNodeIndex - 1] as TextNode).str\n              += (this._nodes[targetNodeIndex] as TextNode).str;\n          this._nodes.splice(targetNodeIndex, 1);\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = newOffset;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof FieldNode\n            && this._nodes[targetNodeIndex] instanceof FieldNode) {\n          const glue = new TextNode(' + ');\n          this._nodes.splice(targetNodeIndex, 0, glue);\n          updatedEvent.node = glue;\n          updatedEvent.offset = 3;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n        } else if (this._nodes[targetNodeIndex] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex];\n          updatedEvent.offset = 0;\n        }\n      } else {\n        // end of line\n        updatedEvent = undefined;\n      }\n    } else {\n      const targetString = (targetNode as TextNode).str;\n      (targetNode as TextNode).str = offset === 0 ? targetString.substr(1)\n        : targetString.substring(0, offset) + targetString.substring(offset + 1);\n      if ((targetNode as TextNode).str.length === 0) {\n        this.cfg.errorService.addError(new ErrorInfo({message: 'At least one space is required between field references.',\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.USER, mapping: this.mapping}));\n        return;\n      }\n      updatedEvent.node = targetNode;\n      updatedEvent.offset = offset;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  /**\n   * Replace the content of the last text node with a substring terminating at the\n   * specified index.\n   *\n   * @param index\n   */\n  clearToEnd(index: number): void {\n    const last = this.getLastNode();\n    if (!(last instanceof TextNode)) {\n      return;\n    }\n    last.str = last.str.substring(0, index);\n  }\n\n  /**\n   * Reflect mapped source fields to the field references in the expression.\n   * Selected source fields are inserted into or appended to the expression,\n   * and unselected source fields are removed from expression.\n   *\n   * @param mapping Corresponding MappingModel object\n   */\n  updateFieldReference(mapping: MappingModel, insertPosition?: string, offset?: number) {\n    const mappedFields = mapping.getUserMappedFields(true);\n    const toAdd: MappedField[] = [];\n    const toRemove: MappedField[] = [];\n    let fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n\n    // Remove the field from the expression if unmapped.\n    for (const node of fieldNodes) {\n      if (mappedFields.includes(node.field)) {\n        continue;\n      }\n      const index = this._nodes.indexOf(node);\n      this._nodes.splice(index, 1);\n      if (this._nodes.length > index && this._nodes[index - 1] instanceof TextNode\n          && this._nodes[index] instanceof TextNode) {\n        (this._nodes[index - 1] as TextNode).str += (this._nodes[index] as TextNode).str;\n        this._nodes.splice(index, 1);\n      }\n    }\n\n    // Add the specified field into the expression - append if no insert position is specified.\n    fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n    for (const mfield of mappedFields) {\n      if (!fieldNodes.find(n => n.field === mfield)) {\n        if (insertPosition) {\n          this.insertNodes([new FieldNode(this.mapping, mfield)], insertPosition, offset);\n        } else {\n          this.appendFieldNode(mfield);\n        }\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  clear() {\n    this._nodes = [];\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  toText() {\n    return this.textCache;\n  }\n\n  toHTML() {\n    return this.htmlCache;\n  }\n\n  private updateCache() {\n    let answer = '';\n    this._nodes.forEach(node => answer += node.toText());\n    this.textCache = answer;\n    answer = '';\n    this._nodes.forEach(node => answer += node.toHTML());\n    this.htmlCache = answer;\n  }\n\n  private createNodesFromText(text: string): ExpressionNode[] {\n    const answer = [];\n    let position = -1;\n    let fn = null;\n\n    while ((position = text.search(/\\$\\{[0-9]+\\}/)) !== -1 ) {\n      if (position !== 0) {\n        answer.push(new TextNode(text.substring(0, position)));\n      }\n      const index = parseInt(text.substring(position + 2, text.indexOf('}')), 10);\n      fn = new FieldNode(this.mapping, null, index);\n      if (fn.field === null) {\n        this.cfg.errorService.addError(new ErrorInfo({message: `Unable to map expression index \"${index}\" to field node.`,\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.INTERNAL, mapping: this.mapping}));\n      } else {\n        answer.push(fn);\n      }\n      text = text.substring(text.indexOf('}') + 1);\n    }\n    if (text.length > 0) {\n      answer.push(new TextNode(text));\n    }\n    return answer;\n  }\n\n  private appendFieldNode(mfield: MappedField) {\n    const lastNode = this._nodes.pop();\n    if (lastNode instanceof FieldNode) {\n        this._nodes.push(lastNode, new TextNode(' + '));\n    } else if (lastNode instanceof TextNode) {\n      if (lastNode.str.length === 0) {\n        this._nodes.push(new TextNode(' + '));\n      } else {\n        this._nodes.push(lastNode);\n      }\n    }\n    this._nodes.push(new FieldNode(this.mapping, mfield));\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldAction.html":{"url":"classes/FieldAction.html","title":"class - FieldAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                argumentValues\n                            \n                            \n                                definition\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                getArgumentValue\n                            \n                            \n                                setArgumentValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            argumentValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldActionArgumentValue[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            definition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldActionDefinition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:77\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(definition: FieldActionDefinition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                FieldActionDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldAction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getArgumentValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetArgumentValue(argumentName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argumentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldActionArgumentValue\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setArgumentValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetArgumentValue(argumentName: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argumentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FieldActionArgument {\n  name: string = null;\n  type = 'STRING';\n  values = null;\n  serviceObject: any = new Object();\n}\n\nexport class FieldActionArgumentValue {\n  name: string = null;\n  value: string = null;\n}\n\nexport enum Multiplicity {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  ZERO_TO_ONE = 'ZERO_TO_ONE'\n}\n\nexport class FieldActionDefinition {\n  name: string;\n  isCustom: boolean;\n  arguments: FieldActionArgument[] = [];\n  method: string;\n  sourceType = 'undefined';\n  targetType = 'undefined';\n  multiplicity = Multiplicity.ONE_TO_ONE;\n  serviceObject: any = new Object();\n\n  populateFieldAction(action: FieldAction): void {\n    action.name = this.name;\n    action.definition = this;\n\n    // Use the parsed values if present, otherwise set to '0'.\n    if (action.argumentValues == null || action.argumentValues.length === 0) {\n      action.argumentValues = [];\n      for (const arg of this.arguments) {\n\n        // Default the input field to 0 for numerics\n        if (['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(arg.type) !== -1) {\n          action.setArgumentValue(arg.name, '0');\n        } else {\n          action.setArgumentValue(arg.name, '');\n        }\n      }\n    }\n  }\n\n  getArgumentForName(name: string): FieldActionArgument {\n    for (const argument of this.arguments) {\n      if (argument.name === name) {\n        return argument;\n      }\n    }\n    return null;\n  }\n\n}\n\nexport class FieldAction {\n  name: string;\n  definition: FieldActionDefinition = null;\n  argumentValues: FieldActionArgumentValue[] = [];\n\n  static create(definition: FieldActionDefinition): FieldAction {\n    const instance = new FieldAction();\n    instance.definition = definition;\n    instance.name = definition.name;\n    return instance;\n  }\n\n  getArgumentValue(argumentName: string): FieldActionArgumentValue {\n    for (const argValue of this.argumentValues) {\n      if (argValue.name === argumentName) {\n        return argValue;\n      }\n    }\n    const newArgValue: FieldActionArgumentValue = new FieldActionArgumentValue();\n    newArgValue.name = argumentName;\n    newArgValue.value = '0';\n    this.argumentValues.push(newArgValue);\n    return newArgValue;\n  }\n\n  setArgumentValue(argumentName: string, value: string): void {\n    this.getArgumentValue(argumentName).value = value;\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldActionArgument.html":{"url":"classes/FieldActionArgument.html","title":"class - FieldActionArgument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldActionArgument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                serviceObject\n                            \n                            \n                                type\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : new Object()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            values\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FieldActionArgument {\n  name: string = null;\n  type = 'STRING';\n  values = null;\n  serviceObject: any = new Object();\n}\n\nexport class FieldActionArgumentValue {\n  name: string = null;\n  value: string = null;\n}\n\nexport enum Multiplicity {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  ZERO_TO_ONE = 'ZERO_TO_ONE'\n}\n\nexport class FieldActionDefinition {\n  name: string;\n  isCustom: boolean;\n  arguments: FieldActionArgument[] = [];\n  method: string;\n  sourceType = 'undefined';\n  targetType = 'undefined';\n  multiplicity = Multiplicity.ONE_TO_ONE;\n  serviceObject: any = new Object();\n\n  populateFieldAction(action: FieldAction): void {\n    action.name = this.name;\n    action.definition = this;\n\n    // Use the parsed values if present, otherwise set to '0'.\n    if (action.argumentValues == null || action.argumentValues.length === 0) {\n      action.argumentValues = [];\n      for (const arg of this.arguments) {\n\n        // Default the input field to 0 for numerics\n        if (['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(arg.type) !== -1) {\n          action.setArgumentValue(arg.name, '0');\n        } else {\n          action.setArgumentValue(arg.name, '');\n        }\n      }\n    }\n  }\n\n  getArgumentForName(name: string): FieldActionArgument {\n    for (const argument of this.arguments) {\n      if (argument.name === name) {\n        return argument;\n      }\n    }\n    return null;\n  }\n\n}\n\nexport class FieldAction {\n  name: string;\n  definition: FieldActionDefinition = null;\n  argumentValues: FieldActionArgumentValue[] = [];\n\n  static create(definition: FieldActionDefinition): FieldAction {\n    const instance = new FieldAction();\n    instance.definition = definition;\n    instance.name = definition.name;\n    return instance;\n  }\n\n  getArgumentValue(argumentName: string): FieldActionArgumentValue {\n    for (const argValue of this.argumentValues) {\n      if (argValue.name === argumentName) {\n        return argValue;\n      }\n    }\n    const newArgValue: FieldActionArgumentValue = new FieldActionArgumentValue();\n    newArgValue.name = argumentName;\n    newArgValue.value = '0';\n    this.argumentValues.push(newArgValue);\n    return newArgValue;\n  }\n\n  setArgumentValue(argumentName: string, value: string): void {\n    this.getArgumentValue(argumentName).value = value;\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldActionArgumentValue.html":{"url":"classes/FieldActionArgumentValue.html","title":"class - FieldActionArgumentValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldActionArgumentValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FieldActionArgument {\n  name: string = null;\n  type = 'STRING';\n  values = null;\n  serviceObject: any = new Object();\n}\n\nexport class FieldActionArgumentValue {\n  name: string = null;\n  value: string = null;\n}\n\nexport enum Multiplicity {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  ZERO_TO_ONE = 'ZERO_TO_ONE'\n}\n\nexport class FieldActionDefinition {\n  name: string;\n  isCustom: boolean;\n  arguments: FieldActionArgument[] = [];\n  method: string;\n  sourceType = 'undefined';\n  targetType = 'undefined';\n  multiplicity = Multiplicity.ONE_TO_ONE;\n  serviceObject: any = new Object();\n\n  populateFieldAction(action: FieldAction): void {\n    action.name = this.name;\n    action.definition = this;\n\n    // Use the parsed values if present, otherwise set to '0'.\n    if (action.argumentValues == null || action.argumentValues.length === 0) {\n      action.argumentValues = [];\n      for (const arg of this.arguments) {\n\n        // Default the input field to 0 for numerics\n        if (['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(arg.type) !== -1) {\n          action.setArgumentValue(arg.name, '0');\n        } else {\n          action.setArgumentValue(arg.name, '');\n        }\n      }\n    }\n  }\n\n  getArgumentForName(name: string): FieldActionArgument {\n    for (const argument of this.arguments) {\n      if (argument.name === name) {\n        return argument;\n      }\n    }\n    return null;\n  }\n\n}\n\nexport class FieldAction {\n  name: string;\n  definition: FieldActionDefinition = null;\n  argumentValues: FieldActionArgumentValue[] = [];\n\n  static create(definition: FieldActionDefinition): FieldAction {\n    const instance = new FieldAction();\n    instance.definition = definition;\n    instance.name = definition.name;\n    return instance;\n  }\n\n  getArgumentValue(argumentName: string): FieldActionArgumentValue {\n    for (const argValue of this.argumentValues) {\n      if (argValue.name === argumentName) {\n        return argValue;\n      }\n    }\n    const newArgValue: FieldActionArgumentValue = new FieldActionArgumentValue();\n    newArgValue.name = argumentName;\n    newArgValue.value = '0';\n    this.argumentValues.push(newArgValue);\n    return newArgValue;\n  }\n\n  setArgumentValue(argumentName: string, value: string): void {\n    this.getArgumentValue(argumentName).value = value;\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldActionDefinition.html":{"url":"classes/FieldActionDefinition.html","title":"class - FieldActionDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldActionDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                arguments\n                            \n                            \n                                isCustom\n                            \n                            \n                                method\n                            \n                            \n                                multiplicity\n                            \n                            \n                                name\n                            \n                            \n                                serviceObject\n                            \n                            \n                                sourceType\n                            \n                            \n                                targetType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getArgumentForName\n                            \n                            \n                                populateFieldAction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            arguments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldActionArgument[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCustom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            method\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            multiplicity\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Multiplicity.ONE_TO_ONE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : new Object()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'undefined'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'undefined'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:42\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getArgumentForName\n                        \n                        \n                    \n                \n            \n            \n                \ngetArgumentForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldActionArgument\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            populateFieldAction\n                        \n                        \n                    \n                \n            \n            \n                \npopulateFieldAction(action: FieldAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/field-action.model.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class FieldActionArgument {\n  name: string = null;\n  type = 'STRING';\n  values = null;\n  serviceObject: any = new Object();\n}\n\nexport class FieldActionArgumentValue {\n  name: string = null;\n  value: string = null;\n}\n\nexport enum Multiplicity {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  ZERO_TO_ONE = 'ZERO_TO_ONE'\n}\n\nexport class FieldActionDefinition {\n  name: string;\n  isCustom: boolean;\n  arguments: FieldActionArgument[] = [];\n  method: string;\n  sourceType = 'undefined';\n  targetType = 'undefined';\n  multiplicity = Multiplicity.ONE_TO_ONE;\n  serviceObject: any = new Object();\n\n  populateFieldAction(action: FieldAction): void {\n    action.name = this.name;\n    action.definition = this;\n\n    // Use the parsed values if present, otherwise set to '0'.\n    if (action.argumentValues == null || action.argumentValues.length === 0) {\n      action.argumentValues = [];\n      for (const arg of this.arguments) {\n\n        // Default the input field to 0 for numerics\n        if (['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(arg.type) !== -1) {\n          action.setArgumentValue(arg.name, '0');\n        } else {\n          action.setArgumentValue(arg.name, '');\n        }\n      }\n    }\n  }\n\n  getArgumentForName(name: string): FieldActionArgument {\n    for (const argument of this.arguments) {\n      if (argument.name === name) {\n        return argument;\n      }\n    }\n    return null;\n  }\n\n}\n\nexport class FieldAction {\n  name: string;\n  definition: FieldActionDefinition = null;\n  argumentValues: FieldActionArgumentValue[] = [];\n\n  static create(definition: FieldActionDefinition): FieldAction {\n    const instance = new FieldAction();\n    instance.definition = definition;\n    instance.name = definition.name;\n    return instance;\n  }\n\n  getArgumentValue(argumentName: string): FieldActionArgumentValue {\n    for (const argValue of this.argumentValues) {\n      if (argValue.name === argumentName) {\n        return argValue;\n      }\n    }\n    const newArgValue: FieldActionArgumentValue = new FieldActionArgumentValue();\n    newArgValue.name = argumentName;\n    newArgValue.value = '0';\n    this.argumentValues.push(newArgValue);\n    return newArgValue;\n  }\n\n  setArgumentValue(argumentName: string, value: string): void {\n    this.getArgumentValue(argumentName).value = value;\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FieldActionService.html":{"url":"injectables/FieldActionService.html","title":"injectable - FieldActionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FieldActionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/field-action.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                cfg\n                            \n                            \n                                    Private\n                                headers\n                            \n                            \n                                isInitialized\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                appliesToField\n                            \n                            \n                                    Private\n                                appliesToSourceField\n                            \n                            \n                                    Private\n                                appliesToTargetField\n                            \n                            \n                                    Private\n                                clearActionDefinitions\n                            \n                            \n                                    Private\n                                doFetchFieldActions\n                            \n                            \n                                    Private\n                                extractFieldActionDefinition\n                            \n                            \n                                    Async\n                                fetchFieldActions\n                            \n                            \n                                getActionDefinitionForName\n                            \n                            \n                                getActionsAppliesToField\n                            \n                            \n                                    Private\n                                getActualField\n                            \n                            \n                                    Private\n                                matchesDate\n                            \n                            \n                                    Private\n                                matchesNumeric\n                            \n                            \n                                    Private\n                                sortFieldActionDefinitions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorService: ErrorHandlerService, logger: NGXLogger, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            appliesToField\n                        \n                        \n                    \n                \n            \n            \n                \nappliesToField(action: FieldActionDefinition, mapping: MappingModel, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:245\n                \n            \n\n\n            \n                \n                    Return true if the action's source/target types and collection types match the respective source/target\nfield properties for source transformations, or matches the respective target field properties only for\na target transformation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldActionDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            appliesToSourceField\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    appliesToSourceField(action: FieldActionDefinition, mapping: MappingModel, selectedSourceField: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:282\n                \n            \n\n\n            \n                \n                    Check if it could be applied to source field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldActionDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FieldMappingPair\n\n                                    \n                                \n                                \n                                    selectedSourceField\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected source field\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            appliesToTargetField\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    appliesToTargetField(action: FieldActionDefinition, mapping: MappingModel, selectedTargetField: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:307\n                \n            \n\n\n            \n                \n                    Check if it could be applied for target field. Target type may not change.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldActionDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        FieldMappingPair\n\n                                    \n                                \n                                \n                                    selectedTargetField\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected target field\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearActionDefinitions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearActionDefinitions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:360\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            doFetchFieldActions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doFetchFieldActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            extractFieldActionDefinition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractFieldActionDefinition(actionDetail: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actionDetail\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldActionDefinition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            fetchFieldActions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchFieldActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionDefinitionForName\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionDefinitionForName(actionName: string, multiplicity?: Multiplicity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    actionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    multiplicity\n                                    \n                                                Multiplicity\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FieldActionDefinition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionsAppliesToField\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionsAppliesToField(mapping: MappingModel, isSource: boolean, multiplicity: Multiplicity)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:137\n                \n            \n\n\n            \n                \n                    Return the field action Definitions applicable to the specified field mapping pair.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                                \n                                    multiplicity\n                                    \n                                                Multiplicity\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        Multiplicity.ONE_TO_ONE\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     FieldActionDefinition[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getActualField\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getActualField(mapping: MappingModel, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:267\n                \n            \n\n\n            \n                \n                    Return the first non-padding field in either the source or target mappings.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Field\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            matchesDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchesDate(candidateType: string, selectedType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:342\n                \n            \n\n\n            \n                \n                    Return true if the candidate type and selected type are generically a date, false otherwise.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    candidateType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            matchesNumeric\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchesNumeric(candidateType: string, selectedType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:354\n                \n            \n\n\n            \n                \n                    Return true if the candidate type and selected type are generically numeric, false otherwise.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    candidateType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sortFieldActionDefinitions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sortFieldActionDefinitions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:205\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n    [Multiplicity.ONE_TO_ONE]: [],\n    [Multiplicity.ONE_TO_MANY]: [],\n    [Multiplicity.MANY_TO_ONE]: [],\n    [Multiplicity.ZERO_TO_ONE]: []\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new HttpHeaders(\n    {'Content-Type': 'application/json; application/octet-stream',\n     'Accept':       'application/json; application/octet-stream'})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isInitialized\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/field-action.service.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ConfigModel } from '../models/config.model';\nimport { NGXLogger } from 'ngx-logger';\nimport { ErrorHandlerService } from './error-handler.service';\nimport { FieldActionDefinition, FieldActionArgument, Multiplicity } from '../models/field-action.model';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { MappingModel } from '../models/mapping.model';\nimport { Field } from '../models/field.model';\nimport { ErrorInfo, ErrorLevel, ErrorScope, ErrorType } from '../models/error.model';\n\n@Injectable()\nexport class FieldActionService {\n  cfg: ConfigModel = ConfigModel.getConfig();\n  actions: { [key in Multiplicity]: FieldActionDefinition[]} = {\n    [Multiplicity.ONE_TO_ONE]: [],\n    [Multiplicity.ONE_TO_MANY]: [],\n    [Multiplicity.MANY_TO_ONE]: [],\n    [Multiplicity.ZERO_TO_ONE]: []\n  };\n\n  isInitialized = false;\n  private headers = new HttpHeaders(\n    {'Content-Type': 'application/json; application/octet-stream',\n     'Accept':       'application/json; application/octet-stream'});\n\n  constructor(\n    private errorService: ErrorHandlerService,\n    private logger: NGXLogger,\n    private http: HttpClient) {}\n\n  async fetchFieldActions(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this.cfg.preloadedFieldActionMetadata) {\n        this.clearActionDefinitions();\n        if (this.cfg.preloadedFieldActionMetadata && this.cfg.preloadedFieldActionMetadata.ActionDetails) {\n          for (const actionDetail of this.cfg.preloadedFieldActionMetadata.ActionDetails.actionDetail) {\n            const fieldActionDefinition = this.extractFieldActionDefinition(actionDetail);\n            if (!fieldActionDefinition.multiplicity) {\n              this.logger.debug(`Field action (${fieldActionDefinition.name}) is missing multiplicity, ingoring`);\n              continue;\n            }\n            if (fieldActionDefinition.name === 'Expression') { // Expression is handled in special manner\n              continue;\n            }\n            this.actions[fieldActionDefinition.multiplicity].push(fieldActionDefinition);\n          }\n        }\n        this.sortFieldActionDefinitions();\n        this.isInitialized = true;\n        resolve(true);\n        return;\n      }\n\n      if (this.cfg.mappingService == null) {\n        this.cfg.errorService.addError(new ErrorInfo({message: 'Mapping service is not provided. Field Actions will not be used.',\n          level: ErrorLevel.WARN, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL}));\n        this.isInitialized = true;\n        resolve(true);\n        return;\n      } else if (this.cfg.initCfg.baseMappingServiceUrl == null) {\n        this.cfg.errorService.addError(new ErrorInfo({message: 'Mapping service URL is not provided. Field Actions will not be used.',\n        level: ErrorLevel.WARN, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL}));\n        this.isInitialized = true;\n        resolve(true);\n        return;\n      }\n\n      // Fetch the field actions from the runtime service.\n      this.doFetchFieldActions().toPromise()\n        .then((fetchedActionConfigs: FieldActionDefinition[]) => {\n          if (fetchedActionConfigs.length === 1) {\n            this.logger.debug('No field action was returned from backend');\n            resolve(false);\n          }\n          this.clearActionDefinitions();\n          fetchedActionConfigs.forEach(action => {\n            if (!action.multiplicity) {\n              this.logger.debug(`Field action  (${action.name}) is missing multiplicity, ignoring`);\n              return;\n            }\n            if (action.name === 'Expression') { // Expression is handled in special manner\n              return;\n            }\n            this.actions[action.multiplicity].push(action);\n          });\n          this.sortFieldActionDefinitions();\n          this.isInitialized = true;\n          resolve(true);\n        }).catch((error: any) => {\n          if (error.status === 0) {\n            reject(`Fatal network error: Could not connect to AtlasMap design runtime service. (${error})`);\n          } else {\n            reject(`Could not load field action configs: (${error.message})`);\n          }\n        });\n    });\n  }\n\n  getActionDefinitionForName(actionName: string, multiplicity?: Multiplicity): FieldActionDefinition {\n    if (!this.actions || !actionName) {\n      return null;\n    }\n    let actions: FieldActionDefinition[] = [];\n    if (multiplicity) {\n      actions = this.actions[multiplicity];\n     } else {\n       Object.values(this.actions).forEach(arr => actions = actions.concat(arr));\n     }\n    for (const actionDef of actions) {\n      if (actionName === actionDef.name) {\n        return actionDef;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Return the field action Definitions applicable to the specified field mapping pair.\n   * @param mapping\n   */\n  getActionsAppliesToField(mapping: MappingModel, isSource: boolean = true,\n  multiplicity: Multiplicity = Multiplicity.ONE_TO_ONE): FieldActionDefinition[] {\n    if (!mapping || !this.actions) {\n      return [];\n    }\n    return this.actions[multiplicity].filter(d => this.appliesToField(d, mapping, isSource));\n  }\n\n  private doFetchFieldActions(): Observable {\n    return new Observable((observer: any) => {\n      const actionConfigs: FieldActionDefinition[] = [];\n      const url: string = this.cfg.initCfg.baseMappingServiceUrl + 'fieldActions';\n      this.cfg.logger.trace('Field Action Config Request');\n      this.http.get(url, { headers: this.headers }).toPromise().then((body: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Field Action Config Response: ${JSON.stringify(body)}`);\n        }\n        if (body && body.ActionDetails\n          && body.ActionDetails.actionDetail\n          && body.ActionDetails.actionDetail.length) {\n          for (const actionDetail of body.ActionDetails.actionDetail) {\n            const fieldActionConfig = this.extractFieldActionDefinition(actionDetail);\n            actionConfigs.push(fieldActionConfig);\n          }\n        }\n        observer.next(actionConfigs);\n        observer.complete();\n      }).catch((error: any) => {\n        observer.error(error);\n        observer.next(actionConfigs);\n        observer.complete();\n      });\n    });\n  }\n\n  private extractFieldActionDefinition(actionDetail: any): FieldActionDefinition {\n    if (this.cfg.isDebugEnabled()) {\n      this.cfg.logger.debug(`Deserializing field action definition: ${JSON.stringify(actionDetail)}`);\n    }\n\n    const fieldActionDefinition = new FieldActionDefinition();\n    fieldActionDefinition.name = actionDetail.name;\n    fieldActionDefinition.isCustom = actionDetail.custom;\n    fieldActionDefinition.sourceType = actionDetail.sourceType;\n    fieldActionDefinition.targetType = actionDetail.targetType;\n    fieldActionDefinition.method = actionDetail.method;\n    fieldActionDefinition.multiplicity = actionDetail.multiplicity;\n    fieldActionDefinition.serviceObject = actionDetail;\n\n    if (actionDetail.actionSchema) {\n\n      for (const key of Object.keys(actionDetail.actionSchema.properties)) {\n        const propertyObject = actionDetail.actionSchema.properties[key];\n        if (key === '@type') {\n          fieldActionDefinition.name = propertyObject.const;\n          continue;\n        }\n        const argumentDefinition = new FieldActionArgument();\n        argumentDefinition.name = key;\n        argumentDefinition.type = propertyObject.type;\n        argumentDefinition.values = propertyObject.enum;\n        argumentDefinition.serviceObject = propertyObject;\n        fieldActionDefinition.arguments.push(argumentDefinition);\n      }\n    }\n    return fieldActionDefinition;\n  }\n\n  private sortFieldActionDefinitions() {\n    Object.keys(this.actions).forEach(multiplicity => {\n      const definitions = this.actions[multiplicity];\n      const sortedActionDefinitions: FieldActionDefinition[] = [];\n      if (definitions == null || definitions.length === 0) {\n        return;\n      }\n\n      const defsByName: { [key: string]: FieldActionDefinition[]; } = {};\n      const defNames: string[] = [];\n      for (const fieldActionConfig of definitions) {\n        const name: string = fieldActionConfig.name;\n        let sameNamedDefs: FieldActionDefinition[] = defsByName[name];\n        if (!sameNamedDefs) {\n          sameNamedDefs = [];\n          defNames.push(name);\n        }\n        sameNamedDefs.push(fieldActionConfig);\n        defsByName[name] = sameNamedDefs;\n      }\n\n      defNames.sort();\n\n      for (const name of defNames) {\n        const sameNamedDefs: FieldActionDefinition[] = defsByName[name];\n        for (const fieldActionDefinition of sameNamedDefs) {\n          sortedActionDefinitions.push(fieldActionDefinition);\n        }\n      }\n      this.actions[multiplicity] = sortedActionDefinitions;\n    });\n  }\n\n  /**\n   * Return true if the action's source/target types and collection types match the respective source/target\n   * field properties for source transformations, or matches the respective target field properties only for\n   * a target transformation.\n   *\n   * @param mapping\n   */\n  appliesToField(action: FieldActionDefinition, mapping: MappingModel, isSource: boolean): boolean {\n\n    if (mapping == null) {\n      return false;\n    }\n    const selectedSourceField: Field = this.getActualField(mapping, true);\n    const selectedTargetField: Field = this.getActualField(mapping, false);\n\n    if ((isSource && selectedSourceField == null) || (!isSource) && selectedTargetField == null) {\n      return false;\n    }\n\n    return isSource ? this.appliesToSourceField(action, mapping, selectedSourceField)\n     : this.appliesToTargetField(action, mapping, selectedTargetField);\n  }\n\n  /**\n   * Return the first non-padding field in either the source or target mappings.\n   *\n   * @param mapping\n   * @param isSource\n   */\n  private getActualField(mapping: MappingModel, isSource: boolean): Field {\n    let targetField: Field = null;\n    for (targetField of mapping.getFields(isSource)) {\n      if ((targetField.name !== '')) {\n        break;\n      }\n    }\n    return targetField;\n  }\n\n  /**\n   * Check if it could be applied to source field.\n   * @param mapping FieldMappingPair\n   * @param selectedSourceField selected source field\n   */\n  private appliesToSourceField(action: FieldActionDefinition, mapping: MappingModel, selectedSourceField: Field): boolean {\n\n    // Check for matching types - date.\n    if (this.matchesDate(action.sourceType, selectedSourceField.type)) {\n      return true;\n    }\n\n    // Check for matching types - numeric.\n    if (this.matchesNumeric(action.sourceType, selectedSourceField.type)) {\n      return true;\n    }\n\n    // First check if the source types match.\n    if ((action.sourceType === 'ANY') || (selectedSourceField.type === action.sourceType)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Check if it could be applied for target field. Target type may not change.\n   * @param mapping FieldMappingPair\n   * @param selectedTargetField selected target field\n   */\n  private appliesToTargetField(action: FieldActionDefinition, mapping: MappingModel, selectedTargetField: Field): boolean {\n    if (selectedTargetField == null) {\n      return false;\n    }\n\n    if (action.multiplicity !== Multiplicity.ONE_TO_ONE) {\n      return false;\n    }\n\n    // Check for matching types - date.\n    if (this.matchesDate(action.sourceType, selectedTargetField.type)\n     && this.matchesDate(action.targetType, selectedTargetField.type)) {\n      return true;\n    }\n\n    // Check for matching types - numeric.\n    if (this.matchesNumeric(action.sourceType, selectedTargetField.type)\n     && this.matchesNumeric(action.targetType, selectedTargetField.type)) {\n      return true;\n    }\n\n    if (action.sourceType !== 'ANY' && action.sourceType !== selectedTargetField.type) {\n      return false;\n    }\n\n    // All other types must match the selected field types with the candidate field action types.\n    return (action.targetType === 'ANY' || selectedTargetField.type === action.targetType);\n  }\n\n  /**\n   * Return true if the candidate type and selected type are generically a date, false otherwise.\n   *\n   * @param candidateType\n   * @param selectedType\n   */\n  private matchesDate(candidateType: string, selectedType: string): boolean {\n    return ((candidateType === 'ANY') ||\n      (candidateType === 'ANY_DATE' &&\n        ['DATE', 'DATE_TIME', 'DATE_TIME_TZ', 'TIME'].indexOf(selectedType) !== -1));\n  }\n\n  /**\n   * Return true if the candidate type and selected type are generically numeric, false otherwise.\n   *\n   * @param candidateType\n   * @param selectedType\n   */\n  private matchesNumeric(candidateType: string, selectedType: string): boolean {\n    return ((candidateType === 'ANY') ||\n      (candidateType === 'NUMBER' &&\n        ['LONG', 'INTEGER', 'FLOAT', 'DOUBLE', 'SHORT', 'BYTE', 'DECIMAL', 'NUMBER'].indexOf(selectedType) !== -1));\n  }\n\n  private clearActionDefinitions() {\n    Object.keys(Multiplicity).forEach(m => this.actions[m] = []);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FieldEditComponent.html":{"url":"components/FieldEditComponent.html","title":"component - FieldEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FieldEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                field-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./field-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                dataSource\n                            \n                            \n                                docDef\n                            \n                            \n                                editMode\n                            \n                            \n                                field\n                            \n                            \n                                fieldType\n                            \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                isSource\n                            \n                            \n                                isXML\n                            \n                            \n                                namespaceAlias\n                            \n                            \n                                namespaces\n                            \n                            \n                                parentField\n                            \n                            \n                                parentFieldName\n                            \n                            \n                                valueType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                executeSearch\n                            \n                            \n                                fieldTypeSelectionChanged\n                            \n                            \n                                getField\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                handleOnBlur\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                namespaceSelectionChanged\n                            \n                            \n                                parentSelectionChanged\n                            \n                            \n                                valueTypeSelectionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:45\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            executeSearch\n                        \n                        \n                    \n                \n            \n            \n                \nexecuteSearch(filter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fieldTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nfieldTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getField\n                        \n                        \n                    \n                \n            \n            \n                \ngetField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Field\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleOnBlur\n                        \n                        \n                    \n                \n            \n            \n                \nhandleOnBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(field: Field, docDef: DocumentDefinition, isAdd: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docDef\n                                    \n                                                DocumentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isAdd\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            namespaceSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nnamespaceSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parentSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nparentSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nvalueTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : ConfigModel.getConfig()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                    \n                        \n                            Default value : new Field()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 'element'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('value')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isXML\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespaceAlias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespaces\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentFieldName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { DocumentDefinition, NamespaceModel } from '../../models/document-definition.model';\nimport { Field } from '../../models/field.model';\nimport { DocumentType } from '../../common/config.types';\nimport { ConfigModel } from '../../models/config.model';\nimport { Observable } from 'rxjs';\nimport { ModalWindowValidator } from '../modal/modal-window.component';\n\n@Component({\n  selector: 'field-edit',\n  templateUrl: './field-edit.component.html',\n})\n\nexport class FieldEditComponent implements ModalWindowValidator {\n  cfg: ConfigModel = ConfigModel.getConfig();\n  field: Field = new Field();\n  parentField: Field;\n  parentFieldName: String = null;\n  isSource = false;\n  fieldType: any = 'element';\n  valueType: any = 'STRING';\n  namespaceAlias = '';\n  editMode = false;\n  namespaces: NamespaceModel[] = [];\n  docDef: DocumentDefinition = null;\n  dataSource: Observable;\n  isXML = false;\n  @ViewChild('value') private focusEl: ElementRef;\n\n  constructor() {\n    this.dataSource = Observable.create((observer: any) => {\n      observer.next(this.executeSearch(observer.outerValue));\n    });\n  }\n\n  initialize(field: Field, docDef: DocumentDefinition, isAdd: boolean): void {\n    this.docDef = docDef;\n    this.editMode = !isAdd;\n    this.field = field == null ? new Field() : field.copy();\n    this.valueType = (this.field.type == null) ? 'STRING' : this.field.type;\n    this.parentField = this.field.parentField;\n\n    if (this.docDef.type === DocumentType.XML) {\n      this.isXML = true;\n      this.fieldType = this.field.isAttribute ? 'attribute' : 'element';\n      this.parentField = (this.field.parentField == null) ? docDef.fields[0] : this.field.parentField;\n      const unqualifiedNS: NamespaceModel = NamespaceModel.getUnqualifiedNamespace();\n      this.namespaceAlias = unqualifiedNS.alias;\n      if (this.field.namespaceAlias) {\n        this.namespaceAlias = this.field.namespaceAlias;\n      }\n      if (isAdd) { // on add, inherit namespace from parent field\n        this.namespaceAlias = this.parentField.namespaceAlias == null ? unqualifiedNS.alias : this.parentField.namespaceAlias;\n      }\n\n      this.namespaces = [unqualifiedNS].concat(this.docDef.namespaces);\n\n      // if the field references a namespace that doesn't exist, add a fake namespace option for the\n      // user to select if they desire to leave that bad namespace alias in place\n      let namespaceFound = false;\n      for (const ns of this.namespaces) {\n        if (ns.alias === this.namespaceAlias) {\n          namespaceFound = true;\n          break;\n        }\n      }\n      if (!namespaceFound) {\n        const fakeNamespace: NamespaceModel = new NamespaceModel();\n        fakeNamespace.alias = this.namespaceAlias;\n        this.namespaces.push(fakeNamespace);\n      }\n    }\n    this.parentFieldName = this.parentField.name;\n  }\n\n  handleOnBlur(event: any): void {\n    this.parentFieldName = this.parentField.name;\n  }\n\n  parentSelectionChanged(event: any): void {\n    const oldParentField: Field = this.parentField;\n    this.parentField = event.item['field'];\n    this.parentField = (this.parentField == null) ? oldParentField : this.parentField;\n    this.parentFieldName = this.parentField.name;\n\n    // change namespace dropdown selecte option to match parent fields' namespace automatically\n    const unqualifiedNS: NamespaceModel = NamespaceModel.getUnqualifiedNamespace();\n    this.namespaceAlias = this.parentField.namespaceAlias == null ? unqualifiedNS.alias : this.parentField.namespaceAlias;\n  }\n\n  fieldTypeSelectionChanged(event: any): void {\n    this.fieldType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  valueTypeSelectionChanged(event: any): void {\n    this.valueType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  namespaceSelectionChanged(event: any): void {\n    this.namespaceAlias = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  executeSearch(filter: string): any[] {\n    const formattedFields: any[] = [];\n\n    for (const field of this.docDef.getAllFields()) {\n      if (!field.isParentField()) {\n        continue;\n      }\n      const displayName = (field == null) ? '' : field.getFieldLabel(ConfigModel.getConfig().showTypes, true);\n      const formattedField: any = { 'field': field, 'displayName': displayName };\n      if (filter == null || filter === ''\n        || formattedField['displayName'].toLowerCase().indexOf(filter.toLowerCase()) !== -1) {\n        formattedFields.push(formattedField);\n      }\n      if (formattedFields.length > 9) {\n        break;\n      }\n    }\n    return formattedFields;\n  }\n\n  getField(): Field {\n    this.field.displayName = this.field.name;\n    this.field.parentField = this.parentField;\n    this.field.type = this.valueType;\n    this.field.userCreated = true;\n    this.field.serviceObject.jsonType = 'io.atlasmap.json.v2.JsonField';\n    if (this.docDef.type === DocumentType.XML) {\n      this.field.isAttribute = (this.fieldType === 'attribute');\n      this.field.namespaceAlias = this.namespaceAlias;\n      const unqualifiedNS: NamespaceModel = NamespaceModel.getUnqualifiedNamespace();\n      if (this.namespaceAlias === unqualifiedNS.alias) {\n        this.field.namespaceAlias = null;\n      }\n      this.field.serviceObject.jsonType = 'io.atlasmap.xml.v2.XmlField';\n    }\n    return this.field;\n  }\n\n  isDataValid(): boolean {\n    return ConfigModel.getConfig().errorService.isRequiredFieldValid(this.field.name, 'Name');\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n}\n\n    \n\n    \n        \n\n  {{ model['field'].docDef.name }}\n  {{ model['field'].path }}\n\n\n\n  \n    Parent\n    \n  \n  \n    Name\n    \n  \n  \n    Namespace\n    \n      \n        {{ ns.getPrettyLabel() }}\n      \n    \n  \n  \n    Field Type\n    \n      Element\n      Attribute\n    \n  \n  \n    Value Type\n    \n      Boolean\n      Byte\n      ByteArray\n      Char\n      Complex\n      Decimal\n      Double\n      Float\n      Integer\n      Long\n      Short\n      String\n      Time\n      Date\n      DateTime\n      DateTZ\n      TimeTZ\n      DateTimeTZ\n      Unsigned Byte\n      Unsigned Integer\n      Unsigned Long\n      Unsigned Short\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ model[\\'field\\'].docDef.name }}  {{ model[\\'field\\'].path }}      Parent            Name            Namespace                  {{ ns.getPrettyLabel() }}                  Field Type          Element      Attribute            Value Type          Boolean      Byte      ByteArray      Char      Complex      Decimal      Double      Float      Integer      Long      Short      String      Time      Date      DateTime      DateTZ      TimeTZ      DateTimeTZ      Unsigned Byte      Unsigned Integer      Unsigned Long      Unsigned Short      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'FieldEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FieldNode.html":{"url":"classes/FieldNode.html","title":"class - FieldNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FieldNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ExpressionNode\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                field\n                            \n                            \n                                    Static\n                                    Readonly\n                                PREFIX\n                            \n                            \n                                    Protected\n                                    Static\n                                sequence\n                            \n                            \n                                    Protected\n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toHTML\n                            \n                            \n                                toText\n                            \n                            \n                                getUuid\n                            \n                            \n                                    Abstract\n                                toHTML\n                            \n                            \n                                    Abstract\n                                toText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapping: MappingModel, field?: MappedField, index?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        MappingModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        MappedField\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        index\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappedField\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PREFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'expression-field-'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            sequence\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                            \n                                \n                                    Inherited from         ExpressionNode\n\n                                \n                            \n                        \n                            \n                                    Defined in         ExpressionNode:27\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            uuid\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         ExpressionNode\n\n                                \n                            \n                        \n                            \n                                    Defined in         ExpressionNode:28\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \ntoHTML()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \ntoText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetUuid()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toHTML()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toText()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { MappedField, MappingModel } from './mapping.model';\nimport { Subject } from 'rxjs';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from './error.model';\n\nexport class ExpressionUpdatedEvent {\n  constructor(public node?: ExpressionNode, public offset?: number) {}\n}\n\nexport abstract class ExpressionNode {\n  protected static sequence = 0;\n  protected uuid;\n\n  constructor(prefix: string) {\n    this.uuid = prefix + ExpressionNode.sequence++;\n  }\n\n  getUuid() {\n    return this.uuid;\n  }\n\n  abstract toText(): string;\n  abstract toHTML(): string;\n}\n\nexport class TextNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-text-';\n\n  constructor(public str: string) {\n    super(TextNode.PREFIX);\n  }\n\n  toText(): string {\n    return this.str;\n  }\n\n  toHTML(): string {\n    return `${this.str.replace(/ /g, '&nbsp;')}`;\n  }\n\n}\n\nexport class FieldNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-field-';\n\n  constructor(private mapping: MappingModel, public field?: MappedField, private index?: number) {\n    super(FieldNode.PREFIX);\n    if (!field) {\n      this.field = mapping.getMappedFieldForIndex((index + 1).toString(), true);\n    }\n  }\n\n  toText(): string {\n    return '${' + (this.mapping.getIndexForMappedField(this.field) - 1) + '}';\n  }\n\n  toHTML(): string {\n    if (this.field && this.field.field) {\n      return `${this.field.field.name}`;\n    } else {\n      return `N/A`;\n    }\n  }\n\n}\n\nexport class ExpressionModel {\n  expressionUpdatedSource = new Subject();\n  expressionUpdated$ = this.expressionUpdatedSource.asObservable();\n\n  private _nodes: ExpressionNode[] = [];\n  private textCache = '';\n  private htmlCache = '';\n\n  constructor(private mapping: MappingModel, private cfg: ConfigModel) {}\n\n  generateInitialExpression() {\n    this.mapping.getUserMappedFields(true).forEach(f => this.appendFieldNode(f));\n  }\n\n  get nodes(): ReadonlyArray {\n    return this._nodes;\n  }\n\n  getLastNodeIndex() {\n    return this._nodes.length - 1;\n  }\n\n  getLastNode() {\n    return this._nodes[this.getLastNodeIndex()];\n  }\n\n  getNode(nodeId?: string): any {\n    if (!nodeId) {\n      return this.getLastNode();\n    }\n    return this._nodes.find(n => n.getUuid() === nodeId);\n  }\n\n  setConfigModel(cfg: ConfigModel) {\n    this.cfg = cfg;\n  }\n\n  /**\n   * Clear all text from the specified TextNode offset range or from the '@' to the end\n   * of the text node if no node ID is specified.\n   *\n   * Return the new UUID position indicator string or null.\n   *\n   * @param nodeId\n   * @param startOffset\n   * @param endOffset\n   */\n  clearText(nodeId?: string, startOffset?: number, endOffset?: number): TextNode {\n    let targetNode: TextNode;\n    let targetNodeIndex = 0;\n    if (!nodeId) {\n      const lastNode = this.getLastNode();\n      if (!(lastNode instanceof TextNode)) {\n        return null;\n      }\n      const keyPos = lastNode.str.indexOf('@');\n      if (keyPos !== -1) {\n        targetNodeIndex = this._nodes.indexOf(lastNode);\n        targetNode = lastNode;\n        targetNode.str = targetNode.str.substring(0, keyPos);\n      }\n    } else {\n      const node = this._nodes.find(n => n.getUuid() === nodeId);\n      if (!(node instanceof TextNode) || !endOffset) {\n        return null;\n      }\n      targetNode = node;\n      targetNodeIndex = this._nodes.indexOf(targetNode);\n      const cleanStr = targetNode.str.replace(targetNode.str.substring(startOffset, endOffset), '');\n      targetNode.str = cleanStr;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n    return targetNode;\n  }\n\n  /**\n   * Insert text into expression at specified position. If nodeId is not specified,\n   * it will be added to the end of expression. It parses the string\n   * and insert a set of TextNode & FieldNode if it contains field reference like ${0},\n   * otherwise just one TextNode.\n   * This emits ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   * @param str string to insert\n   * @param nodeId target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertText(str: string, nodeId?: string, offset?: number) {\n    this.insertNodes(this.createNodesFromText(str), nodeId, offset);\n  }\n\n  /**\n   * Insert an array of ExpressionNodes at the specified position. If insertPosition is\n   * not specified the nodes will be appended to the end of the expression.\n   * This emits an ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   *\n   * @param newNodes an array of ExpressionNode to add\n   * @param insertPosition target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertNodes(newNodes: ExpressionNode[], insertPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!insertPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        this._nodes.push(...newNodes);\n      } else if (last instanceof TextNode && newNodes[0] instanceof TextNode) {\n        const lastTextNode = last as TextNode;\n        (last as TextNode).str += (newNodes[0] as TextNode).str;\n        newNodes.splice(0, 1, last);\n        this._nodes.splice(this.getLastNodeIndex(), 1, ...newNodes);\n      } else if (last instanceof FieldNode && newNodes[0] instanceof FieldNode) {\n        this._nodes.splice(this.getLastNodeIndex(), 0, new TextNode(' + '), ...newNodes);\n      } else {\n        this._nodes.push(...newNodes);\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    const updatedEvent = new ExpressionUpdatedEvent();\n    const targetNode = this._nodes.find(n => n.getUuid() === insertPosition);\n    const targetNodeIndex = this._nodes.indexOf(targetNode);\n\n    if (targetNode instanceof TextNode) {\n      if (offset === undefined || offset === null || offset  0) {\n        if (newNodes[0] instanceof TextNode) {\n          targetNode.str = pre + (newNodes[0] as TextNode).str;\n          newNodes.splice(0, 1, targetNode);\n        } else {\n          targetNode.str = pre;\n          newNodes.splice(0, 0, targetNode);\n        }\n      }\n      if (post.length > 0) {\n        const lastNewNodeIndex = newNodes.length - 1;\n        if (newNodes[lastNewNodeIndex] instanceof TextNode) {\n          let mergedTextNode: TextNode;\n          if (pre.length > 0) {\n            mergedTextNode = newNodes[lastNewNodeIndex] as TextNode;\n            mergedTextNode.str += post;\n          } else {\n            mergedTextNode = targetNode;\n            mergedTextNode.str = (newNodes[lastNewNodeIndex]as TextNode).str + post;\n          }\n          newNodes.splice(lastNewNodeIndex, 1, mergedTextNode);\n        } else {\n          if (pre.length > 0) {\n            newNodes.push(new TextNode(post));\n          } else {\n            targetNode.str = post;\n            newNodes.push(targetNode);\n          }\n        }\n      }\n      this._nodes.splice(targetNodeIndex, 1, ...newNodes);\n      const lastAddedIndex = targetNodeIndex + newNodes.length - 1;\n      if (this._nodes[lastAddedIndex] instanceof FieldNode\n          && this.nodes[lastAddedIndex + 1] instanceof FieldNode) {\n        // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n        const space = new TextNode(' + ');\n        this._nodes.splice(lastAddedIndex + 1, 0, space);\n        updatedEvent.node = space;\n        updatedEvent.offset = 1;\n      } else if (this._nodes[lastAddedIndex] instanceof FieldNode) {\n        updatedEvent.node = this._nodes[lastAddedIndex + 1];\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = this._nodes[lastAddedIndex];\n        updatedEvent.offset = (this._nodes[lastAddedIndex] as TextNode).str.length - post.length;\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next(updatedEvent);\n      return;\n    }\n\n    // targetNode is a FieldNode - insert the text before it if offset is 0, otherwise after it\n    if (offset !== 0 && newNodes[0] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      newNodes.splice(0, 0, new TextNode(' + '));\n    }\n    const nextNodeIndex = offset === 0 ? targetNodeIndex : targetNodeIndex + 1;\n    const nextNode = this._nodes[nextNodeIndex];\n    if (nextNode instanceof TextNode && newNodes[newNodes.length - 1] instanceof TextNode) {\n      updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      nextNode.str = (newNodes[newNodes.length - 1] as TextNode).str + (nextNode as TextNode).str;\n      newNodes.pop();\n      this._nodes.splice(nextNodeIndex, 1, ...newNodes);\n      updatedEvent.node = nextNode;\n    } else if (nextNode instanceof FieldNode && newNodes[newNodes.length - 1] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      const space = new TextNode(' + ');\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes, space);\n      updatedEvent.node = space;\n      updatedEvent.offset = 1;\n    } else {\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes);\n      if (nextNode instanceof TextNode) {\n        updatedEvent.node = nextNode;\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = newNodes[newNodes.length - 1];\n        updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  removeToken(lastFieldRefRemoved: (removed: MappedField) => void, tokenPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!tokenPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        return;\n      }\n      if (last instanceof FieldNode) {\n        const removed = this._nodes.pop() as FieldNode;\n        if (!this._nodes.find(n => n instanceof FieldNode && n.field === removed.field)) {\n          lastFieldRefRemoved(removed.field);\n        }\n      } else if (last instanceof TextNode) {\n        if (last.str.length > 0) {\n          last.str = last.str.substring(0, last.str.length - 1);\n        } else {\n          this._nodes.pop();\n        }\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    let updatedEvent = new ExpressionUpdatedEvent();\n    let targetNode = this._nodes.find(n => n.getUuid() === tokenPosition);\n    let targetNodeIndex = this._nodes.indexOf(targetNode);\n    if (!targetNode || offset === -1) {\n      if (targetNodeIndex  n instanceof FieldNode && n.field === targetFieldNode.field)) {\n        lastFieldRefRemoved(targetFieldNode.field);\n      }\n      if (this._nodes.length > targetNodeIndex) {\n        if (this._nodes[targetNodeIndex - 1] instanceof TextNode\n            && this._nodes[targetNodeIndex] instanceof TextNode) {\n          const newOffset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n          (this._nodes[targetNodeIndex - 1] as TextNode).str\n              += (this._nodes[targetNodeIndex] as TextNode).str;\n          this._nodes.splice(targetNodeIndex, 1);\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = newOffset;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof FieldNode\n            && this._nodes[targetNodeIndex] instanceof FieldNode) {\n          const glue = new TextNode(' + ');\n          this._nodes.splice(targetNodeIndex, 0, glue);\n          updatedEvent.node = glue;\n          updatedEvent.offset = 3;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n        } else if (this._nodes[targetNodeIndex] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex];\n          updatedEvent.offset = 0;\n        }\n      } else {\n        // end of line\n        updatedEvent = undefined;\n      }\n    } else {\n      const targetString = (targetNode as TextNode).str;\n      (targetNode as TextNode).str = offset === 0 ? targetString.substr(1)\n        : targetString.substring(0, offset) + targetString.substring(offset + 1);\n      if ((targetNode as TextNode).str.length === 0) {\n        this.cfg.errorService.addError(new ErrorInfo({message: 'At least one space is required between field references.',\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.USER, mapping: this.mapping}));\n        return;\n      }\n      updatedEvent.node = targetNode;\n      updatedEvent.offset = offset;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  /**\n   * Replace the content of the last text node with a substring terminating at the\n   * specified index.\n   *\n   * @param index\n   */\n  clearToEnd(index: number): void {\n    const last = this.getLastNode();\n    if (!(last instanceof TextNode)) {\n      return;\n    }\n    last.str = last.str.substring(0, index);\n  }\n\n  /**\n   * Reflect mapped source fields to the field references in the expression.\n   * Selected source fields are inserted into or appended to the expression,\n   * and unselected source fields are removed from expression.\n   *\n   * @param mapping Corresponding MappingModel object\n   */\n  updateFieldReference(mapping: MappingModel, insertPosition?: string, offset?: number) {\n    const mappedFields = mapping.getUserMappedFields(true);\n    const toAdd: MappedField[] = [];\n    const toRemove: MappedField[] = [];\n    let fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n\n    // Remove the field from the expression if unmapped.\n    for (const node of fieldNodes) {\n      if (mappedFields.includes(node.field)) {\n        continue;\n      }\n      const index = this._nodes.indexOf(node);\n      this._nodes.splice(index, 1);\n      if (this._nodes.length > index && this._nodes[index - 1] instanceof TextNode\n          && this._nodes[index] instanceof TextNode) {\n        (this._nodes[index - 1] as TextNode).str += (this._nodes[index] as TextNode).str;\n        this._nodes.splice(index, 1);\n      }\n    }\n\n    // Add the specified field into the expression - append if no insert position is specified.\n    fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n    for (const mfield of mappedFields) {\n      if (!fieldNodes.find(n => n.field === mfield)) {\n        if (insertPosition) {\n          this.insertNodes([new FieldNode(this.mapping, mfield)], insertPosition, offset);\n        } else {\n          this.appendFieldNode(mfield);\n        }\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  clear() {\n    this._nodes = [];\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  toText() {\n    return this.textCache;\n  }\n\n  toHTML() {\n    return this.htmlCache;\n  }\n\n  private updateCache() {\n    let answer = '';\n    this._nodes.forEach(node => answer += node.toText());\n    this.textCache = answer;\n    answer = '';\n    this._nodes.forEach(node => answer += node.toHTML());\n    this.htmlCache = answer;\n  }\n\n  private createNodesFromText(text: string): ExpressionNode[] {\n    const answer = [];\n    let position = -1;\n    let fn = null;\n\n    while ((position = text.search(/\\$\\{[0-9]+\\}/)) !== -1 ) {\n      if (position !== 0) {\n        answer.push(new TextNode(text.substring(0, position)));\n      }\n      const index = parseInt(text.substring(position + 2, text.indexOf('}')), 10);\n      fn = new FieldNode(this.mapping, null, index);\n      if (fn.field === null) {\n        this.cfg.errorService.addError(new ErrorInfo({message: `Unable to map expression index \"${index}\" to field node.`,\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.INTERNAL, mapping: this.mapping}));\n      } else {\n        answer.push(fn);\n      }\n      text = text.substring(text.indexOf('}') + 1);\n    }\n    if (text.length > 0) {\n      answer.push(new TextNode(text));\n    }\n    return answer;\n  }\n\n  private appendFieldNode(mfield: MappedField) {\n    const lastNode = this._nodes.pop();\n    if (lastNode instanceof FieldNode) {\n        this._nodes.push(lastNode, new TextNode(' + '));\n    } else if (lastNode instanceof TextNode) {\n      if (lastNode.str.length === 0) {\n        this._nodes.push(new TextNode(' + '));\n      } else {\n        this._nodes.push(lastNode);\n      }\n    }\n    this._nodes.push(new FieldNode(this.mapping, mfield));\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileManagementService.html":{"url":"injectables/FileManagementService.html","title":"injectable - FileManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/services/file-management.service.ts\n        \n\n            \n                Description\n            \n            \n                Handles file manipulation stored in the backend, including import/export via UI.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _cfg\n                            \n                            \n                                    Private\n                                headers\n                            \n                            \n                                    Private\n                                jsonBuffer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportMappingsCatalog\n                            \n                            \n                                findMappingFiles\n                            \n                            \n                                getCurrentADMCatalog\n                            \n                            \n                                getCurrentMappingCatalog\n                            \n                            \n                                    Private\n                                getCurrentMappingJson\n                            \n                            \n                                    Private\n                                    Async\n                                getJsonBuf\n                            \n                            \n                                    Private\n                                getMappingId\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Async\n                                importADMCatalog\n                            \n                            \n                                resetLibs\n                            \n                            \n                                resetMappings\n                            \n                            \n                                setBinaryFileToService\n                            \n                            \n                                setMappingToService\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    cfg\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: NGXLogger, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    NGXLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            exportMappingsCatalog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exportMappingsCatalog(mappingsFileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:235\n                \n            \n\n\n            \n                \n                    Update the current mapping files and export the current mappings catalog (ADM).\nEstablish the file content in JSON format (mappings + schema + instance-schema), compress\nit (GZIP), update the runtime, then fetch the full ADM catalog ZIP file from the runtime\nand export it.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappingsFileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findMappingFiles\n                        \n                        \n                    \n                \n            \n            \n                \nfindMappingFiles(filter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentADMCatalog\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentADMCatalog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCurrentMappingCatalog\n                        \n                        \n                    \n                \n            \n            \n                \ngetCurrentMappingCatalog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:82\n                \n            \n\n\n            \n                \n                    Retrieve the current user data mappings catalog from the server as a GZIP compressed byte array buffer.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCurrentMappingJson\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentMappingJson()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:413\n                \n            \n\n\n            \n                \n                    Retrieve the current user AtlasMap data mappings from the server as an JSON buffer.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getJsonBuf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getJsonBuf()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:386\n                \n            \n\n\n            \n                \n                    Asynchronously retrieve the current user-defined AtlasMap mappings from the runtime server as an JSON buffer.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getMappingId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMappingId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:448\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(message: string, error: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:452\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            importADMCatalog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    importADMCatalog(mappingsFileName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:340\n                \n            \n\n\n            \n                \n                    Perform a binary read of the specified catalog (.ADM) file and push it to the runtime.  The ADM file is\nin (ZIP) file format.  Once pushed, we can retrieve from runtime the extracted compressed (GZIP) mappings\nfile catalog as well as the mappings JSON file.  These files exist separately for performance reasons.\nOnce the runtime has its ADM catalog, catalog files and mappings file set then restart the DM.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    mappingsFileName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nADM master ZIP catalog\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetLibs\n                        \n                        \n                    \n                \n            \n            \n                \nresetLibs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:160\n                \n            \n\n\n            \n                \n                    Establish an observable function to delete user-defined JAR library files on the runtime.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetMappings\n                        \n                        \n                    \n                \n            \n            \n                \nresetMappings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:139\n                \n            \n\n\n            \n                \n                    Establish an observable function to delete mapping files on the runtime.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBinaryFileToService\n                        \n                        \n                    \n                \n            \n            \n                \nsetBinaryFileToService(compressedBuffer: any, url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:208\n                \n            \n\n\n            \n                \n                    The user has either exported their mappings or imported new mappings.  Either way we're saving them on the server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    compressedBuffer\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMappingToService\n                        \n                        \n                    \n                \n            \n            \n                \nsetMappingToService(jsonBuffer: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:184\n                \n            \n\n\n            \n                \n                    Commit the specified AtlasMapping JSON user mapping string to the runtime service.  The mappings\nare kept separate so they can be updated with minimal overhead.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    jsonBuffer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new HttpHeaders(\n    {'Content-Type': 'application/json; application/octet-stream',\n     'Accept':       'application/json; application/octet-stream'})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            jsonBuffer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:39\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n\n                \n                    \n                        getcfg()\n                    \n                \n                            \n                                \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:43\n                                \n                            \n\n                \n                    \n                        setcfg(cfg)\n                    \n                \n                            \n                                \n                                    Defined in src/app/lib/atlasmap-data-mapper/services/file-management.service.ts:47\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            cfg\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ConfigModel } from '../models/config.model';\nimport { NGXLogger } from 'ngx-logger';\nimport { deflate } from 'pako';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, forkJoin } from 'rxjs';\nimport { DataMapperUtil } from '../common/data-mapper-util';\nimport { map, timeout } from 'rxjs/operators';\nimport { DocumentManagementService } from './document-management.service';\nimport { InspectionType } from '../common/config.types';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from '../models/error.model';\n\n/**\n * Handles file manipulation stored in the backend, including import/export via UI.\n */\n@Injectable()\nexport class FileManagementService {\n  _cfg: ConfigModel;\n\n  private headers = new HttpHeaders(\n    {'Content-Type': 'application/json; application/octet-stream',\n     'Accept':       'application/json; application/octet-stream'});\n  private jsonBuffer: string;\n\n  constructor(private logger: NGXLogger, private http: HttpClient) {}\n\n  get cfg() {\n    return this._cfg;\n  }\n\n  set cfg(cfg: ConfigModel) {\n    this._cfg = cfg;\n    if (!this._cfg.logger) {\n      this._cfg.logger = this.logger;\n    }\n  }\n\n  findMappingFiles(filter: string): Observable {\n    return new Observable((observer: any) => {\n      const url = this.cfg.initCfg.baseMappingServiceUrl + 'mappings' + (filter == null ? '' : '?filter=' + filter);\n      this.cfg.logger.trace('Mapping List Request');\n      this.http.get(url, { headers: this.headers }).toPromise().then((body: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping List Response: ${JSON.stringify(body)}`);\n        }\n        const entries: any[] = body.StringMap.stringMapEntry;\n        const mappingFileNames: string[] = [];\n        for (const entry of entries) {\n          mappingFileNames.push(entry.name);\n        }\n        observer.next(mappingFileNames);\n        observer.complete();\n      }).catch((error: any) => {\n        if (error.status !== DataMapperUtil.HTTP_STATUS_NO_CONTENT) {\n          this.handleError('Error occurred while accessing the current mapping files from the runtime service.', error);\n          observer.error(error);\n        }\n        observer.complete();\n      });\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n  /**\n   * Retrieve the current user data mappings catalog from the server as a GZIP compressed byte array buffer.\n   */\n  getCurrentMappingCatalog(): Observable {\n    const catalogName = 'adm-catalog-files.gz';\n    return new Observable((observer: any) => {\n      const baseURL: string = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/GZ/';\n      const url: string = baseURL + catalogName;\n      this.cfg.logger.trace('Mapping Catalog Request');\n      const catHeaders = new HttpHeaders(\n        { 'Content-Type':  'application/octet-stream',\n          'Accept':        'application/octet-stream',\n          'Response-Type': 'application/octet-stream'\n        });\n      this.http.get(url, { headers: catHeaders, responseType: 'arraybuffer' }).toPromise().then((body: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping Catalog Response: ${JSON.stringify(body)}`);\n        }\n        observer.next(body);\n        observer.complete();\n      }).catch((error: any) => {\n        if (error.status !== DataMapperUtil.HTTP_STATUS_NO_CONTENT) {\n          this.handleError('Error occurred while accessing the current mappings catalog from the runtime service.', error);\n          observer.error(error);\n        }\n        observer.complete();\n      });\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n  getCurrentADMCatalog(): Observable {\n    const atlasmapCatalogName = 'atlasmap-catalog.adm';\n    return new Observable((observer: any) => {\n      const baseURL: string = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/ZIP/';\n      const url: string = baseURL + atlasmapCatalogName;\n      this.cfg.logger.trace('Mapping Catalog Request');\n      const catHeaders = new HttpHeaders(\n        { 'Content-Type':  'application/octet-stream',\n          'Accept':        'application/octet-stream',\n          'Response-Type': 'application/octet-stream'\n        });\n      this.http.get(url, { headers: catHeaders, responseType: 'arraybuffer' }).toPromise().then((body: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping Catalog Response: ${JSON.stringify(body)}`);\n        }\n        observer.next(body);\n        observer.complete();\n      }).catch((error: any) => {\n        if (error.status !== DataMapperUtil.HTTP_STATUS_NO_CONTENT) {\n          this.handleError('Error occurred while accessing the ADM catalog from the runtime service.', error);\n          observer.error(error);\n        }\n        observer.complete();\n      });\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n  /**\n   * Establish an observable function to delete mapping files on the runtime.\n   */\n  resetMappings(): Observable {\n    return new Observable((observer: any) => {\n      const url = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/RESET';\n      this.cfg.logger.trace('Mapping Service Request - Reset');\n      this.http.delete(url, { headers: this.headers }).toPromise().then((res: any) => {\n          if (this.cfg.isTraceEnabled()) {\n            this.cfg.logger.trace(`Mapping Service Response - Reset: ${JSON.stringify(res)}`);\n          }\n          observer.next(true);\n          observer.complete();\n          return res;\n        })\n        .catch((error: any) => {\n          this.handleError('Error occurred while resetting mappings.', error); },\n      );\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n  /**\n   * Establish an observable function to delete user-defined JAR library files on the runtime.\n   */\n  resetLibs(): Observable {\n    return new Observable((observer: any) => {\n      const url = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/resetLibs';\n      this.cfg.logger.trace('Mapping Service Request - Reset User-Defined Libraries');\n      this.http.delete(url, { headers: this.headers }).toPromise().then((res: any) => {\n          if (this.cfg.isTraceEnabled()) {\n            this.cfg.logger.trace(`Mapping Service Response - Reset Libs: ${JSON.stringify(res)}`);\n          }\n          observer.next(true);\n          observer.complete();\n          return res;\n        })\n        .catch((error: any) => {\n          this.handleError('Error occurred while resetting user-defined JAR libraries.', error); },\n      );\n    }).pipe(timeout(this.cfg.initCfg.admHttpTimeout));\n  }\n\n /**\n  * Commit the specified AtlasMapping JSON user mapping string to the runtime service.  The mappings\n  * are kept separate so they can be updated with minimal overhead.\n  *\n  * @param buffer - JSON content\n  */\n  setMappingToService(jsonBuffer: string): Observable {\n    return new Observable((observer: any) => {\n      const url = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/JSON/' + this.getMappingId();\n      this.cfg.logger.trace('Mapping Service Request');\n      this.http.put(url, jsonBuffer, { headers: this.headers }).toPromise().then((res: any) => {\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping Service Response: ${JSON.stringify(res)}`);\n        }\n        observer.next(true);\n        observer.complete();\n      })\n      .catch((error: any) => {\n        this.handleError('Error occurred while establishing mappings from an imported JSON.', error);\n        observer.error(error);\n        observer.complete();\n      });\n    });\n  }\n\n  /**\n   * The user has either exported their mappings or imported new mappings.  Either way we're saving them on the server.\n   *\n   * @param compressedBuffer\n   */\n   setBinaryFileToService(compressedBuffer: any, url: string): Observable {\n     return new Observable((observer: any) => {\n       this.cfg.logger.trace('Set Compressed Mapping Service Request');\n       this.http.put(url, compressedBuffer, { headers: this.headers }).toPromise().then((res: any) => {\n          if (this.cfg.isTraceEnabled()) {\n            this.cfg.logger.trace(`Set Compressed Mapping Service Response: ${JSON.stringify(res)}`);\n          }\n          observer.next(true);\n          observer.complete();\n       })\n      .catch((error: any) => {\n        this.handleError('Error occurred while saving mapping.', error);\n        observer.error(error);\n        observer.complete();\n      });\n    });\n   }\n\n  /**\n   * Update the current mapping files and export the current mappings catalog (ADM).\n   *\n   * Establish the file content in JSON format (mappings + schema + instance-schema), compress\n   * it (GZIP), update the runtime, then fetch the full ADM catalog ZIP file from the runtime\n   * and export it.\n   *\n   * @param event\n   */\n  async exportMappingsCatalog(mappingsFileName: string): Promise {\n    return new Promise(async(resolve, reject) => {\n      let aggregateBuffer = '   {\\n';\n      let userExport = true;\n\n      try {\n        if (mappingsFileName === null || mappingsFileName.length === 0) {\n          mappingsFileName = 'atlasmap-mapping.adm';\n          userExport = false;\n        }\n\n        // Retrieve the JSON mappings buffer from the server.\n        if (await this.getJsonBuf()) {\n          aggregateBuffer += DocumentManagementService.generateExportMappings(this.jsonBuffer[0]);\n        }\n\n        let exportMeta = '   \"exportMeta\": [\\n';\n        let exportBlockData = '      \"exportBlockData\": [\\n';\n        let docCount = 0;\n\n        // Establish two string arrays:\n        //   exportMeta - meta-data describing the instance or schema documents.\n        //   exportBlockData - the actual source of the instance/schema/mappings documents or the Java class name.\n        for (const doc of this.cfg.getAllDocs()) {\n          if (doc.inspectionSource !== null &&\n               (doc.inspectionType === InspectionType.INSTANCE) || (doc.inspectionType === InspectionType.SCHEMA) ||\n                 (doc.inspectionType === InspectionType.JAVA_CLASS) ) {\n            if (docCount > 0) {\n              exportMeta += ',\\n';\n              exportBlockData += ',\\n';\n            }\n            exportMeta += DocumentManagementService.generateExportMetaStr(doc);\n            exportBlockData += DocumentManagementService.generateExportBlockData(doc.inspectionSource);\n            docCount++;\n          }\n        }\n        exportMeta += '   ],\\n';\n        exportBlockData += '   ]\\n';\n        aggregateBuffer += exportMeta;\n        aggregateBuffer += exportBlockData;\n        aggregateBuffer += '   }\\n';\n\n        // Compress the JSON buffer - write out as binary.\n        const binBuffer = DataMapperUtil.str2bytes(aggregateBuffer);\n        try {\n          const compress = deflate(binBuffer, {gzip: true});\n          let fileContent: Blob = new Blob([compress], {type: 'application/octet-stream'});\n\n          // Save the model mappings to the runtime.\n          this.setBinaryFileToService(fileContent,\n            this.cfg.initCfg.baseMappingServiceUrl + 'mapping/GZ/' + this.getMappingId()).toPromise()\n            .then(async(result: boolean) => {\n\n            // Fetch the full ADM catalog file from the runtime (ZIP) and export it to to the local\n            // downloads area.\n            if (userExport) {\n\n              this.getCurrentADMCatalog().subscribe( async(value: Uint8Array) => {\n\n                // If value is null then no compressed mappings catalog is available on the server.\n                if (value !== null) {\n                  fileContent = new Blob([value], {type: 'application/octet-stream'});\n                  if (!await DataMapperUtil.writeFile(fileContent, mappingsFileName)) {\n                    this.cfg.errorService.addError(new ErrorInfo({message: 'Unable to save the current data mappings.',\n                      level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL}));\n                  }\n                }\n                resolve(true);\n              });\n            }\n            resolve(true);\n          }).catch((error: any) => {\n            if (error.status === 0) {\n              this.cfg.errorService.addError(new ErrorInfo({\n                message: 'Fatal network error: Unable to connect to the AtlasMap design runtime service.',\n                level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n            } else {\n              this.cfg.errorService.addError(new ErrorInfo({\n                message: `Unable to update the catalog mappings file to the AtlasMap design runtime service.\n                  ${error.status} ${error.statusText}`,\n                level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n            }\n          });\n        } catch (error1) {\n          this.cfg.errorService.addError(new ErrorInfo({message: 'Unable to compress the current data mappings.',\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error1}));\n          return;\n        }\n      } catch (error) {\n        this.cfg.errorService.addError(new ErrorInfo({message: 'Unable to export the current data mappings.',\n          level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        return;\n      }\n    });\n  }\n\n  /**\n   * Perform a binary read of the specified catalog (.ADM) file and push it to the runtime.  The ADM file is\n   * in (ZIP) file format.  Once pushed, we can retrieve from runtime the extracted compressed (GZIP) mappings\n   * file catalog as well as the mappings JSON file.  These files exist separately for performance reasons.\n   *\n   * Once the runtime has its ADM catalog, catalog files and mappings file set then restart the DM.\n   *\n   * @param mappingsFileName - ADM master ZIP catalog\n   */\n  async importADMCatalog(mappingsFileName: string): Promise {\n    return new Promise(async(resolve, reject) => {\n      let fileBin = null;\n      const reader = new FileReader();\n\n      // Turn the imported ADM file into a binary octet stream.\n      try {\n        fileBin = await DataMapperUtil.readBinaryFile(mappingsFileName, reader);\n      } catch (error) {\n        this.cfg.errorService.addError(new ErrorInfo({message: `Unable to import the specified catalog file \\'${mappingsFileName}\\'`,\n          level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        return;\n      }\n      const fileContent: Blob = new Blob([fileBin], {type: 'application/octet-stream'});\n\n      // Push the binary stream to the runtime.\n      this.setBinaryFileToService(fileContent, this.cfg.initCfg.baseMappingServiceUrl +\n        'mapping/ZIP/' + this.getMappingId()).toPromise().then( async(result: boolean) => {\n\n        try {\n          this.cfg.mappings = null;\n          this.cfg.clearDocs();\n          await this.cfg.initializationService.initialize();\n        } catch (error) {\n          this.cfg.errorService.addError(new ErrorInfo({message: `Unable to import the catalog file: ${mappingsFileName} ${error.message}`,\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n          return;\n        }\n      }).catch((error: any) => {\n        if (error.status === 0) {\n          this.cfg.errorService.addError(new ErrorInfo({\n            message: 'Fatal network error: Unable to connect to the AtlasMap design runtime service.',\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        } else {\n          this.cfg.errorService.addError(new ErrorInfo({\n            message: `Unable to send the ADM file to the runtime service.  ${error.status} ${error.statusText}`,\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        }\n      });\n      resolve(true);\n    });\n  }\n\n  /**\n   * Asynchronously retrieve the current user-defined AtlasMap mappings from the runtime server as an JSON buffer.\n   */\n  private async getJsonBuf(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this.cfg.mappings === null) {\n        resolve(false);\n      }\n      this.cfg.mappingFiles[0] = this.cfg.mappings.name;\n      this.getCurrentMappingJson().toPromise().then((result: string) => {\n        this.jsonBuffer = result;\n        resolve(true);\n      }).catch((error: any) => {\n        if (error.status === 0) {\n          this.cfg.errorService.addError(new ErrorInfo({\n            message: 'Fatal network error: Unable to connect to the AtlasMap design runtime service.',\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        } else {\n          this.cfg.errorService.addError(new ErrorInfo({\n            message: `Unable to access current mapping definitions: ${error.status} ${error.statusText}`,\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        }\n        resolve(false);\n      });\n    });\n  }\n\n  /**\n   * Retrieve the current user AtlasMap data mappings from the server as an JSON buffer.\n   */\n  private getCurrentMappingJson(): Observable {\n    const mappingFileNames: string[] = this.cfg.mappingFiles;\n    return new Observable((observer: any) => {\n      const baseURL: string = this.cfg.initCfg.baseMappingServiceUrl + 'mapping/JSON/';\n      const operations: Observable[] = [];\n      for (const mappingName of mappingFileNames) {\n        const url: string = baseURL + mappingName;\n        this.cfg.logger.trace('Mapping Service Request');\n        const jsonHeaders = new HttpHeaders(\n          { 'Content-Type':  'application/json',\n            'Accept':        'application/json',\n            'Response-Type': 'application/json'\n          });\n        const operation = this.http.get(url, { headers: jsonHeaders, responseType: 'text' }).pipe(map((res: any) => res ));\n        operations.push(operation);\n      }\n\n      forkJoin(operations).toPromise().then((data: string[]) => {\n        if (!data) {\n          observer.next('no data');\n          observer.complete();\n          return;\n        }\n        if (this.cfg.isTraceEnabled()) {\n          this.cfg.logger.trace(`Mapping Service Response: ${JSON.stringify(data)}`);\n        }\n        observer.next(data);\n        observer.complete();\n      }).catch((error: any) => {\n        observer.error(error);\n        observer.complete();\n      });\n    });\n  }\n\n  private getMappingId(): string {\n    return (this.cfg.mappingFiles.length > 0) ? this.cfg.mappingFiles[0] : '0';\n  }\n\n  private handleError(message: string, error: any): void {\n    this.cfg.errorService.addError(new ErrorInfo({message: message, level: ErrorLevel.ERROR,\n      scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n    this.cfg.initCfg.initialized = true;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusDirective.html":{"url":"directives/FocusDirective.html","title":"directive - FocusDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FocusDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/common/focus.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterContentChecked\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [focus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hasFocus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentChecked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/common/focus.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        focus\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/common/focus.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterContentChecked\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterContentChecked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/focus.directive.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hasFocus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/common/focus.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input, AfterContentChecked } from '@angular/core';\n\n@Directive({\n  selector: '[focus]'\n})\nexport class FocusDirective implements AfterContentChecked {\n\n  @Input() focus: boolean;\n  private hasFocus = false;\n\n  constructor(private elementRef: ElementRef) {\n  }\n\n  ngAfterContentChecked() {\n    if (this.focus && !this.hasFocus) {\n      this.elementRef.nativeElement.focus();\n      this.hasFocus = true;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LineModel.html":{"url":"classes/LineModel.html","title":"class - LineModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LineModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sourceX\n                            \n                            \n                                sourceY\n                            \n                            \n                                stroke\n                            \n                            \n                                style\n                            \n                            \n                                targetField\n                            \n                            \n                                targetX\n                            \n                            \n                                targetY\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stroke\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'url(#line-gradient-dormant)'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            style\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SafeStyle\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, Input, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { ConfigModel, AdmRedrawMappingLinesEvent } from '../../models/config.model';\nimport { MappingModel } from '../../models/mapping.model';\nimport { Field } from '../../models/field.model';\n\nimport { DocumentDefinitionComponent } from '../document/document-definition.component';\nimport { DocumentFieldDetailComponent } from '../document/document-field-detail.component';\nimport { Subscription } from 'rxjs';\n\nexport class LineModel {\n  sourceX: string;\n  sourceY: string;\n  targetX: string;\n  targetY: string;\n  stroke = 'url(#line-gradient-dormant)';\n  style: SafeStyle;\n  targetField: Field;\n}\n\n@Component({\n  selector: 'line-machine',\n  templateUrl: './line-machine.component.html',\n})\n\nexport class LineMachineComponent implements OnInit, OnDestroy {\n  @Input() cfg: ConfigModel;\n  @Input() docDefInput: DocumentDefinitionComponent;\n  @Input() docDefOutput: DocumentDefinitionComponent;\n\n  lines: LineModel[] = [];\n  lineBeingFormed: LineModel;\n  drawingLine = false;\n  svgStyle: SafeStyle;\n\n  @ViewChild('lineMachineElement') lineMachineElement: ElementRef;\n\n  private yOffset = 3;\n  private mappingUpdatedSubscription: Subscription;\n\n  constructor(private sanitizer: DomSanitizer, public detector: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.mappingUpdatedSubscription = this.cfg.mappingService.mappingUpdated$.subscribe(() => {\n      this.mappingChanged();\n      this.docDefInput.setLineMachine(this);\n      this.docDefOutput.setLineMachine(this);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.mappingUpdatedSubscription) {\n      this.mappingUpdatedSubscription.unsubscribe();\n    }\n  }\n\n  handleRedrawMappingLinesEvent(event: AdmRedrawMappingLinesEvent): void {\n    const lmcInstance: LineMachineComponent = event._lmcInstance;\n    lmcInstance.redrawLinesForMappings();\n  }\n\n  /**\n   * Match the line geometry of a selected line to determine the matching line model array element.  Return\n   * the target field from that array element.\n   *\n   * @param selectedLineAttrs\n   */\n  private getTargetFieldFromLine(selectedLineAttrs: NamedNodeMap): Field {\n    for (const line of this.lines) {\n      if ((selectedLineAttrs[1].nodeValue === line.sourceX) &&\n          (selectedLineAttrs[2].nodeValue === line.sourceY) &&\n          (selectedLineAttrs[3].nodeValue === line.targetX) &&\n          (selectedLineAttrs[4].nodeValue === line.targetY)) {\n        return line.targetField;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * The user has selected between the panels.  This is likely a line - verify it and select the fields\n   * associated with the line.\n   *\n   * @param event\n   */\n  handleLineClick(event) {\n    const selectedElement = event.target;\n    if (selectedElement !== null && selectedElement.nodeName === 'line') {\n      const targetField: Field = this.getTargetFieldFromLine(selectedElement.attributes);\n      if (targetField != null) {\n        this.cfg.mappingService.fieldSelected(targetField, false);\n        setTimeout(() => {\n          this.redrawLinesForMappings();\n        }, 1);\n      }\n    }\n  }\n\n  addLineFromParams(sourceX: string, sourceY: string, targetX: string, targetY: string, stroke: string, targetField: Field): void {\n    const l: LineModel = new LineModel();\n    l.sourceX = sourceX;\n    l.sourceY = sourceY;\n    l.targetX = targetX;\n    l.targetY = targetY;\n    l.stroke = stroke;\n    l.targetField = targetField;\n    this.addLine(l);\n  }\n\n  addLine(l: LineModel): void {\n    this.createLineStyle(l);\n    this.lines.push(l);\n  }\n\n  setLineBeingFormed(l: LineModel): void {\n    if (l != null) {\n      this.createLineStyle(l);\n    }\n    this.lineBeingFormed = l;\n  }\n\n  clearLines(): void {\n    this.lines = [];\n    this.lineBeingFormed = null;\n    this.drawingLine = false;\n  }\n\n  drawLine(event: MouseEvent): void {\n    this.drawCurrentLine(event.offsetX.toString(), event.offsetY.toString());\n  }\n\n  drawCurrentLine(x: string, y: string): void {\n    if (this.drawingLine && this.lineBeingFormed) {\n      this.lineBeingFormed.targetX = x;\n      this.lineBeingFormed.targetY = y;\n    }\n  }\n\n  handleDocumentFieldMouseOver(component: DocumentFieldDetailComponent, event: any, isSource: boolean): void {\n    if (!this.drawingLine) {\n      return;\n    }\n    if (isSource) {\n      return;\n    }\n    const targetY = this.docDefOutput.getFieldDetailComponentPosition(component.field).y;\n    this.drawCurrentLine('100%', (targetY + this.yOffset).toString());\n  }\n\n  mappingChanged(): void {\n    this.drawingLine = false;\n    this.setLineBeingFormed(null);\n    this.redrawLinesForMappings();\n  }\n\n  redrawLinesForMappings(): void {\n    if (!this.cfg.initCfg.initialized || !this.cfg.mappings) {\n      this.clearLines();\n\n      // Clear any scroll deltas from the sources and targets panels.\n      if (this.docDefOutput) {\n        this.docDefInput.handleScroll(null);\n      }\n      if (this.docDefOutput) {\n        this.docDefOutput.handleScroll(null);\n      }\n      return;\n    }\n    if (!this.cfg.mappings.activeMapping) {\n      this.setLineBeingFormed(null);\n    }\n    this.clearLines();\n    if (!this.cfg.showMappedFields) {\n      return;\n    }\n    const mappings: MappingModel[] = this.cfg.mappings.mappings;\n    const activeMapping: MappingModel = this.cfg.mappings.activeMapping;\n    let foundSelectedMapping = false;\n    for (const m of mappings) {\n      foundSelectedMapping = foundSelectedMapping || (m === activeMapping);\n      this.drawLinesForMapping(m);\n    }\n    if (!foundSelectedMapping && activeMapping) {\n      this.drawLinesForMapping(activeMapping);\n    }\n    setTimeout(() => {\n      this.detector.detectChanges();\n    }, 10);\n  }\n\n  private createLineStyle(l: LineModel): void {\n    // angular2 will throw an error if we don't use this sanitizer to signal to angular2 that the css style value is ok.\n    l.style = this.sanitizer.bypassSecurityTrustStyle('stroke:' + l.stroke + '; stroke-width:4px;');\n  }\n\n  private drawLinesForMapping(m: MappingModel): void {\n    const el: any = this.lineMachineElement.nativeElement;\n    const lineMachineHeight: number = el.offsetHeight;\n\n    const isSelectedMapping: boolean = (this.cfg.mappings.activeMapping === m);\n    const stroke: string = 'url(#line-gradient-' + (isSelectedMapping ? 'active' : 'dormant') + ')';\n    if (!m.sourceFields.length || !m.targetFields.length) {\n      return;\n    }\n\n    for (const mappedInputField of m.sourceFields) {\n      const inputField: Field = mappedInputField.field;\n      if (!this.checkFieldEligibiltyForLineDrawing(inputField, 'input', m)) {\n        continue;\n      }\n\n      const inputFieldPos: any = this.getScreenPosForField(inputField, this.docDefInput);\n      if (inputFieldPos == null) {\n        continue;\n      }\n\n      let sourceY: number = inputFieldPos.y;\n      sourceY = (sourceY  (lineMachineHeight - 27)) ? (lineMachineHeight - 27) : sourceY;\n\n      for (const mappedOutputField of m.targetFields) {\n        const outputField: Field = mappedOutputField.field;\n        if (!this.checkFieldEligibiltyForLineDrawing(outputField, 'output', m)) {\n          continue;\n        }\n\n        const outputFieldPos: any = this.getScreenPosForField(outputField, this.docDefOutput);\n        if (outputFieldPos == null) {\n          continue;\n        }\n\n        let targetY: number = outputFieldPos.y;\n        targetY = (targetY  (lineMachineHeight - 27)) ? (lineMachineHeight - 27) : targetY;\n\n        if (isSelectedMapping || (this.cfg.showLinesAlways)) {\n          this.addLineFromParams('0', (sourceY + this.yOffset).toString(),\n            '100%', (targetY + this.yOffset).toString(), stroke, outputField);\n        }\n      }\n    }\n  }\n\n  private getScreenPosForField(field: Field, docDefComponent: DocumentDefinitionComponent): any {\n    if (field == null || field.docDef == null) {\n      return null;\n    }\n    if (!field.docDef.showFields) {\n      const pos: any = docDefComponent.getDocDefElementPosition(field.docDef);\n      if (pos) {\n        pos['y'] = pos['y'] + 5;\n      }\n      return pos;\n    }\n    let parentField: Field = field;\n    while (parentField != null) {\n      const fieldPos: any = docDefComponent.getFieldDetailComponentPosition(parentField);\n      if (fieldPos != null) {\n        return fieldPos;\n      }\n      parentField = parentField.parentField;\n    }\n    return null;\n  }\n\n  private checkFieldEligibiltyForLineDrawing(field: Field, description: string, m: MappingModel): boolean {\n    if (!field) {\n      return false;\n    }\n    if (!field.visibleInCurrentDocumentSearch) {\n      return false;\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LookupTable.html":{"url":"classes/LookupTable.html","title":"class - LookupTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LookupTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                name\n                            \n                            \n                                sourceIdentifier\n                            \n                            \n                                targetIdentifier\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEntryForSource\n                            \n                            \n                                getInputOutputKey\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:44\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LookupTableEntry[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceIdentifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetIdentifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:44\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEntryForSource\n                        \n                        \n                    \n                \n            \n            \n                \ngetEntryForSource(sourceValue: string, autocreate: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    autocreate\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LookupTableEntry\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInputOutputKey\n                        \n                        \n                    \n                \n            \n            \n                \ngetInputOutputKey()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class LookupTableEntry {\n  sourceValue: string;\n  sourceType = 'STRING';\n  targetValue: string;\n  targetType = 'STRING';\n\n  toJSON(): any {\n    return {\n      'sourceValue': this.sourceValue,\n      'sourceType': this.sourceType,\n      'targetValue': this.targetValue,\n      'targetType': this.targetType,\n    };\n  }\n\n  fromJSON(json: any): void {\n    this.sourceValue = json.sourceValue;\n    this.sourceType = json.sourceType;\n    this.targetValue = json.targetValue;\n    this.targetType = json.targetType;\n  }\n}\n\nexport class LookupTable {\n  name: string;\n  entries: LookupTableEntry[] = [];\n  sourceIdentifier: string;\n  targetIdentifier: string;\n\n  constructor() {\n    this.name = (new Date().getTime() + '-' + Math.floor(Math.random() * 1000000).toString());\n  }\n\n  getInputOutputKey(): string {\n    return this.sourceIdentifier + ':' + this.targetIdentifier;\n  }\n\n  getEntryForSource(sourceValue: string, autocreate: boolean): LookupTableEntry {\n    for (const entry of this.entries) {\n      if (entry.sourceValue === sourceValue) {\n        return entry;\n      }\n    }\n    if (autocreate) {\n      const entry: LookupTableEntry = new LookupTableEntry();\n      entry.sourceValue = sourceValue;\n      this.entries.push(entry);\n      return entry;\n    }\n    return null;\n  }\n\n  toString() {\n    let result: string = 'Lookup Table, name: ' + this.name + ', entries: ' + this.entries.length;\n    result += '\\n\\sourceIdentifier: ' + this.sourceIdentifier;\n    result += '\\n\\targetIdentifier: ' + this.targetIdentifier;\n    let counter = 0;\n    for (const entry of this.entries) {\n      result += '\\n\\tEntry #' + counter + ': ' + entry.sourceValue + ' => ' + entry.targetValue;\n      counter += 1;\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LookupTableComponent.html":{"url":"components/LookupTableComponent.html","title":"component - LookupTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LookupTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lookup-table\n            \n\n\n\n\n            \n                templateUrl\n                ./lookup-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                mapping\n                            \n                            \n                                outputSelects\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                saveTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(cfg: ConfigModel, mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveTable\n                        \n                        \n                    \n                \n            \n            \n                \nsaveTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LookupTableData[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            outputSelects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('outputSelect')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            table\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LookupTable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChildren, ElementRef, QueryList } from '@angular/core';\n\nimport { LookupTable, LookupTableEntry } from '../../models/lookup-table.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\nimport { MappingModel } from '../../models/mapping.model';\nimport { ModalWindowValidator } from '../modal/modal-window.component';\nimport { ErrorScope, ErrorType, ErrorInfo } from '../../models/error.model';\n\nexport class LookupTableData {\n  sourceEnumValue: string;\n  targetEnumValues: string[];\n  selectedTargetEnumValue: string;\n}\n\n@Component({\n  selector: 'lookup-table',\n  templateUrl: './lookup-table.component.html',\n})\n\nexport class LookupTableComponent implements ModalWindowValidator {\n  mapping: MappingModel;\n\n  table: LookupTable;\n  data: LookupTableData[];\n\n  @ViewChildren('outputSelect') outputSelects: QueryList;\n\n  initialize(cfg: ConfigModel, mapping: MappingModel): void {\n    this.mapping = mapping;\n\n    const targetField: Field = mapping.getFields(false)[0];\n    const targetValues: string[] = [];\n    targetValues.push('[ None ]');\n    for (const e of targetField.enumValues) {\n      targetValues.push(e.name);\n    }\n\n    this.table = cfg.mappings.getTableByName(mapping.transition.lookupTableName);\n    if (this.table == null) {\n      cfg.errorService.addError(new ErrorInfo({message: 'Could not find enum lookup table for mapping.',\n        scope: ErrorScope.MAPPING, type: ErrorType.INTERNAL, mapping: mapping}));\n    }\n\n    const d: LookupTableData[] = [];\n    const sourceField: Field = mapping.getFields(true)[0];\n    for (const e of sourceField.enumValues) {\n      const tableData: LookupTableData = new LookupTableData();\n      tableData.sourceEnumValue = e.name;\n      tableData.targetEnumValues = [].concat(targetValues);\n      const selected: LookupTableEntry = this.table.getEntryForSource(tableData.sourceEnumValue, false);\n      tableData.selectedTargetEnumValue = (selected == null) ? '[ None ]' : selected.targetValue;\n      d.push(tableData);\n    }\n    this.data = d;\n  }\n\n  isDataValid() {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n  saveTable(): void {\n    this.table.entries = [];\n    for (const c of this.outputSelects.toArray()) {\n      const selectedOptions: any[] = c.nativeElement.selectedOptions;\n      if (selectedOptions && selectedOptions.length) {\n        const targetValue: string = selectedOptions[0].label;\n        if (targetValue === '[ None ]') {\n          continue;\n        }\n        const e: LookupTableEntry = new LookupTableEntry();\n        e.sourceValue = c.nativeElement.attributes['sourceValue'].value;\n        e.targetValue = targetValue;\n        this.table.entries.push(e);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{ d.sourceEnumValue }}\n    \n      {{ targetEnumValue }}\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ d.sourceEnumValue }}          {{ targetEnumValue }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'LookupTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LookupTableData.html":{"url":"classes/LookupTableData.html","title":"class - LookupTableData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LookupTableData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedTargetEnumValue\n                            \n                            \n                                sourceEnumValue\n                            \n                            \n                                targetEnumValues\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTargetEnumValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceEnumValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetEnumValues\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, ViewChildren, ElementRef, QueryList } from '@angular/core';\n\nimport { LookupTable, LookupTableEntry } from '../../models/lookup-table.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\nimport { MappingModel } from '../../models/mapping.model';\nimport { ModalWindowValidator } from '../modal/modal-window.component';\nimport { ErrorScope, ErrorType, ErrorInfo } from '../../models/error.model';\n\nexport class LookupTableData {\n  sourceEnumValue: string;\n  targetEnumValues: string[];\n  selectedTargetEnumValue: string;\n}\n\n@Component({\n  selector: 'lookup-table',\n  templateUrl: './lookup-table.component.html',\n})\n\nexport class LookupTableComponent implements ModalWindowValidator {\n  mapping: MappingModel;\n\n  table: LookupTable;\n  data: LookupTableData[];\n\n  @ViewChildren('outputSelect') outputSelects: QueryList;\n\n  initialize(cfg: ConfigModel, mapping: MappingModel): void {\n    this.mapping = mapping;\n\n    const targetField: Field = mapping.getFields(false)[0];\n    const targetValues: string[] = [];\n    targetValues.push('[ None ]');\n    for (const e of targetField.enumValues) {\n      targetValues.push(e.name);\n    }\n\n    this.table = cfg.mappings.getTableByName(mapping.transition.lookupTableName);\n    if (this.table == null) {\n      cfg.errorService.addError(new ErrorInfo({message: 'Could not find enum lookup table for mapping.',\n        scope: ErrorScope.MAPPING, type: ErrorType.INTERNAL, mapping: mapping}));\n    }\n\n    const d: LookupTableData[] = [];\n    const sourceField: Field = mapping.getFields(true)[0];\n    for (const e of sourceField.enumValues) {\n      const tableData: LookupTableData = new LookupTableData();\n      tableData.sourceEnumValue = e.name;\n      tableData.targetEnumValues = [].concat(targetValues);\n      const selected: LookupTableEntry = this.table.getEntryForSource(tableData.sourceEnumValue, false);\n      tableData.selectedTargetEnumValue = (selected == null) ? '[ None ]' : selected.targetValue;\n      d.push(tableData);\n    }\n    this.data = d;\n  }\n\n  isDataValid() {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n  saveTable(): void {\n    this.table.entries = [];\n    for (const c of this.outputSelects.toArray()) {\n      const selectedOptions: any[] = c.nativeElement.selectedOptions;\n      if (selectedOptions && selectedOptions.length) {\n        const targetValue: string = selectedOptions[0].label;\n        if (targetValue === '[ None ]') {\n          continue;\n        }\n        const e: LookupTableEntry = new LookupTableEntry();\n        e.sourceValue = c.nativeElement.attributes['sourceValue'].value;\n        e.targetValue = targetValue;\n        this.table.entries.push(e);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LookupTableEntry.html":{"url":"classes/LookupTableEntry.html","title":"class - LookupTableEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LookupTableEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sourceType\n                            \n                            \n                                sourceValue\n                            \n                            \n                                targetType\n                            \n                            \n                                targetValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fromJSON\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fromJSON\n                        \n                        \n                    \n                \n            \n            \n                \nfromJSON(json: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    json\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class LookupTableEntry {\n  sourceValue: string;\n  sourceType = 'STRING';\n  targetValue: string;\n  targetType = 'STRING';\n\n  toJSON(): any {\n    return {\n      'sourceValue': this.sourceValue,\n      'sourceType': this.sourceType,\n      'targetValue': this.targetValue,\n      'targetType': this.targetType,\n    };\n  }\n\n  fromJSON(json: any): void {\n    this.sourceValue = json.sourceValue;\n    this.sourceType = json.sourceType;\n    this.targetValue = json.targetValue;\n    this.targetType = json.targetType;\n  }\n}\n\nexport class LookupTable {\n  name: string;\n  entries: LookupTableEntry[] = [];\n  sourceIdentifier: string;\n  targetIdentifier: string;\n\n  constructor() {\n    this.name = (new Date().getTime() + '-' + Math.floor(Math.random() * 1000000).toString());\n  }\n\n  getInputOutputKey(): string {\n    return this.sourceIdentifier + ':' + this.targetIdentifier;\n  }\n\n  getEntryForSource(sourceValue: string, autocreate: boolean): LookupTableEntry {\n    for (const entry of this.entries) {\n      if (entry.sourceValue === sourceValue) {\n        return entry;\n      }\n    }\n    if (autocreate) {\n      const entry: LookupTableEntry = new LookupTableEntry();\n      entry.sourceValue = sourceValue;\n      this.entries.push(entry);\n      return entry;\n    }\n    return null;\n  }\n\n  toString() {\n    let result: string = 'Lookup Table, name: ' + this.name + ', entries: ' + this.entries.length;\n    result += '\\n\\sourceIdentifier: ' + this.sourceIdentifier;\n    result += '\\n\\targetIdentifier: ' + this.targetIdentifier;\n    let counter = 0;\n    for (const entry of this.entries) {\n      result += '\\n\\tEntry #' + counter + ': ' + entry.sourceValue + ' => ' + entry.targetValue;\n      counter += 1;\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LookupTableUtil.html":{"url":"classes/LookupTableUtil.html","title":"class - LookupTableUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LookupTableUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/utils/lookup-table-util.ts\n        \n\n            \n                Description\n            \n            \n                Static routines for handling LookupTable.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getFirstMappingForLookupTable\n                            \n                            \n                                    Static\n                                populateMappingLookupTable\n                            \n                            \n                                    Static\n                                updateLookupTables\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getFirstMappingForLookupTable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirstMappingForLookupTable(mappingDefinition: MappingDefinition, lookupTableName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/lookup-table-util.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappingDefinition\n                                    \n                                                MappingDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lookupTableName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MappingModel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            populateMappingLookupTable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    populateMappingLookupTable(mappingDefinition: MappingDefinition, m: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/lookup-table-util.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappingDefinition\n                                    \n                                                MappingDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    m\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateLookupTables\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLookupTables(mappingDefinition: MappingDefinition)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/lookup-table-util.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappingDefinition\n                                    \n                                                MappingDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MappingModel } from '../models/mapping.model';\nimport { TransitionMode } from '../models/transition.model';\nimport { Field } from '../models/field.model';\nimport { LookupTable } from '../models/lookup-table.model';\nimport { MappingDefinition } from '../models/mapping-definition.model';\n\n/**\n * Static routines for handling LookupTable.\n */\nexport class LookupTableUtil {\n\n  static populateMappingLookupTable(mappingDefinition: MappingDefinition, m: MappingModel): void {\n    if (!(m.transition.mode === TransitionMode.ENUM\n      && m.transition.lookupTableName == null\n      && m.getFields(true).length === 1\n      && m.getFields(false).length === 1)) {\n      return;\n    }\n    let inputClassIdentifier: string = null;\n    let outputClassIdentifier: string = null;\n\n    const inputField: Field = m.getFields(true)[0];\n    if (inputField) {\n      inputClassIdentifier = inputField.classIdentifier;\n    }\n    const outputField: Field = m.getFields(true)[0];\n    if (outputField) {\n      outputClassIdentifier = outputField.classIdentifier;\n    }\n    if (inputClassIdentifier && outputClassIdentifier) {\n      let table: LookupTable = mappingDefinition.getTableBySourceTarget(inputClassIdentifier, outputClassIdentifier);\n      if (table == null) {\n        table = new LookupTable();\n        table.sourceIdentifier = inputClassIdentifier;\n        table.targetIdentifier = outputClassIdentifier;\n        mappingDefinition.addTable(table);\n        m.transition.lookupTableName = table.name;\n      } else {\n        m.transition.lookupTableName = table.name;\n      }\n    }\n  }\n\n  static updateLookupTables(mappingDefinition: MappingDefinition) {\n    for (const t of mappingDefinition.getTables()) {\n      if (t.sourceIdentifier && t.targetIdentifier) {\n        continue;\n      }\n      const m: MappingModel = LookupTableUtil.getFirstMappingForLookupTable(mappingDefinition, t.name);\n      if (m != null && m.transition.lookupTableName != null) {\n        if (!t.sourceIdentifier) {\n          const inputField: Field = m.getFields(true)[0];\n          if (inputField) {\n            t.sourceIdentifier = inputField.classIdentifier;\n          }\n        }\n        if (!t.targetIdentifier) {\n          const outputField: Field = m.getFields(false)[0];\n          if (outputField) {\n            t.targetIdentifier = outputField.classIdentifier;\n          }\n        }\n      }\n    }\n    for (const m of mappingDefinition.mappings) {\n      LookupTableUtil.populateMappingLookupTable(mappingDefinition, m);\n    }\n  }\n\n  private static getFirstMappingForLookupTable(mappingDefinition: MappingDefinition, lookupTableName: string): MappingModel {\n    for (const m of mappingDefinition.mappings) {\n      if (m.transition.lookupTableName === lookupTableName) {\n        return m;\n      }\n    }\n    return null;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MappedField.html":{"url":"classes/MappedField.html","title":"class - MappedField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MappedField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                field\n                            \n                            \n                                parsedData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isPadField\n                            \n                            \n                                isSource\n                            \n                            \n                                removeAction\n                            \n                            \n                                    Static\n                                sortMappedFieldsByPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldAction[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappedFieldParsingData\n\n                        \n                    \n                    \n                        \n                            Default value : new MappedFieldParsingData()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:39\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPadField\n                        \n                        \n                    \n                \n            \n            \n                \nisPadField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSource\n                        \n                        \n                    \n                \n            \n            \n                \nisSource()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeAction\n                        \n                        \n                    \n                \n            \n            \n                \nremoveAction(action: FieldAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            sortMappedFieldsByPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sortMappedFieldsByPath(mappedFields: MappedField[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappedFields\n                                    \n                                            MappedField[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MappedField[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { Field } from './field.model';\nimport { TransitionModel } from './transition.model';\n\nimport { DataMapperUtil } from '../common/data-mapper-util';\nimport { FieldAction } from './field-action.model';\nimport { PaddingField } from './document-definition.model';\n\nexport class MappedFieldParsingData {\n  parsedName: string = null;\n  parsedPath: string = null;\n  parsedValue: string = null;\n  parsedDocID: string = null;\n  parsedDocURI: string = null;\n  parsedIndex: string = null;\n  fieldIsProperty = false;\n  fieldIsConstant = false;\n  parsedValueType: string = null;\n  parsedActions: FieldAction[] = [];\n  userCreated = false;\n}\n\nexport class MappedField {\n  parsedData: MappedFieldParsingData = new MappedFieldParsingData();\n  field: Field;\n  actions: FieldAction[] = [];\n\n  static sortMappedFieldsByPath(mappedFields: MappedField[]): MappedField[] {\n    if (mappedFields == null || mappedFields.length === 0) {\n      return [];\n    }\n    const fieldsByPath: { [key: string]: MappedField; } = {};\n    const fieldPaths: string[] = [];\n    for (const mappedField of mappedFields) {\n      if (mappedField == null || mappedField.field == null) {\n        continue;\n      }\n      const path: string = mappedField.field.path;\n      fieldsByPath[path] = mappedField;\n      fieldPaths.push(path);\n    }\n    fieldPaths.sort();\n    const result: MappedField[] = [];\n    for (const name of fieldPaths) {\n      result.push(fieldsByPath[name]);\n    }\n    return result;\n  }\n\n  isPadField(): boolean {\n    return this.field instanceof PaddingField;\n  }\n\n  isSource(): boolean {\n    return this.field.isSource();\n  }\n\n  removeAction(action: FieldAction): void {\n    DataMapperUtil.removeItemFromArray(action, this.actions);\n  }\n\n}\n\nexport class MappingModel {\n  cfg: ConfigModel;\n  uuid: string;\n\n  sourceFields: MappedField[] = [];\n  targetFields: MappedField[] = [];\n  transition: TransitionModel = new TransitionModel();\n\n  constructor() {\n    this.uuid = 'mapping.' + Math.floor((Math.random() * 1000000) + 1).toString();\n    this.cfg = ConfigModel.getConfig();\n  }\n\n  getFirstCollectionField(isSource: boolean): Field {\n    for (const f of isSource ? this.sourceFields : this.targetFields) {\n      if (f.field.isInCollection()) {\n        return f.field;\n      }\n    }\n    return null;\n  }\n\n  isLookupMode(): boolean {\n    for (const f of this.sourceFields.concat(this.targetFields)) {\n      if (f.field.enumeration) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Add the specified field to this field mapping.\n   *\n   * @param field - field to add to the mapping\n   * @param first - if true add the field to the beginning of the array, last otherwise.\n   */\n  addField(field: Field, first: boolean): MappedField {\n    const mappedField: MappedField = new MappedField();\n    mappedField.field = field;\n    if (first) {\n      this.getMappedFields(field.isSource()).unshift(mappedField);\n    } else {\n      this.getMappedFields(field.isSource()).push(mappedField);\n    }\n    return mappedField;\n  }\n\n  /**\n   * Remove the specified field from this field mapping.\n   *\n   * @param field\n   */\n  removeField(field: Field) {\n    const mappedFields = this.getMappedFields(field.isSource());\n    DataMapperUtil.removeItemFromArray(mappedFields.find(mf => mf.field === field), mappedFields);\n  }\n\n  /**\n   * Return the number of user-defined (non-padding) fields in this mapping.\n   *\n   * @param field\n   */\n  getUserFieldCount(field: Field): number {\n    const mappedFields = this.getMappedFields(field.isSource());\n    let userFieldCount = 0;\n\n    for (const mappedField of mappedFields) {\n      if (!mappedField.isPadField()) {\n        userFieldCount++;\n      }\n    }\n    return userFieldCount;\n  }\n\n  hasMappedField(isSource: boolean) {\n    return isSource ? this.sourceFields.length > 0 : this.targetFields.length > 0;\n  }\n\n  isEmpty() {\n    return this.sourceFields.length === 0 && this.targetFields.length === 0;\n  }\n\n  isFullyMapped(): boolean {\n    return this.sourceFields.length > 0 && this.targetFields.length > 0;\n  }\n\n  addMappedField(mappedField: MappedField, isSource: boolean): void {\n    this.getMappedFields(isSource).push(mappedField);\n  }\n\n  removeMappedField(mappedField: MappedField): void {\n    DataMapperUtil.removeItemFromArray(mappedField, this.getMappedFields(mappedField.field.isSource()));\n  }\n\n  getMappedFieldForField(field: Field): MappedField {\n    for (const mappedField of this.getMappedFields(field.isSource())) {\n      if (mappedField.field === field) {\n        return mappedField;\n      }\n    }\n    return null;\n  }\n\n  getMappedFieldForIndex(index: string, isSource: boolean): MappedField {\n    if (!index) {\n      return null;\n    }\n    const mappedFields = this.getMappedFields(isSource);\n    if (+index - 1 > mappedFields.length - 1) {\n      return null;\n    }\n    return mappedFields[+index - 1];\n  }\n\n  getIndexForMappedField(mappedField: MappedField): number {\n    if (!mappedField || !mappedField.field) {\n      return null;\n    }\n    return this.getMappedFields(mappedField.field.isSource()).indexOf(mappedField) + 1;\n  }\n\n  /**\n   * Return an array of user mapped fields for the specified panel in this field pair instance.  No\n   * data-mapper generated padding fields will be included.\n   *\n   * @param isSource - true source panel, false target panel\n   */\n  getUserMappedFields(isSource: boolean): MappedField[] {\n    const workingFields = isSource ? this.sourceFields : this.targetFields;\n    const resultFields: MappedField[] = [new MappedField()];\n\n    for (const mappedField of workingFields) {\n      if (!mappedField.isPadField()) {\n        resultFields.push(mappedField);\n      }\n    }\n    resultFields.shift();\n    return resultFields;\n  }\n\n  getMappedFields(isSource: boolean): MappedField[] {\n    return isSource ? this.sourceFields : this.targetFields;\n  }\n\n  getLastMappedField(isSource: boolean): MappedField {\n    const fields: MappedField[] = this.getMappedFields(isSource);\n    if ((fields != null) && (fields.length > 0)) {\n      return fields[fields.length - 1];\n    }\n    return null;\n  }\n\n  getFields(isSource: boolean): Field[] {\n    const fields: Field[] = [];\n    for (const mappedField of this.getMappedFields(isSource)) {\n      if (mappedField.field != null) {\n        fields.push(mappedField.field);\n      }\n    }\n    return fields;\n  }\n\n  getFieldNames(isSource: boolean): string[] {\n    const fields: Field[] = this.getFields(isSource);\n    Field.alphabetizeFields(fields);\n    const names: string[] = [];\n    for (const field of fields) {\n      names.push(field.name);\n    }\n    return names;\n  }\n\n  getFieldPaths(isSource: boolean): string[] {\n    const fields: Field[] = this.getFields(isSource);\n    Field.alphabetizeFields(fields);\n    const paths: string[] = [];\n    for (const field of fields) {\n      paths.push(field.path);\n    }\n    return paths;\n  }\n\n  hasFieldActions(): boolean {\n    for (const mappedField of this.getAllMappedFields()) {\n      if (mappedField.actions.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getAllFields(): Field[] {\n    return this.getFields(true).concat(this.getFields(false));\n  }\n\n  getAllMappedFields(): MappedField[] {\n    return this.getMappedFields(true).concat(this.getMappedFields(false));\n  }\n\n  isFieldMapped(field: Field): boolean {\n    return this.getMappedFieldForField(field) != null;\n  }\n\n  hasTransformation(): boolean {\n    const mappedFields: MappedField[] = this.getAllMappedFields();\n    for (const mappedField of mappedFields) {\n      if (mappedField.actions.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Walk all target field mappings and return one of corresponding source field name\n   * if the specified field is already the target of a previous mapping, null otherwise.\n   *\n   * @param field\n   */\n  public getMappedTarget(field: Field): string {\n    const mappings: MappingModel[] = this.cfg.mappings.mappings;\n\n    if (field.isSource()) {\n      return null;\n    }\n    for (const m of mappings) {\n      if (m.targetFields.length === 0) {\n        continue;\n      }\n\n      for (const mappedOutputField of m.targetFields) {\n        if (mappedOutputField.field.docDef === field.docDef\n          && mappedOutputField.field.path === field.path) {\n          if (m.isFieldMapped(field)) {\n            return m.sourceFields[0].field.name;\n          }\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MappedFieldParsingData.html":{"url":"classes/MappedFieldParsingData.html","title":"class - MappedFieldParsingData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MappedFieldParsingData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fieldIsConstant\n                            \n                            \n                                fieldIsProperty\n                            \n                            \n                                parsedActions\n                            \n                            \n                                parsedDocID\n                            \n                            \n                                parsedDocURI\n                            \n                            \n                                parsedIndex\n                            \n                            \n                                parsedName\n                            \n                            \n                                parsedPath\n                            \n                            \n                                parsedValue\n                            \n                            \n                                parsedValueType\n                            \n                            \n                                userCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldIsConstant\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldIsProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldAction[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedDocID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedDocURI\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedValueType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userCreated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping.model.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { Field } from './field.model';\nimport { TransitionModel } from './transition.model';\n\nimport { DataMapperUtil } from '../common/data-mapper-util';\nimport { FieldAction } from './field-action.model';\nimport { PaddingField } from './document-definition.model';\n\nexport class MappedFieldParsingData {\n  parsedName: string = null;\n  parsedPath: string = null;\n  parsedValue: string = null;\n  parsedDocID: string = null;\n  parsedDocURI: string = null;\n  parsedIndex: string = null;\n  fieldIsProperty = false;\n  fieldIsConstant = false;\n  parsedValueType: string = null;\n  parsedActions: FieldAction[] = [];\n  userCreated = false;\n}\n\nexport class MappedField {\n  parsedData: MappedFieldParsingData = new MappedFieldParsingData();\n  field: Field;\n  actions: FieldAction[] = [];\n\n  static sortMappedFieldsByPath(mappedFields: MappedField[]): MappedField[] {\n    if (mappedFields == null || mappedFields.length === 0) {\n      return [];\n    }\n    const fieldsByPath: { [key: string]: MappedField; } = {};\n    const fieldPaths: string[] = [];\n    for (const mappedField of mappedFields) {\n      if (mappedField == null || mappedField.field == null) {\n        continue;\n      }\n      const path: string = mappedField.field.path;\n      fieldsByPath[path] = mappedField;\n      fieldPaths.push(path);\n    }\n    fieldPaths.sort();\n    const result: MappedField[] = [];\n    for (const name of fieldPaths) {\n      result.push(fieldsByPath[name]);\n    }\n    return result;\n  }\n\n  isPadField(): boolean {\n    return this.field instanceof PaddingField;\n  }\n\n  isSource(): boolean {\n    return this.field.isSource();\n  }\n\n  removeAction(action: FieldAction): void {\n    DataMapperUtil.removeItemFromArray(action, this.actions);\n  }\n\n}\n\nexport class MappingModel {\n  cfg: ConfigModel;\n  uuid: string;\n\n  sourceFields: MappedField[] = [];\n  targetFields: MappedField[] = [];\n  transition: TransitionModel = new TransitionModel();\n\n  constructor() {\n    this.uuid = 'mapping.' + Math.floor((Math.random() * 1000000) + 1).toString();\n    this.cfg = ConfigModel.getConfig();\n  }\n\n  getFirstCollectionField(isSource: boolean): Field {\n    for (const f of isSource ? this.sourceFields : this.targetFields) {\n      if (f.field.isInCollection()) {\n        return f.field;\n      }\n    }\n    return null;\n  }\n\n  isLookupMode(): boolean {\n    for (const f of this.sourceFields.concat(this.targetFields)) {\n      if (f.field.enumeration) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Add the specified field to this field mapping.\n   *\n   * @param field - field to add to the mapping\n   * @param first - if true add the field to the beginning of the array, last otherwise.\n   */\n  addField(field: Field, first: boolean): MappedField {\n    const mappedField: MappedField = new MappedField();\n    mappedField.field = field;\n    if (first) {\n      this.getMappedFields(field.isSource()).unshift(mappedField);\n    } else {\n      this.getMappedFields(field.isSource()).push(mappedField);\n    }\n    return mappedField;\n  }\n\n  /**\n   * Remove the specified field from this field mapping.\n   *\n   * @param field\n   */\n  removeField(field: Field) {\n    const mappedFields = this.getMappedFields(field.isSource());\n    DataMapperUtil.removeItemFromArray(mappedFields.find(mf => mf.field === field), mappedFields);\n  }\n\n  /**\n   * Return the number of user-defined (non-padding) fields in this mapping.\n   *\n   * @param field\n   */\n  getUserFieldCount(field: Field): number {\n    const mappedFields = this.getMappedFields(field.isSource());\n    let userFieldCount = 0;\n\n    for (const mappedField of mappedFields) {\n      if (!mappedField.isPadField()) {\n        userFieldCount++;\n      }\n    }\n    return userFieldCount;\n  }\n\n  hasMappedField(isSource: boolean) {\n    return isSource ? this.sourceFields.length > 0 : this.targetFields.length > 0;\n  }\n\n  isEmpty() {\n    return this.sourceFields.length === 0 && this.targetFields.length === 0;\n  }\n\n  isFullyMapped(): boolean {\n    return this.sourceFields.length > 0 && this.targetFields.length > 0;\n  }\n\n  addMappedField(mappedField: MappedField, isSource: boolean): void {\n    this.getMappedFields(isSource).push(mappedField);\n  }\n\n  removeMappedField(mappedField: MappedField): void {\n    DataMapperUtil.removeItemFromArray(mappedField, this.getMappedFields(mappedField.field.isSource()));\n  }\n\n  getMappedFieldForField(field: Field): MappedField {\n    for (const mappedField of this.getMappedFields(field.isSource())) {\n      if (mappedField.field === field) {\n        return mappedField;\n      }\n    }\n    return null;\n  }\n\n  getMappedFieldForIndex(index: string, isSource: boolean): MappedField {\n    if (!index) {\n      return null;\n    }\n    const mappedFields = this.getMappedFields(isSource);\n    if (+index - 1 > mappedFields.length - 1) {\n      return null;\n    }\n    return mappedFields[+index - 1];\n  }\n\n  getIndexForMappedField(mappedField: MappedField): number {\n    if (!mappedField || !mappedField.field) {\n      return null;\n    }\n    return this.getMappedFields(mappedField.field.isSource()).indexOf(mappedField) + 1;\n  }\n\n  /**\n   * Return an array of user mapped fields for the specified panel in this field pair instance.  No\n   * data-mapper generated padding fields will be included.\n   *\n   * @param isSource - true source panel, false target panel\n   */\n  getUserMappedFields(isSource: boolean): MappedField[] {\n    const workingFields = isSource ? this.sourceFields : this.targetFields;\n    const resultFields: MappedField[] = [new MappedField()];\n\n    for (const mappedField of workingFields) {\n      if (!mappedField.isPadField()) {\n        resultFields.push(mappedField);\n      }\n    }\n    resultFields.shift();\n    return resultFields;\n  }\n\n  getMappedFields(isSource: boolean): MappedField[] {\n    return isSource ? this.sourceFields : this.targetFields;\n  }\n\n  getLastMappedField(isSource: boolean): MappedField {\n    const fields: MappedField[] = this.getMappedFields(isSource);\n    if ((fields != null) && (fields.length > 0)) {\n      return fields[fields.length - 1];\n    }\n    return null;\n  }\n\n  getFields(isSource: boolean): Field[] {\n    const fields: Field[] = [];\n    for (const mappedField of this.getMappedFields(isSource)) {\n      if (mappedField.field != null) {\n        fields.push(mappedField.field);\n      }\n    }\n    return fields;\n  }\n\n  getFieldNames(isSource: boolean): string[] {\n    const fields: Field[] = this.getFields(isSource);\n    Field.alphabetizeFields(fields);\n    const names: string[] = [];\n    for (const field of fields) {\n      names.push(field.name);\n    }\n    return names;\n  }\n\n  getFieldPaths(isSource: boolean): string[] {\n    const fields: Field[] = this.getFields(isSource);\n    Field.alphabetizeFields(fields);\n    const paths: string[] = [];\n    for (const field of fields) {\n      paths.push(field.path);\n    }\n    return paths;\n  }\n\n  hasFieldActions(): boolean {\n    for (const mappedField of this.getAllMappedFields()) {\n      if (mappedField.actions.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getAllFields(): Field[] {\n    return this.getFields(true).concat(this.getFields(false));\n  }\n\n  getAllMappedFields(): MappedField[] {\n    return this.getMappedFields(true).concat(this.getMappedFields(false));\n  }\n\n  isFieldMapped(field: Field): boolean {\n    return this.getMappedFieldForField(field) != null;\n  }\n\n  hasTransformation(): boolean {\n    const mappedFields: MappedField[] = this.getAllMappedFields();\n    for (const mappedField of mappedFields) {\n      if (mappedField.actions.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Walk all target field mappings and return one of corresponding source field name\n   * if the specified field is already the target of a previous mapping, null otherwise.\n   *\n   * @param field\n   */\n  public getMappedTarget(field: Field): string {\n    const mappings: MappingModel[] = this.cfg.mappings.mappings;\n\n    if (field.isSource()) {\n      return null;\n    }\n    for (const m of mappings) {\n      if (m.targetFields.length === 0) {\n        continue;\n      }\n\n      for (const mappedOutputField of m.targetFields) {\n        if (mappedOutputField.field.docDef === field.docDef\n          && mappedOutputField.field.path === field.path) {\n          if (m.isFieldMapped(field)) {\n            return m.sourceFields[0].field.name;\n          }\n        }\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MappingDefinition.html":{"url":"classes/MappingDefinition.html","title":"class - MappingDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MappingDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeMapping\n                            \n                            \n                                mappings\n                            \n                            \n                                name\n                            \n                            \n                                parsedDocs\n                            \n                            \n                                    Private\n                                tables\n                            \n                            \n                                    Private\n                                tablesByName\n                            \n                            \n                                    Private\n                                tablesBySourceTargetKey\n                            \n                            \n                                templateText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTable\n                            \n                            \n                                findMappingsForField\n                            \n                            \n                                getAllMappings\n                            \n                            \n                                getTableByName\n                            \n                            \n                                getTableBySourceTarget\n                            \n                            \n                                getTables\n                            \n                            \n                                removeMapping\n                            \n                            \n                                removeTableByName\n                            \n                            \n                                templateExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeMapping\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsedDocs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LookupTable[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tablesByName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tablesBySourceTargetKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templateText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:29\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTable\n                        \n                        \n                    \n                \n            \n            \n                \naddTable(table: LookupTable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                LookupTable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findMappingsForField\n                        \n                        \n                    \n                \n            \n            \n                \nfindMappingsForField(field: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MappingModel[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllMappings\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllMappings(includeActiveMapping: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    includeActiveMapping\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MappingModel[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTableByName\n                        \n                        \n                    \n                \n            \n            \n                \ngetTableByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LookupTable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTableBySourceTarget\n                        \n                        \n                    \n                \n            \n            \n                \ngetTableBySourceTarget(sourceIdentifier: string, targetIdentifier: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sourceIdentifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetIdentifier\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LookupTable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTables\n                        \n                        \n                    \n                \n            \n            \n                \ngetTables()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         LookupTable[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMapping\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMapping(m: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    m\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeTableByName\n                        \n                        \n                    \n                \n            \n            \n                \nremoveTableByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            templateExists\n                        \n                        \n                    \n                \n            \n            \n                \ntemplateExists()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MappingModel } from './mapping.model';\nimport { LookupTable } from '../models/lookup-table.model';\nimport { Field } from '../models/field.model';\nimport { DocumentDefinition } from '../models/document-definition.model';\n\nimport { DataMapperUtil } from '../common/data-mapper-util';\n\nexport class MappingDefinition {\n  name: string = null;\n  mappings: MappingModel[] = [];\n  activeMapping: MappingModel = null;\n  parsedDocs: DocumentDefinition[] = [];\n  templateText: string = null;\n\n  private tables: LookupTable[] = [];\n  private tablesBySourceTargetKey: { [key: string]: LookupTable; } = {};\n  private tablesByName: { [key: string]: LookupTable; } = {};\n\n  constructor() {\n    this.name = 'UI.' + Math.floor((Math.random() * 1000000) + 1).toString();\n  }\n\n  templateExists(): boolean {\n    return ((this.templateText != null) && (this.templateText !== ''));\n  }\n\n  addTable(table: LookupTable): void {\n    this.tablesBySourceTargetKey[table.getInputOutputKey()] = table;\n    this.tablesByName[table.name] = table;\n    this.tables.push(table);\n  }\n\n  getTableByName(name: string): LookupTable {\n    return this.tablesByName[name];\n  }\n\n  getTableBySourceTarget(sourceIdentifier: string, targetIdentifier: string): LookupTable {\n    const key: string = sourceIdentifier + ':' + targetIdentifier;\n    return this.tablesBySourceTargetKey[key];\n  }\n\n  getTables(): LookupTable[] {\n    const tables: LookupTable[] = [];\n    for (const key in this.tablesByName) {\n      if (!this.tablesByName.hasOwnProperty(key)) {\n        continue;\n      }\n      const table: LookupTable = this.tablesByName[key];\n      tables.push(table);\n    }\n    return tables;\n  }\n\n  removeTableByName(name: string) {\n    if (name) {\n      const table = this.tablesByName[name];\n      const iokey = table.getInputOutputKey();\n      if (this.tablesByName[name]) {\n        delete this.tables[this.tables.indexOf(table)];\n        delete this.tablesByName[name];\n        delete this.tablesBySourceTargetKey[iokey];\n      }\n    }\n  }\n\n  getAllMappings(includeActiveMapping: boolean): MappingModel[] {\n    const mappings: MappingModel[] = [].concat(this.mappings);\n    if (includeActiveMapping) {\n      if (this.activeMapping == null) {\n        return mappings;\n      }\n      for (const mapping of mappings) {\n        if (mapping === this.activeMapping) {\n          return mappings;\n        }\n      }\n      mappings.push(this.activeMapping);\n    }\n    return mappings;\n  }\n\n  findMappingsForField(field: Field): MappingModel[] {\n    const mappingsForField: MappingModel[] = [];\n    for (const m of this.mappings) {\n      if (m.isFieldMapped(field)) {\n        mappingsForField.push(m);\n      }\n    }\n    return mappingsForField;\n  }\n\n  removeMapping(m: MappingModel): boolean {\n    return DataMapperUtil.removeItemFromArray(m, this.mappings);\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingDetailComponent.html":{"url":"components/MappingDetailComponent.html","title":"component - MappingDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                mappingSelectionRequiredSubscription\n                            \n                            \n                                sourcesHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitle\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeMapping\n                            \n                            \n                                    Private\n                                selectMapping\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMapping\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMapping(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            selectMapping\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectMapping(field: Field)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mappingSelectionRequiredSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourcesHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CollapsableHeaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('sourcesHeader')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnDestroy, ViewChild } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\nimport { MappingModel } from '../../models/mapping.model';\n\nimport { CollapsableHeaderComponent } from '../mapping-detail/collapsable-header.component';\n\nimport { ModalWindowComponent } from '../modal/modal-window.component';\nimport { MappingSelectionComponent } from '../mapping-detail/mapping-selection.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'mapping-detail',\n  templateUrl: './mapping-detail.component.html',\n})\n\nexport class MappingDetailComponent implements OnInit, OnDestroy {\n  @Input() cfg: ConfigModel;\n  @Input() modalWindow: ModalWindowComponent;\n\n  @ViewChild('sourcesHeader')\n  sourcesHeader: CollapsableHeaderComponent;\n\n  private mappingSelectionRequiredSubscription: Subscription;\n\n  ngOnInit(): void {\n    this.mappingSelectionRequiredSubscription = this.cfg.mappingService.mappingSelectionRequired$.subscribe((field: Field) => {\n      this.selectMapping(field);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.mappingSelectionRequiredSubscription.unsubscribe();\n  }\n\n  getTitle(): string {\n    return this.cfg.mappings.activeMapping.isLookupMode() ? 'Lookup Mapping' : 'Mapping Details';\n  }\n\n  removeMapping(event: MouseEvent): void {\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Remove';\n    this.modalWindow.headerText = 'Remove Mapping?';\n    this.modalWindow.message = 'Are you sure you want to remove the current mapping?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      const activeMapping = this.cfg.mappings.activeMapping;\n      if (activeMapping.isLookupMode) {\n        this.cfg.mappings.removeTableByName(activeMapping.transition.lookupTableName);\n      }\n      this.cfg.mappingService.removeMapping(activeMapping);\n      this.cfg.showMappingDetailTray = false;\n    };\n    this.modalWindow.show();\n  }\n\n  private selectMapping(field: Field): void {\n    const mappingsForField: MappingModel[] = this.cfg.mappings.findMappingsForField(field);\n    const self: MappingDetailComponent = this;\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Select';\n    this.modalWindow.headerText = 'Select Mapping';\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      const c: MappingSelectionComponent = mw.nestedComponent as MappingSelectionComponent;\n      c.selectedField = field;\n      c.cfg = self.cfg;\n      c.mappings = mappingsForField;\n      c.modalWindow = this.modalWindow;\n    };\n    this.modalWindow.nestedComponentType = MappingSelectionComponent;\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      this.cfg.errorService.clearValidationErrors();\n      const c: MappingSelectionComponent = mw.nestedComponent as MappingSelectionComponent;\n      const mapping: MappingModel = c.getSelectedMapping();\n      self.cfg.mappingService.selectMapping(mapping);\n    };\n    this.modalWindow.cancelButtonHandler = (mw: ModalWindowComponent) => {\n      self.cfg.mappingService.selectMapping(null);\n    };\n    this.modalWindow.show();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        {{ getTitle() }}\n        \n      \n    \n\n    \n\n      \n        \n\n          \n          \n            \n\n              \n                \n                  \n                  \n                \n              \n            \n\n            \n              \n              \n                \n                  \n                  \n                \n              \n            \n          \n\n          \n          \n            \n\n              \n                \n                  \n                  \n                \n              \n            \n\n            \n              \n              \n                \n                  \n                  \n                \n              \n            \n          \n        \n      \n\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ getTitle() }}n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingFieldActionArgumentComponent.html":{"url":"components/MappingFieldActionArgumentComponent.html","title":"component - MappingFieldActionArgumentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingFieldActionArgumentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-field-action-argument\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-field-action-argument.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkIconEnabled\n                            \n                            \n                                delimiters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acceptInput\n                            \n                            \n                                actionConfigParamSelectionChanged\n                            \n                            \n                                contentChanged\n                            \n                            \n                                getActionConfigParamValues\n                            \n                            \n                                getActionConfigParamVDefault\n                            \n                            \n                                getLabel\n                            \n                            \n                                getMappedFieldActions\n                            \n                            \n                                isUserDelimiter\n                            \n                            \n                                modeIsSupported\n                            \n                            \n                                validateActionConfigParamSelection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                actionIndex\n                            \n                            \n                                argConfig\n                            \n                            \n                                argValIndex\n                            \n                            \n                                cfg\n                            \n                            \n                                mappedField\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:39\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :         FieldAction\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        actionIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        argConfig\n                    \n                \n                \n                    \n                        Type :         FieldActionArgument\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        argValIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mappedField\n                    \n                \n                \n                    \n                        Type :         MappedField\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            acceptInput\n                        \n                        \n                    \n                \n            \n            \n                \nacceptInput(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:63\n                \n            \n\n\n            \n                \n                    The user has selected the check icon at the end of the input text widget.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            actionConfigParamSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nactionConfigParamSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:102\n                \n            \n\n\n            \n                \n                    A mapping field action parameter selection has been made either from a pull-down menu\nor from user input to a text field.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contentChanged\n                        \n                        \n                    \n                \n            \n            \n                \ncontentChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:53\n                \n            \n\n\n            \n                \n                    The input text widget content has changed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionConfigParamValues\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionConfigParamValues(argConfig: FieldActionArgument)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:72\n                \n            \n\n\n            \n                \n                    Return in a string array the parameter values for the specified field action argument.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argConfig\n                                    \n                                                FieldActionArgument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     String[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionConfigParamVDefault\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionConfigParamVDefault(argConfig: FieldActionArgument, actionIndex: number, argValIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:137\n                \n            \n\n\n            \n                \n                    Return a string representing the default value for the field action argument pull-down.  If a mapped\nfield already exists for this component then use that to determine the displayed valued in the\npull-down; otherwise use the sequential configuration value based on the argument value index.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    argConfig\n                                    \n                                                FieldActionArgument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nargument configuration used if no mapped field exists\n\n\n                                    \n                                \n                                \n                                    actionIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nused when multiple actions are specified\n\n\n                                    \n                                \n                                \n                                    argValIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nindex into the argument values for any one specific action.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLabel(argConfigName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:151\n                \n            \n\n\n            \n                \n                    Translate an internal label to a human legible form.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argConfigName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedFieldActions\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedFieldActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     FieldAction[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserDelimiter\n                        \n                        \n                    \n                \n            \n            \n                \nisUserDelimiter(delimiterModel: TransitionDelimiterModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    delimiterModel\n                                    \n                                                TransitionDelimiterModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            modeIsSupported\n                        \n                        \n                    \n                \n            \n            \n                \nmodeIsSupported(delimiterModel: TransitionDelimiterModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    delimiterModel\n                                    \n                                                TransitionDelimiterModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateActionConfigParamSelection\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateActionConfigParamSelection(acp: FieldActionArgumentValue[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:85\n                \n            \n\n\n            \n                \n                    Simply validate that the user isn't attempting a conversion to the original type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    acp\n                                    \n                                            FieldActionArgumentValue[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkIconEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delimiters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionDelimiterModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\nimport { MappedField } from '../../models/mapping.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { FieldAction, FieldActionArgument, FieldActionArgumentValue } from '../../models/field-action.model';\nimport { TransitionDelimiterModel, TransitionModel, TransitionDelimiter } from '../../models/transition.model';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from '../../models/error.model';\n\n@Component({\n  selector: 'mapping-field-action-argument',\n  templateUrl: './mapping-field-action-argument.component.html',\n})\n\nexport class MappingFieldActionArgumentComponent {\n  @Input() action: FieldAction;\n  @Input() actionIndex: number;\n  @Input() argValIndex: number;\n  @Input() argConfig: FieldActionArgument;\n  @Input() cfg: ConfigModel;\n  @Input() mappedField: MappedField;\n\n  delimiters: TransitionDelimiterModel[];\n  private checkIconEnabled = false;\n\n  constructor() {\n    TransitionModel.initialize();\n    this.delimiters = TransitionModel.delimiterModels;\n  }\n\n  getMappedFieldActions(): FieldAction[] {\n    return this.mappedField ? this.mappedField.actions : [this.action];\n  }\n\n  /**\n   * The input text widget content has changed.\n   */\n  contentChanged(): void {\n    this.checkIconEnabled = true;\n    this.cfg.mappingService.notifyMappingUpdated();\n  }\n\n  /**\n   * The user has selected the check icon at the end of the input text widget.\n   *\n   * @param event\n   */\n  acceptInput(event: any): void {\n    this.actionConfigParamSelectionChanged(event);\n  }\n\n  /**\n   * Return in a string array the parameter values for the specified field action argument.\n   *\n   * @param argConfig\n   */\n  getActionConfigParamValues(argConfig: FieldActionArgument): String[] {\n    const acpv: String[] = [];\n    for (const argument of argConfig.values) {\n      acpv.push(argument);\n    }\n    return acpv;\n  }\n\n  /**\n   * Simply validate that the user isn't attempting a conversion to the original type.\n   *\n   * @param acp\n   */\n  validateActionConfigParamSelection(acp: FieldActionArgumentValue[]): void {\n    this.cfg.errorService.clearFieldErrors();\n    if (acp != null && acp.length === 2) {\n      if (acp[0].value === acp[1].value) {\n        this.cfg.errorService.addError(new ErrorInfo({\n          message: 'Please select differing \\'from\\' and \\'to\\' units in your conversion transformation.',\n          level: ErrorLevel.ERROR, field: this.mappedField, scope: ErrorScope.FIELD, type: ErrorType.USER}));\n      }\n    }\n  }\n\n  /**\n   * A mapping field action parameter selection has been made either from a pull-down menu\n   * or from user input to a text field.\n   *\n   * @param event\n   */\n  actionConfigParamSelectionChanged(event: any): void {\n    this.cfg.errorService.clearFieldErrors();\n    // Make sure they've specified something.\n    if (!event.target.value || event.target.value.length === 0) {\n      this.cfg.errorService.addError(new ErrorInfo({\n        message: 'You must specify a transformation argument value.',\n        level: ErrorLevel.INFO, field: this.mappedField, scope: ErrorScope.FIELD, type: ErrorType.USER}));\n      return;\n    }\n    this.mappedField.parsedData.userCreated = true;\n\n    // Identify the pull-down\n    if (event.target.selectedOptions != null) {\n      const attributes: any = event.target.selectedOptions.item(0).attributes;\n      const selectedArgValName: any = attributes.getNamedItem('value').value;\n      const argValIndex: any = attributes.getNamedItem('argValIndex').value;\n      const actionIndex: any = attributes.getNamedItem('actionIndex').value;\n      const action: FieldAction = this.mappedField ? this.mappedField.actions[actionIndex] : this.action;\n      action.argumentValues[argValIndex].value = selectedArgValName;\n      this.validateActionConfigParamSelection(action.argumentValues);\n    }\n    this.cfg.mappingService.notifyMappingUpdated();\n    this.checkIconEnabled = false;\n    // this.enableCheck();\n  }\n\n  /**\n   * Return a string representing the default value for the field action argument pull-down.  If a mapped\n   * field already exists for this component then use that to determine the displayed valued in the\n   * pull-down; otherwise use the sequential configuration value based on the argument value index.\n   *\n   * @param argConfig - argument configuration used if no mapped field exists\n   * @param actionIndex - used when multiple actions are specified\n   * @param argValIndex - index into the argument values for any one specific action.\n   */\n  getActionConfigParamVDefault(argConfig: FieldActionArgument, actionIndex: number, argValIndex: number): String {\n    const action: FieldAction = this.getMappedFieldActions()[actionIndex];\n    if (action != null && action.argumentValues.length > 0) {\n      return action.argumentValues[argValIndex].value;\n    } else {\n      return argConfig.values[argValIndex];\n    }\n  }\n\n  /**\n   * Translate an internal label to a human legible form.\n   *\n   * @param argConfigName\n   */\n  getLabel(argConfigName: string): string {\n    return DataMapperUtil.toDisplayable(argConfigName);\n  }\n\n  modeIsSupported(delimiterModel: TransitionDelimiterModel): boolean {\n    if ([TransitionDelimiter.NONE, TransitionDelimiter.USER_DEFINED].includes(delimiterModel.delimiter)) {\n      return false;\n    }\n    return true;\n  }\n\n  isUserDelimiter(delimiterModel: TransitionDelimiterModel) {\n    return (delimiterModel.delimiter === TransitionDelimiter.USER_DEFINED);\n  }\n\n}\n\n    \n\n    \n        \n  \n\n  \n     0; then dropdown; else textInput\"> \n  \n  \n    {{ getLabel(argConfig.name) }}\n    \n      {{ actionConfigParamVal }}\n      \n    \n  \n  \n    {{ getLabel(argConfig.name) }}\n    \n      \n        \n          {{ delimiter.prettyName }}\n        \n      \n    \n  \n\n  \n    {{ getLabel(argConfig.name) }}: \n    \n      \n    \n    \n      \n    \n\n    \n      \n        \n      \n      \n        \n      \n    \n    -->\n  \n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         0; then dropdown; else textInput\">         {{ getLabel(argConfig.name) }}          {{ actionConfigParamVal }}                  {{ getLabel(argConfig.name) }}                            {{ delimiter.prettyName }}                          {{ getLabel(argConfig.name) }}:                                                                                 -->    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingFieldActionArgumentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingFieldActionComponent.html":{"url":"components/MappingFieldActionComponent.html","title":"component - MappingFieldActionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingFieldActionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-field-action\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-field-action.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                actionsExistForField\n                            \n                            \n                                configSelectionChanged\n                            \n                            \n                                getActionConfigs\n                            \n                            \n                                getMappedFieldActions\n                            \n                            \n                                isIndexArg\n                            \n                            \n                                removeAction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                isSource\n                            \n                            \n                                mappedField\n                            \n                            \n                                mapping\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSource\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mappedField\n                    \n                \n                \n                    \n                        Type :         MappedField\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            actionsExistForField\n                        \n                        \n                    \n                \n            \n            \n                \nactionsExistForField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nconfigSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:66\n                \n            \n\n\n            \n                \n                    A mapping field action configuration selection has been made.  Note that action field arguments, if any,\nmay be specified by either a text field or pull-down menu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActionConfigs\n                        \n                        \n                    \n                \n            \n            \n                \ngetActionConfigs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     FieldActionDefinition[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedFieldActions\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedFieldActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     FieldAction[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isIndexArg\n                        \n                        \n                    \n                \n            \n            \n                \nisIndexArg(argVal: string, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeAction\n                        \n                        \n                    \n                \n            \n            \n                \nremoveAction(action: FieldAction)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:56\n                \n            \n\n\n            \n                \n                    Remove the specified field action (transformation) from the current mapped field's\nactions.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                FieldAction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : DataMapperUtil.toDisplayable\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\nimport { MappingModel, MappedField } from '../../models/mapping.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { FieldAction, FieldActionDefinition, Multiplicity } from '../../models/field-action.model';\n\n@Component({\n  selector: 'mapping-field-action',\n  templateUrl: './mapping-field-action.component.html',\n})\n\nexport class MappingFieldActionComponent {\n  @Input() cfg: ConfigModel;\n  @Input() mappedField: MappedField;\n  @Input() isSource: boolean;\n  @Input() mapping: MappingModel;\n  getLabel = DataMapperUtil.toDisplayable;\n\n  getMappedFieldActions(): FieldAction[] {\n    return this.mappedField.actions;\n  }\n\n  isIndexArg(argVal: string, index: number): boolean {\n    return (argVal === 'Index' && index === 0);\n  }\n\n  actionsExistForField(): boolean {\n    return (this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, this.isSource, Multiplicity.ONE_TO_ONE).length > 0);\n  }\n\n  getActionConfigs(): FieldActionDefinition[] {\n    return this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, this.isSource, Multiplicity.ONE_TO_ONE);\n  }\n\n  /**\n   * Remove the specified field action (transformation) from the current mapped field's\n   * actions.\n   * @param action\n   */\n  removeAction(action: FieldAction): void {\n    this.mappedField.removeAction(action);\n    this.cfg.mappingService.notifyMappingUpdated();\n  }\n\n  /**\n   * A mapping field action configuration selection has been made.  Note that action field arguments, if any,\n   * may be specified by either a text field or pull-down menu.\n   * @param event\n   */\n  configSelectionChanged(event: any) {\n    const attributes: any = event.target.selectedOptions.item(0).attributes;\n    const selectedActionName: any = attributes.getNamedItem('value').value;\n    const selectedActionIndex: any = attributes.getNamedItem('actionIndex').value;\n    const action: FieldAction = this.getMappedFieldActions()[selectedActionIndex];\n    if (action.name !== selectedActionName) {\n      action.argumentValues = [];  // Invalidate the previously selected field action arguments.\n      const fieldActionDefinition = this.cfg.fieldActionService.getActionDefinitionForName(selectedActionName, Multiplicity.ONE_TO_ONE);\n      fieldActionDefinition.populateFieldAction(action);\n\n      // If the field action configuration predefines argument values then populate the fields with\n      // default values.  Needed to support pull-down menus in action argument definitions.\n      if (action.argumentValues.values && action.argumentValues.length > 0\n        && fieldActionDefinition.arguments[0] && fieldActionDefinition.arguments[0].values\n        && fieldActionDefinition.arguments[0].values.length > 0) {\n        for (let i = 0; i \n    \n\n    \n        \n  \n\n    \n      \n        \n        \n          {{ getLabel(actionConfig.name) }}\n        \n        \n          \n        \n        \n      \n\n      \n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      {{ getLabel(actionConfig.name) }}                                                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingFieldActionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingFieldContainerComponent.html":{"url":"components/MappingFieldContainerComponent.html","title":"component - MappingFieldContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingFieldContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-field-container\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-field-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                    Private\n                                diff\n                            \n                            \n                                    Private\n                                elem\n                            \n                            \n                                inputId\n                            \n                            \n                                    Private\n                                isDragDropTarget\n                            \n                            \n                                    Private\n                                searchFilter\n                            \n                            \n                                    Private\n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                allowDrop\n                            \n                            \n                                displayFieldSearchBox\n                            \n                            \n                                displayTransitionSelection\n                            \n                            \n                                dragEnterLeave\n                            \n                            \n                                endDrag\n                            \n                            \n                                getAddButtonLabel\n                            \n                            \n                                getDisplayName\n                            \n                            \n                                getPanelIconCSSClass\n                            \n                            \n                                getSearchPlaceholder\n                            \n                            \n                                getTopFieldTypeLabel\n                            \n                            \n                                handleMouseOver\n                            \n                            \n                                isAddButtonVisible\n                            \n                            \n                                isPartialComponent\n                            \n                            \n                                itemIsDocument\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeMappedField\n                            \n                            \n                                selectionChanged\n                            \n                            \n                                startDrag\n                            \n                            \n                                updateSearchFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                isSource\n                            \n                            \n                                mapping\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:45\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSource\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allowDrop\n                        \n                        \n                    \n                \n            \n            \n                \nallowDrop(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayFieldSearchBox\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayFieldSearchBox()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayTransitionSelection\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayTransitionSelection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragEnterLeave\n                        \n                        \n                    \n                \n            \n            \n                \ndragEnterLeave(event: any, entering: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entering\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endDrag\n                        \n                        \n                    \n                \n            \n            \n                \nendDrag(event: any, insertBeforeMappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    insertBeforeMappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAddButtonLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetAddButtonLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDisplayName\n                        \n                        \n                    \n                \n            \n            \n                \ngetDisplayName(model: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPanelIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetPanelIconCSSClass(model: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSearchPlaceholder\n                        \n                        \n                    \n                \n            \n            \n                \ngetSearchPlaceholder()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTopFieldTypeLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetTopFieldTypeLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseOver\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseOver(evt1: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt1\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isAddButtonVisible\n                        \n                        \n                    \n                \n            \n            \n                \nisAddButtonVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPartialComponent\n                        \n                        \n                    \n                \n            \n            \n                \nisPartialComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            itemIsDocument\n                        \n                        \n                    \n                \n            \n            \n                \nitemIsDocument(model: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMappedField\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMappedField(mappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startDrag\n                        \n                        \n                    \n                \n            \n            \n                \nstartDrag(event: any, draggedMappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    draggedMappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSearchFilter\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSearchFilter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            diff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            elem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDragDropTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\nimport { MappingModel, MappedField } from '../../models/mapping.model';\nimport { TransitionMode } from '../../models/transition.model';\nimport { Observable } from 'rxjs';\nimport { Field } from '../../models/field.model';\nimport { ModalWindowComponent } from '../modal/modal-window.component';\n\n@Component({\n  selector: 'mapping-field-container',\n  templateUrl: './mapping-field-container.component.html',\n})\n\nexport class MappingFieldContainerComponent implements OnInit {\n  @Input() cfg: ConfigModel;\n  @Input() isSource = false;\n  @Input() mapping: MappingModel;\n  @Input() modalWindow: ModalWindowComponent;\n\n  inputId: String;\n\n  private isDragDropTarget = false;\n  private elem = null;\n  private start = 0;\n  private diff = 0;\n  private searchFilter = '';\n  dataSource: Observable;\n\n  constructor() {\n    this.dataSource = Observable.create((observer: any) => {\n      observer.next(this.cfg.mappingService.executeFieldSearch(this.cfg, this.searchFilter, this.isSource));\n    });\n  }\n\n  ngOnInit() {\n    this.inputId = 'input-' + this.isSource ? 'source' : 'target';\n  }\n\n  itemIsDocument(model: any): boolean {\n    return (!model.field);\n  }\n  getDisplayName(model: any): string {\n    return model.displayName;\n  }\n\n  isPartialComponent(): boolean {\n    return true;\n  }\n\n  getPanelIconCSSClass(model: any): string {\n    return (model.field) ? '' : (this.isSource ? 'fa fa-hdd-o' : 'fa fa-download');\n  }\n\n  handleMouseOver(evt1: MouseEvent): void {\n    if (this.elem != null) {\n      evt1.stopPropagation();\n      evt1.preventDefault();\n      let end = 0;\n\n      if (evt1['pageY']) {\n        end = evt1['pageY'];\n      } else if (evt1['clientY']) {\n        end = evt1['clientY'];\n      }\n      this.diff = end - this.start;\n      this.elem.style['top'] = this.diff + 'px';\n    }\n  }\n\n  startDrag(event: any, draggedMappedField: MappedField): void {\n    event = event || window.event;\n    event.dataTransfer.setData('text', '');  // firefox bug\n    this.cfg.currentDraggedField = draggedMappedField;\n    /* this code does correctly constrain the drag movement to the vertical area of\n     * the mapping details section. It couldn't correctly identify the on-drop target\n    event = event || window.event;\n    event.stopPropagation();\n    event.preventDefault();\n    this.elem = event.currentTarget;\n\n    if (event['pageY']) {\n        this.start = event['pageY'];\n    } else if (event['clientY']) {\n        this.start = event['clientY'];\n    }\n\n    this.elem.style.position = 'relative';\n    this.elem.onmouseup = (evt: any) => {\n      // See endDrag()\n      evt.stopPropagation();\n      evt.preventDefault();\n    };\n    */\n  }\n\n  dragEnterLeave(event: any, entering: boolean): void {\n    this.isDragDropTarget = entering;\n  }\n\n  allowDrop(event: any): void {\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n    this.isDragDropTarget = true;\n  }\n\n  endDrag(event: any, insertBeforeMappedField: MappedField): void {\n    this.isDragDropTarget = false;\n\n    const droppedMappedField: MappedField = this.cfg.currentDraggedField;\n    if (droppedMappedField == null) {\n      return;\n    }\n\n    if (insertBeforeMappedField != null) {\n      this.cfg.mappingService.moveMappedFieldTo(this.mapping, droppedMappedField,\n        this.mapping.getIndexForMappedField(insertBeforeMappedField));\n\n      // Update indexing in any conditional mapping expressions.\n      if (this.mapping.transition && this.mapping.transition.enableExpression) {\n        this.mapping.transition.expression.updateFieldReference(this.mapping);\n        this.cfg.mappingService.notifyMappingUpdated();\n      }\n    }\n    this.cfg.currentDraggedField = null;\n  }\n\n  displayTransitionSelection(): boolean {\n    return (this.isSource && !this.mapping.transition.enableExpression &&\n      (this.mapping.transition.isOneToManyMode() || this.mapping.transition.isManyToOneMode()\n      || this.mapping.transition.isEnumerationMode()));\n  }\n\n  displayFieldSearchBox(): boolean {\n\n    const mappedFields = this.mapping.getMappedFields(this.isSource);\n    if (mappedFields.length === 0) {\n      return true;\n    } else if (mappedFields[0].field.isInCollection()) {\n      return false;\n    }\n\n    if (this.mapping.transition.mode === TransitionMode.ONE_TO_ONE) {\n      return true;\n    }\n    if (this.isSource) {\n      if (this.mapping.transition.mode === TransitionMode.MANY_TO_ONE) {\n        return !mappedFields[0].field.isInCollection();\n      }\n    } else {\n      if (this.mapping.transition.mode === TransitionMode.ONE_TO_MANY) {\n        return !mappedFields[0].field.isInCollection();\n      }\n    }\n    return false;\n  }\n\n  updateSearchFilter(value: string) {\n    this.searchFilter = value;\n  }\n\n  getSearchPlaceholder(): string {\n    return 'Begin typing to search for more ' + (this.isSource ? 'sources' : 'targets');\n  }\n\n  selectionChanged(event: any): void {\n    if (event.item['field']) {\n      this.cfg.mappingService.fieldSelected(event.item['field'], true);\n    }\n    this.searchFilter = '';\n  }\n\n  isAddButtonVisible(): boolean {\n    if (this.isSource && this.mapping.transition.isManyToOneMode()) {\n      return true;\n    } else if (!this.isSource && this.mapping.transition.isOneToManyMode()) {\n      return true;\n    }\n    return false;\n  }\n\n  getTopFieldTypeLabel(): string {\n    return this.isSource ? 'Source' : 'Target';\n  }\n\n  getAddButtonLabel(): string {\n    return this.isSource ? 'Add Source' : 'Add Target';\n  }\n\n  removeMappedField(mappedField: MappedField): void {\n    this.mapping.removeMappedField(mappedField);\n    this.cfg.mappingService.updateMappedField(this.mapping);\n  }\n}\n\n    \n\n    \n        \n\n  \n\n    \n      {{ '  ' + getDisplayName(model) }}\n    \n\n    \n      {{ getDisplayName(model) }}\n    \n\n  \n\n  \n\n    \n      \n\n        \n\n      \n      \n    \n\n    \n      \n    \n  \n\n  \n\n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'  \\' + getDisplayName(model) }}              {{ getDisplayName(model) }}                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingFieldContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingFieldDetailComponent.html":{"url":"components/MappingFieldDetailComponent.html","title":"component - MappingFieldDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingFieldDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-field-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-field-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                parentObjectName\n                            \n                            \n                                sourceIconCSSClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTransformation\n                            \n                            \n                                displayIndex\n                            \n                            \n                                displayParentObject\n                            \n                            \n                                getFieldPath\n                            \n                            \n                                    Private\n                                getParentObjectName\n                            \n                            \n                                    Private\n                                getSourceIconCSSClass\n                            \n                            \n                                indexSelectionChanged\n                            \n                            \n                                isTransformCapable\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeMappedField\n                            \n                            \n                                    Private\n                                updateTemplateValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                isSource\n                            \n                            \n                                mappedField\n                            \n                            \n                                mapping\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSource\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mappedField\n                    \n                \n                \n                    \n                        Type :         MappedField\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTransformation\n                        \n                        \n                    \n                \n            \n            \n                \naddTransformation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:51\n                \n            \n\n\n            \n                \n                    The add transformation icon has been selected.  Add a field action to the current\nmapped field.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayIndex\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayParentObject\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayParentObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldPath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getParentObjectName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getParentObjectName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getSourceIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSourceIconCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            indexSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nindexSelectionChanged(event: any, mappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:100\n                \n            \n\n\n            \n                \n                    The user has hand-edited the index value of a mapped field.  Perform the following:\n\nAdd place-holders for each index value between the updated value and its previous value.\nRe-sequence the field action indices.\nSort the mapped fields array to get then back into numerical order.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTransformCapable\n                        \n                        \n                    \n                \n            \n            \n                \nisTransformCapable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMappedField\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMappedField(mappedField: MappedField)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mappedField\n                                    \n                                                MappedField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateTemplateValues\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTemplateValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentObjectName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sourceIconCSSClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { MappingModel, MappedField } from '../../models/mapping.model';\nimport { FieldAction } from '../../models/field-action.model';\nimport { ErrorInfo, ErrorLevel, ErrorScope, ErrorType } from '../../models/error.model';\n\n@Component({\n  selector: 'mapping-field-detail',\n  templateUrl: './mapping-field-detail.component.html',\n})\n\nexport class MappingFieldDetailComponent implements OnInit {\n\n  @Input() cfg: ConfigModel;\n  @Input() mapping: MappingModel;\n  @Input() isSource: boolean;\n  @Input() mappedField: MappedField;\n\n  sourceIconCSSClass: string;\n  parentObjectName: string;\n\n  ngOnInit() {\n    this.updateTemplateValues();\n  }\n\n  isTransformCapable() {\n    return (!this.mappedField.isPadField() && this.mappedField.field.name.length > 0);\n  }\n\n  /**\n   * The add transformation icon has been selected.  Add a field action to the current\n   * mapped field.\n   */\n  addTransformation(): void {\n    const actionDefinition = this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, this.isSource)[0];\n    if (actionDefinition == null) {\n      this.cfg.errorService.addError(new ErrorInfo({message: 'The selected field has no applicable transformation actions.',\n        level: ErrorLevel.INFO, scope: ErrorScope.MAPPING, type: ErrorType.USER}));\n      return;\n    }\n    const action: FieldAction = new FieldAction();\n    actionDefinition.populateFieldAction(action);\n    this.mappedField.actions.push(action);\n    this.cfg.mappingService.notifyMappingUpdated();\n  }\n\n  getFieldPath(): string {\n    if (this.mappedField == null || this.mappedField.field == null) {\n      return '[None]';\n    }\n    return this.mappedField.field.path;\n  }\n\n  displayParentObject(): boolean {\n    if (this.mappedField != null && this.mappedField.isPadField()) {\n      this.parentObjectName = '';\n      return true;\n    }\n    if (this.mappedField == null || this.mappedField.field == null\n      || this.mappedField.field.name === null\n      || this.mappedField.field.name.length === 0\n      || this.mappedField.field.docDef == null) {\n      return false;\n    }\n    if (this.parentObjectName == null || this.parentObjectName.length === 0) {\n      this.updateTemplateValues();\n    }\n    return true;\n  }\n\n  displayIndex(): boolean {\n    return this.mapping.getMappedFields(this.isSource).length > 1 && !this.mapping.transition.enableExpression;\n  }\n\n  /**\n   * The user has hand-edited the index value of a mapped field.  Perform the following:\n   *   - Add place-holders for each index value between the updated value and its previous value.\n   *   - Re-sequence the field action indices.\n   *   - Sort the mapped fields array to get then back into numerical order.\n   * @param event\n   * @param mappedField\n   */\n  indexSelectionChanged(event: any, mappedField: MappedField): void {\n    const insertionIndex = Number(event.target.value) || 0;\n    if (insertionIndex === 0) {\n      return;\n    }\n    const mappedFields = this.mapping.getMappedFields(mappedField.isSource());\n    const targetIndex = mappedFields.length;\n    if (insertionIndex > targetIndex) {\n\n      // Add place-holders for each index value between the previous max index and the insertion index.\n      this.cfg.mappingService.addPlaceholders(insertionIndex - mappedFields.length,\n        this.mapping, targetIndex, mappedField.field.isSource());\n    }\n    this.cfg.mappingService.moveMappedFieldTo(this.mapping, mappedField, insertionIndex);\n    this.cfg.mappingService.notifyMappingUpdated();\n  }\n\n  removeMappedField(mappedField: MappedField): void {\n    this.mapping.removeMappedField(mappedField);\n    this.cfg.mappingService.updateMappedField(this.mapping);\n  }\n\n  private updateTemplateValues(): void {\n    this.sourceIconCSSClass = this.getSourceIconCSSClass();\n    this.parentObjectName = this.getParentObjectName();\n  }\n\n  private getSourceIconCSSClass(): string {\n    return this.isSource ? 'fa fa-hdd-o' : 'fa fa-download';\n  }\n\n  private getParentObjectName() {\n    if (this.mappedField == null || this.mappedField.field == null || this.mappedField.field.docDef == null) {\n      return '';\n    }\n    return this.mappedField.field.docDef.getName(ConfigModel.getConfig().showTypes);\n  }\n}\n\n    \n\n    \n        \n\n{{ model['field'].docDef == null ?\n  'Not yet defined' : model['field'].docDef.name }}\n{{ model['field'].path }}\n\n\n\n\n\n\n  \n     {{ parentObjectName }}\n  \n  {{ getFieldPath() }}\n  ({{ mappedField.field.type }})\n  \n\n\n\n\n\n  \n\n    \n    \n    \n\n    \n    \n      {{ mappedField.field.name }}\n    \n\n    \n    \n      Index:\n\n      \n        \n          {{ mapping.getIndexForMappedField(mappedField) }}\n        \n        \n          \n        \n      \n      \n        \n      \n    \n  \n\n  \n\n  \n  \n    \n      \n        Add Transformation\n      \n    \n    \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ model[\\'field\\'].docDef == null ?  \\'Not yet defined\\' : model[\\'field\\'].docDef.name }}{{ model[\\'field\\'].path }}       {{ parentObjectName }}    {{ getFieldPath() }}  ({{ mappedField.field.type }})                              {{ mappedField.field.name }}                  Index:                        {{ mapping.getIndexForMappedField(mappedField) }}                                                                                          Add Transformation                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingFieldDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingListComponent.html":{"url":"components/MappingListComponent.html","title":"component - MappingListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-list\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorSubscription\n                            \n                            \n                                searchFilter\n                            \n                            \n                                searchMode\n                            \n                            \n                                    Private\n                                searchResults\n                            \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fieldPairMatchesSearch\n                            \n                            \n                                getItemsCSSClass\n                            \n                            \n                                getMappedFields\n                            \n                            \n                                getMappingCSSClass\n                            \n                            \n                                getMappingRowsCSSClass\n                            \n                            \n                                getMappings\n                            \n                            \n                                getRowTitleCSSClass\n                            \n                            \n                                getSearchIconCSSClass\n                            \n                            \n                                isActiveMapping\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                search\n                            \n                            \n                                searchResultsVisible\n                            \n                            \n                                selectMapping\n                            \n                            \n                                    Private\n                                storeErrors\n                            \n                            \n                                toggleSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fieldPairMatchesSearch\n                        \n                        \n                    \n                \n            \n            \n                \nfieldPairMatchesSearch(mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItemsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetItemsCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedFields\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedFields(mapping: MappingModel, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MappedField[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappingCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappingCSSClass(mapping: MappingModel, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappingRowsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappingRowsCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappings\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MappingModel[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRowTitleCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetRowTitleCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSearchIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetSearchIconCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isActiveMapping\n                        \n                        \n                    \n                \n            \n            \n                \nisActiveMapping(mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(searchFilter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchFilter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchResultsVisible\n                        \n                        \n                    \n                \n            \n            \n                \nsearchResultsVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectMapping\n                        \n                        \n                    \n                \n            \n            \n                \nselectMapping(mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            storeErrors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    storeErrors(errors: ErrorInfo[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSearch\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnDestroy } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\nimport { MappingModel, MappedField } from '../../models/mapping.model';\nimport { ErrorInfo, ErrorScope, ErrorType } from '../../models/error.model';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'mapping-list',\n  templateUrl: './mapping-list.component.html',\n})\n\nexport class MappingListComponent implements OnInit, OnDestroy {\n  @Input() cfg: ConfigModel;\n\n  searchMode = false;\n  searchFilter = '';\n  validationErrors = new Map();\n  private searchResults: MappingModel[] = [];\n  private errorSubscription: Subscription;\n\n  ngOnInit() {\n    this.cfg.mappingService.notifyMappingUpdated();\n    this.storeErrors(this.cfg.errorService.getErrors());\n    this.errorSubscription = this.cfg.errorService.subscribe(errors => {\n      this.storeErrors(errors);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.errorSubscription) {\n      this.errorSubscription.unsubscribe();\n    }\n  }\n\n  getItemsCSSClass(): string {\n    return 'items mappings' + (this.searchMode ? ' searchShown' : '');\n  }\n\n  searchResultsVisible(): boolean {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      return false;\n    }\n    return (this.searchResults.length === 0);\n  }\n\n  getMappingCSSClass(mapping: MappingModel, index: number): string {\n    let cssClass = 'item ';\n    cssClass += (index % 2 === 1) ? ' even' : '';\n    if (mapping === this.cfg.mappings.activeMapping) {\n      cssClass += ' active';\n    }\n    return cssClass;\n  }\n\n  selectMapping(mapping: MappingModel): void {\n    this.cfg.mappingService.selectMapping(mapping);\n  }\n\n  getRowTitleCSSClass(): string {\n    return this.searchMode ? 'rowTitles searchShown' : 'rowTitles';\n  }\n\n  getMappingRowsCSSClass(): string {\n    return this.searchMode ? 'rows searchShown' : 'rows';\n  }\n\n  getMappings(): MappingModel[] {\n    return this.searchMode ? this.searchResults : [].concat(this.cfg.mappings.getAllMappings(true));\n  }\n\n  getMappedFields(mapping: MappingModel, isSource: boolean): MappedField[] {\n    return mapping.getUserMappedFields(isSource);\n  }\n\n  toggleSearch(): void {\n    this.searchMode = !this.searchMode;\n    this.search(this.searchFilter);\n  }\n\n  getSearchIconCSSClass(): string {\n    const cssClass = 'fa fa-search searchBoxIcon link';\n    return this.searchMode ? (cssClass + ' selectedIcon') : cssClass;\n  }\n\n  fieldPairMatchesSearch(mapping: MappingModel): boolean {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      return true;\n    }\n    const filter: string = this.searchFilter.toLowerCase();\n    const transitionName: string = mapping.transition.getPrettyName();\n    if (transitionName != null && transitionName.toLowerCase().includes(filter)) {\n      return true;\n    }\n    for (const mappedField of mapping.getAllMappedFields()) {\n      const field: Field = mappedField.field;\n      if (field == null || field.path == null) {\n        continue;\n      }\n      if (field.path.toLowerCase().includes(filter)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isActiveMapping(mapping: MappingModel): boolean {\n    return this.cfg.mappings.activeMapping === mapping;\n  }\n\n  private search(searchFilter: string): void {\n    this.searchFilter = searchFilter;\n\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      this.searchResults = [].concat(this.cfg.mappings.getAllMappings(true));\n      return;\n    }\n\n    this.searchResults = [];\n    for (const mapping of this.cfg.mappings.getAllMappings(true)) {\n      if (this.fieldPairMatchesSearch(mapping)) {\n        this.searchResults.push(mapping);\n        break;\n      }\n    }\n  }\n\n  private storeErrors(errors: ErrorInfo[]) {\n    this.validationErrors = new Map();\n    errors.forEach(e => {\n      if (e.scope !== ErrorScope.MAPPING || e.type !== ErrorType.VALIDATION || !e.mapping) {\n        return;\n      }\n      if (!this.validationErrors.has(e.mapping)) {\n        this.validationErrors.set(e.mapping, []);\n      }\n      this.validationErrors.get(e.mapping).push(e);\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          Mappings\n        \n        \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          \n            Sources\n          \n            Targets\n          \n            Type\n          \n        \n        \n      \n    \n    \n      \n        \n          \n            \n              \n              &nbsp;\n              \n            \n            \n              \n              &nbsp;\n              \n            \n            \n              {{ mapping.transition.getPrettyName() }}\n              \n            \n            \n              \n            \n            \n          \n        \n      \n      \n        No search results.\n        \n      \n    \n    {{ cfg.mappings.mappings.length }} mappings\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Mappings                                                                                                                Sources                      Targets                      Type                                                                                                                                                                                                                                {{ mapping.transition.getPrettyName() }}                                                                                                                  No search results.                      {{ cfg.mappings.mappings.length }} mappings      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingListFieldComponent.html":{"url":"components/MappingListFieldComponent.html","title":"component - MappingListFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingListFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-list-field\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-list-field.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayParentObject\n                            \n                            \n                                getFieldPath\n                            \n                            \n                                getParentObjectName\n                            \n                            \n                                getSourceIconCSSClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                isActive\n                            \n                            \n                                isSource\n                            \n                            \n                                mappedField\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isActive\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSource\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mappedField\n                    \n                \n                \n                    \n                        Type :         MappedField\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayParentObject\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayParentObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldPath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParentObjectName\n                        \n                        \n                    \n                \n            \n            \n                \ngetParentObjectName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSourceIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetSourceIconCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { MappedField } from '../../models/mapping.model';\n\n@Component({\n  selector: 'mapping-list-field',\n  templateUrl: './mapping-list-field.component.html',\n})\n\nexport class MappingListFieldComponent {\n  @Input() mappedField: MappedField;\n  @Input() isSource: boolean;\n  @Input() isActive: boolean;\n  @Input() cfg: ConfigModel;\n\n  getSourceIconCSSClass(): string {\n    return this.isSource ? 'fa fa-hdd-o' : 'fa fa-download';\n  }\n\n  getFieldPath(): string {\n    if (this.mappedField == null || this.mappedField.field == null) {\n      return '[None]';\n    }\n    return this.mappedField.field.getFieldLabel(ConfigModel.getConfig().showTypes, true);\n  }\n\n  displayParentObject(): boolean {\n    if (this.mappedField == null || this.mappedField.field == null\n      || this.mappedField.field.docDef == null) {\n      return false;\n    }\n    return true;\n  }\n\n  getParentObjectName() {\n    if (this.mappedField == null || this.mappedField.field == null || this.mappedField.field.docDef == null) {\n      return '';\n    }\n    return this.mappedField.field.docDef.getName(ConfigModel.getConfig().showTypes);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{ getParentObjectName() }}\n    \n    {{ getFieldPath() }}\n    \n  \n\n\n\n  \n    \n      \n        \n          {{ getFieldPath() }}\n           0\">\n        \n      \n    \n  \n\n  \n    \n      \n        \n        \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{ getParentObjectName() }}        {{ getFieldPath() }}                                    {{ getFieldPath() }}           0\">                                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingListFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingSelectionComponent.html":{"url":"components/MappingSelectionComponent.html","title":"component - MappingSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-selection\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                mappings\n                            \n                            \n                                modalWindow\n                            \n                            \n                                sectionComponents\n                            \n                            \n                                selectedField\n                            \n                            \n                                    Private\n                                selectedMappingComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMapping\n                            \n                            \n                                getFormattedOutputPath\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                getSelectedMapping\n                            \n                            \n                                    Private\n                                getSelectedMappingComponent\n                            \n                            \n                                isDataValid\n                            \n                            \n                                selectionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addMapping\n                        \n                        \n                    \n                \n            \n            \n                \naddMapping()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFormattedOutputPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetFormattedOutputPath(path: string, nameOnly: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nameOnly\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSelectedMapping\n                        \n                        \n                    \n                \n            \n            \n                \ngetSelectedMapping()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MappingModel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getSelectedMappingComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSelectedMappingComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         MappingSelectionSectionComponent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nselectionChanged(c: MappingSelectionSectionComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                MappingSelectionSectionComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mappings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalWindow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sectionComponents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('mappingSection')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedMappingComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MappingSelectionSectionComponent\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChildren, QueryList, ElementRef } from '@angular/core';\n\nimport { MappingModel } from '../../models/mapping.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { Field } from '../../models/field.model';\n\nimport { ModalWindowComponent, ModalWindowValidator } from '../modal/modal-window.component';\nimport { MappingSelectionSectionComponent } from './mapping-selection-section.component';\n\n@Component({\n  selector: 'mapping-selection',\n  templateUrl: './mapping-selection.component.html',\n})\n\nexport class MappingSelectionComponent implements ModalWindowValidator {\n  modalWindow: ModalWindowComponent;\n  mappings: MappingModel[];\n  selectedField: Field = null;\n  cfg: ConfigModel;\n\n  @ViewChildren('mappingSection') sectionComponents: QueryList;\n\n  private selectedMappingComponent: MappingSelectionSectionComponent = null;\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n  selectionChanged(c: MappingSelectionSectionComponent) {\n    const self: MappingSelectionComponent = c.parentComponent as MappingSelectionComponent;\n    const oldSelectedItem: MappingSelectionSectionComponent = self.getSelectedMappingComponent();\n    oldSelectedItem.selected = false;\n    c.selected = true;\n    self.selectedMappingComponent = c;\n  }\n\n  getFormattedOutputPath(path: string, nameOnly: boolean) {\n    path = path.replace('.', '/');\n    const index: number = path.lastIndexOf('/');\n    const fieldName: string = (index === -1) ? path : path.substr(path.lastIndexOf('/') + 1);\n    path = (index === -1) ? '' : path.substr(0, path.lastIndexOf('/') + 1);\n    return nameOnly ? fieldName : path;\n  }\n\n  addMapping() {\n    this.cfg.mappingService.addNewMapping(this.selectedField, false);\n    this.modalWindow.close();\n  }\n\n  getSelectedMapping(): MappingModel {\n    return this.getSelectedMappingComponent().mapping;\n  }\n\n  private getSelectedMappingComponent(): MappingSelectionSectionComponent {\n    if (this.selectedMappingComponent == null) {\n      for (const c of this.sectionComponents.toArray()) {\n        if (c.selected) {\n          this.selectedMappingComponent = c;\n          break;\n        }\n      }\n    }\n    return this.selectedMappingComponent;\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ selectedField.isSource() ? 'Source' : 'Target' }}\n    \n      {{ getFormattedOutputPath(selectedField.path, false) }}\n      {{ getFormattedOutputPath(selectedField.path, true) }}\n      \n    \n    \n    \n      Add New Mapping\n    \n  \n  \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ selectedField.isSource() ? \\'Source\\' : \\'Target\\' }}          {{ getFormattedOutputPath(selectedField.path, false) }}      {{ getFormattedOutputPath(selectedField.path, true) }}                        Add New Mapping                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MappingSelectionSectionComponent.html":{"url":"components/MappingSelectionSectionComponent.html","title":"component - MappingSelectionSectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MappingSelectionSectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mapping-selection-section\n            \n\n\n\n\n            \n                templateUrl\n                ./mapping-selection-section.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getClass\n                            \n                            \n                                getFormattedOutputPath\n                            \n                            \n                                getSourceTargetLabelText\n                            \n                            \n                                handleMouseClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOddRow\n                            \n                            \n                                mapping\n                            \n                            \n                                outputNumber\n                            \n                            \n                                parentComponent\n                            \n                            \n                                selected\n                            \n                            \n                                selectedCallback\n                            \n                            \n                                selectedFieldIsSource\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOddRow\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        outputNumber\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentComponent\n                    \n                \n                \n                    \n                        Type :         Component\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedCallback\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedFieldIsSource\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFormattedOutputPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetFormattedOutputPath(path: string, nameOnly: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nameOnly\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSourceTargetLabelText\n                        \n                        \n                    \n                \n            \n            \n                \ngetSourceTargetLabelText(isSource: boolean, mapping: MappingModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMouseClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMouseClick(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { MappingModel } from '../../models/mapping.model';\n\n@Component({\n  selector: 'mapping-selection-section',\n  templateUrl: './mapping-selection-section.component.html',\n})\n\nexport class MappingSelectionSectionComponent {\n  @Input() outputNumber: number;\n  @Input() mapping: MappingModel;\n  @Input() selectedCallback: Function;\n  @Input() selected = false;\n  @Input() selectedFieldIsSource = false;\n  @Input() parentComponent: Component;\n  @Input() isOddRow = false;\n\n  getClass(): string {\n    let cssClass = 'MappingSelectionSection';\n    if (this.selected) {\n      cssClass += ' SelectedMappingSelectionSection';\n    }\n    if (this.isOddRow) {\n      cssClass += ' odd';\n    }\n    return cssClass;\n  }\n\n  getSourceTargetLabelText(isSource: boolean, mapping: MappingModel): string {\n    if (isSource) {\n      return (mapping.sourceFields.length > 0) ? 'Sources' : 'Source';\n    }\n    return (mapping.targetFields.length > 0) ? 'Targets' : 'Target';\n  }\n\n  getFormattedOutputPath(path: string, nameOnly: boolean) {\n    if (path == null) {\n      return '';\n    }\n    path = path.replace('.', '/');\n    const index: number = path.lastIndexOf('/');\n    const fieldName: string = (index === -1) ? path : path.substr(path.lastIndexOf('/') + 1);\n    path = (index === -1) ? '' : path.substr(0, path.lastIndexOf('/') + 1);\n    return nameOnly ? fieldName : path;\n  }\n\n  handleMouseClick(event: MouseEvent) {\n    this.selectedCallback(this);\n  }\n}\n\n    \n\n    \n        \n  \n    {{ outputNumber + 1 }}\n  \n  \n    \n      \n        {{ getSourceTargetLabelText(true, mapping) }}\n        \n          \n            \n              \n              {{ getFormattedOutputPath(sourceField.field.path, false) }}\n            \n            {{ getFormattedOutputPath(sourceField.field.path, true) }}\n            \n          \n        \n      \n      \n        {{ getSourceTargetLabelText(false, mapping) }}\n        \n          \n            \n              \n              {{ getFormattedOutputPath(targetField.field.path, false) }}\n            \n            {{ getFormattedOutputPath(targetField.field.path, true) }}\n            \n          \n        \n      \n    \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ outputNumber + 1 }}                      {{ getSourceTargetLabelText(true, mapping) }}                                                          {{ getFormattedOutputPath(sourceField.field.path, false) }}                        {{ getFormattedOutputPath(sourceField.field.path, true) }}                                                  {{ getSourceTargetLabelText(false, mapping) }}                                                          {{ getFormattedOutputPath(targetField.field.path, false) }}                        {{ getFormattedOutputPath(targetField.field.path, true) }}                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'MappingSelectionSectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MappingUtil.html":{"url":"classes/MappingUtil.html","title":"class - MappingUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MappingUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts\n        \n\n            \n                Description\n            \n            \n                Static routines for handling mappings.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getDocById\n                            \n                            \n                                    Private\n                                    Static\n                                isMappingStale\n                            \n                            \n                                    Static\n                                removeStaleMappings\n                            \n                            \n                                    Static\n                                updateDocumentNamespacesFromMappings\n                            \n                            \n                                    Static\n                                updateMappedFieldsFromDocuments\n                            \n                            \n                                    Static\n                                updateMappingsFromDocuments\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getDocById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDocById(documentId: string, docs: DocumentDefinition[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    documentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docs\n                                    \n                                                DocumentDefinition[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DocumentDefinition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            isMappingStale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMappingStale(mapping: MappingModel, sourceFieldPaths: string[], targetSourcePaths: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sourceFieldPaths\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetSourcePaths\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            removeStaleMappings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeStaleMappings(cfg: ConfigModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:167\n                \n            \n\n\n            \n                \n                    Check all mappings in the current context and remove if it refers to un-existing fields.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ConfigModel\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateDocumentNamespacesFromMappings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDocumentNamespacesFromMappings(cfg: ConfigModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateMappedFieldsFromDocuments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMappedFieldsFromDocuments(mapping: MappingModel, cfg: ConfigModel, docMap: any, isSource: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapping\n                                    \n                                                MappingModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docMap\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isSource\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateMappingsFromDocuments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMappingsFromDocuments(cfg: ConfigModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cfg\n                                    \n                                                ConfigModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PaddingField, DocumentDefinition } from '../models/document-definition.model';\nimport { MappingModel, MappedField } from '../models/mapping.model';\nimport { ConfigModel } from '../models/config.model';\nimport { Field } from '../models/field.model';\nimport { Multiplicity } from '../models/field-action.model';\nimport { ErrorType, ErrorScope, ErrorInfo, ErrorLevel } from '../models/error.model';\n\n/**\n * Static routines for handling mappings.\n */\nexport class MappingUtil {\n\n  static updateMappingsFromDocuments(cfg: ConfigModel): void {\n    const sourceDocMap = cfg.getDocUriMap(cfg, true);\n    const targetDocMap = cfg.getDocUriMap(cfg, false);\n\n    for (const mapping of cfg.mappings.mappings) {\n      MappingUtil.updateMappedFieldsFromDocuments(mapping, cfg, sourceDocMap, true);\n      MappingUtil.updateMappedFieldsFromDocuments(mapping, cfg, targetDocMap, false);\n    }\n    for (const doc of cfg.getAllDocs()) {\n      if (doc.id == null) {\n        doc.id = 'DOC.' + doc.name + '.' + Math.floor((Math.random() * 1000000) + 1).toString();\n      }\n    }\n  }\n\n  static updateMappedFieldsFromDocuments(mapping: MappingModel, cfg: ConfigModel, docMap: any, isSource: boolean): void {\n    let mappedFields: MappedField[] = mapping.getMappedFields(isSource);\n    let mappedFieldIndex = -1;\n\n    for (const mappedField of mappedFields) {\n      let doc: DocumentDefinition = null;\n      mappedFieldIndex += 1;\n\n      if (mappedField.parsedData.fieldIsProperty) {\n        doc = cfg.propertyDoc;\n      } else if (mappedField.parsedData.fieldIsConstant) {\n        doc = cfg.constantDoc;\n      } else {\n        if (docMap === null) {\n          docMap = cfg.getDocUriMap(cfg, isSource);\n        }\n        doc = docMap[mappedField.parsedData.parsedDocURI] as DocumentDefinition;\n        if (doc == null) {\n          if (mappedField.parsedData.parsedName != null) {\n            cfg.errorService.addError(new ErrorInfo({\n              message: `Could not find document for mapped field \\'${mappedField.parsedData.parsedName}\\' \\\nat URI ${mappedField.parsedData.parsedDocURI}`,\n              level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL}));\n          }\n          continue;\n        }\n\n        if (mappedField.parsedData.parsedDocID == null) {\n          cfg.errorService.addError(new ErrorInfo({message: `Could not find doc ID for mapped field ${mappedField.parsedData.parsedName}`,\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL}));\n          continue;\n        }\n        doc.id = mappedField.parsedData.parsedDocID;\n      }\n      mappedField.field = null;\n      if (!mappedField.parsedData.userCreated) {\n        mappedField.field = doc.getField(mappedField.parsedData.parsedPath);\n      }\n      if (mappedField.field == null) {\n        if (mappedField.parsedData.fieldIsConstant || mappedField.parsedData.fieldIsProperty) {\n          const constantField: Field = new Field();\n          constantField.value = mappedField.parsedData.parsedValue;\n          constantField.type = mappedField.parsedData.parsedValueType;\n          constantField.displayName = constantField.value;\n          constantField.name = constantField.value;\n          constantField.path = constantField.value;\n          constantField.userCreated = true;\n          mappedField.field = constantField;\n          doc.addField(constantField);\n        } else if (mappedField.parsedData.userCreated || mappedField.parsedData.parsedPath) {\n          const path: string = mappedField.parsedData.parsedPath;\n\n          mappedField.field = new Field();\n          mappedField.field.serviceObject.jsonType = 'io.atlasmap.xml.v2.XmlField';\n          mappedField.field.path = path;\n          mappedField.field.type = mappedField.parsedData.parsedValueType;\n          mappedField.field.userCreated = true;\n\n          const lastSeparator: number = path.lastIndexOf('/');\n\n          const parentPath: string = (lastSeparator > 0) ? path.substring(0, lastSeparator) : null;\n          let fieldName: string = (lastSeparator === -1) ? path : path.substring(lastSeparator + 1);\n          let namespaceAlias: string = null;\n          if (fieldName.indexOf(':') !== -1) {\n            namespaceAlias = fieldName.split(':')[0];\n            fieldName = fieldName.split(':')[1];\n          }\n\n          mappedField.field.name = fieldName;\n          mappedField.field.displayName = fieldName;\n          mappedField.field.isAttribute = (fieldName.indexOf('@') !== -1);\n          mappedField.field.namespaceAlias = namespaceAlias;\n\n          if (parentPath != null) {\n            mappedField.field.parentField = doc.getField(parentPath);\n          }\n\n          doc.addField(mappedField.field);\n        } else {\n          cfg.errorService.addError(new ErrorInfo({\n            message: `Could not find field from document for mapped field \\'${mappedField.parsedData.parsedName}\\'`,\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL,\n            object: { 'mappedField': mappedField, 'doc': doc }}));\n          return;\n        }\n      }\n\n      // Process field actions.\n      mappedField.actions = [];\n      if (mappedField.parsedData.parsedActions.length > 0) {\n\n        for (const action of mappedField.parsedData.parsedActions) {\n          let actionDefinition = null;\n          if (action.name === 'CustomAction') {\n            actionDefinition = cfg.fieldActionService.getActionDefinitionForName(action.argumentValues[0].value, Multiplicity.ONE_TO_ONE);\n          } else {\n            actionDefinition = cfg.fieldActionService.getActionDefinitionForName(action.name, Multiplicity.ONE_TO_ONE);\n          }\n          if (actionDefinition == null) {\n            cfg.errorService.addError(new ErrorInfo({message: `Could not find field action definition for action \\'${action.name}\\'`,\n              level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL}));\n            continue;\n          }\n          actionDefinition.populateFieldAction(action);\n          mappedField.actions.push(action);\n        }\n      }\n\n      const zeroBasedIndex = +mappedField.parsedData.parsedIndex;\n      mappedFields = mapping.getMappedFields(isSource);\n      if (zeroBasedIndex \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalErrorDetailComponent.html":{"url":"components/ModalErrorDetailComponent.html","title":"component - ModalErrorDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalErrorDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-error-detail\n            \n\n\n\n\n            \n                templateUrl\n                ./modal-error-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getErrors\n                            \n                            \n                                getInfos\n                            \n                            \n                                getWarnings\n                            \n                            \n                                handleAlertClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errors\n                            \n                            \n                                errorService\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errors\n                    \n                \n                \n                    \n                        Type :         ErrorInfo[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorService\n                    \n                \n                \n                    \n                        Type :         ErrorHandlerService\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInfos\n                        \n                        \n                    \n                \n            \n            \n                \ngetInfos()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWarnings\n                        \n                        \n                    \n                \n            \n            \n                \ngetWarnings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleAlertClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleAlertClick(error: ErrorInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                ErrorInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { ErrorInfo, ErrorLevel } from '../../models/error.model';\nimport { ErrorHandlerService } from '../../services/error-handler.service';\n\n@Component({\n  selector: 'modal-error-detail',\n  templateUrl: './modal-error-detail.component.html',\n})\nexport class ModalErrorDetailComponent {\n  @Input() errors: ErrorInfo[];\n  @Input() errorService: ErrorHandlerService;\n\n  getErrors(): ErrorInfo[] {\n    return this.errors.filter(e => e.level === ErrorLevel.ERROR);\n  }\n\n  getWarnings(): ErrorInfo[] {\n    return this.errors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  getInfos(): ErrorInfo[] {\n    return this.errors.filter(e => e.level === ErrorLevel.INFO);\n  }\n\n  handleAlertClick(error: ErrorInfo) {\n    if (error && error.identifier) {\n      this.errorService.removeError(error.identifier, error.scope);\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      \n    \n    {{ i.message }}\n  \n\n  \n    \n      \n    \n    \n    {{ e.message }}\n  \n\n  \n    \n      \n    \n    \n    {{ w.message }}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ i.message }}                          {{ e.message }}                          {{ w.message }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalErrorDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalErrorWindowComponent.html":{"url":"components/ModalErrorWindowComponent.html","title":"component - ModalErrorWindowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalErrorWindowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-error-window\n            \n\n\n\n\n            \n                templateUrl\n                ./modal-error-window.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                buttonText\n                            \n                            \n                                cfg\n                            \n                            \n                                confirmButtonDisabled\n                            \n                            \n                                    Public\n                                detector\n                            \n                            \n                                errors\n                            \n                            \n                                fade\n                            \n                            \n                                headerText\n                            \n                            \n                                message\n                            \n                            \n                                myTarget\n                            \n                            \n                                nestedComponent\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                dismissAll\n                            \n                            \n                                getErrors\n                            \n                            \n                                getWarnings\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                            \n                                setErrors\n                            \n                            \n                                show\n                            \n                            \n                                somethingToShow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(detector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        detector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dismissAll\n                        \n                        \n                    \n                \n            \n            \n                \ndismissAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWarnings\n                        \n                        \n                    \n                \n            \n            \n                \ngetWarnings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setErrors\n                        \n                        \n                    \n                \n            \n            \n                \nsetErrors(errors: ErrorInfo[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            somethingToShow\n                        \n                        \n                    \n                \n            \n            \n                \nsomethingToShow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Dismiss All'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cfg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConfigModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmButtonDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            detector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorInfo[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fade\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headerText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Errors and Warnings - Current Active Mapping'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('dyn_target', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nestedComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalErrorWindowValidator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component, ViewChildren, QueryList, OnInit,\n  ViewContainerRef, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../../models/config.model';\nimport { ErrorInfo, ErrorLevel } from '../../models/error.model';\n\nexport interface ModalErrorWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'modal-error-window',\n  templateUrl: './modal-error-window.component.html',\n})\n\nexport class ModalErrorWindowComponent implements OnInit {\n  cfg: ConfigModel = null;\n  message: string = null;\n  nestedComponent: ModalErrorWindowValidator;\n  confirmButtonDisabled = false;\n  headerText = 'Errors and Warnings - Current Active Mapping';\n  buttonText = 'Dismiss All';\n  visible = false;\n  fade = false;\n  errors: ErrorInfo[];\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  constructor(public detector: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.cfg = ConfigModel.getConfig();\n  }\n\n  setErrors(errors: ErrorInfo[]) {\n    this.errors = errors;\n    if (!this.errors || this.errors.length === 0) {\n      this.close();\n    }\n  }\n\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.visible = false;\n    }, 300);\n  }\n\n  somethingToShow(): boolean {\n    return (this.errors && this.errors.length > 0);\n  }\n\n  show(): void {\n    this.message = '';\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.message = 'Hello!';\n  }\n\n  getErrors(): ErrorInfo[] {\n    return this.errors.filter(e => e.level === ErrorLevel.ERROR);\n  }\n\n  getWarnings(): ErrorInfo[] {\n    return this.errors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  dismissAll(): void {\n    this.cfg.errorService.clearAllErrors();\n    this.close();\n  }\n}\n\n    \n\n    \n        \n   -->\n  \n    \n      \n        \n          \n            \n              \n            \n          \n          {{ headerText }}\n          \n             {{ getWarnings().length }}\n             | \n             {{ getErrors().length }}\n          \n        \n        \n        \n        \n          \n            \n          \n          \n        \n        \n          \n            {{ buttonText }} \n            Cancel -->\n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->                                                                                        {{ headerText }}                       {{ getWarnings().length }}             |              {{ getErrors().length }}                                                                                                                          {{ buttonText }}             Cancel -->                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalErrorWindowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalErrorWindowValidator.html":{"url":"interfaces/ModalErrorWindowValidator.html","title":"interface - ModalErrorWindowValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModalErrorWindowValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getInitialFocusElement\n                                \n                                \n                                    isDataValid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Component, ViewChildren, QueryList, OnInit,\n  ViewContainerRef, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../../models/config.model';\nimport { ErrorInfo, ErrorLevel } from '../../models/error.model';\n\nexport interface ModalErrorWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'modal-error-window',\n  templateUrl: './modal-error-window.component.html',\n})\n\nexport class ModalErrorWindowComponent implements OnInit {\n  cfg: ConfigModel = null;\n  message: string = null;\n  nestedComponent: ModalErrorWindowValidator;\n  confirmButtonDisabled = false;\n  headerText = 'Errors and Warnings - Current Active Mapping';\n  buttonText = 'Dismiss All';\n  visible = false;\n  fade = false;\n  errors: ErrorInfo[];\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  constructor(public detector: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n    this.cfg = ConfigModel.getConfig();\n  }\n\n  setErrors(errors: ErrorInfo[]) {\n    this.errors = errors;\n    if (!this.errors || this.errors.length === 0) {\n      this.close();\n    }\n  }\n\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.visible = false;\n    }, 300);\n  }\n\n  somethingToShow(): boolean {\n    return (this.errors && this.errors.length > 0);\n  }\n\n  show(): void {\n    this.message = '';\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.message = 'Hello!';\n  }\n\n  getErrors(): ErrorInfo[] {\n    return this.errors.filter(e => e.level === ErrorLevel.ERROR);\n  }\n\n  getWarnings(): ErrorInfo[] {\n    return this.errors.filter(e => e.level === ErrorLevel.WARN);\n  }\n\n  dismissAll(): void {\n    this.cfg.errorService.clearAllErrors();\n    this.close();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalWindowComponent.html":{"url":"components/ModalWindowComponent.html","title":"component - ModalWindowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalWindowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal-window\n            \n\n\n\n\n            \n                templateUrl\n                ./modal-window.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                componentLoaded\n                            \n                            \n                                confirmButtonDisabled\n                            \n                            \n                                confirmButtonText\n                            \n                            \n                                    Public\n                                detector\n                            \n                            \n                                errors\n                            \n                            \n                                fade\n                            \n                            \n                                message\n                            \n                            \n                                    Private\n                                modalErrorSubject\n                            \n                            \n                                    Private\n                                modalErrorSubscription\n                            \n                            \n                                myTarget\n                            \n                            \n                                    Private\n                                myTargetChangesSubscription\n                            \n                            \n                                nestedComponent\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buttonClicked\n                            \n                            \n                                close\n                            \n                            \n                                closeClicked\n                            \n                            \n                                loadComponent\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                reset\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelButtonHandler\n                            \n                            \n                                cfg\n                            \n                            \n                                headerText\n                            \n                            \n                                modalErrorWindow\n                            \n                            \n                                nestedComponentInitializedCallback\n                            \n                            \n                                nestedComponentType\n                            \n                            \n                                okButtonHandler\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, detector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:77\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cancelButtonHandler\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        headerText\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalErrorWindow\n                    \n                \n                \n                    \n                        Type :         ModalErrorWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nestedComponentInitializedCallback\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        nestedComponentType\n                    \n                \n                \n                    \n                        Type :     Type\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:57\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        okButtonHandler\n                    \n                \n                \n                    \n                        Type :         Function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:59\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            buttonClicked\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buttonClicked(okClicked: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    okClicked\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeClicked\n                        \n                        \n                    \n                \n            \n            \n                \ncloseClicked(event: MouseEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadComponent\n                        \n                        \n                    \n                \n            \n            \n                \nloadComponent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            show\n                        \n                        \n                    \n                \n            \n            \n                \nshow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            componentLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmButtonDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmButtonText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'OK'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            detector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorInfo[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fade\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            modalErrorSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            modalErrorSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('dyn_target', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            myTargetChangesSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nestedComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowValidator\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:68\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component, Input, ViewChildren, QueryList, OnDestroy,\n  ViewContainerRef, Type, ComponentFactoryResolver, AfterViewInit, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../../models/config.model';\nimport { Subscription, Subject } from 'rxjs';\nimport { ModalErrorWindowComponent } from './modal-error-window.component';\nimport { ErrorInfo } from '../../models/error.model';\n\n// source: http://www.w3schools.com/howto/howto_css_modals.asp\n\nexport interface ModalWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'empty-modal-body',\n  template: '',\n})\n\nexport class EmptyModalBodyComponent implements ModalWindowValidator {\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n}\n\n@Component({\n  selector: 'modal-window',\n  templateUrl: './modal-window.component.html',\n})\n\nexport class ModalWindowComponent implements AfterViewInit, OnDestroy {\n  @Input() headerText = '';\n  @Input() nestedComponentType: Type;\n  @Input() nestedComponentInitializedCallback: Function;\n  @Input() okButtonHandler: Function;\n  @Input() cancelButtonHandler: Function;\n  @Input() cfg: ConfigModel;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  message: string = null;\n  nestedComponent: ModalWindowValidator;\n  confirmButtonDisabled = false;\n  confirmButtonText = 'OK';\n  visible = false;\n  fade = false;\n  errors: ErrorInfo[] = [];\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  private componentLoaded = false;\n  private myTargetChangesSubscription: Subscription;\n  private modalErrorSubject: Subject;\n  private modalErrorSubscription: Subscription;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, public detector: ChangeDetectorRef) { }\n\n  ngAfterViewInit() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n\n    // from: http://stackoverflow.com/questions/40811809/add-component-dynamically-inside-an-ngif\n    this.myTargetChangesSubscription = this.myTarget.changes.subscribe(changes => {\n      setTimeout(() => {\n        if (!this.componentLoaded && this.visible && this.myTarget && (this.myTarget.toArray().length)) {\n          this.loadComponent();\n        }\n        setTimeout(() => {\n          this.detector.detectChanges();\n        }, 10);\n      }, 10);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n    if (this.modalErrorSubscription) {\n      this.modalErrorSubscription.unsubscribe();\n    }\n    if (this.modalErrorSubject) {\n      this.modalErrorSubject.complete();\n    }\n  }\n\n  loadComponent(): void {\n    const viewContainerRef: ViewContainerRef = this.myTarget.toArray()[0];\n    viewContainerRef.clear();\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.nestedComponentType);\n    this.nestedComponent = viewContainerRef.createComponent(componentFactory).instance as ModalWindowValidator;\n    if (this.nestedComponentInitializedCallback != null) {\n      this.nestedComponentInitializedCallback(this);\n    }\n    const initialFocusElement = this.nestedComponent.getInitialFocusElement();\n    if (initialFocusElement) {\n      initialFocusElement.nativeElement.focus();\n    }\n    if (this.modalErrorSubject && !this.modalErrorSubject.closed) {\n      this.modalErrorSubject.complete();\n    }\n    this.modalErrorSubject = this.cfg.errorService.createFormErrorChannel();\n    this.modalErrorSubscription = this.modalErrorSubject.subscribe((errors: ErrorInfo[]) => {\n      this.errors = errors;\n    });\n  }\n\n  closeClicked(event: MouseEvent): void { this.buttonClicked(false); }\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.modalErrorSubject.complete();\n      this.errors = [];\n      this.visible = false;\n    }, 300);\n  }\n  show(): void {\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.nestedComponentInitializedCallback = null;\n    this.confirmButtonDisabled = false;\n    this.confirmButtonText = 'OK';\n    this.message = '';\n    this.headerText = '';\n    this.componentLoaded = false;\n    this.nestedComponentType = EmptyModalBodyComponent;\n    this.okButtonHandler = null;\n    this.cancelButtonHandler = null;\n  }\n\n  private buttonClicked(okClicked: boolean): void {\n    if (okClicked) {\n      if (this.nestedComponent != null) {\n        this.cfg.errorService.clearFormErrors();\n        if (!(this.nestedComponent.isDataValid())) {\n          return;\n        }\n      }\n      if (this.okButtonHandler) {\n        this.okButtonHandler(this);\n      }\n    } else { // cancel clicked\n      if (this.cancelButtonHandler) {\n        this.cancelButtonHandler(this);\n      }\n    }\n    this.close();\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          \n            \n              \n            \n          \n          {{ headerText }}\n        \n        \n          \n        \n        \n          {{ message }}\n          \n        \n        \n          \n            {{ confirmButtonText }} \n            Cancel\n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                          {{ headerText }}                                                    {{ message }}                                                {{ confirmButtonText }}             Cancel                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalWindowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalWindowValidator.html":{"url":"interfaces/ModalWindowValidator.html","title":"interface - ModalWindowValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModalWindowValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getInitialFocusElement\n                                \n                                \n                                    isDataValid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Component, Input, ViewChildren, QueryList, OnDestroy,\n  ViewContainerRef, Type, ComponentFactoryResolver, AfterViewInit, ChangeDetectorRef, ElementRef\n} from '@angular/core';\nimport { ConfigModel } from '../../models/config.model';\nimport { Subscription, Subject } from 'rxjs';\nimport { ModalErrorWindowComponent } from './modal-error-window.component';\nimport { ErrorInfo } from '../../models/error.model';\n\n// source: http://www.w3schools.com/howto/howto_css_modals.asp\n\nexport interface ModalWindowValidator {\n  isDataValid(): boolean;\n  getInitialFocusElement(): ElementRef;\n}\n\n@Component({\n  selector: 'empty-modal-body',\n  template: '',\n})\n\nexport class EmptyModalBodyComponent implements ModalWindowValidator {\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return undefined;\n  }\n\n}\n\n@Component({\n  selector: 'modal-window',\n  templateUrl: './modal-window.component.html',\n})\n\nexport class ModalWindowComponent implements AfterViewInit, OnDestroy {\n  @Input() headerText = '';\n  @Input() nestedComponentType: Type;\n  @Input() nestedComponentInitializedCallback: Function;\n  @Input() okButtonHandler: Function;\n  @Input() cancelButtonHandler: Function;\n  @Input() cfg: ConfigModel;\n  @Input() modalErrorWindow: ModalErrorWindowComponent;\n\n  message: string = null;\n  nestedComponent: ModalWindowValidator;\n  confirmButtonDisabled = false;\n  confirmButtonText = 'OK';\n  visible = false;\n  fade = false;\n  errors: ErrorInfo[] = [];\n\n  @ViewChildren('dyn_target', { read: ViewContainerRef }) myTarget: QueryList;\n\n  private componentLoaded = false;\n  private myTargetChangesSubscription: Subscription;\n  private modalErrorSubject: Subject;\n  private modalErrorSubscription: Subscription;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, public detector: ChangeDetectorRef) { }\n\n  ngAfterViewInit() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n\n    // from: http://stackoverflow.com/questions/40811809/add-component-dynamically-inside-an-ngif\n    this.myTargetChangesSubscription = this.myTarget.changes.subscribe(changes => {\n      setTimeout(() => {\n        if (!this.componentLoaded && this.visible && this.myTarget && (this.myTarget.toArray().length)) {\n          this.loadComponent();\n        }\n        setTimeout(() => {\n          this.detector.detectChanges();\n        }, 10);\n      }, 10);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.myTargetChangesSubscription) {\n      this.myTargetChangesSubscription.unsubscribe();\n    }\n    if (this.modalErrorSubscription) {\n      this.modalErrorSubscription.unsubscribe();\n    }\n    if (this.modalErrorSubject) {\n      this.modalErrorSubject.complete();\n    }\n  }\n\n  loadComponent(): void {\n    const viewContainerRef: ViewContainerRef = this.myTarget.toArray()[0];\n    viewContainerRef.clear();\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.nestedComponentType);\n    this.nestedComponent = viewContainerRef.createComponent(componentFactory).instance as ModalWindowValidator;\n    if (this.nestedComponentInitializedCallback != null) {\n      this.nestedComponentInitializedCallback(this);\n    }\n    const initialFocusElement = this.nestedComponent.getInitialFocusElement();\n    if (initialFocusElement) {\n      initialFocusElement.nativeElement.focus();\n    }\n    if (this.modalErrorSubject && !this.modalErrorSubject.closed) {\n      this.modalErrorSubject.complete();\n    }\n    this.modalErrorSubject = this.cfg.errorService.createFormErrorChannel();\n    this.modalErrorSubscription = this.modalErrorSubject.subscribe((errors: ErrorInfo[]) => {\n      this.errors = errors;\n    });\n  }\n\n  closeClicked(event: MouseEvent): void { this.buttonClicked(false); }\n  close(): void {\n    this.fade = false;\n    setTimeout(() => {\n      this.modalErrorSubject.complete();\n      this.errors = [];\n      this.visible = false;\n    }, 300);\n  }\n  show(): void {\n    this.visible = true;\n    setTimeout(() => {\n      this.fade = true;\n    }, 100);\n  }\n\n  reset(): void {\n    this.nestedComponentInitializedCallback = null;\n    this.confirmButtonDisabled = false;\n    this.confirmButtonText = 'OK';\n    this.message = '';\n    this.headerText = '';\n    this.componentLoaded = false;\n    this.nestedComponentType = EmptyModalBodyComponent;\n    this.okButtonHandler = null;\n    this.cancelButtonHandler = null;\n  }\n\n  private buttonClicked(okClicked: boolean): void {\n    if (okClicked) {\n      if (this.nestedComponent != null) {\n        this.cfg.errorService.clearFormErrors();\n        if (!(this.nestedComponent.isDataValid())) {\n          return;\n        }\n      }\n      if (this.okButtonHandler) {\n        this.okButtonHandler(this);\n      }\n    } else { // cancel clicked\n      if (this.cancelButtonHandler) {\n        this.cancelButtonHandler(this);\n      }\n    }\n    this.close();\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NamespaceEditComponent.html":{"url":"components/NamespaceEditComponent.html","title":"component - NamespaceEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NamespaceEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                namespace-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./namespace-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                namespace\n                            \n                            \n                                targetEnabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                targetToggled\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(namespace: NamespaceModel, namespaces: NamespaceModel[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    namespaces\n                                    \n                                                NamespaceModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            targetToggled\n                        \n                        \n                    \n                \n            \n            \n                \ntargetToggled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('namespace')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel\n\n                        \n                    \n                    \n                        \n                            Default value : new NamespaceModel()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetEnabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { NamespaceModel } from '../../models/document-definition.model';\nimport { ModalWindowValidator } from '../modal/modal-window.component';\n\n@Component({\n  selector: 'namespace-edit',\n  templateUrl: './namespace-edit.component.html',\n})\n\nexport class NamespaceEditComponent implements ModalWindowValidator {\n  namespace: NamespaceModel = new NamespaceModel();\n  targetEnabled = true;\n  @ViewChild('namespace') private focusEl: ElementRef;\n\n  initialize(namespace: NamespaceModel, namespaces: NamespaceModel[]): void {\n    this.namespace = (namespace == null) ? new NamespaceModel() : namespace.copy();\n    if (!namespace.isTarget) {\n      for (const ns of namespaces) {\n        if (ns.isTarget) {\n          this.targetEnabled = false;\n          break;\n        }\n      }\n    }\n  }\n\n  targetToggled(): void {\n    this.namespace.isTarget = !this.namespace.isTarget;\n    this.namespace.alias = this.namespace.isTarget ? 'tns' : '';\n  }\n\n  isDataValid(): boolean {\n    const configModel: ConfigModel = ConfigModel.getConfig();\n    let dataIsValid: boolean = configModel.errorService.isRequiredFieldValid(this.namespace.alias, 'Alias');\n    dataIsValid = configModel.errorService.isRequiredFieldValid(this.namespace.uri, 'URI') && dataIsValid;\n    return dataIsValid;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n}\n\n    \n\n    \n        \n  \n    Alias\n    \n  \n  \n    URI\n    \n  \n  \n    Location URI\n    \n  \n  \n    Type\n    \n    Target Namespace\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Alias            URI            Location URI            Type        Target Namespace      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'NamespaceEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NamespaceListComponent.html":{"url":"components/NamespaceListComponent.html","title":"component - NamespaceListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NamespaceListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                namespace-list\n            \n\n\n\n\n            \n                templateUrl\n                ./namespace-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                searchFilter\n                            \n                            \n                                searchMode\n                            \n                            \n                                    Private\n                                searchResults\n                            \n                            \n                                    Private\n                                selectedNamespace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEditNamespace\n                            \n                            \n                                getItemsCSSClass\n                            \n                            \n                                getNamespaceCSSClass\n                            \n                            \n                                getNamespaces\n                            \n                            \n                                getRowsCSSClass\n                            \n                            \n                                getRowTitleCSSClass\n                            \n                            \n                                getSearchIconCSSClass\n                            \n                            \n                                namespaceMatchesSearch\n                            \n                            \n                                removeNamespace\n                            \n                            \n                                    Private\n                                search\n                            \n                            \n                                searchResultsVisible\n                            \n                            \n                                selectNamespace\n                            \n                            \n                                toggleSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addEditNamespace\n                        \n                        \n                    \n                \n            \n            \n                \naddEditNamespace(ns: NamespaceModel, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ns\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItemsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetItemsCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNamespaceCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetNamespaceCSSClass(namespace: NamespaceModel, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    namespace\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNamespaces\n                        \n                        \n                    \n                \n            \n            \n                \ngetNamespaces()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         NamespaceModel[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRowsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetRowsCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRowTitleCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetRowTitleCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSearchIconCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetSearchIconCSSClass()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            namespaceMatchesSearch\n                        \n                        \n                    \n                \n            \n            \n                \nnamespaceMatchesSearch(ns: NamespaceModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ns\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeNamespace\n                        \n                        \n                    \n                \n            \n            \n                \nremoveNamespace(ns: NamespaceModel, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ns\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(searchFilter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchFilter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchResultsVisible\n                        \n                        \n                    \n                \n            \n            \n                \nsearchResultsVisible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectNamespace\n                        \n                        \n                    \n                \n            \n            \n                \nselectNamespace(ns: NamespaceModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ns\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSearch\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectedNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { NamespaceModel } from '../../models/document-definition.model';\nimport { NamespaceEditComponent } from '../app/namespace-edit.component';\nimport { ModalWindowComponent } from '../modal/modal-window.component';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\n\n@Component({\n  selector: 'namespace-list',\n  templateUrl: './namespace-list.component.html',\n})\n\nexport class NamespaceListComponent {\n  @Input() cfg: ConfigModel;\n  @Input() modalWindow: ModalWindowComponent;\n\n  searchMode = false;\n  private searchFilter = '';\n  private selectedNamespace: NamespaceModel = null;\n  private searchResults: NamespaceModel[] = [];\n\n  getNamespaceCSSClass(namespace: NamespaceModel, index: number): string {\n    let cssClass = 'item itemRow ';\n    cssClass += (index % 2 === 1) ? ' even' : '';\n    if (namespace === this.selectedNamespace) {\n      cssClass += ' active';\n    }\n    return cssClass;\n  }\n\n  searchResultsVisible(): boolean {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      return false;\n    }\n    return (this.searchResults.length === 0);\n  }\n\n  selectNamespace(ns: NamespaceModel): void {\n    this.selectedNamespace = (this.selectedNamespace === ns) ? null : ns;\n  }\n\n  getItemsCSSClass(): string {\n    return 'items namespaces' + (this.searchMode ? ' searchShown' : '');\n  }\n\n  getRowTitleCSSClass(): string {\n    return this.searchMode ? 'rowTitles searchShown' : 'rowTitles';\n  }\n\n  getRowsCSSClass(): string {\n    return this.searchMode ? 'rows searchShown' : 'rows';\n  }\n\n  getNamespaces(): NamespaceModel[] {\n    return this.searchMode ? this.searchResults : this.cfg.getFirstXmlDoc(false).namespaces;\n  }\n\n  addEditNamespace(ns: NamespaceModel, event: any): void {\n    event.stopPropagation();\n    const isEditMode = (ns != null);\n    if (!isEditMode) {\n      ns = new NamespaceModel();\n      ns.createdByUser = true;\n    }\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Save';\n    this.modalWindow.headerText = (ns == null) ? 'Add Namespace' : 'Edit Namespace';\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      const namespaceComponent: NamespaceEditComponent = mw.nestedComponent as NamespaceEditComponent;\n      namespaceComponent.initialize(ns, this.cfg.getFirstXmlDoc(false).namespaces);\n    };\n    this.modalWindow.nestedComponentType = NamespaceEditComponent;\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      const namespaceComponent: NamespaceEditComponent = mw.nestedComponent as NamespaceEditComponent;\n      const newNamespace: NamespaceModel = namespaceComponent.namespace;\n      if (isEditMode) {\n        ns.copyFrom(newNamespace);\n      } else {\n        this.cfg.getFirstXmlDoc(false).namespaces.push(newNamespace);\n      }\n      this.search(this.searchFilter);\n      this.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  toggleSearch(): void {\n    this.searchMode = !this.searchMode;\n    this.search(this.searchFilter);\n  }\n\n  getSearchIconCSSClass(): string {\n    const cssClass = 'fa fa-search searchBoxIcon link';\n    return this.searchMode ? (cssClass + ' selectedIcon') : cssClass;\n  }\n\n  namespaceMatchesSearch(ns: NamespaceModel): boolean {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      return true;\n    }\n    const filter: string = this.searchFilter.toLowerCase();\n    if (ns.isTarget && ('tns'.includes(filter) || 'target'.includes(filter))) {\n      return true;\n    }\n    if (ns.alias != null && ns.alias.toLowerCase().includes(filter)) {\n      return true;\n    }\n    if (ns.uri != null && ns.uri.toLowerCase().includes(filter)) {\n      return true;\n    }\n    if (ns.locationUri != null && ns.locationUri.toLowerCase().includes(filter)) {\n      return true;\n    }\n    return false;\n  }\n\n  removeNamespace(ns: NamespaceModel, event: any): void {\n    event.stopPropagation();\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Remove';\n    this.modalWindow.headerText = 'Remove Namespace?';\n    this.modalWindow.message = 'Are you sure you want to remove \\'' + ns.alias + '\\' ?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      DataMapperUtil.removeItemFromArray(ns, this.cfg.getFirstXmlDoc(false).namespaces);\n      this.selectedNamespace = null;\n      this.search(this.searchFilter);\n    };\n    this.modalWindow.show();\n  }\n\n  private search(searchFilter: string): void {\n    if (!this.searchMode || this.searchFilter == null || this.searchFilter === '') {\n      this.searchResults = [].concat(this.cfg.getFirstXmlDoc(false).namespaces);\n      return;\n    }\n\n    this.searchFilter = searchFilter;\n    this.searchResults = [];\n    for (const ns of this.cfg.getFirstXmlDoc(false).namespaces) {\n      if (this.namespaceMatchesSearch(ns)) {\n        this.searchResults.push(ns);\n      } else if (this.selectedNamespace != null) {\n        this.selectNamespace = null;\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          Namespaces for {{ cfg.getFirstXmlDoc(false).name }}\n        \n        \n        \n        \n      \n      \n        \n          \n          \n          \n        \n        \n          Alias\n          Uri\n          Location URI\n          \n        \n        \n      \n    \n    \n      \n        \n          {{ namespace.isTarget ? 'Target (tns)' : namespace.alias }}\n          {{ namespace.uri }}\n          {{ namespace.locationUri }}\n          \n            \n            \n          \n          \n        \n      \n      \n        No search results.\n        \n      \n    \n    {{ getNamespaces().length }} namespaces\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Namespaces for {{ cfg.getFirstXmlDoc(false).name }}                                                                                                            Alias          Uri          Location URI                                                                {{ namespace.isTarget ? \\'Target (tns)\\' : namespace.alias }}          {{ namespace.uri }}          {{ namespace.locationUri }}                                                                                  No search results.                      {{ getNamespaces().length }} namespaces      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'NamespaceListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NamespaceModel.html":{"url":"classes/NamespaceModel.html","title":"class - NamespaceModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NamespaceModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                createdByUser\n                            \n                            \n                                isTarget\n                            \n                            \n                                locationUri\n                            \n                            \n                                    Private\n                                    Static\n                                unqualifiedNamespace\n                            \n                            \n                                uri\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                copyFrom\n                            \n                            \n                                getPrettyLabel\n                            \n                            \n                                    Static\n                                getUnqualifiedNamespace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdByUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            locationUri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            unqualifiedNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NamespaceModel\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:27\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         NamespaceModel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyFrom\n                        \n                        \n                    \n                \n            \n            \n                \ncopyFrom(that: NamespaceModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    that\n                                    \n                                                NamespaceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPrettyLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetPrettyLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getUnqualifiedNamespace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnqualifiedNamespace()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         NamespaceModel\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Field } from './field.model';\nimport { DocumentType, InspectionType } from '../common/config.types';\nimport { MappingDefinition } from '../models/mapping-definition.model';\nimport { DataMapperUtil } from '../common/data-mapper-util';\nimport { DocumentInitializationModel } from '../models/config.model';\n\nexport class NamespaceModel {\n  private static unqualifiedNamespace: NamespaceModel = null;\n\n  alias: string = null;\n  uri: string = null;\n  locationUri: string = null;\n  createdByUser = false;\n  isTarget = false;\n\n  static getUnqualifiedNamespace(): NamespaceModel {\n    if (NamespaceModel.unqualifiedNamespace == null) {\n      const ns: NamespaceModel = new NamespaceModel();\n      ns.alias = 'Unqualified';\n      NamespaceModel.unqualifiedNamespace = ns;\n    }\n    return NamespaceModel.unqualifiedNamespace;\n  }\n\n  getPrettyLabel(): string {\n    if (this === NamespaceModel.getUnqualifiedNamespace()) {\n      return this.alias;\n    }\n    return (this.isTarget ? 'Target' : this.alias)\n      + ' [' + (this.uri == null ? 'NO URI' : this.uri) + ']';\n  }\n\n  copy(): NamespaceModel {\n    const copy: NamespaceModel = new NamespaceModel();\n    Object.assign(copy, this);\n    return copy;\n  }\n\n  copyFrom(that: NamespaceModel): void {\n    Object.assign(this, that);\n  }\n}\n\nexport class PaddingField extends Field {\n  constructor(private _isSource: boolean) {\n    super();\n    this.name = '';\n    this.classIdentifier = '';\n    this.type = '';\n    this.displayName = '';\n    this.path = '';\n  }\n\n  isSource(): boolean {\n    return this._isSource;\n  }\n\n}\n\nexport class DocumentDefinition {\n  private static padField: Field = null;\n\n  LEFT_BRACKET = '\\x5b';\n  RIGHT_BRACKET = '\\x5d';\n\n  initModel: DocumentInitializationModel;\n  id: string;\n  _type: DocumentType;\n  name: string;\n  description: string;\n  uri: string;\n  inspectionType: InspectionType;\n  inspectionSource: string;\n  inspectionResult: string;\n  isSource: boolean;\n  isPropertyOrConstant: boolean;\n  selectedRoot: string;\n\n  classPath: string;\n  initialized = false;\n  errorOccurred = false;\n  pathSeparator = '/';\n  fields: Field[] = [];\n  allFields: Field[] = [];\n  terminalFields: Field[] = [];\n  complexFieldsByClassIdentifier: { [key: string]: Field; } = {};\n  enumFieldsByClassIdentifier: { [key: string]: Field; } = {};\n  fieldsByPath: { [key: string]: Field; } = {};\n  fieldPaths: string[] = [];\n  showFields = true;\n  visibleInCurrentDocumentSearch = true;\n  namespaces: NamespaceModel[] = [];\n  characterEncoding: string = null;\n  locale: string = null;\n\n  set type(type: DocumentType) {\n    this._type = type;\n    this.isPropertyOrConstant = type === DocumentType.CONSTANT || type === DocumentType.PROPERTY;\n  }\n\n  get type(): DocumentType {\n    return this._type;\n  }\n\n  getComplexField(classIdentifier: string): Field {\n    return this.complexFieldsByClassIdentifier[classIdentifier];\n  }\n\n  getEnumField(classIdentifier: string): Field {\n    return this.enumFieldsByClassIdentifier[classIdentifier];\n  }\n\n  getAllFields(): Field[] {\n    return [].concat(this.allFields);\n  }\n\n  /**\n   * Return true if the specified field name already exists in the specified document definition,\n   * false otherwise.\n   *\n   * @param targetField\n   * @param targetFieldDocDefType\n   */\n  fieldExists(targetField: Field, targetFieldDocDefType: DocumentType): boolean {\n\n    for (const field of this.getAllFields()) {\n      if (field.name === targetField.name && field.docDef.type === targetFieldDocDefType) {\n          return true;\n      }\n    }\n    return false;\n  }\n\n  isFieldsExist(fields: Field[]): boolean {\n    if (fields == null || fields.length === 0) {\n      return true;\n    }\n    const foundFields: Field[] = this.getFields(Field.getFieldPaths(fields));\n    return (foundFields != null) && (fields.length === foundFields.length);\n  }\n\n  getFields(fieldPaths: string[]): Field[] {\n    const fields: Field[] = [];\n    for (const fieldPath of fieldPaths) {\n      const field: Field = this.getField(fieldPath);\n      if (field != null) {\n        fields.push(field);\n      }\n    }\n    return fields;\n  }\n\n  getName(showTypes: boolean): string {\n    let name = this.name;\n    if (showTypes && !this.isPropertyOrConstant) {\n      const type = this.type;\n      if (type) {\n        name += ' (' + type + ')';\n      }\n    }\n    return name;\n  }\n\n  getNamespaceForAlias(alias: string): NamespaceModel {\n    for (const ns of this.namespaces) {\n      if (alias === ns.alias) {\n        return ns;\n      }\n    }\n    return null;\n  }\n\n  getField(fieldPath: string): Field {\n    if (!fieldPath) {\n      return null;\n    }\n    let field: Field = this.fieldsByPath[fieldPath];\n    // if we can't find the field we're looking for, find parent fields and populate their children\n    const pathSeparator: string = this.pathSeparator;\n    let originalPath: string = fieldPath;\n    // strip beginning path separator from path\n    if (originalPath != null && originalPath.indexOf(pathSeparator) === 0) {\n      originalPath = originalPath.substring(1);\n    }\n    if (field == null && (originalPath.indexOf(pathSeparator) !== -1)) {\n      let currentParentPath = '';\n      while (originalPath.indexOf(pathSeparator) !== -1) {\n        const currentPathSection: string = originalPath.substr(0, originalPath.indexOf(pathSeparator));\n        currentParentPath += pathSeparator + currentPathSection;\n        const parentField: Field = this.fieldsByPath[currentParentPath];\n        if (parentField == null) {\n          if (originalPath.indexOf(pathSeparator) !== -1) {\n            originalPath = originalPath.substr(originalPath.indexOf(pathSeparator) + 1);\n            continue;\n          } else {\n            break;\n          }\n          // https://github.com/atlasmap/atlasmap/issues/1128\n          // throw new Error('Could not populate parent field with path \\''\n          //  + currentParentPath + '\\' (for: ' + fieldPath + ')');\n        }\n        this.populateChildren(parentField);\n        if (originalPath.indexOf(pathSeparator) !== -1) {\n          originalPath = originalPath.substr(originalPath.indexOf(pathSeparator) + 1);\n        }\n      }\n      field = this.fieldsByPath[fieldPath];\n    }\n    return field;\n  }\n\n  getTerminalFields(): Field[] {\n    return [].concat(this.terminalFields);\n  }\n\n  initializeFromFields(): void {\n    if (this.type === DocumentType.JAVA) {\n      this.prepareComplexFields();\n    }\n\n    Field.alphabetizeFields(this.fields);\n\n    for (const field of this.fields) {\n      this.populateFieldParentPaths(field, null, 0);\n      this.populateFieldData(field);\n    }\n\n    this.fieldPaths.sort();\n    this.initialized = true;\n  }\n\n  updateField(field: Field, oldPath: string): void {\n    Field.alphabetizeFields(this.fields);\n    if (!field.parentField || this.isPropertyOrConstant) {\n      this.populateFieldParentPaths(field, null, 0);\n    } else {\n      const pathSeparator: string = this.pathSeparator;\n      this.populateFieldParentPaths(field, field.parentField.path + pathSeparator,\n        field.parentField.fieldDepth + 1);\n    }\n    if (oldPath != null && this.fieldsByPath[oldPath] != null) {\n      delete (this.fieldsByPath[oldPath]);\n    }\n    DataMapperUtil.removeItemFromArray(field.path, this.fieldPaths);\n    this.populateFieldData(field);\n    this.fieldPaths.sort();\n  }\n\n  addField(field: Field): void {\n    if (!field.parentField || this.isPropertyOrConstant) {\n      this.fields.push(field);\n      Field.alphabetizeFields(this.fields);\n      this.populateFieldParentPaths(field, null, 0);\n    } else {\n      this.populateChildren(field.parentField);\n      field.parentField.children.push(field);\n      Field.alphabetizeFields(field.parentField.children);\n      const pathSeparator: string = this.pathSeparator;\n      this.populateFieldParentPaths(field, field.parentField.path + pathSeparator,\n        field.parentField.fieldDepth + 1);\n    }\n    this.populateFieldData(field);\n    this.fieldPaths.sort();\n  }\n\n  /**\n   * Return true if the passed field is terminal or children are detected, false otherwise.\n   * @param field - target field\n   */\n  populateChildren(field: Field): boolean {\n\n    // populate complex fields\n    if (field.isTerminal() || (field.children.length > 0)) {\n      return true;\n    }\n\n    let cachedField = this.getComplexField(field.classIdentifier);\n    if (cachedField == null) {\n      return false;\n    }\n\n    // copy cached field children\n    cachedField = cachedField.copy();\n    const pathSeparator: string = this.pathSeparator;\n    for (let childField of cachedField.children) {\n      childField = childField.copy();\n      childField.parentField = field;\n      this.populateFieldParentPaths(childField, field.path + pathSeparator, field.fieldDepth + 1);\n      this.populateFieldData(childField);\n      field.children.push(childField);\n    }\n\n    if (field.children.length > 0) {\n      this.fieldPaths.sort();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Clear all fields in this document.\n   */\n  clearFields(): void {\n    this.initialized = false;\n    this.fields = [];\n    this.allFields = [];\n    this.terminalFields = [];\n    this.fieldPaths = [];\n    this.namespaces = [];\n    this.fieldsByPath = {};\n    this.complexFieldsByClassIdentifier = {};\n    this.enumFieldsByClassIdentifier = {};\n  }\n\n  /**\n   * Remove the specified field from this document definition.\n   *\n   * @param field\n   */\n  removeField(field: Field): void {\n    if (field == null) {\n      return;\n    }\n    DataMapperUtil.removeItemFromArray(field, this.fields);\n    DataMapperUtil.removeItemFromArray(field, this.allFields);\n    DataMapperUtil.removeItemFromArray(field, this.terminalFields);\n    DataMapperUtil.removeItemFromArray(field.path, this.fieldPaths);\n    delete (this.fieldsByPath[field.path]);\n    if (field.parentField != null) {\n      DataMapperUtil.removeItemFromArray(field, field.parentField.children);\n    }\n  }\n\n  updateFromMappings(mappingDefinition: MappingDefinition): void {\n\n    if (mappingDefinition === null) {\n      return;\n    }\n\n    for (const field of this.allFields) {\n      field.partOfMapping = false;\n      field.hasUnmappedChildren = false;\n      field.partOfTransformation = false;\n    }\n\n    // FIXME: some of this work is happening N times for N source/target docs, should only happen once.\n    for (const mapping of mappingDefinition.getAllMappings(true)) {\n      const mappingIsActive: boolean = (mapping === mappingDefinition.activeMapping);\n\n      for (const field of mapping.getAllFields()) {\n        let parentField = field;\n        const partOfTransformation = mapping.getMappedFieldForField(field).actions.length > 0;\n        while (parentField != null) {\n          parentField.partOfMapping = true;\n          parentField.partOfTransformation = parentField.partOfTransformation || partOfTransformation;\n          parentField = parentField.parentField;\n        }\n      }\n    }\n    for (const field of this.allFields) {\n      field.hasUnmappedChildren = Field.fieldHasUnmappedChild(field);\n    }\n  }\n\n  private populateFieldParentPaths(field: Field, parentPath: string, depth: number): void {\n    if (parentPath == null) {\n      parentPath = this.pathSeparator;\n    }\n    field.path = parentPath + field.getNameWithNamespace();\n    if (field.isCollection) {\n      field.path += field.isArray ? (this.LEFT_BRACKET + this.RIGHT_BRACKET) : '<>';\n    }\n    if (field.isAttribute) {\n      field.path = parentPath += '@' + field.name;\n    }\n    if (field.serviceObject) {\n      field.serviceObject.path = field.path;\n    }\n    field.fieldDepth = depth;\n    const pathSeparator: string = this.pathSeparator;\n    for (const childField of field.children) {\n      childField.parentField = field;\n      this.populateFieldParentPaths(childField, field.path + pathSeparator, depth + 1);\n    }\n  }\n\n  private populateFieldData(field: Field): void {\n    field.docDef = this;\n    this.fieldPaths.push(field.path);\n    this.allFields.push(field);\n    this.fieldsByPath[field.path] = field;\n    if (field.enumeration) {\n      this.enumFieldsByClassIdentifier[field.classIdentifier] = field;\n    }\n    if (field.isTerminal()) {\n      this.terminalFields.push(field);\n    } else {\n      for (const childField of field.children) {\n        this.populateFieldData(childField);\n      }\n    }\n  }\n\n  private prepareComplexFields(): void {\n    const fields: Field[] = this.fields;\n\n    // build complex field cache\n    this.discoverComplexFields(fields);\n\n    for (const key in this.complexFieldsByClassIdentifier) {\n      if (!this.complexFieldsByClassIdentifier.hasOwnProperty(key)) {\n        continue;\n      }\n      const cachedField: Field = this.complexFieldsByClassIdentifier[key];\n      // remove children more than one level deep in cached fields\n      for (const childField of cachedField.children) {\n        childField.children = [];\n      }\n      // alphebatize complex field's childrein\n      Field.alphabetizeFields(cachedField.children);\n    }\n  }\n\n  private discoverComplexFields(fields: Field[]): void {\n    for (const field of fields) {\n      if (field.type !== 'COMPLEX') {\n        continue;\n      }\n      if (field.serviceObject.status === 'SUPPORTED') {\n        this.complexFieldsByClassIdentifier[field.classIdentifier] = field.copy();\n      }\n      if (field.children) {\n        this.discoverComplexFields(field.children);\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PropertyFieldEditComponent.html":{"url":"components/PropertyFieldEditComponent.html","title":"component - PropertyFieldEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PropertyFieldEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                property-field-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./property-field-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                docDef\n                            \n                            \n                                field\n                            \n                            \n                                fieldMode\n                            \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                isClosing\n                            \n                            \n                                modalWindowComponent\n                            \n                            \n                                valueType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getField\n                            \n                            \n                                getInitialFocusElement\n                            \n                            \n                                initialize\n                            \n                            \n                                isDataValid\n                            \n                            \n                                nameExistsOnCreation\n                            \n                            \n                                valueTypeSelectionChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getField\n                        \n                        \n                    \n                \n            \n            \n                \ngetField()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Field\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize(field: Field, docDef: DocumentDefinition, mwc: ModalWindowComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                Field\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    docDef\n                                    \n                                                DocumentDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mwc\n                                    \n                                                ModalWindowComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            nameExistsOnCreation\n                        \n                        \n                    \n                \n            \n            \n                \nnameExistsOnCreation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:77\n                \n            \n\n\n            \n                \n                    Return true and disable the save button if the candidate name already exists on creation, return false\nand enable the save button otherwise.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            valueTypeSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nvalueTypeSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            docDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentDefinition\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Field\n\n                        \n                    \n                    \n                        \n                            Default value : new Field()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldMode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('name')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isClosing\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalWindowComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalWindowComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valueType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : 'STRING'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { DocumentType, FieldMode } from '../../common/config.types';\n\nimport { ConfigModel } from '../../models/config.model';\nimport { DocumentDefinition } from '../../models/document-definition.model';\nimport { Field } from '../../models/field.model';\nimport { ModalWindowComponent, ModalWindowValidator } from '../modal/modal-window.component';\n\n@Component({\n  selector: 'property-field-edit',\n  templateUrl: './property-field-edit.component.html',\n})\n\nexport class PropertyFieldEditComponent implements ModalWindowValidator {\n  field: Field = new Field();\n  fieldMode: FieldMode;\n  valueType: any = 'STRING';\n  docDef: DocumentDefinition;\n  modalWindowComponent: ModalWindowComponent;\n  isClosing: boolean;\n  @ViewChild('name') private focusEl: ElementRef;\n\n  initialize(field: Field, docDef: DocumentDefinition, mwc: ModalWindowComponent): void {\n    if (field != null) {\n      this.valueType = field.type;\n      this.fieldMode = FieldMode.EDIT;\n    } else { this.fieldMode = FieldMode.CREATE; }\n\n    this.field = field == null ? new Field() : field.copy();\n    this.docDef = docDef;\n    this.modalWindowComponent = mwc;\n    this.isClosing = false;\n  }\n\n  valueTypeSelectionChanged(event: any): void {\n    this.valueType = event.target.selectedOptions.item(0).attributes.getNamedItem('value').value;\n  }\n\n  getField(): Field {\n    this.field.displayName = this.field.name;\n    this.field.path = this.field.name;\n    this.field.type = this.valueType;\n    this.field.userCreated = true;\n    this.field.docDef = this.docDef;\n    return this.field;\n  }\n\n  isDataValid(): boolean {\n    return ConfigModel.getConfig().errorService.isRequiredFieldValid(this.field.name, 'Name');\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n  /**\n   * Return true and disable the save button if the candidate name already exists on creation, return false\n   * and enable the save button otherwise.\n   */\n  nameExistsOnCreation(): boolean {\n    if (this.isClosing) {\n      return false;\n    }\n    if (this.fieldMode === FieldMode.CREATE && this.docDef != null &&\n        this.docDef.fieldExists(this.getField(), DocumentType.PROPERTY)) {\n      this.modalWindowComponent.confirmButtonDisabled = true;\n      return true;\n    }\n    this.modalWindowComponent.confirmButtonDisabled = false;\n    return false;\n  }\n}\n\n    \n\n    \n        \n  \n    Name:\n    \n    \n      Property name already exists, please select a unique name.\n    \n  \n  \n    Value:\n    \n     0)\" class=\"text-info\">\n      A property value must be specified.\n    \n  \n  \n    Value Type:\n    \n      ANY\n      Big Integer\n      Boolean\n      Byte\n      ByteArray\n      Char\n      Complex\n      Decimal\n      Double\n      Float\n      Integer\n      Long\n      Short\n      String\n      Time\n      Date\n      DateTime\n      DateTZ\n      TimeTZ\n      DateTimeTZ\n      Unsigned Byte\n      Unsigned Integer\n      Unsigned Long\n      Unsigned Short\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Name:              Property name already exists, please select a unique name.            Value:         0)\" class=\"text-info\">      A property value must be specified.            Value Type:          ANY      Big Integer      Boolean      Byte      ByteArray      Char      Complex      Decimal      Double      Float      Integer      Long      Short      String      Time      Date      DateTime      DateTZ      TimeTZ      DateTimeTZ      Unsigned Byte      Unsigned Integer      Unsigned Long      Unsigned Short      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'PropertyFieldEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TemplateEditComponent.html":{"url":"components/TemplateEditComponent.html","title":"component - TemplateEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TemplateEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/app/template-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    ModalWindowValidator\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                template-edit\n            \n\n\n\n\n            \n                templateUrl\n                ./template-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                focusEl\n                            \n                            \n                                templateText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInitialFocusElement\n                            \n                            \n                                isDataValid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialFocusElement\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialFocusElement()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/template-edit.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ElementRef\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDataValid\n                        \n                        \n                    \n                \n            \n            \n                \nisDataValid()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/app/template-edit.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('template')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/template-edit.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templateText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/app/template-edit.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport { ModalWindowValidator } from '../modal/modal-window.component';\n\n@Component({\n  selector: 'template-edit',\n  templateUrl: './template-edit.component.html',\n})\n\nexport class TemplateEditComponent implements ModalWindowValidator {\n  templateText: string = null;\n  @ViewChild('template') private focusEl: ElementRef;\n\n  isDataValid(): boolean {\n    return true;\n  }\n\n  getInitialFocusElement(): ElementRef {\n    return this.focusEl;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'TemplateEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TextNode.html":{"url":"classes/TextNode.html","title":"class - TextNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TextNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ExpressionNode\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                PREFIX\n                            \n                            \n                                    Public\n                                str\n                            \n                            \n                                    Protected\n                                    Static\n                                sequence\n                            \n                            \n                                    Protected\n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toHTML\n                            \n                            \n                                toText\n                            \n                            \n                                getUuid\n                            \n                            \n                                    Abstract\n                                toHTML\n                            \n                            \n                                    Abstract\n                                toText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(str: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        str\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PREFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'expression-text-'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            str\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            sequence\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                            \n                                \n                                    Inherited from         ExpressionNode\n\n                                \n                            \n                        \n                            \n                                    Defined in         ExpressionNode:27\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            uuid\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         ExpressionNode\n\n                                \n                            \n                        \n                            \n                                    Defined in         ExpressionNode:28\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \ntoHTML()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \ntoText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/expression.model.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUuid\n                        \n                        \n                    \n                \n            \n            \n                \ngetUuid()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toHTML\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toHTML()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            toText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toText()\n                \n            \n\n\n            \n                \n                    Inherited from         ExpressionNode\n\n                \n            \n            \n                \n                        Defined in         ExpressionNode:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigModel } from '../models/config.model';\nimport { ErrorHandlerService } from '../services/error-handler.service';\nimport { MappedField, MappingModel } from './mapping.model';\nimport { Subject } from 'rxjs';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from './error.model';\n\nexport class ExpressionUpdatedEvent {\n  constructor(public node?: ExpressionNode, public offset?: number) {}\n}\n\nexport abstract class ExpressionNode {\n  protected static sequence = 0;\n  protected uuid;\n\n  constructor(prefix: string) {\n    this.uuid = prefix + ExpressionNode.sequence++;\n  }\n\n  getUuid() {\n    return this.uuid;\n  }\n\n  abstract toText(): string;\n  abstract toHTML(): string;\n}\n\nexport class TextNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-text-';\n\n  constructor(public str: string) {\n    super(TextNode.PREFIX);\n  }\n\n  toText(): string {\n    return this.str;\n  }\n\n  toHTML(): string {\n    return `${this.str.replace(/ /g, '&nbsp;')}`;\n  }\n\n}\n\nexport class FieldNode extends ExpressionNode {\n\n  static readonly PREFIX = 'expression-field-';\n\n  constructor(private mapping: MappingModel, public field?: MappedField, private index?: number) {\n    super(FieldNode.PREFIX);\n    if (!field) {\n      this.field = mapping.getMappedFieldForIndex((index + 1).toString(), true);\n    }\n  }\n\n  toText(): string {\n    return '${' + (this.mapping.getIndexForMappedField(this.field) - 1) + '}';\n  }\n\n  toHTML(): string {\n    if (this.field && this.field.field) {\n      return `${this.field.field.name}`;\n    } else {\n      return `N/A`;\n    }\n  }\n\n}\n\nexport class ExpressionModel {\n  expressionUpdatedSource = new Subject();\n  expressionUpdated$ = this.expressionUpdatedSource.asObservable();\n\n  private _nodes: ExpressionNode[] = [];\n  private textCache = '';\n  private htmlCache = '';\n\n  constructor(private mapping: MappingModel, private cfg: ConfigModel) {}\n\n  generateInitialExpression() {\n    this.mapping.getUserMappedFields(true).forEach(f => this.appendFieldNode(f));\n  }\n\n  get nodes(): ReadonlyArray {\n    return this._nodes;\n  }\n\n  getLastNodeIndex() {\n    return this._nodes.length - 1;\n  }\n\n  getLastNode() {\n    return this._nodes[this.getLastNodeIndex()];\n  }\n\n  getNode(nodeId?: string): any {\n    if (!nodeId) {\n      return this.getLastNode();\n    }\n    return this._nodes.find(n => n.getUuid() === nodeId);\n  }\n\n  setConfigModel(cfg: ConfigModel) {\n    this.cfg = cfg;\n  }\n\n  /**\n   * Clear all text from the specified TextNode offset range or from the '@' to the end\n   * of the text node if no node ID is specified.\n   *\n   * Return the new UUID position indicator string or null.\n   *\n   * @param nodeId\n   * @param startOffset\n   * @param endOffset\n   */\n  clearText(nodeId?: string, startOffset?: number, endOffset?: number): TextNode {\n    let targetNode: TextNode;\n    let targetNodeIndex = 0;\n    if (!nodeId) {\n      const lastNode = this.getLastNode();\n      if (!(lastNode instanceof TextNode)) {\n        return null;\n      }\n      const keyPos = lastNode.str.indexOf('@');\n      if (keyPos !== -1) {\n        targetNodeIndex = this._nodes.indexOf(lastNode);\n        targetNode = lastNode;\n        targetNode.str = targetNode.str.substring(0, keyPos);\n      }\n    } else {\n      const node = this._nodes.find(n => n.getUuid() === nodeId);\n      if (!(node instanceof TextNode) || !endOffset) {\n        return null;\n      }\n      targetNode = node;\n      targetNodeIndex = this._nodes.indexOf(targetNode);\n      const cleanStr = targetNode.str.replace(targetNode.str.substring(startOffset, endOffset), '');\n      targetNode.str = cleanStr;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n    return targetNode;\n  }\n\n  /**\n   * Insert text into expression at specified position. If nodeId is not specified,\n   * it will be added to the end of expression. It parses the string\n   * and insert a set of TextNode & FieldNode if it contains field reference like ${0},\n   * otherwise just one TextNode.\n   * This emits ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   * @param str string to insert\n   * @param nodeId target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertText(str: string, nodeId?: string, offset?: number) {\n    this.insertNodes(this.createNodesFromText(str), nodeId, offset);\n  }\n\n  /**\n   * Insert an array of ExpressionNodes at the specified position. If insertPosition is\n   * not specified the nodes will be appended to the end of the expression.\n   * This emits an ExpressionUpdatedEvent which contains the latest node and offset it\n   * worked on, so that the subscriber can determine where to put the caret in\n   * the expression input widget. If ExpressionUpdatedEvent is undefined, it means that\n   * it worked on the end of the expression.\n   *\n   * @param newNodes an array of ExpressionNode to add\n   * @param insertPosition target node to insert the string\n   * @param offset position offset in the target node to insert the string\n   */\n  insertNodes(newNodes: ExpressionNode[], insertPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!insertPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        this._nodes.push(...newNodes);\n      } else if (last instanceof TextNode && newNodes[0] instanceof TextNode) {\n        const lastTextNode = last as TextNode;\n        (last as TextNode).str += (newNodes[0] as TextNode).str;\n        newNodes.splice(0, 1, last);\n        this._nodes.splice(this.getLastNodeIndex(), 1, ...newNodes);\n      } else if (last instanceof FieldNode && newNodes[0] instanceof FieldNode) {\n        this._nodes.splice(this.getLastNodeIndex(), 0, new TextNode(' + '), ...newNodes);\n      } else {\n        this._nodes.push(...newNodes);\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    const updatedEvent = new ExpressionUpdatedEvent();\n    const targetNode = this._nodes.find(n => n.getUuid() === insertPosition);\n    const targetNodeIndex = this._nodes.indexOf(targetNode);\n\n    if (targetNode instanceof TextNode) {\n      if (offset === undefined || offset === null || offset  0) {\n        if (newNodes[0] instanceof TextNode) {\n          targetNode.str = pre + (newNodes[0] as TextNode).str;\n          newNodes.splice(0, 1, targetNode);\n        } else {\n          targetNode.str = pre;\n          newNodes.splice(0, 0, targetNode);\n        }\n      }\n      if (post.length > 0) {\n        const lastNewNodeIndex = newNodes.length - 1;\n        if (newNodes[lastNewNodeIndex] instanceof TextNode) {\n          let mergedTextNode: TextNode;\n          if (pre.length > 0) {\n            mergedTextNode = newNodes[lastNewNodeIndex] as TextNode;\n            mergedTextNode.str += post;\n          } else {\n            mergedTextNode = targetNode;\n            mergedTextNode.str = (newNodes[lastNewNodeIndex]as TextNode).str + post;\n          }\n          newNodes.splice(lastNewNodeIndex, 1, mergedTextNode);\n        } else {\n          if (pre.length > 0) {\n            newNodes.push(new TextNode(post));\n          } else {\n            targetNode.str = post;\n            newNodes.push(targetNode);\n          }\n        }\n      }\n      this._nodes.splice(targetNodeIndex, 1, ...newNodes);\n      const lastAddedIndex = targetNodeIndex + newNodes.length - 1;\n      if (this._nodes[lastAddedIndex] instanceof FieldNode\n          && this.nodes[lastAddedIndex + 1] instanceof FieldNode) {\n        // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n        const space = new TextNode(' + ');\n        this._nodes.splice(lastAddedIndex + 1, 0, space);\n        updatedEvent.node = space;\n        updatedEvent.offset = 1;\n      } else if (this._nodes[lastAddedIndex] instanceof FieldNode) {\n        updatedEvent.node = this._nodes[lastAddedIndex + 1];\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = this._nodes[lastAddedIndex];\n        updatedEvent.offset = (this._nodes[lastAddedIndex] as TextNode).str.length - post.length;\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next(updatedEvent);\n      return;\n    }\n\n    // targetNode is a FieldNode - insert the text before it if offset is 0, otherwise after it\n    if (offset !== 0 && newNodes[0] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      newNodes.splice(0, 0, new TextNode(' + '));\n    }\n    const nextNodeIndex = offset === 0 ? targetNodeIndex : targetNodeIndex + 1;\n    const nextNode = this._nodes[nextNodeIndex];\n    if (nextNode instanceof TextNode && newNodes[newNodes.length - 1] instanceof TextNode) {\n      updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      nextNode.str = (newNodes[newNodes.length - 1] as TextNode).str + (nextNode as TextNode).str;\n      newNodes.pop();\n      this._nodes.splice(nextNodeIndex, 1, ...newNodes);\n      updatedEvent.node = nextNode;\n    } else if (nextNode instanceof FieldNode && newNodes[newNodes.length - 1] instanceof FieldNode) {\n      // insert a glue in between FieldNodes so that it won't break syntax and caret can go into\n      const space = new TextNode(' + ');\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes, space);\n      updatedEvent.node = space;\n      updatedEvent.offset = 1;\n    } else {\n      this._nodes.splice(nextNodeIndex, 0, ...newNodes);\n      if (nextNode instanceof TextNode) {\n        updatedEvent.node = nextNode;\n        updatedEvent.offset = 0;\n      } else {\n        updatedEvent.node = newNodes[newNodes.length - 1];\n        updatedEvent.offset = (newNodes[newNodes.length - 1] as TextNode).str.length;\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  removeToken(lastFieldRefRemoved: (removed: MappedField) => void, tokenPosition?: string, offset?: number) {\n\n    // No position was specified - append to the end\n    if (!tokenPosition) {\n      const last = this.getLastNode();\n      if (!last) {\n        return;\n      }\n      if (last instanceof FieldNode) {\n        const removed = this._nodes.pop() as FieldNode;\n        if (!this._nodes.find(n => n instanceof FieldNode && n.field === removed.field)) {\n          lastFieldRefRemoved(removed.field);\n        }\n      } else if (last instanceof TextNode) {\n        if (last.str.length > 0) {\n          last.str = last.str.substring(0, last.str.length - 1);\n        } else {\n          this._nodes.pop();\n        }\n      }\n      this.updateCache();\n      this.expressionUpdatedSource.next();\n      return;\n    }\n\n    // Requires position handling\n    let updatedEvent = new ExpressionUpdatedEvent();\n    let targetNode = this._nodes.find(n => n.getUuid() === tokenPosition);\n    let targetNodeIndex = this._nodes.indexOf(targetNode);\n    if (!targetNode || offset === -1) {\n      if (targetNodeIndex  n instanceof FieldNode && n.field === targetFieldNode.field)) {\n        lastFieldRefRemoved(targetFieldNode.field);\n      }\n      if (this._nodes.length > targetNodeIndex) {\n        if (this._nodes[targetNodeIndex - 1] instanceof TextNode\n            && this._nodes[targetNodeIndex] instanceof TextNode) {\n          const newOffset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n          (this._nodes[targetNodeIndex - 1] as TextNode).str\n              += (this._nodes[targetNodeIndex] as TextNode).str;\n          this._nodes.splice(targetNodeIndex, 1);\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = newOffset;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof FieldNode\n            && this._nodes[targetNodeIndex] instanceof FieldNode) {\n          const glue = new TextNode(' + ');\n          this._nodes.splice(targetNodeIndex, 0, glue);\n          updatedEvent.node = glue;\n          updatedEvent.offset = 3;\n        } else if (this._nodes[targetNodeIndex - 1] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex - 1];\n          updatedEvent.offset = (this._nodes[targetNodeIndex - 1] as TextNode).str.length;\n        } else if (this._nodes[targetNodeIndex] instanceof TextNode) {\n          updatedEvent.node = this._nodes[targetNodeIndex];\n          updatedEvent.offset = 0;\n        }\n      } else {\n        // end of line\n        updatedEvent = undefined;\n      }\n    } else {\n      const targetString = (targetNode as TextNode).str;\n      (targetNode as TextNode).str = offset === 0 ? targetString.substr(1)\n        : targetString.substring(0, offset) + targetString.substring(offset + 1);\n      if ((targetNode as TextNode).str.length === 0) {\n        this.cfg.errorService.addError(new ErrorInfo({message: 'At least one space is required between field references.',\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.USER, mapping: this.mapping}));\n        return;\n      }\n      updatedEvent.node = targetNode;\n      updatedEvent.offset = offset;\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next(updatedEvent);\n  }\n\n  /**\n   * Replace the content of the last text node with a substring terminating at the\n   * specified index.\n   *\n   * @param index\n   */\n  clearToEnd(index: number): void {\n    const last = this.getLastNode();\n    if (!(last instanceof TextNode)) {\n      return;\n    }\n    last.str = last.str.substring(0, index);\n  }\n\n  /**\n   * Reflect mapped source fields to the field references in the expression.\n   * Selected source fields are inserted into or appended to the expression,\n   * and unselected source fields are removed from expression.\n   *\n   * @param mapping Corresponding MappingModel object\n   */\n  updateFieldReference(mapping: MappingModel, insertPosition?: string, offset?: number) {\n    const mappedFields = mapping.getUserMappedFields(true);\n    const toAdd: MappedField[] = [];\n    const toRemove: MappedField[] = [];\n    let fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n\n    // Remove the field from the expression if unmapped.\n    for (const node of fieldNodes) {\n      if (mappedFields.includes(node.field)) {\n        continue;\n      }\n      const index = this._nodes.indexOf(node);\n      this._nodes.splice(index, 1);\n      if (this._nodes.length > index && this._nodes[index - 1] instanceof TextNode\n          && this._nodes[index] instanceof TextNode) {\n        (this._nodes[index - 1] as TextNode).str += (this._nodes[index] as TextNode).str;\n        this._nodes.splice(index, 1);\n      }\n    }\n\n    // Add the specified field into the expression - append if no insert position is specified.\n    fieldNodes = this._nodes.filter(n => n instanceof FieldNode) as FieldNode[];\n    for (const mfield of mappedFields) {\n      if (!fieldNodes.find(n => n.field === mfield)) {\n        if (insertPosition) {\n          this.insertNodes([new FieldNode(this.mapping, mfield)], insertPosition, offset);\n        } else {\n          this.appendFieldNode(mfield);\n        }\n      }\n    }\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  clear() {\n    this._nodes = [];\n    this.updateCache();\n    this.expressionUpdatedSource.next();\n  }\n\n  toText() {\n    return this.textCache;\n  }\n\n  toHTML() {\n    return this.htmlCache;\n  }\n\n  private updateCache() {\n    let answer = '';\n    this._nodes.forEach(node => answer += node.toText());\n    this.textCache = answer;\n    answer = '';\n    this._nodes.forEach(node => answer += node.toHTML());\n    this.htmlCache = answer;\n  }\n\n  private createNodesFromText(text: string): ExpressionNode[] {\n    const answer = [];\n    let position = -1;\n    let fn = null;\n\n    while ((position = text.search(/\\$\\{[0-9]+\\}/)) !== -1 ) {\n      if (position !== 0) {\n        answer.push(new TextNode(text.substring(0, position)));\n      }\n      const index = parseInt(text.substring(position + 2, text.indexOf('}')), 10);\n      fn = new FieldNode(this.mapping, null, index);\n      if (fn.field === null) {\n        this.cfg.errorService.addError(new ErrorInfo({message: `Unable to map expression index \"${index}\" to field node.`,\n          level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.INTERNAL, mapping: this.mapping}));\n      } else {\n        answer.push(fn);\n      }\n      text = text.substring(text.indexOf('}') + 1);\n    }\n    if (text.length > 0) {\n      answer.push(new TextNode(text));\n    }\n    return answer;\n  }\n\n  private appendFieldNode(mfield: MappedField) {\n    const lastNode = this._nodes.pop();\n    if (lastNode instanceof FieldNode) {\n        this._nodes.push(lastNode, new TextNode(' + '));\n    } else if (lastNode instanceof TextNode) {\n      if (lastNode.str.length === 0) {\n        this._nodes.push(new TextNode(' + '));\n      } else {\n        this._nodes.push(lastNode);\n      }\n    }\n    this._nodes.push(new FieldNode(this.mapping, mfield));\n  }\n\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ToErrorIconClassPipe.html":{"url":"pipes/ToErrorIconClassPipe.html","title":"pipe - ToErrorIconClassPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ToErrorIconClassPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/common/to-error-icon-class.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        toErrorIconClass\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: ErrorInfo[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/common/to-error-icon-class.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ErrorInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { ErrorInfo, ErrorLevel } from '../models/error.model';\n\n@Pipe({ name: 'toErrorIconClass' })\nexport class ToErrorIconClassPipe implements PipeTransform {\n\n  transform(value: ErrorInfo[]): string {\n    if (value.some(e => e.level === ErrorLevel.ERROR)) {\n      return 'pficon pficon-error-circle-o';\n    } else if (value.some(e => e.level === ErrorLevel.WARN)) {\n      return 'pficon pficon-warning-triangle-o';\n    } else if (value.some(e => e.level === ErrorLevel.INFO)) {\n      return 'pficon pficon-info';\n    } else {\n      return '';\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                toolbar\n            \n\n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expressionComponent\n                            \n                            \n                                    Private\n                                fileData\n                            \n                            \n                                    Private\n                                mappingsFileName\n                            \n                            \n                                    Private\n                                reader\n                            \n                            \n                                targetSupportsTemplate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearMappings\n                            \n                            \n                                conditionalMappingExpressionEnabled\n                            \n                            \n                                    Private\n                                editTemplate\n                            \n                            \n                                getCSSClass\n                            \n                            \n                                getEditorSettingsCSSClass\n                            \n                            \n                                getFileSuffix\n                            \n                            \n                                handleExportClick\n                            \n                            \n                                handleExportMapping\n                            \n                            \n                                handleExportMappingCancel\n                            \n                            \n                                handleMappingsInstanceName\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                processImportedFile\n                            \n                            \n                                    Async\n                                processMappingsCatalog\n                            \n                            \n                                    Async\n                                readFile\n                            \n                            \n                                    Private\n                                resetAll\n                            \n                            \n                                toolbarButtonClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cfg\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            clearMappings\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clearMappings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:195\n                \n            \n\n\n            \n                \n                    Establish a modal window popup and if confirmed clear all mappings.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            conditionalMappingExpressionEnabled\n                        \n                        \n                    \n                \n            \n            \n                \nconditionalMappingExpressionEnabled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:310\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            editTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editTemplate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetCSSClass(action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEditorSettingsCSSClass\n                        \n                        \n                    \n                \n            \n            \n                \ngetEditorSettingsCSSClass(open: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    open\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFileSuffix\n                        \n                        \n                    \n                \n            \n            \n                \ngetFileSuffix()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleExportClick\n                        \n                        \n                    \n                \n            \n            \n                \nhandleExportClick(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:262\n                \n            \n\n\n            \n                \n                    The user has clicked in the export file text wudget.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleExportMapping\n                        \n                        \n                    \n                \n            \n            \n                \nhandleExportMapping(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:295\n                \n            \n\n\n            \n                \n                    The user has requested their current mappings be exported.  Use the mapping management\nservice to establish the file content and to push it down to the server.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleExportMappingCancel\n                        \n                        \n                    \n                \n            \n            \n                \nhandleExportMappingCancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:306\n                \n            \n\n\n            \n                \n                    Cancel button - Export > Current Mapping\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleMappingsInstanceName\n                        \n                        \n                    \n                \n            \n            \n                \nhandleMappingsInstanceName(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:277\n                \n            \n\n\n            \n                \n                    The user has specified an AtlasMap mappings catalog file name into which the current live mappings and\nsupport documents will be exported.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processImportedFile\n                        \n                        \n                    \n                \n            \n            \n                \nprocessImportedFile(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:64\n                \n            \n\n\n            \n                \n                    The user has imported a file (mapping catalog or Java archive).  Process accordingly.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            processMappingsCatalog\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processMappingsCatalog(selectedFile: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:100\n                \n            \n\n\n            \n                \n                    A user has selected a compressed mappings catalog (ZIP) file to be imported into the canvas.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedFile\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            readFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(fileContent: Blob)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:48\n                \n            \n\n\n            \n                \n                    Perform an asynchronous read of a local file, returning a byte array for the file content.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileContent\n                                    \n                                            Blob\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            resetAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:211\n                \n            \n\n\n            \n                \n                    Establish a modal window popup and if confirmed remove all documents and imported JARs from\nthe server and reinitialize the DM.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toolbarButtonClicked\n                        \n                        \n                    \n                \n            \n            \n                \ntoolbarButtonClicked(action: string, event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expressionComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExpressionComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('expressionComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fileData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mappingsFileName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            reader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FileReader\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetSupportsTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, ViewChild } from '@angular/core';\n\nimport { InspectionType } from '../../common/config.types';\nimport { ConfigModel } from '../../models/config.model';\nimport { ModalWindowComponent } from '../modal//modal-window.component';\nimport { TemplateEditComponent } from '../app/template-edit.component';\nimport { ExpressionComponent } from './expression.component';\nimport { TransitionMode } from '../../models/transition.model';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from '../../models/error.model';\n\n@Component({\n  selector: 'toolbar',\n  templateUrl: './toolbar.component.html',\n})\n\nexport class ToolbarComponent implements OnInit {\n  @Input() cfg: ConfigModel;\n  @Input() modalWindow: ModalWindowComponent;\n\n  @ViewChild('expressionComponent') expressionComponent: ExpressionComponent;\n\n  targetSupportsTemplate = false;\n\n  private fileData: any;\n  private mappingsFileName: string;\n  private reader: FileReader;\n\n  /**\n   * Perform an asynchronous read of a local file, returning a byte array for the file content.\n   *\n   * @param fileContent\n   */\n  async readFile(fileContent: Blob): Promise {\n    return new Promise((resolve, reject) => {\n      this.reader.onload = (event: any) => {\n        const arrayBuffer: any = this.reader.result;\n        const bytes = new Uint8Array(arrayBuffer);\n        resolve(bytes);\n      };\n      this.reader.readAsArrayBuffer(fileContent);\n    });\n  }\n\n  /**\n   * The user has imported a file (mapping catalog or Java archive).  Process accordingly.\n   *\n   * @param event\n   */\n  processImportedFile(event) {\n    const userFile = event.target.files[0];\n    const userFileComps = userFile.name.split('.');\n    const userFileSuffix: string = userFileComps[userFileComps.length - 1].toUpperCase();\n\n    if (userFileSuffix === 'ADM') {\n        this.cfg.errorService.resetAll();\n\n        // Clear out current user documents from the runtime service before processing the imported ADM.\n        this.cfg.fileService.resetMappings().toPromise().then( async() => {\n          this.cfg.fileService.resetLibs().toPromise().then( async() => {\n            await this.processMappingsCatalog(userFile);\n          });\n        }).catch((error: any) => {\n          if (error.status === 0) {\n            this.cfg.errorService.addError(new ErrorInfo({\n              message: 'Fatal network error: Could not connect to AtlasMap design runtime service.',\n              level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n          } else {\n            this.cfg.errorService.addError(new ErrorInfo({\n              message: 'Could not reset document definitions before import.',\n              level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n          }\n        });\n    } else if (userFileSuffix === 'JAR') {\n      this.cfg.documentService.processDocument(event.target.files[0], InspectionType.JAVA_CLASS, false);\n    }\n\n    event.srcElement.value = null;\n  }\n\n  /**\n   * A user has selected a compressed mappings catalog (ZIP) file to be imported into the canvas.\n   *\n   * @param selectedFile\n   */\n  async processMappingsCatalog(selectedFile: any) {\n    this.cfg.initializationService.updateLoadingStatus('Importing AtlasMap Catalog');\n    await this.cfg.fileService.importADMCatalog(selectedFile);\n  }\n\n  getFileSuffix() {\n    return '.adm,.jar';\n  }\n\n  getCSSClass(action: string) {\n    if (this.cfg.mappings !== null) {\n      if ('showDetails' === action) {\n        return 'fa fa-exchange link' + (this.cfg.mappings.activeMapping ? ' selected' : '');\n      } else if ('editTemplate' === action) {\n          return 'fa fa-file-text-o link' + (this.cfg.mappings.templateExists() ? ' selected' : '');\n      }\n    }\n    if ('showLines' === action) {\n      return 'fa fa-share-alt link' + (this.cfg.showLinesAlways ? ' selected' : '');\n    } else if ('showMappingTable' === action) {\n      return 'fa fa-table link' + (this.cfg.showMappingTable ? ' selected' : '');\n    } else if ('showNamespaceTable' === action) {\n      return 'fa fa-code link' + (this.cfg.showNamespaceTable ? ' selected' : '');\n    } else if ('importMappings' === action) {\n      return 'pficon pficon-import link';\n    } else if ('exportMappings' === action) {\n      return 'pficon pficon-export link';\n    } else if ('enableExpression' === action) {\n      return (this.cfg.mappings && this.cfg.mappings.activeMapping\n          && this.cfg.mappings.activeMapping.transition\n          && this.cfg.mappings.activeMapping.transition.enableExpression ? ' selected' : '');\n    }\n  }\n\n  getEditorSettingsCSSClass(open: boolean) {\n    return 'fa fa-cog link ' + (open ? ' selected' : '');\n  }\n\n  toolbarButtonClicked(action: string, event: any): void {\n    event.preventDefault();\n    if ('showDetails' === action) {\n      if (this.cfg.showMappingDetailTray) {\n        this.cfg.showMappingDetailTray = false;\n      } else {\n        this.cfg.showMappingDetailTray = true;\n      }\n    } else if ('editTemplate' === action) {\n      this.editTemplate();\n    } else if ('showLines' === action) {\n      this.cfg.showLinesAlways = !this.cfg.showLinesAlways;\n    } else if ('showTypes' === action) {\n      this.cfg.showTypes = !this.cfg.showTypes;\n    } else if ('showMappedFields' === action) {\n      this.cfg.showMappedFields = !this.cfg.showMappedFields;\n    } else if ('showUnmappedFields' === action) {\n      this.cfg.showUnmappedFields = !this.cfg.showUnmappedFields;\n    } else if ('addMapping' === action) {\n      this.cfg.mappingService.addNewMapping(null, false);\n    } else if ('showMappingTable' === action) {\n      this.cfg.showMappingTable = !this.cfg.showMappingTable;\n      if (this.cfg.showMappingTable) {\n        this.cfg.showNamespaceTable = false;\n      }\n    } else if ('showNamespaceTable' === action) {\n      this.cfg.showNamespaceTable = !this.cfg.showNamespaceTable;\n      if (this.cfg.showNamespaceTable) {\n        this.cfg.showMappingTable = false;\n      }\n    } else if ('showMappingPreview' === action) {\n      this.cfg.showMappingPreview = !this.cfg.showMappingPreview;\n    } else if ('clearMappings' === action) {\n        this.clearMappings();\n    } else if ('resetAll' === action) {\n      this.resetAll();\n    } else if ('enableExpression') {\n      this.cfg.mappingService.toggleExpressionMode();\n    }\n    // Use the initialization service to trigger the observable updateFromConfig method\n    // in the parent data-mapper-app class.  This avoids materializing the lineMachine object\n    // post-check.\n    this.cfg.initializationService.systemInitializedSource.next();\n  }\n\n  ngOnInit() {\n    this.mappingsFileName = '';\n    this.fileData = null;\n    this.reader = new FileReader();\n    // Disable template until runtime supports it - https://github.com/atlasmap/atlasmap/issues/329\n    // const targetDoc: DocumentDefinition = this.cfg.targetDocs[0];\n    // this.targetSupportsTemplate = targetDoc && (targetDoc.type == DocumentType.XML || targetDoc.type == DocumentType.JSON);\n  }\n\n  /**\n   * Establish a modal window popup and if confirmed clear all mappings.\n   */\n  private clearMappings(): void {\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Clear All Mappings';\n    this.modalWindow.headerText = 'Clear All Mappings?';\n    this.modalWindow.message = 'Are you sure you want to clear all mappings?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      this.cfg.errorService.resetAll();\n      this.cfg.mappingService.removeAllMappings();\n    };\n    this.modalWindow.show();\n  }\n\n  /**\n   * Establish a modal window popup and if confirmed remove all documents and imported JARs from\n   * the server and reinitialize the DM.\n   */\n  private resetAll(): void {\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Reset';\n    this.modalWindow.headerText = 'Reset All Mappings and Imports?';\n    this.modalWindow.message = 'Are you sure you want to reset all mappings and clear all imported documents?';\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      this.cfg.errorService.resetAll();\n      this.cfg.fileService.resetMappings().toPromise().then( async() => {\n        this.cfg.mappings = null;\n        this.cfg.fileService.resetLibs().toPromise().then( async() => {\n          await this.cfg.initializationService.initialize();\n        });\n        this.cfg.clearDocs();\n        await this.cfg.initializationService.initialize();\n      }).catch((error: any) => {\n        if (error.status === 0) {\n          this.cfg.errorService.addError(new ErrorInfo({\n            message: 'Fatal network error: Could not connect to AtlasMap design runtime service.',\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        } else {\n          this.cfg.errorService.addError(new ErrorInfo({message: 'Could not reset mapping definitions.',\n            level: ErrorLevel.ERROR, scope: ErrorScope.APPLICATION, type: ErrorType.INTERNAL, object: error}));\n        }\n      });\n    };\n    this.modalWindow.show();\n  }\n\n  private editTemplate(): void {\n    const self: ToolbarComponent = this;\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Save';\n    this.modalWindow.headerText = this.cfg.mappings.templateExists() ? 'Edit Template' : 'Add Template';\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      const templateComponent: TemplateEditComponent = mw.nestedComponent as TemplateEditComponent;\n      templateComponent.templateText = this.cfg.mappings.templateText;\n    };\n    this.modalWindow.nestedComponentType = TemplateEditComponent;\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      const templateComponent: TemplateEditComponent = mw.nestedComponent as TemplateEditComponent;\n      this.cfg.mappings.templateText = templateComponent.templateText;\n      self.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  /**\n   * The user has clicked in the export file text wudget.\n   *\n   * @param event\n   */\n  handleExportClick(event) {\n    if (event.preventDefault) {\n        event.preventDefault();\n    }\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * The user has specified an AtlasMap mappings catalog file name into which the current live mappings and\n   * support documents will be exported.\n   *\n   * @param event\n   */\n  handleMappingsInstanceName(event) {\n      let filename = event.target.value;\n      if (filename !== null && filename.length > 0) {\n\n        // Tack on a .adm suffix if one wasn't already specified.\n        if (filename.split('.').pop() !== 'adm') {\n          filename = filename.concat('.adm');\n        }\n        this.mappingsFileName = filename;\n      }\n    }\n\n  /**\n   * The user has requested their current mappings be exported.  Use the mapping management\n   * service to establish the file content and to push it down to the server.\n   *\n   * @param event\n   */\n  handleExportMapping(event) {\n    let fileName = this.mappingsFileName;\n    if (this.mappingsFileName.length === 0) {\n        fileName = 'atlasmap-mapping.adm';\n    }\n    this.cfg.fileService.exportMappingsCatalog(fileName);\n  }\n\n  /**\n   * Cancel button - Export > Current Mapping\n   */\n  handleExportMappingCancel(): void {\n    this.mappingsFileName = '';\n  }\n\n  conditionalMappingExpressionEnabled(): boolean {\n    return (this.cfg.mappings && this.cfg.mappings.activeMapping &&\n      this.cfg.mappings.activeMapping.transition &&\n      this.cfg.mappings.activeMapping.transition.enableExpression);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      f(x)\n      \n    \n\n    \n      \n    \n\n    |\n\n    \n      \n        \n      \n    \n\n    \n      \n      \n        \n          \n            Export mappings\n              \n                OK\n                Cancel\n            \n          \n        \n      \n    \n\n    |\n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n      \n\n      \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Types\n            \n          \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Lines\n            \n          \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Mapped Fields\n            \n          \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Unmapped Fields\n            \n          \n          \n        \n        \n          \n            \n              \n                \n                \n              \n              \n                Show Mapping Preview\n            \n          \n          \n        \n        \n        \n          \n            \n              \n                Reset All\n              \n            \n          \n        \n        \n          \n          \n            \n              \n                Clear All Mappings\n              \n            \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            f(x)                            |                                                                          Export mappings                              OK                Cancel                                            |                                                                                                                                                            Show Types                                                                                                                                                                Show Lines                                                                                                                                                                Show Mapped Fields                                                                                                                                                                Show Unmapped Fields                                                                                                                                                                Show Mapping Preview                                                                                                            Reset All                                                                                                                  Clear All Mappings                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransitionDelimiterModel.html":{"url":"classes/TransitionDelimiterModel.html","title":"class - TransitionDelimiterModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransitionDelimiterModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualDelimiter\n                            \n                            \n                                delimiter\n                            \n                            \n                                prettyName\n                            \n                            \n                                serializedValue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(delimiter: TransitionDelimiter, serializedValue: string, prettyName: string, actualDelimiter)\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        delimiter\n                                                  \n                                                        \n                                                                        TransitionDelimiter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serializedValue\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prettyName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actualDelimiter\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actualDelimiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delimiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionDelimiter\n\n                        \n                    \n                    \n                        \n                            Default value : TransitionDelimiter.SPACE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prettyName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serializedValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ExpressionModel } from './expression.model';\nimport { FieldAction } from './field-action.model';\n\nexport enum TransitionMode {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  ENUM = 'ENUM',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  FOR_EACH = 'FOR_EACH'\n}\n\nexport enum TransitionDelimiter {\n  NONE, AMPERSAND, AT_SIGN, BACKSLASH, COLON, COMMA, DASH, EQUAL, HASH,\n  MULTI_SPACE, PERIOD, PIPE, SEMICOLON, SLASH, SPACE, UNDERSCORE, USER_DEFINED\n}\n\nexport class TransitionDelimiterModel {\n  delimiter: TransitionDelimiter = TransitionDelimiter.SPACE;\n  serializedValue: string = null;\n  prettyName: string = null;\n  actualDelimiter = '';\n\n  constructor(\n    delimiter: TransitionDelimiter, serializedValue: string, prettyName: string, actualDelimiter) {\n    this.delimiter = delimiter;\n    this.serializedValue = serializedValue;\n    this.prettyName = prettyName;\n    this.actualDelimiter = actualDelimiter;\n  }\n}\n\nexport class TransitionModel {\n  static delimiterModels: TransitionDelimiterModel[] = [];\n\n  mode: TransitionMode = TransitionMode.ONE_TO_ONE;\n  delimiter: TransitionDelimiter = TransitionDelimiter.SPACE;\n  userDelimiter = '';\n  lookupTableName: string = null;\n  expression: ExpressionModel;\n  enableExpression = false;\n  transitionFieldAction: FieldAction;\n\n  constructor() {\n    TransitionModel.initialize();\n  }\n\n  static initialize() {\n    if (TransitionModel.delimiterModels.length === 0) {\n      const models: TransitionDelimiterModel[] = [];\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.NONE, null, '[None]', ''));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.AMPERSAND, 'Ampersand', 'Ampersand [&]', '\\&'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.AT_SIGN, 'AtSign', 'At Sign [@]', '\\@'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.BACKSLASH, 'Backslash', 'Backslash [\\\\]', '\\\\'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.COLON, 'Colon', 'Colon [:]', '\\:'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.COMMA, 'Comma', 'Comma [,]', '\\,'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.DASH, 'Dash', 'Dash [-]', '\\-'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.EQUAL, 'Equal', 'Equal [=]', '\\='));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.HASH, 'Hash', 'Hash [#]', '\\#'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.MULTI_SPACE, 'MultiSpace', 'Multi Spaces', '  '));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.PERIOD, 'Period', 'Period [.]', '\\.'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.PIPE, 'Pipe', 'Pipe [|]', '\\|'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SEMICOLON, 'Semicolon', 'Semicolon [;]', '\\;'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SLASH, 'Slash', 'Slash [/]', '\\/'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SPACE, 'Space', 'Space [ ]', ' '));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.UNDERSCORE, 'Underscore', 'Underscore [_]', '\\_'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.USER_DEFINED, 'User defined', 'User defined', ''));\n      TransitionModel.delimiterModels = models;\n    }\n  }\n\n  /**\n   * Translate a mapping mode number into a string.\n   * @param mode\n   */\n  static getMappingModeName(mode: TransitionMode): string {\n    let actionName: string;\n\n    switch (mode) {\n      case TransitionMode.ONE_TO_ONE: {\n        actionName = 'One to One';\n        break;\n      }\n      case TransitionMode.MANY_TO_ONE: {\n        actionName = 'Many to One';\n        break;\n      }\n      case TransitionMode.ONE_TO_MANY: {\n        actionName = 'One to Many';\n        break;\n      }\n      case TransitionMode.ENUM: {\n        actionName = 'ENUM';\n        break;\n      }\n      case TransitionMode.FOR_EACH: {\n        actionName = 'For Each';\n        break;\n      }\n      default: {\n         actionName = '';\n         break;\n      }\n    }\n    return actionName;\n  }\n\n  getPrettyName() {\n    let transitionFieldActionName = '';\n    if (this.transitionFieldAction) {\n      transitionFieldActionName = ' (' + this.transitionFieldAction.name + ')';\n    }\n    if (this.mode === TransitionMode.ONE_TO_MANY) {\n      return TransitionModel.getMappingModeName(this.mode) + transitionFieldActionName;\n    } else if (this.mode === TransitionMode.MANY_TO_ONE) {\n      return TransitionModel.getMappingModeName(this.mode) + transitionFieldActionName;\n    } else if (this.mode === TransitionMode.ENUM) {\n      return 'Enum (table: ' + this.lookupTableName + ')';\n    }\n    return TransitionModel.getMappingModeName(this.mode);\n  }\n\n  isOneToManyMode(): boolean {\n    return this.mode === TransitionMode.ONE_TO_MANY;\n  }\n\n  isOneToOneMode(): boolean {\n    return this.mode === TransitionMode.ONE_TO_ONE;\n  }\n\n  isManyToOneMode(): boolean {\n    return this.mode === TransitionMode.MANY_TO_ONE;\n  }\n\n  isForEachMode(): boolean {\n    return this.mode === TransitionMode.FOR_EACH;\n  }\n\n  isEnumerationMode(): boolean {\n    return this.mode === TransitionMode.ENUM;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransitionModel.html":{"url":"classes/TransitionModel.html","title":"class - TransitionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransitionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                delimiter\n                            \n                            \n                                    Static\n                                delimiterModels\n                            \n                            \n                                enableExpression\n                            \n                            \n                                expression\n                            \n                            \n                                lookupTableName\n                            \n                            \n                                mode\n                            \n                            \n                                transitionFieldAction\n                            \n                            \n                                userDelimiter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getMappingModeName\n                            \n                            \n                                getPrettyName\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                isEnumerationMode\n                            \n                            \n                                isForEachMode\n                            \n                            \n                                isManyToOneMode\n                            \n                            \n                                isOneToManyMode\n                            \n                            \n                                isOneToOneMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:56\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delimiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionDelimiter\n\n                        \n                    \n                    \n                        \n                            Default value : TransitionDelimiter.SPACE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            delimiterModels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionDelimiterModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableExpression\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expression\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ExpressionModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lookupTableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TransitionMode\n\n                        \n                    \n                    \n                        \n                            Default value : TransitionMode.ONE_TO_ONE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transitionFieldAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldAction\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userDelimiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:52\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getMappingModeName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMappingModeName(mode: TransitionMode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:90\n                \n            \n\n\n            \n                \n                    Translate a mapping mode number into a string.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mode\n                                    \n                                                TransitionMode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPrettyName\n                        \n                        \n                    \n                \n            \n            \n                \ngetPrettyName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnumerationMode\n                        \n                        \n                    \n                \n            \n            \n                \nisEnumerationMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isForEachMode\n                        \n                        \n                    \n                \n            \n            \n                \nisForEachMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isManyToOneMode\n                        \n                        \n                    \n                \n            \n            \n                \nisManyToOneMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isOneToManyMode\n                        \n                        \n                    \n                \n            \n            \n                \nisOneToManyMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isOneToOneMode\n                        \n                        \n                    \n                \n            \n            \n                \nisOneToOneMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/models/transition.model.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExpressionModel } from './expression.model';\nimport { FieldAction } from './field-action.model';\n\nexport enum TransitionMode {\n  ONE_TO_ONE = 'ONE_TO_ONE',\n  ONE_TO_MANY = 'ONE_TO_MANY',\n  ENUM = 'ENUM',\n  MANY_TO_ONE = 'MANY_TO_ONE',\n  FOR_EACH = 'FOR_EACH'\n}\n\nexport enum TransitionDelimiter {\n  NONE, AMPERSAND, AT_SIGN, BACKSLASH, COLON, COMMA, DASH, EQUAL, HASH,\n  MULTI_SPACE, PERIOD, PIPE, SEMICOLON, SLASH, SPACE, UNDERSCORE, USER_DEFINED\n}\n\nexport class TransitionDelimiterModel {\n  delimiter: TransitionDelimiter = TransitionDelimiter.SPACE;\n  serializedValue: string = null;\n  prettyName: string = null;\n  actualDelimiter = '';\n\n  constructor(\n    delimiter: TransitionDelimiter, serializedValue: string, prettyName: string, actualDelimiter) {\n    this.delimiter = delimiter;\n    this.serializedValue = serializedValue;\n    this.prettyName = prettyName;\n    this.actualDelimiter = actualDelimiter;\n  }\n}\n\nexport class TransitionModel {\n  static delimiterModels: TransitionDelimiterModel[] = [];\n\n  mode: TransitionMode = TransitionMode.ONE_TO_ONE;\n  delimiter: TransitionDelimiter = TransitionDelimiter.SPACE;\n  userDelimiter = '';\n  lookupTableName: string = null;\n  expression: ExpressionModel;\n  enableExpression = false;\n  transitionFieldAction: FieldAction;\n\n  constructor() {\n    TransitionModel.initialize();\n  }\n\n  static initialize() {\n    if (TransitionModel.delimiterModels.length === 0) {\n      const models: TransitionDelimiterModel[] = [];\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.NONE, null, '[None]', ''));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.AMPERSAND, 'Ampersand', 'Ampersand [&]', '\\&'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.AT_SIGN, 'AtSign', 'At Sign [@]', '\\@'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.BACKSLASH, 'Backslash', 'Backslash [\\\\]', '\\\\'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.COLON, 'Colon', 'Colon [:]', '\\:'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.COMMA, 'Comma', 'Comma [,]', '\\,'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.DASH, 'Dash', 'Dash [-]', '\\-'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.EQUAL, 'Equal', 'Equal [=]', '\\='));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.HASH, 'Hash', 'Hash [#]', '\\#'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.MULTI_SPACE, 'MultiSpace', 'Multi Spaces', '  '));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.PERIOD, 'Period', 'Period [.]', '\\.'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.PIPE, 'Pipe', 'Pipe [|]', '\\|'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SEMICOLON, 'Semicolon', 'Semicolon [;]', '\\;'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SLASH, 'Slash', 'Slash [/]', '\\/'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.SPACE, 'Space', 'Space [ ]', ' '));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.UNDERSCORE, 'Underscore', 'Underscore [_]', '\\_'));\n      models.push(new TransitionDelimiterModel(TransitionDelimiter.USER_DEFINED, 'User defined', 'User defined', ''));\n      TransitionModel.delimiterModels = models;\n    }\n  }\n\n  /**\n   * Translate a mapping mode number into a string.\n   * @param mode\n   */\n  static getMappingModeName(mode: TransitionMode): string {\n    let actionName: string;\n\n    switch (mode) {\n      case TransitionMode.ONE_TO_ONE: {\n        actionName = 'One to One';\n        break;\n      }\n      case TransitionMode.MANY_TO_ONE: {\n        actionName = 'Many to One';\n        break;\n      }\n      case TransitionMode.ONE_TO_MANY: {\n        actionName = 'One to Many';\n        break;\n      }\n      case TransitionMode.ENUM: {\n        actionName = 'ENUM';\n        break;\n      }\n      case TransitionMode.FOR_EACH: {\n        actionName = 'For Each';\n        break;\n      }\n      default: {\n         actionName = '';\n         break;\n      }\n    }\n    return actionName;\n  }\n\n  getPrettyName() {\n    let transitionFieldActionName = '';\n    if (this.transitionFieldAction) {\n      transitionFieldActionName = ' (' + this.transitionFieldAction.name + ')';\n    }\n    if (this.mode === TransitionMode.ONE_TO_MANY) {\n      return TransitionModel.getMappingModeName(this.mode) + transitionFieldActionName;\n    } else if (this.mode === TransitionMode.MANY_TO_ONE) {\n      return TransitionModel.getMappingModeName(this.mode) + transitionFieldActionName;\n    } else if (this.mode === TransitionMode.ENUM) {\n      return 'Enum (table: ' + this.lookupTableName + ')';\n    }\n    return TransitionModel.getMappingModeName(this.mode);\n  }\n\n  isOneToManyMode(): boolean {\n    return this.mode === TransitionMode.ONE_TO_MANY;\n  }\n\n  isOneToOneMode(): boolean {\n    return this.mode === TransitionMode.ONE_TO_ONE;\n  }\n\n  isManyToOneMode(): boolean {\n    return this.mode === TransitionMode.MANY_TO_ONE;\n  }\n\n  isForEachMode(): boolean {\n    return this.mode === TransitionMode.FOR_EACH;\n  }\n\n  isEnumerationMode(): boolean {\n    return this.mode === TransitionMode.ENUM;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransitionSelectionComponent.html":{"url":"components/TransitionSelectionComponent.html","title":"component - TransitionSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TransitionSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                transition-selection\n            \n\n\n\n\n            \n                templateUrl\n                ./transition-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configSelectionChanged\n                            \n                            \n                                getMappedValueCount\n                            \n                            \n                                getMultiplicityActionConfigs\n                            \n                            \n                                isIndexArg\n                            \n                            \n                                modeIsEnum\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showLookupTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                cfg\n                            \n                            \n                                mapping\n                            \n                            \n                                modalWindow\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :         FieldAction\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        cfg\n                    \n                \n                \n                    \n                        Type :         ConfigModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapping\n                    \n                \n                \n                    \n                        Type :         MappingModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalWindow\n                    \n                \n                \n                    \n                        Type :         ModalWindowComponent\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configSelectionChanged\n                        \n                        \n                    \n                \n            \n            \n                \nconfigSelectionChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:156\n                \n            \n\n\n            \n                \n                    A mapping field action configuration selection has been made.  Note that action field arguments, if any,\nmay be specified by either a text field or pull-down menu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMappedValueCount\n                        \n                        \n                    \n                \n            \n            \n                \ngetMappedValueCount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMultiplicityActionConfigs\n                        \n                        \n                    \n                \n            \n            \n                \ngetMultiplicityActionConfigs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     FieldActionDefinition[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isIndexArg\n                        \n                        \n                    \n                \n            \n            \n                \nisIndexArg(argVal: string, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            modeIsEnum\n                        \n                        \n                    \n                \n            \n            \n                \nmodeIsEnum()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showLookupTable\n                        \n                        \n                    \n                \n            \n            \n                \nshowLookupTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : DataMapperUtil.toDisplayable\n                        \n                    \n                        \n                            \n                                    Defined in src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\nimport { TransitionDelimiter, TransitionMode } from '../../models/transition.model';\nimport { ConfigModel } from '../../models/config.model';\nimport { MappingModel } from '../../models/mapping.model';\nimport { ModalWindowComponent } from '../modal/modal-window.component';\nimport { LookupTableComponent } from './lookup-table.component';\nimport { FieldAction, FieldActionDefinition, Multiplicity } from '../../models/field-action.model';\nimport { DataMapperUtil } from '../../common/data-mapper-util';\nimport { LookupTable } from '../../models/lookup-table.model';\nimport { ErrorScope, ErrorType, ErrorInfo, ErrorLevel } from '../../models/error.model';\n\n@Component({\n  selector: 'transition-selection',\n  templateUrl: './transition-selection.component.html'\n})\n\nexport class TransitionSelectionComponent implements OnInit {\n  @Input() cfg: ConfigModel;\n  @Input() modalWindow: ModalWindowComponent;\n  @Input() mapping: MappingModel;\n  @Input() action: FieldAction;\n\n  getLabel = DataMapperUtil.toDisplayable;\n\n  ngOnInit(): void {\n    const that = this;\n\n    // $(document).ready( function() {\n    jQuery(function() {\n      // Invoke the combobox so it supersedes the stock select.\n      // $('select#separator').combobox({clearIfNoMatch: false});\n\n      $('select#separator').on('change', function() {\n\n        // Check the combobox select.\n        const optionSelected = $(this).find('option:selected');\n        const selectedValue: any = optionSelected.val();\n\n        if (selectedValue) {\n          that.mapping.transition.delimiter = parseInt(selectedValue, 10);\n          that.cfg.mappingService.notifyMappingUpdated();\n          return;\n        }\n        const inputValue: any = $(this).val();\n\n        if (inputValue) {\n          that.mapping.transition.delimiter = TransitionDelimiter.USER_DEFINED;\n          that.mapping.transition.userDelimiter = inputValue;\n          that.cfg.mappingService.notifyMappingUpdated();\n          return;\n        }\n      });\n\n      // Replace the user input when focus is lost.\n      $('.combobox').on('blur', function() {\n\n        if (that.mapping.transition.delimiter === TransitionDelimiter.USER_DEFINED) {\n          $(this).find('option:selected').val(that.mapping.transition.userDelimiter);\n          $(this).val(that.mapping.transition.userDelimiter).trigger('input');\n        }\n      });\n\n      // Check the combobox input text field.\n      /* NOTE: re-enable this function for non-standard delimiters with combobox\n      $('.combobox').on('input', function() {\n\n        const inputValue: any = $(this).val();\n\n        if (inputValue) {\n          if (inputValue.length > 1) {\n            that.cfg.errorService.error('The separator delimiter must be one character in length.', null);\n            return;\n          }\n          that.fieldPair.transition.delimiter = TransitionDelimiter.USER_DEFINED;\n          that.fieldPair.transition.userDelimiter = inputValue;\n          that.cfg.mappingService.updateMappedField(that.fieldPair, false, false);\n        }\n      });\n      */\n    });\n\n  }\n\n  modeIsEnum(): boolean {\n    return this.mapping.transition.isEnumerationMode();\n  }\n\ngetMappedValueCount(): number {\n    const tableName: string = this.mapping.transition.lookupTableName;\n    if (tableName == null) {\n      return 0;\n    }\n    const table: LookupTable = this.cfg.mappings.getTableByName(tableName);\n    if (!table || !table.entries) {\n      return 0;\n    }\n    return table.entries.length;\n  }\n\n  showLookupTable(): void {\n    const mapping: MappingModel = this.cfg.mappings.activeMapping;\n\n    if (!mapping.isFullyMapped()) {\n      this.cfg.errorService.addError(new ErrorInfo({message: 'Please select source and target fields before mapping values.',\n        level: ErrorLevel.ERROR, scope: ErrorScope.MAPPING, type: ErrorType.USER, mapping: mapping}));\n      return;\n    }\n    this.modalWindow.reset();\n    this.modalWindow.confirmButtonText = 'Finish';\n    this.modalWindow.headerText = 'Map Enumeration Values';\n    this.modalWindow.nestedComponentInitializedCallback = (mw: ModalWindowComponent) => {\n      const c: LookupTableComponent = mw.nestedComponent as LookupTableComponent;\n      c.initialize(this.cfg, this.mapping);\n    };\n    this.modalWindow.nestedComponentType = LookupTableComponent;\n    this.modalWindow.okButtonHandler = (mw: ModalWindowComponent) => {\n      const c: LookupTableComponent = mw.nestedComponent as LookupTableComponent;\n      c.saveTable();\n      this.cfg.mappingService.notifyMappingUpdated();\n    };\n    this.modalWindow.show();\n  }\n\n  getMultiplicityActionConfigs(): FieldActionDefinition[] {\n    if (this.mapping.transition.mode === TransitionMode.ONE_TO_MANY) {\n      return this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, true, Multiplicity.ONE_TO_MANY);\n    } else if (this.mapping.transition.mode === TransitionMode.MANY_TO_ONE) {\n      return this.cfg.fieldActionService.getActionsAppliesToField(this.mapping, true, Multiplicity.MANY_TO_ONE);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * A mapping field action configuration selection has been made.  Note that action field arguments, if any,\n   * may be specified by either a text field or pull-down menu.\n   * @param event\n   */\n  configSelectionChanged(event: any) {\n    const attributes: any = event.target.selectedOptions.item(0).attributes;\n    const selectedActionName: any = attributes.getNamedItem('value').value;\n    const action: FieldAction = this.action;\n    if (action.name !== selectedActionName) {\n      action.argumentValues = [];  // Invalidate the previously selected field action arguments.\n      const multiplicity = this.mapping.transition.mode === TransitionMode.ONE_TO_MANY\n       ? Multiplicity.ONE_TO_MANY : Multiplicity.MANY_TO_ONE;\n      const fieldActionDefinition = this.cfg.fieldActionService.getActionDefinitionForName(selectedActionName, multiplicity);\n      fieldActionDefinition.populateFieldAction(action);\n\n      // If the field action configuration predefines argument values then populate the fields with\n      // default values.  Needed to support pull-down menus in action argument definitions.\n      if (action.argumentValues.values && action.argumentValues.length > 0\n        && fieldActionDefinition.arguments[0] && fieldActionDefinition.arguments[0].values\n        && fieldActionDefinition.arguments[0].values.length > 0) {\n        for (let i = 0; i \n    \n\n    \n        \n\n  \n    {{ getMappedValueCount() }} values mapped\n    \n  \n\n  \n    \n      \n        {{ getLabel(actionConfig.name) }}\n        \n        \n    \n\n    \n      \n\n        \n        \n\n      \n    \n\n\n        \n          \n            {{ mapping.transition.userDelimiter }}\n            {{ delimiter.prettyName }}\n          \n        \n      \n-->\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ getMappedValueCount() }} values mapped                          {{ getLabel(actionConfig.name) }}                                                                                      {{ mapping.transition.userDelimiter }}            {{ delimiter.prettyName }}                        -->  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'atlasmap-dev-root'},{'name': 'AtlasmapNavbarComponent', 'selector': 'atlasmap-navbar'},{'name': 'ClassNameComponent', 'selector': 'class-name'},{'name': 'CollapsableHeaderComponent', 'selector': 'collapsable-header'},{'name': 'ConstantFieldEditComponent', 'selector': 'constant-field-edit'},{'name': 'DataMapperAppComponent', 'selector': 'data-mapper'},{'name': 'DataMapperAppExampleHostComponent', 'selector': 'data-mapper-example-host'},{'name': 'DataMapperErrorComponent', 'selector': 'data-mapper-error'},{'name': 'DocumentDefinitionComponent', 'selector': 'document-definition'},{'name': 'DocumentFieldDetailComponent', 'selector': 'document-field-detail'},{'name': 'EmptyModalBodyComponent', 'selector': 'empty-modal-body'},{'name': 'ExpressionComponent', 'selector': 'expression'},{'name': 'FieldEditComponent', 'selector': 'field-edit'},{'name': 'LineMachineComponent', 'selector': 'line-machine'},{'name': 'LookupTableComponent', 'selector': 'lookup-table'},{'name': 'MappingDetailComponent', 'selector': 'mapping-detail'},{'name': 'MappingFieldActionArgumentComponent', 'selector': 'mapping-field-action-argument'},{'name': 'MappingFieldActionComponent', 'selector': 'mapping-field-action'},{'name': 'MappingFieldContainerComponent', 'selector': 'mapping-field-container'},{'name': 'MappingFieldDetailComponent', 'selector': 'mapping-field-detail'},{'name': 'MappingListComponent', 'selector': 'mapping-list'},{'name': 'MappingListFieldComponent', 'selector': 'mapping-list-field'},{'name': 'MappingSelectionComponent', 'selector': 'mapping-selection'},{'name': 'MappingSelectionSectionComponent', 'selector': 'mapping-selection-section'},{'name': 'ModalErrorDetailComponent', 'selector': 'modal-error-detail'},{'name': 'ModalErrorWindowComponent', 'selector': 'modal-error-window'},{'name': 'ModalWindowComponent', 'selector': 'modal-window'},{'name': 'NamespaceEditComponent', 'selector': 'namespace-edit'},{'name': 'NamespaceListComponent', 'selector': 'namespace-list'},{'name': 'PropertyFieldEditComponent', 'selector': 'property-field-edit'},{'name': 'TemplateEditComponent', 'selector': 'template-edit'},{'name': 'ToolbarComponent', 'selector': 'toolbar'},{'name': 'TransitionSelectionComponent', 'selector': 'transition-selection'}];\n    var DIRECTIVES = [{'name': 'FocusDirective', 'selector': '[focus]'}];\n    var ACTUAL_COMPONENT = {'name': 'TransitionSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/atlasmap-navbar.component.ts\n            \n            component\n            AtlasmapNavbarComponent\n            \n                41 %\n                (14/34)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/common/data-mapper-util.ts\n            \n            class\n            DataMapperUtil\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/common/focus.directive.ts\n            \n            directive\n            FocusDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/common/to-error-icon-class.pipe.ts\n            \n            pipe\n            ToErrorIconClassPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/constant-field-edit.component.ts\n            \n            component\n            ConstantFieldEditComponent\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/data-mapper-app.component.ts\n            \n            component\n            DataMapperAppComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/data-mapper-error.component.ts\n            \n            component\n            DataMapperErrorComponent\n            \n                28 %\n                (6/21)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/field-edit.component.ts\n            \n            component\n            FieldEditComponent\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts\n            \n            component\n            LineMachineComponent\n            \n                6 %\n                (2/31)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/line-machine.component.ts\n            \n            class\n            LineModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/namespace-edit.component.ts\n            \n            component\n            NamespaceEditComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/property-field-edit.component.ts\n            \n            component\n            PropertyFieldEditComponent\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/app/template-edit.component.ts\n            \n            component\n            TemplateEditComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/data-mapper-example-host.component.ts\n            \n            component\n            DataMapperAppExampleHostComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/document/class-name.component.ts\n            \n            component\n            ClassNameComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/document/document-definition.component.ts\n            \n            component\n            DocumentDefinitionComponent\n            \n                21 %\n                (11/51)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/document/document-field-detail.component.ts\n            \n            component\n            DocumentFieldDetailComponent\n            \n                3 %\n                (1/27)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/collapsable-header.component.ts\n            \n            component\n            CollapsableHeaderComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts\n            \n            component\n            LookupTableComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/lookup-table.component.ts\n            \n            class\n            LookupTableData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-detail.component.ts\n            \n            component\n            MappingDetailComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action-argument.component.ts\n            \n            component\n            MappingFieldActionArgumentComponent\n            \n                35 %\n                (7/20)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-action.component.ts\n            \n            component\n            MappingFieldActionComponent\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-container.component.ts\n            \n            component\n            MappingFieldContainerComponent\n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-field-detail.component.ts\n            \n            component\n            MappingFieldDetailComponent\n            \n                11 %\n                (2/18)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection-section.component.ts\n            \n            component\n            MappingSelectionSectionComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/mapping-selection.component.ts\n            \n            component\n            MappingSelectionComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-detail/transition-selection.component.ts\n            \n            component\n            TransitionSelectionComponent\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list-field.component.ts\n            \n            component\n            MappingListFieldComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-list/mapping-list.component.ts\n            \n            component\n            MappingListComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/mapping-list/namespace-list.component.ts\n            \n            component\n            NamespaceListComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal/modal-error-detail.component.ts\n            \n            component\n            ModalErrorDetailComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts\n            \n            component\n            ModalErrorWindowComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal/modal-error-window.component.ts\n            \n            interface\n            ModalErrorWindowValidator\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts\n            \n            component\n            EmptyModalBodyComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts\n            \n            component\n            ModalWindowComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/modal/modal-window.component.ts\n            \n            interface\n            ModalWindowValidator\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/toolbar/expression.component.ts\n            \n            component\n            ExpressionComponent\n            \n                14 %\n                (7/47)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/components/toolbar/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                37 %\n                (9/24)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            alertModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            bsDropdownModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            httpClientXsrfModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            loggerModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            tooltipModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n            \n            variable\n            typeaheadModuleForRoot\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/config.model.ts\n            \n            class\n            AdmRedrawMappingLinesEvent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/config.model.ts\n            \n            class\n            ConfigModel\n            \n                4 %\n                (2/48)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/config.model.ts\n            \n            class\n            DataMapperInitializationModel\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/config.model.ts\n            \n            class\n            DocumentInitializationModel\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts\n            \n            class\n            DocumentDefinition\n            \n                7 %\n                (4/53)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts\n            \n            class\n            NamespaceModel\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/document-definition.model.ts\n            \n            class\n            PaddingField\n            \n                2 %\n                (1/50)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/error.model.ts\n            \n            class\n            ErrorInfo\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/examples.ts\n            \n            class\n            Examples\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            ExpressionModel\n            \n                20 %\n                (5/24)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            ExpressionNode\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            ExpressionUpdatedEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            FieldNode\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/expression.model.ts\n            \n            class\n            TextNode\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n            \n            class\n            FieldAction\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n            \n            class\n            FieldActionArgument\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n            \n            class\n            FieldActionArgumentValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n            \n            class\n            FieldActionDefinition\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field.model.ts\n            \n            class\n            EnumValue\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/field.model.ts\n            \n            class\n            Field\n            \n                2 %\n                (1/49)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts\n            \n            class\n            LookupTable\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/lookup-table.model.ts\n            \n            class\n            LookupTableEntry\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/mapping-definition.model.ts\n            \n            class\n            MappingDefinition\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n            \n            class\n            MappedField\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n            \n            class\n            MappedFieldParsingData\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/mapping.model.ts\n            \n            class\n            MappingModel\n            \n                15 %\n                (5/32)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n            \n            class\n            TransitionDelimiterModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n            \n            class\n            TransitionModel\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts\n            \n            injectable\n            ApiHttpXsrfTokenExtractor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/api-xsrf.service.ts\n            \n            interceptor\n            ApiXsrfInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/document-management.service.ts\n            \n            injectable\n            DocumentManagementService\n            \n                23 %\n                (7/30)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/error-handler.service.ts\n            \n            injectable\n            ErrorHandlerService\n            \n                70 %\n                (14/20)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/field-action.service.ts\n            \n            injectable\n            FieldActionService\n            \n                36 %\n                (7/19)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/file-management.service.ts\n            \n            injectable\n            FileManagementService\n            \n                55 %\n                (10/18)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/initialization.service.ts\n            \n            injectable\n            InitializationService\n            \n                23 %\n                (5/21)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/services/mapping-management.service.ts\n            \n            injectable\n            MappingManagementService\n            \n                32 %\n                (13/40)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/utils/lookup-table-util.ts\n            \n            class\n            LookupTableUtil\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/utils/mapping-serializer.ts\n            \n            class\n            MappingSerializer\n            \n                14 %\n                (4/27)\n            \n        \n        \n            \n                \n                src/app/lib/atlasmap-data-mapper/utils/mapping-util.ts\n            \n            class\n            MappingUtil\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/environments/environment.dev.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.trace.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @angular/animations : ^7.2.15\n        \n            bootstrap : ^4.1.2\n        \n            chart.js : ^2.5.0\n        \n            classlist.js : ^1.1.20150312\n        \n            core-js : ^2.5.5\n        \n            font-awesome : ^4.7.0\n        \n            jquery : ^3.3.0\n        \n            jquery-match-height : ^0.7.2\n        \n            mkdirp : ^0.5.1\n        \n            moment : ^2.20.1\n        \n            ncp : ^2.0.0\n        \n            ngx-bootstrap : ^5.2.0\n        \n            opn-cli : ^3.1.0\n        \n            patternfly-bootstrap-combobox : ^1.1.6\n        \n            patternfly-ng : ^4.0.0\n        \n            rxjs : ^6.2.2\n        \n            zone.js : ^0.8.26\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CollectionType   (src/.../config.types.ts)\n                        \n                        \n                            DocumentType   (src/.../config.types.ts)\n                        \n                        \n                            ErrorLevel   (src/.../error.model.ts)\n                        \n                        \n                            ErrorScope   (src/.../error.model.ts)\n                        \n                        \n                            ErrorType   (src/.../error.model.ts)\n                        \n                        \n                            FieldMode   (src/.../config.types.ts)\n                        \n                        \n                            InspectionType   (src/.../config.types.ts)\n                        \n                        \n                            Multiplicity   (src/.../field-action.model.ts)\n                        \n                        \n                            TransitionDelimiter   (src/.../transition.model.ts)\n                        \n                        \n                            TransitionMode   (src/.../transition.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/lib/atlasmap-data-mapper/common/config.types.ts\n    \n        \n            \n                \n                    \n                        \n                        CollectionType\n                    \n                \n                        \n                            \n                                 ARRAY\n                            \n                        \n                        \n                            \n                                Value : ARRAY\n                            \n                        \n                        \n                            \n                                 LIST\n                            \n                        \n                        \n                            \n                                Value : LIST\n                            \n                        \n                        \n                            \n                                 MAP\n                            \n                        \n                        \n                            \n                                Value : MAP\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : NONE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        DocumentType\n                    \n                \n                        \n                            \n                                 JAVA\n                            \n                        \n                        \n                            \n                                Value : JAVA\n                            \n                        \n                        \n                            \n                                 JAVA_ARCHIVE\n                            \n                        \n                        \n                            \n                                Value : JAR\n                            \n                        \n                        \n                            \n                                 XML\n                            \n                        \n                        \n                            \n                                Value : XML\n                            \n                        \n                        \n                            \n                                 XSD\n                            \n                        \n                        \n                            \n                                Value : XSD\n                            \n                        \n                        \n                            \n                                 JSON\n                            \n                        \n                        \n                            \n                                Value : JSON\n                            \n                        \n                        \n                            \n                                 CORE\n                            \n                        \n                        \n                            \n                                Value : Core\n                            \n                        \n                        \n                            \n                                 CSV\n                            \n                        \n                        \n                            \n                                Value : CSV\n                            \n                        \n                        \n                            \n                                 CONSTANT\n                            \n                        \n                        \n                            \n                                Value : Constants\n                            \n                        \n                        \n                            \n                                 PROPERTY\n                            \n                        \n                        \n                            \n                                Value : Property\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        FieldMode\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                 EDIT\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        InspectionType\n                    \n                \n                        \n                            \n                                 JAVA_CLASS\n                            \n                        \n                        \n                            \n                                Value : JAVA_CLASS\n                            \n                        \n                        \n                            \n                                 SCHEMA\n                            \n                        \n                        \n                            \n                                Value : SCHEMA\n                            \n                        \n                        \n                            \n                                 INSTANCE\n                            \n                        \n                        \n                            \n                                Value : INSTANCE\n                            \n                        \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : UNKNOWN\n                            \n                        \n            \n        \n\n    src/app/lib/atlasmap-data-mapper/models/error.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorLevel\n                    \n                \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                Value : DEBUG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : INFO\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                Value : WARN\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : ERROR\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ErrorScope\n                    \n                \n                        \n                            \n                                 APPLICATION\n                            \n                        \n                        \n                            \n                                Value : APPLICATION\n                            \n                        \n                        \n                            \n                                 MAPPING\n                            \n                        \n                        \n                            \n                                Value : MAPPING\n                            \n                        \n                        \n                            \n                                 FIELD\n                            \n                        \n                        \n                            \n                                Value : FIELD\n                            \n                        \n                        \n                            \n                                 FORM\n                            \n                        \n                        \n                            \n                                Value : FORM\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ErrorType\n                    \n                \n                        \n                            \n                                 INTERNAL\n                            \n                        \n                        \n                            \n                                Value : INTERNAL\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 VALIDATION\n                            \n                        \n                        \n                            \n                                Value : VALIDATION\n                            \n                        \n                        \n                            \n                                 PREVIEW\n                            \n                        \n                        \n                            \n                                Value : PREVIEW\n                            \n                        \n                        \n                            \n                                 FORM\n                            \n                        \n                        \n                            \n                                Value : FORM\n                            \n                        \n            \n        \n\n    src/app/lib/atlasmap-data-mapper/models/field-action.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Multiplicity\n                    \n                \n                        \n                            \n                                 ONE_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : ONE_TO_ONE\n                            \n                        \n                        \n                            \n                                 ONE_TO_MANY\n                            \n                        \n                        \n                            \n                                Value : ONE_TO_MANY\n                            \n                        \n                        \n                            \n                                 MANY_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : MANY_TO_ONE\n                            \n                        \n                        \n                            \n                                 ZERO_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : ZERO_TO_ONE\n                            \n                        \n            \n        \n\n    src/app/lib/atlasmap-data-mapper/models/transition.model.ts\n    \n        \n            \n                \n                    \n                        \n                        TransitionDelimiter\n                    \n                \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                 AMPERSAND\n                            \n                        \n                        \n                            \n                                 AT_SIGN\n                            \n                        \n                        \n                            \n                                 BACKSLASH\n                            \n                        \n                        \n                            \n                                 COLON\n                            \n                        \n                        \n                            \n                                 COMMA\n                            \n                        \n                        \n                            \n                                 DASH\n                            \n                        \n                        \n                            \n                                 EQUAL\n                            \n                        \n                        \n                            \n                                 HASH\n                            \n                        \n                        \n                            \n                                 MULTI_SPACE\n                            \n                        \n                        \n                            \n                                 PERIOD\n                            \n                        \n                        \n                            \n                                 PIPE\n                            \n                        \n                        \n                            \n                                 SEMICOLON\n                            \n                        \n                        \n                            \n                                 SLASH\n                            \n                        \n                        \n                            \n                                 SPACE\n                            \n                        \n                        \n                            \n                                 UNDERSCORE\n                            \n                        \n                        \n                            \n                                 USER_DEFINED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TransitionMode\n                    \n                \n                        \n                            \n                                 ONE_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : ONE_TO_ONE\n                            \n                        \n                        \n                            \n                                 ONE_TO_MANY\n                            \n                        \n                        \n                            \n                                Value : ONE_TO_MANY\n                            \n                        \n                        \n                            \n                                 ENUM\n                            \n                        \n                        \n                            \n                                Value : ENUM\n                            \n                        \n                        \n                            \n                                 MANY_TO_ONE\n                            \n                        \n                        \n                            \n                                Value : MANY_TO_ONE\n                            \n                        \n                        \n                            \n                                 FOR_EACH\n                            \n                        \n                        \n                            \n                                Value : FOR_EACH\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAtlasMap Data Mapper UI\n\n\n\n\n\n\nGoogle Group\nThe AtlasMap is a data mapping solution with interactive web based user interface, that simplifies configuring integrations between Java, XML, and JSON data sources. You can design your data mapping on the AtlasMap Data Mapper UI canvas, and then run that data mapping via runtime engine. AtlasMap Data Mapper UI is primarily designed to work within the Syndesis UI.\nAtlasMap Documentation\nAll developer related documentation can be found at AtlasMap Documentation\nThe shortest path to run standalone AtlasMap\n\nCheckout AtlasMap repo from GitHub\n$ git clone https://github.com/atlasmap/atlasmap ${ATLASMAP}\nBuild AtlasMap runtime\n$ cd ${ATLASMAP}\n$ ./mvnw clean installor you can skip tests to get the build little bit faster\n$ ./mvnw clean install -DskipTests\nRun AtlasMap standalone\n$ cd ${ATLASMAP}/standalone\n$ ../mvnw -Pitests spring-boot:run\n\nThen AtlasMap UI is available at http://127.0.0.1:8585/ by default.\nLive update for UI development\nWhile standalone AtlasMap is running by following above, you can also run an another AtlasMap UI instance at different port by yarn start. This enables live update for UI code so you can see the outcome of your UI code change without build&restart manually.\n\nInstall Yarn\n\nInstall Data Mapper UI's dependencies\n$ cd ${ATLASMAP}/ui\n$ yarn install\nStart Data Mapper UI\n$ yarn start\n\nThe yarn start command will attempt to automatically open your browser window, but if it doesn't, open it directly with this URL: http://localhost:3000.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n            Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        DataMapperModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExampleAppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataMapperModule\n\n\n\ncluster_DataMapperModule_declarations\n\n\n\ncluster_DataMapperModule_exports\n\n\n\ncluster_DataMapperModule_providers\n\n\n\ncluster_ExampleAppModule\n\n\n\ncluster_ExampleAppModule_declarations\n\n\n\ncluster_ExampleAppModule_bootstrap\n\n\n\n\nClassNameComponent\n\nClassNameComponent\n\n\n\nDataMapperModule\n\nDataMapperModule\n\nDataMapperModule -->\n\nClassNameComponent->DataMapperModule\n\n\n\n\n\nCollapsableHeaderComponent\n\nCollapsableHeaderComponent\n\nDataMapperModule -->\n\nCollapsableHeaderComponent->DataMapperModule\n\n\n\n\n\nConstantFieldEditComponent\n\nConstantFieldEditComponent\n\nDataMapperModule -->\n\nConstantFieldEditComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppComponent\n\nDataMapperAppComponent\n\nDataMapperModule -->\n\nDataMapperAppComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppExampleHostComponent\n\nDataMapperAppExampleHostComponent\n\nDataMapperModule -->\n\nDataMapperAppExampleHostComponent->DataMapperModule\n\n\n\n\n\nDataMapperErrorComponent\n\nDataMapperErrorComponent\n\nDataMapperModule -->\n\nDataMapperErrorComponent->DataMapperModule\n\n\n\n\n\nDocumentDefinitionComponent\n\nDocumentDefinitionComponent\n\nDataMapperModule -->\n\nDocumentDefinitionComponent->DataMapperModule\n\n\n\n\n\nDocumentFieldDetailComponent\n\nDocumentFieldDetailComponent\n\nDataMapperModule -->\n\nDocumentFieldDetailComponent->DataMapperModule\n\n\n\n\n\nEmptyModalBodyComponent\n\nEmptyModalBodyComponent\n\nDataMapperModule -->\n\nEmptyModalBodyComponent->DataMapperModule\n\n\n\n\n\nExpressionComponent\n\nExpressionComponent\n\nDataMapperModule -->\n\nExpressionComponent->DataMapperModule\n\n\n\n\n\nFieldEditComponent\n\nFieldEditComponent\n\nDataMapperModule -->\n\nFieldEditComponent->DataMapperModule\n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nDataMapperModule -->\n\nFocusDirective->DataMapperModule\n\n\n\n\n\nLineMachineComponent\n\nLineMachineComponent\n\nDataMapperModule -->\n\nLineMachineComponent->DataMapperModule\n\n\n\n\n\nLookupTableComponent\n\nLookupTableComponent\n\nDataMapperModule -->\n\nLookupTableComponent->DataMapperModule\n\n\n\n\n\nMappingDetailComponent\n\nMappingDetailComponent\n\nDataMapperModule -->\n\nMappingDetailComponent->DataMapperModule\n\n\n\n\n\nMappingFieldActionArgumentComponent\n\nMappingFieldActionArgumentComponent\n\nDataMapperModule -->\n\nMappingFieldActionArgumentComponent->DataMapperModule\n\n\n\n\n\nMappingFieldActionComponent\n\nMappingFieldActionComponent\n\nDataMapperModule -->\n\nMappingFieldActionComponent->DataMapperModule\n\n\n\n\n\nMappingFieldContainerComponent\n\nMappingFieldContainerComponent\n\nDataMapperModule -->\n\nMappingFieldContainerComponent->DataMapperModule\n\n\n\n\n\nMappingFieldDetailComponent\n\nMappingFieldDetailComponent\n\nDataMapperModule -->\n\nMappingFieldDetailComponent->DataMapperModule\n\n\n\n\n\nMappingListComponent\n\nMappingListComponent\n\nDataMapperModule -->\n\nMappingListComponent->DataMapperModule\n\n\n\n\n\nMappingListFieldComponent\n\nMappingListFieldComponent\n\nDataMapperModule -->\n\nMappingListFieldComponent->DataMapperModule\n\n\n\n\n\nMappingSelectionComponent\n\nMappingSelectionComponent\n\nDataMapperModule -->\n\nMappingSelectionComponent->DataMapperModule\n\n\n\n\n\nMappingSelectionSectionComponent\n\nMappingSelectionSectionComponent\n\nDataMapperModule -->\n\nMappingSelectionSectionComponent->DataMapperModule\n\n\n\n\n\nModalErrorDetailComponent\n\nModalErrorDetailComponent\n\nDataMapperModule -->\n\nModalErrorDetailComponent->DataMapperModule\n\n\n\n\n\nModalErrorWindowComponent\n\nModalErrorWindowComponent\n\nDataMapperModule -->\n\nModalErrorWindowComponent->DataMapperModule\n\n\n\n\n\nModalWindowComponent\n\nModalWindowComponent\n\nDataMapperModule -->\n\nModalWindowComponent->DataMapperModule\n\n\n\n\n\nNamespaceEditComponent\n\nNamespaceEditComponent\n\nDataMapperModule -->\n\nNamespaceEditComponent->DataMapperModule\n\n\n\n\n\nNamespaceListComponent\n\nNamespaceListComponent\n\nDataMapperModule -->\n\nNamespaceListComponent->DataMapperModule\n\n\n\n\n\nPropertyFieldEditComponent\n\nPropertyFieldEditComponent\n\nDataMapperModule -->\n\nPropertyFieldEditComponent->DataMapperModule\n\n\n\n\n\nTemplateEditComponent\n\nTemplateEditComponent\n\nDataMapperModule -->\n\nTemplateEditComponent->DataMapperModule\n\n\n\n\n\nToErrorIconClassPipe\n\nToErrorIconClassPipe\n\nDataMapperModule -->\n\nToErrorIconClassPipe->DataMapperModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nDataMapperModule -->\n\nToolbarComponent->DataMapperModule\n\n\n\n\n\nTransitionSelectionComponent\n\nTransitionSelectionComponent\n\nDataMapperModule -->\n\nTransitionSelectionComponent->DataMapperModule\n\n\n\n\n\nDataMapperAppComponent \n\nDataMapperAppComponent \n\nDataMapperAppComponent  -->\n\nDataMapperModule->DataMapperAppComponent \n\n\n\n\n\nDataMapperAppExampleHostComponent \n\nDataMapperAppExampleHostComponent \n\nDataMapperAppExampleHostComponent  -->\n\nDataMapperModule->DataMapperAppExampleHostComponent \n\n\n\nDataMapperAppExampleHostComponent  -->\n\nDataMapperModule->DataMapperAppExampleHostComponent \n\n\n\n\n\nModalErrorWindowComponent \n\nModalErrorWindowComponent \n\nModalErrorWindowComponent  -->\n\nDataMapperModule->ModalErrorWindowComponent \n\n\n\n\n\nModalWindowComponent \n\nModalWindowComponent \n\nModalWindowComponent  -->\n\nDataMapperModule->ModalWindowComponent \n\n\n\n\n\nExampleAppModule\n\nExampleAppModule\n\nExampleAppModule -->\n\nDataMapperModule->ExampleAppModule\n\n\n\n\n\nDocumentManagementService\n\nDocumentManagementService\n\nDataMapperModule -->\n\nDocumentManagementService->DataMapperModule\n\n\n\n\n\nErrorHandlerService\n\nErrorHandlerService\n\nDataMapperModule -->\n\nErrorHandlerService->DataMapperModule\n\n\n\n\n\nFieldActionService\n\nFieldActionService\n\nDataMapperModule -->\n\nFieldActionService->DataMapperModule\n\n\n\n\n\nFileManagementService\n\nFileManagementService\n\nDataMapperModule -->\n\nFileManagementService->DataMapperModule\n\n\n\n\n\nInitializationService\n\nInitializationService\n\nDataMapperModule -->\n\nInitializationService->DataMapperModule\n\n\n\n\n\nMappingManagementService\n\nMappingManagementService\n\nDataMapperModule -->\n\nMappingManagementService->DataMapperModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nExampleAppModule -->\n\nAppComponent->ExampleAppModule\n\n\n\n\n\nAtlasmapNavbarComponent\n\nAtlasmapNavbarComponent\n\nExampleAppModule -->\n\nAtlasmapNavbarComponent->ExampleAppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nExampleAppModule->AppComponent \n\n\n\n\n\nAtlasmapNavbarComponent \n\nAtlasmapNavbarComponent \n\nAtlasmapNavbarComponent  -->\n\nExampleAppModule->AtlasmapNavbarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    33 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    34 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            alertModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            bsDropdownModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            environment   (src/.../environment.dev.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.trace.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            httpClientXsrfModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            loggerModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            tooltipModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                        \n                            typeaheadModuleForRoot   (src/.../data-mapper.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/lib/atlasmap-data-mapper/data-mapper.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            alertModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : AlertModule.forRoot()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bsDropdownModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : BsDropdownModule.forRoot()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpClientXsrfModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : HttpClientXsrfModule.withOptions(environment.xsrf)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggerModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : LoggerModule.forRoot(environment.ngxLoggerConfig)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tooltipModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : TooltipModule.forRoot()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeaheadModuleForRoot\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : TypeaheadModule.forRoot()\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.dev.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  ngxLoggerConfig: {\n    level: NgxLoggerLevel.DEBUG,\n    disableConsoleLogging: false\n  },\n  xsrf: {\n    headerName: 'ATLASMAP-XSRF-TOKEN',\n    cookieName: 'ATLASMAP-XSRF-COOKIE',\n    defaultTokenValue: 'awesome',\n  },\n  backendUrls: {\n    atlasServiceUrl: 'http://localhost:8585/v2/atlas/',\n    javaInspectionServiceUrl: 'http://localhost:8585/v2/atlas/java/',\n    xmlInspectionServiceUrl: 'http://localhost:8585/v2/atlas/xml/',\n    jsonInspectionServiceUrl: 'http://localhost:8585/v2/atlas/json/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  ngxLoggerConfig: {\n    level: NgxLoggerLevel.OFF,\n    disableConsoleLogging: true\n  },\n  xsrf: {\n    headerName: 'ATLASMAP-XSRF-TOKEN',\n    cookieName: 'ATLASMAP-XSRF-COOKIE',\n    defaultTokenValue: 'awesome',\n  },\n  backendUrls: {\n    atlasServiceUrl: 'http://localhost:8585/v2/atlas/',\n    javaInspectionServiceUrl: 'http://localhost:8585/v2/atlas/java/',\n    xmlInspectionServiceUrl: 'http://localhost:8585/v2/atlas/xml/',\n    jsonInspectionServiceUrl: 'http://localhost:8585/v2/atlas/json/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.trace.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  ngxLoggerConfig: {\n    level: NgxLoggerLevel.TRACE,\n    disableConsoleLogging: false\n  },\n  xsrf: {\n    headerName: 'ATLASMAP-XSRF-TOKEN',\n    cookieName: 'ATLASMAP-XSRF-COOKIE',\n    defaultTokenValue: 'awesome',\n  },\n  backendUrls: {\n    atlasServiceUrl: 'http://localhost:8585/v2/atlas/',\n    javaInspectionServiceUrl: 'http://localhost:8585/v2/atlas/java/',\n    xmlInspectionServiceUrl: 'http://localhost:8585/v2/atlas/xml/',\n    jsonInspectionServiceUrl: 'http://localhost:8585/v2/atlas/json/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  ngxLoggerConfig: {\n    level: NgxLoggerLevel.INFO,\n    disableConsoleLogging: true\n  },\n  xsrf: {\n    headerName: 'ATLASMAP-XSRF-TOKEN',\n    cookieName: 'ATLASMAP-XSRF-COOKIE',\n    defaultTokenValue: 'awesome',\n  },\n  backendUrls: {\n    atlasServiceUrl: '/v2/atlas/',\n    javaInspectionServiceUrl: '/v2/atlas/java/',\n    xmlInspectionServiceUrl: '/v2/atlas/xml/',\n    jsonInspectionServiceUrl: '/v2/atlas/json/',\n  },\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
